/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_deriv_trader"] = self["webpackChunk_deriv_trader"] || []).push([["smart_chart_beta"],{

/***/ "../../node_modules/@deriv/deriv-charts-beta/dist/smartcharts.js":
/*!***********************************************************************!*\
  !*** ../../node_modules/@deriv/deriv-charts-beta/dist/smartcharts.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory(__webpack_require__(/*! react-dom */ \"react-dom\"), __webpack_require__(/*! react-transition-group */ \"../../node_modules/react-transition-group/esm/index.js\"), __webpack_require__(/*! react */ \"react\"), __webpack_require__(/*! moment */ \"../../node_modules/moment/moment.js\"));\n\telse {}\n})(self, (__WEBPACK_EXTERNAL_MODULE_react_dom__, __WEBPACK_EXTERNAL_MODULE_react_transition_group__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_moment__) => {\nreturn /******/ (() => { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ \"./node_modules/classnames/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/classnames/index.js ***!\n  \\******************************************/\n/***/ ((module, exports) => {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (  true && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (true) {\n    // register as 'classnames', consistent with npm package name\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return classNames;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})();\n\n/***/ }),\n\n/***/ \"./node_modules/clsx/dist/clsx.m.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/clsx/dist/clsx.m.js ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_2924__) => {\n\n\"use strict\";\n__nested_webpack_require_2924__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_2924__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction toVal(mix) {\n  var k,\n      y,\n      str = '';\n\n  if (typeof mix === 'string' || typeof mix === 'number') {\n    str += mix;\n  } else if (typeof mix === 'object') {\n    if (Array.isArray(mix)) {\n      for (k = 0; k < mix.length; k++) {\n        if (mix[k]) {\n          if (y = toVal(mix[k])) {\n            str && (str += ' ');\n            str += y;\n          }\n        }\n      }\n    } else {\n      for (k in mix) {\n        if (mix[k]) {\n          str && (str += ' ');\n          str += k;\n        }\n      }\n    }\n  }\n\n  return str;\n}\n\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {\n  var i = 0,\n      tmp,\n      x,\n      str = '';\n\n  while (i < arguments.length) {\n    if (tmp = arguments[i++]) {\n      if (x = toVal(tmp)) {\n        str && (str += ' ');\n        str += x;\n      }\n    }\n  }\n\n  return str;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/event-emitter-es6/index.js\":\n/*!*************************************************!*\\\n  !*** ./node_modules/event-emitter-es6/index.js ***!\n  \\*************************************************/\n/***/ ((module) => {\n\n\"use strict\";\n\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar DEFAULT_VALUES = {\n  emitDelay: 10,\n  strictMode: false\n};\n/**\n * @typedef {object} EventEmitterListenerFunc\n * @property {boolean} once\n * @property {function} fn\n */\n\n/**\n * @class EventEmitter\n *\n * @private\n * @property {Object.<string, EventEmitterListenerFunc[]>} _listeners\n * @property {string[]} events\n */\n\nvar EventEmitter = function () {\n  /**\n   * @constructor\n   * @param {{}}      [opts]\n   * @param {number}  [opts.emitDelay = 10] - Number in ms. Specifies whether emit will be sync or async. By default - 10ms. If 0 - fires sync\n   * @param {boolean} [opts.strictMode = false] - is true, Emitter throws error on emit error with no listeners\n   */\n  function EventEmitter() {\n    var opts = arguments.length <= 0 || arguments[0] === undefined ? DEFAULT_VALUES : arguments[0];\n\n    _classCallCheck(this, EventEmitter);\n\n    var emitDelay = void 0,\n        strictMode = void 0;\n\n    if (opts.hasOwnProperty('emitDelay')) {\n      emitDelay = opts.emitDelay;\n    } else {\n      emitDelay = DEFAULT_VALUES.emitDelay;\n    }\n\n    this._emitDelay = emitDelay;\n\n    if (opts.hasOwnProperty('strictMode')) {\n      strictMode = opts.strictMode;\n    } else {\n      strictMode = DEFAULT_VALUES.strictMode;\n    }\n\n    this._strictMode = strictMode;\n    this._listeners = {};\n    this.events = [];\n  }\n  /**\n   * @protected\n   * @param {string} type\n   * @param {function} listener\n   * @param {boolean} [once = false]\n   */\n\n\n  _createClass(EventEmitter, [{\n    key: '_addListenner',\n    value: function _addListenner(type, listener, once) {\n      if (typeof listener !== 'function') {\n        throw TypeError('listener must be a function');\n      }\n\n      if (this.events.indexOf(type) === -1) {\n        this._listeners[type] = [{\n          once: once,\n          fn: listener\n        }];\n        this.events.push(type);\n      } else {\n        this._listeners[type].push({\n          once: once,\n          fn: listener\n        });\n      }\n    }\n    /**\n     * Subscribes on event type specified function\n     * @param {string} type\n     * @param {function} listener\n     */\n\n  }, {\n    key: 'on',\n    value: function on(type, listener) {\n      this._addListenner(type, listener, false);\n    }\n    /**\n     * Subscribes on event type specified function to fire only once\n     * @param {string} type\n     * @param {function} listener\n     */\n\n  }, {\n    key: 'once',\n    value: function once(type, listener) {\n      this._addListenner(type, listener, true);\n    }\n    /**\n     * Removes event with specified type. If specified listenerFunc - deletes only one listener of specified type\n     * @param {string} eventType\n     * @param {function} [listenerFunc]\n     */\n\n  }, {\n    key: 'off',\n    value: function off(eventType, listenerFunc) {\n      var _this = this;\n\n      var typeIndex = this.events.indexOf(eventType);\n      var hasType = eventType && typeIndex !== -1;\n\n      if (hasType) {\n        if (!listenerFunc) {\n          delete this._listeners[eventType];\n          this.events.splice(typeIndex, 1);\n        } else {\n          (function () {\n            var removedEvents = [];\n            var typeListeners = _this._listeners[eventType];\n            typeListeners.forEach(\n            /**\n             * @param {EventEmitterListenerFunc} fn\n             * @param {number} idx\n             */\n            function (fn, idx) {\n              if (fn.fn === listenerFunc) {\n                removedEvents.unshift(idx);\n              }\n            });\n            removedEvents.forEach(function (idx) {\n              typeListeners.splice(idx, 1);\n            });\n\n            if (!typeListeners.length) {\n              _this.events.splice(typeIndex, 1);\n\n              delete _this._listeners[eventType];\n            }\n          })();\n        }\n      }\n    }\n    /**\n     * Applies arguments to specified event type\n     * @param {string} eventType\n     * @param {*[]} eventArguments\n     * @protected\n     */\n\n  }, {\n    key: '_applyEvents',\n    value: function _applyEvents(eventType, eventArguments) {\n      var typeListeners = this._listeners[eventType];\n\n      if (!typeListeners || !typeListeners.length) {\n        if (this._strictMode) {\n          throw 'No listeners specified for event: ' + eventType;\n        } else {\n          return;\n        }\n      }\n\n      var removableListeners = [];\n      typeListeners.forEach(function (eeListener, idx) {\n        eeListener.fn.apply(null, eventArguments);\n\n        if (eeListener.once) {\n          removableListeners.unshift(idx);\n        }\n      });\n      removableListeners.forEach(function (idx) {\n        typeListeners.splice(idx, 1);\n      });\n    }\n    /**\n     * Emits event with specified type and params.\n     * @param {string} type\n     * @param eventArgs\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(type) {\n      var _this2 = this;\n\n      for (var _len = arguments.length, eventArgs = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        eventArgs[_key - 1] = arguments[_key];\n      }\n\n      if (this._emitDelay) {\n        setTimeout(function () {\n          _this2._applyEvents.call(_this2, type, eventArgs);\n        }, this._emitDelay);\n      } else {\n        this._applyEvents(type, eventArgs);\n      }\n    }\n    /**\n     * Emits event with specified type and params synchronously.\n     * @param {string} type\n     * @param eventArgs\n     */\n\n  }, {\n    key: 'emitSync',\n    value: function emitSync(type) {\n      for (var _len2 = arguments.length, eventArgs = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        eventArgs[_key2 - 1] = arguments[_key2];\n      }\n\n      this._applyEvents(type, eventArgs);\n    }\n    /**\n     * Destroys EventEmitter\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._listeners = {};\n      this.events = [];\n    }\n  }]);\n\n  return EventEmitter;\n}();\n\nmodule.exports = EventEmitter;\n\n/***/ }),\n\n/***/ \"./node_modules/lodash.debounce/index.js\":\n/*!***********************************************!*\\\n  !*** ./node_modules/lodash.debounce/index.js ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_11224__) => {\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */\n\nvar NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof __nested_webpack_require_11224__.g == 'object' && __nested_webpack_require_11224__.g && __nested_webpack_require_11224__.g.Object === Object && __nested_webpack_require_11224__.g;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\nvar now = function () {\n  return root.Date.now();\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\n\n\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  wait = toNumber(wait) || 0;\n\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time; // Start the timer for the trailing edge.\n\n    timerId = setTimeout(timerExpired, wait); // Invoke the leading edge.\n\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime; // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n\n  function timerExpired() {\n    var time = now();\n\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    } // Restart the timer.\n\n\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined; // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n\n    return result;\n  }\n\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = debounce;\n\n/***/ }),\n\n/***/ \"./node_modules/lodash.set/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/lodash.set/index.js ***!\n  \\******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_22302__) => {\n\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used to stand-in for `undefined` hash values. */\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used as references for various `Number` constants. */\n\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */\n\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n/** Used to match property names within property paths. */\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/** Detect free variable `global` from Node.js. */\n\nvar freeGlobal = typeof __nested_webpack_require_22302__.g == 'object' && __nested_webpack_require_22302__.g && __nested_webpack_require_22302__.g.Object === Object && __nested_webpack_require_22302__.g;\n/** Detect free variable `self`. */\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\n\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\n\n\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n\n  return result;\n}\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to detect overreaching core-js shims. */\n\nvar coreJsData = root['__core-js_shared__'];\n/** Used to detect methods masquerading as native. */\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/** Used to resolve the decompiled source of functions. */\n\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/** Built-in value references. */\n\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n/* Built-in method references that are verified to be native. */\n\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\n\n\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  return true;\n}\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    object[key] = value;\n  }\n}\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n\n  path = isKey(path, object) ? [path] : castPath(path);\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\n      if (newValue === undefined) {\n        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};\n      }\n    }\n\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n\n  return object;\n}\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\n\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\n\n\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\n\nvar stringToPath = memoize(function (string) {\n  string = toString(string);\n  var result = [];\n\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n\n  string.replace(rePropName, function (match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\n\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function () {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Assign cache to `_.memoize`.\n\n\nmemoize.Cache = MapCache;\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\n\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\n\nvar isArray = Array.isArray;\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\n\n\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/ObserverComponent.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/ObserverComponent.js ***!\n  \\**************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_47917__) => {\n\n\"use strict\";\n__nested_webpack_require_47917__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_47917__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Observer\": () => (/* binding */ ObserverComponent)\n/* harmony export */ });\n/* harmony import */ var _useObserver__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_47917__(/*! ./useObserver */ \"./node_modules/mobx-react-lite/es/useObserver.js\");\n\n\nfunction ObserverComponent(_a) {\n  var children = _a.children,\n      render = _a.render;\n  var component = children || render;\n\n  if (typeof component !== \"function\") {\n    return null;\n  }\n\n  return (0,_useObserver__WEBPACK_IMPORTED_MODULE_0__.useObserver)(component);\n}\n\nif (true) {\n  ObserverComponent.propTypes = {\n    children: ObserverPropsCheck,\n    render: ObserverPropsCheck\n  };\n}\n\nObserverComponent.displayName = \"Observer\";\n\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n  var extraKey = key === \"children\" ? \"render\" : \"children\";\n  var hasProp = typeof props[key] === \"function\";\n  var hasExtraProp = typeof props[extraKey] === \"function\";\n\n  if (hasProp && hasExtraProp) {\n    return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n  }\n\n  if (hasProp || hasExtraProp) {\n    return null;\n  }\n\n  return new Error(\"Invalid prop `\" + propFullName + \"` of type `\" + typeof props[key] + \"` supplied to\" + \" `\" + componentName + \"`, expected `function`.\");\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/index.js\":\n/*!**************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/index.js ***!\n  \\**************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_49670__) => {\n\n\"use strict\";\n__nested_webpack_require_49670__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_49670__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Observer\": () => (/* reexport safe */ _ObserverComponent__WEBPACK_IMPORTED_MODULE_7__.Observer),\n/* harmony export */   \"clearTimers\": () => (/* reexport safe */ _utils_reactionCleanupTracking__WEBPACK_IMPORTED_MODULE_11__.resetCleanupScheduleForTests),\n/* harmony export */   \"enableStaticRendering\": () => (/* reexport safe */ _staticRendering__WEBPACK_IMPORTED_MODULE_5__.enableStaticRendering),\n/* harmony export */   \"isObserverBatched\": () => (/* reexport safe */ _utils_observerBatching__WEBPACK_IMPORTED_MODULE_2__.isObserverBatched),\n/* harmony export */   \"isUsingStaticRendering\": () => (/* reexport safe */ _staticRendering__WEBPACK_IMPORTED_MODULE_5__.isUsingStaticRendering),\n/* harmony export */   \"observer\": () => (/* reexport safe */ _observer__WEBPACK_IMPORTED_MODULE_6__.observer),\n/* harmony export */   \"observerBatching\": () => (/* reexport safe */ _utils_observerBatching__WEBPACK_IMPORTED_MODULE_2__.observerBatching),\n/* harmony export */   \"useAsObservableSource\": () => (/* reexport safe */ _useAsObservableSource__WEBPACK_IMPORTED_MODULE_10__.useAsObservableSource),\n/* harmony export */   \"useLocalObservable\": () => (/* reexport safe */ _useLocalObservable__WEBPACK_IMPORTED_MODULE_8__.useLocalObservable),\n/* harmony export */   \"useLocalStore\": () => (/* reexport safe */ _useLocalStore__WEBPACK_IMPORTED_MODULE_9__.useLocalStore),\n/* harmony export */   \"useObserver\": () => (/* binding */ useObserver),\n/* harmony export */   \"useStaticRendering\": () => (/* binding */ useStaticRendering)\n/* harmony export */ });\n/* harmony import */ var _utils_assertEnvironment__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_49670__(/*! ./utils/assertEnvironment */ \"./node_modules/mobx-react-lite/es/utils/assertEnvironment.js\");\n/* harmony import */ var _utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_49670__(/*! ./utils/reactBatchedUpdates */ \"./node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\");\n/* harmony import */ var _utils_observerBatching__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_49670__(/*! ./utils/observerBatching */ \"./node_modules/mobx-react-lite/es/utils/observerBatching.js\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_49670__(/*! ./utils/utils */ \"./node_modules/mobx-react-lite/es/utils/utils.js\");\n/* harmony import */ var _useObserver__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_49670__(/*! ./useObserver */ \"./node_modules/mobx-react-lite/es/useObserver.js\");\n/* harmony import */ var _staticRendering__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_49670__(/*! ./staticRendering */ \"./node_modules/mobx-react-lite/es/staticRendering.js\");\n/* harmony import */ var _observer__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_49670__(/*! ./observer */ \"./node_modules/mobx-react-lite/es/observer.js\");\n/* harmony import */ var _ObserverComponent__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_49670__(/*! ./ObserverComponent */ \"./node_modules/mobx-react-lite/es/ObserverComponent.js\");\n/* harmony import */ var _useLocalObservable__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_49670__(/*! ./useLocalObservable */ \"./node_modules/mobx-react-lite/es/useLocalObservable.js\");\n/* harmony import */ var _useLocalStore__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_49670__(/*! ./useLocalStore */ \"./node_modules/mobx-react-lite/es/useLocalStore.js\");\n/* harmony import */ var _useAsObservableSource__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_49670__(/*! ./useAsObservableSource */ \"./node_modules/mobx-react-lite/es/useAsObservableSource.js\");\n/* harmony import */ var _utils_reactionCleanupTracking__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_49670__(/*! ./utils/reactionCleanupTracking */ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js\");\n\n\n\n\n\n\n(0,_utils_observerBatching__WEBPACK_IMPORTED_MODULE_2__.observerBatching)(_utils_reactBatchedUpdates__WEBPACK_IMPORTED_MODULE_1__.unstable_batchedUpdates);\n\n\n\n\n\n\n\nfunction useObserver(fn, baseComponentName) {\n  if (baseComponentName === void 0) {\n    baseComponentName = \"observed\";\n  }\n\n  if (true) {\n    (0,_utils_utils__WEBPACK_IMPORTED_MODULE_3__.useDeprecated)(\"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\");\n  }\n\n  return (0,_useObserver__WEBPACK_IMPORTED_MODULE_4__.useObserver)(fn, baseComponentName);\n}\n\nfunction useStaticRendering(enable) {\n  if (true) {\n    console.warn(\"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\");\n  }\n\n  (0,_staticRendering__WEBPACK_IMPORTED_MODULE_5__.enableStaticRendering)(enable);\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/observer.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/observer.js ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_54756__) => {\n\n\"use strict\";\n__nested_webpack_require_54756__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_54756__.d(__nested_webpack_exports__, {\n/* harmony export */   \"observer\": () => (/* binding */ observer)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_54756__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_54756__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _staticRendering__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_54756__(/*! ./staticRendering */ \"./node_modules/mobx-react-lite/es/staticRendering.js\");\n/* harmony import */ var _useObserver__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_54756__(/*! ./useObserver */ \"./node_modules/mobx-react-lite/es/useObserver.js\");\n\n\n\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for; // Using react-is had some issues (and operates on elements, not on types), see #608 / #609\n\nvar ReactForwardRefSymbol = hasSymbol ? Symbol.for(\"react.forward_ref\") : typeof react__WEBPACK_IMPORTED_MODULE_0__.forwardRef === \"function\" && (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function (props) {\n  return null;\n})[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol ? Symbol.for(\"react.memo\") : typeof react__WEBPACK_IMPORTED_MODULE_0__.memo === \"function\" && (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function (props) {\n  return null;\n})[\"$$typeof\"]; // n.b. base case is not used for actual typings or exported in the typing files\n\nfunction observer(baseComponent, // TODO remove in next major\noptions) {\n  var _a;\n\n  if (  true && warnObserverOptionsDeprecated && options) {\n    warnObserverOptionsDeprecated = false;\n    console.warn(\"[mobx-react-lite] `observer(fn, { forwardRef: true })` is deprecated, use `observer(React.forwardRef(fn))`\");\n  }\n\n  if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n    throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n  } // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n\n\n  if ((0,_staticRendering__WEBPACK_IMPORTED_MODULE_1__.isUsingStaticRendering)()) {\n    return baseComponent;\n  }\n\n  var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n  var render = baseComponent;\n  var baseComponentName = baseComponent.displayName || baseComponent.name; // If already wrapped with forwardRef, unwrap,\n  // so we can patch render and apply memo\n\n  if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n    useForwardRef = true;\n    render = baseComponent[\"render\"];\n\n    if (typeof render !== \"function\") {\n      throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n    }\n  }\n\n  var observerComponent = function (props, ref) {\n    return (0,_useObserver__WEBPACK_IMPORTED_MODULE_2__.useObserver)(function () {\n      return render(props, ref);\n    }, baseComponentName);\n  }; // Don't set `displayName` for anonymous components,\n  // so the `displayName` can be customized by user, see #3192.\n\n\n  if (baseComponentName !== \"\") {\n    ;\n    observerComponent.displayName = baseComponentName;\n  } // Support legacy context: `contextTypes` must be applied before `memo`\n\n\n  if (baseComponent.contextTypes) {\n    ;\n    observerComponent.contextTypes = baseComponent.contextTypes;\n  }\n\n  if (useForwardRef) {\n    // `forwardRef` must be applied prior `memo`\n    // `forwardRef(observer(cmp))` throws:\n    // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n    observerComponent = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(observerComponent);\n  } // memo; we are not interested in deep updates\n  // in props; we assume that if deep objects are changed,\n  // this is in observables, which would have been tracked anyway\n\n\n  observerComponent = (0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(observerComponent);\n  copyStaticProperties(baseComponent, observerComponent);\n\n  if (true) {\n    Object.defineProperty(observerComponent, \"contextTypes\", {\n      set: function () {\n        var _a;\n\n        throw new Error(\"[mobx-react-lite] `\".concat(this.displayName || ((_a = this.type) === null || _a === void 0 ? void 0 : _a.displayName) || \"Component\", \".contextTypes` must be set before applying `observer`.\"));\n      }\n    });\n  }\n\n  return observerComponent;\n} // based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\n\nvar hoistBlackList = {\n  $$typeof: true,\n  render: true,\n  compare: true,\n  type: true,\n  // Don't redefine `displayName`,\n  // it's defined as getter-setter pair on `memo` (see #3192).\n  displayName: true\n};\n\nfunction copyStaticProperties(base, target) {\n  Object.keys(base).forEach(function (key) {\n    if (!hoistBlackList[key]) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n    }\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/staticRendering.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/staticRendering.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_60324__) => {\n\n\"use strict\";\n__nested_webpack_require_60324__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_60324__.d(__nested_webpack_exports__, {\n/* harmony export */   \"enableStaticRendering\": () => (/* binding */ enableStaticRendering),\n/* harmony export */   \"isUsingStaticRendering\": () => (/* binding */ isUsingStaticRendering)\n/* harmony export */ });\nvar globalIsUsingStaticRendering = false;\nfunction enableStaticRendering(enable) {\n  globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n  return globalIsUsingStaticRendering;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/useAsObservableSource.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/useAsObservableSource.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_61239__) => {\n\n\"use strict\";\n__nested_webpack_require_61239__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_61239__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useAsObservableSource\": () => (/* binding */ useAsObservableSource)\n/* harmony export */ });\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_61239__(/*! ./utils/utils */ \"./node_modules/mobx-react-lite/es/utils/utils.js\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_61239__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_61239__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_61239__.n(react__WEBPACK_IMPORTED_MODULE_1__);\nvar __read =  false || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\n\n\n\nfunction useAsObservableSource(current) {\n  if (true) (0,_utils_utils__WEBPACK_IMPORTED_MODULE_0__.useDeprecated)(\"[mobx-react-lite] 'useAsObservableSource' is deprecated, please store the values directly in an observable, for example by using 'useLocalObservable', and sync future updates using 'useEffect' when needed. See the README for examples.\");\n\n  var _a = __read((0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(function () {\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_2__.observable)(current, {}, {\n      deep: false\n    });\n  }), 1),\n      res = _a[0];\n\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.runInAction)(function () {\n    Object.assign(res, current);\n  });\n  return res;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/useLocalObservable.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/useLocalObservable.js ***!\n  \\***************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_63574__) => {\n\n\"use strict\";\n__nested_webpack_require_63574__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_63574__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useLocalObservable\": () => (/* binding */ useLocalObservable)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_63574__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_63574__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_63574__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction useLocalObservable(initializer, annotations) {\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_1__.observable)(initializer(), annotations, {\n      autoBind: true\n    });\n  })[0];\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/useLocalStore.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/useLocalStore.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_64793__) => {\n\n\"use strict\";\n__nested_webpack_require_64793__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_64793__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useLocalStore\": () => (/* binding */ useLocalStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_64793__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_64793__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_64793__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_64793__(/*! ./utils/utils */ \"./node_modules/mobx-react-lite/es/utils/utils.js\");\n/* harmony import */ var _useAsObservableSource__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_64793__(/*! ./useAsObservableSource */ \"./node_modules/mobx-react-lite/es/useAsObservableSource.js\");\n\n\n\n\nfunction useLocalStore(initializer, current) {\n  if (true) (0,_utils_utils__WEBPACK_IMPORTED_MODULE_1__.useDeprecated)(\"[mobx-react-lite] 'useLocalStore' is deprecated, use 'useLocalObservable' instead.\");\n  var source = current && (0,_useAsObservableSource__WEBPACK_IMPORTED_MODULE_2__.useAsObservableSource)(current);\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(function () {\n    return (0,mobx__WEBPACK_IMPORTED_MODULE_3__.observable)(initializer(source), undefined, {\n      autoBind: true\n    });\n  })[0];\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/useObserver.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/useObserver.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_66620__) => {\n\n\"use strict\";\n__nested_webpack_require_66620__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_66620__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useObserver\": () => (/* binding */ useObserver)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_66620__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_66620__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_66620__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_printDebugValue__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_66620__(/*! ./utils/printDebugValue */ \"./node_modules/mobx-react-lite/es/utils/printDebugValue.js\");\n/* harmony import */ var _utils_reactionCleanupTracking__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_66620__(/*! ./utils/reactionCleanupTracking */ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js\");\n/* harmony import */ var _staticRendering__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_66620__(/*! ./staticRendering */ \"./node_modules/mobx-react-lite/es/staticRendering.js\");\nvar __read =  false || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\n\n\n\n\n\n\nfunction observerComponentNameFor(baseComponentName) {\n  return \"observer\".concat(baseComponentName);\n}\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\n\n\nvar ObjectToBeRetainedByReact =\n/** @class */\nfunction () {\n  function ObjectToBeRetainedByReact() {}\n\n  return ObjectToBeRetainedByReact;\n}();\n\nfunction objectToBeRetainedByReactFactory() {\n  return new ObjectToBeRetainedByReact();\n}\n\nfunction useObserver(fn, baseComponentName) {\n  if (baseComponentName === void 0) {\n    baseComponentName = \"observed\";\n  }\n\n  if ((0,_staticRendering__WEBPACK_IMPORTED_MODULE_3__.isUsingStaticRendering)()) {\n    return fn();\n  }\n\n  var _a = __read(react__WEBPACK_IMPORTED_MODULE_0___default().useState(objectToBeRetainedByReactFactory), 1),\n      objectRetainedByReact = _a[0]; // Force update, see #2982\n\n\n  var _b = __read(react__WEBPACK_IMPORTED_MODULE_0___default().useState(), 2),\n      setState = _b[1];\n\n  var forceUpdate = function () {\n    return setState([]);\n  }; // StrictMode/ConcurrentMode/Suspense may mean that our component is\n  // rendered and abandoned multiple times, so we need to track leaked\n  // Reactions.\n\n\n  var reactionTrackingRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n\n  if (!reactionTrackingRef.current) {\n    // First render for this component (or first time since a previous\n    // reaction from an abandoned render was disposed).\n    var newReaction = new mobx__WEBPACK_IMPORTED_MODULE_4__.Reaction(observerComponentNameFor(baseComponentName), function () {\n      // Observable has changed, meaning we want to re-render\n      // BUT if we're a component that hasn't yet got to the useEffect()\n      // stage, we might be a component that _started_ to render, but\n      // got dropped, and we don't want to make state changes then.\n      // (It triggers warnings in StrictMode, for a start.)\n      if (trackingData_1.mounted) {\n        // We have reached useEffect(), so we're mounted, and can trigger an update\n        forceUpdate();\n      } else {\n        // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n        // when (and if) useEffect() arrives.\n        trackingData_1.changedBeforeMount = true;\n      }\n    });\n    var trackingData_1 = (0,_utils_reactionCleanupTracking__WEBPACK_IMPORTED_MODULE_2__.addReactionToTrack)(reactionTrackingRef, newReaction, objectRetainedByReact);\n  }\n\n  var reaction = reactionTrackingRef.current.reaction;\n  react__WEBPACK_IMPORTED_MODULE_0___default().useDebugValue(reaction, _utils_printDebugValue__WEBPACK_IMPORTED_MODULE_1__.printDebugValue);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function () {\n    // Called on first mount only\n    (0,_utils_reactionCleanupTracking__WEBPACK_IMPORTED_MODULE_2__.recordReactionAsCommitted)(reactionTrackingRef);\n\n    if (reactionTrackingRef.current) {\n      // Great. We've already got our reaction from our render;\n      // all we need to do is to record that it's now mounted,\n      // to allow future observable changes to trigger re-renders\n      reactionTrackingRef.current.mounted = true; // Got a change before first mount, force an update\n\n      if (reactionTrackingRef.current.changedBeforeMount) {\n        reactionTrackingRef.current.changedBeforeMount = false;\n        forceUpdate();\n      }\n    } else {\n      // The reaction we set up in our render has been disposed.\n      // This can be due to bad timings of renderings, e.g. our\n      // component was paused for a _very_ long time, and our\n      // reaction got cleaned up\n      // Re-create the reaction\n      reactionTrackingRef.current = {\n        reaction: new mobx__WEBPACK_IMPORTED_MODULE_4__.Reaction(observerComponentNameFor(baseComponentName), function () {\n          // We've definitely already been mounted at this point\n          forceUpdate();\n        }),\n        mounted: true,\n        changedBeforeMount: false,\n        cleanAt: Infinity\n      };\n      forceUpdate();\n    }\n\n    return function () {\n      reactionTrackingRef.current.reaction.dispose();\n      reactionTrackingRef.current = null;\n    };\n  }, []); // render the original component, but have the\n  // reaction track the observables, so that rendering\n  // can be invalidated (see above) once a dependency changes\n\n  var rendering;\n  var exception;\n  reaction.track(function () {\n    try {\n      rendering = fn();\n    } catch (e) {\n      exception = e;\n    }\n  });\n\n  if (exception) {\n    throw exception; // re-throw any exceptions caught during rendering\n  }\n\n  return rendering;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js\":\n/*!******************************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js ***!\n  \\******************************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_73261__) => {\n\n\"use strict\";\n__nested_webpack_require_73261__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_73261__.d(__nested_webpack_exports__, {\n/* harmony export */   \"FinalizationRegistry\": () => (/* binding */ FinalizationRegistryLocal)\n/* harmony export */ });\nvar FinalizationRegistryLocal = typeof FinalizationRegistry === \"undefined\" ? undefined : FinalizationRegistry;\n\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/assertEnvironment.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/assertEnvironment.js ***!\n  \\********************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_74002__) => {\n\n\"use strict\";\n__nested_webpack_require_74002__.r(__nested_webpack_exports__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_74002__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_74002__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_74002__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nif (!react__WEBPACK_IMPORTED_MODULE_0__.useState) {\n  throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\n\nif (!mobx__WEBPACK_IMPORTED_MODULE_1__.makeObservable) {\n  throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\");\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js\":\n/*!*********************************************************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js ***!\n  \\*********************************************************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_75251__) => {\n\n\"use strict\";\n__nested_webpack_require_75251__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_75251__.d(__nested_webpack_exports__, {\n/* harmony export */   \"createReactionCleanupTrackingUsingFinalizationRegister\": () => (/* binding */ createReactionCleanupTrackingUsingFinalizationRegister)\n/* harmony export */ });\n/* harmony import */ var _reactionCleanupTrackingCommon__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_75251__(/*! ./reactionCleanupTrackingCommon */ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js\");\n\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\n\nfunction createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistry) {\n  var cleanupTokenToReactionTrackingMap = new Map();\n  var globalCleanupTokensCounter = 1;\n  var registry = new FinalizationRegistry(function cleanupFunction(token) {\n    var trackedReaction = cleanupTokenToReactionTrackingMap.get(token);\n\n    if (trackedReaction) {\n      trackedReaction.reaction.dispose();\n      cleanupTokenToReactionTrackingMap.delete(token);\n    }\n  });\n  return {\n    addReactionToTrack: function (reactionTrackingRef, reaction, objectRetainedByReact) {\n      var token = globalCleanupTokensCounter++;\n      registry.register(objectRetainedByReact, token, reactionTrackingRef);\n      reactionTrackingRef.current = (0,_reactionCleanupTrackingCommon__WEBPACK_IMPORTED_MODULE_0__.createTrackingData)(reaction);\n      reactionTrackingRef.current.finalizationRegistryCleanupToken = token;\n      cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: function (reactionRef) {\n      registry.unregister(reactionRef);\n\n      if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n        cleanupTokenToReactionTrackingMap.delete(reactionRef.current.finalizationRegistryCleanupToken);\n      }\n    },\n    forceCleanupTimerToRunNowForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    },\n    resetCleanupScheduleForTests: function () {// When FinalizationRegistry in use, this this is no-op\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js\":\n/*!******************************************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js ***!\n  \\******************************************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_77883__) => {\n\n\"use strict\";\n__nested_webpack_require_77883__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_77883__.d(__nested_webpack_exports__, {\n/* harmony export */   \"createTimerBasedReactionCleanupTracking\": () => (/* binding */ createTimerBasedReactionCleanupTracking)\n/* harmony export */ });\n/* harmony import */ var _reactionCleanupTrackingCommon__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_77883__(/*! ./reactionCleanupTrackingCommon */ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js\");\nvar __values =  false || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\n\n/**\n * timers, gc-style, uncommitted reaction cleanup\n */\n\nfunction createTimerBasedReactionCleanupTracking() {\n  /**\n   * Reactions created by components that have yet to be fully mounted.\n   */\n  var uncommittedReactionRefs = new Set();\n  /**\n   * Latest 'uncommitted reactions' cleanup timer handle.\n   */\n\n  var reactionCleanupHandle;\n  /* istanbul ignore next */\n\n  /**\n   * Only to be used by test functions; do not export outside of mobx-react-lite\n   */\n\n  function forceCleanupTimerToRunNowForTests() {\n    // This allows us to control the execution of the cleanup timer\n    // to force it to run at awkward times in unit tests.\n    if (reactionCleanupHandle) {\n      clearTimeout(reactionCleanupHandle);\n      cleanUncommittedReactions();\n    }\n  }\n  /* istanbul ignore next */\n\n\n  function resetCleanupScheduleForTests() {\n    var e_1, _a;\n\n    if (uncommittedReactionRefs.size > 0) {\n      try {\n        for (var uncommittedReactionRefs_1 = __values(uncommittedReactionRefs), uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next(); !uncommittedReactionRefs_1_1.done; uncommittedReactionRefs_1_1 = uncommittedReactionRefs_1.next()) {\n          var ref = uncommittedReactionRefs_1_1.value;\n          var tracking = ref.current;\n\n          if (tracking) {\n            tracking.reaction.dispose();\n            ref.current = null;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (uncommittedReactionRefs_1_1 && !uncommittedReactionRefs_1_1.done && (_a = uncommittedReactionRefs_1.return)) _a.call(uncommittedReactionRefs_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      uncommittedReactionRefs.clear();\n    }\n\n    if (reactionCleanupHandle) {\n      clearTimeout(reactionCleanupHandle);\n      reactionCleanupHandle = undefined;\n    }\n  }\n\n  function ensureCleanupTimerRunning() {\n    if (reactionCleanupHandle === undefined) {\n      reactionCleanupHandle = setTimeout(cleanUncommittedReactions, _reactionCleanupTrackingCommon__WEBPACK_IMPORTED_MODULE_0__.CLEANUP_TIMER_LOOP_MILLIS);\n    }\n  }\n\n  function scheduleCleanupOfReactionIfLeaked(ref) {\n    uncommittedReactionRefs.add(ref);\n    ensureCleanupTimerRunning();\n  }\n\n  function recordReactionAsCommitted(reactionRef) {\n    uncommittedReactionRefs.delete(reactionRef);\n  }\n  /**\n   * Run by the cleanup timer to dispose any outstanding reactions\n   */\n\n\n  function cleanUncommittedReactions() {\n    reactionCleanupHandle = undefined; // Loop through all the candidate leaked reactions; those older\n    // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.\n\n    var now = Date.now();\n    uncommittedReactionRefs.forEach(function (ref) {\n      var tracking = ref.current;\n\n      if (tracking) {\n        if (now >= tracking.cleanAt) {\n          // It's time to tidy up this leaked reaction.\n          tracking.reaction.dispose();\n          ref.current = null;\n          uncommittedReactionRefs.delete(ref);\n        }\n      }\n    });\n\n    if (uncommittedReactionRefs.size > 0) {\n      // We've just finished a round of cleanups but there are still\n      // some leak candidates outstanding.\n      ensureCleanupTimerRunning();\n    }\n  }\n\n  return {\n    addReactionToTrack: function (reactionTrackingRef, reaction,\n    /**\n     * On timer based implementation we don't really need this object,\n     * but we keep the same api\n     */\n    objectRetainedByReact) {\n      reactionTrackingRef.current = (0,_reactionCleanupTrackingCommon__WEBPACK_IMPORTED_MODULE_0__.createTrackingData)(reaction);\n      scheduleCleanupOfReactionIfLeaked(reactionTrackingRef);\n      return reactionTrackingRef.current;\n    },\n    recordReactionAsCommitted: recordReactionAsCommitted,\n    forceCleanupTimerToRunNowForTests: forceCleanupTimerToRunNowForTests,\n    resetCleanupScheduleForTests: resetCleanupScheduleForTests\n  };\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/observerBatching.js\":\n/*!*******************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/observerBatching.js ***!\n  \\*******************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_83140__) => {\n\n\"use strict\";\n__nested_webpack_require_83140__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_83140__.d(__nested_webpack_exports__, {\n/* harmony export */   \"defaultNoopBatch\": () => (/* binding */ defaultNoopBatch),\n/* harmony export */   \"isObserverBatched\": () => (/* binding */ isObserverBatched),\n/* harmony export */   \"observerBatching\": () => (/* binding */ observerBatching)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_83140__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n\nfunction defaultNoopBatch(callback) {\n  callback();\n}\nfunction observerBatching(reactionScheduler) {\n  if (!reactionScheduler) {\n    reactionScheduler = defaultNoopBatch;\n\n    if (true) {\n      console.warn(\"[MobX] Failed to get unstable_batched updates from react-dom / react-native\");\n    }\n  }\n\n  (0,mobx__WEBPACK_IMPORTED_MODULE_0__.configure)({\n    reactionScheduler: reactionScheduler\n  });\n}\nvar isObserverBatched = function () {\n  if (true) {\n    console.warn(\"[MobX] Deprecated\");\n  }\n\n  return true;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/printDebugValue.js\":\n/*!******************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/printDebugValue.js ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_84563__) => {\n\n\"use strict\";\n__nested_webpack_require_84563__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_84563__.d(__nested_webpack_exports__, {\n/* harmony export */   \"printDebugValue\": () => (/* binding */ printDebugValue)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_84563__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n\nfunction printDebugValue(v) {\n  return (0,mobx__WEBPACK_IMPORTED_MODULE_0__.getDependencyTree)(v);\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js ***!\n  \\**********************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_85420__) => {\n\n\"use strict\";\n__nested_webpack_require_85420__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_85420__.d(__nested_webpack_exports__, {\n/* harmony export */   \"unstable_batchedUpdates\": () => (/* reexport safe */ react_dom__WEBPACK_IMPORTED_MODULE_0__.unstable_batchedUpdates)\n/* harmony export */ });\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_85420__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_85420__.n(react_dom__WEBPACK_IMPORTED_MODULE_0__);\n\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/reactionCleanupTracking.js ***!\n  \\**************************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_86386__) => {\n\n\"use strict\";\n__nested_webpack_require_86386__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_86386__.d(__nested_webpack_exports__, {\n/* harmony export */   \"addReactionToTrack\": () => (/* binding */ addReactionToTrack),\n/* harmony export */   \"forceCleanupTimerToRunNowForTests\": () => (/* binding */ forceCleanupTimerToRunNowForTests),\n/* harmony export */   \"recordReactionAsCommitted\": () => (/* binding */ recordReactionAsCommitted),\n/* harmony export */   \"resetCleanupScheduleForTests\": () => (/* binding */ resetCleanupScheduleForTests)\n/* harmony export */ });\n/* harmony import */ var _FinalizationRegistryWrapper__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_86386__(/*! ./FinalizationRegistryWrapper */ \"./node_modules/mobx-react-lite/es/utils/FinalizationRegistryWrapper.js\");\n/* harmony import */ var _createReactionCleanupTrackingUsingFinalizationRegister__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_86386__(/*! ./createReactionCleanupTrackingUsingFinalizationRegister */ \"./node_modules/mobx-react-lite/es/utils/createReactionCleanupTrackingUsingFinalizationRegister.js\");\n/* harmony import */ var _createTimerBasedReactionCleanupTracking__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_86386__(/*! ./createTimerBasedReactionCleanupTracking */ \"./node_modules/mobx-react-lite/es/utils/createTimerBasedReactionCleanupTracking.js\");\n\n\n\n\nvar _a = _FinalizationRegistryWrapper__WEBPACK_IMPORTED_MODULE_0__.FinalizationRegistry ? (0,_createReactionCleanupTrackingUsingFinalizationRegister__WEBPACK_IMPORTED_MODULE_1__.createReactionCleanupTrackingUsingFinalizationRegister)(_FinalizationRegistryWrapper__WEBPACK_IMPORTED_MODULE_0__.FinalizationRegistry) : (0,_createTimerBasedReactionCleanupTracking__WEBPACK_IMPORTED_MODULE_2__.createTimerBasedReactionCleanupTracking)(),\n    addReactionToTrack = _a.addReactionToTrack,\n    recordReactionAsCommitted = _a.recordReactionAsCommitted,\n    resetCleanupScheduleForTests = _a.resetCleanupScheduleForTests,\n    forceCleanupTimerToRunNowForTests = _a.forceCleanupTimerToRunNowForTests;\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js\":\n/*!********************************************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/reactionCleanupTrackingCommon.js ***!\n  \\********************************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_88841__) => {\n\n\"use strict\";\n__nested_webpack_require_88841__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_88841__.d(__nested_webpack_exports__, {\n/* harmony export */   \"CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS\": () => (/* binding */ CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS),\n/* harmony export */   \"CLEANUP_TIMER_LOOP_MILLIS\": () => (/* binding */ CLEANUP_TIMER_LOOP_MILLIS),\n/* harmony export */   \"createTrackingData\": () => (/* binding */ createTrackingData)\n/* harmony export */ });\nfunction createTrackingData(reaction) {\n  var trackingData = {\n    reaction: reaction,\n    mounted: false,\n    changedBeforeMount: false,\n    cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS\n  };\n  return trackingData;\n}\n/**\n * The minimum time before we'll clean up a Reaction created in a render\n * for a component that hasn't managed to run its effects. This needs to\n * be big enough to ensure that a component won't turn up and have its\n * effects run without being re-rendered.\n */\n\nvar CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10000;\n/**\n * The frequency with which we'll check for leaked reactions.\n */\n\nvar CLEANUP_TIMER_LOOP_MILLIS = 10000;\n\n/***/ }),\n\n/***/ \"./node_modules/mobx-react-lite/es/utils/utils.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/mobx-react-lite/es/utils/utils.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_90299__) => {\n\n\"use strict\";\n__nested_webpack_require_90299__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_90299__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useDeprecated\": () => (/* binding */ useDeprecated)\n/* harmony export */ });\nvar deprecatedMessages = [];\nfunction useDeprecated(msg) {\n  if (!deprecatedMessages.includes(msg)) {\n    deprecatedMessages.push(msg);\n    console.warn(msg);\n  }\n}\n\n/***/ }),\n\n/***/ \"./node_modules/mobx/dist/mobx.esm.js\":\n/*!********************************************!*\\\n  !*** ./node_modules/mobx/dist/mobx.esm.js ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_90977__) => {\n\n\"use strict\";\n__nested_webpack_require_90977__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_90977__.d(__nested_webpack_exports__, {\n/* harmony export */   \"$mobx\": () => (/* binding */ $mobx),\n/* harmony export */   \"FlowCancellationError\": () => (/* binding */ FlowCancellationError),\n/* harmony export */   \"ObservableMap\": () => (/* binding */ ObservableMap),\n/* harmony export */   \"ObservableSet\": () => (/* binding */ ObservableSet),\n/* harmony export */   \"Reaction\": () => (/* binding */ Reaction),\n/* harmony export */   \"_allowStateChanges\": () => (/* binding */ allowStateChanges),\n/* harmony export */   \"_allowStateChangesInsideComputed\": () => (/* binding */ runInAction),\n/* harmony export */   \"_allowStateReadsEnd\": () => (/* binding */ allowStateReadsEnd),\n/* harmony export */   \"_allowStateReadsStart\": () => (/* binding */ allowStateReadsStart),\n/* harmony export */   \"_autoAction\": () => (/* binding */ autoAction),\n/* harmony export */   \"_endAction\": () => (/* binding */ _endAction),\n/* harmony export */   \"_getAdministration\": () => (/* binding */ getAdministration),\n/* harmony export */   \"_getGlobalState\": () => (/* binding */ getGlobalState),\n/* harmony export */   \"_interceptReads\": () => (/* binding */ interceptReads),\n/* harmony export */   \"_isComputingDerivation\": () => (/* binding */ isComputingDerivation),\n/* harmony export */   \"_resetGlobalState\": () => (/* binding */ resetGlobalState),\n/* harmony export */   \"_startAction\": () => (/* binding */ _startAction),\n/* harmony export */   \"action\": () => (/* binding */ action),\n/* harmony export */   \"autorun\": () => (/* binding */ autorun),\n/* harmony export */   \"comparer\": () => (/* binding */ comparer),\n/* harmony export */   \"computed\": () => (/* binding */ computed),\n/* harmony export */   \"configure\": () => (/* binding */ configure),\n/* harmony export */   \"createAtom\": () => (/* binding */ createAtom),\n/* harmony export */   \"defineProperty\": () => (/* binding */ apiDefineProperty),\n/* harmony export */   \"entries\": () => (/* binding */ entries),\n/* harmony export */   \"extendObservable\": () => (/* binding */ extendObservable),\n/* harmony export */   \"flow\": () => (/* binding */ flow),\n/* harmony export */   \"flowResult\": () => (/* binding */ flowResult),\n/* harmony export */   \"get\": () => (/* binding */ get),\n/* harmony export */   \"getAtom\": () => (/* binding */ getAtom),\n/* harmony export */   \"getDebugName\": () => (/* binding */ getDebugName),\n/* harmony export */   \"getDependencyTree\": () => (/* binding */ getDependencyTree),\n/* harmony export */   \"getObserverTree\": () => (/* binding */ getObserverTree),\n/* harmony export */   \"has\": () => (/* binding */ has),\n/* harmony export */   \"intercept\": () => (/* binding */ intercept),\n/* harmony export */   \"isAction\": () => (/* binding */ isAction),\n/* harmony export */   \"isBoxedObservable\": () => (/* binding */ isObservableValue),\n/* harmony export */   \"isComputed\": () => (/* binding */ isComputed),\n/* harmony export */   \"isComputedProp\": () => (/* binding */ isComputedProp),\n/* harmony export */   \"isFlow\": () => (/* binding */ isFlow),\n/* harmony export */   \"isFlowCancellationError\": () => (/* binding */ isFlowCancellationError),\n/* harmony export */   \"isObservable\": () => (/* binding */ isObservable),\n/* harmony export */   \"isObservableArray\": () => (/* binding */ isObservableArray),\n/* harmony export */   \"isObservableMap\": () => (/* binding */ isObservableMap),\n/* harmony export */   \"isObservableObject\": () => (/* binding */ isObservableObject),\n/* harmony export */   \"isObservableProp\": () => (/* binding */ isObservableProp),\n/* harmony export */   \"isObservableSet\": () => (/* binding */ isObservableSet),\n/* harmony export */   \"keys\": () => (/* binding */ keys),\n/* harmony export */   \"makeAutoObservable\": () => (/* binding */ makeAutoObservable),\n/* harmony export */   \"makeObservable\": () => (/* binding */ makeObservable),\n/* harmony export */   \"observable\": () => (/* binding */ observable),\n/* harmony export */   \"observe\": () => (/* binding */ observe),\n/* harmony export */   \"onBecomeObserved\": () => (/* binding */ onBecomeObserved),\n/* harmony export */   \"onBecomeUnobserved\": () => (/* binding */ onBecomeUnobserved),\n/* harmony export */   \"onReactionError\": () => (/* binding */ onReactionError),\n/* harmony export */   \"override\": () => (/* binding */ override),\n/* harmony export */   \"ownKeys\": () => (/* binding */ apiOwnKeys),\n/* harmony export */   \"reaction\": () => (/* binding */ reaction),\n/* harmony export */   \"remove\": () => (/* binding */ remove),\n/* harmony export */   \"runInAction\": () => (/* binding */ runInAction),\n/* harmony export */   \"set\": () => (/* binding */ set),\n/* harmony export */   \"spy\": () => (/* binding */ spy),\n/* harmony export */   \"toJS\": () => (/* binding */ toJS),\n/* harmony export */   \"trace\": () => (/* binding */ trace),\n/* harmony export */   \"transaction\": () => (/* binding */ transaction),\n/* harmony export */   \"untracked\": () => (/* binding */ untracked),\n/* harmony export */   \"values\": () => (/* binding */ values),\n/* harmony export */   \"when\": () => (/* binding */ when)\n/* harmony export */ });\nvar niceErrors = {\n  0: \"Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'\",\n  1: function _(annotationType, key) {\n    return \"Cannot apply '\" + annotationType + \"' to '\" + key.toString() + \"': Field not found.\";\n  },\n\n  /*\n  2(prop) {\n      return `invalid decorator for '${prop.toString()}'`\n  },\n  3(prop) {\n      return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n  },\n  4(prop) {\n      return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n  },\n  */\n  5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n  6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n  7: \"'entries()' can only be used on observable objects, arrays and maps\",\n  8: \"'set()' can only be used on observable objects, arrays and maps\",\n  9: \"'remove()' can only be used on observable objects, arrays and maps\",\n  10: \"'has()' can only be used on observable objects, arrays and maps\",\n  11: \"'get()' can only be used on observable objects, arrays and maps\",\n  12: \"Invalid annotation\",\n  13: \"Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)\",\n  14: \"Intercept handlers should return nothing or a change object\",\n  15: \"Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)\",\n  16: \"Modification exception: the internal structure of an observable array was changed.\",\n  17: function _(index, length) {\n    return \"[mobx.array] Index out of bounds, \" + index + \" is larger than \" + length;\n  },\n  18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n  19: function _(other) {\n    return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name;\n  },\n  20: function _(other) {\n    return \"Cannot initialize map from \" + other;\n  },\n  21: function _(dataStructure) {\n    return \"Cannot convert to map from '\" + dataStructure + \"'\";\n  },\n  22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n  23: \"It is not possible to get index atoms from arrays\",\n  24: function _(thing) {\n    return \"Cannot obtain administration from \" + thing;\n  },\n  25: function _(property, name) {\n    return \"the entry '\" + property + \"' does not exist in the observable map '\" + name + \"'\";\n  },\n  26: \"please specify a property\",\n  27: function _(property, name) {\n    return \"no observable property '\" + property.toString() + \"' found on the observable object '\" + name + \"'\";\n  },\n  28: function _(thing) {\n    return \"Cannot obtain atom from \" + thing;\n  },\n  29: \"Expecting some object\",\n  30: \"invalid action stack. did you forget to finish an action?\",\n  31: \"missing option for computed: get\",\n  32: function _(name, derivation) {\n    return \"Cycle detected in computation \" + name + \": \" + derivation;\n  },\n  33: function _(name) {\n    return \"The setter of computed value '\" + name + \"' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?\";\n  },\n  34: function _(name) {\n    return \"[ComputedValue '\" + name + \"'] It is not possible to assign a new value to a computed value.\";\n  },\n  35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n  36: \"isolateGlobalState should be called before MobX is running any reactions\",\n  37: function _(method) {\n    return \"[mobx] `observableArray.\" + method + \"()` mutates the array in-place, which is not allowed inside a derivation. Use `array.slice().\" + method + \"()` instead\";\n  },\n  38: \"'ownKeys()' can only be used on observable objects\",\n  39: \"'defineProperty()' can only be used on observable objects\"\n};\nvar errors =   true ? niceErrors : 0;\n\nfunction die(error) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (true) {\n    var e = typeof error === \"string\" ? error : errors[error];\n    if (typeof e === \"function\") e = e.apply(null, args);\n    throw new Error(\"[MobX] \" + e);\n  }\n\n  throw new Error(typeof error === \"number\" ? \"[MobX] minified error nr: \" + error + (args.length ? \" \" + args.map(String).join(\",\") : \"\") + \". Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts\" : \"[MobX] \" + error);\n}\n\nvar mockGlobal = {};\n\nfunction getGlobal() {\n  if (typeof globalThis !== \"undefined\") {\n    return globalThis;\n  }\n\n  if (typeof window !== \"undefined\") {\n    return window;\n  }\n\n  if (typeof __nested_webpack_require_90977__.g !== \"undefined\") {\n    return __nested_webpack_require_90977__.g;\n  }\n\n  if (typeof self !== \"undefined\") {\n    return self;\n  }\n\n  return mockGlobal;\n}\n\nvar assign = Object.assign;\nvar getDescriptor = Object.getOwnPropertyDescriptor;\nvar defineProperty = Object.defineProperty;\nvar objectPrototype = Object.prototype;\nvar EMPTY_ARRAY = [];\nObject.freeze(EMPTY_ARRAY);\nvar EMPTY_OBJECT = {};\nObject.freeze(EMPTY_OBJECT);\nvar hasProxy = typeof Proxy !== \"undefined\";\nvar plainObjectString = /*#__PURE__*/Object.toString();\n\nfunction assertProxies() {\n  if (!hasProxy) {\n    die(  true ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\" : 0);\n  }\n}\n\nfunction warnAboutProxyRequirement(msg) {\n  if (  true && globalState.verifyProxies) {\n    die(\"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" + msg);\n  }\n}\n\nfunction getNextId() {\n  return ++globalState.mobxGuid;\n}\n/**\n * Makes sure that the provided function is invoked at most once.\n */\n\n\nfunction once(func) {\n  var invoked = false;\n  return function () {\n    if (invoked) {\n      return;\n    }\n\n    invoked = true;\n    return func.apply(this, arguments);\n  };\n}\n\nvar noop = function noop() {};\n\nfunction isFunction(fn) {\n  return typeof fn === \"function\";\n}\n\nfunction isStringish(value) {\n  var t = typeof value;\n\n  switch (t) {\n    case \"string\":\n    case \"symbol\":\n    case \"number\":\n      return true;\n  }\n\n  return false;\n}\n\nfunction isObject(value) {\n  return value !== null && typeof value === \"object\";\n}\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  var proto = Object.getPrototypeOf(value);\n\n  if (proto == null) {\n    return true;\n  }\n\n  var protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  return typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString;\n} // https://stackoverflow.com/a/37865170\n\n\nfunction isGenerator(obj) {\n  var constructor = obj == null ? void 0 : obj.constructor;\n\n  if (!constructor) {\n    return false;\n  }\n\n  if (\"GeneratorFunction\" === constructor.name || \"GeneratorFunction\" === constructor.displayName) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction addHiddenProp(object, propName, value) {\n  defineProperty(object, propName, {\n    enumerable: false,\n    writable: true,\n    configurable: true,\n    value: value\n  });\n}\n\nfunction addHiddenFinalProp(object, propName, value) {\n  defineProperty(object, propName, {\n    enumerable: false,\n    writable: false,\n    configurable: true,\n    value: value\n  });\n}\n\nfunction createInstanceofPredicate(name, theClass) {\n  var propName = \"isMobX\" + name;\n  theClass.prototype[propName] = true;\n  return function (x) {\n    return isObject(x) && x[propName] === true;\n  };\n}\n\nfunction isES6Map(thing) {\n  return thing instanceof Map;\n}\n\nfunction isES6Set(thing) {\n  return thing instanceof Set;\n}\n\nvar hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\";\n/**\n * Returns the following: own enumerable keys and symbols.\n */\n\nfunction getPlainObjectKeys(object) {\n  var keys = Object.keys(object); // Not supported in IE, so there are not going to be symbol props anyway...\n\n  if (!hasGetOwnPropertySymbols) {\n    return keys;\n  }\n\n  var symbols = Object.getOwnPropertySymbols(object);\n\n  if (!symbols.length) {\n    return keys;\n  }\n\n  return [].concat(keys, symbols.filter(function (s) {\n    return objectPrototype.propertyIsEnumerable.call(object, s);\n  }));\n} // From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\n\n\nvar ownKeys = typeof Reflect !== \"undefined\" && Reflect.ownKeys ? Reflect.ownKeys : hasGetOwnPropertySymbols ? function (obj) {\n  return Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj));\n} :\n/* istanbul ignore next */\nObject.getOwnPropertyNames;\n\nfunction stringifyKey(key) {\n  if (typeof key === \"string\") {\n    return key;\n  }\n\n  if (typeof key === \"symbol\") {\n    return key.toString();\n  }\n\n  return new String(key).toString();\n}\n\nfunction toPrimitive(value) {\n  return value === null ? null : typeof value === \"object\" ? \"\" + value : value;\n}\n\nfunction hasProp(target, prop) {\n  return objectPrototype.hasOwnProperty.call(target, prop);\n} // From Immer utils\n\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(target) {\n  // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n  var res = {}; // Note: without polyfill for ownKeys, symbols won't be picked up\n\n  ownKeys(target).forEach(function (key) {\n    res[key] = getDescriptor(target, key);\n  });\n  return res;\n};\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar storedAnnotationsSymbol = /*#__PURE__*/Symbol(\"mobx-stored-annotations\");\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\n\nfunction createDecoratorAnnotation(annotation) {\n  function decorator(target, property) {\n    storeAnnotation(target, property, annotation);\n  }\n\n  return Object.assign(decorator, annotation);\n}\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\n\n\nfunction storeAnnotation(prototype, key, annotation) {\n  if (!hasProp(prototype, storedAnnotationsSymbol)) {\n    addHiddenProp(prototype, storedAnnotationsSymbol, _extends({}, prototype[storedAnnotationsSymbol]));\n  } // @override must override something\n\n\n  if (  true && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n    var fieldName = prototype.constructor.name + \".prototype.\" + key.toString();\n    die(\"'\" + fieldName + \"' is decorated with 'override', \" + \"but no such decorated member was found on prototype.\");\n  } // Cannot re-decorate\n\n\n  assertNotDecorated(prototype, annotation, key); // Ignore override\n\n  if (!isOverride(annotation)) {\n    prototype[storedAnnotationsSymbol][key] = annotation;\n  }\n}\n\nfunction assertNotDecorated(prototype, annotation, key) {\n  if (  true && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n    var fieldName = prototype.constructor.name + \".prototype.\" + key.toString();\n    var currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_;\n    var requestedAnnotationType = annotation.annotationType_;\n    die(\"Cannot apply '@\" + requestedAnnotationType + \"' to '\" + fieldName + \"':\" + (\"\\nThe field is already decorated with '@\" + currentAnnotationType + \"'.\") + \"\\nRe-decorating fields is not allowed.\" + \"\\nUse '@override' decorator for methods overriden by subclass.\");\n  }\n}\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\n\n\nfunction collectStoredAnnotations(target) {\n  if (!hasProp(target, storedAnnotationsSymbol)) {\n    if (  true && !target[storedAnnotationsSymbol]) {\n      die(\"No annotations were passed to makeObservable, but no decorated members have been found either\");\n    } // We need a copy as we will remove annotation from the list once it's applied.\n\n\n    addHiddenProp(target, storedAnnotationsSymbol, _extends({}, target[storedAnnotationsSymbol]));\n  }\n\n  return target[storedAnnotationsSymbol];\n}\n\nvar $mobx = /*#__PURE__*/Symbol(\"mobx administration\");\n\nvar Atom = /*#__PURE__*/function () {\n  // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n\n  /**\n   * Create a new atom. For debugging purposes it is recommended to give it a name.\n   * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n   */\n  function Atom(name_) {\n    if (name_ === void 0) {\n      name_ =   true ? \"Atom@\" + getNextId() : 0;\n    }\n\n    this.name_ = void 0;\n    this.isPendingUnobservation_ = false;\n    this.isBeingObserved_ = false;\n    this.observers_ = new Set();\n    this.diffValue_ = 0;\n    this.lastAccessedBy_ = 0;\n    this.lowestObserverState_ = IDerivationState_.NOT_TRACKING_;\n    this.onBOL = void 0;\n    this.onBUOL = void 0;\n    this.name_ = name_;\n  } // onBecomeObservedListeners\n\n\n  var _proto = Atom.prototype;\n\n  _proto.onBO = function onBO() {\n    if (this.onBOL) {\n      this.onBOL.forEach(function (listener) {\n        return listener();\n      });\n    }\n  };\n\n  _proto.onBUO = function onBUO() {\n    if (this.onBUOL) {\n      this.onBUOL.forEach(function (listener) {\n        return listener();\n      });\n    }\n  }\n  /**\n   * Invoke this method to notify mobx that your atom has been used somehow.\n   * Returns true if there is currently a reactive context.\n   */\n  ;\n\n  _proto.reportObserved = function reportObserved$1() {\n    return reportObserved(this);\n  }\n  /**\n   * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n   */\n  ;\n\n  _proto.reportChanged = function reportChanged() {\n    startBatch();\n    propagateChanged(this);\n    endBatch();\n  };\n\n  _proto.toString = function toString() {\n    return this.name_;\n  };\n\n  return Atom;\n}();\n\nvar isAtom = /*#__PURE__*/createInstanceofPredicate(\"Atom\", Atom);\n\nfunction createAtom(name, onBecomeObservedHandler, onBecomeUnobservedHandler) {\n  if (onBecomeObservedHandler === void 0) {\n    onBecomeObservedHandler = noop;\n  }\n\n  if (onBecomeUnobservedHandler === void 0) {\n    onBecomeUnobservedHandler = noop;\n  }\n\n  var atom = new Atom(name); // default `noop` listener will not initialize the hook Set\n\n  if (onBecomeObservedHandler !== noop) {\n    onBecomeObserved(atom, onBecomeObservedHandler);\n  }\n\n  if (onBecomeUnobservedHandler !== noop) {\n    onBecomeUnobserved(atom, onBecomeUnobservedHandler);\n  }\n\n  return atom;\n}\n\nfunction identityComparer(a, b) {\n  return a === b;\n}\n\nfunction structuralComparer(a, b) {\n  return deepEqual(a, b);\n}\n\nfunction shallowComparer(a, b) {\n  return deepEqual(a, b, 1);\n}\n\nfunction defaultComparer(a, b) {\n  if (Object.is) {\n    return Object.is(a, b);\n  }\n\n  return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b;\n}\n\nvar comparer = {\n  identity: identityComparer,\n  structural: structuralComparer,\n  \"default\": defaultComparer,\n  shallow: shallowComparer\n};\n\nfunction deepEnhancer(v, _, name) {\n  // it is an observable already, done\n  if (isObservable(v)) {\n    return v;\n  } // something that can be converted and mutated?\n\n\n  if (Array.isArray(v)) {\n    return observable.array(v, {\n      name: name\n    });\n  }\n\n  if (isPlainObject(v)) {\n    return observable.object(v, undefined, {\n      name: name\n    });\n  }\n\n  if (isES6Map(v)) {\n    return observable.map(v, {\n      name: name\n    });\n  }\n\n  if (isES6Set(v)) {\n    return observable.set(v, {\n      name: name\n    });\n  }\n\n  if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n    if (isGenerator(v)) {\n      return flow(v);\n    } else {\n      return autoAction(name, v);\n    }\n  }\n\n  return v;\n}\n\nfunction shallowEnhancer(v, _, name) {\n  if (v === undefined || v === null) {\n    return v;\n  }\n\n  if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n    return v;\n  }\n\n  if (Array.isArray(v)) {\n    return observable.array(v, {\n      name: name,\n      deep: false\n    });\n  }\n\n  if (isPlainObject(v)) {\n    return observable.object(v, undefined, {\n      name: name,\n      deep: false\n    });\n  }\n\n  if (isES6Map(v)) {\n    return observable.map(v, {\n      name: name,\n      deep: false\n    });\n  }\n\n  if (isES6Set(v)) {\n    return observable.set(v, {\n      name: name,\n      deep: false\n    });\n  }\n\n  if (true) {\n    die(\"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\n  }\n}\n\nfunction referenceEnhancer(newValue) {\n  // never turn into an observable\n  return newValue;\n}\n\nfunction refStructEnhancer(v, oldValue) {\n  if (  true && isObservable(v)) {\n    die(\"observable.struct should not be used with observable values\");\n  }\n\n  if (deepEqual(v, oldValue)) {\n    return oldValue;\n  }\n\n  return v;\n}\n\nvar OVERRIDE = \"override\";\nvar override = /*#__PURE__*/createDecoratorAnnotation({\n  annotationType_: OVERRIDE,\n  make_: make_,\n  extend_: extend_\n});\n\nfunction isOverride(annotation) {\n  return annotation.annotationType_ === OVERRIDE;\n}\n\nfunction make_(adm, key) {\n  // Must not be plain object\n  if (  true && adm.isPlainObject_) {\n    die(\"Cannot apply '\" + this.annotationType_ + \"' to '\" + adm.name_ + \".\" + key.toString() + \"':\" + (\"\\n'\" + this.annotationType_ + \"' cannot be used on plain objects.\"));\n  } // Must override something\n\n\n  if (  true && !hasProp(adm.appliedAnnotations_, key)) {\n    die(\"'\" + adm.name_ + \".\" + key.toString() + \"' is annotated with '\" + this.annotationType_ + \"', \" + \"but no such annotated member was found on prototype.\");\n  }\n\n  return 0\n  /* Cancel */\n  ;\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap) {\n  die(\"'\" + this.annotationType_ + \"' can only be used with 'makeObservable'\");\n}\n\nfunction createActionAnnotation(name, options) {\n  return {\n    annotationType_: name,\n    options_: options,\n    make_: make_$1,\n    extend_: extend_$1\n  };\n}\n\nfunction make_$1(adm, key, descriptor, source) {\n  var _this$options_; // bound\n\n\n  if ((_this$options_ = this.options_) != null && _this$options_.bound) {\n    return this.extend_(adm, key, descriptor, false) === null ? 0\n    /* Cancel */\n    : 1\n    /* Break */\n    ;\n  } // own\n\n\n  if (source === adm.target_) {\n    return this.extend_(adm, key, descriptor, false) === null ? 0\n    /* Cancel */\n    : 2\n    /* Continue */\n    ;\n  } // prototype\n\n\n  if (isAction(descriptor.value)) {\n    // A prototype could have been annotated already by other constructor,\n    // rest of the proto chain must be annotated already\n    return 1\n    /* Break */\n    ;\n  }\n\n  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false);\n  defineProperty(source, key, actionDescriptor);\n  return 2\n  /* Continue */\n  ;\n}\n\nfunction extend_$1(adm, key, descriptor, proxyTrap) {\n  var actionDescriptor = createActionDescriptor(adm, this, key, descriptor);\n  return adm.defineProperty_(key, actionDescriptor, proxyTrap);\n}\n\nfunction assertActionDescriptor(adm, _ref, key, _ref2) {\n  var annotationType_ = _ref.annotationType_;\n  var value = _ref2.value;\n\n  if (  true && !isFunction(value)) {\n    die(\"Cannot apply '\" + annotationType_ + \"' to '\" + adm.name_ + \".\" + key.toString() + \"':\" + (\"\\n'\" + annotationType_ + \"' can only be used on properties with a function value.\"));\n  }\n}\n\nfunction createActionDescriptor(adm, annotation, key, descriptor, // provides ability to disable safeDescriptors for prototypes\nsafeDescriptors) {\n  var _annotation$options_, _annotation$options_$, _annotation$options_2, _annotation$options_$2, _annotation$options_3, _annotation$options_4, _adm$proxy_2;\n\n  if (safeDescriptors === void 0) {\n    safeDescriptors = globalState.safeDescriptors;\n  }\n\n  assertActionDescriptor(adm, annotation, key, descriptor);\n  var value = descriptor.value;\n\n  if ((_annotation$options_ = annotation.options_) != null && _annotation$options_.bound) {\n    var _adm$proxy_;\n\n    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);\n  }\n\n  return {\n    value: createAction((_annotation$options_$ = (_annotation$options_2 = annotation.options_) == null ? void 0 : _annotation$options_2.name) != null ? _annotation$options_$ : key.toString(), value, (_annotation$options_$2 = (_annotation$options_3 = annotation.options_) == null ? void 0 : _annotation$options_3.autoAction) != null ? _annotation$options_$2 : false, // https://github.com/mobxjs/mobx/discussions/3140\n    (_annotation$options_4 = annotation.options_) != null && _annotation$options_4.bound ? (_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_ : undefined),\n    // Non-configurable for classes\n    // prevents accidental field redefinition in subclass\n    configurable: safeDescriptors ? adm.isPlainObject_ : true,\n    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n    enumerable: false,\n    // Non-obsevable, therefore non-writable\n    // Also prevents rewriting in subclass constructor\n    writable: safeDescriptors ? false : true\n  };\n}\n\nfunction createFlowAnnotation(name, options) {\n  return {\n    annotationType_: name,\n    options_: options,\n    make_: make_$2,\n    extend_: extend_$2\n  };\n}\n\nfunction make_$2(adm, key, descriptor, source) {\n  var _this$options_; // own\n\n\n  if (source === adm.target_) {\n    return this.extend_(adm, key, descriptor, false) === null ? 0\n    /* Cancel */\n    : 2\n    /* Continue */\n    ;\n  } // prototype\n  // bound - must annotate protos to support super.flow()\n\n\n  if ((_this$options_ = this.options_) != null && _this$options_.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n    if (this.extend_(adm, key, descriptor, false) === null) {\n      return 0\n      /* Cancel */\n      ;\n    }\n  }\n\n  if (isFlow(descriptor.value)) {\n    // A prototype could have been annotated already by other constructor,\n    // rest of the proto chain must be annotated already\n    return 1\n    /* Break */\n    ;\n  }\n\n  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false);\n  defineProperty(source, key, flowDescriptor);\n  return 2\n  /* Continue */\n  ;\n}\n\nfunction extend_$2(adm, key, descriptor, proxyTrap) {\n  var _this$options_2;\n\n  var flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, (_this$options_2 = this.options_) == null ? void 0 : _this$options_2.bound);\n  return adm.defineProperty_(key, flowDescriptor, proxyTrap);\n}\n\nfunction assertFlowDescriptor(adm, _ref, key, _ref2) {\n  var annotationType_ = _ref.annotationType_;\n  var value = _ref2.value;\n\n  if (  true && !isFunction(value)) {\n    die(\"Cannot apply '\" + annotationType_ + \"' to '\" + adm.name_ + \".\" + key.toString() + \"':\" + (\"\\n'\" + annotationType_ + \"' can only be used on properties with a generator function value.\"));\n  }\n}\n\nfunction createFlowDescriptor(adm, annotation, key, descriptor, bound, // provides ability to disable safeDescriptors for prototypes\nsafeDescriptors) {\n  if (safeDescriptors === void 0) {\n    safeDescriptors = globalState.safeDescriptors;\n  }\n\n  assertFlowDescriptor(adm, annotation, key, descriptor);\n  var value = descriptor.value; // In case of flow.bound, the descriptor can be from already annotated prototype\n\n  if (!isFlow(value)) {\n    value = flow(value);\n  }\n\n  if (bound) {\n    var _adm$proxy_; // We do not keep original function around, so we bind the existing flow\n\n\n    value = value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_); // This is normally set by `flow`, but `bind` returns new function...\n\n    value.isMobXFlow = true;\n  }\n\n  return {\n    value: value,\n    // Non-configurable for classes\n    // prevents accidental field redefinition in subclass\n    configurable: safeDescriptors ? adm.isPlainObject_ : true,\n    // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n    enumerable: false,\n    // Non-obsevable, therefore non-writable\n    // Also prevents rewriting in subclass constructor\n    writable: safeDescriptors ? false : true\n  };\n}\n\nfunction createComputedAnnotation(name, options) {\n  return {\n    annotationType_: name,\n    options_: options,\n    make_: make_$3,\n    extend_: extend_$3\n  };\n}\n\nfunction make_$3(adm, key, descriptor) {\n  return this.extend_(adm, key, descriptor, false) === null ? 0\n  /* Cancel */\n  : 1\n  /* Break */\n  ;\n}\n\nfunction extend_$3(adm, key, descriptor, proxyTrap) {\n  assertComputedDescriptor(adm, this, key, descriptor);\n  return adm.defineComputedProperty_(key, _extends({}, this.options_, {\n    get: descriptor.get,\n    set: descriptor.set\n  }), proxyTrap);\n}\n\nfunction assertComputedDescriptor(adm, _ref, key, _ref2) {\n  var annotationType_ = _ref.annotationType_;\n  var get = _ref2.get;\n\n  if (  true && !get) {\n    die(\"Cannot apply '\" + annotationType_ + \"' to '\" + adm.name_ + \".\" + key.toString() + \"':\" + (\"\\n'\" + annotationType_ + \"' can only be used on getter(+setter) properties.\"));\n  }\n}\n\nfunction createObservableAnnotation(name, options) {\n  return {\n    annotationType_: name,\n    options_: options,\n    make_: make_$4,\n    extend_: extend_$4\n  };\n}\n\nfunction make_$4(adm, key, descriptor) {\n  return this.extend_(adm, key, descriptor, false) === null ? 0\n  /* Cancel */\n  : 1\n  /* Break */\n  ;\n}\n\nfunction extend_$4(adm, key, descriptor, proxyTrap) {\n  var _this$options_$enhanc, _this$options_;\n\n  assertObservableDescriptor(adm, this, key, descriptor);\n  return adm.defineObservableProperty_(key, descriptor.value, (_this$options_$enhanc = (_this$options_ = this.options_) == null ? void 0 : _this$options_.enhancer) != null ? _this$options_$enhanc : deepEnhancer, proxyTrap);\n}\n\nfunction assertObservableDescriptor(adm, _ref, key, descriptor) {\n  var annotationType_ = _ref.annotationType_;\n\n  if (  true && !(\"value\" in descriptor)) {\n    die(\"Cannot apply '\" + annotationType_ + \"' to '\" + adm.name_ + \".\" + key.toString() + \"':\" + (\"\\n'\" + annotationType_ + \"' cannot be used on getter/setter properties\"));\n  }\n}\n\nvar AUTO = \"true\";\nvar autoAnnotation = /*#__PURE__*/createAutoAnnotation();\n\nfunction createAutoAnnotation(options) {\n  return {\n    annotationType_: AUTO,\n    options_: options,\n    make_: make_$5,\n    extend_: extend_$5\n  };\n}\n\nfunction make_$5(adm, key, descriptor, source) {\n  var _this$options_3, _this$options_4; // getter -> computed\n\n\n  if (descriptor.get) {\n    return computed.make_(adm, key, descriptor, source);\n  } // lone setter -> action setter\n\n\n  if (descriptor.set) {\n    // TODO make action applicable to setter and delegate to action.make_\n    var set = createAction(key.toString(), descriptor.set); // own\n\n    if (source === adm.target_) {\n      return adm.defineProperty_(key, {\n        configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n        set: set\n      }) === null ? 0\n      /* Cancel */\n      : 2\n      /* Continue */\n      ;\n    } // proto\n\n\n    defineProperty(source, key, {\n      configurable: true,\n      set: set\n    });\n    return 2\n    /* Continue */\n    ;\n  } // function on proto -> autoAction/flow\n\n\n  if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n    var _this$options_2;\n\n    if (isGenerator(descriptor.value)) {\n      var _this$options_;\n\n      var flowAnnotation = (_this$options_ = this.options_) != null && _this$options_.autoBind ? flow.bound : flow;\n      return flowAnnotation.make_(adm, key, descriptor, source);\n    }\n\n    var actionAnnotation = (_this$options_2 = this.options_) != null && _this$options_2.autoBind ? autoAction.bound : autoAction;\n    return actionAnnotation.make_(adm, key, descriptor, source);\n  } // other -> observable\n  // Copy props from proto as well, see test:\n  // \"decorate should work with Object.create\"\n\n\n  var observableAnnotation = ((_this$options_3 = this.options_) == null ? void 0 : _this$options_3.deep) === false ? observable.ref : observable; // if function respect autoBind option\n\n  if (typeof descriptor.value === \"function\" && (_this$options_4 = this.options_) != null && _this$options_4.autoBind) {\n    var _adm$proxy_;\n\n    descriptor.value = descriptor.value.bind((_adm$proxy_ = adm.proxy_) != null ? _adm$proxy_ : adm.target_);\n  }\n\n  return observableAnnotation.make_(adm, key, descriptor, source);\n}\n\nfunction extend_$5(adm, key, descriptor, proxyTrap) {\n  var _this$options_5, _this$options_6; // getter -> computed\n\n\n  if (descriptor.get) {\n    return computed.extend_(adm, key, descriptor, proxyTrap);\n  } // lone setter -> action setter\n\n\n  if (descriptor.set) {\n    // TODO make action applicable to setter and delegate to action.extend_\n    return adm.defineProperty_(key, {\n      configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n      set: createAction(key.toString(), descriptor.set)\n    }, proxyTrap);\n  } // other -> observable\n  // if function respect autoBind option\n\n\n  if (typeof descriptor.value === \"function\" && (_this$options_5 = this.options_) != null && _this$options_5.autoBind) {\n    var _adm$proxy_2;\n\n    descriptor.value = descriptor.value.bind((_adm$proxy_2 = adm.proxy_) != null ? _adm$proxy_2 : adm.target_);\n  }\n\n  var observableAnnotation = ((_this$options_6 = this.options_) == null ? void 0 : _this$options_6.deep) === false ? observable.ref : observable;\n  return observableAnnotation.extend_(adm, key, descriptor, proxyTrap);\n}\n\nvar OBSERVABLE = \"observable\";\nvar OBSERVABLE_REF = \"observable.ref\";\nvar OBSERVABLE_SHALLOW = \"observable.shallow\";\nvar OBSERVABLE_STRUCT = \"observable.struct\"; // Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\n\nvar defaultCreateObservableOptions = {\n  deep: true,\n  name: undefined,\n  defaultDecorator: undefined,\n  proxy: true\n};\nObject.freeze(defaultCreateObservableOptions);\n\nfunction asCreateObservableOptions(thing) {\n  return thing || defaultCreateObservableOptions;\n}\n\nvar observableAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE);\nvar observableRefAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_REF, {\n  enhancer: referenceEnhancer\n});\nvar observableShallowAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_SHALLOW, {\n  enhancer: shallowEnhancer\n});\nvar observableStructAnnotation = /*#__PURE__*/createObservableAnnotation(OBSERVABLE_STRUCT, {\n  enhancer: refStructEnhancer\n});\nvar observableDecoratorAnnotation = /*#__PURE__*/createDecoratorAnnotation(observableAnnotation);\n\nfunction getEnhancerFromOptions(options) {\n  return options.deep === true ? deepEnhancer : options.deep === false ? referenceEnhancer : getEnhancerFromAnnotation(options.defaultDecorator);\n}\n\nfunction getAnnotationFromOptions(options) {\n  var _options$defaultDecor;\n\n  return options ? (_options$defaultDecor = options.defaultDecorator) != null ? _options$defaultDecor : createAutoAnnotation(options) : undefined;\n}\n\nfunction getEnhancerFromAnnotation(annotation) {\n  var _annotation$options_$, _annotation$options_;\n\n  return !annotation ? deepEnhancer : (_annotation$options_$ = (_annotation$options_ = annotation.options_) == null ? void 0 : _annotation$options_.enhancer) != null ? _annotation$options_$ : deepEnhancer;\n}\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\n\n\nfunction createObservable(v, arg2, arg3) {\n  // @observable someProp;\n  if (isStringish(arg2)) {\n    storeAnnotation(v, arg2, observableAnnotation);\n    return;\n  } // already observable - ignore\n\n\n  if (isObservable(v)) {\n    return v;\n  } // plain object\n\n\n  if (isPlainObject(v)) {\n    return observable.object(v, arg2, arg3);\n  } // Array\n\n\n  if (Array.isArray(v)) {\n    return observable.array(v, arg2);\n  } // Map\n\n\n  if (isES6Map(v)) {\n    return observable.map(v, arg2);\n  } // Set\n\n\n  if (isES6Set(v)) {\n    return observable.set(v, arg2);\n  } // other object - ignore\n\n\n  if (typeof v === \"object\" && v !== null) {\n    return v;\n  } // anything else\n\n\n  return observable.box(v, arg2);\n}\n\nObject.assign(createObservable, observableDecoratorAnnotation);\nvar observableFactories = {\n  box: function box(value, options) {\n    var o = asCreateObservableOptions(options);\n    return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\n  },\n  array: function array(initialValues, options) {\n    var o = asCreateObservableOptions(options);\n    return (globalState.useProxies === false || o.proxy === false ? createLegacyArray : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name);\n  },\n  map: function map(initialValues, options) {\n    var o = asCreateObservableOptions(options);\n    return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\n  },\n  set: function set(initialValues, options) {\n    var o = asCreateObservableOptions(options);\n    return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\n  },\n  object: function object(props, decorators, options) {\n    return extendObservable(globalState.useProxies === false || (options == null ? void 0 : options.proxy) === false ? asObservableObject({}, options) : asDynamicObservableObject({}, options), props, decorators);\n  },\n  ref: /*#__PURE__*/createDecoratorAnnotation(observableRefAnnotation),\n  shallow: /*#__PURE__*/createDecoratorAnnotation(observableShallowAnnotation),\n  deep: observableDecoratorAnnotation,\n  struct: /*#__PURE__*/createDecoratorAnnotation(observableStructAnnotation)\n}; // eslint-disable-next-line\n\nvar observable = /*#__PURE__*/assign(createObservable, observableFactories);\nvar COMPUTED = \"computed\";\nvar COMPUTED_STRUCT = \"computed.struct\";\nvar computedAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED);\nvar computedStructAnnotation = /*#__PURE__*/createComputedAnnotation(COMPUTED_STRUCT, {\n  equals: comparer.structural\n});\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\n\nvar computed = function computed(arg1, arg2) {\n  if (isStringish(arg2)) {\n    // @computed\n    return storeAnnotation(arg1, arg2, computedAnnotation);\n  }\n\n  if (isPlainObject(arg1)) {\n    // @computed({ options })\n    return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1));\n  } // computed(expr, options?)\n\n\n  if (true) {\n    if (!isFunction(arg1)) {\n      die(\"First argument to `computed` should be an expression.\");\n    }\n\n    if (isFunction(arg2)) {\n      die(\"A setter as second argument is no longer supported, use `{ set: fn }` option instead\");\n    }\n  }\n\n  var opts = isPlainObject(arg2) ? arg2 : {};\n  opts.get = arg1;\n  opts.name || (opts.name = arg1.name || \"\");\n  /* for generated name */\n\n  return new ComputedValue(opts);\n};\n\nObject.assign(computed, computedAnnotation);\ncomputed.struct = /*#__PURE__*/createDecoratorAnnotation(computedStructAnnotation);\n\nvar _getDescriptor$config, _getDescriptor; // mobx versions\n\n\nvar currentActionId = 0;\nvar nextActionId = 1;\nvar isFunctionNameConfigurable = (_getDescriptor$config = (_getDescriptor = /*#__PURE__*/getDescriptor(function () {}, \"name\")) == null ? void 0 : _getDescriptor.configurable) != null ? _getDescriptor$config : false; // we can safely recycle this object\n\nvar tmpNameDescriptor = {\n  value: \"action\",\n  configurable: true,\n  writable: false,\n  enumerable: false\n};\n\nfunction createAction(actionName, fn, autoAction, ref) {\n  if (autoAction === void 0) {\n    autoAction = false;\n  }\n\n  if (true) {\n    if (!isFunction(fn)) {\n      die(\"`action` can only be invoked on functions\");\n    }\n\n    if (typeof actionName !== \"string\" || !actionName) {\n      die(\"actions should have valid names, got: '\" + actionName + \"'\");\n    }\n  }\n\n  function res() {\n    return executeAction(actionName, autoAction, fn, ref || this, arguments);\n  }\n\n  res.isMobxAction = true;\n\n  if (isFunctionNameConfigurable) {\n    tmpNameDescriptor.value = actionName;\n    Object.defineProperty(res, \"name\", tmpNameDescriptor);\n  }\n\n  return res;\n}\n\nfunction executeAction(actionName, canRunAsDerivation, fn, scope, args) {\n  var runInfo = _startAction(actionName, canRunAsDerivation, scope, args);\n\n  try {\n    return fn.apply(scope, args);\n  } catch (err) {\n    runInfo.error_ = err;\n    throw err;\n  } finally {\n    _endAction(runInfo);\n  }\n}\n\nfunction _startAction(actionName, canRunAsDerivation, // true for autoAction\nscope, args) {\n  var notifySpy_ =   true && isSpyEnabled() && !!actionName;\n  var startTime_ = 0;\n\n  if (  true && notifySpy_) {\n    startTime_ = Date.now();\n    var flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY;\n    spyReportStart({\n      type: ACTION,\n      name: actionName,\n      object: scope,\n      arguments: flattenedArgs\n    });\n  }\n\n  var prevDerivation_ = globalState.trackingDerivation;\n  var runAsAction = !canRunAsDerivation || !prevDerivation_;\n  startBatch();\n  var prevAllowStateChanges_ = globalState.allowStateChanges; // by default preserve previous allow\n\n  if (runAsAction) {\n    untrackedStart();\n    prevAllowStateChanges_ = allowStateChangesStart(true);\n  }\n\n  var prevAllowStateReads_ = allowStateReadsStart(true);\n  var runInfo = {\n    runAsAction_: runAsAction,\n    prevDerivation_: prevDerivation_,\n    prevAllowStateChanges_: prevAllowStateChanges_,\n    prevAllowStateReads_: prevAllowStateReads_,\n    notifySpy_: notifySpy_,\n    startTime_: startTime_,\n    actionId_: nextActionId++,\n    parentActionId_: currentActionId\n  };\n  currentActionId = runInfo.actionId_;\n  return runInfo;\n}\n\nfunction _endAction(runInfo) {\n  if (currentActionId !== runInfo.actionId_) {\n    die(30);\n  }\n\n  currentActionId = runInfo.parentActionId_;\n\n  if (runInfo.error_ !== undefined) {\n    globalState.suppressReactionErrors = true;\n  }\n\n  allowStateChangesEnd(runInfo.prevAllowStateChanges_);\n  allowStateReadsEnd(runInfo.prevAllowStateReads_);\n  endBatch();\n\n  if (runInfo.runAsAction_) {\n    untrackedEnd(runInfo.prevDerivation_);\n  }\n\n  if (  true && runInfo.notifySpy_) {\n    spyReportEnd({\n      time: Date.now() - runInfo.startTime_\n    });\n  }\n\n  globalState.suppressReactionErrors = false;\n}\n\nfunction allowStateChanges(allowStateChanges, func) {\n  var prev = allowStateChangesStart(allowStateChanges);\n\n  try {\n    return func();\n  } finally {\n    allowStateChangesEnd(prev);\n  }\n}\n\nfunction allowStateChangesStart(allowStateChanges) {\n  var prev = globalState.allowStateChanges;\n  globalState.allowStateChanges = allowStateChanges;\n  return prev;\n}\n\nfunction allowStateChangesEnd(prev) {\n  globalState.allowStateChanges = prev;\n}\n\nvar _Symbol$toPrimitive;\n\nvar CREATE = \"create\";\n_Symbol$toPrimitive = Symbol.toPrimitive;\n\nvar ObservableValue = /*#__PURE__*/function (_Atom) {\n  _inheritsLoose(ObservableValue, _Atom);\n\n  function ObservableValue(value, enhancer, name_, notifySpy, equals) {\n    var _this;\n\n    if (name_ === void 0) {\n      name_ =   true ? \"ObservableValue@\" + getNextId() : 0;\n    }\n\n    if (notifySpy === void 0) {\n      notifySpy = true;\n    }\n\n    if (equals === void 0) {\n      equals = comparer[\"default\"];\n    }\n\n    _this = _Atom.call(this, name_) || this;\n    _this.enhancer = void 0;\n    _this.name_ = void 0;\n    _this.equals = void 0;\n    _this.hasUnreportedChange_ = false;\n    _this.interceptors_ = void 0;\n    _this.changeListeners_ = void 0;\n    _this.value_ = void 0;\n    _this.dehancer = void 0;\n    _this.enhancer = enhancer;\n    _this.name_ = name_;\n    _this.equals = equals;\n    _this.value_ = enhancer(value, undefined, name_);\n\n    if (  true && notifySpy && isSpyEnabled()) {\n      // only notify spy if this is a stand-alone observable\n      spyReport({\n        type: CREATE,\n        object: _assertThisInitialized(_this),\n        observableKind: \"value\",\n        debugObjectName: _this.name_,\n        newValue: \"\" + _this.value_\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = ObservableValue.prototype;\n\n  _proto.dehanceValue = function dehanceValue(value) {\n    if (this.dehancer !== undefined) {\n      return this.dehancer(value);\n    }\n\n    return value;\n  };\n\n  _proto.set = function set(newValue) {\n    var oldValue = this.value_;\n    newValue = this.prepareNewValue_(newValue);\n\n    if (newValue !== globalState.UNCHANGED) {\n      var notifySpy = isSpyEnabled();\n\n      if (  true && notifySpy) {\n        spyReportStart({\n          type: UPDATE,\n          object: this,\n          observableKind: \"value\",\n          debugObjectName: this.name_,\n          newValue: newValue,\n          oldValue: oldValue\n        });\n      }\n\n      this.setNewValue_(newValue);\n\n      if (  true && notifySpy) {\n        spyReportEnd();\n      }\n    }\n  };\n\n  _proto.prepareNewValue_ = function prepareNewValue_(newValue) {\n    checkIfStateModificationsAreAllowed(this);\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        object: this,\n        type: UPDATE,\n        newValue: newValue\n      });\n\n      if (!change) {\n        return globalState.UNCHANGED;\n      }\n\n      newValue = change.newValue;\n    } // apply modifier\n\n\n    newValue = this.enhancer(newValue, this.value_, this.name_);\n    return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;\n  };\n\n  _proto.setNewValue_ = function setNewValue_(newValue) {\n    var oldValue = this.value_;\n    this.value_ = newValue;\n    this.reportChanged();\n\n    if (hasListeners(this)) {\n      notifyListeners(this, {\n        type: UPDATE,\n        object: this,\n        newValue: newValue,\n        oldValue: oldValue\n      });\n    }\n  };\n\n  _proto.get = function get() {\n    this.reportObserved();\n    return this.dehanceValue(this.value_);\n  };\n\n  _proto.intercept_ = function intercept_(handler) {\n    return registerInterceptor(this, handler);\n  };\n\n  _proto.observe_ = function observe_(listener, fireImmediately) {\n    if (fireImmediately) {\n      listener({\n        observableKind: \"value\",\n        debugObjectName: this.name_,\n        object: this,\n        type: UPDATE,\n        newValue: this.value_,\n        oldValue: undefined\n      });\n    }\n\n    return registerListener(this, listener);\n  };\n\n  _proto.raw = function raw() {\n    // used by MST ot get undehanced value\n    return this.value_;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.get();\n  };\n\n  _proto.toString = function toString() {\n    return this.name_ + \"[\" + this.value_ + \"]\";\n  };\n\n  _proto.valueOf = function valueOf() {\n    return toPrimitive(this.get());\n  };\n\n  _proto[_Symbol$toPrimitive] = function () {\n    return this.valueOf();\n  };\n\n  return ObservableValue;\n}(Atom);\n\nvar isObservableValue = /*#__PURE__*/createInstanceofPredicate(\"ObservableValue\", ObservableValue);\n\nvar _Symbol$toPrimitive$1;\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\n\n\n_Symbol$toPrimitive$1 = Symbol.toPrimitive;\n\nvar ComputedValue = /*#__PURE__*/function () {\n  // nodes we are looking at. Our value depends on these nodes\n  // during tracking it's an array with new observed observers\n  // to check for cycles\n  // N.B: unminified as it is used by MST\n\n  /**\n   * Create a new computed value based on a function expression.\n   *\n   * The `name` property is for debug purposes only.\n   *\n   * The `equals` property specifies the comparer function to use to determine if a newly produced\n   * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n   * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n   * Structural comparison can be convenient if you always produce a new aggregated object and\n   * don't want to notify observers if it is structurally the same.\n   * This is useful for working with vectors, mouse coordinates etc.\n   */\n  function ComputedValue(options) {\n    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;\n    this.observing_ = [];\n    this.newObserving_ = null;\n    this.isBeingObserved_ = false;\n    this.isPendingUnobservation_ = false;\n    this.observers_ = new Set();\n    this.diffValue_ = 0;\n    this.runId_ = 0;\n    this.lastAccessedBy_ = 0;\n    this.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;\n    this.unboundDepsCount_ = 0;\n    this.value_ = new CaughtException(null);\n    this.name_ = void 0;\n    this.triggeredBy_ = void 0;\n    this.isComputing_ = false;\n    this.isRunningSetter_ = false;\n    this.derivation = void 0;\n    this.setter_ = void 0;\n    this.isTracing_ = TraceMode.NONE;\n    this.scope_ = void 0;\n    this.equals_ = void 0;\n    this.requiresReaction_ = void 0;\n    this.keepAlive_ = void 0;\n    this.onBOL = void 0;\n    this.onBUOL = void 0;\n\n    if (!options.get) {\n      die(31);\n    }\n\n    this.derivation = options.get;\n    this.name_ = options.name || (  true ? \"ComputedValue@\" + getNextId() : 0);\n\n    if (options.set) {\n      this.setter_ = createAction(  true ? this.name_ + \"-setter\" : 0, options.set);\n    }\n\n    this.equals_ = options.equals || (options.compareStructural || options.struct ? comparer.structural : comparer[\"default\"]);\n    this.scope_ = options.context;\n    this.requiresReaction_ = options.requiresReaction;\n    this.keepAlive_ = !!options.keepAlive;\n  }\n\n  var _proto = ComputedValue.prototype;\n\n  _proto.onBecomeStale_ = function onBecomeStale_() {\n    propagateMaybeChanged(this);\n  };\n\n  _proto.onBO = function onBO() {\n    if (this.onBOL) {\n      this.onBOL.forEach(function (listener) {\n        return listener();\n      });\n    }\n  };\n\n  _proto.onBUO = function onBUO() {\n    if (this.onBUOL) {\n      this.onBUOL.forEach(function (listener) {\n        return listener();\n      });\n    }\n  }\n  /**\n   * Returns the current value of this computed value.\n   * Will evaluate its computation first if needed.\n   */\n  ;\n\n  _proto.get = function get() {\n    if (this.isComputing_) {\n      die(32, this.name_, this.derivation);\n    }\n\n    if (globalState.inBatch === 0 && // !globalState.trackingDerivatpion &&\n    this.observers_.size === 0 && !this.keepAlive_) {\n      if (shouldCompute(this)) {\n        this.warnAboutUntrackedRead_();\n        startBatch(); // See perf test 'computed memoization'\n\n        this.value_ = this.computeValue_(false);\n        endBatch();\n      }\n    } else {\n      reportObserved(this);\n\n      if (shouldCompute(this)) {\n        var prevTrackingContext = globalState.trackingContext;\n\n        if (this.keepAlive_ && !prevTrackingContext) {\n          globalState.trackingContext = this;\n        }\n\n        if (this.trackAndCompute()) {\n          propagateChangeConfirmed(this);\n        }\n\n        globalState.trackingContext = prevTrackingContext;\n      }\n    }\n\n    var result = this.value_;\n\n    if (isCaughtException(result)) {\n      throw result.cause;\n    }\n\n    return result;\n  };\n\n  _proto.set = function set(value) {\n    if (this.setter_) {\n      if (this.isRunningSetter_) {\n        die(33, this.name_);\n      }\n\n      this.isRunningSetter_ = true;\n\n      try {\n        this.setter_.call(this.scope_, value);\n      } finally {\n        this.isRunningSetter_ = false;\n      }\n    } else {\n      die(34, this.name_);\n    }\n  };\n\n  _proto.trackAndCompute = function trackAndCompute() {\n    // N.B: unminified as it is used by MST\n    var oldValue = this.value_;\n    var wasSuspended =\n    /* see #1208 */\n    this.dependenciesState_ === IDerivationState_.NOT_TRACKING_;\n    var newValue = this.computeValue_(true);\n    var changed = wasSuspended || isCaughtException(oldValue) || isCaughtException(newValue) || !this.equals_(oldValue, newValue);\n\n    if (changed) {\n      this.value_ = newValue;\n\n      if (  true && isSpyEnabled()) {\n        spyReport({\n          observableKind: \"computed\",\n          debugObjectName: this.name_,\n          object: this.scope_,\n          type: \"update\",\n          oldValue: oldValue,\n          newValue: newValue\n        });\n      }\n    }\n\n    return changed;\n  };\n\n  _proto.computeValue_ = function computeValue_(track) {\n    this.isComputing_ = true; // don't allow state changes during computation\n\n    var prev = allowStateChangesStart(false);\n    var res;\n\n    if (track) {\n      res = trackDerivedFunction(this, this.derivation, this.scope_);\n    } else {\n      if (globalState.disableErrorBoundaries === true) {\n        res = this.derivation.call(this.scope_);\n      } else {\n        try {\n          res = this.derivation.call(this.scope_);\n        } catch (e) {\n          res = new CaughtException(e);\n        }\n      }\n    }\n\n    allowStateChangesEnd(prev);\n    this.isComputing_ = false;\n    return res;\n  };\n\n  _proto.suspend_ = function suspend_() {\n    if (!this.keepAlive_) {\n      clearObserving(this);\n      this.value_ = undefined; // don't hold on to computed value!\n\n      if (  true && this.isTracing_ !== TraceMode.NONE) {\n        console.log(\"[mobx.trace] Computed value '\" + this.name_ + \"' was suspended and it will recompute on the next access.\");\n      }\n    }\n  };\n\n  _proto.observe_ = function observe_(listener, fireImmediately) {\n    var _this = this;\n\n    var firstTime = true;\n    var prevValue = undefined;\n    return autorun(function () {\n      // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n      var newValue = _this.get();\n\n      if (!firstTime || fireImmediately) {\n        var prevU = untrackedStart();\n        listener({\n          observableKind: \"computed\",\n          debugObjectName: _this.name_,\n          type: UPDATE,\n          object: _this,\n          newValue: newValue,\n          oldValue: prevValue\n        });\n        untrackedEnd(prevU);\n      }\n\n      firstTime = false;\n      prevValue = newValue;\n    });\n  };\n\n  _proto.warnAboutUntrackedRead_ = function warnAboutUntrackedRead_() {\n    if (false) {}\n\n    if (this.isTracing_ !== TraceMode.NONE) {\n      console.log(\"[mobx.trace] Computed value '\" + this.name_ + \"' is being read outside a reactive context. Doing a full recompute.\");\n    }\n\n    if (typeof this.requiresReaction_ === \"boolean\" ? this.requiresReaction_ : globalState.computedRequiresReaction) {\n      console.warn(\"[mobx] Computed value '\" + this.name_ + \"' is being read outside a reactive context. Doing a full recompute.\");\n    }\n  };\n\n  _proto.toString = function toString() {\n    return this.name_ + \"[\" + this.derivation.toString() + \"]\";\n  };\n\n  _proto.valueOf = function valueOf() {\n    return toPrimitive(this.get());\n  };\n\n  _proto[_Symbol$toPrimitive$1] = function () {\n    return this.valueOf();\n  };\n\n  return ComputedValue;\n}();\n\nvar isComputedValue = /*#__PURE__*/createInstanceofPredicate(\"ComputedValue\", ComputedValue);\nvar IDerivationState_;\n\n(function (IDerivationState_) {\n  // before being run or (outside batch and not being observed)\n  // at this point derivation is not holding any data about dependency tree\n  IDerivationState_[IDerivationState_[\"NOT_TRACKING_\"] = -1] = \"NOT_TRACKING_\"; // no shallow dependency changed since last computation\n  // won't recalculate derivation\n  // this is what makes mobx fast\n\n  IDerivationState_[IDerivationState_[\"UP_TO_DATE_\"] = 0] = \"UP_TO_DATE_\"; // some deep dependency changed, but don't know if shallow dependency changed\n  // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n  // currently only ComputedValue will propagate POSSIBLY_STALE\n  //\n  // having this state is second big optimization:\n  // don't have to recompute on every dependency change, but only when it's needed\n\n  IDerivationState_[IDerivationState_[\"POSSIBLY_STALE_\"] = 1] = \"POSSIBLY_STALE_\"; // A shallow dependency has changed since last computation and the derivation\n  // will need to recompute when it's needed next.\n\n  IDerivationState_[IDerivationState_[\"STALE_\"] = 2] = \"STALE_\";\n})(IDerivationState_ || (IDerivationState_ = {}));\n\nvar TraceMode;\n\n(function (TraceMode) {\n  TraceMode[TraceMode[\"NONE\"] = 0] = \"NONE\";\n  TraceMode[TraceMode[\"LOG\"] = 1] = \"LOG\";\n  TraceMode[TraceMode[\"BREAK\"] = 2] = \"BREAK\";\n})(TraceMode || (TraceMode = {}));\n\nvar CaughtException = function CaughtException(cause) {\n  this.cause = void 0;\n  this.cause = cause; // Empty\n};\n\nfunction isCaughtException(e) {\n  return e instanceof CaughtException;\n}\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\n\n\nfunction shouldCompute(derivation) {\n  switch (derivation.dependenciesState_) {\n    case IDerivationState_.UP_TO_DATE_:\n      return false;\n\n    case IDerivationState_.NOT_TRACKING_:\n    case IDerivationState_.STALE_:\n      return true;\n\n    case IDerivationState_.POSSIBLY_STALE_:\n      {\n        // state propagation can occur outside of action/reactive context #2195\n        var prevAllowStateReads = allowStateReadsStart(true);\n        var prevUntracked = untrackedStart(); // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n\n        var obs = derivation.observing_,\n            l = obs.length;\n\n        for (var i = 0; i < l; i++) {\n          var obj = obs[i];\n\n          if (isComputedValue(obj)) {\n            if (globalState.disableErrorBoundaries) {\n              obj.get();\n            } else {\n              try {\n                obj.get();\n              } catch (e) {\n                // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                untrackedEnd(prevUntracked);\n                allowStateReadsEnd(prevAllowStateReads);\n                return true;\n              }\n            } // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n            // and `derivation` is an observer of `obj`\n            // invariantShouldCompute(derivation)\n\n\n            if (derivation.dependenciesState_ === IDerivationState_.STALE_) {\n              untrackedEnd(prevUntracked);\n              allowStateReadsEnd(prevAllowStateReads);\n              return true;\n            }\n          }\n        }\n\n        changeDependenciesStateTo0(derivation);\n        untrackedEnd(prevUntracked);\n        allowStateReadsEnd(prevAllowStateReads);\n        return false;\n      }\n  }\n}\n\nfunction isComputingDerivation() {\n  return globalState.trackingDerivation !== null; // filter out actions inside computations\n}\n\nfunction checkIfStateModificationsAreAllowed(atom) {\n  if (false) {}\n\n  var hasObservers = atom.observers_.size > 0; // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n\n  if (!globalState.allowStateChanges && (hasObservers || globalState.enforceActions === \"always\")) {\n    console.warn(\"[MobX] \" + (globalState.enforceActions ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \" : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") + atom.name_);\n  }\n}\n\nfunction checkIfStateReadsAreAllowed(observable) {\n  if (  true && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n    console.warn(\"[mobx] Observable '\" + observable.name_ + \"' being read outside a reactive context.\");\n  }\n}\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\n\n\nfunction trackDerivedFunction(derivation, f, context) {\n  var prevAllowStateReads = allowStateReadsStart(true); // pre allocate array allocation + room for variation in deps\n  // array will be trimmed by bindDependencies\n\n  changeDependenciesStateTo0(derivation);\n  derivation.newObserving_ = new Array(derivation.observing_.length + 100);\n  derivation.unboundDepsCount_ = 0;\n  derivation.runId_ = ++globalState.runId;\n  var prevTracking = globalState.trackingDerivation;\n  globalState.trackingDerivation = derivation;\n  globalState.inBatch++;\n  var result;\n\n  if (globalState.disableErrorBoundaries === true) {\n    result = f.call(context);\n  } else {\n    try {\n      result = f.call(context);\n    } catch (e) {\n      result = new CaughtException(e);\n    }\n  }\n\n  globalState.inBatch--;\n  globalState.trackingDerivation = prevTracking;\n  bindDependencies(derivation);\n  warnAboutDerivationWithoutDependencies(derivation);\n  allowStateReadsEnd(prevAllowStateReads);\n  return result;\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation) {\n  if (false) {}\n\n  if (derivation.observing_.length !== 0) {\n    return;\n  }\n\n  if (typeof derivation.requiresObservable_ === \"boolean\" ? derivation.requiresObservable_ : globalState.reactionRequiresObservable) {\n    console.warn(\"[mobx] Derivation '\" + derivation.name_ + \"' is created/updated without reading any observable value.\");\n  }\n}\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\n\n\nfunction bindDependencies(derivation) {\n  // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n  var prevObserving = derivation.observing_;\n  var observing = derivation.observing_ = derivation.newObserving_;\n  var lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_; // Go through all new observables and check diffValue: (this list can contain duplicates):\n  //   0: first occurrence, change to 1 and keep it\n  //   1: extra occurrence, drop it\n\n  var i0 = 0,\n      l = derivation.unboundDepsCount_;\n\n  for (var i = 0; i < l; i++) {\n    var dep = observing[i];\n\n    if (dep.diffValue_ === 0) {\n      dep.diffValue_ = 1;\n\n      if (i0 !== i) {\n        observing[i0] = dep;\n      }\n\n      i0++;\n    } // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n    // not hitting the condition\n\n\n    if (dep.dependenciesState_ > lowestNewObservingDerivationState) {\n      lowestNewObservingDerivationState = dep.dependenciesState_;\n    }\n  }\n\n  observing.length = i0;\n  derivation.newObserving_ = null; // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n  // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n  //   0: it's not in new observables, unobserve it\n  //   1: it keeps being observed, don't want to notify it. change to 0\n\n  l = prevObserving.length;\n\n  while (l--) {\n    var _dep = prevObserving[l];\n\n    if (_dep.diffValue_ === 0) {\n      removeObserver(_dep, derivation);\n    }\n\n    _dep.diffValue_ = 0;\n  } // Go through all new observables and check diffValue: (now it should be unique)\n  //   0: it was set to 0 in last loop. don't need to do anything.\n  //   1: it wasn't observed, let's observe it. set back to 0\n\n\n  while (i0--) {\n    var _dep2 = observing[i0];\n\n    if (_dep2.diffValue_ === 1) {\n      _dep2.diffValue_ = 0;\n      addObserver(_dep2, derivation);\n    }\n  } // Some new observed derivations may become stale during this derivation computation\n  // so they have had no chance to propagate staleness (#916)\n\n\n  if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n    derivation.dependenciesState_ = lowestNewObservingDerivationState;\n    derivation.onBecomeStale_();\n  }\n}\n\nfunction clearObserving(derivation) {\n  // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n  var obs = derivation.observing_;\n  derivation.observing_ = [];\n  var i = obs.length;\n\n  while (i--) {\n    removeObserver(obs[i], derivation);\n  }\n\n  derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_;\n}\n\nfunction untracked(action) {\n  var prev = untrackedStart();\n\n  try {\n    return action();\n  } finally {\n    untrackedEnd(prev);\n  }\n}\n\nfunction untrackedStart() {\n  var prev = globalState.trackingDerivation;\n  globalState.trackingDerivation = null;\n  return prev;\n}\n\nfunction untrackedEnd(prev) {\n  globalState.trackingDerivation = prev;\n}\n\nfunction allowStateReadsStart(allowStateReads) {\n  var prev = globalState.allowStateReads;\n  globalState.allowStateReads = allowStateReads;\n  return prev;\n}\n\nfunction allowStateReadsEnd(prev) {\n  globalState.allowStateReads = prev;\n}\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\n\n\nfunction changeDependenciesStateTo0(derivation) {\n  if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n    return;\n  }\n\n  derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_;\n  var obs = derivation.observing_;\n  var i = obs.length;\n\n  while (i--) {\n    obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_;\n  }\n}\n/**\n * These values will persist if global state is reset\n */\n\n\nvar persistentKeys = [\"mobxGuid\", \"spyListeners\", \"enforceActions\", \"computedRequiresReaction\", \"reactionRequiresObservable\", \"observableRequiresReaction\", \"allowStateReads\", \"disableErrorBoundaries\", \"runId\", \"UNCHANGED\", \"useProxies\"];\n\nvar MobXGlobals = function MobXGlobals() {\n  this.version = 6;\n  this.UNCHANGED = {};\n  this.trackingDerivation = null;\n  this.trackingContext = null;\n  this.runId = 0;\n  this.mobxGuid = 0;\n  this.inBatch = 0;\n  this.pendingUnobservations = [];\n  this.pendingReactions = [];\n  this.isRunningReactions = false;\n  this.allowStateChanges = false;\n  this.allowStateReads = true;\n  this.enforceActions = true;\n  this.spyListeners = [];\n  this.globalReactionErrorHandlers = [];\n  this.computedRequiresReaction = false;\n  this.reactionRequiresObservable = false;\n  this.observableRequiresReaction = false;\n  this.disableErrorBoundaries = false;\n  this.suppressReactionErrors = false;\n  this.useProxies = true;\n  this.verifyProxies = false;\n  this.safeDescriptors = true;\n};\n\nvar canMergeGlobalState = true;\nvar isolateCalled = false;\n\nvar globalState = /*#__PURE__*/function () {\n  var global = /*#__PURE__*/getGlobal();\n\n  if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n    canMergeGlobalState = false;\n  }\n\n  if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n    canMergeGlobalState = false;\n  }\n\n  if (!canMergeGlobalState) {\n    // Because this is a IIFE we need to let isolateCalled a chance to change\n    // so we run it after the event loop completed at least 1 iteration\n    setTimeout(function () {\n      if (!isolateCalled) {\n        die(35);\n      }\n    }, 1);\n    return new MobXGlobals();\n  } else if (global.__mobxGlobals) {\n    global.__mobxInstanceCount += 1;\n\n    if (!global.__mobxGlobals.UNCHANGED) {\n      global.__mobxGlobals.UNCHANGED = {};\n    } // make merge backward compatible\n\n\n    return global.__mobxGlobals;\n  } else {\n    global.__mobxInstanceCount = 1;\n    return global.__mobxGlobals = /*#__PURE__*/new MobXGlobals();\n  }\n}();\n\nfunction isolateGlobalState() {\n  if (globalState.pendingReactions.length || globalState.inBatch || globalState.isRunningReactions) {\n    die(36);\n  }\n\n  isolateCalled = true;\n\n  if (canMergeGlobalState) {\n    var global = getGlobal();\n\n    if (--global.__mobxInstanceCount === 0) {\n      global.__mobxGlobals = undefined;\n    }\n\n    globalState = new MobXGlobals();\n  }\n}\n\nfunction getGlobalState() {\n  return globalState;\n}\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\n\n\nfunction resetGlobalState() {\n  var defaultGlobals = new MobXGlobals();\n\n  for (var key in defaultGlobals) {\n    if (persistentKeys.indexOf(key) === -1) {\n      globalState[key] = defaultGlobals[key];\n    }\n  }\n\n  globalState.allowStateChanges = !globalState.enforceActions;\n}\n\nfunction hasObservers(observable) {\n  return observable.observers_ && observable.observers_.size > 0;\n}\n\nfunction getObservers(observable) {\n  return observable.observers_;\n} // function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\n\n\nfunction addObserver(observable, node) {\n  // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n  // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n  // invariantObservers(observable);\n  observable.observers_.add(node);\n\n  if (observable.lowestObserverState_ > node.dependenciesState_) {\n    observable.lowestObserverState_ = node.dependenciesState_;\n  } // invariantObservers(observable);\n  // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n\n}\n\nfunction removeObserver(observable, node) {\n  // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n  // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n  // invariantObservers(observable);\n  observable.observers_[\"delete\"](node);\n\n  if (observable.observers_.size === 0) {\n    // deleting last observer\n    queueForUnobservation(observable);\n  } // invariantObservers(observable);\n  // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n\n}\n\nfunction queueForUnobservation(observable) {\n  if (observable.isPendingUnobservation_ === false) {\n    // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n    observable.isPendingUnobservation_ = true;\n    globalState.pendingUnobservations.push(observable);\n  }\n}\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\n\n\nfunction startBatch() {\n  globalState.inBatch++;\n}\n\nfunction endBatch() {\n  if (--globalState.inBatch === 0) {\n    runReactions(); // the batch is actually about to finish, all unobserving should happen here.\n\n    var list = globalState.pendingUnobservations;\n\n    for (var i = 0; i < list.length; i++) {\n      var observable = list[i];\n      observable.isPendingUnobservation_ = false;\n\n      if (observable.observers_.size === 0) {\n        if (observable.isBeingObserved_) {\n          // if this observable had reactive observers, trigger the hooks\n          observable.isBeingObserved_ = false;\n          observable.onBUO();\n        }\n\n        if (observable instanceof ComputedValue) {\n          // computed values are automatically teared down when the last observer leaves\n          // this process happens recursively, this computed might be the last observabe of another, etc..\n          observable.suspend_();\n        }\n      }\n    }\n\n    globalState.pendingUnobservations = [];\n  }\n}\n\nfunction reportObserved(observable) {\n  checkIfStateReadsAreAllowed(observable);\n  var derivation = globalState.trackingDerivation;\n\n  if (derivation !== null) {\n    /**\n     * Simple optimization, give each derivation run an unique id (runId)\n     * Check if last time this observable was accessed the same runId is used\n     * if this is the case, the relation is already known\n     */\n    if (derivation.runId_ !== observable.lastAccessedBy_) {\n      observable.lastAccessedBy_ = derivation.runId_; // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n\n      derivation.newObserving_[derivation.unboundDepsCount_++] = observable;\n\n      if (!observable.isBeingObserved_ && globalState.trackingContext) {\n        observable.isBeingObserved_ = true;\n        observable.onBO();\n      }\n    }\n\n    return true;\n  } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n    queueForUnobservation(observable);\n  }\n\n  return false;\n} // function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n// Called by Atom when its value changes\n\n\nfunction propagateChanged(observable) {\n  // invariantLOS(observable, \"changed start\");\n  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n    return;\n  }\n\n  observable.lowestObserverState_ = IDerivationState_.STALE_; // Ideally we use for..of here, but the downcompiled version is really slow...\n\n  observable.observers_.forEach(function (d) {\n    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n      if (  true && d.isTracing_ !== TraceMode.NONE) {\n        logTraceInfo(d, observable);\n      }\n\n      d.onBecomeStale_();\n    }\n\n    d.dependenciesState_ = IDerivationState_.STALE_;\n  }); // invariantLOS(observable, \"changed end\");\n} // Called by ComputedValue when it recalculate and its value changed\n\n\nfunction propagateChangeConfirmed(observable) {\n  // invariantLOS(observable, \"confirmed start\");\n  if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n    return;\n  }\n\n  observable.lowestObserverState_ = IDerivationState_.STALE_;\n  observable.observers_.forEach(function (d) {\n    if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n      d.dependenciesState_ = IDerivationState_.STALE_;\n\n      if (  true && d.isTracing_ !== TraceMode.NONE) {\n        logTraceInfo(d, observable);\n      }\n    } else if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n    ) {\n      observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_;\n    }\n  }); // invariantLOS(observable, \"confirmed end\");\n} // Used by computed when its dependency changed, but we don't wan't to immediately recompute.\n\n\nfunction propagateMaybeChanged(observable) {\n  // invariantLOS(observable, \"maybe start\");\n  if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n    return;\n  }\n\n  observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_;\n  observable.observers_.forEach(function (d) {\n    if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n      d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_;\n      d.onBecomeStale_();\n    }\n  }); // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation, observable) {\n  console.log(\"[mobx.trace] '\" + derivation.name_ + \"' is invalidated due to a change in: '\" + observable.name_ + \"'\");\n\n  if (derivation.isTracing_ === TraceMode.BREAK) {\n    var lines = [];\n    printDepTree(getDependencyTree(derivation), lines, 1); // prettier-ignore\n\n    new Function(\"debugger;\\n/*\\nTracing '\" + derivation.name_ + \"'\\n\\nYou are entering this break point because derivation '\" + derivation.name_ + \"' is being traced and '\" + observable.name_ + \"' is now forcing it to update.\\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\\n\\n\" + (derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\") + \"\\n\\nThe dependencies for this derivation are:\\n\\n\" + lines.join(\"\\n\") + \"\\n*/\\n    \")();\n  }\n}\n\nfunction printDepTree(tree, lines, depth) {\n  if (lines.length >= 1000) {\n    lines.push(\"(and many more)\");\n    return;\n  }\n\n  lines.push(\"\" + \"\\t\".repeat(depth - 1) + tree.name);\n\n  if (tree.dependencies) {\n    tree.dependencies.forEach(function (child) {\n      return printDepTree(child, lines, depth + 1);\n    });\n  }\n}\n\nvar Reaction = /*#__PURE__*/function () {\n  // nodes we are looking at. Our value depends on these nodes\n  function Reaction(name_, onInvalidate_, errorHandler_, requiresObservable_) {\n    if (name_ === void 0) {\n      name_ =   true ? \"Reaction@\" + getNextId() : 0;\n    }\n\n    this.name_ = void 0;\n    this.onInvalidate_ = void 0;\n    this.errorHandler_ = void 0;\n    this.requiresObservable_ = void 0;\n    this.observing_ = [];\n    this.newObserving_ = [];\n    this.dependenciesState_ = IDerivationState_.NOT_TRACKING_;\n    this.diffValue_ = 0;\n    this.runId_ = 0;\n    this.unboundDepsCount_ = 0;\n    this.isDisposed_ = false;\n    this.isScheduled_ = false;\n    this.isTrackPending_ = false;\n    this.isRunning_ = false;\n    this.isTracing_ = TraceMode.NONE;\n    this.name_ = name_;\n    this.onInvalidate_ = onInvalidate_;\n    this.errorHandler_ = errorHandler_;\n    this.requiresObservable_ = requiresObservable_;\n  }\n\n  var _proto = Reaction.prototype;\n\n  _proto.onBecomeStale_ = function onBecomeStale_() {\n    this.schedule_();\n  };\n\n  _proto.schedule_ = function schedule_() {\n    if (!this.isScheduled_) {\n      this.isScheduled_ = true;\n      globalState.pendingReactions.push(this);\n      runReactions();\n    }\n  };\n\n  _proto.isScheduled = function isScheduled() {\n    return this.isScheduled_;\n  }\n  /**\n   * internal, use schedule() if you intend to kick off a reaction\n   */\n  ;\n\n  _proto.runReaction_ = function runReaction_() {\n    if (!this.isDisposed_) {\n      startBatch();\n      this.isScheduled_ = false;\n      var prev = globalState.trackingContext;\n      globalState.trackingContext = this;\n\n      if (shouldCompute(this)) {\n        this.isTrackPending_ = true;\n\n        try {\n          this.onInvalidate_();\n\n          if (  true && this.isTrackPending_ && isSpyEnabled()) {\n            // onInvalidate didn't trigger track right away..\n            spyReport({\n              name: this.name_,\n              type: \"scheduled-reaction\"\n            });\n          }\n        } catch (e) {\n          this.reportExceptionInDerivation_(e);\n        }\n      }\n\n      globalState.trackingContext = prev;\n      endBatch();\n    }\n  };\n\n  _proto.track = function track(fn) {\n    if (this.isDisposed_) {\n      return; // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n    }\n\n    startBatch();\n    var notify = isSpyEnabled();\n    var startTime;\n\n    if (  true && notify) {\n      startTime = Date.now();\n      spyReportStart({\n        name: this.name_,\n        type: \"reaction\"\n      });\n    }\n\n    this.isRunning_ = true;\n    var prevReaction = globalState.trackingContext; // reactions could create reactions...\n\n    globalState.trackingContext = this;\n    var result = trackDerivedFunction(this, fn, undefined);\n    globalState.trackingContext = prevReaction;\n    this.isRunning_ = false;\n    this.isTrackPending_ = false;\n\n    if (this.isDisposed_) {\n      // disposed during last run. Clean up everything that was bound after the dispose call.\n      clearObserving(this);\n    }\n\n    if (isCaughtException(result)) {\n      this.reportExceptionInDerivation_(result.cause);\n    }\n\n    if (  true && notify) {\n      spyReportEnd({\n        time: Date.now() - startTime\n      });\n    }\n\n    endBatch();\n  };\n\n  _proto.reportExceptionInDerivation_ = function reportExceptionInDerivation_(error) {\n    var _this = this;\n\n    if (this.errorHandler_) {\n      this.errorHandler_(error, this);\n      return;\n    }\n\n    if (globalState.disableErrorBoundaries) {\n      throw error;\n    }\n\n    var message =   true ? \"[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '\" + this + \"'\" : 0;\n\n    if (!globalState.suppressReactionErrors) {\n      console.error(message, error);\n      /** If debugging brought you here, please, read the above message :-). Tnx! */\n    } else if (true) {\n      console.warn(\"[mobx] (error in reaction '\" + this.name_ + \"' suppressed, fix error of causing action below)\");\n    } // prettier-ignore\n\n\n    if (  true && isSpyEnabled()) {\n      spyReport({\n        type: \"error\",\n        name: this.name_,\n        message: message,\n        error: \"\" + error\n      });\n    }\n\n    globalState.globalReactionErrorHandlers.forEach(function (f) {\n      return f(error, _this);\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    if (!this.isDisposed_) {\n      this.isDisposed_ = true;\n\n      if (!this.isRunning_) {\n        // if disposed while running, clean up later. Maybe not optimal, but rare case\n        startBatch();\n        clearObserving(this);\n        endBatch();\n      }\n    }\n  };\n\n  _proto.getDisposer_ = function getDisposer_() {\n    var r = this.dispose.bind(this);\n    r[$mobx] = this;\n    return r;\n  };\n\n  _proto.toString = function toString() {\n    return \"Reaction[\" + this.name_ + \"]\";\n  };\n\n  _proto.trace = function trace$1(enterBreakPoint) {\n    if (enterBreakPoint === void 0) {\n      enterBreakPoint = false;\n    }\n\n    trace(this, enterBreakPoint);\n  };\n\n  return Reaction;\n}();\n\nfunction onReactionError(handler) {\n  globalState.globalReactionErrorHandlers.push(handler);\n  return function () {\n    var idx = globalState.globalReactionErrorHandlers.indexOf(handler);\n\n    if (idx >= 0) {\n      globalState.globalReactionErrorHandlers.splice(idx, 1);\n    }\n  };\n}\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\n\n\nvar MAX_REACTION_ITERATIONS = 100;\n\nvar reactionScheduler = function reactionScheduler(f) {\n  return f();\n};\n\nfunction runReactions() {\n  // Trampolining, if runReactions are already running, new reactions will be picked up\n  if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n    return;\n  }\n\n  reactionScheduler(runReactionsHelper);\n}\n\nfunction runReactionsHelper() {\n  globalState.isRunningReactions = true;\n  var allReactions = globalState.pendingReactions;\n  var iterations = 0; // While running reactions, new reactions might be triggered.\n  // Hence we work with two variables and check whether\n  // we converge to no remaining reactions after a while.\n\n  while (allReactions.length > 0) {\n    if (++iterations === MAX_REACTION_ITERATIONS) {\n      console.error(  true ? \"Reaction doesn't converge to a stable state after \" + MAX_REACTION_ITERATIONS + \" iterations.\" + (\" Probably there is a cycle in the reactive function: \" + allReactions[0]) : 0);\n      allReactions.splice(0); // clear reactions\n    }\n\n    var remainingReactions = allReactions.splice(0);\n\n    for (var i = 0, l = remainingReactions.length; i < l; i++) {\n      remainingReactions[i].runReaction_();\n    }\n  }\n\n  globalState.isRunningReactions = false;\n}\n\nvar isReaction = /*#__PURE__*/createInstanceofPredicate(\"Reaction\", Reaction);\n\nfunction setReactionScheduler(fn) {\n  var baseScheduler = reactionScheduler;\n\n  reactionScheduler = function reactionScheduler(f) {\n    return fn(function () {\n      return baseScheduler(f);\n    });\n  };\n}\n\nfunction isSpyEnabled() {\n  return   true && !!globalState.spyListeners.length;\n}\n\nfunction spyReport(event) {\n  if (false) {} // dead code elimination can do the rest\n\n\n  if (!globalState.spyListeners.length) {\n    return;\n  }\n\n  var listeners = globalState.spyListeners;\n\n  for (var i = 0, l = listeners.length; i < l; i++) {\n    listeners[i](event);\n  }\n}\n\nfunction spyReportStart(event) {\n  if (false) {}\n\n  var change = _extends({}, event, {\n    spyReportStart: true\n  });\n\n  spyReport(change);\n}\n\nvar END_EVENT = {\n  type: \"report-end\",\n  spyReportEnd: true\n};\n\nfunction spyReportEnd(change) {\n  if (false) {}\n\n  if (change) {\n    spyReport(_extends({}, change, {\n      type: \"report-end\",\n      spyReportEnd: true\n    }));\n  } else {\n    spyReport(END_EVENT);\n  }\n}\n\nfunction spy(listener) {\n  if (false) {} else {\n    globalState.spyListeners.push(listener);\n    return once(function () {\n      globalState.spyListeners = globalState.spyListeners.filter(function (l) {\n        return l !== listener;\n      });\n    });\n  }\n}\n\nvar ACTION = \"action\";\nvar ACTION_BOUND = \"action.bound\";\nvar AUTOACTION = \"autoAction\";\nvar AUTOACTION_BOUND = \"autoAction.bound\";\nvar DEFAULT_ACTION_NAME = \"<unnamed action>\";\nvar actionAnnotation = /*#__PURE__*/createActionAnnotation(ACTION);\nvar actionBoundAnnotation = /*#__PURE__*/createActionAnnotation(ACTION_BOUND, {\n  bound: true\n});\nvar autoActionAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION, {\n  autoAction: true\n});\nvar autoActionBoundAnnotation = /*#__PURE__*/createActionAnnotation(AUTOACTION_BOUND, {\n  autoAction: true,\n  bound: true\n});\n\nfunction createActionFactory(autoAction) {\n  var res = function action(arg1, arg2) {\n    // action(fn() {})\n    if (isFunction(arg1)) {\n      return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction);\n    } // action(\"name\", fn() {})\n\n\n    if (isFunction(arg2)) {\n      return createAction(arg1, arg2, autoAction);\n    } // @action\n\n\n    if (isStringish(arg2)) {\n      return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation);\n    } // action(\"name\") & @action(\"name\")\n\n\n    if (isStringish(arg1)) {\n      return createDecoratorAnnotation(createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n        name: arg1,\n        autoAction: autoAction\n      }));\n    }\n\n    if (true) {\n      die(\"Invalid arguments for `action`\");\n    }\n  };\n\n  return res;\n}\n\nvar action = /*#__PURE__*/createActionFactory(false);\nObject.assign(action, actionAnnotation);\nvar autoAction = /*#__PURE__*/createActionFactory(true);\nObject.assign(autoAction, autoActionAnnotation);\naction.bound = /*#__PURE__*/createDecoratorAnnotation(actionBoundAnnotation);\nautoAction.bound = /*#__PURE__*/createDecoratorAnnotation(autoActionBoundAnnotation);\n\nfunction runInAction(fn) {\n  return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined);\n}\n\nfunction isAction(thing) {\n  return isFunction(thing) && thing.isMobxAction === true;\n}\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\n\n\nfunction autorun(view, opts) {\n  var _opts$name, _opts;\n\n  if (opts === void 0) {\n    opts = EMPTY_OBJECT;\n  }\n\n  if (true) {\n    if (!isFunction(view)) {\n      die(\"Autorun expects a function as first argument\");\n    }\n\n    if (isAction(view)) {\n      die(\"Autorun does not accept actions since actions are untrackable\");\n    }\n  }\n\n  var name = (_opts$name = (_opts = opts) == null ? void 0 : _opts.name) != null ? _opts$name :   true ? view.name || \"Autorun@\" + getNextId() : 0;\n  var runSync = !opts.scheduler && !opts.delay;\n  var reaction;\n\n  if (runSync) {\n    // normal autorun\n    reaction = new Reaction(name, function () {\n      this.track(reactionRunner);\n    }, opts.onError, opts.requiresObservable);\n  } else {\n    var scheduler = createSchedulerFromOptions(opts); // debounced autorun\n\n    var isScheduled = false;\n    reaction = new Reaction(name, function () {\n      if (!isScheduled) {\n        isScheduled = true;\n        scheduler(function () {\n          isScheduled = false;\n\n          if (!reaction.isDisposed_) {\n            reaction.track(reactionRunner);\n          }\n        });\n      }\n    }, opts.onError, opts.requiresObservable);\n  }\n\n  function reactionRunner() {\n    view(reaction);\n  }\n\n  reaction.schedule_();\n  return reaction.getDisposer_();\n}\n\nvar run = function run(f) {\n  return f();\n};\n\nfunction createSchedulerFromOptions(opts) {\n  return opts.scheduler ? opts.scheduler : opts.delay ? function (f) {\n    return setTimeout(f, opts.delay);\n  } : run;\n}\n\nfunction reaction(expression, effect, opts) {\n  var _opts$name2;\n\n  if (opts === void 0) {\n    opts = EMPTY_OBJECT;\n  }\n\n  if (true) {\n    if (!isFunction(expression) || !isFunction(effect)) {\n      die(\"First and second argument to reaction should be functions\");\n    }\n\n    if (!isPlainObject(opts)) {\n      die(\"Third argument of reactions should be an object\");\n    }\n  }\n\n  var name = (_opts$name2 = opts.name) != null ? _opts$name2 :   true ? \"Reaction@\" + getNextId() : 0;\n  var effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\n  var runSync = !opts.scheduler && !opts.delay;\n  var scheduler = createSchedulerFromOptions(opts);\n  var firstTime = true;\n  var isScheduled = false;\n  var value;\n  var oldValue;\n  var equals = opts.compareStructural ? comparer.structural : opts.equals || comparer[\"default\"];\n  var r = new Reaction(name, function () {\n    if (firstTime || runSync) {\n      reactionRunner();\n    } else if (!isScheduled) {\n      isScheduled = true;\n      scheduler(reactionRunner);\n    }\n  }, opts.onError, opts.requiresObservable);\n\n  function reactionRunner() {\n    isScheduled = false;\n\n    if (r.isDisposed_) {\n      return;\n    }\n\n    var changed = false;\n    r.track(function () {\n      var nextValue = allowStateChanges(false, function () {\n        return expression(r);\n      });\n      changed = firstTime || !equals(value, nextValue);\n      oldValue = value;\n      value = nextValue;\n    });\n\n    if (firstTime && opts.fireImmediately) {\n      effectAction(value, oldValue, r);\n    } else if (!firstTime && changed) {\n      effectAction(value, oldValue, r);\n    }\n\n    firstTime = false;\n  }\n\n  r.schedule_();\n  return r.getDisposer_();\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n  return function () {\n    try {\n      return baseFn.apply(this, arguments);\n    } catch (e) {\n      errorHandler.call(this, e);\n    }\n  };\n}\n\nvar ON_BECOME_OBSERVED = \"onBO\";\nvar ON_BECOME_UNOBSERVED = \"onBUO\";\n\nfunction onBecomeObserved(thing, arg2, arg3) {\n  return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);\n}\n\nfunction onBecomeUnobserved(thing, arg2, arg3) {\n  return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);\n}\n\nfunction interceptHook(hook, thing, arg2, arg3) {\n  var atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\n  var cb = isFunction(arg3) ? arg3 : arg2;\n  var listenersKey = hook + \"L\";\n\n  if (atom[listenersKey]) {\n    atom[listenersKey].add(cb);\n  } else {\n    atom[listenersKey] = new Set([cb]);\n  }\n\n  return function () {\n    var hookListeners = atom[listenersKey];\n\n    if (hookListeners) {\n      hookListeners[\"delete\"](cb);\n\n      if (hookListeners.size === 0) {\n        delete atom[listenersKey];\n      }\n    }\n  };\n}\n\nvar NEVER = \"never\";\nvar ALWAYS = \"always\";\nvar OBSERVED = \"observed\"; // const IF_AVAILABLE = \"ifavailable\"\n\nfunction configure(options) {\n  if (options.isolateGlobalState === true) {\n    isolateGlobalState();\n  }\n\n  var useProxies = options.useProxies,\n      enforceActions = options.enforceActions;\n\n  if (useProxies !== undefined) {\n    globalState.useProxies = useProxies === ALWAYS ? true : useProxies === NEVER ? false : typeof Proxy !== \"undefined\";\n  }\n\n  if (useProxies === \"ifavailable\") {\n    globalState.verifyProxies = true;\n  }\n\n  if (enforceActions !== undefined) {\n    var ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED;\n    globalState.enforceActions = ea;\n    globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true;\n  }\n\n  [\"computedRequiresReaction\", \"reactionRequiresObservable\", \"observableRequiresReaction\", \"disableErrorBoundaries\", \"safeDescriptors\"].forEach(function (key) {\n    if (key in options) {\n      globalState[key] = !!options[key];\n    }\n  });\n  globalState.allowStateReads = !globalState.observableRequiresReaction;\n\n  if (  true && globalState.disableErrorBoundaries === true) {\n    console.warn(\"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\");\n  }\n\n  if (options.reactionScheduler) {\n    setReactionScheduler(options.reactionScheduler);\n  }\n}\n\nfunction extendObservable(target, properties, annotations, options) {\n  if (true) {\n    if (arguments.length > 4) {\n      die(\"'extendObservable' expected 2-4 arguments\");\n    }\n\n    if (typeof target !== \"object\") {\n      die(\"'extendObservable' expects an object as first argument\");\n    }\n\n    if (isObservableMap(target)) {\n      die(\"'extendObservable' should not be used on maps, use map.merge instead\");\n    }\n\n    if (!isPlainObject(properties)) {\n      die(\"'extendObservable' only accepts plain objects as second argument\");\n    }\n\n    if (isObservable(properties) || isObservable(annotations)) {\n      die(\"Extending an object with another observable (object) is not supported\");\n    }\n  } // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n\n\n  var descriptors = getOwnPropertyDescriptors(properties);\n  var adm = asObservableObject(target, options)[$mobx];\n  startBatch();\n\n  try {\n    ownKeys(descriptors).forEach(function (key) {\n      adm.extend_(key, descriptors[key], // must pass \"undefined\" for { key: undefined }\n      !annotations ? true : key in annotations ? annotations[key] : true);\n    });\n  } finally {\n    endBatch();\n  }\n\n  return target;\n}\n\nfunction getDependencyTree(thing, property) {\n  return nodeToDependencyTree(getAtom(thing, property));\n}\n\nfunction nodeToDependencyTree(node) {\n  var result = {\n    name: node.name_\n  };\n\n  if (node.observing_ && node.observing_.length > 0) {\n    result.dependencies = unique(node.observing_).map(nodeToDependencyTree);\n  }\n\n  return result;\n}\n\nfunction getObserverTree(thing, property) {\n  return nodeToObserverTree(getAtom(thing, property));\n}\n\nfunction nodeToObserverTree(node) {\n  var result = {\n    name: node.name_\n  };\n\n  if (hasObservers(node)) {\n    result.observers = Array.from(getObservers(node)).map(nodeToObserverTree);\n  }\n\n  return result;\n}\n\nfunction unique(list) {\n  return Array.from(new Set(list));\n}\n\nvar generatorId = 0;\n\nfunction FlowCancellationError() {\n  this.message = \"FLOW_CANCELLED\";\n}\n\nFlowCancellationError.prototype = /*#__PURE__*/Object.create(Error.prototype);\n\nfunction isFlowCancellationError(error) {\n  return error instanceof FlowCancellationError;\n}\n\nvar flowAnnotation = /*#__PURE__*/createFlowAnnotation(\"flow\");\nvar flowBoundAnnotation = /*#__PURE__*/createFlowAnnotation(\"flow.bound\", {\n  bound: true\n});\nvar flow = /*#__PURE__*/Object.assign(function flow(arg1, arg2) {\n  // @flow\n  if (isStringish(arg2)) {\n    return storeAnnotation(arg1, arg2, flowAnnotation);\n  } // flow(fn)\n\n\n  if (  true && arguments.length !== 1) {\n    die(\"Flow expects single argument with generator function\");\n  }\n\n  var generator = arg1;\n  var name = generator.name || \"<unnamed flow>\"; // Implementation based on https://github.com/tj/co/blob/master/index.js\n\n  var res = function res() {\n    var ctx = this;\n    var args = arguments;\n    var runId = ++generatorId;\n    var gen = action(name + \" - runid: \" + runId + \" - init\", generator).apply(ctx, args);\n    var rejector;\n    var pendingPromise = undefined;\n    var promise = new Promise(function (resolve, reject) {\n      var stepId = 0;\n      rejector = reject;\n\n      function onFulfilled(res) {\n        pendingPromise = undefined;\n        var ret;\n\n        try {\n          ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen.next).call(gen, res);\n        } catch (e) {\n          return reject(e);\n        }\n\n        next(ret);\n      }\n\n      function onRejected(err) {\n        pendingPromise = undefined;\n        var ret;\n\n        try {\n          ret = action(name + \" - runid: \" + runId + \" - yield \" + stepId++, gen[\"throw\"]).call(gen, err);\n        } catch (e) {\n          return reject(e);\n        }\n\n        next(ret);\n      }\n\n      function next(ret) {\n        if (isFunction(ret == null ? void 0 : ret.then)) {\n          // an async iterator\n          ret.then(next, reject);\n          return;\n        }\n\n        if (ret.done) {\n          return resolve(ret.value);\n        }\n\n        pendingPromise = Promise.resolve(ret.value);\n        return pendingPromise.then(onFulfilled, onRejected);\n      }\n\n      onFulfilled(undefined); // kick off the process\n    });\n    promise.cancel = action(name + \" - runid: \" + runId + \" - cancel\", function () {\n      try {\n        if (pendingPromise) {\n          cancelPromise(pendingPromise);\n        } // Finally block can return (or yield) stuff..\n\n\n        var _res = gen[\"return\"](undefined); // eat anything that promise would do, it's cancelled!\n\n\n        var yieldedPromise = Promise.resolve(_res.value);\n        yieldedPromise.then(noop, noop);\n        cancelPromise(yieldedPromise); // maybe it can be cancelled :)\n        // reject our original promise\n\n        rejector(new FlowCancellationError());\n      } catch (e) {\n        rejector(e); // there could be a throwing finally block\n      }\n    });\n    return promise;\n  };\n\n  res.isMobXFlow = true;\n  return res;\n}, flowAnnotation);\nflow.bound = /*#__PURE__*/createDecoratorAnnotation(flowBoundAnnotation);\n\nfunction cancelPromise(promise) {\n  if (isFunction(promise.cancel)) {\n    promise.cancel();\n  }\n}\n\nfunction flowResult(result) {\n  return result; // just tricking TypeScript :)\n}\n\nfunction isFlow(fn) {\n  return (fn == null ? void 0 : fn.isMobXFlow) === true;\n}\n\nfunction interceptReads(thing, propOrHandler, handler) {\n  var target;\n\n  if (isObservableMap(thing) || isObservableArray(thing) || isObservableValue(thing)) {\n    target = getAdministration(thing);\n  } else if (isObservableObject(thing)) {\n    if (  true && !isStringish(propOrHandler)) {\n      return die(\"InterceptReads can only be used with a specific property, not with an object in general\");\n    }\n\n    target = getAdministration(thing, propOrHandler);\n  } else if (true) {\n    return die(\"Expected observable map, object or array as first array\");\n  }\n\n  if (  true && target.dehancer !== undefined) {\n    return die(\"An intercept reader was already established\");\n  }\n\n  target.dehancer = typeof propOrHandler === \"function\" ? propOrHandler : handler;\n  return function () {\n    target.dehancer = undefined;\n  };\n}\n\nfunction intercept(thing, propOrHandler, handler) {\n  if (isFunction(handler)) {\n    return interceptProperty(thing, propOrHandler, handler);\n  } else {\n    return interceptInterceptable(thing, propOrHandler);\n  }\n}\n\nfunction interceptInterceptable(thing, handler) {\n  return getAdministration(thing).intercept_(handler);\n}\n\nfunction interceptProperty(thing, property, handler) {\n  return getAdministration(thing, property).intercept_(handler);\n}\n\nfunction _isComputed(value, property) {\n  if (property === undefined) {\n    return isComputedValue(value);\n  }\n\n  if (isObservableObject(value) === false) {\n    return false;\n  }\n\n  if (!value[$mobx].values_.has(property)) {\n    return false;\n  }\n\n  var atom = getAtom(value, property);\n  return isComputedValue(atom);\n}\n\nfunction isComputed(value) {\n  if (  true && arguments.length > 1) {\n    return die(\"isComputed expects only 1 argument. Use isComputedProp to inspect the observability of a property\");\n  }\n\n  return _isComputed(value);\n}\n\nfunction isComputedProp(value, propName) {\n  if (  true && !isStringish(propName)) {\n    return die(\"isComputed expected a property name as second argument\");\n  }\n\n  return _isComputed(value, propName);\n}\n\nfunction _isObservable(value, property) {\n  if (!value) {\n    return false;\n  }\n\n  if (property !== undefined) {\n    if (  true && (isObservableMap(value) || isObservableArray(value))) {\n      return die(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\n    }\n\n    if (isObservableObject(value)) {\n      return value[$mobx].values_.has(property);\n    }\n\n    return false;\n  } // For first check, see #701\n\n\n  return isObservableObject(value) || !!value[$mobx] || isAtom(value) || isReaction(value) || isComputedValue(value);\n}\n\nfunction isObservable(value) {\n  if (  true && arguments.length !== 1) {\n    die(\"isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property\");\n  }\n\n  return _isObservable(value);\n}\n\nfunction isObservableProp(value, propName) {\n  if (  true && !isStringish(propName)) {\n    return die(\"expected a property name as second argument\");\n  }\n\n  return _isObservable(value, propName);\n}\n\nfunction keys(obj) {\n  if (isObservableObject(obj)) {\n    return obj[$mobx].keys_();\n  }\n\n  if (isObservableMap(obj) || isObservableSet(obj)) {\n    return Array.from(obj.keys());\n  }\n\n  if (isObservableArray(obj)) {\n    return obj.map(function (_, index) {\n      return index;\n    });\n  }\n\n  die(5);\n}\n\nfunction values(obj) {\n  if (isObservableObject(obj)) {\n    return keys(obj).map(function (key) {\n      return obj[key];\n    });\n  }\n\n  if (isObservableMap(obj)) {\n    return keys(obj).map(function (key) {\n      return obj.get(key);\n    });\n  }\n\n  if (isObservableSet(obj)) {\n    return Array.from(obj.values());\n  }\n\n  if (isObservableArray(obj)) {\n    return obj.slice();\n  }\n\n  die(6);\n}\n\nfunction entries(obj) {\n  if (isObservableObject(obj)) {\n    return keys(obj).map(function (key) {\n      return [key, obj[key]];\n    });\n  }\n\n  if (isObservableMap(obj)) {\n    return keys(obj).map(function (key) {\n      return [key, obj.get(key)];\n    });\n  }\n\n  if (isObservableSet(obj)) {\n    return Array.from(obj.entries());\n  }\n\n  if (isObservableArray(obj)) {\n    return obj.map(function (key, index) {\n      return [index, key];\n    });\n  }\n\n  die(7);\n}\n\nfunction set(obj, key, value) {\n  if (arguments.length === 2 && !isObservableSet(obj)) {\n    startBatch();\n    var _values = key;\n\n    try {\n      for (var _key in _values) {\n        set(obj, _key, _values[_key]);\n      }\n    } finally {\n      endBatch();\n    }\n\n    return;\n  }\n\n  if (isObservableObject(obj)) {\n    obj[$mobx].set_(key, value);\n  } else if (isObservableMap(obj)) {\n    obj.set(key, value);\n  } else if (isObservableSet(obj)) {\n    obj.add(key);\n  } else if (isObservableArray(obj)) {\n    if (typeof key !== \"number\") {\n      key = parseInt(key, 10);\n    }\n\n    if (key < 0) {\n      die(\"Invalid index: '\" + key + \"'\");\n    }\n\n    startBatch();\n\n    if (key >= obj.length) {\n      obj.length = key + 1;\n    }\n\n    obj[key] = value;\n    endBatch();\n  } else {\n    die(8);\n  }\n}\n\nfunction remove(obj, key) {\n  if (isObservableObject(obj)) {\n    obj[$mobx].delete_(key);\n  } else if (isObservableMap(obj)) {\n    obj[\"delete\"](key);\n  } else if (isObservableSet(obj)) {\n    obj[\"delete\"](key);\n  } else if (isObservableArray(obj)) {\n    if (typeof key !== \"number\") {\n      key = parseInt(key, 10);\n    }\n\n    obj.splice(key, 1);\n  } else {\n    die(9);\n  }\n}\n\nfunction has(obj, key) {\n  if (isObservableObject(obj)) {\n    return obj[$mobx].has_(key);\n  } else if (isObservableMap(obj)) {\n    return obj.has(key);\n  } else if (isObservableSet(obj)) {\n    return obj.has(key);\n  } else if (isObservableArray(obj)) {\n    return key >= 0 && key < obj.length;\n  }\n\n  die(10);\n}\n\nfunction get(obj, key) {\n  if (!has(obj, key)) {\n    return undefined;\n  }\n\n  if (isObservableObject(obj)) {\n    return obj[$mobx].get_(key);\n  } else if (isObservableMap(obj)) {\n    return obj.get(key);\n  } else if (isObservableArray(obj)) {\n    return obj[key];\n  }\n\n  die(11);\n}\n\nfunction apiDefineProperty(obj, key, descriptor) {\n  if (isObservableObject(obj)) {\n    return obj[$mobx].defineProperty_(key, descriptor);\n  }\n\n  die(39);\n}\n\nfunction apiOwnKeys(obj) {\n  if (isObservableObject(obj)) {\n    return obj[$mobx].ownKeys_();\n  }\n\n  die(38);\n}\n\nfunction observe(thing, propOrCb, cbOrFire, fireImmediately) {\n  if (isFunction(cbOrFire)) {\n    return observeObservableProperty(thing, propOrCb, cbOrFire, fireImmediately);\n  } else {\n    return observeObservable(thing, propOrCb, cbOrFire);\n  }\n}\n\nfunction observeObservable(thing, listener, fireImmediately) {\n  return getAdministration(thing).observe_(listener, fireImmediately);\n}\n\nfunction observeObservableProperty(thing, property, listener, fireImmediately) {\n  return getAdministration(thing, property).observe_(listener, fireImmediately);\n}\n\nfunction cache(map, key, value) {\n  map.set(key, value);\n  return value;\n}\n\nfunction toJSHelper(source, __alreadySeen) {\n  if (source == null || typeof source !== \"object\" || source instanceof Date || !isObservable(source)) {\n    return source;\n  }\n\n  if (isObservableValue(source) || isComputedValue(source)) {\n    return toJSHelper(source.get(), __alreadySeen);\n  }\n\n  if (__alreadySeen.has(source)) {\n    return __alreadySeen.get(source);\n  }\n\n  if (isObservableArray(source)) {\n    var res = cache(__alreadySeen, source, new Array(source.length));\n    source.forEach(function (value, idx) {\n      res[idx] = toJSHelper(value, __alreadySeen);\n    });\n    return res;\n  }\n\n  if (isObservableSet(source)) {\n    var _res = cache(__alreadySeen, source, new Set());\n\n    source.forEach(function (value) {\n      _res.add(toJSHelper(value, __alreadySeen));\n    });\n    return _res;\n  }\n\n  if (isObservableMap(source)) {\n    var _res2 = cache(__alreadySeen, source, new Map());\n\n    source.forEach(function (value, key) {\n      _res2.set(key, toJSHelper(value, __alreadySeen));\n    });\n    return _res2;\n  } else {\n    // must be observable object\n    var _res3 = cache(__alreadySeen, source, {});\n\n    apiOwnKeys(source).forEach(function (key) {\n      if (objectPrototype.propertyIsEnumerable.call(source, key)) {\n        _res3[key] = toJSHelper(source[key], __alreadySeen);\n      }\n    });\n    return _res3;\n  }\n}\n/**\n * Recursively converts an observable to it's non-observable native counterpart.\n * It does NOT recurse into non-observables, these are left as they are, even if they contain observables.\n * Computed and other non-enumerable properties are completely ignored.\n * Complex scenarios require custom solution, eg implementing `toJSON` or using `serializr` lib.\n */\n\n\nfunction toJS(source, options) {\n  if (  true && options) {\n    die(\"toJS no longer supports options\");\n  }\n\n  return toJSHelper(source, new Map());\n}\n\nfunction trace() {\n  if (false) {}\n\n  var enterBreakPoint = false;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (typeof args[args.length - 1] === \"boolean\") {\n    enterBreakPoint = args.pop();\n  }\n\n  var derivation = getAtomFromArgs(args);\n\n  if (!derivation) {\n    return die(\"'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly\");\n  }\n\n  if (derivation.isTracing_ === TraceMode.NONE) {\n    console.log(\"[mobx.trace] '\" + derivation.name_ + \"' tracing enabled\");\n  }\n\n  derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG;\n}\n\nfunction getAtomFromArgs(args) {\n  switch (args.length) {\n    case 0:\n      return globalState.trackingDerivation;\n\n    case 1:\n      return getAtom(args[0]);\n\n    case 2:\n      return getAtom(args[0], args[1]);\n  }\n}\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\n\n\nfunction transaction(action, thisArg) {\n  if (thisArg === void 0) {\n    thisArg = undefined;\n  }\n\n  startBatch();\n\n  try {\n    return action.apply(thisArg);\n  } finally {\n    endBatch();\n  }\n}\n\nfunction when(predicate, arg1, arg2) {\n  if (arguments.length === 1 || arg1 && typeof arg1 === \"object\") {\n    return whenPromise(predicate, arg1);\n  }\n\n  return _when(predicate, arg1, arg2 || {});\n}\n\nfunction _when(predicate, effect, opts) {\n  var timeoutHandle;\n\n  if (typeof opts.timeout === \"number\") {\n    var error = new Error(\"WHEN_TIMEOUT\");\n    timeoutHandle = setTimeout(function () {\n      if (!disposer[$mobx].isDisposed_) {\n        disposer();\n\n        if (opts.onError) {\n          opts.onError(error);\n        } else {\n          throw error;\n        }\n      }\n    }, opts.timeout);\n  }\n\n  opts.name =   true ? opts.name || \"When@\" + getNextId() : 0;\n  var effectAction = createAction(  true ? opts.name + \"-effect\" : 0, effect); // eslint-disable-next-line\n\n  var disposer = autorun(function (r) {\n    // predicate should not change state\n    var cond = allowStateChanges(false, predicate);\n\n    if (cond) {\n      r.dispose();\n\n      if (timeoutHandle) {\n        clearTimeout(timeoutHandle);\n      }\n\n      effectAction();\n    }\n  }, opts);\n  return disposer;\n}\n\nfunction whenPromise(predicate, opts) {\n  if (  true && opts && opts.onError) {\n    return die(\"the options 'onError' and 'promise' cannot be combined\");\n  }\n\n  var cancel;\n  var res = new Promise(function (resolve, reject) {\n    var disposer = _when(predicate, resolve, _extends({}, opts, {\n      onError: reject\n    }));\n\n    cancel = function cancel() {\n      disposer();\n      reject(new Error(\"WHEN_CANCELLED\"));\n    };\n  });\n  res.cancel = cancel;\n  return res;\n}\n\nfunction getAdm(target) {\n  return target[$mobx];\n} // Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\n\n\nvar objectProxyTraps = {\n  has: function has(target, name) {\n    if (  true && globalState.trackingDerivation) {\n      warnAboutProxyRequirement(\"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\");\n    }\n\n    return getAdm(target).has_(name);\n  },\n  get: function get(target, name) {\n    return getAdm(target).get_(name);\n  },\n  set: function set(target, name, value) {\n    var _getAdm$set_;\n\n    if (!isStringish(name)) {\n      return false;\n    }\n\n    if (  true && !getAdm(target).values_.has(name)) {\n      warnAboutProxyRequirement(\"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\");\n    } // null (intercepted) -> true (success)\n\n\n    return (_getAdm$set_ = getAdm(target).set_(name, value, true)) != null ? _getAdm$set_ : true;\n  },\n  deleteProperty: function deleteProperty(target, name) {\n    var _getAdm$delete_;\n\n    if (true) {\n      warnAboutProxyRequirement(\"delete properties from an observable object. Use 'remove' from 'mobx' instead.\");\n    }\n\n    if (!isStringish(name)) {\n      return false;\n    } // null (intercepted) -> true (success)\n\n\n    return (_getAdm$delete_ = getAdm(target).delete_(name, true)) != null ? _getAdm$delete_ : true;\n  },\n  defineProperty: function defineProperty(target, name, descriptor) {\n    var _getAdm$definePropert;\n\n    if (true) {\n      warnAboutProxyRequirement(\"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\");\n    } // null (intercepted) -> true (success)\n\n\n    return (_getAdm$definePropert = getAdm(target).defineProperty_(name, descriptor)) != null ? _getAdm$definePropert : true;\n  },\n  ownKeys: function ownKeys(target) {\n    if (  true && globalState.trackingDerivation) {\n      warnAboutProxyRequirement(\"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\");\n    }\n\n    return getAdm(target).ownKeys_();\n  },\n  preventExtensions: function preventExtensions(target) {\n    die(13);\n  }\n};\n\nfunction asDynamicObservableObject(target, options) {\n  var _target$$mobx, _target$$mobx$proxy_;\n\n  assertProxies();\n  target = asObservableObject(target, options);\n  return (_target$$mobx$proxy_ = (_target$$mobx = target[$mobx]).proxy_) != null ? _target$$mobx$proxy_ : _target$$mobx.proxy_ = new Proxy(target, objectProxyTraps);\n}\n\nfunction hasInterceptors(interceptable) {\n  return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0;\n}\n\nfunction registerInterceptor(interceptable, handler) {\n  var interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = []);\n  interceptors.push(handler);\n  return once(function () {\n    var idx = interceptors.indexOf(handler);\n\n    if (idx !== -1) {\n      interceptors.splice(idx, 1);\n    }\n  });\n}\n\nfunction interceptChange(interceptable, change) {\n  var prevU = untrackedStart();\n\n  try {\n    // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n    var interceptors = [].concat(interceptable.interceptors_ || []);\n\n    for (var i = 0, l = interceptors.length; i < l; i++) {\n      change = interceptors[i](change);\n\n      if (change && !change.type) {\n        die(14);\n      }\n\n      if (!change) {\n        break;\n      }\n    }\n\n    return change;\n  } finally {\n    untrackedEnd(prevU);\n  }\n}\n\nfunction hasListeners(listenable) {\n  return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0;\n}\n\nfunction registerListener(listenable, handler) {\n  var listeners = listenable.changeListeners_ || (listenable.changeListeners_ = []);\n  listeners.push(handler);\n  return once(function () {\n    var idx = listeners.indexOf(handler);\n\n    if (idx !== -1) {\n      listeners.splice(idx, 1);\n    }\n  });\n}\n\nfunction notifyListeners(listenable, change) {\n  var prevU = untrackedStart();\n  var listeners = listenable.changeListeners_;\n\n  if (!listeners) {\n    return;\n  }\n\n  listeners = listeners.slice();\n\n  for (var i = 0, l = listeners.length; i < l; i++) {\n    listeners[i](change);\n  }\n\n  untrackedEnd(prevU);\n}\n\nfunction makeObservable(target, annotations, options) {\n  var adm = asObservableObject(target, options)[$mobx];\n  startBatch();\n\n  try {\n    var _annotations;\n\n    if (  true && annotations && target[storedAnnotationsSymbol]) {\n      die(\"makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.\");\n    } // Default to decorators\n\n\n    (_annotations = annotations) != null ? _annotations : annotations = collectStoredAnnotations(target); // Annotate\n\n    ownKeys(annotations).forEach(function (key) {\n      return adm.make_(key, annotations[key]);\n    });\n  } finally {\n    endBatch();\n  }\n\n  return target;\n} // proto[keysSymbol] = new Set<PropertyKey>()\n\n\nvar keysSymbol = /*#__PURE__*/Symbol(\"mobx-keys\");\n\nfunction makeAutoObservable(target, overrides, options) {\n  if (true) {\n    if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n      die(\"'makeAutoObservable' can only be used for classes that don't have a superclass\");\n    }\n\n    if (isObservableObject(target)) {\n      die(\"makeAutoObservable can only be used on objects not already made observable\");\n    }\n  } // Optimization: avoid visiting protos\n  // Assumes that annotation.make_/.extend_ works the same for plain objects\n\n\n  if (isPlainObject(target)) {\n    return extendObservable(target, target, overrides, options);\n  }\n\n  var adm = asObservableObject(target, options)[$mobx]; // Optimization: cache keys on proto\n  // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n\n  if (!target[keysSymbol]) {\n    var proto = Object.getPrototypeOf(target);\n    var keys = new Set([].concat(ownKeys(target), ownKeys(proto)));\n    keys[\"delete\"](\"constructor\");\n    keys[\"delete\"]($mobx);\n    addHiddenProp(proto, keysSymbol, keys);\n  }\n\n  startBatch();\n\n  try {\n    target[keysSymbol].forEach(function (key) {\n      return adm.make_(key, // must pass \"undefined\" for { key: undefined }\n      !overrides ? true : key in overrides ? overrides[key] : true);\n    });\n  } finally {\n    endBatch();\n  }\n\n  return target;\n}\n\nvar SPLICE = \"splice\";\nvar UPDATE = \"update\";\nvar MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nvar arrayTraps = {\n  get: function get(target, name) {\n    var adm = target[$mobx];\n\n    if (name === $mobx) {\n      return adm;\n    }\n\n    if (name === \"length\") {\n      return adm.getArrayLength_();\n    }\n\n    if (typeof name === \"string\" && !isNaN(name)) {\n      return adm.get_(parseInt(name));\n    }\n\n    if (hasProp(arrayExtensions, name)) {\n      return arrayExtensions[name];\n    }\n\n    return target[name];\n  },\n  set: function set(target, name, value) {\n    var adm = target[$mobx];\n\n    if (name === \"length\") {\n      adm.setArrayLength_(value);\n    }\n\n    if (typeof name === \"symbol\" || isNaN(name)) {\n      target[name] = value;\n    } else {\n      // numeric string\n      adm.set_(parseInt(name), value);\n    }\n\n    return true;\n  },\n  preventExtensions: function preventExtensions() {\n    die(15);\n  }\n};\n\nvar ObservableArrayAdministration = /*#__PURE__*/function () {\n  // this is the prop that gets proxied, so can't replace it!\n  function ObservableArrayAdministration(name, enhancer, owned_, legacyMode_) {\n    if (name === void 0) {\n      name =   true ? \"ObservableArray@\" + getNextId() : 0;\n    }\n\n    this.owned_ = void 0;\n    this.legacyMode_ = void 0;\n    this.atom_ = void 0;\n    this.values_ = [];\n    this.interceptors_ = void 0;\n    this.changeListeners_ = void 0;\n    this.enhancer_ = void 0;\n    this.dehancer = void 0;\n    this.proxy_ = void 0;\n    this.lastKnownLength_ = 0;\n    this.owned_ = owned_;\n    this.legacyMode_ = legacyMode_;\n    this.atom_ = new Atom(name);\n\n    this.enhancer_ = function (newV, oldV) {\n      return enhancer(newV, oldV,   true ? name + \"[..]\" : 0);\n    };\n  }\n\n  var _proto = ObservableArrayAdministration.prototype;\n\n  _proto.dehanceValue_ = function dehanceValue_(value) {\n    if (this.dehancer !== undefined) {\n      return this.dehancer(value);\n    }\n\n    return value;\n  };\n\n  _proto.dehanceValues_ = function dehanceValues_(values) {\n    if (this.dehancer !== undefined && values.length > 0) {\n      return values.map(this.dehancer);\n    }\n\n    return values;\n  };\n\n  _proto.intercept_ = function intercept_(handler) {\n    return registerInterceptor(this, handler);\n  };\n\n  _proto.observe_ = function observe_(listener, fireImmediately) {\n    if (fireImmediately === void 0) {\n      fireImmediately = false;\n    }\n\n    if (fireImmediately) {\n      listener({\n        observableKind: \"array\",\n        object: this.proxy_,\n        debugObjectName: this.atom_.name_,\n        type: \"splice\",\n        index: 0,\n        added: this.values_.slice(),\n        addedCount: this.values_.length,\n        removed: [],\n        removedCount: 0\n      });\n    }\n\n    return registerListener(this, listener);\n  };\n\n  _proto.getArrayLength_ = function getArrayLength_() {\n    this.atom_.reportObserved();\n    return this.values_.length;\n  };\n\n  _proto.setArrayLength_ = function setArrayLength_(newLength) {\n    if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n      die(\"Out of range: \" + newLength);\n    }\n\n    var currentLength = this.values_.length;\n\n    if (newLength === currentLength) {\n      return;\n    } else if (newLength > currentLength) {\n      var newItems = new Array(newLength - currentLength);\n\n      for (var i = 0; i < newLength - currentLength; i++) {\n        newItems[i] = undefined;\n      } // No Array.fill everywhere...\n\n\n      this.spliceWithArray_(currentLength, 0, newItems);\n    } else {\n      this.spliceWithArray_(newLength, currentLength - newLength);\n    }\n  };\n\n  _proto.updateArrayLength_ = function updateArrayLength_(oldLength, delta) {\n    if (oldLength !== this.lastKnownLength_) {\n      die(16);\n    }\n\n    this.lastKnownLength_ += delta;\n\n    if (this.legacyMode_ && delta > 0) {\n      reserveArrayBuffer(oldLength + delta + 1);\n    }\n  };\n\n  _proto.spliceWithArray_ = function spliceWithArray_(index, deleteCount, newItems) {\n    var _this = this;\n\n    checkIfStateModificationsAreAllowed(this.atom_);\n    var length = this.values_.length;\n\n    if (index === undefined) {\n      index = 0;\n    } else if (index > length) {\n      index = length;\n    } else if (index < 0) {\n      index = Math.max(0, length + index);\n    }\n\n    if (arguments.length === 1) {\n      deleteCount = length - index;\n    } else if (deleteCount === undefined || deleteCount === null) {\n      deleteCount = 0;\n    } else {\n      deleteCount = Math.max(0, Math.min(deleteCount, length - index));\n    }\n\n    if (newItems === undefined) {\n      newItems = EMPTY_ARRAY;\n    }\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        object: this.proxy_,\n        type: SPLICE,\n        index: index,\n        removedCount: deleteCount,\n        added: newItems\n      });\n\n      if (!change) {\n        return EMPTY_ARRAY;\n      }\n\n      deleteCount = change.removedCount;\n      newItems = change.added;\n    }\n\n    newItems = newItems.length === 0 ? newItems : newItems.map(function (v) {\n      return _this.enhancer_(v, undefined);\n    });\n\n    if (this.legacyMode_ || \"development\" !== \"production\") {\n      var lengthDelta = newItems.length - deleteCount;\n      this.updateArrayLength_(length, lengthDelta); // checks if internal array wasn't modified\n    }\n\n    var res = this.spliceItemsIntoValues_(index, deleteCount, newItems);\n\n    if (deleteCount !== 0 || newItems.length !== 0) {\n      this.notifyArraySplice_(index, newItems, res);\n    }\n\n    return this.dehanceValues_(res);\n  };\n\n  _proto.spliceItemsIntoValues_ = function spliceItemsIntoValues_(index, deleteCount, newItems) {\n    if (newItems.length < MAX_SPLICE_SIZE) {\n      var _this$values_;\n\n      return (_this$values_ = this.values_).splice.apply(_this$values_, [index, deleteCount].concat(newItems));\n    } else {\n      // The items removed by the splice\n      var res = this.values_.slice(index, index + deleteCount); // The items that that should remain at the end of the array\n\n      var oldItems = this.values_.slice(index + deleteCount); // New length is the previous length + addition count - deletion count\n\n      this.values_.length += newItems.length - deleteCount;\n\n      for (var i = 0; i < newItems.length; i++) {\n        this.values_[index + i] = newItems[i];\n      }\n\n      for (var _i = 0; _i < oldItems.length; _i++) {\n        this.values_[index + newItems.length + _i] = oldItems[_i];\n      }\n\n      return res;\n    }\n  };\n\n  _proto.notifyArrayChildUpdate_ = function notifyArrayChildUpdate_(index, newValue, oldValue) {\n    var notifySpy = !this.owned_ && isSpyEnabled();\n    var notify = hasListeners(this);\n    var change = notify || notifySpy ? {\n      observableKind: \"array\",\n      object: this.proxy_,\n      type: UPDATE,\n      debugObjectName: this.atom_.name_,\n      index: index,\n      newValue: newValue,\n      oldValue: oldValue\n    } : null; // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n    // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n\n    if (  true && notifySpy) {\n      spyReportStart(change);\n    }\n\n    this.atom_.reportChanged();\n\n    if (notify) {\n      notifyListeners(this, change);\n    }\n\n    if (  true && notifySpy) {\n      spyReportEnd();\n    }\n  };\n\n  _proto.notifyArraySplice_ = function notifyArraySplice_(index, added, removed) {\n    var notifySpy = !this.owned_ && isSpyEnabled();\n    var notify = hasListeners(this);\n    var change = notify || notifySpy ? {\n      observableKind: \"array\",\n      object: this.proxy_,\n      debugObjectName: this.atom_.name_,\n      type: SPLICE,\n      index: index,\n      removed: removed,\n      added: added,\n      removedCount: removed.length,\n      addedCount: added.length\n    } : null;\n\n    if (  true && notifySpy) {\n      spyReportStart(change);\n    }\n\n    this.atom_.reportChanged(); // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n\n    if (notify) {\n      notifyListeners(this, change);\n    }\n\n    if (  true && notifySpy) {\n      spyReportEnd();\n    }\n  };\n\n  _proto.get_ = function get_(index) {\n    if (index < this.values_.length) {\n      this.atom_.reportObserved();\n      return this.dehanceValue_(this.values_[index]);\n    }\n\n    console.warn(  true ? \"[mobx] Out of bounds read: \" + index : 0);\n  };\n\n  _proto.set_ = function set_(index, newValue) {\n    var values = this.values_;\n\n    if (index < values.length) {\n      // update at index in range\n      checkIfStateModificationsAreAllowed(this.atom_);\n      var oldValue = values[index];\n\n      if (hasInterceptors(this)) {\n        var change = interceptChange(this, {\n          type: UPDATE,\n          object: this.proxy_,\n          index: index,\n          newValue: newValue\n        });\n\n        if (!change) {\n          return;\n        }\n\n        newValue = change.newValue;\n      }\n\n      newValue = this.enhancer_(newValue, oldValue);\n      var changed = newValue !== oldValue;\n\n      if (changed) {\n        values[index] = newValue;\n        this.notifyArrayChildUpdate_(index, newValue, oldValue);\n      }\n    } else if (index === values.length) {\n      // add a new item\n      this.spliceWithArray_(index, 0, [newValue]);\n    } else {\n      // out of bounds\n      die(17, index, values.length);\n    }\n  };\n\n  return ObservableArrayAdministration;\n}();\n\nfunction createObservableArray(initialValues, enhancer, name, owned) {\n  if (name === void 0) {\n    name =   true ? \"ObservableArray@\" + getNextId() : 0;\n  }\n\n  if (owned === void 0) {\n    owned = false;\n  }\n\n  assertProxies();\n  var adm = new ObservableArrayAdministration(name, enhancer, owned, false);\n  addHiddenFinalProp(adm.values_, $mobx, adm);\n  var proxy = new Proxy(adm.values_, arrayTraps);\n  adm.proxy_ = proxy;\n\n  if (initialValues && initialValues.length) {\n    var prev = allowStateChangesStart(true);\n    adm.spliceWithArray_(0, 0, initialValues);\n    allowStateChangesEnd(prev);\n  }\n\n  return proxy;\n} // eslint-disable-next-line\n\n\nvar arrayExtensions = {\n  clear: function clear() {\n    return this.splice(0);\n  },\n  replace: function replace(newItems) {\n    var adm = this[$mobx];\n    return adm.spliceWithArray_(0, adm.values_.length, newItems);\n  },\n  // Used by JSON.stringify\n  toJSON: function toJSON() {\n    return this.slice();\n  },\n\n  /*\n   * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n   * since these functions alter the inner structure of the array, the have side effects.\n   * Because the have side effects, they should not be used in computed function,\n   * and for that reason the do not call dependencyState.notifyObserved\n   */\n  splice: function splice(index, deleteCount) {\n    for (var _len = arguments.length, newItems = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      newItems[_key - 2] = arguments[_key];\n    }\n\n    var adm = this[$mobx];\n\n    switch (arguments.length) {\n      case 0:\n        return [];\n\n      case 1:\n        return adm.spliceWithArray_(index);\n\n      case 2:\n        return adm.spliceWithArray_(index, deleteCount);\n    }\n\n    return adm.spliceWithArray_(index, deleteCount, newItems);\n  },\n  spliceWithArray: function spliceWithArray(index, deleteCount, newItems) {\n    return this[$mobx].spliceWithArray_(index, deleteCount, newItems);\n  },\n  push: function push() {\n    var adm = this[$mobx];\n\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    adm.spliceWithArray_(adm.values_.length, 0, items);\n    return adm.values_.length;\n  },\n  pop: function pop() {\n    return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];\n  },\n  shift: function shift() {\n    return this.splice(0, 1)[0];\n  },\n  unshift: function unshift() {\n    var adm = this[$mobx];\n\n    for (var _len3 = arguments.length, items = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      items[_key3] = arguments[_key3];\n    }\n\n    adm.spliceWithArray_(0, 0, items);\n    return adm.values_.length;\n  },\n  reverse: function reverse() {\n    // reverse by default mutates in place before returning the result\n    // which makes it both a 'derivation' and a 'mutation'.\n    if (globalState.trackingDerivation) {\n      die(37, \"reverse\");\n    }\n\n    this.replace(this.slice().reverse());\n    return this;\n  },\n  sort: function sort() {\n    // sort by default mutates in place before returning the result\n    // which goes against all good practices. Let's not change the array in place!\n    if (globalState.trackingDerivation) {\n      die(37, \"sort\");\n    }\n\n    var copy = this.slice();\n    copy.sort.apply(copy, arguments);\n    this.replace(copy);\n    return this;\n  },\n  remove: function remove(value) {\n    var adm = this[$mobx];\n    var idx = adm.dehanceValues_(adm.values_).indexOf(value);\n\n    if (idx > -1) {\n      this.splice(idx, 1);\n      return true;\n    }\n\n    return false;\n  }\n};\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\n\naddArrayExtension(\"concat\", simpleFunc);\naddArrayExtension(\"flat\", simpleFunc);\naddArrayExtension(\"includes\", simpleFunc);\naddArrayExtension(\"indexOf\", simpleFunc);\naddArrayExtension(\"join\", simpleFunc);\naddArrayExtension(\"lastIndexOf\", simpleFunc);\naddArrayExtension(\"slice\", simpleFunc);\naddArrayExtension(\"toString\", simpleFunc);\naddArrayExtension(\"toLocaleString\", simpleFunc); // map\n\naddArrayExtension(\"every\", mapLikeFunc);\naddArrayExtension(\"filter\", mapLikeFunc);\naddArrayExtension(\"find\", mapLikeFunc);\naddArrayExtension(\"findIndex\", mapLikeFunc);\naddArrayExtension(\"flatMap\", mapLikeFunc);\naddArrayExtension(\"forEach\", mapLikeFunc);\naddArrayExtension(\"map\", mapLikeFunc);\naddArrayExtension(\"some\", mapLikeFunc); // reduce\n\naddArrayExtension(\"reduce\", reduceLikeFunc);\naddArrayExtension(\"reduceRight\", reduceLikeFunc);\n\nfunction addArrayExtension(funcName, funcFactory) {\n  if (typeof Array.prototype[funcName] === \"function\") {\n    arrayExtensions[funcName] = funcFactory(funcName);\n  }\n} // Report and delegate to dehanced array\n\n\nfunction simpleFunc(funcName) {\n  return function () {\n    var adm = this[$mobx];\n    adm.atom_.reportObserved();\n    var dehancedValues = adm.dehanceValues_(adm.values_);\n    return dehancedValues[funcName].apply(dehancedValues, arguments);\n  };\n} // Make sure callbacks recieve correct array arg #2326\n\n\nfunction mapLikeFunc(funcName) {\n  return function (callback, thisArg) {\n    var _this2 = this;\n\n    var adm = this[$mobx];\n    adm.atom_.reportObserved();\n    var dehancedValues = adm.dehanceValues_(adm.values_);\n    return dehancedValues[funcName](function (element, index) {\n      return callback.call(thisArg, element, index, _this2);\n    });\n  };\n} // Make sure callbacks recieve correct array arg #2326\n\n\nfunction reduceLikeFunc(funcName) {\n  return function () {\n    var _this3 = this;\n\n    var adm = this[$mobx];\n    adm.atom_.reportObserved();\n    var dehancedValues = adm.dehanceValues_(adm.values_); // #2432 - reduce behavior depends on arguments.length\n\n    var callback = arguments[0];\n\n    arguments[0] = function (accumulator, currentValue, index) {\n      return callback(accumulator, currentValue, index, _this3);\n    };\n\n    return dehancedValues[funcName].apply(dehancedValues, arguments);\n  };\n}\n\nvar isObservableArrayAdministration = /*#__PURE__*/createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\n\nfunction isObservableArray(thing) {\n  return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\n}\n\nvar _Symbol$iterator, _Symbol$toStringTag;\n\nvar ObservableMapMarker = {};\nvar ADD = \"add\";\nvar DELETE = \"delete\"; // just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\n\n_Symbol$iterator = Symbol.iterator;\n_Symbol$toStringTag = Symbol.toStringTag;\n\nvar ObservableMap = /*#__PURE__*/function () {\n  // hasMap, not hashMap >-).\n  function ObservableMap(initialData, enhancer_, name_) {\n    var _this = this;\n\n    if (enhancer_ === void 0) {\n      enhancer_ = deepEnhancer;\n    }\n\n    if (name_ === void 0) {\n      name_ =   true ? \"ObservableMap@\" + getNextId() : 0;\n    }\n\n    this.enhancer_ = void 0;\n    this.name_ = void 0;\n    this[$mobx] = ObservableMapMarker;\n    this.data_ = void 0;\n    this.hasMap_ = void 0;\n    this.keysAtom_ = void 0;\n    this.interceptors_ = void 0;\n    this.changeListeners_ = void 0;\n    this.dehancer = void 0;\n    this.enhancer_ = enhancer_;\n    this.name_ = name_;\n\n    if (!isFunction(Map)) {\n      die(18);\n    }\n\n    this.keysAtom_ = createAtom(  true ? this.name_ + \".keys()\" : 0);\n    this.data_ = new Map();\n    this.hasMap_ = new Map();\n    allowStateChanges(true, function () {\n      _this.merge(initialData);\n    });\n  }\n\n  var _proto = ObservableMap.prototype;\n\n  _proto.has_ = function has_(key) {\n    return this.data_.has(key);\n  };\n\n  _proto.has = function has(key) {\n    var _this2 = this;\n\n    if (!globalState.trackingDerivation) {\n      return this.has_(key);\n    }\n\n    var entry = this.hasMap_.get(key);\n\n    if (!entry) {\n      var newEntry = entry = new ObservableValue(this.has_(key), referenceEnhancer,   true ? this.name_ + \".\" + stringifyKey(key) + \"?\" : 0, false);\n      this.hasMap_.set(key, newEntry);\n      onBecomeUnobserved(newEntry, function () {\n        return _this2.hasMap_[\"delete\"](key);\n      });\n    }\n\n    return entry.get();\n  };\n\n  _proto.set = function set(key, value) {\n    var hasKey = this.has_(key);\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        type: hasKey ? UPDATE : ADD,\n        object: this,\n        newValue: value,\n        name: key\n      });\n\n      if (!change) {\n        return this;\n      }\n\n      value = change.newValue;\n    }\n\n    if (hasKey) {\n      this.updateValue_(key, value);\n    } else {\n      this.addValue_(key, value);\n    }\n\n    return this;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var _this3 = this;\n\n    checkIfStateModificationsAreAllowed(this.keysAtom_);\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        type: DELETE,\n        object: this,\n        name: key\n      });\n\n      if (!change) {\n        return false;\n      }\n    }\n\n    if (this.has_(key)) {\n      var notifySpy = isSpyEnabled();\n      var notify = hasListeners(this);\n\n      var _change = notify || notifySpy ? {\n        observableKind: \"map\",\n        debugObjectName: this.name_,\n        type: DELETE,\n        object: this,\n        oldValue: this.data_.get(key).value_,\n        name: key\n      } : null;\n\n      if (  true && notifySpy) {\n        spyReportStart(_change);\n      } // TODO fix type\n\n\n      transaction(function () {\n        var _this3$hasMap_$get;\n\n        _this3.keysAtom_.reportChanged();\n\n        (_this3$hasMap_$get = _this3.hasMap_.get(key)) == null ? void 0 : _this3$hasMap_$get.setNewValue_(false);\n\n        var observable = _this3.data_.get(key);\n\n        observable.setNewValue_(undefined);\n\n        _this3.data_[\"delete\"](key);\n      });\n\n      if (notify) {\n        notifyListeners(this, _change);\n      }\n\n      if (  true && notifySpy) {\n        spyReportEnd();\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.updateValue_ = function updateValue_(key, newValue) {\n    var observable = this.data_.get(key);\n    newValue = observable.prepareNewValue_(newValue);\n\n    if (newValue !== globalState.UNCHANGED) {\n      var notifySpy = isSpyEnabled();\n      var notify = hasListeners(this);\n      var change = notify || notifySpy ? {\n        observableKind: \"map\",\n        debugObjectName: this.name_,\n        type: UPDATE,\n        object: this,\n        oldValue: observable.value_,\n        name: key,\n        newValue: newValue\n      } : null;\n\n      if (  true && notifySpy) {\n        spyReportStart(change);\n      } // TODO fix type\n\n\n      observable.setNewValue_(newValue);\n\n      if (notify) {\n        notifyListeners(this, change);\n      }\n\n      if (  true && notifySpy) {\n        spyReportEnd();\n      }\n    }\n  };\n\n  _proto.addValue_ = function addValue_(key, newValue) {\n    var _this4 = this;\n\n    checkIfStateModificationsAreAllowed(this.keysAtom_);\n    transaction(function () {\n      var _this4$hasMap_$get;\n\n      var observable = new ObservableValue(newValue, _this4.enhancer_,   true ? _this4.name_ + \".\" + stringifyKey(key) : 0, false);\n\n      _this4.data_.set(key, observable);\n\n      newValue = observable.value_; // value might have been changed\n\n      (_this4$hasMap_$get = _this4.hasMap_.get(key)) == null ? void 0 : _this4$hasMap_$get.setNewValue_(true);\n\n      _this4.keysAtom_.reportChanged();\n    });\n    var notifySpy = isSpyEnabled();\n    var notify = hasListeners(this);\n    var change = notify || notifySpy ? {\n      observableKind: \"map\",\n      debugObjectName: this.name_,\n      type: ADD,\n      object: this,\n      name: key,\n      newValue: newValue\n    } : null;\n\n    if (  true && notifySpy) {\n      spyReportStart(change);\n    } // TODO fix type\n\n\n    if (notify) {\n      notifyListeners(this, change);\n    }\n\n    if (  true && notifySpy) {\n      spyReportEnd();\n    }\n  };\n\n  _proto.get = function get(key) {\n    if (this.has(key)) {\n      return this.dehanceValue_(this.data_.get(key).get());\n    }\n\n    return this.dehanceValue_(undefined);\n  };\n\n  _proto.dehanceValue_ = function dehanceValue_(value) {\n    if (this.dehancer !== undefined) {\n      return this.dehancer(value);\n    }\n\n    return value;\n  };\n\n  _proto.keys = function keys() {\n    this.keysAtom_.reportObserved();\n    return this.data_.keys();\n  };\n\n  _proto.values = function values() {\n    var self = this;\n    var keys = this.keys();\n    return makeIterable({\n      next: function next() {\n        var _keys$next = keys.next(),\n            done = _keys$next.done,\n            value = _keys$next.value;\n\n        return {\n          done: done,\n          value: done ? undefined : self.get(value)\n        };\n      }\n    });\n  };\n\n  _proto.entries = function entries() {\n    var self = this;\n    var keys = this.keys();\n    return makeIterable({\n      next: function next() {\n        var _keys$next2 = keys.next(),\n            done = _keys$next2.done,\n            value = _keys$next2.value;\n\n        return {\n          done: done,\n          value: done ? undefined : [value, self.get(value)]\n        };\n      }\n    });\n  };\n\n  _proto[_Symbol$iterator] = function () {\n    return this.entries();\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this), _step; !(_step = _iterator()).done;) {\n      var _step$value = _step.value,\n          key = _step$value[0],\n          value = _step$value[1];\n      callback.call(thisArg, value, key, this);\n    }\n  }\n  /** Merge another object into this object, returns this. */\n  ;\n\n  _proto.merge = function merge(other) {\n    var _this5 = this;\n\n    if (isObservableMap(other)) {\n      other = new Map(other);\n    }\n\n    transaction(function () {\n      if (isPlainObject(other)) {\n        getPlainObjectKeys(other).forEach(function (key) {\n          return _this5.set(key, other[key]);\n        });\n      } else if (Array.isArray(other)) {\n        other.forEach(function (_ref) {\n          var key = _ref[0],\n              value = _ref[1];\n          return _this5.set(key, value);\n        });\n      } else if (isES6Map(other)) {\n        if (other.constructor !== Map) {\n          die(19, other);\n        }\n\n        other.forEach(function (value, key) {\n          return _this5.set(key, value);\n        });\n      } else if (other !== null && other !== undefined) {\n        die(20, other);\n      }\n    });\n    return this;\n  };\n\n  _proto.clear = function clear() {\n    var _this6 = this;\n\n    transaction(function () {\n      untracked(function () {\n        for (var _iterator2 = _createForOfIteratorHelperLoose(_this6.keys()), _step2; !(_step2 = _iterator2()).done;) {\n          var key = _step2.value;\n\n          _this6[\"delete\"](key);\n        }\n      });\n    });\n  };\n\n  _proto.replace = function replace(values) {\n    var _this7 = this; // Implementation requirements:\n    // - respect ordering of replacement map\n    // - allow interceptors to run and potentially prevent individual operations\n    // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n    // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n    // - note that result map may differ from replacement map due to the interceptors\n\n\n    transaction(function () {\n      // Convert to map so we can do quick key lookups\n      var replacementMap = convertToMap(values);\n      var orderedData = new Map(); // Used for optimization\n\n      var keysReportChangedCalled = false; // Delete keys that don't exist in replacement map\n      // if the key deletion is prevented by interceptor\n      // add entry at the beginning of the result map\n\n      for (var _iterator3 = _createForOfIteratorHelperLoose(_this7.data_.keys()), _step3; !(_step3 = _iterator3()).done;) {\n        var key = _step3.value; // Concurrently iterating/deleting keys\n        // iterator should handle this correctly\n\n        if (!replacementMap.has(key)) {\n          var deleted = _this7[\"delete\"](key); // Was the key removed?\n\n\n          if (deleted) {\n            // _keysAtom.reportChanged() was already called\n            keysReportChangedCalled = true;\n          } else {\n            // Delete prevented by interceptor\n            var value = _this7.data_.get(key);\n\n            orderedData.set(key, value);\n          }\n        }\n      } // Merge entries\n\n\n      for (var _iterator4 = _createForOfIteratorHelperLoose(replacementMap.entries()), _step4; !(_step4 = _iterator4()).done;) {\n        var _step4$value = _step4.value,\n            _key = _step4$value[0],\n            _value = _step4$value[1]; // We will want to know whether a new key is added\n\n        var keyExisted = _this7.data_.has(_key); // Add or update value\n\n\n        _this7.set(_key, _value); // The addition could have been prevent by interceptor\n\n\n        if (_this7.data_.has(_key)) {\n          // The update could have been prevented by interceptor\n          // and also we want to preserve existing values\n          // so use value from _data map (instead of replacement map)\n          var _value2 = _this7.data_.get(_key);\n\n          orderedData.set(_key, _value2); // Was a new key added?\n\n          if (!keyExisted) {\n            // _keysAtom.reportChanged() was already called\n            keysReportChangedCalled = true;\n          }\n        }\n      } // Check for possible key order change\n\n\n      if (!keysReportChangedCalled) {\n        if (_this7.data_.size !== orderedData.size) {\n          // If size differs, keys are definitely modified\n          _this7.keysAtom_.reportChanged();\n        } else {\n          var iter1 = _this7.data_.keys();\n\n          var iter2 = orderedData.keys();\n          var next1 = iter1.next();\n          var next2 = iter2.next();\n\n          while (!next1.done) {\n            if (next1.value !== next2.value) {\n              _this7.keysAtom_.reportChanged();\n\n              break;\n            }\n\n            next1 = iter1.next();\n            next2 = iter2.next();\n          }\n        }\n      } // Use correctly ordered map\n\n\n      _this7.data_ = orderedData;\n    });\n    return this;\n  };\n\n  _proto.toString = function toString() {\n    return \"[object ObservableMap]\";\n  };\n\n  _proto.toJSON = function toJSON() {\n    return Array.from(this);\n  };\n  /**\n   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n   * for callback details\n   */\n\n\n  _proto.observe_ = function observe_(listener, fireImmediately) {\n    if (  true && fireImmediately === true) {\n      die(\"`observe` doesn't support fireImmediately=true in combination with maps.\");\n    }\n\n    return registerListener(this, listener);\n  };\n\n  _proto.intercept_ = function intercept_(handler) {\n    return registerInterceptor(this, handler);\n  };\n\n  _createClass(ObservableMap, [{\n    key: \"size\",\n    get: function get() {\n      this.keysAtom_.reportObserved();\n      return this.data_.size;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"Map\";\n    }\n  }]);\n\n  return ObservableMap;\n}(); // eslint-disable-next-line\n\n\nvar isObservableMap = /*#__PURE__*/createInstanceofPredicate(\"ObservableMap\", ObservableMap);\n\nfunction convertToMap(dataStructure) {\n  if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n    return dataStructure;\n  } else if (Array.isArray(dataStructure)) {\n    return new Map(dataStructure);\n  } else if (isPlainObject(dataStructure)) {\n    var map = new Map();\n\n    for (var key in dataStructure) {\n      map.set(key, dataStructure[key]);\n    }\n\n    return map;\n  } else {\n    return die(21, dataStructure);\n  }\n}\n\nvar _Symbol$iterator$1, _Symbol$toStringTag$1;\n\nvar ObservableSetMarker = {};\n_Symbol$iterator$1 = Symbol.iterator;\n_Symbol$toStringTag$1 = Symbol.toStringTag;\n\nvar ObservableSet = /*#__PURE__*/function () {\n  function ObservableSet(initialData, enhancer, name_) {\n    if (enhancer === void 0) {\n      enhancer = deepEnhancer;\n    }\n\n    if (name_ === void 0) {\n      name_ =   true ? \"ObservableSet@\" + getNextId() : 0;\n    }\n\n    this.name_ = void 0;\n    this[$mobx] = ObservableSetMarker;\n    this.data_ = new Set();\n    this.atom_ = void 0;\n    this.changeListeners_ = void 0;\n    this.interceptors_ = void 0;\n    this.dehancer = void 0;\n    this.enhancer_ = void 0;\n    this.name_ = name_;\n\n    if (!isFunction(Set)) {\n      die(22);\n    }\n\n    this.atom_ = createAtom(this.name_);\n\n    this.enhancer_ = function (newV, oldV) {\n      return enhancer(newV, oldV, name_);\n    };\n\n    if (initialData) {\n      this.replace(initialData);\n    }\n  }\n\n  var _proto = ObservableSet.prototype;\n\n  _proto.dehanceValue_ = function dehanceValue_(value) {\n    if (this.dehancer !== undefined) {\n      return this.dehancer(value);\n    }\n\n    return value;\n  };\n\n  _proto.clear = function clear() {\n    var _this = this;\n\n    transaction(function () {\n      untracked(function () {\n        for (var _iterator = _createForOfIteratorHelperLoose(_this.data_.values()), _step; !(_step = _iterator()).done;) {\n          var value = _step.value;\n\n          _this[\"delete\"](value);\n        }\n      });\n    });\n  };\n\n  _proto.forEach = function forEach(callbackFn, thisArg) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(this), _step2; !(_step2 = _iterator2()).done;) {\n      var value = _step2.value;\n      callbackFn.call(thisArg, value, value, this);\n    }\n  };\n\n  _proto.add = function add(value) {\n    var _this2 = this;\n\n    checkIfStateModificationsAreAllowed(this.atom_);\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        type: ADD,\n        object: this,\n        newValue: value\n      });\n\n      if (!change) {\n        return this;\n      } // ideally, value = change.value would be done here, so that values can be\n      // changed by interceptor. Same applies for other Set and Map api's.\n\n    }\n\n    if (!this.has(value)) {\n      transaction(function () {\n        _this2.data_.add(_this2.enhancer_(value, undefined));\n\n        _this2.atom_.reportChanged();\n      });\n      var notifySpy =   true && isSpyEnabled();\n      var notify = hasListeners(this);\n\n      var _change = notify || notifySpy ? {\n        observableKind: \"set\",\n        debugObjectName: this.name_,\n        type: ADD,\n        object: this,\n        newValue: value\n      } : null;\n\n      if (notifySpy && \"development\" !== \"production\") {\n        spyReportStart(_change);\n      }\n\n      if (notify) {\n        notifyListeners(this, _change);\n      }\n\n      if (notifySpy && \"development\" !== \"production\") {\n        spyReportEnd();\n      }\n    }\n\n    return this;\n  };\n\n  _proto[\"delete\"] = function _delete(value) {\n    var _this3 = this;\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        type: DELETE,\n        object: this,\n        oldValue: value\n      });\n\n      if (!change) {\n        return false;\n      }\n    }\n\n    if (this.has(value)) {\n      var notifySpy =   true && isSpyEnabled();\n      var notify = hasListeners(this);\n\n      var _change2 = notify || notifySpy ? {\n        observableKind: \"set\",\n        debugObjectName: this.name_,\n        type: DELETE,\n        object: this,\n        oldValue: value\n      } : null;\n\n      if (notifySpy && \"development\" !== \"production\") {\n        spyReportStart(_change2);\n      }\n\n      transaction(function () {\n        _this3.atom_.reportChanged();\n\n        _this3.data_[\"delete\"](value);\n      });\n\n      if (notify) {\n        notifyListeners(this, _change2);\n      }\n\n      if (notifySpy && \"development\" !== \"production\") {\n        spyReportEnd();\n      }\n\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.has = function has(value) {\n    this.atom_.reportObserved();\n    return this.data_.has(this.dehanceValue_(value));\n  };\n\n  _proto.entries = function entries() {\n    var nextIndex = 0;\n    var keys = Array.from(this.keys());\n    var values = Array.from(this.values());\n    return makeIterable({\n      next: function next() {\n        var index = nextIndex;\n        nextIndex += 1;\n        return index < values.length ? {\n          value: [keys[index], values[index]],\n          done: false\n        } : {\n          done: true\n        };\n      }\n    });\n  };\n\n  _proto.keys = function keys() {\n    return this.values();\n  };\n\n  _proto.values = function values() {\n    this.atom_.reportObserved();\n    var self = this;\n    var nextIndex = 0;\n    var observableValues = Array.from(this.data_.values());\n    return makeIterable({\n      next: function next() {\n        return nextIndex < observableValues.length ? {\n          value: self.dehanceValue_(observableValues[nextIndex++]),\n          done: false\n        } : {\n          done: true\n        };\n      }\n    });\n  };\n\n  _proto.replace = function replace(other) {\n    var _this4 = this;\n\n    if (isObservableSet(other)) {\n      other = new Set(other);\n    }\n\n    transaction(function () {\n      if (Array.isArray(other)) {\n        _this4.clear();\n\n        other.forEach(function (value) {\n          return _this4.add(value);\n        });\n      } else if (isES6Set(other)) {\n        _this4.clear();\n\n        other.forEach(function (value) {\n          return _this4.add(value);\n        });\n      } else if (other !== null && other !== undefined) {\n        die(\"Cannot initialize set from \" + other);\n      }\n    });\n    return this;\n  };\n\n  _proto.observe_ = function observe_(listener, fireImmediately) {\n    // ... 'fireImmediately' could also be true?\n    if (  true && fireImmediately === true) {\n      die(\"`observe` doesn't support fireImmediately=true in combination with sets.\");\n    }\n\n    return registerListener(this, listener);\n  };\n\n  _proto.intercept_ = function intercept_(handler) {\n    return registerInterceptor(this, handler);\n  };\n\n  _proto.toJSON = function toJSON() {\n    return Array.from(this);\n  };\n\n  _proto.toString = function toString() {\n    return \"[object ObservableSet]\";\n  };\n\n  _proto[_Symbol$iterator$1] = function () {\n    return this.values();\n  };\n\n  _createClass(ObservableSet, [{\n    key: \"size\",\n    get: function get() {\n      this.atom_.reportObserved();\n      return this.data_.size;\n    }\n  }, {\n    key: _Symbol$toStringTag$1,\n    get: function get() {\n      return \"Set\";\n    }\n  }]);\n\n  return ObservableSet;\n}(); // eslint-disable-next-line\n\n\nvar isObservableSet = /*#__PURE__*/createInstanceofPredicate(\"ObservableSet\", ObservableSet);\nvar descriptorCache = /*#__PURE__*/Object.create(null);\nvar REMOVE = \"remove\";\n\nvar ObservableObjectAdministration = /*#__PURE__*/function () {\n  function ObservableObjectAdministration(target_, values_, name_, // Used anytime annotation is not explicitely provided\n  defaultAnnotation_) {\n    if (values_ === void 0) {\n      values_ = new Map();\n    }\n\n    if (defaultAnnotation_ === void 0) {\n      defaultAnnotation_ = autoAnnotation;\n    }\n\n    this.target_ = void 0;\n    this.values_ = void 0;\n    this.name_ = void 0;\n    this.defaultAnnotation_ = void 0;\n    this.keysAtom_ = void 0;\n    this.changeListeners_ = void 0;\n    this.interceptors_ = void 0;\n    this.proxy_ = void 0;\n    this.isPlainObject_ = void 0;\n    this.appliedAnnotations_ = void 0;\n    this.pendingKeys_ = void 0;\n    this.target_ = target_;\n    this.values_ = values_;\n    this.name_ = name_;\n    this.defaultAnnotation_ = defaultAnnotation_;\n    this.keysAtom_ = new Atom(  true ? this.name_ + \".keys\" : 0); // Optimization: we use this frequently\n\n    this.isPlainObject_ = isPlainObject(this.target_);\n\n    if (  true && !isAnnotation(this.defaultAnnotation_)) {\n      die(\"defaultAnnotation must be valid annotation\");\n    }\n\n    if (true) {\n      // Prepare structure for tracking which fields were already annotated\n      this.appliedAnnotations_ = {};\n    }\n  }\n\n  var _proto = ObservableObjectAdministration.prototype;\n\n  _proto.getObservablePropValue_ = function getObservablePropValue_(key) {\n    return this.values_.get(key).get();\n  };\n\n  _proto.setObservablePropValue_ = function setObservablePropValue_(key, newValue) {\n    var observable = this.values_.get(key);\n\n    if (observable instanceof ComputedValue) {\n      observable.set(newValue);\n      return true;\n    } // intercept\n\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        type: UPDATE,\n        object: this.proxy_ || this.target_,\n        name: key,\n        newValue: newValue\n      });\n\n      if (!change) {\n        return null;\n      }\n\n      newValue = change.newValue;\n    }\n\n    newValue = observable.prepareNewValue_(newValue); // notify spy & observers\n\n    if (newValue !== globalState.UNCHANGED) {\n      var notify = hasListeners(this);\n      var notifySpy =   true && isSpyEnabled();\n\n      var _change = notify || notifySpy ? {\n        type: UPDATE,\n        observableKind: \"object\",\n        debugObjectName: this.name_,\n        object: this.proxy_ || this.target_,\n        oldValue: observable.value_,\n        name: key,\n        newValue: newValue\n      } : null;\n\n      if (  true && notifySpy) {\n        spyReportStart(_change);\n      }\n\n      observable.setNewValue_(newValue);\n\n      if (notify) {\n        notifyListeners(this, _change);\n      }\n\n      if (  true && notifySpy) {\n        spyReportEnd();\n      }\n    }\n\n    return true;\n  };\n\n  _proto.get_ = function get_(key) {\n    if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n      // Key doesn't exist yet, subscribe for it in case it's added later\n      this.has_(key);\n    }\n\n    return this.target_[key];\n  }\n  /**\n   * @param {PropertyKey} key\n   * @param {any} value\n   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n   * @param {boolean} proxyTrap whether it's called from proxy trap\n   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n   */\n  ;\n\n  _proto.set_ = function set_(key, value, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    } // Don't use .has(key) - we care about own\n\n\n    if (hasProp(this.target_, key)) {\n      // Existing prop\n      if (this.values_.has(key)) {\n        // Observable (can be intercepted)\n        return this.setObservablePropValue_(key, value);\n      } else if (proxyTrap) {\n        // Non-observable - proxy\n        return Reflect.set(this.target_, key, value);\n      } else {\n        // Non-observable\n        this.target_[key] = value;\n        return true;\n      }\n    } else {\n      // New prop\n      return this.extend_(key, {\n        value: value,\n        enumerable: true,\n        writable: true,\n        configurable: true\n      }, this.defaultAnnotation_, proxyTrap);\n    }\n  } // Trap for \"in\"\n  ;\n\n  _proto.has_ = function has_(key) {\n    if (!globalState.trackingDerivation) {\n      // Skip key subscription outside derivation\n      return key in this.target_;\n    }\n\n    this.pendingKeys_ || (this.pendingKeys_ = new Map());\n    var entry = this.pendingKeys_.get(key);\n\n    if (!entry) {\n      entry = new ObservableValue(key in this.target_, referenceEnhancer,   true ? this.name_ + \".\" + stringifyKey(key) + \"?\" : 0, false);\n      this.pendingKeys_.set(key, entry);\n    }\n\n    return entry.get();\n  }\n  /**\n   * @param {PropertyKey} key\n   * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n   */\n  ;\n\n  _proto.make_ = function make_(key, annotation) {\n    if (annotation === true) {\n      annotation = this.defaultAnnotation_;\n    }\n\n    if (annotation === false) {\n      return;\n    }\n\n    assertAnnotable(this, annotation, key);\n\n    if (!(key in this.target_)) {\n      var _this$target_$storedA; // Throw on missing key, except for decorators:\n      // Decorator annotations are collected from whole prototype chain.\n      // When called from super() some props may not exist yet.\n      // However we don't have to worry about missing prop,\n      // because the decorator must have been applied to something.\n\n\n      if ((_this$target_$storedA = this.target_[storedAnnotationsSymbol]) != null && _this$target_$storedA[key]) {\n        return; // will be annotated by subclass constructor\n      } else {\n        die(1, annotation.annotationType_, this.name_ + \".\" + key.toString());\n      }\n    }\n\n    var source = this.target_;\n\n    while (source && source !== objectPrototype) {\n      var descriptor = getDescriptor(source, key);\n\n      if (descriptor) {\n        var outcome = annotation.make_(this, key, descriptor, source);\n\n        if (outcome === 0\n        /* Cancel */\n        ) {\n          return;\n        }\n\n        if (outcome === 1\n        /* Break */\n        ) {\n          break;\n        }\n      }\n\n      source = Object.getPrototypeOf(source);\n    }\n\n    recordAnnotationApplied(this, annotation, key);\n  }\n  /**\n   * @param {PropertyKey} key\n   * @param {PropertyDescriptor} descriptor\n   * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n   * @param {boolean} proxyTrap whether it's called from proxy trap\n   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n   */\n  ;\n\n  _proto.extend_ = function extend_(key, descriptor, annotation, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    }\n\n    if (annotation === true) {\n      annotation = this.defaultAnnotation_;\n    }\n\n    if (annotation === false) {\n      return this.defineProperty_(key, descriptor, proxyTrap);\n    }\n\n    assertAnnotable(this, annotation, key);\n    var outcome = annotation.extend_(this, key, descriptor, proxyTrap);\n\n    if (outcome) {\n      recordAnnotationApplied(this, annotation, key);\n    }\n\n    return outcome;\n  }\n  /**\n   * @param {PropertyKey} key\n   * @param {PropertyDescriptor} descriptor\n   * @param {boolean} proxyTrap whether it's called from proxy trap\n   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n   */\n  ;\n\n  _proto.defineProperty_ = function defineProperty_(key, descriptor, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    }\n\n    try {\n      startBatch(); // Delete\n\n      var deleteOutcome = this.delete_(key);\n\n      if (!deleteOutcome) {\n        // Failure or intercepted\n        return deleteOutcome;\n      } // ADD interceptor\n\n\n      if (hasInterceptors(this)) {\n        var change = interceptChange(this, {\n          object: this.proxy_ || this.target_,\n          name: key,\n          type: ADD,\n          newValue: descriptor.value\n        });\n\n        if (!change) {\n          return null;\n        }\n\n        var newValue = change.newValue;\n\n        if (descriptor.value !== newValue) {\n          descriptor = _extends({}, descriptor, {\n            value: newValue\n          });\n        }\n      } // Define\n\n\n      if (proxyTrap) {\n        if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n          return false;\n        }\n      } else {\n        defineProperty(this.target_, key, descriptor);\n      } // Notify\n\n\n      this.notifyPropertyAddition_(key, descriptor.value);\n    } finally {\n      endBatch();\n    }\n\n    return true;\n  } // If original descriptor becomes relevant, move this to annotation directly\n  ;\n\n  _proto.defineObservableProperty_ = function defineObservableProperty_(key, value, enhancer, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    }\n\n    try {\n      startBatch(); // Delete\n\n      var deleteOutcome = this.delete_(key);\n\n      if (!deleteOutcome) {\n        // Failure or intercepted\n        return deleteOutcome;\n      } // ADD interceptor\n\n\n      if (hasInterceptors(this)) {\n        var change = interceptChange(this, {\n          object: this.proxy_ || this.target_,\n          name: key,\n          type: ADD,\n          newValue: value\n        });\n\n        if (!change) {\n          return null;\n        }\n\n        value = change.newValue;\n      }\n\n      var cachedDescriptor = getCachedObservablePropDescriptor(key);\n      var descriptor = {\n        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n        enumerable: true,\n        get: cachedDescriptor.get,\n        set: cachedDescriptor.set\n      }; // Define\n\n      if (proxyTrap) {\n        if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n          return false;\n        }\n      } else {\n        defineProperty(this.target_, key, descriptor);\n      }\n\n      var observable = new ObservableValue(value, enhancer,   true ? this.name_ + \".\" + key.toString() : 0, false);\n      this.values_.set(key, observable); // Notify (value possibly changed by ObservableValue)\n\n      this.notifyPropertyAddition_(key, observable.value_);\n    } finally {\n      endBatch();\n    }\n\n    return true;\n  } // If original descriptor becomes relevant, move this to annotation directly\n  ;\n\n  _proto.defineComputedProperty_ = function defineComputedProperty_(key, options, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    }\n\n    try {\n      startBatch(); // Delete\n\n      var deleteOutcome = this.delete_(key);\n\n      if (!deleteOutcome) {\n        // Failure or intercepted\n        return deleteOutcome;\n      } // ADD interceptor\n\n\n      if (hasInterceptors(this)) {\n        var change = interceptChange(this, {\n          object: this.proxy_ || this.target_,\n          name: key,\n          type: ADD,\n          newValue: undefined\n        });\n\n        if (!change) {\n          return null;\n        }\n      }\n\n      options.name || (options.name =   true ? this.name_ + \".\" + key.toString() : 0);\n      options.context = this.proxy_ || this.target_;\n      var cachedDescriptor = getCachedObservablePropDescriptor(key);\n      var descriptor = {\n        configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n        enumerable: false,\n        get: cachedDescriptor.get,\n        set: cachedDescriptor.set\n      }; // Define\n\n      if (proxyTrap) {\n        if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n          return false;\n        }\n      } else {\n        defineProperty(this.target_, key, descriptor);\n      }\n\n      this.values_.set(key, new ComputedValue(options)); // Notify\n\n      this.notifyPropertyAddition_(key, undefined);\n    } finally {\n      endBatch();\n    }\n\n    return true;\n  }\n  /**\n   * @param {PropertyKey} key\n   * @param {PropertyDescriptor} descriptor\n   * @param {boolean} proxyTrap whether it's called from proxy trap\n   * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n   */\n  ;\n\n  _proto.delete_ = function delete_(key, proxyTrap) {\n    if (proxyTrap === void 0) {\n      proxyTrap = false;\n    } // No such prop\n\n\n    if (!hasProp(this.target_, key)) {\n      return true;\n    } // Intercept\n\n\n    if (hasInterceptors(this)) {\n      var change = interceptChange(this, {\n        object: this.proxy_ || this.target_,\n        name: key,\n        type: REMOVE\n      }); // Cancelled\n\n      if (!change) {\n        return null;\n      }\n    } // Delete\n\n\n    try {\n      var _this$pendingKeys_, _this$pendingKeys_$ge;\n\n      startBatch();\n      var notify = hasListeners(this);\n      var notifySpy =   true && isSpyEnabled();\n      var observable = this.values_.get(key); // Value needed for spies/listeners\n\n      var value = undefined; // Optimization: don't pull the value unless we will need it\n\n      if (!observable && (notify || notifySpy)) {\n        var _getDescriptor;\n\n        value = (_getDescriptor = getDescriptor(this.target_, key)) == null ? void 0 : _getDescriptor.value;\n      } // delete prop (do first, may fail)\n\n\n      if (proxyTrap) {\n        if (!Reflect.deleteProperty(this.target_, key)) {\n          return false;\n        }\n      } else {\n        delete this.target_[key];\n      } // Allow re-annotating this field\n\n\n      if (true) {\n        delete this.appliedAnnotations_[key];\n      } // Clear observable\n\n\n      if (observable) {\n        this.values_[\"delete\"](key); // for computed, value is undefined\n\n        if (observable instanceof ObservableValue) {\n          value = observable.value_;\n        } // Notify: autorun(() => obj[key]), see #1796\n\n\n        propagateChanged(observable);\n      } // Notify \"keys/entries/values\" observers\n\n\n      this.keysAtom_.reportChanged(); // Notify \"has\" observers\n      // \"in\" as it may still exist in proto\n\n      (_this$pendingKeys_ = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_$ge = _this$pendingKeys_.get(key)) == null ? void 0 : _this$pendingKeys_$ge.set(key in this.target_); // Notify spies/listeners\n\n      if (notify || notifySpy) {\n        var _change2 = {\n          type: REMOVE,\n          observableKind: \"object\",\n          object: this.proxy_ || this.target_,\n          debugObjectName: this.name_,\n          oldValue: value,\n          name: key\n        };\n\n        if (  true && notifySpy) {\n          spyReportStart(_change2);\n        }\n\n        if (notify) {\n          notifyListeners(this, _change2);\n        }\n\n        if (  true && notifySpy) {\n          spyReportEnd();\n        }\n      }\n    } finally {\n      endBatch();\n    }\n\n    return true;\n  }\n  /**\n   * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n   * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n   * for callback details\n   */\n  ;\n\n  _proto.observe_ = function observe_(callback, fireImmediately) {\n    if (  true && fireImmediately === true) {\n      die(\"`observe` doesn't support the fire immediately property for observable objects.\");\n    }\n\n    return registerListener(this, callback);\n  };\n\n  _proto.intercept_ = function intercept_(handler) {\n    return registerInterceptor(this, handler);\n  };\n\n  _proto.notifyPropertyAddition_ = function notifyPropertyAddition_(key, value) {\n    var _this$pendingKeys_2, _this$pendingKeys_2$g;\n\n    var notify = hasListeners(this);\n    var notifySpy =   true && isSpyEnabled();\n\n    if (notify || notifySpy) {\n      var change = notify || notifySpy ? {\n        type: ADD,\n        observableKind: \"object\",\n        debugObjectName: this.name_,\n        object: this.proxy_ || this.target_,\n        name: key,\n        newValue: value\n      } : null;\n\n      if (  true && notifySpy) {\n        spyReportStart(change);\n      }\n\n      if (notify) {\n        notifyListeners(this, change);\n      }\n\n      if (  true && notifySpy) {\n        spyReportEnd();\n      }\n    }\n\n    (_this$pendingKeys_2 = this.pendingKeys_) == null ? void 0 : (_this$pendingKeys_2$g = _this$pendingKeys_2.get(key)) == null ? void 0 : _this$pendingKeys_2$g.set(true); // Notify \"keys/entries/values\" observers\n\n    this.keysAtom_.reportChanged();\n  };\n\n  _proto.ownKeys_ = function ownKeys_() {\n    this.keysAtom_.reportObserved();\n    return ownKeys(this.target_);\n  };\n\n  _proto.keys_ = function keys_() {\n    // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n    // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n    // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n    // We choose to over-report in Object.keys(object), because:\n    // - typically it's used with simple data objects\n    // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n    this.keysAtom_.reportObserved();\n    return Object.keys(this.target_);\n  };\n\n  return ObservableObjectAdministration;\n}();\n\nfunction asObservableObject(target, options) {\n  var _options$name;\n\n  if (  true && options && isObservableObject(target)) {\n    die(\"Options can't be provided for already observable objects.\");\n  }\n\n  if (hasProp(target, $mobx)) {\n    if (  true && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n      die(\"Cannot convert '\" + getDebugName(target) + \"' into observable object:\" + \"\\nThe target is already observable of different type.\" + \"\\nExtending builtins is not supported.\");\n    }\n\n    return target;\n  }\n\n  if (  true && !Object.isExtensible(target)) {\n    die(\"Cannot make the designated object observable; it is not extensible\");\n  }\n\n  var name = (_options$name = options == null ? void 0 : options.name) != null ? _options$name :   true ? (isPlainObject(target) ? \"ObservableObject\" : target.constructor.name) + \"@\" + getNextId() : 0;\n  var adm = new ObservableObjectAdministration(target, new Map(), String(name), getAnnotationFromOptions(options));\n  addHiddenProp(target, $mobx, adm);\n  return target;\n}\n\nvar isObservableObjectAdministration = /*#__PURE__*/createInstanceofPredicate(\"ObservableObjectAdministration\", ObservableObjectAdministration);\n\nfunction getCachedObservablePropDescriptor(key) {\n  return descriptorCache[key] || (descriptorCache[key] = {\n    get: function get() {\n      return this[$mobx].getObservablePropValue_(key);\n    },\n    set: function set(value) {\n      return this[$mobx].setObservablePropValue_(key, value);\n    }\n  });\n}\n\nfunction isObservableObject(thing) {\n  if (isObject(thing)) {\n    return isObservableObjectAdministration(thing[$mobx]);\n  }\n\n  return false;\n}\n\nfunction recordAnnotationApplied(adm, annotation, key) {\n  var _adm$target_$storedAn;\n\n  if (true) {\n    adm.appliedAnnotations_[key] = annotation;\n  } // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n\n\n  (_adm$target_$storedAn = adm.target_[storedAnnotationsSymbol]) == null ? true : delete _adm$target_$storedAn[key];\n}\n\nfunction assertAnnotable(adm, annotation, key) {\n  // Valid annotation\n  if (  true && !isAnnotation(annotation)) {\n    die(\"Cannot annotate '\" + adm.name_ + \".\" + key.toString() + \"': Invalid annotation.\");\n  }\n  /*\n  // Configurable, not sealed, not frozen\n  // Possibly not needed, just a little better error then the one thrown by engine.\n  // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n  if (__DEV__) {\n      const configurable = getDescriptor(adm.target_, key)?.configurable\n      const frozen = Object.isFrozen(adm.target_)\n      const sealed = Object.isSealed(adm.target_)\n      if (!configurable || frozen || sealed) {\n          const fieldName = `${adm.name_}.${key.toString()}`\n          const requestedAnnotationType = annotation.annotationType_\n          let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n          if (frozen) {\n              error += `\\nObject is frozen.`\n          }\n          if (sealed) {\n              error += `\\nObject is sealed.`\n          }\n          if (!configurable) {\n              error += `\\nproperty is not configurable.`\n              // Mention only if caused by us to avoid confusion\n              if (hasProp(adm.appliedAnnotations!, key)) {\n                  error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                  error += `all annotated fields of non-plain objects (classes) are not configurable.`\n              }\n          }\n          die(error)\n      }\n  }\n  */\n  // Not annotated\n\n\n  if (  true && !isOverride(annotation) && hasProp(adm.appliedAnnotations_, key)) {\n    var fieldName = adm.name_ + \".\" + key.toString();\n    var currentAnnotationType = adm.appliedAnnotations_[key].annotationType_;\n    var requestedAnnotationType = annotation.annotationType_;\n    die(\"Cannot apply '\" + requestedAnnotationType + \"' to '\" + fieldName + \"':\" + (\"\\nThe field is already annotated with '\" + currentAnnotationType + \"'.\") + \"\\nRe-annotating fields is not allowed.\" + \"\\nUse 'override' annotation for methods overriden by subclass.\");\n  }\n}\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\n\n\nvar OBSERVABLE_ARRAY_BUFFER_SIZE = 0; // Typescript workaround to make sure ObservableArray extends Array\n\nvar StubArray = function StubArray() {};\n\nfunction inherit(ctor, proto) {\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ctor.prototype, proto);\n  } else if (ctor.prototype.__proto__ !== undefined) {\n    ctor.prototype.__proto__ = proto;\n  } else {\n    ctor.prototype = proto;\n  }\n}\n\ninherit(StubArray, Array.prototype); // Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nvar LegacyObservableArray = /*#__PURE__*/function (_StubArray, _Symbol$toStringTag, _Symbol$iterator) {\n  _inheritsLoose(LegacyObservableArray, _StubArray);\n\n  function LegacyObservableArray(initialValues, enhancer, name, owned) {\n    var _this;\n\n    if (name === void 0) {\n      name =   true ? \"ObservableArray@\" + getNextId() : 0;\n    }\n\n    if (owned === void 0) {\n      owned = false;\n    }\n\n    _this = _StubArray.call(this) || this;\n    var adm = new ObservableArrayAdministration(name, enhancer, owned, true);\n    adm.proxy_ = _assertThisInitialized(_this);\n    addHiddenFinalProp(_assertThisInitialized(_this), $mobx, adm);\n\n    if (initialValues && initialValues.length) {\n      var prev = allowStateChangesStart(true); // @ts-ignore\n\n      _this.spliceWithArray(0, 0, initialValues);\n\n      allowStateChangesEnd(prev);\n    }\n\n    return _this;\n  }\n\n  var _proto = LegacyObservableArray.prototype;\n\n  _proto.concat = function concat() {\n    this[$mobx].atom_.reportObserved();\n\n    for (var _len = arguments.length, arrays = new Array(_len), _key = 0; _key < _len; _key++) {\n      arrays[_key] = arguments[_key];\n    }\n\n    return Array.prototype.concat.apply(this.slice(), //@ts-ignore\n    arrays.map(function (a) {\n      return isObservableArray(a) ? a.slice() : a;\n    }));\n  };\n\n  _proto[_Symbol$iterator] = function () {\n    var self = this;\n    var nextIndex = 0;\n    return makeIterable({\n      next: function next() {\n        return nextIndex < self.length ? {\n          value: self[nextIndex++],\n          done: false\n        } : {\n          done: true,\n          value: undefined\n        };\n      }\n    });\n  };\n\n  _createClass(LegacyObservableArray, [{\n    key: \"length\",\n    get: function get() {\n      return this[$mobx].getArrayLength_();\n    },\n    set: function set(newLength) {\n      this[$mobx].setArrayLength_(newLength);\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return \"Array\";\n    }\n  }]);\n\n  return LegacyObservableArray;\n}(StubArray, Symbol.toStringTag, Symbol.iterator);\n\nObject.entries(arrayExtensions).forEach(function (_ref) {\n  var prop = _ref[0],\n      fn = _ref[1];\n\n  if (prop !== \"concat\") {\n    addHiddenProp(LegacyObservableArray.prototype, prop, fn);\n  }\n});\n\nfunction createArrayEntryDescriptor(index) {\n  return {\n    enumerable: false,\n    configurable: true,\n    get: function get() {\n      return this[$mobx].get_(index);\n    },\n    set: function set(value) {\n      this[$mobx].set_(index, value);\n    }\n  };\n}\n\nfunction createArrayBufferItem(index) {\n  defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index));\n}\n\nfunction reserveArrayBuffer(max) {\n  if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n    for (var index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n      createArrayBufferItem(index);\n    }\n\n    OBSERVABLE_ARRAY_BUFFER_SIZE = max;\n  }\n}\n\nreserveArrayBuffer(1000);\n\nfunction createLegacyArray(initialValues, enhancer, name) {\n  return new LegacyObservableArray(initialValues, enhancer, name);\n}\n\nfunction getAtom(thing, property) {\n  if (typeof thing === \"object\" && thing !== null) {\n    if (isObservableArray(thing)) {\n      if (property !== undefined) {\n        die(23);\n      }\n\n      return thing[$mobx].atom_;\n    }\n\n    if (isObservableSet(thing)) {\n      return thing[$mobx];\n    }\n\n    if (isObservableMap(thing)) {\n      if (property === undefined) {\n        return thing.keysAtom_;\n      }\n\n      var observable = thing.data_.get(property) || thing.hasMap_.get(property);\n\n      if (!observable) {\n        die(25, property, getDebugName(thing));\n      }\n\n      return observable;\n    }\n\n    if (isObservableObject(thing)) {\n      if (!property) {\n        return die(26);\n      }\n\n      var _observable = thing[$mobx].values_.get(property);\n\n      if (!_observable) {\n        die(27, property, getDebugName(thing));\n      }\n\n      return _observable;\n    }\n\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n      return thing;\n    }\n  } else if (isFunction(thing)) {\n    if (isReaction(thing[$mobx])) {\n      // disposer function\n      return thing[$mobx];\n    }\n  }\n\n  die(28);\n}\n\nfunction getAdministration(thing, property) {\n  if (!thing) {\n    die(29);\n  }\n\n  if (property !== undefined) {\n    return getAdministration(getAtom(thing, property));\n  }\n\n  if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n    return thing;\n  }\n\n  if (isObservableMap(thing) || isObservableSet(thing)) {\n    return thing;\n  }\n\n  if (thing[$mobx]) {\n    return thing[$mobx];\n  }\n\n  die(24, thing);\n}\n\nfunction getDebugName(thing, property) {\n  var named;\n\n  if (property !== undefined) {\n    named = getAtom(thing, property);\n  } else if (isAction(thing)) {\n    return thing.name;\n  } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n    named = getAdministration(thing);\n  } else {\n    // valid for arrays as well\n    named = getAtom(thing);\n  }\n\n  return named.name_;\n}\n\nvar toString = objectPrototype.toString;\n\nfunction deepEqual(a, b, depth) {\n  if (depth === void 0) {\n    depth = -1;\n  }\n\n  return eq(a, b, depth);\n} // Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\n\n\nfunction eq(a, b, depth, aStack, bStack) {\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\n  // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n  if (a === b) {\n    return a !== 0 || 1 / a === 1 / b;\n  } // `null` or `undefined` only equal to itself (strict comparison).\n\n\n  if (a == null || b == null) {\n    return false;\n  } // `NaN`s are equivalent, but non-reflexive.\n\n\n  if (a !== a) {\n    return b !== b;\n  } // Exhaust primitive checks\n\n\n  var type = typeof a;\n\n  if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n    return false;\n  } // Compare `[[Class]]` names.\n\n\n  var className = toString.call(a);\n\n  if (className !== toString.call(b)) {\n    return false;\n  }\n\n  switch (className) {\n    // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n    case \"[object RegExp]\": // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n    case \"[object String]\":\n      // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n      // equivalent to `new String(\"5\")`.\n      return \"\" + a === \"\" + b;\n\n    case \"[object Number]\":\n      // `NaN`s are equivalent, but non-reflexive.\n      // Object(NaN) is equivalent to NaN.\n      if (+a !== +a) {\n        return +b !== +b;\n      } // An `egal` comparison is performed for other numeric values.\n\n\n      return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n    case \"[object Date]\":\n    case \"[object Boolean]\":\n      // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n      // millisecond representations. Note that invalid dates with millisecond representations\n      // of `NaN` are not equivalent.\n      return +a === +b;\n\n    case \"[object Symbol]\":\n      return typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b);\n\n    case \"[object Map]\":\n    case \"[object Set]\":\n      // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n      // Hide this extra level by increasing the depth.\n      if (depth >= 0) {\n        depth++;\n      }\n\n      break;\n  } // Unwrap any wrapped objects.\n\n\n  a = unwrap(a);\n  b = unwrap(b);\n  var areArrays = className === \"[object Array]\";\n\n  if (!areArrays) {\n    if (typeof a != \"object\" || typeof b != \"object\") {\n      return false;\n    } // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n    // from different frames are.\n\n\n    var aCtor = a.constructor,\n        bCtor = b.constructor;\n\n    if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor && isFunction(bCtor) && bCtor instanceof bCtor) && \"constructor\" in a && \"constructor\" in b) {\n      return false;\n    }\n  }\n\n  if (depth === 0) {\n    return false;\n  } else if (depth < 0) {\n    depth = -1;\n  } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n  // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n  // Initializing stack of traversed objects.\n  // It's done here since we only need them for objects and arrays comparison.\n\n\n  aStack = aStack || [];\n  bStack = bStack || [];\n  var length = aStack.length;\n\n  while (length--) {\n    // Linear search. Performance is inversely proportional to the number of\n    // unique nested structures.\n    if (aStack[length] === a) {\n      return bStack[length] === b;\n    }\n  } // Add the first object to the stack of traversed objects.\n\n\n  aStack.push(a);\n  bStack.push(b); // Recursively compare objects and arrays.\n\n  if (areArrays) {\n    // Compare array lengths to determine if a deep comparison is necessary.\n    length = a.length;\n\n    if (length !== b.length) {\n      return false;\n    } // Deep compare the contents, ignoring non-numeric properties.\n\n\n    while (length--) {\n      if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n        return false;\n      }\n    }\n  } else {\n    // Deep compare objects.\n    var keys = Object.keys(a);\n    var key;\n    length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n    if (Object.keys(b).length !== length) {\n      return false;\n    }\n\n    while (length--) {\n      // Deep compare each member\n      key = keys[length];\n\n      if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n        return false;\n      }\n    }\n  } // Remove the first object from the stack of traversed objects.\n\n\n  aStack.pop();\n  bStack.pop();\n  return true;\n}\n\nfunction unwrap(a) {\n  if (isObservableArray(a)) {\n    return a.slice();\n  }\n\n  if (isES6Map(a) || isObservableMap(a)) {\n    return Array.from(a.entries());\n  }\n\n  if (isES6Set(a) || isObservableSet(a)) {\n    return Array.from(a.entries());\n  }\n\n  return a;\n}\n\nfunction makeIterable(iterator) {\n  iterator[Symbol.iterator] = getSelf;\n  return iterator;\n}\n\nfunction getSelf() {\n  return this;\n}\n\nfunction isAnnotation(thing) {\n  return (// Can be function\n    thing instanceof Object && typeof thing.annotationType_ === \"string\" && isFunction(thing.make_) && isFunction(thing.extend_)\n  );\n}\n/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get a global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\n\n\n[\"Symbol\", \"Map\", \"Set\"].forEach(function (m) {\n  var g = getGlobal();\n\n  if (typeof g[m] === \"undefined\") {\n    die(\"MobX requires global '\" + m + \"' to be available or polyfilled\");\n  }\n});\n\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n  // See: https://github.com/andykog/mobx-devtools/\n  __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n    spy: spy,\n    extras: {\n      getDebugName: getDebugName\n    },\n    $mobx: $mobx\n  });\n}\n\n\n\n/***/ }),\n\n/***/ \"./node_modules/object-assign/index.js\":\n/*!*********************************************!*\\\n  !*** ./node_modules/object-assign/index.js ***!\n  \\*********************************************/\n/***/ ((module) => {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/checkPropTypes.js\":\n/*!***************************************************!*\\\n  !*** ./node_modules/prop-types/checkPropTypes.js ***!\n  \\***************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_284808__) => {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar printWarning = function () {};\n\nif (true) {\n  var ReactPropTypesSecret = __nested_webpack_require_284808__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n\n  var loggedTypeFailures = {};\n\n  var has = __nested_webpack_require_284808__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\n\n  printWarning = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {\n      /**/\n    }\n  };\n}\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\n\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (true) {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n\n        if (error && !(error instanceof Error)) {\n          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n        }\n\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          var stack = getStack ? getStack() : '';\n          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n        }\n      }\n    }\n  }\n}\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\n\n\ncheckPropTypes.resetWarningCache = function () {\n  if (true) {\n    loggedTypeFailures = {};\n  }\n};\n\nmodule.exports = checkPropTypes;\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/factoryWithTypeCheckers.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!\n  \\************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_288896__) => {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar ReactIs = __nested_webpack_require_288896__(/*! react-is */ \"./node_modules/react-is/index.js\");\n\nvar assign = __nested_webpack_require_288896__(/*! object-assign */ \"./node_modules/object-assign/index.js\");\n\nvar ReactPropTypesSecret = __nested_webpack_require_288896__(/*! ./lib/ReactPropTypesSecret */ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\");\n\nvar has = __nested_webpack_require_288896__(/*! ./lib/has */ \"./node_modules/prop-types/lib/has.js\");\n\nvar checkPropTypes = __nested_webpack_require_288896__(/*! ./checkPropTypes */ \"./node_modules/prop-types/checkPropTypes.js\");\n\nvar printWarning = function () {};\n\nif (true) {\n  printWarning = function (text) {\n    var message = 'Warning: ' + text;\n\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function (isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n\n  var ANONYMOUS = '<<anonymous>>'; // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n\n  /*eslint-disable no-self-compare*/\n\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n\n\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data : {};\n    this.stack = '';\n  } // Make `instanceof Error` still work for returned errors.\n\n\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (true) {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (  true && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n\n          if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {\n          expectedType: expectedType\n        });\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n\n      var propValue = props[propName];\n\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (true) {\n        if (arguments.length > 1) {\n          printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n\n        if (type === 'symbol') {\n          return String(value);\n        }\n\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n        true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n\n      if (typeof checker !== 'function') {\n        printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n\n        if (checkerResult == null) {\n          return null;\n        }\n\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n\n      var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      } // We need to check all keys in case some are required but missing from props.\n\n\n      var allKeys = assign({}, props[propName], shapeTypes);\n\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n        if (error) {\n          return error;\n        }\n      }\n\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n\n      case 'boolean':\n        return !propValue;\n\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    } // falsy value can't be a Symbol\n\n\n    if (!propValue) {\n      return false;\n    } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n\n    return propType;\n  } // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n\n\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n\n    var propType = getPropType(propValue);\n\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n\n    return propType;\n  } // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n\n\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n\n      default:\n        return type;\n    }\n  } // Returns class name of the object, if any.\n\n\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/index.js\":\n/*!******************************************!*\\\n  !*** ./node_modules/prop-types/index.js ***!\n  \\******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_311763__) => {\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (true) {\n  var ReactIs = __nested_webpack_require_311763__(/*! react-is */ \"./node_modules/react-is/index.js\"); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = __nested_webpack_require_311763__(/*! ./factoryWithTypeCheckers */ \"./node_modules/prop-types/factoryWithTypeCheckers.js\")(ReactIs.isElement, throwOnDirectAccess);\n} else {}\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/lib/ReactPropTypesSecret.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!\n  \\*************************************************************/\n/***/ ((module) => {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;\n\n/***/ }),\n\n/***/ \"./node_modules/prop-types/lib/has.js\":\n/*!********************************************!*\\\n  !*** ./node_modules/prop-types/lib/has.js ***!\n  \\********************************************/\n/***/ ((module) => {\n\nmodule.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n\n/***/ }),\n\n/***/ \"./node_modules/react-is/cjs/react-is.development.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/react-is/cjs/react-is.development.js ***!\n  \\***********************************************************/\n/***/ ((__unused_webpack_module, exports) => {\n\n\"use strict\";\n/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nif (true) {\n  (function () {\n    'use strict'; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n    // nor polyfill, then a plain number is used for performance.\n\n    var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n    // (unstable) APIs that have been removed. Can we remove the symbols?\n\n    var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\n    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n    var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\n    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\n    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\n    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\n    function isValidElementType(type) {\n      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n    }\n\n    function typeOf(object) {\n      if (typeof object === 'object' && object !== null) {\n        var $$typeof = object.$$typeof;\n\n        switch ($$typeof) {\n          case REACT_ELEMENT_TYPE:\n            var type = object.type;\n\n            switch (type) {\n              case REACT_ASYNC_MODE_TYPE:\n              case REACT_CONCURRENT_MODE_TYPE:\n              case REACT_FRAGMENT_TYPE:\n              case REACT_PROFILER_TYPE:\n              case REACT_STRICT_MODE_TYPE:\n              case REACT_SUSPENSE_TYPE:\n                return type;\n\n              default:\n                var $$typeofType = type && type.$$typeof;\n\n                switch ($$typeofType) {\n                  case REACT_CONTEXT_TYPE:\n                  case REACT_FORWARD_REF_TYPE:\n                  case REACT_LAZY_TYPE:\n                  case REACT_MEMO_TYPE:\n                  case REACT_PROVIDER_TYPE:\n                    return $$typeofType;\n\n                  default:\n                    return $$typeof;\n                }\n\n            }\n\n          case REACT_PORTAL_TYPE:\n            return $$typeof;\n        }\n      }\n\n      return undefined;\n    } // AsyncMode is deprecated along with isAsyncMode\n\n\n    var AsyncMode = REACT_ASYNC_MODE_TYPE;\n    var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n    var ContextConsumer = REACT_CONTEXT_TYPE;\n    var ContextProvider = REACT_PROVIDER_TYPE;\n    var Element = REACT_ELEMENT_TYPE;\n    var ForwardRef = REACT_FORWARD_REF_TYPE;\n    var Fragment = REACT_FRAGMENT_TYPE;\n    var Lazy = REACT_LAZY_TYPE;\n    var Memo = REACT_MEMO_TYPE;\n    var Portal = REACT_PORTAL_TYPE;\n    var Profiler = REACT_PROFILER_TYPE;\n    var StrictMode = REACT_STRICT_MODE_TYPE;\n    var Suspense = REACT_SUSPENSE_TYPE;\n    var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n    function isAsyncMode(object) {\n      {\n        if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n          hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n          console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n        }\n      }\n      return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n    }\n\n    function isConcurrentMode(object) {\n      return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n    }\n\n    function isContextConsumer(object) {\n      return typeOf(object) === REACT_CONTEXT_TYPE;\n    }\n\n    function isContextProvider(object) {\n      return typeOf(object) === REACT_PROVIDER_TYPE;\n    }\n\n    function isElement(object) {\n      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    function isForwardRef(object) {\n      return typeOf(object) === REACT_FORWARD_REF_TYPE;\n    }\n\n    function isFragment(object) {\n      return typeOf(object) === REACT_FRAGMENT_TYPE;\n    }\n\n    function isLazy(object) {\n      return typeOf(object) === REACT_LAZY_TYPE;\n    }\n\n    function isMemo(object) {\n      return typeOf(object) === REACT_MEMO_TYPE;\n    }\n\n    function isPortal(object) {\n      return typeOf(object) === REACT_PORTAL_TYPE;\n    }\n\n    function isProfiler(object) {\n      return typeOf(object) === REACT_PROFILER_TYPE;\n    }\n\n    function isStrictMode(object) {\n      return typeOf(object) === REACT_STRICT_MODE_TYPE;\n    }\n\n    function isSuspense(object) {\n      return typeOf(object) === REACT_SUSPENSE_TYPE;\n    }\n\n    exports.AsyncMode = AsyncMode;\n    exports.ConcurrentMode = ConcurrentMode;\n    exports.ContextConsumer = ContextConsumer;\n    exports.ContextProvider = ContextProvider;\n    exports.Element = Element;\n    exports.ForwardRef = ForwardRef;\n    exports.Fragment = Fragment;\n    exports.Lazy = Lazy;\n    exports.Memo = Memo;\n    exports.Portal = Portal;\n    exports.Profiler = Profiler;\n    exports.StrictMode = StrictMode;\n    exports.Suspense = Suspense;\n    exports.isAsyncMode = isAsyncMode;\n    exports.isConcurrentMode = isConcurrentMode;\n    exports.isContextConsumer = isContextConsumer;\n    exports.isContextProvider = isContextProvider;\n    exports.isElement = isElement;\n    exports.isForwardRef = isForwardRef;\n    exports.isFragment = isFragment;\n    exports.isLazy = isLazy;\n    exports.isMemo = isMemo;\n    exports.isPortal = isPortal;\n    exports.isProfiler = isProfiler;\n    exports.isStrictMode = isStrictMode;\n    exports.isSuspense = isSuspense;\n    exports.isValidElementType = isValidElementType;\n    exports.typeOf = typeOf;\n  })();\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-is/index.js\":\n/*!****************************************!*\\\n  !*** ./node_modules/react-is/index.js ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_321407__) => {\n\n\"use strict\";\n\n\nif (false) {} else {\n  module.exports = __nested_webpack_require_321407__(/*! ./cjs/react-is.development.js */ \"./node_modules/react-is/cjs/react-is.development.js\");\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/Tab.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/Tab.js ***!\n  \\*******************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_321910__) => {\n\n\"use strict\";\n__nested_webpack_require_321910__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_321910__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_321910__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_321910__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_321910__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_321910__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_321910__(/*! clsx */ \"./node_modules/clsx/dist/clsx.m.js\");\nvar _excluded = [\"children\", \"className\", \"disabled\", \"disabledClassName\", \"focus\", \"id\", \"panelId\", \"selected\", \"selectedClassName\", \"tabIndex\", \"tabRef\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n\n\n\nvar DEFAULT_CLASS = 'react-tabs__tab';\nvar DEFAULT_PROPS = {\n  className: DEFAULT_CLASS,\n  disabledClassName: DEFAULT_CLASS + \"--disabled\",\n  focus: false,\n  id: null,\n  panelId: null,\n  selected: false,\n  selectedClassName: DEFAULT_CLASS + \"--selected\"\n};\nvar propTypes =   true ? {\n  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)]),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)]),\n  disabled: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  disabledClassName: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  focus: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  // private\n  id: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  // private\n  panelId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  // private\n  selected: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  // private\n  selectedClassName: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  tabIndex: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  tabRef: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func) // private\n\n} : 0;\n\nvar Tab = function Tab(props) {\n  var _cx;\n\n  var nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n\n  var children = props.children,\n      className = props.className,\n      disabled = props.disabled,\n      disabledClassName = props.disabledClassName,\n      focus = props.focus,\n      id = props.id,\n      panelId = props.panelId,\n      selected = props.selected,\n      selectedClassName = props.selectedClassName,\n      tabIndex = props.tabIndex,\n      tabRef = props.tabRef,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (selected && focus) {\n      nodeRef.current.focus();\n    }\n  }, [selected, focus]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"li\", _extends({}, attributes, {\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(className, (_cx = {}, _cx[selectedClassName] = selected, _cx[disabledClassName] = disabled, _cx)),\n    ref: function ref(node) {\n      nodeRef.current = node;\n      if (tabRef) tabRef(node);\n    },\n    role: \"tab\",\n    id: id,\n    \"aria-selected\": selected ? 'true' : 'false',\n    \"aria-disabled\": disabled ? 'true' : 'false',\n    \"aria-controls\": panelId,\n    tabIndex: tabIndex || (selected ? '0' : null),\n    \"data-rttab\": true\n  }), children);\n};\n\nTab.propTypes =   true ? propTypes : 0;\nTab.tabsRole = 'Tab';\nTab.defaultProps = DEFAULT_PROPS;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tab);\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/TabList.js\":\n/*!***********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/TabList.js ***!\n  \\***********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_327050__) => {\n\n\"use strict\";\n__nested_webpack_require_327050__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_327050__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_327050__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_327050__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_327050__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_327050__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_327050__(/*! clsx */ \"./node_modules/clsx/dist/clsx.m.js\");\nvar _excluded = [\"children\", \"className\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n\n\n\nvar defaultProps = {\n  className: 'react-tabs__tab-list'\n};\nvar propTypes =   true ? {\n  children: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().object), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array)]),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)])\n} : 0;\n\nvar TabList = function TabList(props) {\n  var children = props.children,\n      className = props.className,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"ul\", _extends({}, attributes, {\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(className),\n    role: \"tablist\"\n  }), children);\n};\n\nTabList.tabsRole = 'TabList';\nTabList.propTypes =   true ? propTypes : 0;\nTabList.defaultProps = defaultProps;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TabList);\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/TabPanel.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/TabPanel.js ***!\n  \\************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_330198__) => {\n\n\"use strict\";\n__nested_webpack_require_330198__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_330198__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_330198__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_330198__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_330198__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_330198__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_330198__(/*! clsx */ \"./node_modules/clsx/dist/clsx.m.js\");\nvar _excluded = [\"children\", \"className\", \"forceRender\", \"id\", \"selected\", \"selectedClassName\", \"tabId\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n\n\n\nvar DEFAULT_CLASS = 'react-tabs__tab-panel';\nvar defaultProps = {\n  className: DEFAULT_CLASS,\n  forceRender: false,\n  selectedClassName: DEFAULT_CLASS + \"--selected\"\n};\nvar propTypes =   true ? {\n  children: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().node),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_2___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_2___default().object)]),\n  forceRender: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  id: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  // private\n  selected: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),\n  // private\n  selectedClassName: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),\n  tabId: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string) // private\n\n} : 0;\n\nvar TabPanel = function TabPanel(props) {\n  var _cx;\n\n  var children = props.children,\n      className = props.className,\n      forceRender = props.forceRender,\n      id = props.id,\n      selected = props.selected,\n      selectedClassName = props.selectedClassName,\n      tabId = props.tabId,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({}, attributes, {\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(className, (_cx = {}, _cx[selectedClassName] = selected, _cx)),\n    role: \"tabpanel\",\n    id: id,\n    \"aria-labelledby\": tabId\n  }), forceRender || selected ? children : null);\n};\n\nTabPanel.tabsRole = 'TabPanel';\nTabPanel.propTypes =   true ? propTypes : 0;\nTabPanel.defaultProps = defaultProps;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TabPanel);\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/Tabs.js\":\n/*!********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/Tabs.js ***!\n  \\********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_334094__) => {\n\n\"use strict\";\n__nested_webpack_require_334094__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_334094__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_334094__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_334094__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_334094__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_334094__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _helpers_propTypes__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_334094__(/*! ../helpers/propTypes */ \"./node_modules/react-tabs/esm/helpers/propTypes.js\");\n/* harmony import */ var _UncontrolledTabs__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_334094__(/*! ./UncontrolledTabs */ \"./node_modules/react-tabs/esm/components/UncontrolledTabs.js\");\n/* harmony import */ var _helpers_count__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_334094__(/*! ../helpers/count */ \"./node_modules/react-tabs/esm/helpers/count.js\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n\n\n\n\n\nvar MODE_CONTROLLED = 0;\nvar MODE_UNCONTROLLED = 1;\nvar propTypes =   true ? {\n  children: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_1__.childrenPropType,\n  className: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object)]),\n  defaultFocus: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n  defaultIndex: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().number),\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf(['rtl', 'ltr']),\n  disabledTabClassName: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n  disableUpDownKeys: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n  domRef: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().func),\n  environment: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().object),\n  focusTabOnClick: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n  forceRenderTabPanel: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().bool),\n  onSelect: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_1__.onSelectPropType,\n  selectedIndex: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_1__.selectedIndexPropType,\n  selectedTabClassName: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string),\n  selectedTabPanelClassName: (prop_types__WEBPACK_IMPORTED_MODULE_4___default().string)\n} : 0;\nvar defaultProps = {\n  defaultFocus: false,\n  focusTabOnClick: true,\n  forceRenderTabPanel: false,\n  selectedIndex: null,\n  defaultIndex: null,\n  environment: null,\n  disableUpDownKeys: false\n};\n\nvar getModeFromProps = function getModeFromProps(props) {\n  return props.selectedIndex === null ? MODE_UNCONTROLLED : MODE_CONTROLLED;\n};\n\nvar checkForIllegalModeChange = function checkForIllegalModeChange(props, mode) {\n  if (  true && mode != undefined && mode !== getModeFromProps(props)) {\n    throw new Error(\"Switching between controlled mode (by using `selectedIndex`) and uncontrolled mode is not supported in `Tabs`.\\nFor more information about controlled and uncontrolled mode of react-tabs see https://github.com/reactjs/react-tabs#controlled-vs-uncontrolled-mode.\");\n  }\n};\n/**\n * State:\n *   mode: Initialized only once from props and never changes\n *   selectedIndex: null if controlled mode, otherwise initialized with prop defaultIndex, changed on selection of tabs, has effect to ensure it never gets out of bound\n *   focus: Because we never remove focus from the Tabs this state is only used to indicate that we should focus the current tab.\n *          It is initialized from the prop defaultFocus, and after the first render it is reset back to false. Later it can become true again when using keys to navigate the tabs.\n */\n\n\nvar Tabs = function Tabs(props) {\n  var children = props.children,\n      defaultFocus = props.defaultFocus,\n      defaultIndex = props.defaultIndex,\n      focusTabOnClick = props.focusTabOnClick,\n      onSelect = props.onSelect;\n\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultFocus),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  var _useState2 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(getModeFromProps(props)),\n      mode = _useState2[0];\n\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(mode === MODE_UNCONTROLLED ? defaultIndex || 0 : null),\n      selectedIndex = _useState3[0],\n      setSelectedIndex = _useState3[1];\n\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    // Reset focus after initial render, see comment above\n    setFocus(false);\n  }, []);\n\n  if (mode === MODE_UNCONTROLLED) {\n    // Ensure that we handle removed tabs and don't let selectedIndex get out of bounds\n    var tabsCount = (0,_helpers_count__WEBPACK_IMPORTED_MODULE_3__.getTabsCount)(children);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n      if (selectedIndex != null) {\n        var maxTabIndex = Math.max(0, tabsCount - 1);\n        setSelectedIndex(Math.min(selectedIndex, maxTabIndex));\n      }\n    }, [tabsCount]);\n  }\n\n  checkForIllegalModeChange(props, mode);\n\n  var handleSelected = function handleSelected(index, last, event) {\n    // Call change event handler\n    if (typeof onSelect === 'function') {\n      // Check if the change event handler cancels the tab change\n      if (onSelect(index, last, event) === false) return;\n    } // Always set focus on tabs unless it is disabled\n\n\n    if (focusTabOnClick) {\n      setFocus(true);\n    }\n\n    if (mode === MODE_UNCONTROLLED) {\n      // Update selected index\n      setSelectedIndex(index);\n    }\n  };\n\n  var subProps = _extends({}, props);\n\n  subProps.focus = focus;\n  subProps.onSelect = handleSelected;\n\n  if (selectedIndex != null) {\n    subProps.selectedIndex = selectedIndex;\n  }\n\n  delete subProps.defaultFocus;\n  delete subProps.defaultIndex;\n  delete subProps.focusTabOnClick;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_UncontrolledTabs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], subProps, children);\n};\n\nTabs.propTypes =   true ? propTypes : 0;\nTabs.defaultProps = defaultProps;\nTabs.tabsRole = 'Tabs';\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tabs);\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/components/UncontrolledTabs.js\":\n/*!********************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/components/UncontrolledTabs.js ***!\n  \\********************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_341431__) => {\n\n\"use strict\";\n__nested_webpack_require_341431__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_341431__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_341431__(/*! prop-types */ \"./node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__nested_webpack_require_341431__.n(prop_types__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_341431__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_341431__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_341431__(/*! clsx */ \"./node_modules/clsx/dist/clsx.m.js\");\n/* harmony import */ var _helpers_uuid__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_341431__(/*! ../helpers/uuid */ \"./node_modules/react-tabs/esm/helpers/uuid.js\");\n/* harmony import */ var _helpers_propTypes__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_341431__(/*! ../helpers/propTypes */ \"./node_modules/react-tabs/esm/helpers/propTypes.js\");\n/* harmony import */ var _helpers_count__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_341431__(/*! ../helpers/count */ \"./node_modules/react-tabs/esm/helpers/count.js\");\n/* harmony import */ var _helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_341431__(/*! ../helpers/childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _helpers_elementTypes__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_341431__(/*! ../helpers/elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\nvar _excluded = [\"children\", \"className\", \"disabledTabClassName\", \"domRef\", \"focus\", \"forceRenderTabPanel\", \"onSelect\", \"selectedIndex\", \"selectedTabClassName\", \"selectedTabPanelClassName\", \"environment\", \"disableUpDownKeys\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n\n\n\n\n\n\n\n\n\nfunction isNode(node) {\n  return node && 'getAttribute' in node;\n} // Determine if a node from event.target is a Tab element\n\n\nfunction isTabNode(node) {\n  return isNode(node) && node.getAttribute('data-rttab');\n} // Determine if a tab node is disabled\n\n\nfunction isTabDisabled(node) {\n  return isNode(node) && node.getAttribute('aria-disabled') === 'true';\n}\n\nvar canUseActiveElement;\n\nfunction determineCanUseActiveElement(environment) {\n  var env = environment || (typeof window !== 'undefined' ? window : undefined);\n\n  try {\n    canUseActiveElement = !!(typeof env !== 'undefined' && env.document && env.document.activeElement);\n  } catch (e) {\n    // Work around for IE bug when accessing document.activeElement in an iframe\n    // Refer to the following resources:\n    // http://stackoverflow.com/a/10982960/369687\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n    // istanbul ignore next\n    canUseActiveElement = false;\n  }\n}\n\nvar defaultProps = {\n  className: 'react-tabs',\n  focus: false\n};\nvar propTypes =   true ? {\n  children: _helpers_propTypes__WEBPACK_IMPORTED_MODULE_3__.childrenPropType,\n  direction: prop_types__WEBPACK_IMPORTED_MODULE_7___default().oneOf(['rtl', 'ltr']),\n  className: prop_types__WEBPACK_IMPORTED_MODULE_7___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_7___default().string), (prop_types__WEBPACK_IMPORTED_MODULE_7___default().array), (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object)]),\n  disabledTabClassName: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string),\n  disableUpDownKeys: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),\n  domRef: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().func),\n  focus: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),\n  forceRenderTabPanel: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().bool),\n  onSelect: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().func.isRequired),\n  selectedIndex: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().number.isRequired),\n  selectedTabClassName: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string),\n  selectedTabPanelClassName: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().string),\n  environment: (prop_types__WEBPACK_IMPORTED_MODULE_7___default().object)\n} : 0;\n\nvar UncontrolledTabs = function UncontrolledTabs(props) {\n  var tabNodes = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  var tabIds = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n  var panelIds = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n\n  var _ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n\n  function setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= getTabsCount()) return;\n    var onSelect = props.onSelect,\n        selectedIndex = props.selectedIndex; // Call change event handler\n\n    onSelect(index, selectedIndex, event);\n  }\n\n  function getNextTab(index) {\n    var count = getTabsCount(); // Look for non-disabled tab from index to the last tab on the right\n\n    for (var i = index + 1; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from first on left to index\n\n\n    for (var _i = 0; _i < index; _i++) {\n      if (!isTabDisabled(getTab(_i))) {\n        return _i;\n      }\n    } // All tabs are disabled, return index\n\n    /* istanbul ignore next */\n\n\n    return index;\n  }\n\n  function getPrevTab(index) {\n    var i = index; // Look for non-disabled tab from index to first tab on the left\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // If no tab found, continue searching from last tab on right to index\n\n\n    i = getTabsCount();\n\n    while (i-- > index) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    } // All tabs are disabled, return index\n\n    /* istanbul ignore next */\n\n\n    return index;\n  }\n\n  function getFirstTab() {\n    var count = getTabsCount(); // Look for non disabled tab from the first tab\n\n    for (var i = 0; i < count; i++) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n    /* istanbul ignore next */\n\n\n    return null;\n  }\n\n  function getLastTab() {\n    var i = getTabsCount(); // Look for non disabled tab from the last tab\n\n    while (i--) {\n      if (!isTabDisabled(getTab(i))) {\n        return i;\n      }\n    }\n    /* istanbul ignore next */\n\n\n    return null;\n  }\n\n  function getTabsCount() {\n    var children = props.children;\n    return (0,_helpers_count__WEBPACK_IMPORTED_MODULE_4__.getTabsCount)(children);\n  }\n\n  function getTab(index) {\n    return tabNodes.current[\"tabs-\" + index];\n  }\n\n  function getChildren() {\n    var index = 0;\n    var children = props.children,\n        disabledTabClassName = props.disabledTabClassName,\n        focus = props.focus,\n        forceRenderTabPanel = props.forceRenderTabPanel,\n        selectedIndex = props.selectedIndex,\n        selectedTabClassName = props.selectedTabClassName,\n        selectedTabPanelClassName = props.selectedTabPanelClassName,\n        environment = props.environment;\n    tabIds.current = tabIds.current || [];\n    panelIds.current = panelIds.current || [];\n    var diff = tabIds.current.length - getTabsCount(); // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n\n    while (diff++ < 0) {\n      tabIds.current.push((0,_helpers_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n      panelIds.current.push((0,_helpers_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n    } // Map children to dynamically setup refs\n\n\n    return (0,_helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_5__.deepMap)(children, function (child) {\n      var result = child; // Clone TabList and Tab components to have refs\n\n      if ((0,_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_6__.isTabList)(child)) {\n        var listIndex = 0; // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n\n        var wasTabFocused = false;\n\n        if (canUseActiveElement == null) {\n          determineCanUseActiveElement(environment);\n        }\n\n        var env = environment || (typeof window !== 'undefined' ? window : undefined);\n\n        if (canUseActiveElement && env) {\n          wasTabFocused = react__WEBPACK_IMPORTED_MODULE_0___default().Children.toArray(child.props.children).filter(_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_6__.isTab).some(function (tab, i) {\n            return env.document.activeElement === getTab(i);\n          });\n        }\n\n        result = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, {\n          children: (0,_helpers_childrenDeepMap__WEBPACK_IMPORTED_MODULE_5__.deepMap)(child.props.children, function (tab) {\n            var key = \"tabs-\" + listIndex;\n            var selected = selectedIndex === listIndex;\n            var props = {\n              tabRef: function tabRef(node) {\n                tabNodes.current[key] = node;\n              },\n              id: tabIds.current[listIndex],\n              panelId: panelIds.current[listIndex],\n              selected: selected,\n              focus: selected && (focus || wasTabFocused)\n            };\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n            listIndex++;\n            return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(tab, props);\n          })\n        });\n      } else if ((0,_helpers_elementTypes__WEBPACK_IMPORTED_MODULE_6__.isTabPanel)(child)) {\n        var _props = {\n          id: panelIds.current[index],\n          tabId: tabIds.current[index],\n          selected: selectedIndex === index\n        };\n        if (forceRenderTabPanel) _props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) _props.selectedClassName = selectedTabPanelClassName;\n        index++;\n        result = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, _props);\n      }\n\n      return result;\n    });\n  }\n\n  function handleKeyDown(e) {\n    var direction = props.direction,\n        disableUpDownKeys = props.disableUpDownKeys;\n\n    if (isTabFromContainer(e.target)) {\n      var index = props.selectedIndex;\n      var preventDefault = false;\n      var useSelectedIndex = false;\n\n      if (e.code === 'Space' || e.keyCode === 32\n      /* space */\n      || e.code === 'Enter' || e.keyCode === 13\n      /* enter */\n      ) {\n        preventDefault = true;\n        useSelectedIndex = false;\n        handleClick(e);\n      } // keyCode is deprecated and only used here for IE\n\n\n      if (e.code === 'ArrowLeft' || e.keyCode === 37\n      /* arrow left */\n      || !disableUpDownKeys && (e.keyCode === 38 || e.code === 'ArrowUp')\n      /* arrow up */\n      ) {\n        // Select next tab to the left, validate if up arrow is not disabled\n        if (direction === 'rtl') {\n          index = getNextTab(index);\n        } else {\n          index = getPrevTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.code === 'ArrowRight' || e.keyCode === 39\n      /* arrow right */\n      || !disableUpDownKeys && (e.keyCode === 40 || e.code === 'ArrowDown')\n      /* arrow down */\n      ) {\n        // Select next tab to the right, validate if down arrow is not disabled\n        if (direction === 'rtl') {\n          index = getPrevTab(index);\n        } else {\n          index = getNextTab(index);\n        }\n\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 35 || e.code === 'End') {\n        // Select last tab (End key)\n        index = getLastTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 36 || e.code === 'Home') {\n        // Select first tab (Home key)\n        index = getFirstTab();\n        preventDefault = true;\n        useSelectedIndex = true;\n      } // This prevents scrollbars from moving around\n\n\n      if (preventDefault) {\n        e.preventDefault();\n      } // Only use the selected index in the state if we're not using the tabbed index\n\n\n      if (useSelectedIndex) {\n        setSelected(index, e);\n      }\n    }\n  }\n\n  function handleClick(e) {\n    var node = e.target;\n\n    do {\n      if (isTabFromContainer(node)) {\n        if (isTabDisabled(node)) {\n          return;\n        }\n\n        var index = [].slice.call(node.parentNode.children).filter(isTabNode).indexOf(node);\n        setSelected(index, e);\n        return;\n      }\n    } while ((node = node.parentNode) != null);\n  }\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n\n\n  function isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    } // Check if the first occurrence of a Tabs container is `this` one.\n\n\n    var nodeAncestor = node.parentElement;\n\n    do {\n      if (nodeAncestor === _ref.current) return true;\n      if (nodeAncestor.getAttribute('data-rttabs')) break;\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  }\n\n  var children = props.children,\n      className = props.className,\n      disabledTabClassName = props.disabledTabClassName,\n      domRef = props.domRef,\n      focus = props.focus,\n      forceRenderTabPanel = props.forceRenderTabPanel,\n      onSelect = props.onSelect,\n      selectedIndex = props.selectedIndex,\n      selectedTabClassName = props.selectedTabClassName,\n      selectedTabPanelClassName = props.selectedTabPanelClassName,\n      environment = props.environment,\n      disableUpDownKeys = props.disableUpDownKeys,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({}, attributes, {\n    className: (0,clsx__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(className),\n    onClick: handleClick,\n    onKeyDown: handleKeyDown,\n    ref: function ref(node) {\n      _ref.current = node;\n      if (domRef) domRef(node);\n    },\n    \"data-rttabs\": true\n  }), getChildren());\n};\n\nUncontrolledTabs.defaultProps = defaultProps;\nUncontrolledTabs.propTypes =   true ? propTypes : 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UncontrolledTabs);\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\":\n/*!****************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/childrenDeepMap.js ***!\n  \\****************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_357207__) => {\n\n\"use strict\";\n__nested_webpack_require_357207__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_357207__.d(__nested_webpack_exports__, {\n/* harmony export */   \"deepForEach\": () => (/* binding */ deepForEach),\n/* harmony export */   \"deepMap\": () => (/* binding */ deepMap)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_357207__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_357207__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_357207__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n\n\n\nfunction isTabChild(child) {\n  return (0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTab)(child) || (0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabList)(child) || (0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabPanel)(child);\n}\n\nfunction deepMap(children, callback) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child, _extends({}, child.props, {\n        children: deepMap(child.props.children, callback)\n      }));\n    }\n\n    return child;\n  });\n}\nfunction deepForEach(children, callback) {\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, function (child) {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTab)(child) || (0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabPanel)(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabList)(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/count.js\":\n/*!******************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/count.js ***!\n  \\******************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_360282__) => {\n\n\"use strict\";\n__nested_webpack_require_360282__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_360282__.d(__nested_webpack_exports__, {\n/* harmony export */   \"getTabsCount\": () => (/* binding */ getTabsCount)\n/* harmony export */ });\n/* harmony import */ var _childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_360282__(/*! ./childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_360282__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\n\n\nfunction getTabsCount(children) {\n  var tabCount = 0;\n  (0,_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__.deepForEach)(children, function (child) {\n    if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTab)(child)) tabCount++;\n  });\n  return tabCount;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\":\n/*!*************************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/elementTypes.js ***!\n  \\*************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_361467__) => {\n\n\"use strict\";\n__nested_webpack_require_361467__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_361467__.d(__nested_webpack_exports__, {\n/* harmony export */   \"isTab\": () => (/* binding */ isTab),\n/* harmony export */   \"isTabList\": () => (/* binding */ isTabList),\n/* harmony export */   \"isTabPanel\": () => (/* binding */ isTabPanel)\n/* harmony export */ });\nfunction makeTypeChecker(tabsRole) {\n  return function (element) {\n    return !!element.type && element.type.tabsRole === tabsRole;\n  };\n}\n\nvar isTab = makeTypeChecker('Tab');\nvar isTabList = makeTypeChecker('TabList');\nvar isTabPanel = makeTypeChecker('TabPanel');\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/propTypes.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/propTypes.js ***!\n  \\**********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_362426__) => {\n\n\"use strict\";\n__nested_webpack_require_362426__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_362426__.d(__nested_webpack_exports__, {\n/* harmony export */   \"childrenPropType\": () => (/* binding */ childrenPropType),\n/* harmony export */   \"onSelectPropType\": () => (/* binding */ onSelectPropType),\n/* harmony export */   \"selectedIndexPropType\": () => (/* binding */ selectedIndexPropType)\n/* harmony export */ });\n/* harmony import */ var _childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_362426__(/*! ./childrenDeepMap */ \"./node_modules/react-tabs/esm/helpers/childrenDeepMap.js\");\n/* harmony import */ var _elementTypes__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_362426__(/*! ./elementTypes */ \"./node_modules/react-tabs/esm/helpers/elementTypes.js\");\n\n\nfunction childrenPropType(props, propName, componentName) {\n  var error;\n  var tabsCount = 0;\n  var panelsCount = 0;\n  var tabListFound = false;\n  var listTabs = [];\n  var children = props[propName];\n  (0,_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__.deepForEach)(children, function (child) {\n    if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabList)(child)) {\n      if (child.props && child.props.children && typeof child.props.children === 'object') {\n        (0,_childrenDeepMap__WEBPACK_IMPORTED_MODULE_0__.deepForEach)(child.props.children, function (listChild) {\n          return listTabs.push(listChild);\n        });\n      }\n\n      if (tabListFound) {\n        error = new Error(\"Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.\");\n      }\n\n      tabListFound = true;\n    }\n\n    if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTab)(child)) {\n      if (!tabListFound || listTabs.indexOf(child) === -1) {\n        error = new Error(\"Found a 'Tab' component outside of the 'TabList' component. 'Tab' components \" + \"have to be inside the 'TabList' component.\");\n      }\n\n      tabsCount++;\n    } else if ((0,_elementTypes__WEBPACK_IMPORTED_MODULE_1__.isTabPanel)(child)) {\n      panelsCount++;\n    }\n  });\n\n  if (!error && tabsCount !== panelsCount) {\n    error = new Error(\"There should be an equal number of 'Tab' and 'TabPanel' in `\" + componentName + \"`. \" + (\"Received \" + tabsCount + \" 'Tab' and \" + panelsCount + \" 'TabPanel'.\"));\n  }\n\n  return error;\n}\nfunction onSelectPropType(props, propName, componentName, location, propFullName) {\n  var prop = props[propName];\n  var name = propFullName || propName;\n  var error = null;\n\n  if (prop && typeof prop !== 'function') {\n    error = new Error(\"Invalid \" + location + \" `\" + name + \"` of type `\" + typeof prop + \"` supplied \" + (\"to `\" + componentName + \"`, expected `function`.\"));\n  } else if (props.selectedIndex != null && prop == null) {\n    error = new Error(\"The \" + location + \" `\" + name + \"` is marked as required in `\" + componentName + \"`, but \" + \"its value is `undefined` or `null`.\\n\" + \"`onSelect` is required when `selectedIndex` is also set. Not doing so will \" + \"make the tabs not do anything, as `selectedIndex` indicates that you want to \" + \"handle the selected tab yourself.\\n\" + \"If you only want to set the inital tab replace `selectedIndex` with `defaultIndex`.\");\n  }\n\n  return error;\n}\nfunction selectedIndexPropType(props, propName, componentName, location, propFullName) {\n  var prop = props[propName];\n  var name = propFullName || propName;\n  var error = null;\n\n  if (prop != null && typeof prop !== 'number') {\n    error = new Error(\"Invalid \" + location + \" `\" + name + \"` of type `\" + typeof prop + \"` supplied to \" + (\"`\" + componentName + \"`, expected `number`.\"));\n  } else if (props.defaultIndex != null && prop != null) {\n    return new Error(\"The \" + location + \" `\" + name + \"` cannot be used together with `defaultIndex` \" + (\"in `\" + componentName + \"`.\\n\") + (\"Either remove `\" + name + \"` to let `\" + componentName + \"` handle the selected \") + \"tab internally or remove `defaultIndex` to handle it yourself.\");\n  }\n\n  return error;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/helpers/uuid.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/react-tabs/esm/helpers/uuid.js ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_366682__) => {\n\n\"use strict\";\n__nested_webpack_require_366682__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_366682__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ uuid),\n/* harmony export */   \"reset\": () => (/* binding */ reset)\n/* harmony export */ });\n// Get a universally unique identifier\nvar count = 0;\nfunction uuid() {\n  return \"react-tabs-\" + count++;\n}\nfunction reset() {\n  count = 0;\n}\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/esm/index.js\":\n/*!**********************************************!*\\\n  !*** ./node_modules/react-tabs/esm/index.js ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_367391__) => {\n\n\"use strict\";\n__nested_webpack_require_367391__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_367391__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Tab\": () => (/* reexport safe */ _components_Tab__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"TabList\": () => (/* reexport safe */ _components_TabList__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"TabPanel\": () => (/* reexport safe */ _components_TabPanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"Tabs\": () => (/* reexport safe */ _components_Tabs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"resetIdCounter\": () => (/* reexport safe */ _helpers_uuid__WEBPACK_IMPORTED_MODULE_4__.reset)\n/* harmony export */ });\n/* harmony import */ var _components_Tabs__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_367391__(/*! ./components/Tabs */ \"./node_modules/react-tabs/esm/components/Tabs.js\");\n/* harmony import */ var _components_TabList__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_367391__(/*! ./components/TabList */ \"./node_modules/react-tabs/esm/components/TabList.js\");\n/* harmony import */ var _components_Tab__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_367391__(/*! ./components/Tab */ \"./node_modules/react-tabs/esm/components/Tab.js\");\n/* harmony import */ var _components_TabPanel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_367391__(/*! ./components/TabPanel */ \"./node_modules/react-tabs/esm/components/TabPanel.js\");\n/* harmony import */ var _helpers_uuid__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_367391__(/*! ./helpers/uuid */ \"./node_modules/react-tabs/esm/helpers/uuid.js\");\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/Constant.tsx\":\n/*!**************************!*\\\n  !*** ./src/Constant.tsx ***!\n  \\**************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_369223__) => {\n\n\"use strict\";\n__nested_webpack_require_369223__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_369223__.d(__nested_webpack_exports__, {\n/* harmony export */   \"ChartTypes\": () => (/* binding */ ChartTypes),\n/* harmony export */   \"Intervals\": () => (/* binding */ Intervals),\n/* harmony export */   \"Languages\": () => (/* binding */ Languages),\n/* harmony export */   \"STATE\": () => (/* binding */ STATE),\n/* harmony export */   \"TooltipsContent\": () => (/* binding */ TooltipsContent),\n/* harmony export */   \"defaultIndicatorConfigs\": () => (/* binding */ defaultIndicatorConfigs),\n/* harmony export */   \"defaultdrawToolsConfigs\": () => (/* binding */ defaultdrawToolsConfigs),\n/* harmony export */   \"getDefaultDrawingConfig\": () => (/* binding */ getDefaultDrawingConfig),\n/* harmony export */   \"getDefaultIndicatorConfig\": () => (/* binding */ getDefaultIndicatorConfig),\n/* harmony export */   \"getDrawTools\": () => (/* binding */ getDrawTools),\n/* harmony export */   \"getDrawingToolConfig\": () => (/* binding */ getDrawingToolConfig),\n/* harmony export */   \"getIndicatorsTree\": () => (/* binding */ getIndicatorsTree),\n/* harmony export */   \"getTooltipLabels\": () => (/* binding */ getTooltipLabels)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_369223__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_369223__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _components_Icons__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_369223__(/*! ./components/Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_369223__(/*! ./utils */ \"./src/utils/index.ts\");\n/* provided dependency */ var t = __nested_webpack_require_369223__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\nconst getDrawTools = () => ({\n  channel: {\n    id: 'channel',\n    text: t.translate('Channel [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsChannelIcon\n  },\n  continuous: {\n    id: 'continuous',\n    text: t.translate('Continuous [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsContinuousIcon\n  },\n  fibfan: {\n    id: 'fibfan',\n    text: t.translate('Fib Fan [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsFibonaccifanIcon\n  },\n  horizontal: {\n    id: 'horizontal',\n    text: t.translate('Horizontal [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsHorizontalIcon\n  },\n  line: {\n    id: 'line',\n    text: t.translate('Line [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsLineIcon\n  },\n  ray: {\n    id: 'ray',\n    text: t.translate('Ray [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsRayIcon\n  },\n  // continuous: { id: 'continuous', text: t.translate('Continuous [num]'), icon: DrawToolsRayIcon },\n  rectangle: {\n    id: 'rectangle',\n    text: t.translate('Rectangle [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsRectangleIcon\n  },\n  trend: {\n    id: 'trend',\n    text: t.translate('Trend [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsTrendIcon\n  },\n  vertical: {\n    id: 'vertical',\n    text: t.translate('Vertical [num]'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.DrawToolsVerticalIcon\n  }\n});\nconst getTooltipLabels = (key, activeItem) => {\n  const getBars = () => `${activeItem?.bars ? `(${activeItem.bars})` : ''}`.toUpperCase();\n\n  const labels = {\n    AwesomeOscillator: {\n      labels: ['AWESOME_HIST']\n    },\n    dpo: {\n      labels: [`DETRENDED ${getBars()}`]\n    },\n    gator: {\n      labels: [`GATOR ${getBars()}_HIST1`, `GATOR ${getBars()}_HIST2`]\n    },\n    macd: {\n      labels: [`MACD MACD ${getBars()}`, `SIGNAL MACD ${getBars()}`, `MACD ${getBars()}_HIST`]\n    },\n    ROC: {\n      labels: [`PRICE ROC ${getBars()}`]\n    },\n    RSI: {\n      labels: [`RSI ${getBars()}`]\n    },\n    StochasticOscillator: {\n      labels: [`%K STOCHASTICS ${getBars()}`, `%D STOCHASTICS ${getBars()}`]\n    },\n    SMI: {\n      labels: [`%K STCH MTM ${getBars()}`, `%D STCH MTM ${getBars()}`]\n    },\n    WilliamsR: {\n      labels: [`Williams %R ${getBars()}`]\n    },\n    Aroon: {\n      labels: [`AROON UP ${getBars()}`, `AROON DOWN ${getBars()}`]\n    },\n    adx: {\n      labels: [`+DI ADX ${getBars()}`, `-DI ADX ${getBars()}`, `ADX ${getBars()}`, `ADX ${getBars()}_HIST`]\n    },\n    commodity_channel_index: {\n      labels: [`CCI ${getBars()}`]\n    },\n    ichimoku: {\n      labels: [`CONVERSION LINE ICHIMOKU CLOUDS ${getBars()}`, `BASE LINE ICHIMOKU CLOUDS ${getBars()}`, `LEADING SPAN A ICHIMOKU CLOUDS ${getBars()}`, `LEADING SPAN B ICHIMOKU CLOUDS ${getBars()}`, `LAGGING SPAN ICHIMOKU CLOUDS ${getBars()}`]\n    },\n    ParabolicSAR: {\n      labels: [`PSAR ${getBars()}`]\n    },\n    bollinger_bands: {\n      labels: [`BOLLINGER BANDS TOP ${getBars()}`, `BOLLINGER BANDS MEDIAN ${getBars()}`, `BOLLINGER BANDS BOTTOM ${getBars()}`]\n    },\n    donchian_channel: {\n      labels: [`DONCHIAN HIGH DONCHIAN CHANNEL ${getBars()}`, `DONCHIAN MEDIAN DONCHIAN CHANNEL ${getBars()}`, `DONCHIAN LOW DONCHIAN CHANNEL ${getBars()}`]\n    },\n    moving_average: {\n      labels: [`MA ${getBars()}`]\n    },\n    moving_envelope_average: {\n      labels: [`MA ENV TOP ${getBars()}`, `MA ENV MEDIAN ${getBars()}`, `MA ENV BOTTOM ${getBars()}`]\n    },\n    rainbow: {\n      labels: Array.from(Array(10), (_, index) => index + 1).map(index => `SMA${index} RAINBOW MA ${getBars()}`)\n    },\n    alligator: {\n      labels: [`JAW ALLIGATOR ${getBars()}`, `TEETH ALLIGATOR ${getBars()}`, `LIPS ALLIGATOR ${getBars()}`]\n    },\n    fcb: {\n      labels: [`FRACTAL HIGH FRACTAL CHAOS BANDS ${getBars()}`, `FRACTAL LOW FRACTAL CHAOS BANDS ${getBars()}`]\n    }\n  };\n  return labels[key];\n};\nconst getIndicatorsTree = () => [{\n  category: 'momentum',\n  name: t.translate('Momentum'),\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCatMomentumIcon,\n  items: [{\n    flutter_chart_id: 'AwesomeOscillator',\n    name: t.translate('Awesome Oscillator'),\n    short_name: t.translate('Awesome'),\n    description: t.translate(\"The Awesome Oscillator is an indicator used to measure market momentum. AO calculates the difference of a 34 Period and 5 Period Simple Moving Averages. The Simple Moving Averages that are used are not calculated using closing price but rather each bar's midpoints. AO is generally used to affirm trends or to anticipate possible reversals.\"),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorAwesomeOscillatorIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'dpo',\n    name: t.translate('Detrended Price Oscillator'),\n    short_name: t.translate('Detrended'),\n    description: t.translate('The Detrended Price Oscillator (DPO) helps to identify price cycles without the influence of short- and long-term trends. The DPO compares a simple moving average to a historical pricenear the middle of a specified period. It also shows the peaks and drops over that particular period, making it easier to predict buy points.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorDTrendedIcon\n  }, // {\n  //     flutter_chart_id: 'gator',\n  //     name: t.translate('Gator Oscillator'),\n  //     short_name: t.translate('Gator'),\n  //     description: t.translate(\n  //         'The Gator Oscillator helps to detect trend changes in the market price. Based on the Alligator indicator, the Gator plots 2 histograms on either side of the zero line. The sleeping phase (absence of a trend) is when the bars on both sides are red. The awakening phase (formation of a trend) is when there are red and green bars on both sides. When there are green bars on both sides, it indicates the eating phase (trend strengthening). A solitary red bar appearing after the eating phase indicates the beginning of the sated phase (trend approaching its end).'\n  //     ),\n  //     icon: IndicatorGatorIcon,\n  //     isPrediction: true,\n  // },\n  {\n    flutter_chart_id: 'macd',\n    name: t.translate('MACD'),\n    short_name: t.translate('MACD'),\n    description: t.translate(\"MACD is a trading indicator used in technical analysis of stock prices. It is supposed to reveal changes in the strength, direction, momentum, and duration of a trend in a stock's price.\"),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorMacdIcon\n  }, {\n    flutter_chart_id: 'ROC',\n    name: t.translate('Price Rate of Change'),\n    short_name: t.translate('Price ROC'),\n    description: t.translate('The Price Rate-of-Change (ROC) indicator displays the difference between the current price and the price x-time periods ago. The difference can be displayed in either points or as a percentage.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorRateChangeIcon\n  }, {\n    flutter_chart_id: 'RSI',\n    name: t.translate('Relative Strength Index (RSI)'),\n    short_name: t.translate('RSI'),\n    description: t.translate('The Relative Strength Index (RSI) was published by J. Welles Wilder. The current price is normalized as a percentage between 0 and 100. The flutter_chart_id of this oscillator is misleading because it does not compare the instrument relative to another instrument or set of instruments, but rather represents the current price relative to other recent pieces within the selected lookback window length.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorRSIIcon\n  }, {\n    flutter_chart_id: 'StochasticOscillator',\n    name: t.translate('Stochastic Oscillator'),\n    short_name: t.translate('Stochastic'),\n    description: t.translate(\"A technical momentum indicator that compares a security's closing price to its price range over a given time period. The oscillator's sensitivity to market movements can be reduced by adjusting the time period or by taking a moving average of the result.\"),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorStochasticOscillatorIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'SMI',\n    name: t.translate('Stochastic Momentum Index'),\n    short_name: t.translate('Stch Mtm'),\n    description: t.translate('The Stochastic Momentum Index (SMI) helps to identify overbought or oversold conditions in the market and to predict bearish or bullish trends. It calculates the distance between the current closing price and the median of the high/low range, and displays 2 lines on the chart: the first (known as %K) represents the price movement while the second (known as %D) is a moving average of the first line. If the closing price is higher than the median of the high/low range, the SMI returns a positive value. If the closing price is lower than the average price, a negative value is returned. Values above 40 indicate a bullish trend while values below -40 indicate a bearish trend.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorStochasticMomentumIcon\n  }, {\n    flutter_chart_id: 'WilliamsR',\n    name: t.translate(\"William's Percent Range\"),\n    short_name: t.translate(\"William's %R\"),\n    description: t.translate('Developed by Larry Williams, Williams %R is a momentum indicator that is the inverse of the Fast Stochastic Oscillator. Also referred to as %R, Williams %R reflects the level of the close relative to the highest high for the look-back period.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorWilliamPercentIcon,\n    isPrediction: true\n  }]\n}, {\n  category: 'trend',\n  name: t.translate('Trend'),\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCatTrendLightIcon,\n  items: [{\n    flutter_chart_id: 'Aroon',\n    name: t.translate('Aroon'),\n    short_name: t.translate('Aroon'),\n    description: t.translate('Developed by Tushar Chande in 1995, Aroon is an indicator system that determines whether a stock is trending or not and how strong the trend is. There are two separate indicators: Aroon-Up and Aroon-Down. A 25-day Aroon-Up measures the number of days since a 25-day high. A 25-day Aroon-Down measures the number of days since a 25-day low.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorAroonIcon\n  }, {\n    flutter_chart_id: 'adx',\n    name: t.translate('ADX/DMS'),\n    short_name: t.translate('ADX'),\n    description: t.translate('The Average Directional Movement Index index (ADX) was developed in 1978 by J. Welles Wilder as an indicator of trend strength in a series of prices of a financial instrument ADX will range between 0 and 100. Generally, ADX readings below 20 indicate trend weakness, and readings above 40 indicate trend strength.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorAdxIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'commodity_channel_index',\n    name: t.translate('Commodity Channel Index'),\n    short_name: t.translate('CCI'),\n    description: t.translate('The Commodity Channel Index (CCI) is a versatile indicator that can be used to identify a new trend or warn of extreme conditions.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCommodityChannelIndexIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'ichimoku',\n    name: t.translate('Ichimoku Clouds'),\n    short_name: t.translate('Ichimoku Clouds'),\n    description: t.translate('The Ichimoku Cloud, also known as Ichimoku Kinko Hyo, is a versatile indicator that defines support and resistance, identifies trend direction, gauges momentum and provides trading signals. Ichimoku Kinko Hyo translates into “one look equilibrium chart”.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorIchimokuIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'ParabolicSAR',\n    name: t.translate('Parabolic SAR'),\n    short_name: t.translate('PSAR'),\n    description: t.translate('The parabolic SAR is calculated almost independently for each trend in the price. When the price is in an uptrend, the SAR emerges below the price and converges upwards towards it. Similarly, on a downtrend, the SAR emerges above the price and converges downwards. At each step within a trend, the SAR is calculated one period in advance.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorParabolicIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'zigzag',\n    name: t.translate('Zig Zag'),\n    short_name: t.translate('Zig Zag'),\n    description: t.translate('Zig Zag helps to identify trend reversals and filters out relatively small price movements by determining the support and resistance levels of the market. It accepts a percentage of deviation as the input and displays a line if the price change is larger than the percentage of deviation. Zig Zag ignores any sideways movement and is useful to filter out “market noise”.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorZigZagIcon,\n    isPrediction: true\n  }]\n}, {\n  category: 'volatility',\n  name: t.translate('Volatility'),\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCatVolatilityIcon,\n  items: [{\n    flutter_chart_id: 'bollinger_bands',\n    name: t.translate('Bollinger Bands'),\n    short_name: t.translate('Bollinger Bands'),\n    description: t.translate('Bollinger Bands can be used to measure the highness or lowness of the price relative to previous trades.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorBollingerIcon\n  }, {\n    flutter_chart_id: 'donchian_channel',\n    name: t.translate('Donchian Channel'),\n    short_name: t.translate('Donchian Channel'),\n    description: t.translate('The Donchian Channel is an indicator used in market trading developed by Richard Donchian. It is formed by taking the highest high and the lowest low of the last n periods. The area between the high and the low is the channel for the period chosen.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorDonchianIcon,\n    isPrediction: true\n  }]\n}, {\n  category: 'moving-averages',\n  name: t.translate('Moving averages'),\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCatAveragesIcon,\n  items: [{\n    flutter_chart_id: 'moving_average',\n    name: t.translate('Moving Average (MA)'),\n    short_name: t.translate('MA'),\n    description: t.translate('The Moving Average (MA) helps to identify the overall market trend by filtering out short-term price fluctuations. Using historical data, it calculates the average price over a specific period and plots a line on the chart. If the MA line moves upwards, it’s an indicator of an uptrend, a downtrend if it moves downwards. A buy signal occurs when the price moves above the MA line.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorAveragesIcon\n  }, {\n    flutter_chart_id: 'moving_envelope_average',\n    name: t.translate('Moving Average Envelope'),\n    short_name: t.translate('MA Env'),\n    description: t.translate('The Moving Average Envelope (MAE) helps to identify strong price movement that indicates the start of a trend. The MAE creates a moving average line as well as 2 bands around it. In theory, when the market price touches the upper or lower bands, a trend reversal will occur, indicating a buy signal.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorEnvelopeIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'rainbow',\n    name: t.translate('Rainbow Moving Average'),\n    short_name: t.translate('Rainbow MA'),\n    description: t.translate('The Rainbow Moving Average (RMA) displays several moving average lines simultaneously. When the lines intersect, it’s an indicator of price reversal and the angle of the lines are helpful to predict the trend strength. The steeper the curve, the stronger the trend. When the price crosses the moving average lines from below, it signals an upward trend. When the price crosses the moving average lines from above, it signals a downward trend. The RMA is easier to use compared to using several different moving average indicators at once.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorRainbowIcon,\n    isPrediction: true\n  }]\n}, {\n  category: 'others',\n  name: t.translate('Others'),\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorCatOtherIcon,\n  items: [{\n    flutter_chart_id: 'alligator',\n    name: t.translate('Alligator'),\n    short_name: t.translate('Alligator'),\n    description: t.translate('Bill Williams introduced the Alligator indicator in 1995. The Alligator is as much a metaphor as it is an indicator. It consists of three lines, overlaid on a pricing chart, that represent the jaw, the teeth and the lips of the beast, and was created to help the trader confirm the presence of a trend and its direction. The Alligator indicator can also help traders designate impulse and corrective wave formations, but the tool works best when combined with a momentum indicator.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorAlligatorIcon,\n    isPrediction: true\n  }, {\n    flutter_chart_id: 'fcb',\n    name: t.translate('Fractal Chaos Band'),\n    short_name: t.translate('Fractal Chaos Band'),\n    description: t.translate('Fractals are indicators on candlestick charts that identify reversal points in the market. Traders often use fractals to get an idea about the direction in which the price will develop. A fractal will form when a particular price pattern happens on a chart.'),\n    icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.IndicatorFractalChaosIcon,\n    isPrediction: true\n  }]\n}];\nconst lineStyle = {\n  thickness: 1,\n  hasArea: false\n};\nconst getDrawingToolConfig = {\n  lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n  pattern: 'solid',\n  isOverlay: true\n};\n\nconst getVerticalDrawingConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pattern: 'solid',\n    color: '#000000',\n    isOverlay: true\n  },\n  parameters: [{\n    path: 'lineStyle',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'pattern',\n    title: t.translate('Pattern'),\n    type: 'pattern',\n    lineWidth: '1',\n    category: 'inputs',\n    defaultValue: 'solid',\n    value: 'solid'\n  }, {\n    path: 'enableLabel',\n    title: t.translate('Axis Label'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getLineDrawingConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pattern: 'solid',\n    color: '#000000',\n    isOverlay: true\n  },\n  parameters: [{\n    path: 'lineStyle',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'pattern',\n    title: t.translate('Pattern'),\n    type: 'pattern',\n    lineWidth: '1',\n    category: 'inputs',\n    defaultValue: 'solid',\n    value: 'solid'\n  }]\n});\n\nconst getTrendlDrawingConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pattern: 'solid',\n    color: '#000000',\n    isOverlay: true\n  },\n  parameters: [{\n    path: 'lineStyle',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fillStyle',\n    title: t.translate('Fill Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'pattern',\n    title: t.translate('Pattern'),\n    type: 'pattern',\n    lineWidth: '1',\n    category: 'inputs',\n    defaultValue: 'solid',\n    value: 'solid'\n  }]\n});\n\nconst defaultdrawToolsConfigs = {\n  vertical: getVerticalDrawingConfig,\n  line: getLineDrawingConfig,\n  ray: getLineDrawingConfig,\n  trend: getTrendlDrawingConfig,\n  channel: getTrendlDrawingConfig,\n  fibfan: getTrendlDrawingConfig,\n  rectangle: getTrendlDrawingConfig,\n  horizontal: getVerticalDrawingConfig,\n  continuous: getLineDrawingConfig\n};\nconst getDefaultDrawingConfig = drawTool => {\n  return defaultdrawToolsConfigs[drawTool]();\n};\n\nconst getFieldTypeOptions = () => ({\n  open: t.translate('Open'),\n  high: t.translate('High'),\n  low: t.translate('Low'),\n  close: t.translate('Close'),\n  'Hl/2': t.translate('Hl/2'),\n  'HlC/3': t.translate('Hlc/3'),\n  'HlCC/4': t.translate('Hlcc/4'),\n  'OHlC/4': t.translate('Ohlc/4')\n});\n\nconst getMovingAverageTypeOptions = () => ({\n  simple: t.translate('Simple'),\n  exponential: t.translate('Exponential'),\n  weighted: t.translate('Weighted'),\n  hull: t.translate('Hull'),\n  zeroLag: t.translate('Zero Lag'),\n  timeSeries: t.translate('Time Series'),\n  wellesWilder: t.translate('Welles Wilder'),\n  variable: t.translate('Variable'),\n  triangular: t.translate('Triangular'),\n  doubleExponential: t.translate('2-Exponential'),\n  tripleExponential: t.translate('3-Exponential')\n});\n\nconst getRSIIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    oscillatorLinesConfig: {\n      overboughtStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      oversoldStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle)\n    },\n    pinLabels: false,\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.overboughtValue',\n      color: 'oscillatorLinesConfig.overboughtStyle.color'\n    },\n    group_key: 'over_bought',\n    title: t.translate('OverBought'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 80,\n      color: '#000000'\n    }\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.oversoldValue',\n      color: 'oscillatorLinesConfig.oversoldStyle.color'\n    },\n    group_key: 'over_sold',\n    title: t.translate('OverSold'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 20,\n      color: '#000000'\n    }\n  }, {\n    path: 'showZones',\n    group_key: 'show_zones',\n    title: t.translate('Show Zones'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getADXIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    positiveLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    negativeLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'positiveLineStyle.color',\n    title: t.translate('+DI'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'negativeLineStyle.color',\n    title: t.translate('-DI'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.positiveColor',\n    title: t.translate('Positive Bar'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.negativeColor',\n    title: t.translate('Negative Bar'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'smoothingPeriod',\n    title: t.translate('Smoothing Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'showSeries',\n    title: t.translate('Series'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }, {\n    path: 'showShading',\n    title: t.translate('Shading'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: false\n  }, {\n    path: 'showHistogram',\n    title: t.translate('Histogram'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: false\n  }]\n});\n\nconst getAwesomeOscillatorIndicatorConfig = () => ({\n  config: {\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'barStyle.positiveColor',\n    title: t.translate('Increasing Bar'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.negativeColor',\n    title: t.translate('Decreasing Bar'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }]\n});\n\nconst getDPOIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    isCentered: true,\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'movingAverageType',\n    title: t.translate('Moving Average Type'),\n    defaultValue: 'simple',\n    category: 'inputs',\n    type: 'select',\n    options: getMovingAverageTypeOptions()\n  }]\n});\n\nconst getGatorIndicatorConfig = () => ({\n  config: {\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'barStyle.positiveColor',\n    title: t.translate('Increasing Bar'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.negativeColor',\n    title: t.translate('Decreasing Bar'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'jawPeriod',\n    title: t.translate('Jaw Period'),\n    defaultValue: 13,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'jawOffset',\n    title: t.translate('Jaw Offset'),\n    defaultValue: 8,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'teethPeriod',\n    title: t.translate('Teeth Period'),\n    defaultValue: 8,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'teethOffset',\n    title: t.translate('Teeth Offset'),\n    defaultValue: 5,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'lipsPeriod',\n    title: t.translate('Lips Period'),\n    defaultValue: 5,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'lipsOffset',\n    title: t.translate('Lips Offset'),\n    defaultValue: 3,\n    category: 'inputs',\n    type: 'number'\n  }]\n});\n\nconst getMACDIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    signalLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'signalLineStyle.color',\n    title: t.translate('Signal'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.positiveColor',\n    title: t.translate('Increasing Bar'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'barStyle.negativeColor',\n    title: t.translate('Decreasing Bar'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fastMAPeriod',\n    title: t.translate('Fast MA Period'),\n    defaultValue: 12,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'slowMAPeriod',\n    title: t.translate('Slow MA Period'),\n    defaultValue: 26,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'signalPeriod',\n    title: t.translate('Signal Period'),\n    defaultValue: 9,\n    category: 'inputs',\n    type: 'number'\n  }]\n});\n\nconst getROCIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pipSize: 4,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }]\n});\n\nconst getStochasticOscillatorIndicatorConfig = () => ({\n  config: {\n    lineStyle: { ...(0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      color: '#FFFFFF'\n    },\n    fastLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    slowLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    oscillatorLinesConfig: {\n      overboughtStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      oversoldStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle)\n    },\n    pinLabels: false,\n    overBoughtPrice: 80,\n    overSoldPrice: 20,\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'fastLineStyle.color',\n    title: t.translate('Fast'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'slowLineStyle.color',\n    title: t.translate('Slow'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'isSmooth',\n    title: t.translate('Smooth'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.overboughtValue',\n      color: 'oscillatorLinesConfig.overboughtStyle.color'\n    },\n    group_key: 'over_bought',\n    title: t.translate('OverBought'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 80,\n      color: '#000000'\n    }\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.oversoldValue',\n      color: 'oscillatorLinesConfig.oversoldStyle.color'\n    },\n    group_key: 'over_sold',\n    title: t.translate('OverSold'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 20,\n      color: '#000000'\n    }\n  }, {\n    path: 'showZones',\n    group_key: 'show_zones',\n    title: t.translate('Show Zones'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getSMIIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    signalLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    group_key: '%k',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    group_key: '%k',\n    title: t.translate('Period'),\n    defaultValue: 10,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'smoothingPeriod',\n    group_key: '%k',\n    title: t.translate('Smoothing Period'),\n    defaultValue: 3,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'doubleSmoothingPeriod',\n    group_key: '%k',\n    title: t.translate('Double Smoothing Period'),\n    defaultValue: 3,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'signalLineStyle.color',\n    group_key: '%d',\n    title: t.translate('Color'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'signalPeriod',\n    group_key: '%d',\n    title: t.translate('Signal Period'),\n    defaultValue: 10,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'maType',\n    group_key: '%d',\n    title: t.translate('Field'),\n    defaultValue: 'exponential',\n    category: 'inputs',\n    type: 'select',\n    options: getMovingAverageTypeOptions()\n  }, {\n    paths: {\n      value: 'overboughtValue'\n    },\n    group_key: 'over_bought',\n    title: t.translate('OverBought'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 40,\n      color: '#000000'\n    }\n  }, {\n    paths: {\n      value: 'oversoldValue'\n    },\n    group_key: 'over_sold',\n    title: t.translate('OverSold'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: -40,\n      color: '#000000'\n    }\n  }, {\n    path: 'showZones',\n    group_key: 'show_zones',\n    title: t.translate('Show Zones'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getWilliamsRIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    zeroHorizontalLinesStyle: { ...(0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      color: '0xFFF44336'\n    },\n    oscillatorLimits: {\n      overboughtStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      oversoldStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle)\n    },\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    paths: {\n      value: 'oscillatorLimits.overboughtValue',\n      color: 'oscillatorLimits.overboughtStyle.color'\n    },\n    group_key: 'over_bought',\n    title: t.translate('OverBought'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: -20,\n      color: '#000000'\n    }\n  }, {\n    paths: {\n      value: 'oscillatorLimits.oversoldValue',\n      color: 'oscillatorLimits.oversoldStyle.color'\n    },\n    group_key: 'over_sold',\n    title: t.translate('OverSold'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: -80,\n      color: '#000000'\n    }\n  }, {\n    path: 'showZones',\n    group_key: 'show_zones',\n    title: t.translate('Show Zones'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getAroonIndicatorConfig = () => ({\n  config: {\n    upLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    downLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'upLineStyle.color',\n    title: t.translate('Aroon Up'),\n    defaultValue: '#00DD00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'downLineStyle.color',\n    title: t.translate('Aroon Down'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 14,\n    category: 'inputs',\n    type: 'number'\n  }]\n});\n\nconst getCCIIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    oscillatorLinesConfig: {\n      overboughtStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n      oversoldStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle)\n    },\n    pipSize: 2,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 20,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.overboughtValue',\n      color: 'oscillatorLinesConfig.overboughtStyle.color'\n    },\n    group_key: 'over_bought',\n    title: t.translate('OverBought'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: 100,\n      color: '#000000'\n    }\n  }, {\n    paths: {\n      value: 'oscillatorLinesConfig.oversoldValue',\n      color: 'oscillatorLinesConfig.oversoldStyle.color'\n    },\n    group_key: 'over_sold',\n    title: t.translate('OverSold'),\n    type: 'numbercolorpicker',\n    category: 'parameters',\n    defaultValue: {\n      value: -100,\n      color: '#000000'\n    }\n  }, {\n    path: 'showZones',\n    group_key: 'show_zones',\n    title: t.translate('Show Zones'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getIchimokuIndicatorConfig = () => ({\n  config: {\n    conversionLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    baseLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    spanALineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    laggingLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    spanBLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    conversionLinePeriod: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'conversionLineStyle.color',\n    title: t.translate('Conversion Line'),\n    defaultValue: '#0000FF',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'baseLineStyle.color',\n    title: t.translate('Base Line'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'spanALineStyle.color',\n    title: t.translate('Leading Span A'),\n    defaultValue: '#00FF00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'spanBLineStyle.color',\n    title: t.translate('Leading Span B'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'laggingLineStyle.color',\n    title: t.translate('Lagging Span'),\n    defaultValue: '#808000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'conversionLinePeriod',\n    title: t.translate('Conversion Line Period'),\n    defaultValue: 9,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'baseLinePeriod',\n    title: t.translate('Base Line Period'),\n    defaultValue: 26,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'spanBPeriod',\n    title: t.translate('Leading Span B Period'),\n    defaultValue: 52,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'laggingSpanOffset',\n    title: t.translate('Lagging Span Period'),\n    defaultValue: -26,\n    category: 'inputs',\n    type: 'number',\n    min: -100,\n    max: 0\n  }]\n});\n\nconst getParabolicSARIndicatorConfig = () => ({\n  config: {\n    scatterStyle: {\n      radius: 1.5\n    },\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'scatterStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'minAccelerationFactor',\n    title: t.translate('Minimum AF'),\n    defaultValue: 0.02,\n    category: 'inputs',\n    type: 'number',\n    step: 0.01\n  }, {\n    path: 'maxAccelerationFactor',\n    title: t.translate('Maximum AF'),\n    defaultValue: 0.2,\n    category: 'inputs',\n    type: 'number',\n    step: 0.01\n  }]\n});\n\nconst getZigzagIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'distance',\n    title: t.translate('Distance(%)'),\n    defaultValue: 10,\n    category: 'inputs',\n    type: 'number'\n  }]\n});\n\nconst getBollingerBandsIndicatorConfig = () => ({\n  config: {\n    upperLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    middleLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    lowerLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'upperLineStyle.color',\n    title: t.translate('Bollinger Bands Top'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'middleLineStyle.color',\n    title: t.translate('Bollinger Bands Median'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lowerLineStyle.color',\n    title: t.translate('Bollinger Bands Bottom'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fillColor',\n    title: t.translate('Fill Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 20,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'standardDeviation',\n    title: t.translate('Standard Deviations'),\n    defaultValue: 2,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'movingAverageType',\n    title: t.translate('Moving Average Type'),\n    defaultValue: 'simple',\n    category: 'inputs',\n    type: 'select',\n    options: getMovingAverageTypeOptions()\n  }, {\n    path: 'showChannelFill',\n    title: t.translate('Channel Fill'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getDonchianChannelIndicatorConfig = () => ({\n  config: {\n    upperLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    middleLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    lowerLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'upperLineStyle.color',\n    title: t.translate('Donchian High'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'middleLineStyle.color',\n    title: t.translate('Donchian Median'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lowerLineStyle.color',\n    title: t.translate('Donchian Low'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fillColor',\n    title: t.translate('Fill Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'highPeriod',\n    title: t.translate('High Period'),\n    defaultValue: 20,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'lowPeriod',\n    title: t.translate('Low Period'),\n    defaultValue: 20,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'showChannelFill',\n    title: t.translate('Channel Fill'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getMAIndicatorConfig = () => ({\n  config: {\n    lineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    isOverlay: true,\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'lineStyle.color',\n    title: t.translate('Color'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 50,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'movingAverageType',\n    title: t.translate('Type'),\n    defaultValue: 'simple',\n    category: 'inputs',\n    type: 'select',\n    options: getMovingAverageTypeOptions()\n  }, {\n    path: 'offset',\n    title: t.translate('Offset'),\n    defaultValue: 0,\n    category: 'inputs',\n    type: 'number'\n  }]\n});\n\nconst getMAEnvIndicatorConfig = () => ({\n  config: {\n    upperLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    middleLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    lowerLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'upperLineStyle.color',\n    title: t.translate('MA Env Top'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'middleLineStyle.color',\n    title: t.translate('MA Env Median'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lowerLineStyle.color',\n    title: t.translate('MA Env Bottom'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fillColor',\n    title: t.translate('Fill Color'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 50,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'shiftType',\n    title: t.translate('Shift Type'),\n    defaultValue: 'percent',\n    category: 'inputs',\n    type: 'select',\n    options: {\n      percent: t.translate('Percent'),\n      point: t.translate('Point')\n    }\n  }, {\n    path: 'shift',\n    title: t.translate('Shift'),\n    defaultValue: 5,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'movingAverageType',\n    title: t.translate('Type'),\n    defaultValue: 'simple',\n    category: 'inputs',\n    type: 'select',\n    options: getMovingAverageTypeOptions()\n  }, {\n    path: 'showChannelFill',\n    title: t.translate('Channel Fill'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst getRainbowIndicatorConfig = () => ({\n  config: {\n    bandsCount: 10,\n    movingAverageType: 'simple',\n    rainbowLineStyles: [],\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'period',\n    title: t.translate('Period'),\n    defaultValue: 2,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'fieldType',\n    title: t.translate('Field'),\n    defaultValue: 'close',\n    category: 'inputs',\n    type: 'select',\n    options: getFieldTypeOptions()\n  }, {\n    path: 'rainbowLineStyles[0].color',\n    title: t.translate('SMA1'),\n    defaultValue: '#ff0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[1].color',\n    title: t.translate('SMA2'),\n    defaultValue: '#ff7f00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[2].color',\n    title: t.translate('SMA3'),\n    defaultValue: '#ffff00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[3].color',\n    title: t.translate('SMA4'),\n    defaultValue: '#7fff00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[4].color',\n    title: t.translate('SMA5'),\n    defaultValue: '#00ff7f',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[5].color',\n    title: t.translate('SMA6'),\n    defaultValue: '#00ffff',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[6].color',\n    title: t.translate('SMA7'),\n    defaultValue: '#007fff',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[7].color',\n    title: t.translate('SMA8'),\n    defaultValue: '#0000ff',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[8].color',\n    title: t.translate('SMA9'),\n    defaultValue: '#7f00ff',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'rainbowLineStyles[9].color',\n    title: t.translate('SMA10'),\n    defaultValue: '#ff00ff',\n    category: 'inputs',\n    type: 'colorpicker'\n  }]\n});\n\nconst getAlligatorIndicatorConfig = () => ({\n  config: {\n    jawLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    teethLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    lipsLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'jawLineStyle.color',\n    title: t.translate('Jaw'),\n    defaultValue: '#0000FF',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'teethLineStyle.color',\n    title: t.translate('Teeth'),\n    defaultValue: '#FF0000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lipsLineStyle.color',\n    title: t.translate('Lips'),\n    defaultValue: '#00FF00',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'showLines',\n    title: t.translate('Show Lines'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }, {\n    path: 'jawPeriod',\n    title: t.translate('Jaw Period'),\n    defaultValue: 13,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'jawOffset',\n    title: t.translate('Jaw Offset'),\n    defaultValue: 8,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'teethPeriod',\n    title: t.translate('Teeth Period'),\n    defaultValue: 8,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'teethOffset',\n    title: t.translate('Teeth Offset'),\n    defaultValue: 5,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'lipsPeriod',\n    title: t.translate('Lips Period'),\n    defaultValue: 5,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'lipsOffset',\n    title: t.translate('Lips Offset'),\n    defaultValue: 3,\n    category: 'inputs',\n    type: 'number'\n  }, {\n    path: 'showFractal',\n    title: t.translate('Show Fractals'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: false\n  }]\n});\n\nconst getFractalChaosBandIndicatorConfig = () => ({\n  config: {\n    highLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    lowLineStyle: (0,_utils__WEBPACK_IMPORTED_MODULE_2__.clone)(lineStyle),\n    showLastIndicator: true\n  },\n  parameters: [{\n    path: 'highLineStyle.color',\n    title: t.translate('Fractal High'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'lowLineStyle.color',\n    title: t.translate('Fractal Low'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'fillColor',\n    title: t.translate('Fractal Channel'),\n    defaultValue: '#000000',\n    category: 'inputs',\n    type: 'colorpicker'\n  }, {\n    path: 'showChannelFill',\n    title: t.translate('Channel Fill'),\n    type: 'switch',\n    category: 'parameters',\n    defaultValue: true\n  }]\n});\n\nconst defaultIndicatorConfigs = {\n  // Keys are mapped to the flutter indicators name. Don't change it.\n  RSI: getRSIIndicatorConfig,\n  adx: getADXIndicatorConfig,\n  AwesomeOscillator: getAwesomeOscillatorIndicatorConfig,\n  dpo: getDPOIndicatorConfig,\n  gator: getGatorIndicatorConfig,\n  macd: getMACDIndicatorConfig,\n  ROC: getROCIndicatorConfig,\n  StochasticOscillator: getStochasticOscillatorIndicatorConfig,\n  SMI: getSMIIndicatorConfig,\n  WilliamsR: getWilliamsRIndicatorConfig,\n  Aroon: getAroonIndicatorConfig,\n  commodity_channel_index: getCCIIndicatorConfig,\n  ichimoku: getIchimokuIndicatorConfig,\n  ParabolicSAR: getParabolicSARIndicatorConfig,\n  zigzag: getZigzagIndicatorConfig,\n  bollinger_bands: getBollingerBandsIndicatorConfig,\n  donchian_channel: getDonchianChannelIndicatorConfig,\n  moving_average: getMAIndicatorConfig,\n  moving_envelope_average: getMAEnvIndicatorConfig,\n  rainbow: getRainbowIndicatorConfig,\n  alligator: getAlligatorIndicatorConfig,\n  fcb: getFractalChaosBandIndicatorConfig\n};\nconst getDefaultIndicatorConfig = indicator => {\n  return defaultIndicatorConfigs[indicator]();\n};\nconst ChartTypes = [{\n  id: 'line',\n  text: t.translate('Area'),\n  candleOnly: false,\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.TypeAreaIcon\n}, {\n  id: 'candles',\n  text: t.translate('Candle'),\n  candleOnly: true,\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.TypeCandleIcon\n}, {\n  id: 'hollow',\n  text: t.translate('Hollow'),\n  candleOnly: true,\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.TypeHollowIcon\n}, {\n  id: 'ohlc',\n  text: t.translate('OHLC'),\n  candleOnly: true,\n  icon: _components_Icons__WEBPACK_IMPORTED_MODULE_1__.TypeOhlcIcon\n}];\nconst Intervals = [{\n  key: 'tick',\n  single: t.translate('tick'),\n  items: [{\n    interval: 0,\n    num: 1\n  }]\n}, {\n  key: 'minute',\n  single: t.translate('minute'),\n  plural: t.translate('minutes'),\n  items: [{\n    interval: 60,\n    num: 1\n  }, {\n    interval: 120,\n    num: 2\n  }, {\n    interval: 180,\n    num: 3\n  }, {\n    interval: 300,\n    num: 5\n  }, {\n    interval: 600,\n    num: 10\n  }, {\n    interval: 900,\n    num: 15\n  }, {\n    interval: 1800,\n    num: 30\n  }]\n}, {\n  key: 'hour',\n  single: t.translate('hour'),\n  plural: t.translate('hours'),\n  items: [{\n    interval: 3600,\n    num: 1\n  }, {\n    interval: 7200,\n    num: 2\n  }, {\n    interval: 14400,\n    num: 4\n  }, {\n    interval: 28800,\n    num: 8\n  }]\n}, {\n  key: 'day',\n  single: t.translate('day'),\n  plural: t.translate('days'),\n  items: [{\n    interval: 86400,\n    num: 1\n  }]\n}];\nconst Languages = [{\n  key: 'en',\n  name: 'English',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.GBP, null)\n}, {\n  key: 'de',\n  name: 'Deutsch',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.German, null)\n}, {\n  key: 'fr',\n  name: 'French',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.French, null)\n}, {\n  key: 'ru',\n  name: 'Русский',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Russia, null)\n}, {\n  key: 'th',\n  name: 'Thai',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Thailand, null)\n}, {\n  key: 'id',\n  name: 'Indonesia',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Indonesia, null)\n}, {\n  key: 'vi',\n  name: 'Tiếng Việt',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Vietnam, null)\n}, {\n  key: 'it',\n  name: 'Italiano',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Italy, null)\n}, {\n  key: 'ko',\n  name: '한국어',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Korean, null)\n}, {\n  key: 'tr',\n  name: 'Türkçe',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Turkey, null)\n}, {\n  key: 'zh_cn',\n  name: '简体中文',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Chinese, null)\n}, {\n  key: 'pl',\n  name: 'Polish',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Poland, null)\n}, {\n  key: 'zh_tw',\n  name: '繁體中文',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.ChineseTraditional, null)\n}, {\n  key: 'es',\n  name: 'espanyol',\n  icon: /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_components_Icons__WEBPACK_IMPORTED_MODULE_1__.FlagIcons.Spanish, null)\n}];\nconst STATE = {\n  CHART_INTERVAL_CHANGE: 'CHART_INTERVAL_CHANGE',\n  CHART_MODE_TOGGLE: 'CHART_MODE_TOGGLE',\n  CHART_TYPE_CHANGE: 'CHART_TYPE_CHANGE',\n  FAVORITE_MARKETS_TOGGLE: 'FAVORITE_MARKETS_TOGGLE',\n  INDICATOR_ADDED: 'INDICATOR_ADDED',\n  INDICATOR_DELETED: 'INDICATOR_DELETED',\n  INDICATOR_INFO_TOGGLE: 'INDICATOR_INFO_TOGGLE',\n  INDICATOR_SEARCH: 'INDICATOR_SEARCH',\n  INDICATOR_SETTINGS_OPEN: 'INDICATOR_SETTINGS_OPEN',\n  INDICATORS_CLEAR_ALL: 'INDICATORS_CLEAR_ALL',\n  INDICATORS_MODAL_TOGGLE: 'INDICATORS_MODAL_TOGGLE',\n  INITIAL: 'INITIAL',\n  MARKET_INFO_REDIRECT: 'MARKET_INFO_REDIRECT',\n  MARKET_SEARCH: 'MARKET_SEARCH',\n  MARKET_STATE_CHANGE: 'MARKET_STATE_CHANGE',\n  MARKETS_LIST_TOGGLE: 'MARKETS_LIST_TOGGLE',\n  READY: 'READY',\n  SCROLL_TO_LEFT: 'SCROLL_TO_LEFT',\n  SYMBOL_CHANGE: 'SYMBOL_CHANGE'\n};\nconst TooltipsContent = {\n  predictionIndicator: t.translate('This indicator does not support 1-tick intervals. To use this indicator, change your chart time interval to 1 minute or more.')\n};\n\n/***/ }),\n\n/***/ \"./src/Translation.ts\":\n/*!****************************!*\\\n  !*** ./src/Translation.ts ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_428660__) => {\n\n\"use strict\";\n__nested_webpack_require_428660__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_428660__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Translation\": () => (/* binding */ Translation),\n/* harmony export */   \"t\": () => (/* binding */ t)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nconst lang_map = {};\nclass Translation {\n  constructor() {\n    let lang = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'en';\n\n    _defineProperty(this, \"lang\", void 0);\n\n    this.lang = lang;\n  }\n\n  setLanguage(lang, callback) {\n    if (lang_map[lang] || lang === 'en') {\n      this.lang = lang;\n      callback?.();\n    } else {\n      __nested_webpack_require_428660__(\"./translation lazy recursive ^\\\\.\\\\/.*\\\\.json$\")(`./${lang}.json`).then(imported_lang => {\n        if (imported_lang) {\n          lang_map[lang] = imported_lang.default;\n          this.lang = lang;\n          callback?.();\n        } else {\n          console.error('Unsupported language:', lang);\n        }\n      });\n    }\n  }\n  /**\n   *\n   * @param {*} args include string to be translated, its plural form,\n   * and object containing key value pair for replacement in translated string.\n   *\n   * For eg: translate('_n Hour','_n Hours',{'_n':2})\n   * Note: The first key-value pair will be used to determine the plural form.\n   *\n   */\n\n\n  translate() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const curr_lang = lang_map[this.lang];\n    const key = args[0].trim();\n    const key_with_quotation = key.replace(/\"/gi, '\\\\\"');\n    /* eslint-disable-line */\n\n    let translated = key;\n    let has_quotation = false;\n\n    if (curr_lang && curr_lang[key]) {\n      translated = curr_lang[key];\n    } else if (curr_lang && curr_lang[key_with_quotation]) {\n      translated = curr_lang[key_with_quotation];\n      has_quotation = true;\n    }\n\n    if (args[1]) {\n      Object.keys(args[1]).forEach(prop => {\n        translated = translated.replace(`[${prop}]`, args[1][prop]);\n      });\n    }\n\n    return has_quotation ? translated.replace(/\\\\\\\"/gi, '\"') : translated;\n    /* eslint-disable-line */\n  }\n\n}\nconst trans = new Translation();\nconst t = trans;\n\n/***/ }),\n\n/***/ \"./src/binaryapi/ActiveSymbols.ts\":\n/*!****************************************!*\\\n  !*** ./src/binaryapi/ActiveSymbols.ts ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_431342__) => {\n\n\"use strict\";\n__nested_webpack_require_431342__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_431342__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ActiveSymbols)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_431342__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_431342__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_431342__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_431342__(/*! ../utils/object */ \"./src/utils/object.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nconst DefaultSymbols = ['synthetic_index', 'basket_index', 'forex', 'indices', 'stocks', 'cryptocurrency', 'commodities'];\nclass ActiveSymbols {\n  constructor(api, tradingTimes, params) {\n    _defineProperty(this, \"_api\", void 0);\n\n    _defineProperty(this, \"_params\", void 0);\n\n    _defineProperty(this, \"_tradingTimes\", void 0);\n\n    _defineProperty(this, \"processedSymbols\", void 0);\n\n    _defineProperty(this, \"changes\", {});\n\n    _defineProperty(this, \"categorizedSymbols\", []);\n\n    _defineProperty(this, \"symbolMap\", {});\n\n    _defineProperty(this, \"symbolsPromise\", (0,_utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"])());\n\n    _defineProperty(this, \"isRetrievingSymbols\", false);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      categorizedSymbols: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      changes: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      retrieveActiveSymbols: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      computeActiveSymbols: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      activeSymbols: mobx__WEBPACK_IMPORTED_MODULE_3__.computed\n    });\n    this._api = api;\n    this._tradingTimes = tradingTimes;\n    this._params = params;\n  }\n\n  async retrieveActiveSymbols() {\n    let retrieveNewActiveSymbols = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    if (this.isRetrievingSymbols && !retrieveNewActiveSymbols) {\n      await this.symbolsPromise;\n      return this.activeSymbols;\n    }\n\n    const response = await this._api.getActiveSymbols();\n    this.isRetrievingSymbols = true;\n    let active_symbols = [];\n\n    if (this._params.activeSymbols && !this.processedSymbols) {\n      active_symbols = this._params.activeSymbols;\n    } else if (this._params.enable !== false || !(0,_utils_object__WEBPACK_IMPORTED_MODULE_2__.isDeepEqual)(response.active_symbols, this._params.activeSymbols)) {\n      active_symbols = response.active_symbols;\n      this._params.activeSymbols = response.active_symbols;\n    } else if (this._params.chartData && this._params.enable === false) {\n      // Do not need to do anything, the chartData handle the staff\n      console.log('ActiveSymbols would render through chartData.');\n      return;\n    } else {\n      console.error('ActiveSymbols feed is not enable nor has initial data!');\n      return;\n    }\n\n    if (active_symbols !== undefined) {\n      this.computeActiveSymbols(active_symbols);\n    }\n\n    this.symbolsPromise.resolve();\n    return this.activeSymbols;\n  }\n\n  computeActiveSymbols(active_symbols) {\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.runInAction)(() => {\n      this.processedSymbols = this._processSymbols(active_symbols);\n      this.categorizedSymbols = this._categorizeActiveSymbols(this.processedSymbols);\n    });\n\n    for (const symbolObj of this.processedSymbols || []) {\n      this.symbolMap[symbolObj.symbol] = symbolObj;\n    }\n\n    this._tradingTimes.onMarketOpenCloseChanged((0,mobx__WEBPACK_IMPORTED_MODULE_3__.action)(changes => {\n      for (const symbol in changes) {\n        const symObj = this.symbolMap[symbol];\n\n        if (symObj) {\n          symObj.exchange_is_open = changes[symbol];\n        }\n      }\n\n      this.changes = changes;\n    }));\n  }\n\n  get activeSymbols() {\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.cloneCategories)(this.categorizedSymbols, item => {\n      const itemObject = item;\n      const {\n        symbol\n      } = itemObject.dataObject;\n\n      if (symbol in this.changes) {\n        itemObject.dataObject.exchange_is_open = this.changes[symbol];\n      }\n\n      return { ...item\n      };\n    });\n  }\n\n  getSymbolObj(symbol) {\n    return this.symbolMap[symbol];\n  }\n\n  _processSymbols(symbols) {\n    const processedSymbols = []; // Stable sort is required to retain the order of the symbol name\n\n    const sortedSymbols = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.stableSort)(symbols, (a, b) => a.submarket_display_name.localeCompare(b.submarket_display_name));\n\n    for (const s of sortedSymbols) {\n      processedSymbols.push({\n        symbol: s.symbol,\n        name: s.display_name,\n        market: s.market,\n        market_display_name: s.market_display_name,\n        // TODO: stop ignoring these types after BE api types are updated\n        // @ts-ignore\n        subgroup: s.subgroup,\n        // @ts-ignore\n        subgroup_display_name: s.subgroup_display_name,\n        submarket: s.submarket,\n        submarket_display_name: s.submarket_display_name,\n        exchange_is_open: !!s.exchange_is_open,\n        decimal_places: s.pip.toString().length - 2\n      });\n    } // Categorize symbols in order defined by another array; there's probably a more\n    // efficient algo for this, but for just ~100 items it's not worth the effort\n\n\n    const orderedMarkets = typeof this._params.getMarketsOrder === 'function' ? this._params.getMarketsOrder(symbols) : DefaultSymbols;\n    const orderedSymbols = [];\n\n    for (const o of orderedMarkets) {\n      for (const p of processedSymbols) {\n        if (o === p.market) {\n          orderedSymbols.push(p);\n        }\n      }\n    }\n\n    return orderedSymbols;\n  }\n\n  _categorizeActiveSymbols(activeSymbols) {\n    const categorizedSymbols = [];\n    const first = activeSymbols[0];\n\n    const getSubcategory = d => ({\n      subcategoryId: d.submarket,\n      subcategoryName: d.submarket_display_name,\n      data: []\n    });\n\n    const getCategory = d => ({\n      categoryName: d.market_display_name,\n      categoryId: d.market,\n      hasSubcategory: true,\n      hasSubgroup: !!(d.subgroup && d.subgroup !== 'none'),\n      data: [],\n      subgroups: []\n    });\n\n    let subcategory = getSubcategory(first);\n    let category = getCategory(first);\n\n    for (const symbol of activeSymbols) {\n      if (category.categoryName !== symbol.market_display_name && category.categoryName !== symbol.subgroup_display_name) {\n        category.data.push(subcategory);\n        categorizedSymbols.push(category);\n        subcategory = getSubcategory(symbol);\n        category = getCategory(symbol);\n      }\n\n      if (category.hasSubgroup) {\n        if (!category.subgroups?.some(el => el.categoryId === symbol.subgroup)) {\n          category.subgroups?.push({\n            data: [],\n            categoryName: symbol.subgroup_display_name,\n            categoryId: symbol.subgroup,\n            hasSubcategory: true,\n            hasSubgroup: false,\n            subgroups: []\n          });\n        } // should push a subcategory instead of symbol\n\n\n        if (!category.subgroups?.find(el => el.categoryId === symbol.subgroup)?.data.find(el => el.subcategoryName === symbol.submarket_display_name)) {\n          subcategory = getSubcategory(symbol);\n          category.subgroups?.find(el => el.categoryId === symbol.subgroup)?.data.push(subcategory);\n          subcategory = getSubcategory(symbol);\n        }\n\n        category.subgroups?.find(el => el.categoryId === symbol.subgroup)?.data.find(el => el.subcategoryName === symbol.submarket_display_name)?.data.push({\n          enabled: true,\n          itemId: symbol.symbol,\n          display: symbol.name,\n          dataObject: symbol\n        });\n      }\n\n      if (subcategory.subcategoryName !== symbol.submarket_display_name) {\n        category.data.push(subcategory);\n        subcategory = getSubcategory(symbol);\n      }\n\n      subcategory.data.push({\n        enabled: true,\n        itemId: symbol.symbol,\n        display: symbol.name,\n        dataObject: symbol\n      });\n    }\n\n    category.data.push(subcategory);\n    categorizedSymbols.push(category);\n    return categorizedSymbols;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/binaryapi/BinaryAPI.ts\":\n/*!************************************!*\\\n  !*** ./src/binaryapi/BinaryAPI.ts ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_440169__) => {\n\n\"use strict\";\n__nested_webpack_require_440169__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_440169__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BinaryAPI)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass BinaryAPI {\n  static get DEFAULT_COUNT() {\n    return 1000;\n  }\n\n  constructor(requestAPI, requestSubscribe, requestForget, requestForgetStream) {\n    _defineProperty(this, \"requestAPI\", void 0);\n\n    _defineProperty(this, \"requestForget\", void 0);\n\n    _defineProperty(this, \"requestForgetStream\", void 0);\n\n    _defineProperty(this, \"requestSubscribe\", void 0);\n\n    _defineProperty(this, \"streamRequests\", {});\n\n    _defineProperty(this, \"tradingTimesCache\", null);\n\n    this.requestAPI = requestAPI;\n    this.requestSubscribe = requestSubscribe;\n    this.requestForget = requestForget;\n    this.requestForgetStream = requestForgetStream;\n  }\n\n  getActiveSymbols() {\n    return this.requestAPI({\n      active_symbols: 'brief'\n    });\n  }\n\n  getServerTime() {\n    return this.requestAPI({\n      time: 1\n    });\n  }\n\n  async getTradingTimes() {\n    let trading_times = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'today';\n\n    if (this.tradingTimesCache && this.tradingTimesCache.trading_times === trading_times) {\n      return { ...this.tradingTimesCache\n      };\n    }\n\n    const response = await this.requestAPI({\n      trading_times\n    });\n\n    if (trading_times !== 'today') {\n      this.tradingTimesCache = { ...response\n      };\n    }\n\n    return response;\n  }\n\n  getTickHistory(params) {\n    const request = BinaryAPI.createTickHistoryRequest(params);\n    return this.requestAPI(request);\n  }\n\n  subscribeTickHistory(params, callback) {\n    const key = this._getKey(params);\n\n    const request = BinaryAPI.createTickHistoryRequest({ ...params,\n      subscribe: 1\n    });\n    this.streamRequests[key] = {\n      request,\n      callback\n    }; // Send a copy of the request, in case it gets mutated outside\n\n    this.requestSubscribe({ ...request\n    }, callback);\n  }\n\n  forget(params) {\n    const key = this._getKey(params);\n\n    if (!this.streamRequests[key]) return;\n    const {\n      request,\n      callback\n    } = this.streamRequests[key];\n    delete this.streamRequests[key];\n    return this.requestForget(request, callback);\n  }\n\n  forgetStream(subscription_id) {\n    if (this.requestForgetStream && typeof this.requestForgetStream === 'function') {\n      return this.requestForgetStream(subscription_id);\n    }\n  }\n\n  static createTickHistoryRequest(_ref) {\n    let {\n      symbol,\n      granularity,\n      start,\n      end,\n      subscribe,\n      adjust_start_time = 1,\n      count\n    } = _ref;\n    const request = {\n      ticks_history: symbol,\n      style: granularity ? 'candles' : 'ticks',\n      end: 'latest',\n      count: count || BinaryAPI.DEFAULT_COUNT\n    };\n\n    if (granularity) {\n      // granularity will only be set if style=candles\n      request.granularity = +granularity;\n    }\n\n    if (adjust_start_time) {\n      request.adjust_start_time = adjust_start_time;\n    }\n\n    if (subscribe) {\n      request.subscribe = 1;\n    }\n\n    if (start) {\n      delete request.count;\n      request.start = start;\n    }\n\n    if (end) {\n      request.end = end;\n    }\n\n    return request;\n  }\n\n  _getKey(_ref2) {\n    let {\n      symbol,\n      granularity\n    } = _ref2;\n    return `${symbol}-${granularity}`;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/binaryapi/TradingTimes.ts\":\n/*!***************************************!*\\\n  !*** ./src/binaryapi/TradingTimes.ts ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_444029__) => {\n\n\"use strict\";\n__nested_webpack_require_444029__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_444029__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_444029__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_444029__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_444029__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_444029__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst DaysOfWeek = ['Sundays', 'Mondays', 'Tuesdays', 'Wednesdays', 'Thursdays', 'Fridays', 'Saturdays'];\n\nclass TradingTimes {\n  static get EVENT_MARKET_OPEN_CLOSE_CHANGE() {\n    return 'EVENT_MARKET_OPEN_CLOSE_CHANGE';\n  }\n\n  static get FEED_UNAVAILABLE() {\n    return 'chartonly';\n  }\n\n  constructor(api, params) {\n    _defineProperty(this, \"_api\", void 0);\n\n    _defineProperty(this, \"_emitter\", void 0);\n\n    _defineProperty(this, \"_params\", void 0);\n\n    _defineProperty(this, \"_serverTime\", void 0);\n\n    _defineProperty(this, \"_shouldFetchTradingTimes\", void 0);\n\n    _defineProperty(this, \"_tradingTimesMap\", void 0);\n\n    _defineProperty(this, \"_updateTimer\", void 0);\n\n    _defineProperty(this, \"lastUpdateDate\", void 0);\n\n    _defineProperty(this, \"isInitialized\", false);\n\n    _defineProperty(this, \"tradingTimesPromise\", (0,_utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"])());\n\n    _defineProperty(this, \"timeUpdateCallback\", void 0);\n\n    this._params = params || {};\n    this._shouldFetchTradingTimes = params?.shouldFetchTradingTimes !== false;\n    this._api = api;\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    this._emitter = new (event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default())({\n      emitDelay: 0\n    });\n  }\n\n  destructor() {\n    if (this._updateTimer) {\n      clearTimeout(this._updateTimer);\n    }\n  }\n\n  async initialize() {\n    await this._serverTime.init(this._api, () => {\n      if (typeof this.timeUpdateCallback === 'function') this.timeUpdateCallback();\n    });\n\n    if (this.isInitialized) {\n      return this.tradingTimesPromise;\n    }\n\n    this.isInitialized = true;\n    this.lastUpdateDate = this._serverTime.getLocalDate().toISOString().substring(0, 10);\n\n    if (!this._tradingTimesMap && this._shouldFetchTradingTimes) {\n      await this._updateTradeTimes();\n      this.tradingTimesPromise.resolve();\n\n      const periodicUpdate = async () => {\n        const changed = this._updateMarketOpenClosed();\n\n        if (Object.keys(changed).length > 0) {\n          this._emitter.emit(TradingTimes.EVENT_MARKET_OPEN_CLOSE_CHANGE, changed);\n        }\n\n        let nextUpdate = this._nextUpdateDate();\n\n        if (!nextUpdate) {\n          const now = this._serverTime.getLocalDate(); // Get tomorrow's date (UTC) and set it as next update if no nextDate available\n\n\n          const nextUpdateDate = new Date(`${this.lastUpdateDate}T00:00:00Z`);\n          nextUpdateDate.setDate(nextUpdateDate.getDate() + 1); // if somehow the next update date is in the past, use the current date\n\n          this.lastUpdateDate = (now > nextUpdateDate ? now : nextUpdateDate).toISOString().substring(0, 10); // Retain the current market open close status, because the trade times\n          // will now be the following day:\n\n          const isOpenMap = {};\n\n          for (const key in this._tradingTimesMap) {\n            isOpenMap[key] = !!this._tradingTimesMap[key].isOpened;\n          }\n\n          await this._updateTradeTimes();\n\n          for (const key in this._tradingTimesMap) {\n            this._tradingTimesMap[key].isOpened = isOpenMap[key];\n          } // next update date will be 00:00 hours (UTC) of the following day:\n\n\n          nextUpdate = nextUpdateDate;\n        }\n\n        const waitPeriod = nextUpdate - this._serverTime.getLocalDate();\n\n        this._updateTimer = setTimeout(periodicUpdate, waitPeriod);\n      };\n\n      await periodicUpdate();\n    }\n  }\n\n  _updateMarketOpenClosed() {\n    const changed = {};\n\n    for (const symbol in this._tradingTimesMap) {\n      const isOpened = this._calcIsMarketOpened(symbol);\n\n      if (this._tradingTimesMap[symbol].isOpened !== isOpened) {\n        this._tradingTimesMap[symbol].isOpened = isOpened;\n        changed[symbol] = isOpened;\n      }\n    }\n\n    return changed;\n  }\n\n  async _updateTradeTimes() {\n    let response = {};\n\n    if (!this._tradingTimesMap && this._params.tradingTimes) {\n      response = this._params.tradingTimes;\n    } else if (this._params.enable !== false) {\n      response = await this._api.getTradingTimes(this.lastUpdateDate);\n    } else {\n      console.error('TradingTimes feed is not enable nor has initial data!');\n      return;\n    }\n\n    if ('error' in response && response?.error) {\n      const error = response.error;\n      console.error(`Error getting trading times on ${this.lastUpdateDate}: [${error.code}] \"${error.message}\"`);\n      return;\n    }\n\n    this._calculatingTradingTime(response.trading_times);\n  }\n\n  _calculatingTradingTime(raw_trading_time) {\n    if (!raw_trading_time) return;\n    this._tradingTimesMap = {};\n\n    const now = this._serverTime.getLocalDate();\n\n    const dateStr = now.toISOString().substring(0, 11);\n\n    const getUTCDate = hour => new Date(`${dateStr}${hour}Z`);\n\n    if (!raw_trading_time) return;\n    const {\n      markets\n    } = raw_trading_time;\n\n    for (const market of markets) {\n      const {\n        submarkets = []\n      } = market;\n\n      for (const submarket of submarkets) {\n        const {\n          symbols = []\n        } = submarket;\n\n        for (const symbolObj of symbols) {\n          const {\n            events,\n            feed_license,\n            delay_amount,\n            times,\n            trading_days,\n            symbol\n          } = symbolObj;\n          const {\n            open,\n            close\n          } = times;\n          let isClosedToday = false;\n          const holidays = [];\n          const closes_early = [];\n          const opens_late = [];\n          events.map(event => event.dates.includes(',') ? event.dates.split(',').map(date => ({\n            date: date.trim(),\n            description: event.descrip\n          })) : [{\n            date: event.dates,\n            description: event.descrip\n          }]).reduce((ary, item) => ary.concat(item), []).forEach(event => {\n            const lower_description = event.description.toLowerCase(); // Open Late\n\n            if (/^opens late \\(at (\\d{1,2}:\\d{1,2})\\)$/gm.test(event.description.toLowerCase())) {\n              const event_hour = `${lower_description.replace('opens late (at ', '').replace(')', '')}:00`;\n              const event_date = event.date === 'today' || event.date === DaysOfWeek[now.getDay()] ? dateStr.substring(0, 10) : event.date;\n              opens_late.push({\n                date: event_date,\n                open: new Date(`${event_date}T${event_hour}Z`),\n                close: new Date(`${event_date}T${close[0]}Z`)\n              }); // Close early\n            } else if (/^closes early \\(at (\\d{1,2}:\\d{1,2})\\)$/gm.test(lower_description)) {\n              const event_hour = `${lower_description.replace('closes early (at ', '').replace(')', '')}:00`;\n              const event_date = event.date === 'today' || event.date === DaysOfWeek[now.getDay()] ? dateStr.substring(0, 10) : event.date;\n              closes_early.push({\n                date: event_date,\n                open: new Date(`${event_date}T${open[0]}Z`),\n                close: new Date(`${event_date}T${event_hour}Z`)\n              }); // Special date\n            } else if (/^\\d{4}-\\d{2}-\\d{2}$/.test(event.date)) {\n              holidays.push(event.date);\n            }\n\n            if (trading_days.every(day => day !== DaysOfWeek[now.getDay()].slice(0, 3))) {\n              isClosedToday = true;\n            }\n          });\n\n          let _times;\n\n          const isOpenAllDay = open.length === 1 && open[0] === '00:00:00' && close[0] === '23:59:59';\n          const isClosedAllDay = open.length === 1 && open[0] === '--' && close[0] === '--';\n\n          if (!isOpenAllDay && !isClosedAllDay) {\n            _times = open.map((openTime, idx) => ({\n              open: getUTCDate(openTime),\n              close: getUTCDate(close[idx])\n            }));\n          }\n\n          this._tradingTimesMap[symbol] = {\n            feed_license,\n            isClosedToday,\n            holidays,\n            closes_early,\n            opens_late,\n            delay_amount: delay_amount || 0,\n            times: _times,\n            isOpenAllDay,\n            isClosedAllDay\n          };\n        }\n      }\n    }\n\n    const changed = this._updateMarketOpenClosed();\n\n    if (Object.keys(changed).length > 0) {\n      this._emitter.emit(TradingTimes.EVENT_MARKET_OPEN_CLOSE_CHANGE, changed);\n    }\n  }\n\n  isFeedUnavailable(symbol) {\n    if (!this._tradingTimesMap) {\n      return;\n    }\n\n    if (!(symbol in this._tradingTimesMap)) {\n      console.error('Symbol not in _tradingTimesMap:', symbol, ' trading map:', this._tradingTimesMap);\n      return false;\n    }\n\n    return this._tradingTimesMap[symbol]?.feed_license === TradingTimes.FEED_UNAVAILABLE;\n  }\n\n  getDelayedMinutes(symbol) {\n    return this._tradingTimesMap?.[symbol].delay_amount;\n  }\n\n  isMarketOpened(symbol) {\n    if (!this._tradingTimesMap) {\n      return;\n    }\n\n    if (!(symbol in this._tradingTimesMap)) {\n      console.error('Symbol not in _tradingTimesMap:', symbol, ' trading map:', this._tradingTimesMap);\n      return false;\n    }\n\n    return this._tradingTimesMap[symbol].isOpened;\n  }\n\n  _calcIsMarketOpened(symbol) {\n    const now = this._serverTime.getLocalDate();\n\n    const dateStr = now.toISOString().substring(0, 10);\n    if (!this._tradingTimesMap) return;\n    const {\n      times,\n      feed_license,\n      isOpenAllDay,\n      isClosedAllDay,\n      holidays,\n      closes_early,\n      opens_late,\n      isClosedToday\n    } = this._tradingTimesMap[symbol];\n\n    if (isClosedAllDay || feed_license === TradingTimes.FEED_UNAVAILABLE || isClosedToday || holidays.includes(dateStr)) {\n      return false;\n    }\n\n    const opens_late_date = opens_late.find(event => event.date === dateStr);\n\n    if (opens_late_date) {\n      const {\n        open,\n        close\n      } = opens_late_date;\n      return !!(now >= open && now < close);\n    }\n\n    const closes_early_date = closes_early.find(event => event.date === dateStr);\n\n    if (closes_early_date) {\n      const {\n        open,\n        close\n      } = closes_early_date;\n      return !!(now >= open && now < close);\n    }\n\n    if (isOpenAllDay) return true;\n\n    if (times) {\n      for (const session of times) {\n        const {\n          open,\n          close\n        } = session;\n\n        if (now >= open && now < close) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  _nextUpdateDate() {\n    const now = this._serverTime.getLocalDate();\n\n    let nextDate;\n\n    for (const key in this._tradingTimesMap) {\n      const {\n        times,\n        feed_license,\n        isOpenAllDay,\n        isClosedAllDay\n      } = this._tradingTimesMap[key];\n      if (isOpenAllDay || isClosedAllDay || feed_license === TradingTimes.FEED_UNAVAILABLE) continue;\n\n      if (times) {\n        for (const session of times) {\n          const {\n            open,\n            close\n          } = session;\n\n          if (open > now && (!nextDate || open < nextDate)) {\n            nextDate = open;\n          }\n\n          if (close > now && (!nextDate || close < nextDate)) {\n            nextDate = close;\n          }\n        }\n      }\n    }\n\n    return nextDate;\n  }\n\n  onMarketOpenCloseChanged(callback) {\n    this._emitter.on(TradingTimes.EVENT_MARKET_OPEN_CLOSE_CHANGE, callback);\n  }\n\n  onTimeChanged(callback) {\n    this.timeUpdateCallback = callback;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TradingTimes);\n\n/***/ }),\n\n/***/ \"./src/binaryapi/index.ts\":\n/*!********************************!*\\\n  !*** ./src/binaryapi/index.ts ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_456734__) => {\n\n\"use strict\";\n__nested_webpack_require_456734__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_456734__.d(__nested_webpack_exports__, {\n/* harmony export */   \"ActiveSymbols\": () => (/* reexport safe */ _ActiveSymbols__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"BinaryAPI\": () => (/* reexport safe */ _BinaryAPI__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"TradingTimes\": () => (/* reexport safe */ _TradingTimes__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _ActiveSymbols__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_456734__(/*! ./ActiveSymbols */ \"./src/binaryapi/ActiveSymbols.ts\");\n/* harmony import */ var _TradingTimes__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_456734__(/*! ./TradingTimes */ \"./src/binaryapi/TradingTimes.ts\");\n/* harmony import */ var _BinaryAPI__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_456734__(/*! ./BinaryAPI */ \"./src/binaryapi/BinaryAPI.ts\");\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/components/AnimatedPrice.tsx\":\n/*!******************************************!*\\\n  !*** ./src/components/AnimatedPrice.tsx ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_457966__) => {\n\n\"use strict\";\n__nested_webpack_require_457966__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_457966__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_457966__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_457966__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_457966__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_457966__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst AnimatedPrice = _ref => {\n  let {\n    isIncrease,\n    price,\n    className,\n    decimalPlaces\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, !price && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"cq-comparison-loader stx-show\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('cq-animated-price', className, {\n      'cq-up': isIncrease,\n      'cq-down': !isIncrease\n    })\n  }, price.toFixed(decimalPlaces)));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnimatedPrice);\n\n/***/ }),\n\n/***/ \"./src/components/Barrier.tsx\":\n/*!************************************!*\\\n  !*** ./src/components/Barrier.tsx ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_459752__) => {\n\n\"use strict\";\n__nested_webpack_require_459752__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_459752__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_459752__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_459752__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_459752__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_459752__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_459752__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_store_BarrierStore__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_459752__(/*! src/store/BarrierStore */ \"./src/store/BarrierStore.ts\");\n/* harmony import */ var src_store_ConnectStore__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_459752__(/*! src/store/ConnectStore */ \"./src/store/ConnectStore.tsx\");\n/* harmony import */ var _PriceLine__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_459752__(/*! ./PriceLine */ \"./src/components/PriceLine.tsx\");\n/* harmony import */ var _Shade__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_459752__(/*! ./Shade */ \"./src/components/Shade.tsx\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\nconst Barrier = _ref => {\n  let {\n    store,\n    ...props\n  } = _ref;\n  const {\n    _high_barrier,\n    _low_barrier,\n    aboveShadeStore,\n    belowShadeStore,\n    betweenShadeStore,\n    color = '#39b19d',\n    foregroundColor = '#ffffff',\n    hideBarrierLine,\n    hideOffscreenBarrier,\n    hideOffscreenLine,\n    hidePriceLines,\n    isInitialized,\n    isSingleBarrier,\n    lineStyle,\n    opacityOnOverlap,\n    shadeColor = '#39b19d'\n  } = store;\n  const barrierRef = react__WEBPACK_IMPORTED_MODULE_2___default().useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    if (isInitialized && barrierRef.current) {\n      // To prevent zooming on barriers\n      barrierRef.current.addEventListener('wheel', e => {\n        e.preventDefault();\n      });\n    }\n  }, [isInitialized]);\n  if (!isInitialized) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('barrier', {\n      'hide-pricelines': hidePriceLines\n    }),\n    style: {\n      '--shade-color': shadeColor\n    },\n    ref: barrierRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_PriceLine__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _extends({\n    store: _high_barrier,\n    lineStyle: lineStyle,\n    color: color,\n    foregroundColor: foregroundColor,\n    hideOffscreenBarrier: hideOffscreenBarrier,\n    hideOffscreenLine: hideOffscreenLine,\n    hideBarrierLine: hideBarrierLine,\n    opacityOnOverlap: opacityOnOverlap\n  }, props)), !isSingleBarrier && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_PriceLine__WEBPACK_IMPORTED_MODULE_5__[\"default\"], _extends({\n    store: _low_barrier,\n    lineStyle: lineStyle,\n    color: color,\n    foregroundColor: foregroundColor,\n    hideOffscreenBarrier: hideOffscreenBarrier,\n    hideOffscreenLine: hideOffscreenLine,\n    hideBarrierLine: hideBarrierLine,\n    opacityOnOverlap: opacityOnOverlap\n  }, props)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Shade__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    store: aboveShadeStore\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Shade__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    store: belowShadeStore\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Shade__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    store: betweenShadeStore\n  })));\n};\n\nconst BarrierWrapper = (0,src_store_ConnectStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(Barrier), src_store_BarrierStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BarrierWrapper);\n\n/***/ }),\n\n/***/ \"./src/components/BottomWidget.tsx\":\n/*!*****************************************!*\\\n  !*** ./src/components/BottomWidget.tsx ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_464783__) => {\n\n\"use strict\";\n__nested_webpack_require_464783__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_464783__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_464783__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_464783__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_464783__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_464783__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_464783__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _LastDigitStats__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_464783__(/*! ./LastDigitStats */ \"./src/components/LastDigitStats.tsx\");\n\n\n\n\n\n\nconst BottomWidget = _ref => {\n  let {\n    bottomWidgets\n  } = _ref;\n  const {\n    state,\n    lastDigitStats\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    showLastDigitStats\n  } = state;\n  const {\n    digits,\n    lastTick\n  } = lastDigitStats;\n  const Widget = !bottomWidgets && showLastDigitStats ? _LastDigitStats__WEBPACK_IMPORTED_MODULE_3__[\"default\"] : bottomWidgets;\n  return Widget ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Widget, {\n    digits: digits,\n    tick: (0,mobx__WEBPACK_IMPORTED_MODULE_4__.toJS)(lastTick)\n  }) : null;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(BottomWidget));\n\n/***/ }),\n\n/***/ \"./src/components/BottomWidgetsContainer.tsx\":\n/*!***************************************************!*\\\n  !*** ./src/components/BottomWidgetsContainer.tsx ***!\n  \\***************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_466892__) => {\n\n\"use strict\";\n__nested_webpack_require_466892__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_466892__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_466892__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_466892__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_466892__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_466892__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_466892__(/*! ../../sass/components/_bottom-widget-container.scss */ \"./sass/components/_bottom-widget-container.scss\");\n/* harmony import */ var _sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_466892__.n(_sass_components_bottom_widget_container_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst BottomWidgetsContainer = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    bottomWidgetsContainer\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    bottom,\n    isReadyToShow\n  } = bottomWidgetsContainer;\n\n  if (!isReadyToShow) {\n    return null;\n  }\n\n  const styles = {\n    bottom\n  };\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-bottom-ui-widgets\",\n    style: styles\n  }, children);\n};\n\nBottomWidgetsContainer.defaultProps = {\n  bottom: 0,\n  isReadyToShow: false,\n  top: 0\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(BottomWidgetsContainer));\n\n/***/ }),\n\n/***/ \"./src/components/Chart.tsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Chart.tsx ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_469085__) => {\n\n\"use strict\";\n__nested_webpack_require_469085__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_469085__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_469085__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_469085__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_469085__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_469085__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_469085__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_469085__(/*! react-tabs/style/react-tabs.css */ \"./node_modules/react-tabs/style/react-tabs.css\");\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_469085__.n(react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_469085__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _hooks__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_469085__(/*! ../hooks */ \"./src/hooks/index.ts\");\n/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_469085__(/*! ../../sass/main.scss */ \"./sass/main.scss\");\n/* harmony import */ var _sass_main_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_469085__.n(_sass_main_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_469085__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _Barrier__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_469085__(/*! ./Barrier */ \"./src/components/Barrier.tsx\");\n/* harmony import */ var _BottomWidget__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_469085__(/*! ./BottomWidget */ \"./src/components/BottomWidget.tsx\");\n/* harmony import */ var _BottomWidgetsContainer__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_469085__(/*! ./BottomWidgetsContainer */ \"./src/components/BottomWidgetsContainer.tsx\");\n/* harmony import */ var _ChartControls__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_469085__(/*! ./ChartControls */ \"./src/components/ChartControls.tsx\");\n/* harmony import */ var _ChartFooter__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_469085__(/*! ./ChartFooter */ \"./src/components/ChartFooter.tsx\");\n/* harmony import */ var _ChartTitle__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_469085__(/*! ./ChartTitle */ \"./src/components/ChartTitle.tsx\");\n/* harmony import */ var _Crosshair__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_469085__(/*! ./Crosshair */ \"./src/components/Crosshair.tsx\");\n/* harmony import */ var _HighestLowestMarker__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_469085__(/*! ./HighestLowestMarker */ \"./src/components/HighestLowestMarker.tsx\");\n/* harmony import */ var _IndicatorPredictionDialog__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_469085__(/*! ./IndicatorPredictionDialog */ \"./src/components/IndicatorPredictionDialog.tsx\");\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_469085__(/*! ./Loader */ \"./src/components/Loader.tsx\");\n/* harmony import */ var _NavigationWidget__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_469085__(/*! ./NavigationWidget */ \"./src/components/NavigationWidget.tsx\");\n/* harmony import */ var _PaginationLoader__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_469085__(/*! ./PaginationLoader */ \"./src/components/PaginationLoader.tsx\");\n/* harmony import */ var _RenderInsideChart__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_469085__(/*! ./RenderInsideChart */ \"./src/components/RenderInsideChart.tsx\");\n/* harmony import */ var _SettingsDialog__WEBPACK_IMPORTED_MODULE_21__ = __nested_webpack_require_469085__(/*! ./SettingsDialog */ \"./src/components/SettingsDialog.tsx\");\n/* harmony import */ var _ScrollToRecent__WEBPACK_IMPORTED_MODULE_22__ = __nested_webpack_require_469085__(/*! ./ScrollToRecent */ \"./src/components/ScrollToRecent.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_469085__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\n\n\n/* css + scss */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Chart = props => {\n  const {\n    chart,\n    drawTools,\n    studies,\n    chartSetting,\n    chartType,\n    state,\n    loader,\n    chartAdapter\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_4__.useStores)();\n  const {\n    chartId,\n    init,\n    destroy,\n    isChartAvailable,\n    chartContainerHeight,\n    containerWidth\n  } = chart;\n  const {\n    settingsDialog: studiesSettingsDialog\n  } = studies;\n  const {\n    settingsDialog: drawToolsSettingsDialog\n  } = drawTools;\n  const {\n    settingsDialog: chartTypeSettingsDialog,\n    isCandle,\n    isSpline\n  } = chartType;\n  const {\n    updateProps,\n    isChartClosed\n  } = state;\n  const {\n    theme,\n    position,\n    isHighestLowestMarkerEnabled\n  } = chartSetting;\n  const {\n    isActive: isLoading,\n    show: showChart\n  } = loader;\n  const rootRef = react__WEBPACK_IMPORTED_MODULE_2___default().useRef(null);\n  const chartContainerRef = react__WEBPACK_IMPORTED_MODULE_2___default().useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_7__.initGA)();\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_7__.logPageView)();\n    updateProps(props);\n    init(rootRef.current, props);\n    return () => {\n      destroy();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    updateProps(props);\n  });\n  const prevLang = (0,_hooks__WEBPACK_IMPORTED_MODULE_5__.usePrevious)(t.lang);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    if (prevLang && prevLang !== t.lang && !isLoading) {\n      showChart?.();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [t.lang]);\n\n  const defaultTopWidgets = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_ChartTitle__WEBPACK_IMPORTED_MODULE_13__[\"default\"], null);\n\n  const {\n    id,\n    isMobile = false,\n    barriers = [],\n    children,\n    chartControlsWidgets,\n    topWidgets,\n    bottomWidgets,\n    enabledChartFooter = true,\n    enabledNavigationWidget = true,\n    toolbarWidget = () => null,\n    onCrosshairChange = () => null,\n    historical,\n    contracts_array = []\n  } = props;\n  const hasPosition = chartControlsWidgets && position && !isMobile;\n  const TopWidgets = topWidgets || defaultTopWidgets; // if there are any markers, then increase the subholder z-index\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const ToolbarWidget = react__WEBPACK_IMPORTED_MODULE_2___default().useCallback(toolbarWidget, [t.lang]); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  const memoizedOnCrosshairChange = react__WEBPACK_IMPORTED_MODULE_2___default().useCallback(onCrosshairChange, [t.lang]);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    chartAdapter.onMount(chartContainerRef.current);\n    return () => {\n      chartAdapter.onUnmount();\n    };\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => {\n    chartAdapter.updateContracts(contracts_array);\n  }, [contracts_array]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    id: id || chartId,\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('smartcharts', `smartcharts-${theme}`, {\n      'smartcharts--navigation-widget': enabledNavigationWidget,\n      'smartcharts--loading': isLoading,\n      'smartcharts--has-markers': children && children.length,\n      [`smartcharts-${containerWidth}`]: !isMobile\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()({\n      'smartcharts-mobile': isMobile,\n      'smartcharts-desktop': !isMobile\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"cq-context\",\n    ref: rootRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()({\n      [`cq-chart-control-${position}`]: hasPosition,\n      'cq-chart-control-bottom': !hasPosition\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"ciq-chart-area\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('ciq-chart', {\n      'closed-chart': isChartClosed\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_RenderInsideChart__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    at: \"subholder\"\n  }, barriers.map((_ref, idx) => {\n    let {\n      key,\n      ...barr\n    } = _ref;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Barrier__WEBPACK_IMPORTED_MODULE_8__[\"default\"], _extends({\n      key: `barrier-${idx}` // eslint-disable-line react/no-array-index-key\n\n    }, barr));\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_RenderInsideChart__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    at: \"subholder\"\n  }, !isCandle && !isSpline && isHighestLowestMarkerEnabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_HighestLowestMarker__WEBPACK_IMPORTED_MODULE_15__[\"default\"], null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_RenderInsideChart__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    at: \"subholder\"\n  }, children), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_RenderInsideChart__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {\n    at: \"subholder\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_PaginationLoader__WEBPACK_IMPORTED_MODULE_19__[\"default\"], null)), !loader.isActive && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"cq-top-ui-widgets\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(TopWidgets, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"chartContainer\",\n    ref: chartContainerRef,\n    style: {\n      height: historical && chartContainerHeight && isMobile ? chartContainerHeight - 30 : chartContainerHeight\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Crosshair__WEBPACK_IMPORTED_MODULE_14__[\"default\"], null)), enabledNavigationWidget && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_NavigationWidget__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {\n    onCrosshairChange: memoizedOnCrosshairChange\n  }), ToolbarWidget && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ToolbarWidget, null), !isChartAvailable && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"cq-chart-unavailable\"\n  }, t.translate('Chart data is not available for this symbol.')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"cq-inchart-subholder\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_BottomWidgetsContainer__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_BottomWidget__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    bottomWidgets: bottomWidgets\n  }))), chartControlsWidgets !== null && !enabledChartFooter && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_ChartControls__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n    widgets: chartControlsWidgets\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_ScrollToRecent__WEBPACK_IMPORTED_MODULE_22__[\"default\"], null), enabledChartFooter && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_ChartFooter__WEBPACK_IMPORTED_MODULE_12__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Loader__WEBPACK_IMPORTED_MODULE_17__[\"default\"], null)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_SettingsDialog__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n    store: drawToolsSettingsDialog\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_SettingsDialog__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n    store: chartTypeSettingsDialog\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_SettingsDialog__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {\n    store: studiesSettingsDialog\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_IndicatorPredictionDialog__WEBPACK_IMPORTED_MODULE_16__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    id: \"smartcharts_modal\",\n    className: \"ciq-modal\"\n  })));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(Chart));\n\n/***/ }),\n\n/***/ \"./src/components/ChartControls.tsx\":\n/*!******************************************!*\\\n  !*** ./src/components/ChartControls.tsx ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_483178__) => {\n\n\"use strict\";\n__nested_webpack_require_483178__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_483178__.d(__nested_webpack_exports__, {\n/* harmony export */   \"RenderDefaultControls\": () => (/* binding */ RenderDefaultControls),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_483178__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_483178__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_483178__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_483178__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_483178__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_483178__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _ChartTypes__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_483178__(/*! ./ChartTypes */ \"./src/components/ChartTypes.tsx\");\n/* harmony import */ var _StudyLegend__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_483178__(/*! ./StudyLegend */ \"./src/components/StudyLegend.tsx\");\n/* harmony import */ var _Views__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_483178__(/*! ./Views */ \"./src/components/Views.tsx\");\n/* harmony import */ var _CrosshairToggle__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_483178__(/*! ./CrosshairToggle */ \"./src/components/CrosshairToggle.tsx\");\n/* harmony import */ var _Timeperiod__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_483178__(/*! ./Timeperiod */ \"./src/components/Timeperiod.tsx\");\n/* harmony import */ var _ChartSize__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_483178__(/*! ./ChartSize */ \"./src/components/ChartSize.tsx\");\n/* harmony import */ var _DrawTools__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_483178__(/*! ./DrawTools */ \"./src/components/DrawTools.tsx\");\n/* harmony import */ var _Share__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_483178__(/*! ./Share */ \"./src/components/Share.tsx\");\n/* harmony import */ var _sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_483178__(/*! ../../sass/components/_chart-controls.scss */ \"./sass/components/_chart-controls.scss\");\n/* harmony import */ var _sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__nested_webpack_require_483178__.n(_sass_components_chart_controls_scss__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst RenderDefaultControls = _ref => {\n  let {\n    isMobile\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, isMobile ? '' : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CrosshairToggle__WEBPACK_IMPORTED_MODULE_7__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartTypes__WEBPACK_IMPORTED_MODULE_4__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Timeperiod__WEBPACK_IMPORTED_MODULE_8__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_StudyLegend__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_DrawTools__WEBPACK_IMPORTED_MODULE_10__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Views__WEBPACK_IMPORTED_MODULE_6__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Share__WEBPACK_IMPORTED_MODULE_11__[\"default\"], null), isMobile ? '' : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartSize__WEBPACK_IMPORTED_MODULE_9__[\"default\"], null));\n};\n\nconst ChartControls = _ref2 => {\n  let {\n    widgets\n  } = _ref2;\n  const {\n    chart,\n    chartType,\n    studies,\n    drawTools,\n    view,\n    share,\n    chartSetting\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    context,\n    isMobile\n  } = chart;\n  const hasOpenMenu = chartType.menuStore.open || studies.menuStore.open || drawTools.menuStore.open || view.menuStore.open || share.menuStore.open || chartSetting.menuStore.open;\n  const Controls = widgets || RenderDefaultControls;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('cq-chart-controls', {\n      active: hasOpenMenu\n    })\n  }, context ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Controls, {\n    isMobile: isMobile\n  }) : null);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(ChartControls));\n\n/***/ }),\n\n/***/ \"./src/components/ChartFooter.tsx\":\n/*!****************************************!*\\\n  !*** ./src/components/ChartFooter.tsx ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_488465__) => {\n\n\"use strict\";\n__nested_webpack_require_488465__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_488465__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_488465__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_488465__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_488465__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_488465__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_488465__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_488465__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* harmony import */ var _ChartSetting__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_488465__(/*! ./ChartSetting */ \"./src/components/ChartSetting.tsx\");\n/* harmony import */ var _sass_components_chart_footer_scss__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_488465__(/*! ../../sass/components/_chart-footer.scss */ \"./sass/components/_chart-footer.scss\");\n/* harmony import */ var _sass_components_chart_footer_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_488465__.n(_sass_components_chart_footer_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* provided dependency */ var t = __nested_webpack_require_488465__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\nconst ChartFooterNetwork = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref => {\n  let {\n    networkStatus\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"sc-chart-footer__item sc-chart-footer__item--status\",\n    content: `${t.translate('Network status')}: ${networkStatus ? t.translate(networkStatus.tooltip) : ''}`,\n    enabled: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-chart__status sc-chart__status--${networkStatus ? networkStatus.class : 'offline'}`\n  }));\n});\n\nconst ChartFooter = () => {\n  const {\n    chart\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_1__.useStores)();\n  const {\n    context,\n    serverTime,\n    networkStatus,\n    openFullscreen\n  } = chart;\n  return context ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-chart-footer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ChartFooterNetwork, {\n    networkStatus: networkStatus\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-chart-footer__item sc-chart-footer__item--time\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, serverTime)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"ciq-menu ciq-enabled\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: \"https://deriv.com/help-centre/\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.HelpCenterIcon, null)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ChartSetting__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"ciq-menu ciq-enabled\",\n    onClick: () => openFullscreen()\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.FullScreenIcon, null)))) : null;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(ChartFooter));\n\n/***/ }),\n\n/***/ \"./src/components/ChartMode.tsx\":\n/*!**************************************!*\\\n  !*** ./src/components/ChartMode.tsx ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_493057__) => {\n\n\"use strict\";\n__nested_webpack_require_493057__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_493057__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_493057__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_493057__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_493057__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_493057__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_493057__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_493057__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_chart_mode_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_493057__(/*! ../../sass/components/_chart-mode.scss */ \"./sass/components/_chart-mode.scss\");\n/* harmony import */ var _sass_components_chart_mode_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_493057__.n(_sass_components_chart_mode_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _ChartTypes__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_493057__(/*! ./ChartTypes */ \"./src/components/ChartTypes.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_493057__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_493057__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* harmony import */ var _Timeperiod__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_493057__(/*! ./Timeperiod */ \"./src/components/Timeperiod.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_493057__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\n\n\n\nconst TypeMap = {\n  line: _Icons__WEBPACK_IMPORTED_MODULE_6__.TypeAreaGrayscaleIcon,\n  candles: _Icons__WEBPACK_IMPORTED_MODULE_6__.TypeCandleGrayscaleIcon,\n  ohlc: _Icons__WEBPACK_IMPORTED_MODULE_6__.TypeOhlcGrayscaleIcon,\n  hollow: _Icons__WEBPACK_IMPORTED_MODULE_6__.TypeHollowGrayscaleIcon\n};\n\nconst ChartMode = _ref => {\n  let {\n    onChartType,\n    onGranularity,\n    portalNodeId\n  } = _ref;\n  const {\n    chart,\n    chartMode,\n    chartType,\n    timeperiod,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    menuStore\n  } = chartMode;\n  const {\n    allowTickChartTypeOnly\n  } = state;\n  const {\n    isMobile\n  } = chart;\n  const {\n    type\n  } = chartType;\n  const {\n    display: displayInterval\n  } = timeperiod;\n  const menuOpen = chartMode.menuStore.open;\n  const TypeIcon = TypeMap[type.id];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    className: \"ciq-display sc-chart-mode\",\n    title: t.translate('Chart types'),\n    tooltip: t.translate('Chart types'),\n    modalMode: true,\n    isFullscreen: true,\n    portalNodeId: portalNodeId,\n    store: menuStore\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('sc-chart-mode__menu', {\n      'sc-chart-mode__menu--active': menuOpen\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", {\n    className: \"sc-chart-mode__menu__timeperiod\"\n  }, displayInterval), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(TypeIcon, {\n    \"tooltip-title\": t.translate(type.text)\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-mode__section\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-mode__section__item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_ChartTypes__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    newDesign: true,\n    onChange: onChartType\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-mode__section__item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Timeperiod__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    newDesign: true,\n    portalNodeId: portalNodeId,\n    onChange: onGranularity\n  }))), allowTickChartTypeOnly && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('sc-chart-mode__section__text', {\n      'sc-chart-mode__section__text--mobile': isMobile\n    })\n  }, t.translate('Only selected charts and time intervals are available for this trade type.'))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(ChartMode));\n\n/***/ }),\n\n/***/ \"./src/components/ChartSetting.tsx\":\n/*!*****************************************!*\\\n  !*** ./src/components/ChartSetting.tsx ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_498770__) => {\n\n\"use strict\";\n__nested_webpack_require_498770__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_498770__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_498770__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_498770__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_498770__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_498770__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_498770__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_498770__(/*! react-tabs */ \"./node_modules/react-tabs/esm/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_498770__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_498770__(/*! ../../sass/components/_chart-setting.scss */ \"./sass/components/_chart-setting.scss\");\n/* harmony import */ var _sass_components_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__nested_webpack_require_498770__.n(_sass_components_chart_setting_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_498770__(/*! ./Form */ \"./src/components/Form.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_498770__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_498770__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_498770__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\n\n\n\n\nconst ChartSettingItem = _ref => {\n  let {\n    title,\n    id,\n    label,\n    value,\n    onChange,\n    noramIcon,\n    activeIcon\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.FormGroup, {\n    title: title,\n    type: id\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.SwitchIcon, {\n    id: id,\n    label: label,\n    value: value,\n    onChange: onChange,\n    noramIcon: noramIcon,\n    activeIcon: activeIcon\n  }));\n};\n\nconst ChartSetting = () => {\n  const {\n    chartSetting\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_4__.useStores)();\n  const {\n    menuStore,\n    countdown,\n    historical,\n    isHighestLowestMarkerEnabled,\n    languages,\n    language: selectedLanguage,\n    setHistorical,\n    setLanguage,\n    setTheme,\n    showCountdown,\n    theme,\n    toggleHighestLowestMarker\n  } = chartSetting;\n  const menuOpen = menuStore.dialogStore.open;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    store: menuStore,\n    className: \"sc-chart-setting\",\n    title: t.translate('Platform settings'),\n    enableTabular: true,\n    modalMode: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.SettingIcon, {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('ic-icon-with-sub', {\n      active: menuOpen\n    }),\n    \"tooltip-title\": t.translate('Settings')\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tabs, {\n    className: \"tabs--vertical\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabList, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n    key: \"theme\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.ThemeIcon, null), t.translate('Themes')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n    key: \"language\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.LanguageIcon, null), t.translate('Language')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tab, {\n    key: \"platform\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.ChartIcon, null), t.translate('Charts'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-setting__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.FormGroup, {\n    title: t.translate('Select theme'),\n    type: \"theme\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form__group__item', {\n      'form__group__item--active': theme === 'dark'\n    }),\n    onClick: () => setTheme('dark')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.ThemeDarkIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"text\"\n  }, t.translate('Dark'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form__group__item', {\n      'form__group__item--active': theme === 'light'\n    }),\n    onClick: () => setTheme('light')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.ThemeLightIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"text\"\n  }, t.translate('Light')))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-setting__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.FormGroup, {\n    title: t.translate('Select language'),\n    type: \"language\"\n  }, languages.map(language => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    key: language.key,\n    onClick: () => setLanguage(language.key),\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('form__group__item', {\n      'form__group__item--active': selectedLanguage?.key === language.key\n    })\n  }, language.icon, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", {\n    className: \"text\"\n  }, language.name)))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-chart-setting__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ChartSettingItem, {\n    title: t.translate('Interval duration'),\n    id: \"countdown\",\n    label: t.translate('Display remaining time for each interval'),\n    value: countdown,\n    onChange: showCountdown,\n    noramIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingCountdownMap[theme].normal,\n    activeIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingCountdownMap[theme].active\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ChartSettingItem, {\n    title: t.translate('Historical data mode'),\n    id: \"historical\",\n    label: t.translate('Display data for a specific date and time'),\n    value: historical,\n    onChange: setHistorical,\n    noramIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingHistoricalMap[theme].normal,\n    activeIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingHistoricalMap[theme].active\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.FormGroup, {\n    title: t.translate('Highest and lowest spot')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_6__.SwitchIcon, {\n    id: \"highestlowest\",\n    label: t.translate('Display the highest and lowest spot price'),\n    value: isHighestLowestMarkerEnabled,\n    onChange: toggleHighestLowestMarker,\n    noramIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingHighestLowestMap[theme].normal,\n    activeIcon: _Icons__WEBPACK_IMPORTED_MODULE_7__.SettingHighestLowestMap[theme].active\n  })))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(ChartSetting));\n\n/***/ }),\n\n/***/ \"./src/components/ChartSize.tsx\":\n/*!**************************************!*\\\n  !*** ./src/components/ChartSize.tsx ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_508627__) => {\n\n\"use strict\";\n__nested_webpack_require_508627__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_508627__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_508627__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_508627__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_508627__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_508627__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_508627__(/*! ../../sass/components/_chart-size.scss */ \"./sass/components/_chart-size.scss\");\n/* harmony import */ var _sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_508627__.n(_sass_components_chart_size_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_508627__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_508627__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\nconst ChartSize = () => {\n  const {\n    chartSize\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    zoomIn,\n    zoomOut\n  } = chartSize;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"ciq-menu sc-chart-size\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ZoomOutIcon, {\n    className: \"ic-icon-with-sub cq-zoom-out\",\n    \"tooltip-title\": t.translate('Zoom out'),\n    onClick: zoomOut\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-menu-btn\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ZoomInIcon, {\n    className: \"ic-icon-with-sub cq-zoom-in\",\n    \"tooltip-title\": t.translate('Zoom in'),\n    onClick: zoomIn\n  })));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(ChartSize));\n\n/***/ }),\n\n/***/ \"./src/components/ChartTitle.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/ChartTitle.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_511440__) => {\n\n\"use strict\";\n__nested_webpack_require_511440__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_511440__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_511440__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_511440__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_511440__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_511440__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_511440__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_511440__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_511440__(/*! src/utils */ \"./src/utils/index.ts\");\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_511440__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_511440__(/*! ../../sass/components/_chart-title.scss */ \"./sass/components/_chart-title.scss\");\n/* harmony import */ var _sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_511440__.n(_sass_components_chart_title_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _categoricaldisplay__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_511440__(/*! ./categoricaldisplay */ \"./src/components/categoricaldisplay/index.ts\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_511440__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* harmony import */ var _SymbolSelectButton__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_511440__(/*! ./SymbolSelectButton */ \"./src/components/SymbolSelectButton.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_511440__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\n\n\nconst ChartTitle = props => {\n  const {\n    chartTitle,\n    chart,\n    chartSetting,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    isMobile\n  } = chart;\n  const {\n    theme\n  } = chartSetting;\n  const {\n    menuStore,\n    currentSymbol,\n    categoricalDisplay,\n    setSymbol,\n    onMouseEnter,\n    onMouseLeave,\n    updateProps\n  } = chartTitle;\n  const onChange = props.onChange || setSymbol;\n  const setMenuOpen = menuStore.setOpen;\n  const {\n    containerId,\n    enabled,\n    portalNodeId,\n    searchInputClassName,\n    open,\n    open_market,\n    isNestedList\n  } = props;\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    const { ...otherProps\n    } = props;\n    updateProps(otherProps); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [open, open_market]);\n\n  if (!currentSymbol) {\n    return null;\n  }\n\n  const ChartTitleContainer = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    store: menuStore,\n    enabled: enabled,\n    className: \"cq-chart-title stx-show cq-symbols-display\",\n    isFullscreen: true,\n    portalNodeId: portalNodeId,\n    title: isMobile ? t.translate('Markets') : '',\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_SymbolSelectButton__WEBPACK_IMPORTED_MODULE_9__.SymbolSelectButton, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_categoricaldisplay__WEBPACK_IMPORTED_MODULE_7__.CategoricalDisplay, {\n    store: categoricalDisplay,\n    isNestedList: isNestedList,\n    searchInputClassName: searchInputClassName,\n    onSelectItem: (symbol_object, category_id) => {\n      if (symbol_object.symbol !== currentSymbol.symbol) {\n        onChange(symbol_object.symbol);\n        state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_5__.STATE.SYMBOL_CHANGE, {\n          symbol: symbol_object.symbol,\n          symbol_category: category_id === 'favorite' ? 'favorites' : (0,src_utils__WEBPACK_IMPORTED_MODULE_4__.getSymbolMarketCategory)(symbol_object)\n        });\n      }\n\n      setMenuOpen(false);\n    }\n  })));\n\n  if (containerId) {\n    return /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_2___default().createPortal( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n      className: `smartcharts-${theme}`\n    }, ChartTitleContainer), document.getElementById(containerId));\n  }\n\n  return ChartTitleContainer;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(ChartTitle));\n\n/***/ }),\n\n/***/ \"./src/components/ChartTypes.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/ChartTypes.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_516920__) => {\n\n\"use strict\";\n__nested_webpack_require_516920__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_516920__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_516920__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_516920__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_516920__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_516920__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_516920__(/*! src/utils */ \"./src/utils/index.ts\");\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_516920__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_516920__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* harmony import */ var _sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_516920__(/*! ../../sass/components/_chart-types.scss */ \"./sass/components/_chart-types.scss\");\n/* harmony import */ var _sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_516920__.n(_sass_components_chart_types_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _List__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_516920__(/*! ./List */ \"./src/components/List.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_516920__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_516920__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\n\n\n\n\nconst TypeIcon = _ref => {\n  let {\n    Icon,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Icon, props);\n};\n\nconst ChartTypes = _ref2 => {\n  let {\n    enabled,\n    newDesign,\n    onChange: onChangeFn\n  } = _ref2;\n  const {\n    chartType,\n    chart,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    listStore,\n    setChartType,\n    updateProps,\n    types,\n    type,\n    menuStore\n  } = chartType;\n  const {\n    open: menuOpen,\n    setOpen\n  } = chartType.menuStore;\n  const {\n    isMobile\n  } = chart;\n  const onChange = onChangeFn || setChartType;\n  if (type === undefined) return null;\n\n  const onItemClick = chart_type => {\n    if (type.id !== chart_type.id) {\n      if (chart_type.id) {\n        state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_4__.STATE.CHART_TYPE_CHANGE, {\n          chart_type_name: chart_type.id === 'colored_bar' ? chart_type.text : chart_type.text.toLowerCase(),\n          time_interval_name: (0,src_utils__WEBPACK_IMPORTED_MODULE_3__.getTimeIntervalName)(state.granularity, src_Constant__WEBPACK_IMPORTED_MODULE_4__.Intervals)\n        });\n      }\n\n      onChange(chart_type.id);\n    }\n\n    setOpen(false);\n  };\n\n  updateProps(onChange);\n\n  if (newDesign) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"sc-chart-type\"\n    }, types.map(chart_type => {\n      const Icon = chart_type.icon;\n      let className = 'sc-chart-type__item';\n      className += chart_type.active ? ' sc-chart-type__item--active' : '';\n      className += chart_type.disabled ? ' sc-chart-type__item--disabled' : '';\n\n      const onClick = () => chart_type.disabled ? null : onItemClick(chart_type);\n\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n        key: chart_type.id,\n        enabled: chart_type.disabled && !isMobile,\n        className: className,\n        content: t.translate('Available only for non-tick time intervals.'),\n        onClick: onClick\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Icon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n        className: \"text\"\n      }, t.translate(chart_type.text)));\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    store: menuStore,\n    className: \"ciq-display ciq-chart-types\",\n    enabled: enabled,\n    title: t.translate('Chart types')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TypeIcon, {\n    Icon: type.icon,\n    className: `ic-icon-with-sub ${menuOpen ? 'active' : ''}`,\n    \"tooltip-title\": t.translate(type.text)\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_8__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"body\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_List__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    height: 260,\n    store: listStore\n  }, T => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"left\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TypeIcon, {\n    Icon: type.icon,\n    className: `margin ${T.active ? 'active' : ''}`\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"ciq-icon-text\"\n  }, T.text)))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(ChartTypes));\n\n/***/ }),\n\n/***/ \"./src/components/Crosshair.tsx\":\n/*!**************************************!*\\\n  !*** ./src/components/Crosshair.tsx ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_523236__) => {\n\n\"use strict\";\n__nested_webpack_require_523236__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_523236__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_523236__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_523236__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_523236__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_523236__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_crosshair_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_523236__(/*! ../../sass/components/_crosshair.scss */ \"./sass/components/_crosshair.scss\");\n/* harmony import */ var _sass_components_crosshair_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_523236__.n(_sass_components_crosshair_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst Crosshair = () => {\n  const {\n    crosshair,\n    chartAdapter\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    state: crosshairState\n  } = crosshair;\n  const crosshairWrapperRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const crosshairRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const crossHairXRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const crossHairYRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const floatDateRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const floatPriceRef = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    crosshair.onMount({\n      crosshairRef,\n      crossHairXRef,\n      crossHairYRef,\n      floatDateRef,\n      floatPriceRef\n    });\n    return () => crosshair.onUnmount();\n  }, []);\n  if (!chartAdapter.isChartLoaded) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: crosshairWrapperRef,\n    className: \"cq-crosshair-wrapper\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: crosshairRef,\n    className: \"cq-crosshair\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-crosshair-tooltip\"\n  }, crosshairState === 2 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-crosshair-content\"\n  })), (crosshairState == 1 || crosshairState == 2) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: crossHairXRef,\n    className: \"cq-crosshair-line cq-crosshair-x\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: crossHairYRef,\n    className: \"cq-crosshair-line cq-crosshair-y\"\n  })), crosshairState == 1 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: floatDateRef,\n    className: \"cq-float-date\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    ref: floatPriceRef,\n    className: \"cq-float-price\"\n  }))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(Crosshair));\n\n/***/ }),\n\n/***/ \"./src/components/CrosshairToggle.tsx\":\n/*!********************************************!*\\\n  !*** ./src/components/CrosshairToggle.tsx ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_527318__) => {\n\n\"use strict\";\n__nested_webpack_require_527318__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_527318__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_527318__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_527318__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_527318__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_527318__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_527318__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_527318__(/*! ./Form */ \"./src/components/Form.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_527318__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_527318__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\nconst CrosshairToggle = _ref => {\n  let {\n    onChange,\n    isVisible = true\n  } = _ref;\n  const {\n    crosshair,\n    chart\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    setCrosshairState,\n    updateProps\n  } = crosshair;\n  const {\n    isMobile\n  } = chart;\n  const state = typeof crosshair.state !== 'number' ? 0 : crosshair.state;\n  const CrosshairIcon = [_Icons__WEBPACK_IMPORTED_MODULE_3__.CrosshairOffIcon, _Icons__WEBPACK_IMPORTED_MODULE_3__.CrosshairOnIcon, _Icons__WEBPACK_IMPORTED_MODULE_3__.CrosshairTooltipIcon][state];\n  const labels = [t.translate(\"Don't show price info on chart\"), t.translate('Show price info on x & y axes'), t.translate('Show price info on chart')];\n\n  const onCrosshairToggle = () => {\n    setCrosshairState((state + 1) % 3);\n  };\n\n  updateProps(onChange);\n  if (!isVisible) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    content: labels[state],\n    enabled: !isMobile,\n    position: \"right\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_4__.Toggle, {\n    active: state !== 0,\n    onChange: onCrosshairToggle\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CrosshairIcon, null)));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(CrosshairToggle));\n\n/***/ }),\n\n/***/ \"./src/components/Dialog.tsx\":\n/*!***********************************!*\\\n  !*** ./src/components/Dialog.tsx ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_530320__) => {\n\n\"use strict\";\n__nested_webpack_require_530320__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_530320__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_530320__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_530320__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_530320__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_530320__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_530320__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_530320__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _sass_components_dialog_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_530320__(/*! ../../sass/components/_dialog.scss */ \"./sass/components/_dialog.scss\");\n/* harmony import */ var _sass_components_dialog_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_530320__.n(_sass_components_dialog_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst Dialog = _ref => {\n  let {\n    store,\n    children,\n    className = '',\n    title,\n    customHead,\n    enableTabular = false,\n    handleCloseDialog\n  } = _ref;\n  const {\n    updateCloseCallback,\n    onContainerClick\n  } = store;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => updateCloseCallback(handleCloseDialog));\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-dialog', className, {\n      'sc-dialog--tabular': enableTabular\n    }),\n    onClick: onContainerClick\n  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-dialog__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-dialog__head--title\"\n  }, title), customHead && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-dialog__head--custom\"\n  }, customHead), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-dialog__head--action\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.CloseIcon, {\n    onClick: handleCloseDialog\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-dialog__body\"\n  }, children));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Dialog));\n\n/***/ }),\n\n/***/ \"./src/components/DrawTools.tsx\":\n/*!**************************************!*\\\n  !*** ./src/components/DrawTools.tsx ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_533582__) => {\n\n\"use strict\";\n__nested_webpack_require_533582__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_533582__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_533582__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_533582__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_533582__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_533582__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_533582__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_533582__(/*! react-tabs */ \"./node_modules/react-tabs/esm/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_533582__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_533582__(/*! ../../sass/components/_draw_tools.scss */ \"./sass/components/_draw_tools.scss\");\n/* harmony import */ var _sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__nested_webpack_require_533582__.n(_sass_components_draw_tools_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_533582__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_533582__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* harmony import */ var _NotificationBadge__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_533582__(/*! ./NotificationBadge */ \"./src/components/NotificationBadge.tsx\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_533582__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _ui_utils__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_533582__(/*! ./ui/utils */ \"./src/components/ui/utils.ts\");\n/* provided dependency */ var t = __nested_webpack_require_533582__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\n\n\n\nconst ActivePanelView = _ref => {\n  let {\n    enabled,\n    children\n  } = _ref;\n  return enabled ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools--empty\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.EmptyStateIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"p\", null, t.translate('You have no active drawings yet.'))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement((react__WEBPACK_IMPORTED_MODULE_2___default().Fragment), null, children);\n};\n\nconst Info = _ref2 => {\n  let {\n    Icon,\n    text,\n    num,\n    bars\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"info\"\n  }, Icon ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(Icon, {\n    className: \"icon\"\n  }) : '', /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"text\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, t.translate(text, {\n    num: num || ' '\n  })), bars ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"small\", null, \"(\", bars, \" bars)\") : ''));\n};\n\nconst DrawToolsList = _ref3 => {\n  let {\n    items,\n    onClick\n  } = _ref3;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__list\"\n  }, items.map(Item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    key: Item.id,\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('sc-dtools__list__item', `sc-dtools__${Item.id}`),\n    onClick: () => onClick(Item.id)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(Info, {\n    Icon: Item.icon,\n    text: Item.text\n  }))));\n};\n\nconst ActiveDrawToolsListItem = _ref4 => {\n  let {\n    item,\n    onSetting,\n    onDelete\n  } = _ref4;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__list__item\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(Info, {\n    Icon: item.icon,\n    text: item.text,\n    bars: item.bars,\n    num: item.num\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"actions\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.SettingIcon, {\n    onClick: () => onSetting(item.index)\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.DeleteIcon, {\n    onClick: () => onDelete(item.index)\n  })));\n};\n\nconst ActiveDrawToolsListGroup = _ref5 => {\n  let {\n    group,\n    onSetting,\n    onDelete\n  } = _ref5;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__category\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__category__head\"\n  }, t.translate((0,_ui_utils__WEBPACK_IMPORTED_MODULE_10__.capitalize)(group.id))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__category__body\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__list\"\n  }, group.items.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ActiveDrawToolsListItem, {\n    key: item.index,\n    item: { ...item\n    },\n    onSetting: onSetting,\n    onDelete: onDelete\n  })))));\n};\n\nconst ActiveDrawToolsList = _ref6 => {\n  let {\n    activeDrawToolsGroup,\n    onSetting,\n    onDelete\n  } = _ref6;\n  const sortedActiveDrawToolsGroup = activeDrawToolsGroup.sort((a, b) => {\n    if (a.items.length <= 1 && b.items.length <= 1) return 0;\n    if (a.items.length <= 1) return -1;\n    if (b.items.length <= 1) return 1;\n    return 0;\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    autoHide: true,\n    height: 320\n  }, sortedActiveDrawToolsGroup.map(group => group.items.length > 1 ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ActiveDrawToolsListGroup, {\n    group: group,\n    key: group.id,\n    onSetting: onSetting,\n    onDelete: onDelete\n  }) : group.items.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ActiveDrawToolsListItem, {\n    key: item.index,\n    item: item,\n    onSetting: onSetting,\n    onDelete: onDelete\n  }))));\n};\n\nconst DrawTools = _ref7 => {\n  let {\n    portalNodeId\n  } = _ref7;\n  const {\n    drawTools\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_4__.useStores)();\n  const {\n    clearAll,\n    selectTool,\n    getDrawToolsItems,\n    activeToolsNo: activeDrawToolsItemsNo,\n    activeToolsGroup: activeDrawToolsGroup,\n    onDeleted: onDelete,\n    onSetting,\n    updatePortalNode,\n    menuStore\n  } = drawTools;\n  const drawToolsItems = getDrawToolsItems();\n  const menuOpen = menuStore.open;\n  updatePortalNode(portalNodeId);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    store: menuStore,\n    className: \"sc-dtools\",\n    title: t.translate('Drawing tools'),\n    tooltip: t.translate('Drawing tools'),\n    modalMode: true,\n    enableTabular: true,\n    portalNodeId: portalNodeId\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('sc-dtools__menu', {\n      'sc-dtools__menu--active': menuOpen\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.DrawToolIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_NotificationBadge__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    notificationCount: activeDrawToolsItemsNo\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tabs, {\n    className: \"tabs--vertical\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabList, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tab, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.ActiveIcon, null), t.translate('Active'), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_NotificationBadge__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    notificationCount: activeDrawToolsItemsNo\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.Tab, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.DrawToolIcon, null), t.translate('All drawings'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ActivePanelView, {\n    enabled: !activeDrawToolsItemsNo\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__panel__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--sm sc-btn--outline-secondary\",\n    onClick: clearAll\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, t.translate('Clear all')))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__panel__content sc-dtools__panel__content--active\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(ActiveDrawToolsList, {\n    activeDrawToolsGroup: activeDrawToolsGroup,\n    onSetting: onSetting,\n    onDelete: onDelete\n  }))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_3__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-dtools__panel__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(DrawToolsList, {\n    items: drawToolsItems,\n    onClick: selectTool\n  })))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(DrawTools));\n\n/***/ }),\n\n/***/ \"./src/components/FastMarker.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/FastMarker.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_545509__) => {\n\n\"use strict\";\n__nested_webpack_require_545509__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_545509__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_545509__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_545509__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_545509__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_545509__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var src_utils_date__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_545509__(/*! src/utils/date */ \"./src/utils/date.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_545509__(/*! ../utils */ \"./src/utils/index.ts\");\n\n\n\n\n // Render given Components under stx-subholder.\n// This component is used to position a marker on the chart.\n//\n// USAGE:\n//\n//  - setRef({setPosition, div}) will be called on mount.\n//  - \"div\" is the dom element containing the marker with \"your-css-class\"\n//  - \"setPosition({epoch, price})\" is a function that you will use to update the div position.\n//  - calling \"setPosition({epoch: null, price: null})\" will hide the marker.\n//  - use \"div.querySelector('...')\" to get a dom reference in order to update your content .\n//  - \"setRef(null)\" will be called when the marker unmounts.\n//\n//  <FastMarker\n//      markerRef={setRef}\n//      threshold={optional visibility threshold}\n//      className=\"your-css-class\"\n//  >\n//     <your content here/>\n//  </FastMarker>\n//\n//  - the chart can have a zoom level, if `threshold` is provided\n//    the marker will only be shown if it's within that zoom threshold.\n\nconst FastMarker = props => {\n  const {\n    chart: chartStore,\n    chartAdapter\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const price_ref = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const date_ref = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const epoch_ref = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const elem_ref = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(null);\n  const props_ref = react__WEBPACK_IMPORTED_MODULE_1___default().useRef(props);\n  props_ref.current = props;\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    chartAdapter.painter.registerCallback(updateCSS);\n    return () => {\n      chartAdapter.painter.unregisterCallback(updateCSS);\n    };\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    updateCSS();\n  }, [chartAdapter.epochBounds, chartAdapter.quoteBounds, chartAdapter.isFeedLoaded, chartAdapter.isChartLoaded]);\n\n  const setPosition = _ref => {\n    let {\n      epoch,\n      price\n    } = _ref;\n    price_ref.current = Number(price) || null;\n    date_ref.current = (0,src_utils_date__WEBPACK_IMPORTED_MODULE_3__.strToDateTime)((0,_utils__WEBPACK_IMPORTED_MODULE_4__.getUTCDate)(epoch));\n    epoch_ref.current = epoch ? epoch * 1000 : null;\n    updateCSS();\n  };\n\n  const updateCSS = () => {\n    if (!chartAdapter.isFeedLoaded || !chartAdapter.isChartLoaded) {\n      return;\n    }\n\n    if (!elem_ref.current) {\n      return;\n    }\n\n    if (!date_ref.current) {\n      elem_ref.current.style.visibility = 'hidden';\n      return;\n    }\n\n    const offsetTop = props_ref.current.offsetTop || 0;\n    const offsetLeft = props_ref.current.offsetLeft || 0;\n    const elem = elem_ref.current;\n    let top = 0,\n        left = 0,\n        show = true;\n\n    if (epoch_ref.current) {\n      const x = chartAdapter.getXFromEpoch(epoch_ref.current);\n      const y = price_ref.current ? chartAdapter.getYFromQuote(price_ref.current) : 0;\n\n      if (x > 0 && (price_ref.current == null || y > 0)) {\n        top = +y;\n        left = +x;\n      } else {\n        show = false;\n      }\n    } // patch DOM without triggering recalculate layout.\n\n\n    elem.style.transform = `translate(${left + offsetLeft}px, ${top + offsetTop}px)`;\n    elem.style.visibility = show ? 'visible' : 'hidden';\n  };\n\n  const setRef = ref => {\n    elem_ref.current = ref;\n    const {\n      markerRef\n    } = props_ref.current;\n    const data = ref ? {\n      div: ref,\n      setPosition\n    } : null;\n\n    if (markerRef) {\n      markerRef(data);\n    }\n\n    if (ref !== null) {\n      updateCSS();\n    }\n  };\n\n  const {\n    children,\n    className\n  } = props;\n  if (!chartAdapter.isChartLoaded) return null;\n  const {\n    chartNode,\n    yAxisWidth\n  } = chartStore;\n  const {\n    overlap_y_axis = true\n  } = props;\n  const maxWidth = chartNode && !overlap_y_axis ? chartNode.offsetWidth - yAxisWidth - 10 : '100%';\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"fast-marker\",\n    style: {\n      maxWidth: maxWidth\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: className,\n    ref: setRef,\n    style: {\n      position: 'absolute'\n    }\n  }, children));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(FastMarker));\n\n/***/ }),\n\n/***/ \"./src/components/Favorite.tsx\":\n/*!*************************************!*\\\n  !*** ./src/components/Favorite.tsx ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_551126__) => {\n\n\"use strict\";\n__nested_webpack_require_551126__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_551126__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_551126__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_551126__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_551126__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_551126__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_551126__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_551126__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_551126__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _store_FavoriteStore__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_551126__(/*! ../store/FavoriteStore */ \"./src/store/FavoriteStore.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_551126__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n\n\n\n\n\n\n\n\nconst Favorite = _ref => {\n  let {\n    category,\n    id\n  } = _ref;\n  const {\n    chart,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const [store] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(_store_FavoriteStore__WEBPACK_IMPORTED_MODULE_5__[\"default\"].getInstance());\n  const [is_favorite, setFavorite] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n  const onClick = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(e => {\n    e.stopPropagation();\n    e.nativeEvent.isHandledByDialog = true; // prevent close dialog\n\n    store.toggleFavorite(category, id);\n    state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.FAVORITE_MARKETS_TOGGLE, {\n      is_favorite: store.isFavorite(category, id),\n      symbol: chart.activeSymbols?.symbolMap[id]?.symbol\n    });\n  }, [chart, state, store, category, id]);\n  const onFavoriteUpdate = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(() => {\n    const isFavorite = store.isFavorite(category, id);\n\n    if (isFavorite !== is_favorite) {\n      setFavorite(isFavorite);\n      (0,_utils_ga__WEBPACK_IMPORTED_MODULE_6__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogCategories.CategoricalDisplay, _utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogActions.Favorite, `${isFavorite ? 'Add ' : 'Remove '} ${id}`);\n    }\n  }, [store, category, id, is_favorite]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    if (store && store.onFavoriteUpdate) {\n      store.onFavoriteUpdate(onFavoriteUpdate);\n      setFavorite(store.isFavorite(category, id));\n    }\n\n    return () => {\n      if (store) {\n        store.offFavoriteUpdate(onFavoriteUpdate);\n      }\n    };\n  }, [store, category, id, onFavoriteUpdate]);\n  return !category || !id ? null : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.FavoriteIcon, {\n    onClick: onClick,\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('ciq-favorite', {\n      'ciq-active-favorite': is_favorite\n    })\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Favorite);\n\n/***/ }),\n\n/***/ \"./src/components/Form.tsx\":\n/*!*********************************!*\\\n  !*** ./src/components/Form.tsx ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_554960__) => {\n\n\"use strict\";\n__nested_webpack_require_554960__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_554960__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Checkbox\": () => (/* binding */ Checkbox),\n/* harmony export */   \"ColorPicker\": () => (/* binding */ ColorPicker),\n/* harmony export */   \"DropDown\": () => (/* binding */ DropDown),\n/* harmony export */   \"FontSetting\": () => (/* binding */ FontSetting),\n/* harmony export */   \"FormGroup\": () => (/* binding */ FormGroup),\n/* harmony export */   \"NumberColorPicker\": () => (/* binding */ NumberColorPicker),\n/* harmony export */   \"NumericInput\": () => (/* binding */ NumericInput),\n/* harmony export */   \"Pattern\": () => (/* binding */ Pattern),\n/* harmony export */   \"Slider\": () => (/* binding */ Slider),\n/* harmony export */   \"Switch\": () => (/* binding */ Switch),\n/* harmony export */   \"SwitchIcon\": () => (/* binding */ SwitchIcon),\n/* harmony export */   \"Toggle\": () => (/* binding */ Toggle)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_554960__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_554960__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_554960__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_554960__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_554960__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_554960__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_554960__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_554960__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _sass_components_form_scss__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_554960__(/*! ../../sass/components/_form.scss */ \"./sass/components/_form.scss\");\n/* harmony import */ var _sass_components_form_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__nested_webpack_require_554960__.n(_sass_components_form_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* provided dependency */ var t = __nested_webpack_require_554960__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n/* eslint-disable max-classes-per-file */\n\n/* eslint-disable react/sort-comp,react/no-multi-comp */\n\n\n\n\n\n\nconst FormGroup = _ref => {\n  let {\n    title,\n    type,\n    children\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `form__group ${type ? `form__group--${type}` : ''}`\n  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form__label\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, \" \", title, \" \")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form__control\"\n  }, children));\n};\nconst Checkbox = _ref2 => {\n  let {\n    id,\n    label,\n    checked,\n    disabled,\n    onChange\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    onClick: () => onChange(!checked)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"label\", {\n    htmlFor: id,\n    className: `sc-checkbox ${checked ? 'sc-checkbox--checked' : ''} ${disabled ? 'sc-checkbox--disabled' : ''}`\n  }, checked ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.CheckboxActiveIcon, {\n    className: \"sc-checkbox__box\"\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.CheckboxIcon, {\n    className: \"sc-checkbox__box\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-checkbox__label\"\n  }, label)));\n};\nconst Slider = _ref3 => {\n  let {\n    min = 1,\n    max = 10,\n    step = 1,\n    value,\n    onChange\n  } = _ref3;\n  const activeWidth = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => {\n    const barWidth = 238; // css hardcode\n\n    const width = Math.round(barWidth * (value - min) / (max - min));\n    return width < 0 ? 0 : width;\n  }, [value, min, max]);\n  const handleChange = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(el => {\n    let value = el.currentTarget.value;\n\n    if (value.length > 0) {\n      onChange(Number(value));\n    }\n  }, [onChange]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-slider\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-slider-range\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-slider-bar\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-slider-active-bar\",\n    style: {\n      width: activeWidth\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"range\",\n    min: min,\n    max: max,\n    step: step,\n    onChange: handleChange,\n    value: value\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"value\"\n  }, value));\n};\nconst DropDown = props => {\n  const {\n    subtitle,\n    rows,\n    children,\n    value,\n    onRowClick,\n    className\n  } = props;\n  const [open, setOpen] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n  const [top, setTop] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(0);\n  const [left, setLeft] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(0);\n  const [width, setWidth] = react__WEBPACK_IMPORTED_MODULE_0___default().useState();\n  const innerRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  const innerTitleRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  const handleClick = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(() => {\n    const bounding = innerRef.current?.getBoundingClientRect();\n    setTop(!open ? bounding?.top : undefined);\n    setLeft(!open ? bounding?.left : undefined);\n    setWidth(bounding?.width);\n    setOpen(prevState => !prevState);\n  }, [open, innerRef]);\n  const handleClose = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(e => {\n    if (e.target !== innerTitleRef.current) {\n      setOpen(false);\n      setTop(0);\n      setLeft(0);\n    }\n  }, [innerTitleRef]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    document.addEventListener('click', handleClose, false);\n    return () => {\n      document.removeEventListener('click', handleClose);\n    };\n  }, [handleClose]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(className, 'sc-dropdown', {\n      active: open\n    }),\n    ref: innerRef,\n    style: {\n      left,\n      top,\n      width\n    }\n  }, !!subtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"subtitle\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, subtitle)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('value', {\n      active: open\n    }),\n    onClick: handleClick,\n    ref: innerTitleRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"text\"\n  }, value), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ArrowIcon, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    autoHide: true,\n    height: `${open ? '200px' : '1px'}`,\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('dropdown', {\n      active: open\n    })\n  }, rows.map((row, idx) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: idx // eslint-disable-line react/no-array-index-key\n    ,\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('row', {\n      'row--selected': row === value\n    }),\n    onClick: () => onRowClick && onRowClick(row)\n  }, children(row)))));\n};\nconst Pattern = _ref4 => {\n  let {\n    pattern,\n    subtitle,\n    lineWidth,\n    onChange\n  } = _ref4;\n  const patterns = [{\n    width: 1,\n    pattern: 'solid'\n  }, {\n    width: 3,\n    pattern: 'solid'\n  }, {\n    width: 5,\n    pattern: 'solid'\n  }, {\n    width: 1,\n    pattern: 'dotted'\n  }, {\n    width: 3,\n    pattern: 'dotted'\n  }, {\n    width: 5,\n    pattern: 'dotted'\n  }, {\n    width: 1,\n    pattern: 'dashed'\n  }, {\n    width: 3,\n    pattern: 'dashed'\n  }, {\n    width: 5,\n    pattern: 'dashed'\n  }, {\n    width: 0,\n    pattern: 'none'\n  }];\n\n  const getValue = () => pattern !== 'none' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: `option ${pattern}-${lineWidth}`\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"none\"\n  }, \"None\");\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropDown, {\n    rows: patterns,\n    value: getValue(),\n    onRowClick: onChange,\n    subtitle: subtitle\n  }, p => p.pattern !== 'none' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: `option ${p.pattern}-${p.width}`\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"none\"\n  }, \"None\"));\n};\nconst ColorPicker = _ref5 => {\n  let {\n    subtitle,\n    color,\n    theme,\n    setColor\n  } = _ref5;\n  const colorMap = [['#ffffff', '#e1e1e1', '#cccccc', '#b7b7b7', '#a0a0a5', '#898989', '#707070', '#626262', '#555555', '#464646', '#363636', '#262626', '#1d1d1d', '#000000'], ['#f4977c', '#f7ac84', '#fbc58d', '#fff69e', '#c4de9e', '#85c99e', '#7fcdc7', '#75d0f4', '#81a8d7', '#8594c8', '#8983bc', '#a187bd', '#bb8dbe', '#f29bc1'], ['#ef6c53', '#f38d5b', '#f8ae63', '#fff371', '#acd277', '#43b77a', '#2ebbb3', '#00bff0', '#4a8dc8', '#5875b7', '#625da6', '#8561a7', '#a665a7', '#ee6fa9'], ['#ea1d2c', '#ee652e', '#f4932f', '#fff126', '#8ec648', '#00a553', '#00a99c', '#00afed', '#0073ba', '#0056a4', '#323390', '#66308f', '#912a8e', '#e9088c'], ['#9b0b16', '#9e4117', '#a16118', '#c6b920', '#5a852d', '#007238', '#00746a', '#0077a1', '#004c7f', '#003570', '#1d1762', '#441261', '#62095f', '#9c005d'], ['#770001', '#792e03', '#7b4906', '#817a0b', '#41661e', '#005827', '#005951', '#003b5c', '#001d40', '#000e35', '#04002c', '#19002b', '#2c002a', '#580028']];\n  const [open, setOpen] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n  const [top, setTop] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(0);\n  const [left, setLeft] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(0);\n  const [width, setWidth] = react__WEBPACK_IMPORTED_MODULE_0___default().useState();\n  const innerRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  const innerTitleRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  const backgroundColor = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => {\n    if (color !== 'auto') return color;\n    return theme === 'light' ? '#000000' : '#ffffff';\n  }, [color, theme]);\n  const handleClick = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(() => {\n    const bounding = innerRef.current?.getBoundingClientRect();\n    setTop(!open ? bounding?.top : undefined);\n    setLeft(!open ? bounding?.left : undefined);\n    setWidth(bounding?.width);\n    setOpen(prevState => !prevState);\n  }, [open, innerRef]);\n  const handleClose = react__WEBPACK_IMPORTED_MODULE_0___default().useCallback(e => {\n    if (e.target !== innerTitleRef.current) {\n      setOpen(false);\n      setTop(0);\n      setLeft(0);\n    }\n  }, [innerTitleRef]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    document.addEventListener('click', handleClose, false);\n    return () => {\n      document.removeEventListener('click', handleClose);\n    };\n  }, [handleClose]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    ref: innerRef,\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('sc-color-picker', {\n      active: open\n    }),\n    style: {\n      top,\n      left,\n      width\n    }\n  }, !!subtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"subtitle\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, subtitle)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"value\",\n    onClick: handleClick,\n    ref: innerTitleRef\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-input-color\",\n    style: {\n      backgroundColor\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ArrowIcon, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('dropdown', {\n      open\n    })\n  }, colorMap.map((row, rowIdx) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: rowIdx\n    /* eslint-disable-line react/no-array-index-key */\n    ,\n    className: \"row\"\n  }, row.map(tileColor => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: tileColor,\n    className: \"tile-color\",\n    style: {\n      backgroundColor: tileColor\n    },\n    onClick: () => setColor(tileColor)\n  }))))));\n};\nconst Switch = _ref6 => {\n  let {\n    value,\n    onChange\n  } = _ref6;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-switch ${value ? 'on' : 'off'}`,\n    onClick: () => onChange(!value)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"handle\"\n  }));\n};\nconst SwitchIcon = _ref7 => {\n  let {\n    id,\n    label,\n    value,\n    onChange,\n    noramIcon,\n    activeIcon\n  } = _ref7;\n  const Icon = value ? activeIcon : noramIcon;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-switch-icon\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Icon, {\n    className: \"sc-switch-icon__icon\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-switch-icon__description\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Checkbox, {\n    id: id,\n    label: label,\n    checked: value,\n    onChange: onChange\n  })));\n}; // NumericInput fires onChange on Enter or onBlur\n\nconst NumericInput = _ref8 => {\n  let {\n    subtitle,\n    onChange,\n    min,\n    max,\n    step,\n    value\n  } = _ref8;\n  const [innerValue, setInnerValue] = react__WEBPACK_IMPORTED_MODULE_0___default().useState('');\n  const handleFireOnChange = lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(() => {\n    const setAndChange = val => {\n      setInnerValue(val);\n      onChange(val);\n    };\n\n    if (max !== undefined && +innerValue > max) {\n      setAndChange(max);\n    } else if (min !== undefined && +innerValue < min) {\n      setAndChange(min);\n    } else {\n      onChange(innerValue);\n    }\n  }, 300, {\n    leading: true,\n    trailing: false\n  });\n\n  const handleUpdateValue = e => {\n    e.persist();\n    setInnerValue(e.target.valueAsNumber || '');\n  };\n\n  const handleFireOnEnter = e => {\n    if (['e', '+', 'E'].includes(e.key)) {\n      e.preventDefault();\n    }\n\n    if (e.key === 'Enter') {\n      handleFireOnChange();\n    }\n  };\n\n  const onIncrease = () => {\n    setInnerValue(prevState => +prevState + 1);\n    handleFireOnChange();\n  };\n\n  const onDecrease = () => {\n    setInnerValue(prevState => +prevState - 1);\n    handleFireOnChange();\n  };\n\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    setInnerValue(value);\n  }, [value]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-numeric-input\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"number\",\n    value: innerValue,\n    onBlur: handleFireOnChange,\n    onChange: handleUpdateValue,\n    onKeyPress: handleFireOnEnter,\n    min: min,\n    max: max,\n    step: step\n  }), !!subtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"subtitle\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, subtitle)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-numeric-input-buttons\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.InputNumberPlusIcon, {\n    onClick: onIncrease\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.InputNumberMinusIcon, {\n    onClick: onDecrease\n  })));\n};\nconst NumberColorPicker = _ref9 => {\n  let {\n    props,\n    theme,\n    onChange\n  } = _ref9;\n  // Do NOT rename the variables Value and Color! The keys are also\n  // used as attribute suffixes\n  const {\n    value,\n    color\n  } = props;\n\n  const onValueChange = v => onChange({\n    color,\n    value: v\n  });\n\n  const onColorChange = c => onChange({\n    color: c,\n    value\n  });\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-numbercolorpicker\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NumericInput, {\n    value: value,\n    subtitle: t.translate('Size'),\n    onChange: val => onValueChange(val)\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ColorPicker, {\n    color: color,\n    theme: theme,\n    subtitle: t.translate('Color'),\n    setColor: val => onColorChange(val)\n  }));\n};\nconst Toggle = _ref10 => {\n  let {\n    className,\n    children,\n    active,\n    onChange\n  } = _ref10;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    onClick: () => onChange(!active),\n    className: `${className || ''} ${active ? 'active' : ''} sc-toggle`\n  }, children);\n};\nconst FontSetting = _ref11 => {\n  let {\n    onChange,\n    value\n  } = _ref11;\n  const families = ['Default', 'Helvetica', 'Courier', 'Garamond', 'Palatino', 'Times New Roman'];\n  const fontSizes = [8, 10, 12, 13, 14, 16, 20, 28, 36, 48, 64];\n\n  const fireChange = change => onChange({ ...value,\n    ...change\n  });\n\n  const onFontFamilyChange = family => fireChange({\n    family\n  });\n\n  const onFontSizeChange = size => fireChange({\n    size: `${size}px`\n  });\n\n  const onBoldChange = isBold => fireChange({\n    weight: isBold ? 'bold' : undefined\n  });\n\n  const onItalicChange = isItalic => fireChange({\n    style: isItalic ? 'italic' : undefined\n  });\n\n  const {\n    style,\n    weight\n  } = value;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-fontsetting\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Toggle, {\n    onChange: onBoldChange,\n    active: !!weight\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-text-icon\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"b\", null, \"B\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Toggle, {\n    active: !!style,\n    onChange: onItalicChange\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-text-icon\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"i\", null, \"i\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropDown, {\n    className: \"sc-changefontsize\",\n    rows: fontSizes,\n    onRowClick: onFontSizeChange\n  }, p => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"option\"\n  }, p)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(DropDown, {\n    className: \"sc-changefontfamily\",\n    rows: families,\n    onRowClick: onFontFamilyChange\n  }, p => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"option\"\n  }, p)));\n};\n\n/***/ }),\n\n/***/ \"./src/components/HamburgerDragIcon.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/components/HamburgerDragIcon.tsx ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_576321__) => {\n\n\"use strict\";\n__nested_webpack_require_576321__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_576321__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_576321__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_576321__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst HamburgerDragIcon = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n  className: \"drag-icon\"\n}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null));\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HamburgerDragIcon);\n\n/***/ }),\n\n/***/ \"./src/components/HighestLowestMarker.tsx\":\n/*!************************************************!*\\\n  !*** ./src/components/HighestLowestMarker.tsx ***!\n  \\************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_577578__) => {\n\n\"use strict\";\n__nested_webpack_require_577578__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_577578__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_577578__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_577578__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_577578__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_577578__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _FastMarker__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_577578__(/*! ./FastMarker */ \"./src/components/FastMarker.tsx\");\n/* harmony import */ var _sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_577578__(/*! ../../sass/components/_highest-lowest-marker.scss */ \"./sass/components/_highest-lowest-marker.scss\");\n/* harmony import */ var _sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_577578__.n(_sass_components_highest_lowest_marker_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* provided dependency */ var t = __nested_webpack_require_577578__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\nconst HighestLowestMarker = () => {\n  const {\n    highestLowest\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    setHighestRef,\n    setLowestRef\n  } = highestLowest;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FastMarker__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    markerRef: setHighestRef,\n    className: \"sc-highlow sc-highlow--highest\",\n    offsetTop: -80,\n    offsetLeft: -80\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__shape-circule spot__fill-blue\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__label\",\n    \"data-label-pos\": \"top\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, `${t.translate('H')}: `), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__value\"\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FastMarker__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    markerRef: setLowestRef,\n    className: \"sc-highlow sc-highlow--lowest\",\n    offsetTop: -80,\n    offsetLeft: -80\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__shape-circule spot__fill-red\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__label\",\n    \"data-label-pos\": \"bottom\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, `${t.translate('L')} : `), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"spot__value\"\n  }))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(HighestLowestMarker));\n\n/***/ }),\n\n/***/ \"./src/components/Icons.tsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Icons.tsx ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_581313__) => {\n\n\"use strict\";\n__nested_webpack_require_581313__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_581313__.d(__nested_webpack_exports__, {\n/* harmony export */   \"ActiveIcon\": () => (/* binding */ ActiveIcon),\n/* harmony export */   \"ActiveOptionsIconMap\": () => (/* binding */ ActiveOptionsIconMap),\n/* harmony export */   \"AddIcon\": () => (/* binding */ AddIcon),\n/* harmony export */   \"ArrowGreenIcon\": () => (/* binding */ ArrowGreenIcon),\n/* harmony export */   \"ArrowIcon\": () => (/* binding */ ArrowIcon),\n/* harmony export */   \"ArrowOrangeIcon\": () => (/* binding */ ArrowOrangeIcon),\n/* harmony export */   \"BackIcon\": () => (/* binding */ BackIcon),\n/* harmony export */   \"BaseLineIcon\": () => (/* binding */ BaseLineIcon),\n/* harmony export */   \"CandleIcon\": () => (/* binding */ CandleIcon),\n/* harmony export */   \"CategoryIconMap\": () => (/* binding */ CategoryIconMap),\n/* harmony export */   \"ChartIcon\": () => (/* binding */ ChartIcon),\n/* harmony export */   \"CheckboxActiveIcon\": () => (/* binding */ CheckboxActiveIcon),\n/* harmony export */   \"CheckboxIcon\": () => (/* binding */ CheckboxIcon),\n/* harmony export */   \"ClearIcon\": () => (/* binding */ ClearIcon),\n/* harmony export */   \"CloseBoldIcon\": () => (/* binding */ CloseBoldIcon),\n/* harmony export */   \"CloseCircleIcon\": () => (/* binding */ CloseCircleIcon),\n/* harmony export */   \"CloseIcon\": () => (/* binding */ CloseIcon),\n/* harmony export */   \"ComparisonIcon\": () => (/* binding */ ComparisonIcon),\n/* harmony export */   \"CrosshairOffIcon\": () => (/* binding */ CrosshairOffIcon),\n/* harmony export */   \"CrosshairOnIcon\": () => (/* binding */ CrosshairOnIcon),\n/* harmony export */   \"CrosshairTooltipIcon\": () => (/* binding */ CrosshairTooltipIcon),\n/* harmony export */   \"CsvIcon\": () => (/* binding */ CsvIcon),\n/* harmony export */   \"DeleteIcon\": () => (/* binding */ DeleteIcon),\n/* harmony export */   \"DotIcon\": () => (/* binding */ DotIcon),\n/* harmony export */   \"DownloadIcon\": () => (/* binding */ DownloadIcon),\n/* harmony export */   \"DrawIcon\": () => (/* binding */ DrawIcon),\n/* harmony export */   \"DrawToolIcon\": () => (/* binding */ DrawToolIcon),\n/* harmony export */   \"DrawToolsChannelIcon\": () => (/* binding */ DrawToolsChannelIcon),\n/* harmony export */   \"DrawToolsContinuousIcon\": () => (/* binding */ DrawToolsContinuousIcon),\n/* harmony export */   \"DrawToolsFibonaccifanIcon\": () => (/* binding */ DrawToolsFibonaccifanIcon),\n/* harmony export */   \"DrawToolsHorizontalIcon\": () => (/* binding */ DrawToolsHorizontalIcon),\n/* harmony export */   \"DrawToolsLineIcon\": () => (/* binding */ DrawToolsLineIcon),\n/* harmony export */   \"DrawToolsRayIcon\": () => (/* binding */ DrawToolsRayIcon),\n/* harmony export */   \"DrawToolsRectangleIcon\": () => (/* binding */ DrawToolsRectangleIcon),\n/* harmony export */   \"DrawToolsTrendIcon\": () => (/* binding */ DrawToolsTrendIcon),\n/* harmony export */   \"DrawToolsVerticalIcon\": () => (/* binding */ DrawToolsVerticalIcon),\n/* harmony export */   \"DrawingCursorIcon\": () => (/* binding */ DrawingCursorIcon),\n/* harmony export */   \"EditIcon\": () => (/* binding */ EditIcon),\n/* harmony export */   \"EmptyStateIcon\": () => (/* binding */ EmptyStateIcon),\n/* harmony export */   \"FavoriteIcon\": () => (/* binding */ FavoriteIcon),\n/* harmony export */   \"FlagIcons\": () => (/* binding */ FlagIcons),\n/* harmony export */   \"FullScreenIcon\": () => (/* binding */ FullScreenIcon),\n/* harmony export */   \"HeikinAshiIcon\": () => (/* binding */ HeikinAshiIcon),\n/* harmony export */   \"HelpCenterIcon\": () => (/* binding */ HelpCenterIcon),\n/* harmony export */   \"HollowCandleIcon\": () => (/* binding */ HollowCandleIcon),\n/* harmony export */   \"HomeIcon\": () => (/* binding */ HomeIcon),\n/* harmony export */   \"IndicatorAdxIcon\": () => (/* binding */ IndicatorAdxIcon),\n/* harmony export */   \"IndicatorAlligatorIcon\": () => (/* binding */ IndicatorAlligatorIcon),\n/* harmony export */   \"IndicatorAroonIcon\": () => (/* binding */ IndicatorAroonIcon),\n/* harmony export */   \"IndicatorAveragesIcon\": () => (/* binding */ IndicatorAveragesIcon),\n/* harmony export */   \"IndicatorAwesomeOscillatorIcon\": () => (/* binding */ IndicatorAwesomeOscillatorIcon),\n/* harmony export */   \"IndicatorBollingerIcon\": () => (/* binding */ IndicatorBollingerIcon),\n/* harmony export */   \"IndicatorCatAveragesIcon\": () => (/* binding */ IndicatorCatAveragesIcon),\n/* harmony export */   \"IndicatorCatMomentumIcon\": () => (/* binding */ IndicatorCatMomentumIcon),\n/* harmony export */   \"IndicatorCatOtherIcon\": () => (/* binding */ IndicatorCatOtherIcon),\n/* harmony export */   \"IndicatorCatTrendDarkIcon\": () => (/* binding */ IndicatorCatTrendDarkIcon),\n/* harmony export */   \"IndicatorCatTrendLightIcon\": () => (/* binding */ IndicatorCatTrendLightIcon),\n/* harmony export */   \"IndicatorCatVolatilityIcon\": () => (/* binding */ IndicatorCatVolatilityIcon),\n/* harmony export */   \"IndicatorCommodityChannelIndexIcon\": () => (/* binding */ IndicatorCommodityChannelIndexIcon),\n/* harmony export */   \"IndicatorDTrendedIcon\": () => (/* binding */ IndicatorDTrendedIcon),\n/* harmony export */   \"IndicatorDonchianIcon\": () => (/* binding */ IndicatorDonchianIcon),\n/* harmony export */   \"IndicatorEnvelopeIcon\": () => (/* binding */ IndicatorEnvelopeIcon),\n/* harmony export */   \"IndicatorFractalChaosIcon\": () => (/* binding */ IndicatorFractalChaosIcon),\n/* harmony export */   \"IndicatorGatorIcon\": () => (/* binding */ IndicatorGatorIcon),\n/* harmony export */   \"IndicatorIchimokuIcon\": () => (/* binding */ IndicatorIchimokuIcon),\n/* harmony export */   \"IndicatorIcon\": () => (/* binding */ IndicatorIcon),\n/* harmony export */   \"IndicatorMacdIcon\": () => (/* binding */ IndicatorMacdIcon),\n/* harmony export */   \"IndicatorParabolicIcon\": () => (/* binding */ IndicatorParabolicIcon),\n/* harmony export */   \"IndicatorRSIIcon\": () => (/* binding */ IndicatorRSIIcon),\n/* harmony export */   \"IndicatorRainbowIcon\": () => (/* binding */ IndicatorRainbowIcon),\n/* harmony export */   \"IndicatorRateChangeIcon\": () => (/* binding */ IndicatorRateChangeIcon),\n/* harmony export */   \"IndicatorStochasticMomentumIcon\": () => (/* binding */ IndicatorStochasticMomentumIcon),\n/* harmony export */   \"IndicatorStochasticOscillatorIcon\": () => (/* binding */ IndicatorStochasticOscillatorIcon),\n/* harmony export */   \"IndicatorWilliamPercentIcon\": () => (/* binding */ IndicatorWilliamPercentIcon),\n/* harmony export */   \"IndicatorZigZagIcon\": () => (/* binding */ IndicatorZigZagIcon),\n/* harmony export */   \"InfoCircleIcon\": () => (/* binding */ InfoCircleIcon),\n/* harmony export */   \"InfoIcon\": () => (/* binding */ InfoIcon),\n/* harmony export */   \"InputNumberMinusIcon\": () => (/* binding */ InputNumberMinusIcon),\n/* harmony export */   \"InputNumberPlusIcon\": () => (/* binding */ InputNumberPlusIcon),\n/* harmony export */   \"ItemIconMap\": () => (/* binding */ ItemIconMap),\n/* harmony export */   \"KagiIcon\": () => (/* binding */ KagiIcon),\n/* harmony export */   \"LanguageIcon\": () => (/* binding */ LanguageIcon),\n/* harmony export */   \"LineBreakIcon\": () => (/* binding */ LineBreakIcon),\n/* harmony export */   \"LineDotIcon\": () => (/* binding */ LineDotIcon),\n/* harmony export */   \"LineIcon\": () => (/* binding */ LineIcon),\n/* harmony export */   \"MeasureIcon\": () => (/* binding */ MeasureIcon),\n/* harmony export */   \"MetalIcon\": () => (/* binding */ MetalIcon),\n/* harmony export */   \"OHLCIcon\": () => (/* binding */ OHLCIcon),\n/* harmony export */   \"OTCBadgeIcon\": () => (/* binding */ OTCBadgeIcon),\n/* harmony export */   \"OverwriteStateIcon\": () => (/* binding */ OverwriteStateIcon),\n/* harmony export */   \"PngIcon\": () => (/* binding */ PngIcon),\n/* harmony export */   \"PointFigureIcon\": () => (/* binding */ PointFigureIcon),\n/* harmony export */   \"PositionBottomIcon\": () => (/* binding */ PositionBottomIcon),\n/* harmony export */   \"PositionLeftIcon\": () => (/* binding */ PositionLeftIcon),\n/* harmony export */   \"RangeBarsIcon\": () => (/* binding */ RangeBarsIcon),\n/* harmony export */   \"RenkoIcon\": () => (/* binding */ RenkoIcon),\n/* harmony export */   \"ScaleIcon\": () => (/* binding */ ScaleIcon),\n/* harmony export */   \"SearchIcon\": () => (/* binding */ SearchIcon),\n/* harmony export */   \"SettingCountdownMap\": () => (/* binding */ SettingCountdownMap),\n/* harmony export */   \"SettingHighestLowestMap\": () => (/* binding */ SettingHighestLowestMap),\n/* harmony export */   \"SettingHistoricalMap\": () => (/* binding */ SettingHistoricalMap),\n/* harmony export */   \"SettingIcon\": () => (/* binding */ SettingIcon),\n/* harmony export */   \"SplineIcon\": () => (/* binding */ SplineIcon),\n/* harmony export */   \"StarIcon\": () => (/* binding */ StarIcon),\n/* harmony export */   \"SymbolPlaceholderIcon\": () => (/* binding */ SymbolPlaceholderIcon),\n/* harmony export */   \"TableIcon\": () => (/* binding */ TableIcon),\n/* harmony export */   \"TemplateIcon\": () => (/* binding */ TemplateIcon),\n/* harmony export */   \"ThemeDarkIcon\": () => (/* binding */ ThemeDarkIcon),\n/* harmony export */   \"ThemeIcon\": () => (/* binding */ ThemeIcon),\n/* harmony export */   \"ThemeLightIcon\": () => (/* binding */ ThemeLightIcon),\n/* harmony export */   \"TickIcon\": () => (/* binding */ TickIcon),\n/* harmony export */   \"TimeIcon\": () => (/* binding */ TimeIcon),\n/* harmony export */   \"TypeAreaGrayscaleIcon\": () => (/* binding */ TypeAreaGrayscaleIcon),\n/* harmony export */   \"TypeAreaIcon\": () => (/* binding */ TypeAreaIcon),\n/* harmony export */   \"TypeCandleGrayscaleIcon\": () => (/* binding */ TypeCandleGrayscaleIcon),\n/* harmony export */   \"TypeCandleIcon\": () => (/* binding */ TypeCandleIcon),\n/* harmony export */   \"TypeHollowGrayscaleIcon\": () => (/* binding */ TypeHollowGrayscaleIcon),\n/* harmony export */   \"TypeHollowIcon\": () => (/* binding */ TypeHollowIcon),\n/* harmony export */   \"TypeOhlcGrayscaleIcon\": () => (/* binding */ TypeOhlcGrayscaleIcon),\n/* harmony export */   \"TypeOhlcIcon\": () => (/* binding */ TypeOhlcIcon),\n/* harmony export */   \"Wrapper\": () => (/* binding */ Wrapper),\n/* harmony export */   \"ZoomInIcon\": () => (/* binding */ ZoomInIcon),\n/* harmony export */   \"ZoomOutIcon\": () => (/* binding */ ZoomOutIcon),\n/* harmony export */   \"ZoominIcon\": () => (/* binding */ ZoominIcon),\n/* harmony export */   \"ZoomoutIcon\": () => (/* binding */ ZoomoutIcon),\n/* harmony export */   \"alertIconMap\": () => (/* binding */ alertIconMap)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_581313__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_581313__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_581313__(/*! ../../sass/components/_icons.scss */ \"./sass/components/_icons.scss\");\n/* harmony import */ var _sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_components_icons_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg */ \"./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/candle/ic-candle-normal.svg */ \"./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/dot/ic-dot-normal.svg */ \"./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg */ \"./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg */ \"./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg */ \"./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-kagi-normal.svg */ \"./sass/icons/chart settings/chart types/ic-kagi-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/line/ic-line-normal.svg */ \"./sass/icons/chart settings/chart types/line/ic-line-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-linebreak-normal.svg */ \"./sass/icons/chart settings/chart types/ic-linebreak-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg */ \"./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-pointfigure-normal.svg */ \"./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-rangebars-normal.svg */ \"./sass/icons/chart settings/chart types/ic-rangebars-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/ic-renko-normal.svg */ \"./sass/icons/chart settings/chart types/ic-renko-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/spline/ic-spline-normal.svg */ \"./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/chart types/table/table.svg */ \"./sass/icons/chart settings/chart types/table/table.svg\");\n/* harmony import */ var _sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_581313__(/*! ../../sass/icons/download/ic-png.svg */ \"./sass/icons/download/ic-png.svg\");\n/* harmony import */ var _sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var _sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_581313__(/*! ../../sass/icons/download/ic-csv.svg */ \"./sass/icons/download/ic-csv.svg\");\n/* harmony import */ var _sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18__);\n/* harmony import */ var _sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/zoom-in/ic-zoomin-light.svg */ \"./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg\");\n/* harmony import */ var _sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19__);\n/* harmony import */ var _sass_icons_common_ic_add_svg__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-add.svg */ \"./sass/icons/common/ic-add.svg\");\n/* harmony import */ var _sass_icons_common_ic_add_svg__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_add_svg__WEBPACK_IMPORTED_MODULE_20__);\n/* harmony import */ var _sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_21__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-close.svg */ \"./sass/icons/common/ic-close.svg\");\n/* harmony import */ var _sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_21__);\n/* harmony import */ var _sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_22__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-input-number-minus.svg */ \"./sass/icons/common/ic-input-number-minus.svg\");\n/* harmony import */ var _sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_22__);\n/* harmony import */ var _sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_23__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-input-number-plus.svg */ \"./sass/icons/common/ic-input-number-plus.svg\");\n/* harmony import */ var _sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_23__);\n/* harmony import */ var _sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_24__ = __nested_webpack_require_581313__(/*! ../../sass/icons/close/ic-close-circle.svg */ \"./sass/icons/close/ic-close-circle.svg\");\n/* harmony import */ var _sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_24__);\n/* harmony import */ var _sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_25__ = __nested_webpack_require_581313__(/*! ../../sass/icons/close/ic-close-bold.svg */ \"./sass/icons/close/ic-close-bold.svg\");\n/* harmony import */ var _sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_25__);\n/* harmony import */ var _sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_26__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/comparison/ic-comparison-normal.svg */ \"./sass/icons/chart settings/comparison/ic-comparison-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_26__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_27__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-off.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-off.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_27__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_28__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-on.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-on.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_28__);\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_29__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg */ \"./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg\");\n/* harmony import */ var _sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_29__);\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_30__ = __nested_webpack_require_581313__(/*! ../../sass/icons/delete/ic-delete.svg */ \"./sass/icons/delete/ic-delete.svg\");\n/* harmony import */ var _sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_30__);\n/* harmony import */ var _sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_31__ = __nested_webpack_require_581313__(/*! ../../sass/icons/clear/ic-clear.svg */ \"./sass/icons/clear/ic-clear.svg\");\n/* harmony import */ var _sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_31__);\n/* harmony import */ var _sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_32__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg */ \"./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg\");\n/* harmony import */ var _sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_32__);\n/* harmony import */ var _sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33__ = __nested_webpack_require_581313__(/*! ../../sass/icons/measure/ic-measure.svg */ \"./sass/icons/measure/ic-measure.svg\");\n/* harmony import */ var _sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33__);\n/* harmony import */ var _sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/zoom-out/ic-zoomout-light.svg */ \"./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg\");\n/* harmony import */ var _sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34__);\n/* harmony import */ var _sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35__ = __nested_webpack_require_581313__(/*! ../../sass/icons/favorite/ic-favorite-normal.svg */ \"./sass/icons/favorite/ic-favorite-normal.svg\");\n/* harmony import */ var _sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35__);\n/* harmony import */ var _sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_36__ = __nested_webpack_require_581313__(/*! ../../sass/icons/tick/ic-tick.svg */ \"./sass/icons/tick/ic-tick.svg\");\n/* harmony import */ var _sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_36__);\n/* harmony import */ var _sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_37__ = __nested_webpack_require_581313__(/*! ../../sass/icons/time/ic-time.svg */ \"./sass/icons/time/ic-time.svg\");\n/* harmony import */ var _sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_37__);\n/* harmony import */ var _sass_icons_common_ic_active_svg__WEBPACK_IMPORTED_MODULE_38__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-active.svg */ \"./sass/icons/common/ic-active.svg\");\n/* harmony import */ var _sass_icons_common_ic_active_svg__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_active_svg__WEBPACK_IMPORTED_MODULE_38__);\n/* harmony import */ var _sass_icons_sidebar_cryptocurrency_ic_cryptocurrency_normal_svg__WEBPACK_IMPORTED_MODULE_39__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/cryptocurrency/ic-cryptocurrency-normal.svg */ \"./sass/icons/sidebar/cryptocurrency/ic-cryptocurrency-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_cryptocurrency_ic_cryptocurrency_normal_svg__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_cryptocurrency_ic_cryptocurrency_normal_svg__WEBPACK_IMPORTED_MODULE_39__);\n/* harmony import */ var _sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/commodities/ic-commodities-normal.svg */ \"./sass/icons/sidebar/commodities/ic-commodities-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40__);\n/* harmony import */ var _sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/forex/ic-forex-normal.svg */ \"./sass/icons/sidebar/forex/ic-forex-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41__);\n/* harmony import */ var _sass_icons_sidebar_basket_index_ic_basket_normal_svg__WEBPACK_IMPORTED_MODULE_42__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/basket_index/ic-basket-normal.svg */ \"./sass/icons/sidebar/basket_index/ic-basket-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_basket_index_ic_basket_normal_svg__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_basket_index_ic_basket_normal_svg__WEBPACK_IMPORTED_MODULE_42__);\n/* harmony import */ var _sass_icons_sidebar_basket_index_ic_basket_active_svg__WEBPACK_IMPORTED_MODULE_43__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/basket_index/ic-basket-active.svg */ \"./sass/icons/sidebar/basket_index/ic-basket-active.svg\");\n/* harmony import */ var _sass_icons_sidebar_basket_index_ic_basket_active_svg__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_basket_index_ic_basket_active_svg__WEBPACK_IMPORTED_MODULE_43__);\n/* harmony import */ var _sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_44__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/indices/ic-indices-normal.svg */ \"./sass/icons/sidebar/indices/ic-indices-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_44__);\n/* harmony import */ var _sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_45__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/otc/ic-otc-normal.svg */ \"./sass/icons/sidebar/otc/ic-otc-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_45__);\n/* harmony import */ var _sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_46__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/synth_index/ic-synth-normal.svg */ \"./sass/icons/sidebar/synth_index/ic-synth-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_46__);\n/* harmony import */ var _sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_47__ = __nested_webpack_require_581313__(/*! ../../sass/icons/sidebar/volatility/ic-volatility-normal.svg */ \"./sass/icons/sidebar/volatility/ic-volatility-normal.svg\");\n/* harmony import */ var _sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_47__);\n/* harmony import */ var _sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_48__ = __nested_webpack_require_581313__(/*! ../../sass/icons/search/ic-search-normal.svg */ \"./sass/icons/search/ic-search-normal.svg\");\n/* harmony import */ var _sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_48__);\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_49__ = __nested_webpack_require_581313__(/*! ../../sass/icons/edit/ic-edit.svg */ \"./sass/icons/edit/ic-edit.svg\");\n/* harmony import */ var _sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_49__);\n/* harmony import */ var _sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_50__ = __nested_webpack_require_581313__(/*! ../../sass/icons/dropdown/ic-dropdown.svg */ \"./sass/icons/dropdown/ic-dropdown.svg\");\n/* harmony import */ var _sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_50__);\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_51__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/setting/ic-position-left.svg */ \"./sass/icons/chart settings/setting/ic-position-left.svg\");\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_51__);\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_52__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart settings/setting/ic-position-bottom.svg */ \"./sass/icons/chart settings/setting/ic-position-bottom.svg\");\n/* harmony import */ var _sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_52__);\n/* harmony import */ var _sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_53__ = __nested_webpack_require_581313__(/*! ../../sass/icons/back/ic-back.svg */ \"./sass/icons/back/ic-back.svg\");\n/* harmony import */ var _sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_53__);\n/* harmony import */ var _sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_54__ = __nested_webpack_require_581313__(/*! ../../sass/icons/pencil/ic-pencil.svg */ \"./sass/icons/pencil/ic-pencil.svg\");\n/* harmony import */ var _sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_54__);\n/* harmony import */ var _sass_icons_common_ic_drawing_tool_svg__WEBPACK_IMPORTED_MODULE_55__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-drawing-tool.svg */ \"./sass/icons/common/ic-drawing-tool.svg\");\n/* harmony import */ var _sass_icons_common_ic_drawing_tool_svg__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_drawing_tool_svg__WEBPACK_IMPORTED_MODULE_55__);\n/* harmony import */ var _sass_icons_common_ic_help_center_svg__WEBPACK_IMPORTED_MODULE_56__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-help-center.svg */ \"./sass/icons/common/ic-help-center.svg\");\n/* harmony import */ var _sass_icons_common_ic_help_center_svg__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_help_center_svg__WEBPACK_IMPORTED_MODULE_56__);\n/* harmony import */ var _sass_icons_common_ic_download_svg__WEBPACK_IMPORTED_MODULE_57__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-download.svg */ \"./sass/icons/common/ic-download.svg\");\n/* harmony import */ var _sass_icons_common_ic_download_svg__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_download_svg__WEBPACK_IMPORTED_MODULE_57__);\n/* harmony import */ var _sass_icons_common_ic_indicators_svg__WEBPACK_IMPORTED_MODULE_58__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-indicators.svg */ \"./sass/icons/common/ic-indicators.svg\");\n/* harmony import */ var _sass_icons_common_ic_indicators_svg__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_indicators_svg__WEBPACK_IMPORTED_MODULE_58__);\n/* harmony import */ var _sass_icons_common_ic_templates_svg__WEBPACK_IMPORTED_MODULE_59__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-templates.svg */ \"./sass/icons/common/ic-templates.svg\");\n/* harmony import */ var _sass_icons_common_ic_templates_svg__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_templates_svg__WEBPACK_IMPORTED_MODULE_59__);\n/* harmony import */ var _sass_icons_common_full_screen_svg__WEBPACK_IMPORTED_MODULE_60__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/full-screen.svg */ \"./sass/icons/common/full-screen.svg\");\n/* harmony import */ var _sass_icons_common_full_screen_svg__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_full_screen_svg__WEBPACK_IMPORTED_MODULE_60__);\n/* harmony import */ var _sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_61__ = __nested_webpack_require_581313__(/*! ../../sass/icons/alert message/warning.svg */ \"./sass/icons/alert message/warning.svg\");\n/* harmony import */ var _sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_61__);\n/* harmony import */ var _sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_62__ = __nested_webpack_require_581313__(/*! ../../sass/icons/alert message/error.svg */ \"./sass/icons/alert message/error.svg\");\n/* harmony import */ var _sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_62__);\n/* harmony import */ var _sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_63__ = __nested_webpack_require_581313__(/*! ../../sass/icons/alert message/success.svg */ \"./sass/icons/alert message/success.svg\");\n/* harmony import */ var _sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_63__);\n/* harmony import */ var _sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_64__ = __nested_webpack_require_581313__(/*! ../../sass/icons/alert message/info.svg */ \"./sass/icons/alert message/info.svg\");\n/* harmony import */ var _sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_64__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_65__ = __nested_webpack_require_581313__(/*! ../../sass/icons/navigation-widgets/ic-home.svg */ \"./sass/icons/navigation-widgets/ic-home.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_65__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_66__ = __nested_webpack_require_581313__(/*! ../../sass/icons/navigation-widgets/ic-scale-full.svg */ \"./sass/icons/navigation-widgets/ic-scale-full.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_66__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_67__ = __nested_webpack_require_581313__(/*! ../../sass/icons/navigation-widgets/ic-zoomin.svg */ \"./sass/icons/navigation-widgets/ic-zoomin.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_67__);\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_68__ = __nested_webpack_require_581313__(/*! ../../sass/icons/navigation-widgets/ic-zoomout.svg */ \"./sass/icons/navigation-widgets/ic-zoomout.svg\");\n/* harmony import */ var _sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_68__);\n/* harmony import */ var _sass_icons_chart_type_ic_area_svg__WEBPACK_IMPORTED_MODULE_69__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-area.svg */ \"./sass/icons/chart-type/ic-area.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_area_svg__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_area_svg__WEBPACK_IMPORTED_MODULE_69__);\n/* harmony import */ var _sass_icons_chart_type_ic_candle_svg__WEBPACK_IMPORTED_MODULE_70__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-candle.svg */ \"./sass/icons/chart-type/ic-candle.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_candle_svg__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_candle_svg__WEBPACK_IMPORTED_MODULE_70__);\n/* harmony import */ var _sass_icons_chart_type_ic_hollow_svg__WEBPACK_IMPORTED_MODULE_71__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-hollow.svg */ \"./sass/icons/chart-type/ic-hollow.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_hollow_svg__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_hollow_svg__WEBPACK_IMPORTED_MODULE_71__);\n/* harmony import */ var _sass_icons_chart_type_ic_ohlc_svg__WEBPACK_IMPORTED_MODULE_72__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-ohlc.svg */ \"./sass/icons/chart-type/ic-ohlc.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_ohlc_svg__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_ohlc_svg__WEBPACK_IMPORTED_MODULE_72__);\n/* harmony import */ var _sass_icons_chart_type_ic_area_grayscale_svg__WEBPACK_IMPORTED_MODULE_73__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-area-grayscale.svg */ \"./sass/icons/chart-type/ic-area-grayscale.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_area_grayscale_svg__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_area_grayscale_svg__WEBPACK_IMPORTED_MODULE_73__);\n/* harmony import */ var _sass_icons_chart_type_ic_candle_grayscale_svg__WEBPACK_IMPORTED_MODULE_74__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-candle-grayscale.svg */ \"./sass/icons/chart-type/ic-candle-grayscale.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_candle_grayscale_svg__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_candle_grayscale_svg__WEBPACK_IMPORTED_MODULE_74__);\n/* harmony import */ var _sass_icons_chart_type_ic_hollow_grayscale_svg__WEBPACK_IMPORTED_MODULE_75__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-hollow-grayscale.svg */ \"./sass/icons/chart-type/ic-hollow-grayscale.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_hollow_grayscale_svg__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_hollow_grayscale_svg__WEBPACK_IMPORTED_MODULE_75__);\n/* harmony import */ var _sass_icons_chart_type_ic_ohlc_grayscale_svg__WEBPACK_IMPORTED_MODULE_76__ = __nested_webpack_require_581313__(/*! ../../sass/icons/chart-type/ic-ohlc-grayscale.svg */ \"./sass/icons/chart-type/ic-ohlc-grayscale.svg\");\n/* harmony import */ var _sass_icons_chart_type_ic_ohlc_grayscale_svg__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_chart_type_ic_ohlc_grayscale_svg__WEBPACK_IMPORTED_MODULE_76__);\n/* harmony import */ var _sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_77__ = __nested_webpack_require_581313__(/*! ../../sass/icons/arrows/ic-arrow-green.svg */ \"./sass/icons/arrows/ic-arrow-green.svg\");\n/* harmony import */ var _sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_77__);\n/* harmony import */ var _sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_78__ = __nested_webpack_require_581313__(/*! ../../sass/icons/arrows/ic-arrow-orange.svg */ \"./sass/icons/arrows/ic-arrow-orange.svg\");\n/* harmony import */ var _sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_78__);\n/* harmony import */ var _sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_79__ = __nested_webpack_require_581313__(/*! ../../sass/icons/placeholder/ic-placeholder.svg */ \"./sass/icons/placeholder/ic-placeholder.svg\");\n/* harmony import */ var _sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_79__);\n/* harmony import */ var _sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_80__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/aud.svg */ \"./sass/icons/flags/aud.svg\");\n/* harmony import */ var _sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_80__);\n/* harmony import */ var _sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_81__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/cad.svg */ \"./sass/icons/flags/cad.svg\");\n/* harmony import */ var _sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_81__);\n/* harmony import */ var _sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_82__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/chf.svg */ \"./sass/icons/flags/chf.svg\");\n/* harmony import */ var _sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_82__);\n/* harmony import */ var _sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_83__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/eur.svg */ \"./sass/icons/flags/eur.svg\");\n/* harmony import */ var _sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_83___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_83__);\n/* harmony import */ var _sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_84__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/gbp.svg */ \"./sass/icons/flags/gbp.svg\");\n/* harmony import */ var _sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_84__);\n/* harmony import */ var _sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_85__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/jpy.svg */ \"./sass/icons/flags/jpy.svg\");\n/* harmony import */ var _sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_85__);\n/* harmony import */ var _sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_86__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/mxn.svg */ \"./sass/icons/flags/mxn.svg\");\n/* harmony import */ var _sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_86__);\n/* harmony import */ var _sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_87__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/nok.svg */ \"./sass/icons/flags/nok.svg\");\n/* harmony import */ var _sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_87__);\n/* harmony import */ var _sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_88__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/nzd.svg */ \"./sass/icons/flags/nzd.svg\");\n/* harmony import */ var _sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_88__);\n/* harmony import */ var _sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_89__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/pln.svg */ \"./sass/icons/flags/pln.svg\");\n/* harmony import */ var _sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_89__);\n/* harmony import */ var _sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_90__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/sek.svg */ \"./sass/icons/flags/sek.svg\");\n/* harmony import */ var _sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_90__);\n/* harmony import */ var _sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_91__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/usd.svg */ \"./sass/icons/flags/usd.svg\");\n/* harmony import */ var _sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_91__);\n/* harmony import */ var _sass_icons_flags_xau_svg__WEBPACK_IMPORTED_MODULE_92__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/xau.svg */ \"./sass/icons/flags/xau.svg\");\n/* harmony import */ var _sass_icons_flags_xau_svg__WEBPACK_IMPORTED_MODULE_92___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_xau_svg__WEBPACK_IMPORTED_MODULE_92__);\n/* harmony import */ var _sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_93__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/russia.svg */ \"./sass/icons/flags/russia.svg\");\n/* harmony import */ var _sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_93___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_93__);\n/* harmony import */ var _sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_94__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/thailand.svg */ \"./sass/icons/flags/thailand.svg\");\n/* harmony import */ var _sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_94__);\n/* harmony import */ var _sass_icons_flags_turkey_svg__WEBPACK_IMPORTED_MODULE_95__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/turkey.svg */ \"./sass/icons/flags/turkey.svg\");\n/* harmony import */ var _sass_icons_flags_turkey_svg__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_turkey_svg__WEBPACK_IMPORTED_MODULE_95__);\n/* harmony import */ var _sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_96__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/indonesia.svg */ \"./sass/icons/flags/indonesia.svg\");\n/* harmony import */ var _sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_96__);\n/* harmony import */ var _sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_97__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/vietnam.svg */ \"./sass/icons/flags/vietnam.svg\");\n/* harmony import */ var _sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_97__);\n/* harmony import */ var _sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_98__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/italy.svg */ \"./sass/icons/flags/italy.svg\");\n/* harmony import */ var _sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_98__);\n/* harmony import */ var _sass_icons_flags_korean_svg__WEBPACK_IMPORTED_MODULE_99__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/korean.svg */ \"./sass/icons/flags/korean.svg\");\n/* harmony import */ var _sass_icons_flags_korean_svg__WEBPACK_IMPORTED_MODULE_99___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_korean_svg__WEBPACK_IMPORTED_MODULE_99__);\n/* harmony import */ var _sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_100__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/chinese.svg */ \"./sass/icons/flags/chinese.svg\");\n/* harmony import */ var _sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_100___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_100__);\n/* harmony import */ var _sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_101__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/chinese-traditional.svg */ \"./sass/icons/flags/chinese-traditional.svg\");\n/* harmony import */ var _sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_101__);\n/* harmony import */ var _sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_102__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/german.svg */ \"./sass/icons/flags/german.svg\");\n/* harmony import */ var _sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_102___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_102__);\n/* harmony import */ var _sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_103__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/hong kong.svg */ \"./sass/icons/flags/hong kong.svg\");\n/* harmony import */ var _sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_103___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_103__);\n/* harmony import */ var _sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_104__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/french.svg */ \"./sass/icons/flags/french.svg\");\n/* harmony import */ var _sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_104___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_104__);\n/* harmony import */ var _sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_105__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/dutch.svg */ \"./sass/icons/flags/dutch.svg\");\n/* harmony import */ var _sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_105___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_105__);\n/* harmony import */ var _sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_106__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/spanish.svg */ \"./sass/icons/flags/spanish.svg\");\n/* harmony import */ var _sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_106___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_106__);\n/* harmony import */ var _sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_107__ = __nested_webpack_require_581313__(/*! ../../sass/icons/flags/wallstreet.svg */ \"./sass/icons/flags/wallstreet.svg\");\n/* harmony import */ var _sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_107___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_107__);\n/* harmony import */ var _sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_108__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg */ \"./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_108___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_108__);\n/* harmony import */ var _sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_109__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/metals/ic-metal.svg */ \"./sass/icons/active-symbols/metals/ic-metal.svg\");\n/* harmony import */ var _sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_109___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_109__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_10_index_ic_10_index_v_svg__WEBPACK_IMPORTED_MODULE_110__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/10 index/ic-10-index-v.svg */ \"./sass/icons/active-symbols/volatility/10 index/ic-10-index-v.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_10_index_ic_10_index_v_svg__WEBPACK_IMPORTED_MODULE_110___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_10_index_ic_10_index_v_svg__WEBPACK_IMPORTED_MODULE_110__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_25_index_ic_25_index_v_svg__WEBPACK_IMPORTED_MODULE_111__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/25 index/ic-25-index-v.svg */ \"./sass/icons/active-symbols/volatility/25 index/ic-25-index-v.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_25_index_ic_25_index_v_svg__WEBPACK_IMPORTED_MODULE_111___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_25_index_ic_25_index_v_svg__WEBPACK_IMPORTED_MODULE_111__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_50_index_ic_50_index_v_svg__WEBPACK_IMPORTED_MODULE_112__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/50 index/ic-50-index-v.svg */ \"./sass/icons/active-symbols/volatility/50 index/ic-50-index-v.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_50_index_ic_50_index_v_svg__WEBPACK_IMPORTED_MODULE_112___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_50_index_ic_50_index_v_svg__WEBPACK_IMPORTED_MODULE_112__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_75_index_ic_75_index_v_svg__WEBPACK_IMPORTED_MODULE_113__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/75 index/ic-75-index-v.svg */ \"./sass/icons/active-symbols/volatility/75 index/ic-75-index-v.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_75_index_ic_75_index_v_svg__WEBPACK_IMPORTED_MODULE_113___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_75_index_ic_75_index_v_svg__WEBPACK_IMPORTED_MODULE_113__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_100_index_ic_100_index_v_svg__WEBPACK_IMPORTED_MODULE_114__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/100 index/ic-100-index-v.svg */ \"./sass/icons/active-symbols/volatility/100 index/ic-100-index-v.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_100_index_ic_100_index_v_svg__WEBPACK_IMPORTED_MODULE_114___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_100_index_ic_100_index_v_svg__WEBPACK_IMPORTED_MODULE_114__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_115__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_115___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_115__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s25_index_light_25_1s_index_svg__WEBPACK_IMPORTED_MODULE_116__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s25 index/light-25(1s)index.svg */ \"./sass/icons/active-symbols/volatility/1s25 index/light-25(1s)index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s25_index_light_25_1s_index_svg__WEBPACK_IMPORTED_MODULE_116___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s25_index_light_25_1s_index_svg__WEBPACK_IMPORTED_MODULE_116__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s50_index_light_50_1s_index_svg__WEBPACK_IMPORTED_MODULE_117__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s50 index/light-50(1s) index.svg */ \"./sass/icons/active-symbols/volatility/1s50 index/light-50(1s) index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s50_index_light_50_1s_index_svg__WEBPACK_IMPORTED_MODULE_117___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s50_index_light_50_1s_index_svg__WEBPACK_IMPORTED_MODULE_117__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s75_index_light_75_1s_index_svg__WEBPACK_IMPORTED_MODULE_118__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s75 index/light-75(1s) index.svg */ \"./sass/icons/active-symbols/volatility/1s75 index/light-75(1s) index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s75_index_light_75_1s_index_svg__WEBPACK_IMPORTED_MODULE_118___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s75_index_light_75_1s_index_svg__WEBPACK_IMPORTED_MODULE_118__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_119__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_119___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_119__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s150_index_ic_150_1s_index_svg__WEBPACK_IMPORTED_MODULE_120__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s150 index/ic-150-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s150 index/ic-150-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s150_index_ic_150_1s_index_svg__WEBPACK_IMPORTED_MODULE_120___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s150_index_ic_150_1s_index_svg__WEBPACK_IMPORTED_MODULE_120__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s200_index_ic_200_1s_index_svg__WEBPACK_IMPORTED_MODULE_121__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s200 index/ic-200-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s200 index/ic-200-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s200_index_ic_200_1s_index_svg__WEBPACK_IMPORTED_MODULE_121___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s200_index_ic_200_1s_index_svg__WEBPACK_IMPORTED_MODULE_121__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s250_index_ic_250_1s_index_svg__WEBPACK_IMPORTED_MODULE_122__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s250 index/ic-250-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s250 index/ic-250-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s250_index_ic_250_1s_index_svg__WEBPACK_IMPORTED_MODULE_122___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s250_index_ic_250_1s_index_svg__WEBPACK_IMPORTED_MODULE_122__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s300_index_ic_300_1s_index_svg__WEBPACK_IMPORTED_MODULE_123__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/1s300 index/ic-300-1s-index.svg */ \"./sass/icons/active-symbols/volatility/1s300 index/ic-300-1s-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_1s300_index_ic_300_1s_index_svg__WEBPACK_IMPORTED_MODULE_123___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_1s300_index_ic_300_1s_index_svg__WEBPACK_IMPORTED_MODULE_123__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash300_index_crash300_index_svg__WEBPACK_IMPORTED_MODULE_124__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/crash300 index/crash300 index.svg */ \"./sass/icons/active-symbols/volatility/crash300 index/crash300 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash300_index_crash300_index_svg__WEBPACK_IMPORTED_MODULE_124___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_crash300_index_crash300_index_svg__WEBPACK_IMPORTED_MODULE_124__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash500_index_crash500_index_svg__WEBPACK_IMPORTED_MODULE_125__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/crash500 index/crash500 index.svg */ \"./sass/icons/active-symbols/volatility/crash500 index/crash500 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash500_index_crash500_index_svg__WEBPACK_IMPORTED_MODULE_125___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_crash500_index_crash500_index_svg__WEBPACK_IMPORTED_MODULE_125__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash1000_index_crash1000_index_svg__WEBPACK_IMPORTED_MODULE_126__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/crash1000 index/crash1000 index.svg */ \"./sass/icons/active-symbols/volatility/crash1000 index/crash1000 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_crash1000_index_crash1000_index_svg__WEBPACK_IMPORTED_MODULE_126___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_crash1000_index_crash1000_index_svg__WEBPACK_IMPORTED_MODULE_126__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom300_index_boom300_index_svg__WEBPACK_IMPORTED_MODULE_127__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/boom300 index/boom300 index.svg */ \"./sass/icons/active-symbols/volatility/boom300 index/boom300 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom300_index_boom300_index_svg__WEBPACK_IMPORTED_MODULE_127___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_boom300_index_boom300_index_svg__WEBPACK_IMPORTED_MODULE_127__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom500_index_boom500_index_svg__WEBPACK_IMPORTED_MODULE_128__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/boom500 index/boom500 index.svg */ \"./sass/icons/active-symbols/volatility/boom500 index/boom500 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom500_index_boom500_index_svg__WEBPACK_IMPORTED_MODULE_128___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_boom500_index_boom500_index_svg__WEBPACK_IMPORTED_MODULE_128__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom1000_index_boom1000_index_svg__WEBPACK_IMPORTED_MODULE_129__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/boom1000 index/boom1000 index.svg */ \"./sass/icons/active-symbols/volatility/boom1000 index/boom1000 index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_boom1000_index_boom1000_index_svg__WEBPACK_IMPORTED_MODULE_129___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_boom1000_index_boom1000_index_svg__WEBPACK_IMPORTED_MODULE_129__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_130__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg */ \"./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_130___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_130__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_131__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg */ \"./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_131___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_131__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_step_index_step_index_svg__WEBPACK_IMPORTED_MODULE_132__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/step index/step index.svg */ \"./sass/icons/active-symbols/volatility/step index/step index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_step_index_step_index_svg__WEBPACK_IMPORTED_MODULE_132___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_step_index_step_index_svg__WEBPACK_IMPORTED_MODULE_132__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_133__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd10 index/ic-10-index.svg */ \"./sass/icons/active-symbols/volatility/jd10 index/ic-10-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_133___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_133__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_134__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd25 index/ic-25-index.svg */ \"./sass/icons/active-symbols/volatility/jd25 index/ic-25-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_134___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_134__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_135__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd50 index/ic-50-index.svg */ \"./sass/icons/active-symbols/volatility/jd50 index/ic-50-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_135___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_135__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_136__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd75 index/ic-75-index.svg */ \"./sass/icons/active-symbols/volatility/jd75 index/ic-75-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_136___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_136__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_137__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd100 index/ic-100-index.svg */ \"./sass/icons/active-symbols/volatility/jd100 index/ic-100-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_137___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_137__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd150_index_ic_150_index_svg__WEBPACK_IMPORTED_MODULE_138__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd150 index/ic-150-index.svg */ \"./sass/icons/active-symbols/volatility/jd150 index/ic-150-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd150_index_ic_150_index_svg__WEBPACK_IMPORTED_MODULE_138___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd150_index_ic_150_index_svg__WEBPACK_IMPORTED_MODULE_138__);\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd200_index_ic_200_index_svg__WEBPACK_IMPORTED_MODULE_139__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/volatility/jd200 index/ic-200-index.svg */ \"./sass/icons/active-symbols/volatility/jd200 index/ic-200-index.svg\");\n/* harmony import */ var _sass_icons_active_symbols_volatility_jd200_index_ic_200_index_svg__WEBPACK_IMPORTED_MODULE_139___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_volatility_jd200_index_ic_200_index_svg__WEBPACK_IMPORTED_MODULE_139__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_bnbusd_svg__WEBPACK_IMPORTED_MODULE_140__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-bnbusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-bnbusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_bnbusd_svg__WEBPACK_IMPORTED_MODULE_140___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_bnbusd_svg__WEBPACK_IMPORTED_MODULE_140__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btcltc_svg__WEBPACK_IMPORTED_MODULE_141__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-btcltc.svg */ \"./sass/icons/active-symbols/cryptos/ic-btcltc.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btcltc_svg__WEBPACK_IMPORTED_MODULE_141___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_btcltc_svg__WEBPACK_IMPORTED_MODULE_141__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_iotusd_svg__WEBPACK_IMPORTED_MODULE_142__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-iotusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-iotusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_iotusd_svg__WEBPACK_IMPORTED_MODULE_142___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_iotusd_svg__WEBPACK_IMPORTED_MODULE_142__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_neousd_svg__WEBPACK_IMPORTED_MODULE_143__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-neousd.svg */ \"./sass/icons/active-symbols/cryptos/ic-neousd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_neousd_svg__WEBPACK_IMPORTED_MODULE_143___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_neousd_svg__WEBPACK_IMPORTED_MODULE_143__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_omgusd_svg__WEBPACK_IMPORTED_MODULE_144__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-omgusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-omgusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_omgusd_svg__WEBPACK_IMPORTED_MODULE_144___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_omgusd_svg__WEBPACK_IMPORTED_MODULE_144__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_trxusd_svg__WEBPACK_IMPORTED_MODULE_145__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-trxusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-trxusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_trxusd_svg__WEBPACK_IMPORTED_MODULE_145___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_trxusd_svg__WEBPACK_IMPORTED_MODULE_145__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xlmusd_svg__WEBPACK_IMPORTED_MODULE_146__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-xlmusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-xlmusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xlmusd_svg__WEBPACK_IMPORTED_MODULE_146___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_xlmusd_svg__WEBPACK_IMPORTED_MODULE_146__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xmrusd_svg__WEBPACK_IMPORTED_MODULE_147__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-xmrusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-xmrusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xmrusd_svg__WEBPACK_IMPORTED_MODULE_147___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_xmrusd_svg__WEBPACK_IMPORTED_MODULE_147__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_zecusd_svg__WEBPACK_IMPORTED_MODULE_148__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-zecusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-zecusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_zecusd_svg__WEBPACK_IMPORTED_MODULE_148___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_zecusd_svg__WEBPACK_IMPORTED_MODULE_148__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btceth_svg__WEBPACK_IMPORTED_MODULE_149__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-btceth.svg */ \"./sass/icons/active-symbols/cryptos/ic-btceth.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btceth_svg__WEBPACK_IMPORTED_MODULE_149___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_btceth_svg__WEBPACK_IMPORTED_MODULE_149__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_dshusd_svg__WEBPACK_IMPORTED_MODULE_150__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-dshusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-dshusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_dshusd_svg__WEBPACK_IMPORTED_MODULE_150___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_dshusd_svg__WEBPACK_IMPORTED_MODULE_150__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_ethusd_svg__WEBPACK_IMPORTED_MODULE_151__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-ethusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-ethusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_ethusd_svg__WEBPACK_IMPORTED_MODULE_151___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_ethusd_svg__WEBPACK_IMPORTED_MODULE_151__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_bchusd_svg__WEBPACK_IMPORTED_MODULE_152__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-bchusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-bchusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_bchusd_svg__WEBPACK_IMPORTED_MODULE_152___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_bchusd_svg__WEBPACK_IMPORTED_MODULE_152__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_ltcusd_svg__WEBPACK_IMPORTED_MODULE_153__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-ltcusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-ltcusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_ltcusd_svg__WEBPACK_IMPORTED_MODULE_153___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_ltcusd_svg__WEBPACK_IMPORTED_MODULE_153__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_eosusd_svg__WEBPACK_IMPORTED_MODULE_154__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-eosusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-eosusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_eosusd_svg__WEBPACK_IMPORTED_MODULE_154___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_eosusd_svg__WEBPACK_IMPORTED_MODULE_154__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xrpusd_svg__WEBPACK_IMPORTED_MODULE_155__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-xrpusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-xrpusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_xrpusd_svg__WEBPACK_IMPORTED_MODULE_155___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_xrpusd_svg__WEBPACK_IMPORTED_MODULE_155__);\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btcusd_svg__WEBPACK_IMPORTED_MODULE_156__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/cryptos/ic-btcusd.svg */ \"./sass/icons/active-symbols/cryptos/ic-btcusd.svg\");\n/* harmony import */ var _sass_icons_active_symbols_cryptos_ic_btcusd_svg__WEBPACK_IMPORTED_MODULE_156___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_cryptos_ic_btcusd_svg__WEBPACK_IMPORTED_MODULE_156__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_usd_500_svg__WEBPACK_IMPORTED_MODULE_157__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-usd-500.svg */ \"./sass/icons/active-symbols/stock-indices/ic-usd-500.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_usd_500_svg__WEBPACK_IMPORTED_MODULE_157___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_usd_500_svg__WEBPACK_IMPORTED_MODULE_157__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_usd_tech_100_svg__WEBPACK_IMPORTED_MODULE_158__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-usd-tech-100.svg */ \"./sass/icons/active-symbols/stock-indices/ic-usd-tech-100.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_usd_tech_100_svg__WEBPACK_IMPORTED_MODULE_158___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_usd_tech_100_svg__WEBPACK_IMPORTED_MODULE_158__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_wallstreet_30_svg__WEBPACK_IMPORTED_MODULE_159__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-wallstreet-30.svg */ \"./sass/icons/active-symbols/stock-indices/ic-wallstreet-30.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_wallstreet_30_svg__WEBPACK_IMPORTED_MODULE_159___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_wallstreet_30_svg__WEBPACK_IMPORTED_MODULE_159__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_uk_100_svg__WEBPACK_IMPORTED_MODULE_160__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-uk-100.svg */ \"./sass/icons/active-symbols/stock-indices/ic-uk-100.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_uk_100_svg__WEBPACK_IMPORTED_MODULE_160___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_uk_100_svg__WEBPACK_IMPORTED_MODULE_160__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_swiss_20_svg__WEBPACK_IMPORTED_MODULE_161__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-swiss-20.svg */ \"./sass/icons/active-symbols/stock-indices/ic-swiss-20.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_swiss_20_svg__WEBPACK_IMPORTED_MODULE_161___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_swiss_20_svg__WEBPACK_IMPORTED_MODULE_161__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_netherland_25_svg__WEBPACK_IMPORTED_MODULE_162__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-netherland-25.svg */ \"./sass/icons/active-symbols/stock-indices/ic-netherland-25.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_netherland_25_svg__WEBPACK_IMPORTED_MODULE_162___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_netherland_25_svg__WEBPACK_IMPORTED_MODULE_162__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_japan_225_svg__WEBPACK_IMPORTED_MODULE_163__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-japan-225.svg */ \"./sass/icons/active-symbols/stock-indices/ic-japan-225.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_japan_225_svg__WEBPACK_IMPORTED_MODULE_163___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_japan_225_svg__WEBPACK_IMPORTED_MODULE_163__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_hong_kong_50_svg__WEBPACK_IMPORTED_MODULE_164__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-hong-kong-50.svg */ \"./sass/icons/active-symbols/stock-indices/ic-hong-kong-50.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_hong_kong_50_svg__WEBPACK_IMPORTED_MODULE_164___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_hong_kong_50_svg__WEBPACK_IMPORTED_MODULE_164__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_germany_40_svg__WEBPACK_IMPORTED_MODULE_165__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-germany-40.svg */ \"./sass/icons/active-symbols/stock-indices/ic-germany-40.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_germany_40_svg__WEBPACK_IMPORTED_MODULE_165___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_germany_40_svg__WEBPACK_IMPORTED_MODULE_165__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_france_40_svg__WEBPACK_IMPORTED_MODULE_166__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-france-40.svg */ \"./sass/icons/active-symbols/stock-indices/ic-france-40.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_france_40_svg__WEBPACK_IMPORTED_MODULE_166___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_france_40_svg__WEBPACK_IMPORTED_MODULE_166__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_euro_50_svg__WEBPACK_IMPORTED_MODULE_167__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-euro-50.svg */ \"./sass/icons/active-symbols/stock-indices/ic-euro-50.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_euro_50_svg__WEBPACK_IMPORTED_MODULE_167___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_euro_50_svg__WEBPACK_IMPORTED_MODULE_167__);\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_australian_200_svg__WEBPACK_IMPORTED_MODULE_168__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/stock-indices/ic-australian-200.svg */ \"./sass/icons/active-symbols/stock-indices/ic-australian-200.svg\");\n/* harmony import */ var _sass_icons_active_symbols_stock_indices_ic_australian_200_svg__WEBPACK_IMPORTED_MODULE_168___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_stock_indices_ic_australian_200_svg__WEBPACK_IMPORTED_MODULE_168__);\n/* harmony import */ var _sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_169__ = __nested_webpack_require_581313__(/*! ../../sass/icons/active-symbols/ic-otcbadge.svg */ \"./sass/icons/active-symbols/ic-otcbadge.svg\");\n/* harmony import */ var _sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_169___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_169__);\n/* harmony import */ var _sass_icons_shape_ic_empty_state_svg__WEBPACK_IMPORTED_MODULE_170__ = __nested_webpack_require_581313__(/*! ../../sass/icons/shape/ic-empty-state.svg */ \"./sass/icons/shape/ic-empty-state.svg\");\n/* harmony import */ var _sass_icons_shape_ic_empty_state_svg__WEBPACK_IMPORTED_MODULE_170___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_shape_ic_empty_state_svg__WEBPACK_IMPORTED_MODULE_170__);\n/* harmony import */ var _sass_icons_shape_ic_overwrite_state_svg__WEBPACK_IMPORTED_MODULE_171__ = __nested_webpack_require_581313__(/*! ../../sass/icons/shape/ic-overwrite-state.svg */ \"./sass/icons/shape/ic-overwrite-state.svg\");\n/* harmony import */ var _sass_icons_shape_ic_overwrite_state_svg__WEBPACK_IMPORTED_MODULE_171___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_shape_ic_overwrite_state_svg__WEBPACK_IMPORTED_MODULE_171__);\n/* harmony import */ var _sass_icons_common_ic_info_svg__WEBPACK_IMPORTED_MODULE_172__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-info.svg */ \"./sass/icons/common/ic-info.svg\");\n/* harmony import */ var _sass_icons_common_ic_info_svg__WEBPACK_IMPORTED_MODULE_172___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_info_svg__WEBPACK_IMPORTED_MODULE_172__);\n/* harmony import */ var _sass_icons_common_ic_language_svg__WEBPACK_IMPORTED_MODULE_173__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-language.svg */ \"./sass/icons/common/ic-language.svg\");\n/* harmony import */ var _sass_icons_common_ic_language_svg__WEBPACK_IMPORTED_MODULE_173___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_language_svg__WEBPACK_IMPORTED_MODULE_173__);\n/* harmony import */ var _sass_icons_common_ic_theme_svg__WEBPACK_IMPORTED_MODULE_174__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-theme.svg */ \"./sass/icons/common/ic-theme.svg\");\n/* harmony import */ var _sass_icons_common_ic_theme_svg__WEBPACK_IMPORTED_MODULE_174___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_theme_svg__WEBPACK_IMPORTED_MODULE_174__);\n/* harmony import */ var _sass_icons_common_ic_charts_svg__WEBPACK_IMPORTED_MODULE_175__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-charts.svg */ \"./sass/icons/common/ic-charts.svg\");\n/* harmony import */ var _sass_icons_common_ic_charts_svg__WEBPACK_IMPORTED_MODULE_175___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_charts_svg__WEBPACK_IMPORTED_MODULE_175__);\n/* harmony import */ var _sass_icons_common_ic_checkbox_svg__WEBPACK_IMPORTED_MODULE_176__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-checkbox.svg */ \"./sass/icons/common/ic-checkbox.svg\");\n/* harmony import */ var _sass_icons_common_ic_checkbox_svg__WEBPACK_IMPORTED_MODULE_176___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_checkbox_svg__WEBPACK_IMPORTED_MODULE_176__);\n/* harmony import */ var _sass_icons_common_ic_checkbox_active_svg__WEBPACK_IMPORTED_MODULE_177__ = __nested_webpack_require_581313__(/*! ../../sass/icons/common/ic-checkbox-active.svg */ \"./sass/icons/common/ic-checkbox-active.svg\");\n/* harmony import */ var _sass_icons_common_ic_checkbox_active_svg__WEBPACK_IMPORTED_MODULE_177___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_common_ic_checkbox_active_svg__WEBPACK_IMPORTED_MODULE_177__);\n/* harmony import */ var _sass_icons_setting_ic_theme_light_svg__WEBPACK_IMPORTED_MODULE_178__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/ic-theme-light.svg */ \"./sass/icons/setting/ic-theme-light.svg\");\n/* harmony import */ var _sass_icons_setting_ic_theme_light_svg__WEBPACK_IMPORTED_MODULE_178___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_ic_theme_light_svg__WEBPACK_IMPORTED_MODULE_178__);\n/* harmony import */ var _sass_icons_setting_ic_theme_dark_svg__WEBPACK_IMPORTED_MODULE_179__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/ic-theme-dark.svg */ \"./sass/icons/setting/ic-theme-dark.svg\");\n/* harmony import */ var _sass_icons_setting_ic_theme_dark_svg__WEBPACK_IMPORTED_MODULE_179___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_ic_theme_dark_svg__WEBPACK_IMPORTED_MODULE_179__);\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_light_normal_svg__WEBPACK_IMPORTED_MODULE_180__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/countdown/ic-countdown-light-normal.svg */ \"./sass/icons/setting/countdown/ic-countdown-light-normal.svg\");\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_light_normal_svg__WEBPACK_IMPORTED_MODULE_180___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_countdown_ic_countdown_light_normal_svg__WEBPACK_IMPORTED_MODULE_180__);\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_light_active_svg__WEBPACK_IMPORTED_MODULE_181__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/countdown/ic-countdown-light-active.svg */ \"./sass/icons/setting/countdown/ic-countdown-light-active.svg\");\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_light_active_svg__WEBPACK_IMPORTED_MODULE_181___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_countdown_ic_countdown_light_active_svg__WEBPACK_IMPORTED_MODULE_181__);\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_dark_normal_svg__WEBPACK_IMPORTED_MODULE_182__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/countdown/ic-countdown-dark-normal.svg */ \"./sass/icons/setting/countdown/ic-countdown-dark-normal.svg\");\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_dark_normal_svg__WEBPACK_IMPORTED_MODULE_182___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_countdown_ic_countdown_dark_normal_svg__WEBPACK_IMPORTED_MODULE_182__);\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_dark_active_svg__WEBPACK_IMPORTED_MODULE_183__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/countdown/ic-countdown-dark-active.svg */ \"./sass/icons/setting/countdown/ic-countdown-dark-active.svg\");\n/* harmony import */ var _sass_icons_setting_countdown_ic_countdown_dark_active_svg__WEBPACK_IMPORTED_MODULE_183___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_countdown_ic_countdown_dark_active_svg__WEBPACK_IMPORTED_MODULE_183__);\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_light_normal_svg__WEBPACK_IMPORTED_MODULE_184__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/historical/ic-historical-light-normal.svg */ \"./sass/icons/setting/historical/ic-historical-light-normal.svg\");\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_light_normal_svg__WEBPACK_IMPORTED_MODULE_184___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_historical_ic_historical_light_normal_svg__WEBPACK_IMPORTED_MODULE_184__);\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_light_active_svg__WEBPACK_IMPORTED_MODULE_185__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/historical/ic-historical-light-active.svg */ \"./sass/icons/setting/historical/ic-historical-light-active.svg\");\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_light_active_svg__WEBPACK_IMPORTED_MODULE_185___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_historical_ic_historical_light_active_svg__WEBPACK_IMPORTED_MODULE_185__);\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_dark_normal_svg__WEBPACK_IMPORTED_MODULE_186__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/historical/ic-historical-dark-normal.svg */ \"./sass/icons/setting/historical/ic-historical-dark-normal.svg\");\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_dark_normal_svg__WEBPACK_IMPORTED_MODULE_186___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_historical_ic_historical_dark_normal_svg__WEBPACK_IMPORTED_MODULE_186__);\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_dark_active_svg__WEBPACK_IMPORTED_MODULE_187__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/historical/ic-historical-dark-active.svg */ \"./sass/icons/setting/historical/ic-historical-dark-active.svg\");\n/* harmony import */ var _sass_icons_setting_historical_ic_historical_dark_active_svg__WEBPACK_IMPORTED_MODULE_187___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_historical_ic_historical_dark_active_svg__WEBPACK_IMPORTED_MODULE_187__);\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_light_normal_svg__WEBPACK_IMPORTED_MODULE_188__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/highest-lowest/ic-highest-lowest-light-normal.svg */ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-light-normal.svg\");\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_light_normal_svg__WEBPACK_IMPORTED_MODULE_188___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_highest_lowest_ic_highest_lowest_light_normal_svg__WEBPACK_IMPORTED_MODULE_188__);\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_light_active_svg__WEBPACK_IMPORTED_MODULE_189__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/highest-lowest/ic-highest-lowest-light-active.svg */ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-light-active.svg\");\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_light_active_svg__WEBPACK_IMPORTED_MODULE_189___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_highest_lowest_ic_highest_lowest_light_active_svg__WEBPACK_IMPORTED_MODULE_189__);\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_dark_normal_svg__WEBPACK_IMPORTED_MODULE_190__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/highest-lowest/ic-highest-lowest-dark-normal.svg */ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-normal.svg\");\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_dark_normal_svg__WEBPACK_IMPORTED_MODULE_190___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_highest_lowest_ic_highest_lowest_dark_normal_svg__WEBPACK_IMPORTED_MODULE_190__);\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_dark_active_svg__WEBPACK_IMPORTED_MODULE_191__ = __nested_webpack_require_581313__(/*! ../../sass/icons/setting/highest-lowest/ic-highest-lowest-dark-active.svg */ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-active.svg\");\n/* harmony import */ var _sass_icons_setting_highest_lowest_ic_highest_lowest_dark_active_svg__WEBPACK_IMPORTED_MODULE_191___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_setting_highest_lowest_ic_highest_lowest_dark_active_svg__WEBPACK_IMPORTED_MODULE_191__);\n/* harmony import */ var _sass_icons_indicators_ic_momentum_svg__WEBPACK_IMPORTED_MODULE_192__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-momentum.svg */ \"./sass/icons/indicators/ic-momentum.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_momentum_svg__WEBPACK_IMPORTED_MODULE_192___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_momentum_svg__WEBPACK_IMPORTED_MODULE_192__);\n/* harmony import */ var _sass_icons_indicators_ic_trend_light_svg__WEBPACK_IMPORTED_MODULE_193__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-trend-light.svg */ \"./sass/icons/indicators/ic-trend-light.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_trend_light_svg__WEBPACK_IMPORTED_MODULE_193___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_trend_light_svg__WEBPACK_IMPORTED_MODULE_193__);\n/* harmony import */ var _sass_icons_indicators_ic_trend_dark_svg__WEBPACK_IMPORTED_MODULE_194__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-trend-dark.svg */ \"./sass/icons/indicators/ic-trend-dark.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_trend_dark_svg__WEBPACK_IMPORTED_MODULE_194___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_trend_dark_svg__WEBPACK_IMPORTED_MODULE_194__);\n/* harmony import */ var _sass_icons_indicators_ic_volatility_svg__WEBPACK_IMPORTED_MODULE_195__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-volatility.svg */ \"./sass/icons/indicators/ic-volatility.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_volatility_svg__WEBPACK_IMPORTED_MODULE_195___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_volatility_svg__WEBPACK_IMPORTED_MODULE_195__);\n/* harmony import */ var _sass_icons_indicators_ic_cat_averages_svg__WEBPACK_IMPORTED_MODULE_196__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-cat-averages.svg */ \"./sass/icons/indicators/ic-cat-averages.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_cat_averages_svg__WEBPACK_IMPORTED_MODULE_196___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_cat_averages_svg__WEBPACK_IMPORTED_MODULE_196__);\n/* harmony import */ var _sass_icons_indicators_ic_other_svg__WEBPACK_IMPORTED_MODULE_197__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-other.svg */ \"./sass/icons/indicators/ic-other.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_other_svg__WEBPACK_IMPORTED_MODULE_197___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_other_svg__WEBPACK_IMPORTED_MODULE_197__);\n/* harmony import */ var _sass_icons_indicators_ic_awesome_oscillator_svg__WEBPACK_IMPORTED_MODULE_198__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-awesome-oscillator.svg */ \"./sass/icons/indicators/ic-awesome-oscillator.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_awesome_oscillator_svg__WEBPACK_IMPORTED_MODULE_198___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_awesome_oscillator_svg__WEBPACK_IMPORTED_MODULE_198__);\n/* harmony import */ var _sass_icons_indicators_ic_dtrended_svg__WEBPACK_IMPORTED_MODULE_199__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-dtrended.svg */ \"./sass/icons/indicators/ic-dtrended.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_dtrended_svg__WEBPACK_IMPORTED_MODULE_199___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_dtrended_svg__WEBPACK_IMPORTED_MODULE_199__);\n/* harmony import */ var _sass_icons_indicators_ic_gator_svg__WEBPACK_IMPORTED_MODULE_200__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-gator.svg */ \"./sass/icons/indicators/ic-gator.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_gator_svg__WEBPACK_IMPORTED_MODULE_200___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_gator_svg__WEBPACK_IMPORTED_MODULE_200__);\n/* harmony import */ var _sass_icons_indicators_ic_macd_svg__WEBPACK_IMPORTED_MODULE_201__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-macd.svg */ \"./sass/icons/indicators/ic-macd.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_macd_svg__WEBPACK_IMPORTED_MODULE_201___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_macd_svg__WEBPACK_IMPORTED_MODULE_201__);\n/* harmony import */ var _sass_icons_indicators_ic_rate_of_change_svg__WEBPACK_IMPORTED_MODULE_202__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-rate-of-change.svg */ \"./sass/icons/indicators/ic-rate-of-change.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_rate_of_change_svg__WEBPACK_IMPORTED_MODULE_202___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_rate_of_change_svg__WEBPACK_IMPORTED_MODULE_202__);\n/* harmony import */ var _sass_icons_indicators_ic_rsi_svg__WEBPACK_IMPORTED_MODULE_203__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-rsi.svg */ \"./sass/icons/indicators/ic-rsi.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_rsi_svg__WEBPACK_IMPORTED_MODULE_203___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_rsi_svg__WEBPACK_IMPORTED_MODULE_203__);\n/* harmony import */ var _sass_icons_indicators_ic_stochastic_oscillator_svg__WEBPACK_IMPORTED_MODULE_204__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-stochastic-oscillator.svg */ \"./sass/icons/indicators/ic-stochastic-oscillator.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_stochastic_oscillator_svg__WEBPACK_IMPORTED_MODULE_204___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_stochastic_oscillator_svg__WEBPACK_IMPORTED_MODULE_204__);\n/* harmony import */ var _sass_icons_indicators_ic_stochastic_momentum_svg__WEBPACK_IMPORTED_MODULE_205__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-stochastic-momentum.svg */ \"./sass/icons/indicators/ic-stochastic-momentum.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_stochastic_momentum_svg__WEBPACK_IMPORTED_MODULE_205___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_stochastic_momentum_svg__WEBPACK_IMPORTED_MODULE_205__);\n/* harmony import */ var _sass_icons_indicators_ic_william_percent_svg__WEBPACK_IMPORTED_MODULE_206__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-william-percent.svg */ \"./sass/icons/indicators/ic-william-percent.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_william_percent_svg__WEBPACK_IMPORTED_MODULE_206___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_william_percent_svg__WEBPACK_IMPORTED_MODULE_206__);\n/* harmony import */ var _sass_icons_indicators_ic_aroon_svg__WEBPACK_IMPORTED_MODULE_207__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-aroon.svg */ \"./sass/icons/indicators/ic-aroon.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_aroon_svg__WEBPACK_IMPORTED_MODULE_207___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_aroon_svg__WEBPACK_IMPORTED_MODULE_207__);\n/* harmony import */ var _sass_icons_indicators_ic_adx_svg__WEBPACK_IMPORTED_MODULE_208__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-adx.svg */ \"./sass/icons/indicators/ic-adx.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_adx_svg__WEBPACK_IMPORTED_MODULE_208___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_adx_svg__WEBPACK_IMPORTED_MODULE_208__);\n/* harmony import */ var _sass_icons_indicators_ic_commodity_channel_index_svg__WEBPACK_IMPORTED_MODULE_209__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-commodity-channel-index.svg */ \"./sass/icons/indicators/ic-commodity-channel-index.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_commodity_channel_index_svg__WEBPACK_IMPORTED_MODULE_209___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_commodity_channel_index_svg__WEBPACK_IMPORTED_MODULE_209__);\n/* harmony import */ var _sass_icons_indicators_ic_ichimoku_svg__WEBPACK_IMPORTED_MODULE_210__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-ichimoku.svg */ \"./sass/icons/indicators/ic-ichimoku.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_ichimoku_svg__WEBPACK_IMPORTED_MODULE_210___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_ichimoku_svg__WEBPACK_IMPORTED_MODULE_210__);\n/* harmony import */ var _sass_icons_indicators_ic_parabolic_svg__WEBPACK_IMPORTED_MODULE_211__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-parabolic.svg */ \"./sass/icons/indicators/ic-parabolic.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_parabolic_svg__WEBPACK_IMPORTED_MODULE_211___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_parabolic_svg__WEBPACK_IMPORTED_MODULE_211__);\n/* harmony import */ var _sass_icons_indicators_ic_zig_zag_svg__WEBPACK_IMPORTED_MODULE_212__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-zig-zag.svg */ \"./sass/icons/indicators/ic-zig-zag.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_zig_zag_svg__WEBPACK_IMPORTED_MODULE_212___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_zig_zag_svg__WEBPACK_IMPORTED_MODULE_212__);\n/* harmony import */ var _sass_icons_indicators_ic_bollinger_svg__WEBPACK_IMPORTED_MODULE_213__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-bollinger.svg */ \"./sass/icons/indicators/ic-bollinger.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_bollinger_svg__WEBPACK_IMPORTED_MODULE_213___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_bollinger_svg__WEBPACK_IMPORTED_MODULE_213__);\n/* harmony import */ var _sass_icons_indicators_ic_donchian_svg__WEBPACK_IMPORTED_MODULE_214__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-donchian.svg */ \"./sass/icons/indicators/ic-donchian.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_donchian_svg__WEBPACK_IMPORTED_MODULE_214___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_donchian_svg__WEBPACK_IMPORTED_MODULE_214__);\n/* harmony import */ var _sass_icons_indicators_ic_averages_svg__WEBPACK_IMPORTED_MODULE_215__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-averages.svg */ \"./sass/icons/indicators/ic-averages.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_averages_svg__WEBPACK_IMPORTED_MODULE_215___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_averages_svg__WEBPACK_IMPORTED_MODULE_215__);\n/* harmony import */ var _sass_icons_indicators_ic_envelope_svg__WEBPACK_IMPORTED_MODULE_216__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-envelope.svg */ \"./sass/icons/indicators/ic-envelope.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_envelope_svg__WEBPACK_IMPORTED_MODULE_216___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_envelope_svg__WEBPACK_IMPORTED_MODULE_216__);\n/* harmony import */ var _sass_icons_indicators_ic_alligator_svg__WEBPACK_IMPORTED_MODULE_217__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-alligator.svg */ \"./sass/icons/indicators/ic-alligator.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_alligator_svg__WEBPACK_IMPORTED_MODULE_217___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_alligator_svg__WEBPACK_IMPORTED_MODULE_217__);\n/* harmony import */ var _sass_icons_indicators_ic_fractal_chaos_svg__WEBPACK_IMPORTED_MODULE_218__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-fractal-chaos.svg */ \"./sass/icons/indicators/ic-fractal-chaos.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_fractal_chaos_svg__WEBPACK_IMPORTED_MODULE_218___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_fractal_chaos_svg__WEBPACK_IMPORTED_MODULE_218__);\n/* harmony import */ var _sass_icons_indicators_ic_rainbow_svg__WEBPACK_IMPORTED_MODULE_219__ = __nested_webpack_require_581313__(/*! ../../sass/icons/indicators/ic-rainbow.svg */ \"./sass/icons/indicators/ic-rainbow.svg\");\n/* harmony import */ var _sass_icons_indicators_ic_rainbow_svg__WEBPACK_IMPORTED_MODULE_219___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_indicators_ic_rainbow_svg__WEBPACK_IMPORTED_MODULE_219__);\n/* harmony import */ var _sass_icons_draw_tools_ic_channel_svg__WEBPACK_IMPORTED_MODULE_220__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-channel.svg */ \"./sass/icons/draw-tools/ic-channel.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_channel_svg__WEBPACK_IMPORTED_MODULE_220___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_channel_svg__WEBPACK_IMPORTED_MODULE_220__);\n/* harmony import */ var _sass_icons_draw_tools_ic_continuous_svg__WEBPACK_IMPORTED_MODULE_221__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-continuous.svg */ \"./sass/icons/draw-tools/ic-continuous.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_continuous_svg__WEBPACK_IMPORTED_MODULE_221___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_continuous_svg__WEBPACK_IMPORTED_MODULE_221__);\n/* harmony import */ var _sass_icons_draw_tools_ic_fibonacci_fan_svg__WEBPACK_IMPORTED_MODULE_222__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-fibonacci-fan.svg */ \"./sass/icons/draw-tools/ic-fibonacci-fan.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_fibonacci_fan_svg__WEBPACK_IMPORTED_MODULE_222___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_fibonacci_fan_svg__WEBPACK_IMPORTED_MODULE_222__);\n/* harmony import */ var _sass_icons_draw_tools_ic_horizontal_svg__WEBPACK_IMPORTED_MODULE_223__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-horizontal.svg */ \"./sass/icons/draw-tools/ic-horizontal.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_horizontal_svg__WEBPACK_IMPORTED_MODULE_223___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_horizontal_svg__WEBPACK_IMPORTED_MODULE_223__);\n/* harmony import */ var _sass_icons_draw_tools_ic_line_svg__WEBPACK_IMPORTED_MODULE_224__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-line.svg */ \"./sass/icons/draw-tools/ic-line.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_line_svg__WEBPACK_IMPORTED_MODULE_224___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_line_svg__WEBPACK_IMPORTED_MODULE_224__);\n/* harmony import */ var _sass_icons_draw_tools_ic_ray_svg__WEBPACK_IMPORTED_MODULE_225__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-ray.svg */ \"./sass/icons/draw-tools/ic-ray.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_ray_svg__WEBPACK_IMPORTED_MODULE_225___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_ray_svg__WEBPACK_IMPORTED_MODULE_225__);\n/* harmony import */ var _sass_icons_draw_tools_ic_rectangle_svg__WEBPACK_IMPORTED_MODULE_226__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-rectangle.svg */ \"./sass/icons/draw-tools/ic-rectangle.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_rectangle_svg__WEBPACK_IMPORTED_MODULE_226___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_rectangle_svg__WEBPACK_IMPORTED_MODULE_226__);\n/* harmony import */ var _sass_icons_draw_tools_ic_trend_svg__WEBPACK_IMPORTED_MODULE_227__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-trend.svg */ \"./sass/icons/draw-tools/ic-trend.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_trend_svg__WEBPACK_IMPORTED_MODULE_227___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_trend_svg__WEBPACK_IMPORTED_MODULE_227__);\n/* harmony import */ var _sass_icons_draw_tools_ic_vertical_svg__WEBPACK_IMPORTED_MODULE_228__ = __nested_webpack_require_581313__(/*! ../../sass/icons/draw-tools/ic-vertical.svg */ \"./sass/icons/draw-tools/ic-vertical.svg\");\n/* harmony import */ var _sass_icons_draw_tools_ic_vertical_svg__WEBPACK_IMPORTED_MODULE_228___default = /*#__PURE__*/__nested_webpack_require_581313__.n(_sass_icons_draw_tools_ic_vertical_svg__WEBPACK_IMPORTED_MODULE_228__);\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n // Chart types:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Energy */\n\n\n/* Metals */\n\n\n/* Synthetic Indices */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Cryptocurrency */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/* Stock Indices */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst Wrapper = SvgLogo => {\n  const InnerWrapper = props => {\n    let {\n      className,\n      'tooltip-title': tooltip,\n      ...p\n    } = props; // eslint-disable-line prefer-const\n\n    className = `ic-icon ${className || ''}`;\n    const vb = SvgLogo.viewBox?.split(' ').slice(2) || [];\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", _extends({\n      className: className,\n      \"tooltip-title\": tooltip\n    }, p), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\", {\n      width: vb[0],\n      height: vb[1]\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"use\", {\n      xlinkHref: __nested_webpack_require_581313__.p + SvgLogo.url\n      /* eslint-disable-line no-undef */\n\n    })), tooltip && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n      className: \"ic-subtitle\"\n    }, tooltip)));\n  };\n\n  return InnerWrapper;\n};\nconst DrawingCursorIcon = Wrapper((_sass_icons_pencil_ic_pencil_svg__WEBPACK_IMPORTED_MODULE_54___default()));\nconst ThemeLightIcon = Wrapper((_sass_icons_setting_ic_theme_light_svg__WEBPACK_IMPORTED_MODULE_178___default()));\nconst ThemeDarkIcon = Wrapper((_sass_icons_setting_ic_theme_dark_svg__WEBPACK_IMPORTED_MODULE_179___default()));\nconst DrawToolIcon = Wrapper((_sass_icons_common_ic_drawing_tool_svg__WEBPACK_IMPORTED_MODULE_55___default()));\nconst ActiveIcon = Wrapper((_sass_icons_common_ic_active_svg__WEBPACK_IMPORTED_MODULE_38___default()));\nconst FullScreenIcon = Wrapper((_sass_icons_common_full_screen_svg__WEBPACK_IMPORTED_MODULE_60___default())); // Chart Types:\n\nconst BaseLineIcon = Wrapper((_sass_icons_chart_settings_chart_types_baseline_ic_baseline_normal_svg__WEBPACK_IMPORTED_MODULE_2___default()));\nconst CandleIcon = Wrapper((_sass_icons_chart_settings_chart_types_candle_ic_candle_normal_svg__WEBPACK_IMPORTED_MODULE_3___default()));\nconst DotIcon = Wrapper((_sass_icons_chart_settings_chart_types_dot_ic_dot_normal_svg__WEBPACK_IMPORTED_MODULE_4___default()));\nconst LineDotIcon = Wrapper((_sass_icons_chart_settings_chart_types_line_dot_ic_linedot_normal_svg__WEBPACK_IMPORTED_MODULE_5___default()));\nconst HeikinAshiIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_heikin_ashi_normal_svg__WEBPACK_IMPORTED_MODULE_6___default()));\nconst HollowCandleIcon = Wrapper((_sass_icons_chart_settings_chart_types_hollow_candle_ic_hollowcandle_normal_svg__WEBPACK_IMPORTED_MODULE_7___default()));\nconst KagiIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_kagi_normal_svg__WEBPACK_IMPORTED_MODULE_8___default()));\nconst LineBreakIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_linebreak_normal_svg__WEBPACK_IMPORTED_MODULE_10___default()));\nconst LineIcon = Wrapper((_sass_icons_chart_settings_chart_types_line_ic_line_normal_svg__WEBPACK_IMPORTED_MODULE_9___default()));\nconst OHLCIcon = Wrapper((_sass_icons_chart_settings_chart_types_ohlc_ic_ohlc_normal_svg__WEBPACK_IMPORTED_MODULE_11___default()));\nconst PointFigureIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_pointfigure_normal_svg__WEBPACK_IMPORTED_MODULE_12___default()));\nconst RangeBarsIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_rangebars_normal_svg__WEBPACK_IMPORTED_MODULE_13___default()));\nconst RenkoIcon = Wrapper((_sass_icons_chart_settings_chart_types_ic_renko_normal_svg__WEBPACK_IMPORTED_MODULE_14___default()));\nconst TableIcon = Wrapper((_sass_icons_chart_settings_chart_types_table_table_svg__WEBPACK_IMPORTED_MODULE_16___default()));\nconst AddIcon = Wrapper((_sass_icons_common_ic_add_svg__WEBPACK_IMPORTED_MODULE_20___default()));\nconst ZoomInIcon = Wrapper((_sass_icons_chart_settings_zoom_in_ic_zoomin_light_svg__WEBPACK_IMPORTED_MODULE_19___default()));\nconst CloseIcon = Wrapper((_sass_icons_common_ic_close_svg__WEBPACK_IMPORTED_MODULE_21___default()));\nconst InputNumberMinusIcon = Wrapper((_sass_icons_common_ic_input_number_minus_svg__WEBPACK_IMPORTED_MODULE_22___default()));\nconst InputNumberPlusIcon = Wrapper((_sass_icons_common_ic_input_number_plus_svg__WEBPACK_IMPORTED_MODULE_23___default()));\nconst CloseCircleIcon = Wrapper((_sass_icons_close_ic_close_circle_svg__WEBPACK_IMPORTED_MODULE_24___default()));\nconst CloseBoldIcon = Wrapper((_sass_icons_close_ic_close_bold_svg__WEBPACK_IMPORTED_MODULE_25___default()));\nconst ComparisonIcon = Wrapper((_sass_icons_chart_settings_comparison_ic_comparison_normal_svg__WEBPACK_IMPORTED_MODULE_26___default()));\nconst CrosshairOffIcon = Wrapper((_sass_icons_chart_settings_crosshair_ic_crosshair_off_svg__WEBPACK_IMPORTED_MODULE_27___default()));\nconst CrosshairOnIcon = Wrapper((_sass_icons_chart_settings_crosshair_ic_crosshair_on_svg__WEBPACK_IMPORTED_MODULE_28___default()));\nconst CrosshairTooltipIcon = Wrapper((_sass_icons_chart_settings_crosshair_ic_crosshair_tooltip_svg__WEBPACK_IMPORTED_MODULE_29___default()));\nconst DeleteIcon = Wrapper((_sass_icons_delete_ic_delete_svg__WEBPACK_IMPORTED_MODULE_30___default()));\nconst ClearIcon = Wrapper((_sass_icons_clear_ic_clear_svg__WEBPACK_IMPORTED_MODULE_31___default()));\nconst DrawIcon = Wrapper((_sass_icons_chart_settings_drawing_tools_ic_drawingtools_normal_svg__WEBPACK_IMPORTED_MODULE_32___default()));\nconst IndicatorIcon = Wrapper((_sass_icons_common_ic_indicators_svg__WEBPACK_IMPORTED_MODULE_58___default()));\nconst MeasureIcon = Wrapper((_sass_icons_measure_ic_measure_svg__WEBPACK_IMPORTED_MODULE_33___default()));\nconst ZoomOutIcon = Wrapper((_sass_icons_chart_settings_zoom_out_ic_zoomout_light_svg__WEBPACK_IMPORTED_MODULE_34___default()));\nconst SplineIcon = Wrapper((_sass_icons_chart_settings_chart_types_spline_ic_spline_normal_svg__WEBPACK_IMPORTED_MODULE_15___default()));\nconst PngIcon = Wrapper((_sass_icons_download_ic_png_svg__WEBPACK_IMPORTED_MODULE_17___default()));\nconst CsvIcon = Wrapper((_sass_icons_download_ic_csv_svg__WEBPACK_IMPORTED_MODULE_18___default()));\nconst StarIcon = Wrapper((_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default()));\nconst TemplateIcon = Wrapper((_sass_icons_common_ic_templates_svg__WEBPACK_IMPORTED_MODULE_59___default()));\nconst TickIcon = Wrapper((_sass_icons_tick_ic_tick_svg__WEBPACK_IMPORTED_MODULE_36___default()));\nconst TimeIcon = Wrapper((_sass_icons_time_ic_time_svg__WEBPACK_IMPORTED_MODULE_37___default()));\nconst SearchIcon = Wrapper((_sass_icons_search_ic_search_normal_svg__WEBPACK_IMPORTED_MODULE_48___default()));\nconst EditIcon = Wrapper((_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_49___default()));\nconst SettingIcon = Wrapper((_sass_icons_edit_ic_edit_svg__WEBPACK_IMPORTED_MODULE_49___default()));\nconst ArrowIcon = Wrapper((_sass_icons_dropdown_ic_dropdown_svg__WEBPACK_IMPORTED_MODULE_50___default()));\nconst FavoriteIcon = Wrapper((_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default()));\nconst HelpCenterIcon = Wrapper((_sass_icons_common_ic_help_center_svg__WEBPACK_IMPORTED_MODULE_56___default()));\nconst DownloadIcon = Wrapper((_sass_icons_common_ic_download_svg__WEBPACK_IMPORTED_MODULE_57___default()));\nconst InfoIcon = Wrapper((_sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_64___default()));\nconst InfoCircleIcon = Wrapper((_sass_icons_common_ic_info_svg__WEBPACK_IMPORTED_MODULE_172___default()));\nconst PositionLeftIcon = Wrapper((_sass_icons_chart_settings_setting_ic_position_left_svg__WEBPACK_IMPORTED_MODULE_51___default()));\nconst PositionBottomIcon = Wrapper((_sass_icons_chart_settings_setting_ic_position_bottom_svg__WEBPACK_IMPORTED_MODULE_52___default()));\nconst BackIcon = Wrapper((_sass_icons_back_ic_back_svg__WEBPACK_IMPORTED_MODULE_53___default()));\nconst HomeIcon = Wrapper((_sass_icons_navigation_widgets_ic_home_svg__WEBPACK_IMPORTED_MODULE_65___default()));\nconst ScaleIcon = Wrapper((_sass_icons_navigation_widgets_ic_scale_full_svg__WEBPACK_IMPORTED_MODULE_66___default()));\nconst ZoominIcon = Wrapper((_sass_icons_navigation_widgets_ic_zoomin_svg__WEBPACK_IMPORTED_MODULE_67___default()));\nconst ZoomoutIcon = Wrapper((_sass_icons_navigation_widgets_ic_zoomout_svg__WEBPACK_IMPORTED_MODULE_68___default()));\nconst LanguageIcon = Wrapper((_sass_icons_common_ic_language_svg__WEBPACK_IMPORTED_MODULE_173___default()));\nconst ThemeIcon = Wrapper((_sass_icons_common_ic_theme_svg__WEBPACK_IMPORTED_MODULE_174___default()));\nconst ChartIcon = Wrapper((_sass_icons_common_ic_charts_svg__WEBPACK_IMPORTED_MODULE_175___default()));\nconst CheckboxIcon = Wrapper((_sass_icons_common_ic_checkbox_svg__WEBPACK_IMPORTED_MODULE_176___default()));\nconst CheckboxActiveIcon = Wrapper((_sass_icons_common_ic_checkbox_active_svg__WEBPACK_IMPORTED_MODULE_177___default()));\nconst TypeAreaIcon = Wrapper((_sass_icons_chart_type_ic_area_svg__WEBPACK_IMPORTED_MODULE_69___default()));\nconst TypeCandleIcon = Wrapper((_sass_icons_chart_type_ic_candle_svg__WEBPACK_IMPORTED_MODULE_70___default()));\nconst TypeHollowIcon = Wrapper((_sass_icons_chart_type_ic_hollow_svg__WEBPACK_IMPORTED_MODULE_71___default()));\nconst TypeOhlcIcon = Wrapper((_sass_icons_chart_type_ic_ohlc_svg__WEBPACK_IMPORTED_MODULE_72___default()));\nconst TypeAreaGrayscaleIcon = Wrapper((_sass_icons_chart_type_ic_area_grayscale_svg__WEBPACK_IMPORTED_MODULE_73___default()));\nconst TypeCandleGrayscaleIcon = Wrapper((_sass_icons_chart_type_ic_candle_grayscale_svg__WEBPACK_IMPORTED_MODULE_74___default()));\nconst TypeHollowGrayscaleIcon = Wrapper((_sass_icons_chart_type_ic_hollow_grayscale_svg__WEBPACK_IMPORTED_MODULE_75___default()));\nconst TypeOhlcGrayscaleIcon = Wrapper((_sass_icons_chart_type_ic_ohlc_grayscale_svg__WEBPACK_IMPORTED_MODULE_76___default()));\nconst IndicatorCatMomentumIcon = Wrapper((_sass_icons_indicators_ic_momentum_svg__WEBPACK_IMPORTED_MODULE_192___default()));\nconst IndicatorCatTrendLightIcon = Wrapper((_sass_icons_indicators_ic_trend_light_svg__WEBPACK_IMPORTED_MODULE_193___default()));\nconst IndicatorCatTrendDarkIcon = Wrapper((_sass_icons_indicators_ic_trend_dark_svg__WEBPACK_IMPORTED_MODULE_194___default()));\nconst IndicatorCatVolatilityIcon = Wrapper((_sass_icons_indicators_ic_volatility_svg__WEBPACK_IMPORTED_MODULE_195___default()));\nconst IndicatorCatAveragesIcon = Wrapper((_sass_icons_indicators_ic_cat_averages_svg__WEBPACK_IMPORTED_MODULE_196___default()));\nconst IndicatorCatOtherIcon = Wrapper((_sass_icons_indicators_ic_other_svg__WEBPACK_IMPORTED_MODULE_197___default()));\nconst IndicatorAwesomeOscillatorIcon = Wrapper((_sass_icons_indicators_ic_awesome_oscillator_svg__WEBPACK_IMPORTED_MODULE_198___default()));\nconst IndicatorDTrendedIcon = Wrapper((_sass_icons_indicators_ic_dtrended_svg__WEBPACK_IMPORTED_MODULE_199___default()));\nconst IndicatorGatorIcon = Wrapper((_sass_icons_indicators_ic_gator_svg__WEBPACK_IMPORTED_MODULE_200___default()));\nconst IndicatorMacdIcon = Wrapper((_sass_icons_indicators_ic_macd_svg__WEBPACK_IMPORTED_MODULE_201___default()));\nconst IndicatorRateChangeIcon = Wrapper((_sass_icons_indicators_ic_rate_of_change_svg__WEBPACK_IMPORTED_MODULE_202___default()));\nconst IndicatorRSIIcon = Wrapper((_sass_icons_indicators_ic_rsi_svg__WEBPACK_IMPORTED_MODULE_203___default()));\nconst IndicatorStochasticOscillatorIcon = Wrapper((_sass_icons_indicators_ic_stochastic_oscillator_svg__WEBPACK_IMPORTED_MODULE_204___default()));\nconst IndicatorStochasticMomentumIcon = Wrapper((_sass_icons_indicators_ic_stochastic_momentum_svg__WEBPACK_IMPORTED_MODULE_205___default()));\nconst IndicatorWilliamPercentIcon = Wrapper((_sass_icons_indicators_ic_william_percent_svg__WEBPACK_IMPORTED_MODULE_206___default()));\nconst IndicatorAroonIcon = Wrapper((_sass_icons_indicators_ic_aroon_svg__WEBPACK_IMPORTED_MODULE_207___default()));\nconst IndicatorAdxIcon = Wrapper((_sass_icons_indicators_ic_adx_svg__WEBPACK_IMPORTED_MODULE_208___default()));\nconst IndicatorCommodityChannelIndexIcon = Wrapper((_sass_icons_indicators_ic_commodity_channel_index_svg__WEBPACK_IMPORTED_MODULE_209___default()));\nconst IndicatorIchimokuIcon = Wrapper((_sass_icons_indicators_ic_ichimoku_svg__WEBPACK_IMPORTED_MODULE_210___default()));\nconst IndicatorParabolicIcon = Wrapper((_sass_icons_indicators_ic_parabolic_svg__WEBPACK_IMPORTED_MODULE_211___default()));\nconst IndicatorZigZagIcon = Wrapper((_sass_icons_indicators_ic_zig_zag_svg__WEBPACK_IMPORTED_MODULE_212___default()));\nconst IndicatorBollingerIcon = Wrapper((_sass_icons_indicators_ic_bollinger_svg__WEBPACK_IMPORTED_MODULE_213___default()));\nconst IndicatorDonchianIcon = Wrapper((_sass_icons_indicators_ic_donchian_svg__WEBPACK_IMPORTED_MODULE_214___default()));\nconst IndicatorAveragesIcon = Wrapper((_sass_icons_indicators_ic_averages_svg__WEBPACK_IMPORTED_MODULE_215___default()));\nconst IndicatorEnvelopeIcon = Wrapper((_sass_icons_indicators_ic_envelope_svg__WEBPACK_IMPORTED_MODULE_216___default()));\nconst IndicatorAlligatorIcon = Wrapper((_sass_icons_indicators_ic_alligator_svg__WEBPACK_IMPORTED_MODULE_217___default()));\nconst IndicatorFractalChaosIcon = Wrapper((_sass_icons_indicators_ic_fractal_chaos_svg__WEBPACK_IMPORTED_MODULE_218___default()));\nconst IndicatorRainbowIcon = Wrapper((_sass_icons_indicators_ic_rainbow_svg__WEBPACK_IMPORTED_MODULE_219___default()));\nconst MetalIcon = Wrapper((_sass_icons_active_symbols_metals_ic_metal_svg__WEBPACK_IMPORTED_MODULE_109___default()));\nconst EmptyStateIcon = Wrapper((_sass_icons_shape_ic_empty_state_svg__WEBPACK_IMPORTED_MODULE_170___default()));\nconst OverwriteStateIcon = Wrapper((_sass_icons_shape_ic_overwrite_state_svg__WEBPACK_IMPORTED_MODULE_171___default()));\nconst ArrowGreenIcon = Wrapper((_sass_icons_arrows_ic_arrow_green_svg__WEBPACK_IMPORTED_MODULE_77___default()));\nconst ArrowOrangeIcon = Wrapper((_sass_icons_arrows_ic_arrow_orange_svg__WEBPACK_IMPORTED_MODULE_78___default()));\nconst DrawToolsChannelIcon = Wrapper((_sass_icons_draw_tools_ic_channel_svg__WEBPACK_IMPORTED_MODULE_220___default()));\nconst DrawToolsContinuousIcon = Wrapper((_sass_icons_draw_tools_ic_continuous_svg__WEBPACK_IMPORTED_MODULE_221___default()));\nconst DrawToolsFibonaccifanIcon = Wrapper((_sass_icons_draw_tools_ic_fibonacci_fan_svg__WEBPACK_IMPORTED_MODULE_222___default()));\nconst DrawToolsHorizontalIcon = Wrapper((_sass_icons_draw_tools_ic_horizontal_svg__WEBPACK_IMPORTED_MODULE_223___default()));\nconst DrawToolsLineIcon = Wrapper((_sass_icons_draw_tools_ic_line_svg__WEBPACK_IMPORTED_MODULE_224___default()));\nconst DrawToolsRayIcon = Wrapper((_sass_icons_draw_tools_ic_ray_svg__WEBPACK_IMPORTED_MODULE_225___default()));\nconst DrawToolsRectangleIcon = Wrapper((_sass_icons_draw_tools_ic_rectangle_svg__WEBPACK_IMPORTED_MODULE_226___default()));\nconst DrawToolsTrendIcon = Wrapper((_sass_icons_draw_tools_ic_trend_svg__WEBPACK_IMPORTED_MODULE_227___default()));\nconst DrawToolsVerticalIcon = Wrapper((_sass_icons_draw_tools_ic_vertical_svg__WEBPACK_IMPORTED_MODULE_228___default()));\nconst alertIconMap = {\n  info: Wrapper((_sass_icons_alert_message_info_svg__WEBPACK_IMPORTED_MODULE_64___default())),\n  success: Wrapper((_sass_icons_alert_message_success_svg__WEBPACK_IMPORTED_MODULE_63___default())),\n  warning: Wrapper((_sass_icons_alert_message_warning_svg__WEBPACK_IMPORTED_MODULE_61___default())),\n  error: Wrapper((_sass_icons_alert_message_error_svg__WEBPACK_IMPORTED_MODULE_62___default()))\n};\nconst SymbolPlaceholderIcon = Wrapper((_sass_icons_placeholder_ic_placeholder_svg__WEBPACK_IMPORTED_MODULE_79___default()));\nconst CategoryIconMap = {\n  active: Wrapper((_sass_icons_common_ic_active_svg__WEBPACK_IMPORTED_MODULE_38___default())),\n  commodities: Wrapper((_sass_icons_sidebar_commodities_ic_commodities_normal_svg__WEBPACK_IMPORTED_MODULE_40___default())),\n  cryptocurrency: Wrapper((_sass_icons_sidebar_cryptocurrency_ic_cryptocurrency_normal_svg__WEBPACK_IMPORTED_MODULE_39___default())),\n  favorite: Wrapper((_sass_icons_favorite_ic_favorite_normal_svg__WEBPACK_IMPORTED_MODULE_35___default())),\n  forex: Wrapper((_sass_icons_sidebar_forex_ic_forex_normal_svg__WEBPACK_IMPORTED_MODULE_41___default())),\n  basket_index: Wrapper((_sass_icons_sidebar_basket_index_ic_basket_normal_svg__WEBPACK_IMPORTED_MODULE_42___default())),\n  indices: Wrapper((_sass_icons_sidebar_indices_ic_indices_normal_svg__WEBPACK_IMPORTED_MODULE_44___default())),\n  stocks: Wrapper((_sass_icons_sidebar_otc_ic_otc_normal_svg__WEBPACK_IMPORTED_MODULE_45___default())),\n  volidx: Wrapper((_sass_icons_sidebar_volatility_ic_volatility_normal_svg__WEBPACK_IMPORTED_MODULE_47___default())),\n  synthetic_index: Wrapper((_sass_icons_sidebar_synth_index_ic_synth_normal_svg__WEBPACK_IMPORTED_MODULE_46___default())),\n  indicators: Wrapper((_sass_icons_common_ic_indicators_svg__WEBPACK_IMPORTED_MODULE_58___default()))\n};\nconst SettingCountdownMap = {\n  light: {\n    normal: Wrapper((_sass_icons_setting_countdown_ic_countdown_light_normal_svg__WEBPACK_IMPORTED_MODULE_180___default())),\n    active: Wrapper((_sass_icons_setting_countdown_ic_countdown_light_active_svg__WEBPACK_IMPORTED_MODULE_181___default()))\n  },\n  dark: {\n    normal: Wrapper((_sass_icons_setting_countdown_ic_countdown_dark_normal_svg__WEBPACK_IMPORTED_MODULE_182___default())),\n    active: Wrapper((_sass_icons_setting_countdown_ic_countdown_dark_active_svg__WEBPACK_IMPORTED_MODULE_183___default()))\n  }\n};\nconst SettingHistoricalMap = {\n  light: {\n    normal: Wrapper((_sass_icons_setting_historical_ic_historical_light_normal_svg__WEBPACK_IMPORTED_MODULE_184___default())),\n    active: Wrapper((_sass_icons_setting_historical_ic_historical_light_active_svg__WEBPACK_IMPORTED_MODULE_185___default()))\n  },\n  dark: {\n    normal: Wrapper((_sass_icons_setting_historical_ic_historical_dark_normal_svg__WEBPACK_IMPORTED_MODULE_186___default())),\n    active: Wrapper((_sass_icons_setting_historical_ic_historical_dark_active_svg__WEBPACK_IMPORTED_MODULE_187___default()))\n  }\n};\nconst SettingHighestLowestMap = {\n  light: {\n    normal: Wrapper((_sass_icons_setting_highest_lowest_ic_highest_lowest_light_normal_svg__WEBPACK_IMPORTED_MODULE_188___default())),\n    active: Wrapper((_sass_icons_setting_highest_lowest_ic_highest_lowest_light_active_svg__WEBPACK_IMPORTED_MODULE_189___default()))\n  },\n  dark: {\n    normal: Wrapper((_sass_icons_setting_highest_lowest_ic_highest_lowest_dark_normal_svg__WEBPACK_IMPORTED_MODULE_190___default())),\n    active: Wrapper((_sass_icons_setting_highest_lowest_ic_highest_lowest_dark_active_svg__WEBPACK_IMPORTED_MODULE_191___default()))\n  }\n};\nconst FlagIconMap = {\n  AUD: Wrapper((_sass_icons_flags_aud_svg__WEBPACK_IMPORTED_MODULE_80___default())),\n  CAD: Wrapper((_sass_icons_flags_cad_svg__WEBPACK_IMPORTED_MODULE_81___default())),\n  CHF: Wrapper((_sass_icons_flags_chf_svg__WEBPACK_IMPORTED_MODULE_82___default())),\n  EUR: Wrapper((_sass_icons_flags_eur_svg__WEBPACK_IMPORTED_MODULE_83___default())),\n  GBP: Wrapper((_sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_84___default())),\n  JPY: Wrapper((_sass_icons_flags_jpy_svg__WEBPACK_IMPORTED_MODULE_85___default())),\n  MXN: Wrapper((_sass_icons_flags_mxn_svg__WEBPACK_IMPORTED_MODULE_86___default())),\n  NOK: Wrapper((_sass_icons_flags_nok_svg__WEBPACK_IMPORTED_MODULE_87___default())),\n  NZD: Wrapper((_sass_icons_flags_nzd_svg__WEBPACK_IMPORTED_MODULE_88___default())),\n  PLN: Wrapper((_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_89___default())),\n  SEK: Wrapper((_sass_icons_flags_sek_svg__WEBPACK_IMPORTED_MODULE_90___default())),\n  USD: Wrapper((_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_91___default())),\n  XAU: Wrapper((_sass_icons_flags_xau_svg__WEBPACK_IMPORTED_MODULE_92___default())),\n  HongKong: Wrapper((_sass_icons_flags_hong_kong_svg__WEBPACK_IMPORTED_MODULE_103___default())),\n  Dutch: Wrapper((_sass_icons_flags_dutch_svg__WEBPACK_IMPORTED_MODULE_105___default())),\n  German: Wrapper((_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_102___default())),\n  French: Wrapper((_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_104___default())),\n  Spanish: Wrapper((_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_106___default())),\n  WallStreet: Wrapper((_sass_icons_flags_wallstreet_svg__WEBPACK_IMPORTED_MODULE_107___default()))\n};\nconst FlagIcons = {\n  USD: Wrapper((_sass_icons_flags_usd_svg__WEBPACK_IMPORTED_MODULE_91___default())),\n  GBP: Wrapper((_sass_icons_flags_gbp_svg__WEBPACK_IMPORTED_MODULE_84___default())),\n  German: Wrapper((_sass_icons_flags_german_svg__WEBPACK_IMPORTED_MODULE_102___default())),\n  French: Wrapper((_sass_icons_flags_french_svg__WEBPACK_IMPORTED_MODULE_104___default())),\n  Russia: Wrapper((_sass_icons_flags_russia_svg__WEBPACK_IMPORTED_MODULE_93___default())),\n  Thailand: Wrapper((_sass_icons_flags_thailand_svg__WEBPACK_IMPORTED_MODULE_94___default())),\n  Turkey: Wrapper((_sass_icons_flags_turkey_svg__WEBPACK_IMPORTED_MODULE_95___default())),\n  Indonesia: Wrapper((_sass_icons_flags_indonesia_svg__WEBPACK_IMPORTED_MODULE_96___default())),\n  Vietnam: Wrapper((_sass_icons_flags_vietnam_svg__WEBPACK_IMPORTED_MODULE_97___default())),\n  Italy: Wrapper((_sass_icons_flags_italy_svg__WEBPACK_IMPORTED_MODULE_98___default())),\n  Korean: Wrapper((_sass_icons_flags_korean_svg__WEBPACK_IMPORTED_MODULE_99___default())),\n  Chinese: Wrapper((_sass_icons_flags_chinese_svg__WEBPACK_IMPORTED_MODULE_100___default())),\n  ChineseTraditional: Wrapper((_sass_icons_flags_chinese_traditional_svg__WEBPACK_IMPORTED_MODULE_101___default())),\n  Poland: Wrapper((_sass_icons_flags_pln_svg__WEBPACK_IMPORTED_MODULE_89___default())),\n  Spanish: Wrapper((_sass_icons_flags_spanish_svg__WEBPACK_IMPORTED_MODULE_106___default()))\n};\nconst ItemIconMap = {\n  SPC: FlagIconMap.USD,\n  AS51: FlagIconMap.AUD,\n  HSI: FlagIconMap.HongKong,\n  N225: FlagIconMap.JPY,\n  AEX: FlagIconMap.Dutch,\n  FCHI: FlagIconMap.French,\n  SSMI: FlagIconMap.CHF,\n  GDAXI: FlagIconMap.German,\n\n  /* Commodities */\n  frxBROUSD: Wrapper((_sass_icons_active_symbols_energy_oil_usd_ic_oilusd_svg__WEBPACK_IMPORTED_MODULE_108___default())),\n  frxXAUUSD: MetalIcon,\n  frxXPDUSD: MetalIcon,\n  frxXPTUSD: MetalIcon,\n  frxXAGUSD: MetalIcon,\n\n  /* Volatility Indices */\n  R_10: Wrapper((_sass_icons_active_symbols_volatility_10_index_ic_10_index_v_svg__WEBPACK_IMPORTED_MODULE_110___default())),\n  R_25: Wrapper((_sass_icons_active_symbols_volatility_25_index_ic_25_index_v_svg__WEBPACK_IMPORTED_MODULE_111___default())),\n  R_50: Wrapper((_sass_icons_active_symbols_volatility_50_index_ic_50_index_v_svg__WEBPACK_IMPORTED_MODULE_112___default())),\n  R_75: Wrapper((_sass_icons_active_symbols_volatility_75_index_ic_75_index_v_svg__WEBPACK_IMPORTED_MODULE_113___default())),\n  R_100: Wrapper((_sass_icons_active_symbols_volatility_100_index_ic_100_index_v_svg__WEBPACK_IMPORTED_MODULE_114___default())),\n  '1HZ10V': Wrapper((_sass_icons_active_symbols_volatility_1s10_index_ic_10_1s_index_svg__WEBPACK_IMPORTED_MODULE_115___default())),\n  '1HZ25V': Wrapper((_sass_icons_active_symbols_volatility_1s25_index_light_25_1s_index_svg__WEBPACK_IMPORTED_MODULE_116___default())),\n  '1HZ50V': Wrapper((_sass_icons_active_symbols_volatility_1s50_index_light_50_1s_index_svg__WEBPACK_IMPORTED_MODULE_117___default())),\n  '1HZ75V': Wrapper((_sass_icons_active_symbols_volatility_1s75_index_light_75_1s_index_svg__WEBPACK_IMPORTED_MODULE_118___default())),\n  '1HZ100V': Wrapper((_sass_icons_active_symbols_volatility_1s100_index_ic_100_1s_index_svg__WEBPACK_IMPORTED_MODULE_119___default())),\n  '1HZ150V': Wrapper((_sass_icons_active_symbols_volatility_1s150_index_ic_150_1s_index_svg__WEBPACK_IMPORTED_MODULE_120___default())),\n  '1HZ200V': Wrapper((_sass_icons_active_symbols_volatility_1s200_index_ic_200_1s_index_svg__WEBPACK_IMPORTED_MODULE_121___default())),\n  '1HZ250V': Wrapper((_sass_icons_active_symbols_volatility_1s250_index_ic_250_1s_index_svg__WEBPACK_IMPORTED_MODULE_122___default())),\n  '1HZ300V': Wrapper((_sass_icons_active_symbols_volatility_1s300_index_ic_300_1s_index_svg__WEBPACK_IMPORTED_MODULE_123___default())),\n  BOOM300N: Wrapper((_sass_icons_active_symbols_volatility_boom300_index_boom300_index_svg__WEBPACK_IMPORTED_MODULE_127___default())),\n  BOOM500: Wrapper((_sass_icons_active_symbols_volatility_boom500_index_boom500_index_svg__WEBPACK_IMPORTED_MODULE_128___default())),\n  BOOM1000: Wrapper((_sass_icons_active_symbols_volatility_boom1000_index_boom1000_index_svg__WEBPACK_IMPORTED_MODULE_129___default())),\n  CRASH300N: Wrapper((_sass_icons_active_symbols_volatility_crash300_index_crash300_index_svg__WEBPACK_IMPORTED_MODULE_124___default())),\n  CRASH500: Wrapper((_sass_icons_active_symbols_volatility_crash500_index_crash500_index_svg__WEBPACK_IMPORTED_MODULE_125___default())),\n  CRASH1000: Wrapper((_sass_icons_active_symbols_volatility_crash1000_index_crash1000_index_svg__WEBPACK_IMPORTED_MODULE_126___default())),\n  RDBEAR: Wrapper((_sass_icons_active_symbols_volatility_bear_market_ic_marketbear_svg__WEBPACK_IMPORTED_MODULE_130___default())),\n  RDBULL: Wrapper((_sass_icons_active_symbols_volatility_bull_market_ic_marketbull_svg__WEBPACK_IMPORTED_MODULE_131___default())),\n  stpRNG: Wrapper((_sass_icons_active_symbols_volatility_step_index_step_index_svg__WEBPACK_IMPORTED_MODULE_132___default())),\n  JD10: Wrapper((_sass_icons_active_symbols_volatility_jd10_index_ic_10_index_svg__WEBPACK_IMPORTED_MODULE_133___default())),\n  JD25: Wrapper((_sass_icons_active_symbols_volatility_jd25_index_ic_25_index_svg__WEBPACK_IMPORTED_MODULE_134___default())),\n  JD50: Wrapper((_sass_icons_active_symbols_volatility_jd50_index_ic_50_index_svg__WEBPACK_IMPORTED_MODULE_135___default())),\n  JD75: Wrapper((_sass_icons_active_symbols_volatility_jd75_index_ic_75_index_svg__WEBPACK_IMPORTED_MODULE_136___default())),\n  JD100: Wrapper((_sass_icons_active_symbols_volatility_jd100_index_ic_100_index_svg__WEBPACK_IMPORTED_MODULE_137___default())),\n  JD150: Wrapper((_sass_icons_active_symbols_volatility_jd150_index_ic_150_index_svg__WEBPACK_IMPORTED_MODULE_138___default())),\n  JD200: Wrapper((_sass_icons_active_symbols_volatility_jd200_index_ic_200_index_svg__WEBPACK_IMPORTED_MODULE_139___default())),\n\n  /* Cryptocurrency Indices */\n  cryBNBUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_bnbusd_svg__WEBPACK_IMPORTED_MODULE_140___default())),\n  cryBTCLTC: Wrapper((_sass_icons_active_symbols_cryptos_ic_btcltc_svg__WEBPACK_IMPORTED_MODULE_141___default())),\n  cryIOTUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_iotusd_svg__WEBPACK_IMPORTED_MODULE_142___default())),\n  cryNEOUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_neousd_svg__WEBPACK_IMPORTED_MODULE_143___default())),\n  cryOMGUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_omgusd_svg__WEBPACK_IMPORTED_MODULE_144___default())),\n  cryTRXUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_trxusd_svg__WEBPACK_IMPORTED_MODULE_145___default())),\n  cryBTCETH: Wrapper((_sass_icons_active_symbols_cryptos_ic_btceth_svg__WEBPACK_IMPORTED_MODULE_149___default())),\n  cryZECUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_zecusd_svg__WEBPACK_IMPORTED_MODULE_148___default())),\n  cryXMRUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_xmrusd_svg__WEBPACK_IMPORTED_MODULE_147___default())),\n  cryXLMUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_xlmusd_svg__WEBPACK_IMPORTED_MODULE_146___default())),\n  cryDSHUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_dshusd_svg__WEBPACK_IMPORTED_MODULE_150___default())),\n  cryETHUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_ethusd_svg__WEBPACK_IMPORTED_MODULE_151___default())),\n  cryBCHUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_bchusd_svg__WEBPACK_IMPORTED_MODULE_152___default())),\n  cryLTCUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_ltcusd_svg__WEBPACK_IMPORTED_MODULE_153___default())),\n  cryEOSUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_eosusd_svg__WEBPACK_IMPORTED_MODULE_154___default())),\n  cryXRPUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_xrpusd_svg__WEBPACK_IMPORTED_MODULE_155___default())),\n  cryBTCUSD: Wrapper((_sass_icons_active_symbols_cryptos_ic_btcusd_svg__WEBPACK_IMPORTED_MODULE_156___default())),\n\n  /* Stock Indices */\n  OTC_AEX: Wrapper((_sass_icons_active_symbols_stock_indices_ic_netherland_25_svg__WEBPACK_IMPORTED_MODULE_162___default())),\n  OTC_FTSE: Wrapper((_sass_icons_active_symbols_stock_indices_ic_uk_100_svg__WEBPACK_IMPORTED_MODULE_160___default())),\n  OTC_SX5E: Wrapper((_sass_icons_active_symbols_stock_indices_ic_euro_50_svg__WEBPACK_IMPORTED_MODULE_167___default())),\n  OTC_FCHI: Wrapper((_sass_icons_active_symbols_stock_indices_ic_france_40_svg__WEBPACK_IMPORTED_MODULE_166___default())),\n  OTC_GDAXI: Wrapper((_sass_icons_active_symbols_stock_indices_ic_germany_40_svg__WEBPACK_IMPORTED_MODULE_165___default())),\n  OTC_N225: Wrapper((_sass_icons_active_symbols_stock_indices_ic_japan_225_svg__WEBPACK_IMPORTED_MODULE_163___default())),\n  OTC_SPC: Wrapper((_sass_icons_active_symbols_stock_indices_ic_usd_500_svg__WEBPACK_IMPORTED_MODULE_157___default())),\n  OTC_DJI: Wrapper((_sass_icons_active_symbols_stock_indices_ic_wallstreet_30_svg__WEBPACK_IMPORTED_MODULE_159___default())),\n  OTC_NDX: Wrapper((_sass_icons_active_symbols_stock_indices_ic_usd_tech_100_svg__WEBPACK_IMPORTED_MODULE_158___default())),\n  OTC_SSMI: Wrapper((_sass_icons_active_symbols_stock_indices_ic_swiss_20_svg__WEBPACK_IMPORTED_MODULE_161___default())),\n  OTC_HSI: Wrapper((_sass_icons_active_symbols_stock_indices_ic_hong_kong_50_svg__WEBPACK_IMPORTED_MODULE_164___default())),\n  OTC_AS51: Wrapper((_sass_icons_active_symbols_stock_indices_ic_australian_200_svg__WEBPACK_IMPORTED_MODULE_168___default()))\n};\n\nconst createCompositeIcon = (A, B, icId) => {\n  const FC = props => {\n    const {\n      className,\n      ...p\n    } = props;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", _extends({\n      className: `${icId} ${className}`\n    }, p), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(A, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(B, null));\n  };\n\n  return FC;\n};\n\nfunction frx(flagA, flagB) {\n  const A = FlagIconMap[flagA];\n  const B = FlagIconMap[flagB];\n  ItemIconMap[`frx${flagA}${flagB}`] = createCompositeIcon(A, B, 'ic-frx');\n}\n\nconst OTCBadgeIcon = Wrapper((_sass_icons_active_symbols_ic_otcbadge_svg__WEBPACK_IMPORTED_MODULE_169___default()));\nconst BasketIndexIcon = Wrapper((_sass_icons_sidebar_basket_index_ic_basket_active_svg__WEBPACK_IMPORTED_MODULE_43___default()));\n\nfunction wld(flag) {\n  const FlagIcon = FlagIconMap[flag];\n  ItemIconMap[`WLD${flag}`] = createCompositeIcon(BasketIndexIcon, FlagIcon, 'ic-wld');\n}\n/* Basket Indices */\n\n/* Forex Basket */\n\n\nwld('AUD');\nwld('EUR');\nwld('GBP');\nwld('USD');\n/* Commodities Basket */\n\nwld('XAU');\n/* FOREX */\n\n/* Major Pairs */\n\nfrx('AUD', 'JPY');\nfrx('AUD', 'USD');\nfrx('EUR', 'AUD');\nfrx('EUR', 'CHF');\nfrx('EUR', 'JPY');\nfrx('EUR', 'CAD');\nfrx('EUR', 'GBP');\nfrx('EUR', 'USD');\nfrx('GBP', 'AUD');\nfrx('GBP', 'JPY');\nfrx('GBP', 'USD');\nfrx('USD', 'CAD');\nfrx('USD', 'CHF');\nfrx('USD', 'JPY');\n/* Minor Pairs */\n\nfrx('AUD', 'CAD');\nfrx('AUD', 'CHF');\nfrx('AUD', 'NZD');\nfrx('AUD', 'PLN');\nfrx('EUR', 'NZD');\nfrx('GBP', 'CAD');\nfrx('GBP', 'CHF');\nfrx('GBP', 'NOK');\nfrx('GBP', 'NZD');\nfrx('GBP', 'PLN');\nfrx('NZD', 'JPY');\nfrx('NZD', 'USD');\nfrx('USD', 'MXN');\nfrx('USD', 'NOK');\nfrx('USD', 'PLN');\nfrx('USD', 'SEK');\nconst ActiveOptionsIconMap = {\n  delete: DeleteIcon,\n  edit: EditIcon\n};\n\n/***/ }),\n\n/***/ \"./src/components/IndicatorPredictionDialog.tsx\":\n/*!******************************************************!*\\\n  !*** ./src/components/IndicatorPredictionDialog.tsx ***!\n  \\******************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_730723__) => {\n\n\"use strict\";\n__nested_webpack_require_730723__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_730723__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_730723__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_730723__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_730723__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_730723__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_indicator_prediction_dialog_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_730723__(/*! ../../sass/components/_indicator_prediction_dialog.scss */ \"./sass/components/_indicator_prediction_dialog.scss\");\n/* harmony import */ var _sass_components_indicator_prediction_dialog_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_730723__.n(_sass_components_indicator_prediction_dialog_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_730723__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_730723__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\nconst IndicatorPredictionDialog = () => {\n  const {\n    timeperiod\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    menuStore,\n    dialogPortalNodeId,\n    handleCancel: onCancel,\n    handleContinue: onContinue\n  } = timeperiod.predictionIndicator;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    store: menuStore,\n    className: \"cq-dialog--indicator-prediction\",\n    modalMode: true,\n    emptyMenu: true,\n    portalNodeId: dialogPortalNodeId\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Title, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_4__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-indicator-prediction\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"strong\", null, t.translate('Are you sure?')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"p\", null, t.translate('Some of your active indicators don’t support 1-tick intervals. If you change to a 1-tick interval, these indicators will be removed from your chart.')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-indicator-prediction__footer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--outline-secondary\",\n    onClick: onCancel\n  }, t.translate('Cancel')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--primary\",\n    onClick: onContinue\n  }, t.translate('Continue'))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(IndicatorPredictionDialog));\n\n/***/ }),\n\n/***/ \"./src/components/LastDigitStats.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/LastDigitStats.tsx ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_734500__) => {\n\n\"use strict\";\n__nested_webpack_require_734500__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_734500__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_734500__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_734500__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_734500__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_734500__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_734500__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_734500__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_734500__(/*! ../../sass/components/_last-digits.scss */ \"./sass/components/_last-digits.scss\");\n/* harmony import */ var _sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_734500__.n(_sass_components_last_digits_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* provided dependency */ var t = __nested_webpack_require_734500__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\nconst Bar = _ref => {\n  let {\n    x,\n    bar\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `cq-bar ${bar.cName}`,\n    style: {\n      height: `${bar.height * 5}%`,\n      left: x * 35\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `cq-bar-value ${bar.height && 'show'}`\n  }, `${bar.height.toFixed(1)}%`), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"cq-bar-title\"\n  }, x));\n};\n\nconst LastDigitStats = () => {\n  const {\n    lastDigitStats\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    isVisible,\n    bars,\n    marketDisplayName,\n    shouldMinimiseLastDigits\n  } = lastDigitStats;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('cq-last-digits', {\n      show: isVisible,\n      minimised: shouldMinimiseLastDigits\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-bars\"\n  }, bars.map((bar, idx) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Bar, {\n    key: `bar-${idx}` // eslint-disable-line react/no-array-index-key\n    ,\n    x: idx,\n    bar: bar\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-bar-footer\"\n  }, t.translate('Last digits stats for latest 1000 ticks on ') + marketDisplayName));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(LastDigitStats));\n\n/***/ }),\n\n/***/ \"./src/components/List.tsx\":\n/*!*********************************!*\\\n  !*** ./src/components/List.tsx ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_738017__) => {\n\n\"use strict\";\n__nested_webpack_require_738017__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_738017__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_738017__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_738017__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_738017__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_738017__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_738017__(/*! ../../sass/components/_ciq-list.scss */ \"./sass/components/_ciq-list.scss\");\n/* harmony import */ var _sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_738017__.n(_sass_components_ciq_list_scss__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n\nconst List = _ref => {\n  let {\n    height,\n    store,\n    children\n  } = _ref;\n  const {\n    getItems,\n    onItemClick\n  } = store;\n  const renderRow = typeof children === 'function' ? children : item => item.text;\n\n  const itemClassName = it => // eslint-disable-next-line no-useless-concat\n  'ciq-list-item' + ` ${it.disabled ? 'disabled' : ''}` + ` ${it.active ? 'active' : ''}`;\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    className: \"ciq-list\",\n    autoHide: true,\n    height: height ? `${height}px` : ''\n  }, getItems().map((it, idx) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: it.id,\n    className: itemClassName(it),\n    onClick: () => onItemClick(idx, it)\n  }, renderRow(it))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(List));\n\n/***/ }),\n\n/***/ \"./src/components/Loader.tsx\":\n/*!***********************************!*\\\n  !*** ./src/components/Loader.tsx ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_740378__) => {\n\n\"use strict\";\n__nested_webpack_require_740378__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_740378__.d(__nested_webpack_exports__, {\n/* harmony export */   \"InlineLoader\": () => (/* binding */ InlineLoader),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_740378__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_740378__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_740378__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_740378__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_740378__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_740378__(/*! src/store */ \"./src/store/index.ts\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\nconst InlineLoader = _ref => {\n  let {\n    children,\n    className,\n    enabled = true,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-inline-loader', className, {\n      'sc-inline-loader--enable': enabled\n    })\n  }, props), children, enabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-inline-loader__inner\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-inline-loader__inner__bullet\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-inline-loader__inner__bullet\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-inline-loader__inner__bullet\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-inline-loader__inner__bullet\"\n  })));\n};\n\nconst Loader = () => {\n  const {\n    loader\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    isActive,\n    currentState\n  } = loader;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-loader', {\n      show: isActive\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-loader-spin\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-loader-status\"\n  }, currentState));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Loader));\n\n/***/ }),\n\n/***/ \"./src/components/MarketOpeningTimeCounter.tsx\":\n/*!*****************************************************!*\\\n  !*** ./src/components/MarketOpeningTimeCounter.tsx ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_743981__) => {\n\n\"use strict\";\n__nested_webpack_require_743981__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_743981__.d(__nested_webpack_exports__, {\n/* harmony export */   \"MarketOpeningTimeCounter\": () => (/* binding */ MarketOpeningTimeCounter)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_743981__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_743981__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_743981__(/*! ../utils/index */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_743981__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.ts\");\n\n\n\nconst MarketOpeningTimeCounter = _ref => {\n  let {\n    symbolOpenTime\n  } = _ref;\n  const [time, setTime] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(0);\n  const timeUntilOpenTime = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => {\n    let output = null;\n    const {\n      openTime\n    } = symbolOpenTime || {};\n\n    if (openTime) {\n      output = (0,_utils_index__WEBPACK_IMPORTED_MODULE_1__.displayMilliseconds)(openTime.getTime() - time);\n    }\n\n    return output;\n  }, [symbolOpenTime, time]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    const serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getInstance();\n    const timer = setInterval(() => setTime(serverTime.getLocalDate().getTime()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, timeUntilOpenTime);\n};\n\n/***/ }),\n\n/***/ \"./src/components/Menu.tsx\":\n/*!*********************************!*\\\n  !*** ./src/components/Menu.tsx ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_745947__) => {\n\n\"use strict\";\n__nested_webpack_require_745947__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_745947__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_745947__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_745947__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_745947__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_745947__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_745947__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_745947__(/*! react-transition-group */ \"react-transition-group\");\n/* harmony import */ var react_transition_group__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_745947__.n(react_transition_group__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_745947__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_745947__.n(classnames__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_745947__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _MenuMobile__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_745947__(/*! ./MenuMobile */ \"./src/components/MenuMobile.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_745947__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_745947__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Dialog__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_745947__(/*! ./Dialog */ \"./src/components/Dialog.tsx\");\n\n\n\n\n\n\n\n\n\n\n\nconst Menu = _ref => {\n  let {\n    store,\n    className,\n    children,\n    title,\n    tooltip,\n    portalNodeId,\n    enabled = true,\n    onMouseEnter,\n    onMouseLeave,\n    enableTabular,\n    customHead,\n    emptyMenu,\n    modalMode\n  } = _ref;\n  const {\n    open,\n    dialogStatus,\n    onTitleClick,\n    handleCloseDialog,\n    dialogStore\n  } = store;\n  const {\n    chartSetting,\n    chart\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_5__.useStores)();\n  const {\n    theme\n  } = chartSetting;\n  const {\n    shouldRenderDialogs,\n    isMobile,\n    context: ready\n  } = chart;\n\n  const onOverlayClick = e => {\n    if (e.target.className === 'cq-modal__overlay') {\n      handleCloseDialog();\n    }\n  };\n\n  if (!ready) return null;\n  const first = react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(children, (child, i) => i === 0 ? child : null);\n  const rest = react__WEBPACK_IMPORTED_MODULE_0___default().Children.map(children, (child, i) => i !== 0 ? child : null);\n\n  if (modalMode) {\n    const portalNode = document.getElementById(portalNodeId || 'smartcharts_modal');\n    if (!portalNode) return null;\n    const newDialog = /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_1___default().createPortal( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: `smartcharts-${theme}`\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_4___default()({\n        'smartcharts-mobile': isMobile,\n        'smartcharts-desktop': !isMobile\n      })\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: classnames__WEBPACK_IMPORTED_MODULE_4___default()('cq-modal-dropdown', className, {\n        stxMenuActive: open\n      })\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"cq-modal__overlay\",\n      onClick: onOverlayClick\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_transition_group__WEBPACK_IMPORTED_MODULE_3__.CSSTransition, {\n      appear: true,\n      in: dialogStatus,\n      timeout: 300,\n      classNames: \"sc-dialog\",\n      unmountOnExit: true\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Dialog__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n      store: dialogStore,\n      title: title,\n      handleCloseDialog: handleCloseDialog,\n      enableTabular: enableTabular,\n      customHead: customHead\n    }, rest)))))), portalNode);\n\n    if (emptyMenu) {\n      return open ? newDialog : null;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n      className: classnames__WEBPACK_IMPORTED_MODULE_4___default()('ciq-menu', className || '', {\n        stxMenuActive: enabled && open,\n        'ciq-enabled': enabled,\n        'ciq-disabled': !enabled\n      }),\n      content: tooltip,\n      enabled: !!tooltip,\n      position: \"right\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"cq-menu-btn\",\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      onClick: enabled ? onTitleClick : () => null\n    }, first), enabled && open && newDialog);\n  }\n\n  const oldDropdown = shouldRenderDialogs ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Dialog__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    className: classnames__WEBPACK_IMPORTED_MODULE_4___default()('cq-menu-dropdown', {\n      'cq-menu-dropdown-enter-done': dialogStatus\n    }),\n    store: dialogStore\n  }, title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"title\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"title-text\"\n  }, title), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.CloseIcon, {\n    className: \"icon-close-menu\",\n    onClick: onTitleClick\n  })), rest) : null;\n  return enabled && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_4___default()('ciq-menu ciq-enabled', className, {\n      stxMenuActive: open\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-menu-btn\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onTitleClick\n  }, first), isMobile && portalNodeId && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_MenuMobile__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: className,\n    open: open,\n    menu_element: oldDropdown,\n    portalNodeId: portalNodeId,\n    onClick: onOverlayClick\n  }) || oldDropdown) || /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_4___default()('ciq-menu ciq-disabled', className)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-menu-btn\",\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, first));\n};\n\nconst MenuSubComponent = _ref2 => {\n  let {\n    children\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, children);\n};\n\nMenu.Title = MenuSubComponent;\nMenu.Body = MenuSubComponent;\nconst ObservedMenu = (0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Menu);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ObservedMenu);\n\n/***/ }),\n\n/***/ \"./src/components/MenuMobile.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/MenuMobile.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_754124__) => {\n\n\"use strict\";\n__nested_webpack_require_754124__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_754124__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_754124__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_754124__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_754124__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_754124__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_754124__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_754124__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_754124__(/*! ../../sass/components/_menu-dropdown.scss */ \"./sass/components/_menu-dropdown.scss\");\n/* harmony import */ var _sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_754124__.n(_sass_components_menu_dropdown_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst MenuMobile = _ref => {\n  let {\n    className,\n    menu_element,\n    portalNodeId,\n    open,\n    onClick\n  } = _ref;\n  const {\n    chartSetting\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    theme\n  } = chartSetting; // fix to remove body background scrolling when scrolling on absolute element\n\n  const disableBodyScroll = () => {\n    if (open) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n  };\n\n  disableBodyScroll();\n  if (!portalNodeId) return menu_element;\n  const portalElement = document.getElementById(portalNodeId);\n  if (!portalElement) return null;\n  return /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_1___default().createPortal( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `smartcharts-portal ${open ? 'smartcharts-portal--open' : ''}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `smartcharts smartcharts-${theme}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"smartcharts-mobile\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `cq-modal-dropdown ${className || ''} ${open ? 'stxMenuActive' : ''}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-modal__overlay\",\n    onClick: onClick\n  }, menu_element))))), portalElement);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(MenuMobile));\n\n/***/ }),\n\n/***/ \"./src/components/NavigationWidget.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/components/NavigationWidget.tsx ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_757504__) => {\n\n\"use strict\";\n__nested_webpack_require_757504__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_757504__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_757504__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_757504__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_757504__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_757504__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_757504__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_757504__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _CrosshairToggle__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_757504__(/*! ./CrosshairToggle */ \"./src/components/CrosshairToggle.tsx\");\n/* harmony import */ var _sass_components_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_757504__(/*! ../../sass/components/_navigation-widget.scss */ \"./sass/components/_navigation-widget.scss\");\n/* harmony import */ var _sass_components_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__nested_webpack_require_757504__.n(_sass_components_navigation_widget_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_757504__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n\n\n\n\n\n\n\n\nconst NavigationWidget = _ref => {\n  let {\n    onCrosshairChange\n  } = _ref;\n  const {\n    chart,\n    chartSize,\n    navigationWidget,\n    chartSetting,\n    chartAdapter\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    context,\n    startWithDataFitMode\n  } = chart;\n  const {\n    zoomIn,\n    zoomOut\n  } = chartSize;\n  const {\n    historical\n  } = chartSetting;\n  const {\n    onMouseEnter,\n    onMouseLeave\n  } = navigationWidget;\n  const {\n    isDataFitModeEnabled,\n    toggleDataFitMode\n  } = chartAdapter;\n  return context ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-navigation-widget', {\n      'sc-navigation-widget__item--indent': historical\n    }),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-navigation-widget__item', 'sc-navigation-widget__item--scale', {\n      'sc-navigation-widget__item--hidden': !startWithDataFitMode,\n      'sc-navigation-widget__item--disabled': isDataFitModeEnabled\n    }),\n    onClick: toggleDataFitMode\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.ScaleIcon, null)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-navigation-widget__item sc-navigation-widget__item--zoom\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.ZoominIcon, {\n    onClick: zoomIn\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_CrosshairToggle__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    onChange: onCrosshairChange\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.ZoomoutIcon, {\n    onClick: zoomOut\n  }))) : null;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(NavigationWidget));\n\n/***/ }),\n\n/***/ \"./src/components/NotificationBadge.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/components/NotificationBadge.tsx ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_761737__) => {\n\n\"use strict\";\n__nested_webpack_require_761737__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_761737__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_761737__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_761737__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_761737__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_761737__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nconst NotificationBadge = _ref => {\n  let {\n    notificationCount\n  } = _ref;\n  return notificationCount ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-notification-badge', {\n      x2: notificationCount > 9\n    })\n  }, notificationCount) : null;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NotificationBadge);\n\n/***/ }),\n\n/***/ \"./src/components/PaginationLoader.tsx\":\n/*!*********************************************!*\\\n  !*** ./src/components/PaginationLoader.tsx ***!\n  \\*********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_763234__) => {\n\n\"use strict\";\n__nested_webpack_require_763234__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_763234__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_763234__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_763234__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_763234__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_763234__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _FastMarker__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_763234__(/*! ./FastMarker */ \"./src/components/FastMarker.tsx\");\n/* harmony import */ var _sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_763234__(/*! ../../sass/components/_pagination-loader.scss */ \"./sass/components/_pagination-loader.scss\");\n/* harmony import */ var _sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_763234__.n(_sass_components_pagination_loader_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst PaginationLoader = () => {\n  const {\n    paginationLoader\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    isOnPagination,\n    setRef\n  } = paginationLoader;\n  return isOnPagination ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FastMarker__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    markerRef: setRef,\n    className: \"pagination\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"pagination__loader\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"pagination__loader-background\"\n  }))) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(PaginationLoader));\n\n/***/ }),\n\n/***/ \"./src/components/PriceLine.tsx\":\n/*!**************************************!*\\\n  !*** ./src/components/PriceLine.tsx ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_765770__) => {\n\n\"use strict\";\n__nested_webpack_require_765770__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_765770__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_765770__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_765770__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_765770__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_765770__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_765770__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _PriceLineArrow__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_765770__(/*! ./PriceLineArrow */ \"./src/components/PriceLineArrow.tsx\");\n/* harmony import */ var _PriceLineTitle__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_765770__(/*! ./PriceLineTitle */ \"./src/components/PriceLineTitle.tsx\");\n/* harmony import */ var _HamburgerDragIcon__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_765770__(/*! ./HamburgerDragIcon */ \"./src/components/HamburgerDragIcon.tsx\");\n\n\n\n\n\n\n\nconst PriceLine = _ref => {\n  let {\n    lineStyle,\n    color,\n    foregroundColor,\n    hideOffscreenBarrier,\n    opacityOnOverlap,\n    hideOffscreenLine,\n    hideBarrierLine,\n    store\n  } = _ref;\n  const {\n    className,\n    draggable,\n    init,\n    isDragging,\n    isMobile,\n    isOverlapping,\n    isOverlappingWithPriceLine,\n    offScreen,\n    offScreenDirection,\n    overlappedBarrierWidth,\n    priceDisplay,\n    priceLineWidth,\n    setDragLine,\n    title,\n    visible\n  } = store;\n  const showBarrier = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => !(hideOffscreenBarrier && offScreen), [hideOffscreenBarrier, offScreen]);\n  const showBarrierDragLine = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => !hideBarrierLine && (!hideOffscreenLine || !offScreen) && !isOverlapping, [hideBarrierLine, hideOffscreenLine, offScreen, isOverlapping]);\n  const opacity = react__WEBPACK_IMPORTED_MODULE_0___default().useMemo(() => isOverlapping ? opacityOnOverlap : '', [isOverlapping, opacityOnOverlap]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    init();\n  }, [init]);\n  if (!showBarrier) return null;\n  const width = priceLineWidth + 12;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('barrier-area', {\n      'barrier-area--zero': isOverlappingWithPriceLine\n    }),\n    style: {\n      top: 0\n    },\n    ref: setDragLine,\n    hidden: !visible\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('chart-line', 'horizontal', className || '', {\n      draggable,\n      dragging: isDragging\n    }),\n    style: {\n      color: foregroundColor\n    }\n  }, showBarrierDragLine && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('drag-line', {\n      'drag-line--zero': isOverlappingWithPriceLine\n    }),\n    style: {\n      borderTopColor: color,\n      borderTopStyle: lineStyle,\n      width: `calc(100% - ${width}px + ${!isMobile ? overlappedBarrierWidth : 0}px)`\n    }\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"draggable-area\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"draggable-area-wrapper\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: 'drag-price',\n    style: {\n      backgroundColor: color,\n      width: isOverlappingWithPriceLine ? overlappedBarrierWidth : width,\n      opacity,\n      right: (isOverlappingWithPriceLine ? width - overlappedBarrierWidth : 0) + (isMobile ? 20 : 4)\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_HamburgerDragIcon__WEBPACK_IMPORTED_MODULE_5__[\"default\"], null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('price', {\n      'price--zero': isOverlappingWithPriceLine\n    }),\n    style: {\n      color: isOverlappingWithPriceLine ? color : '',\n      right: isOverlappingWithPriceLine ? overlappedBarrierWidth + priceDisplay.length * 8 - (!draggable ? 16 : 0) : 0\n    }\n  }, priceDisplay), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null), offScreen && offScreenDirection && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_PriceLineArrow__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n    offScreenDirection: offScreenDirection,\n    color: color\n  })), isOverlappingWithPriceLine && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"price-overlay\",\n    style: {\n      backgroundColor: color,\n      width: width - overlappedBarrierWidth,\n      right: -6\n    }\n  }))), title && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_PriceLineTitle__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    color: color,\n    title: title,\n    yAxiswidth: overlappedBarrierWidth,\n    opacity: opacity\n  })));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(PriceLine));\n\n/***/ }),\n\n/***/ \"./src/components/PriceLineArrow.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/PriceLineArrow.tsx ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_771888__) => {\n\n\"use strict\";\n__nested_webpack_require_771888__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_771888__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_771888__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_771888__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_771888__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_771888__(/*! ../utils */ \"./src/utils/index.ts\");\n\n\n\n\nconst PriceLineArrow = _ref => {\n  let {\n    offScreenDirection\n  } = _ref;\n  const top = offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_2__.DIRECTIONS.UP ? '23px' : `${-_utils__WEBPACK_IMPORTED_MODULE_2__.ARROW_HEIGHT}px`;\n  const transform = offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_2__.DIRECTIONS.DOWN ? 'rotate(180deg)' : '';\n  return offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_2__.DIRECTIONS.UP ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.ArrowGreenIcon, {\n    className: \"arrow-icon\",\n    style: {\n      top,\n      transform\n    }\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_1__.ArrowOrangeIcon, {\n    className: \"arrow-icon\",\n    style: {\n      top,\n      transform\n    }\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PriceLineArrow);\n\n/***/ }),\n\n/***/ \"./src/components/PriceLineTitle.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/PriceLineTitle.tsx ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_773832__) => {\n\n\"use strict\";\n__nested_webpack_require_773832__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_773832__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_773832__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_773832__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst PriceLineTitle = _ref => {\n  let {\n    color,\n    yAxiswidth,\n    title,\n    opacity\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"title-wrapper\",\n    style: {\n      color,\n      right: yAxiswidth,\n      opacity\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"title\"\n  }, title));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PriceLineTitle);\n\n/***/ }),\n\n/***/ \"./src/components/RenderInsideChart.tsx\":\n/*!**********************************************!*\\\n  !*** ./src/components/RenderInsideChart.tsx ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_775101__) => {\n\n\"use strict\";\n__nested_webpack_require_775101__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_775101__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_775101__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_775101__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_775101__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_775101__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_775101__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_775101__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _ui_utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_775101__(/*! ./ui/utils */ \"./src/components/ui/utils.ts\");\n\n\n\n\n\nconst inChartPrefix = 'cq-inchart-';\n\n// Render given Components under stx-holder to position it relative to the active symbol chart.\nconst RenderInsideChart = _ref => {\n  let {\n    at = 'holder',\n    children\n  } = _ref;\n  const {\n    chart,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    contextPromise\n  } = chart;\n  const {\n    isChartReady\n  } = state;\n  const [container, setContainer] = react__WEBPACK_IMPORTED_MODULE_1___default().useState();\n  react__WEBPACK_IMPORTED_MODULE_1___default().useEffect(() => {\n    contextPromise?.then(context => {\n      const nodeName = `${inChartPrefix}${at}`; // reuse existing node when possible:\n\n      let elem = context.topNode?.querySelector(`.${nodeName}`);\n\n      if (!elem) {\n        elem = (0,_ui_utils__WEBPACK_IMPORTED_MODULE_4__.createElement)(`<div class=\"${nodeName}\"></div>`);\n      }\n\n      setContainer(elem);\n    });\n  }, [at, contextPromise]);\n  if (!isChartReady) return null;\n\n  if (container) {\n    return /*#__PURE__*/react_dom__WEBPACK_IMPORTED_MODULE_2___default().createPortal(children, container);\n  }\n\n  return null;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(RenderInsideChart));\n\n/***/ }),\n\n/***/ \"./src/components/Scroll.tsx\":\n/*!***********************************!*\\\n  !*** ./src/components/Scroll.tsx ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_777791__) => {\n\n\"use strict\";\n__nested_webpack_require_777791__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_777791__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_777791__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_777791__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_777791__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_777791__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_777791__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_777791__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_777791__(/*! ../../sass/components/_scroll.scss */ \"./sass/components/_scroll.scss\");\n/* harmony import */ var _sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_777791__.n(_sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst Scroll = _ref2 => {\n  let {\n    children,\n    className,\n    height,\n    width,\n    autoHide,\n    freeze = false,\n    onScroll = () => null,\n    setPanel\n  } = _ref2;\n  const {\n    scroll\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    setScrollPanel,\n    isHover\n  } = scroll;\n\n  const handleRef = _ref => {\n    setScrollPanel(_ref);\n    if (setPanel) setPanel(_ref);\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    ref: handleRef,\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-scrollbar', className, {\n      'sc-scrollbar--freeze': freeze,\n      'sc-scrollbar--auto-hide': autoHide,\n      'sc-scrollbar--hover': isHover\n    }),\n    onScroll: onScroll,\n    style: {\n      maxHeight: height || '100%',\n      maxWidth: width || 'none'\n    }\n  }, children);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Scroll));\n\n/***/ }),\n\n/***/ \"./src/components/ScrollToRecent.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/ScrollToRecent.tsx ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_780504__) => {\n\n\"use strict\";\n__nested_webpack_require_780504__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_780504__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_780504__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_780504__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_780504__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_780504__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_780504__(/*! ../../sass/components/_scroll.scss */ \"./sass/components/_scroll.scss\");\n/* harmony import */ var _sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_780504__.n(_sass_components_scroll_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_780504__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n\n\n\n\n\n\nconst ScrollToRecent = () => {\n  const {\n    chart,\n    chartAdapter\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const {\n    epochBounds,\n    isFeedLoaded\n  } = chartAdapter;\n  const {\n    feed\n  } = chart;\n\n  const onClick = () => {\n    chartAdapter.flutterChart?.app.scrollToLastTick();\n  };\n\n  const quotes = feed?.quotes;\n  if (quotes === undefined || isFeedLoaded === false || quotes.length === 0) return null;\n  const lastQuoteTime = quotes[quotes.length - 1].DT?.getTime();\n  if (!lastQuoteTime) return null;\n  if (epochBounds.rightEpoch > lastQuoteTime) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"scroll_to_recent\",\n    onClick: onClick\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.HomeIcon, null));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(ScrollToRecent));\n\n/***/ }),\n\n/***/ \"./src/components/SearchInput.tsx\":\n/*!****************************************!*\\\n  !*** ./src/components/SearchInput.tsx ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_783053__) => {\n\n\"use strict\";\n__nested_webpack_require_783053__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_783053__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_783053__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_783053__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_783053__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_783053__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_783053__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_783053__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _sass_components_search_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_783053__(/*! ../../sass/components/_search.scss */ \"./sass/components/_search.scss\");\n/* harmony import */ var _sass_components_search_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_783053__.n(_sass_components_search_scss__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\nconst SearchInput = _ref => {\n  let {\n    placeholder,\n    value,\n    searchInput,\n    searchInputClassName,\n    onChange\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-search-input', {\n      active: value.trim() !== ''\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    className: searchInputClassName,\n    value: value,\n    ref: searchInput,\n    onChange: e => onChange(e.target.value),\n    type: \"text\",\n    spellCheck: \"false\",\n    autoComplete: \"off\",\n    autoCorrect: \"off\",\n    autoCapitalize: \"off\",\n    placeholder: placeholder\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.SearchIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_3__.CloseCircleIcon, {\n    className: \"icon-reset\",\n    onClick: () => onChange('')\n  }));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(SearchInput));\n\n/***/ }),\n\n/***/ \"./src/components/SettingsDialog.tsx\":\n/*!*******************************************!*\\\n  !*** ./src/components/SettingsDialog.tsx ***!\n  \\*******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_785944__) => {\n\n\"use strict\";\n__nested_webpack_require_785944__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_785944__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_785944__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_785944__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_785944__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_785944__(/*! react-tabs */ \"./node_modules/react-tabs/esm/index.js\");\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_785944__(/*! react-tabs/style/react-tabs.css */ \"./node_modules/react-tabs/style/react-tabs.css\");\n/* harmony import */ var react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_785944__.n(react_tabs_style_react_tabs_css__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _sass_components_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_785944__(/*! ../../sass/components/_settings-dialog.scss */ \"./sass/components/_settings-dialog.scss\");\n/* harmony import */ var _sass_components_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_785944__.n(_sass_components_settings_dialog_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Form__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_785944__(/*! ./Form */ \"./src/components/Form.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_785944__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_785944__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_785944__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_785944__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\n\nconst SettingsPanelItem = _ref => {\n  let {\n    group,\n    title,\n    type,\n    Field\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {\n    title: type === 'select' || type === 'pattern' || type === 'colorpicker' || type === 'numbercolorpicker' || group === 'OverBought' || group === 'OverSold' ? null : title,\n    type: type\n  }, Field);\n};\n\nconst SettingsPanelGroup = _ref2 => {\n  let {\n    title,\n    // [{ id, title, value, defaultValue, type }]\n    items,\n    theme,\n    onItemChange\n  } = _ref2;\n  const renderMap = {\n    switch: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.Switch, {\n        value: item.value,\n        onChange: v => onItemChange(item, v)\n      });\n    },\n    colorpicker: item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.ColorPicker, {\n      theme: theme,\n      color: item.value,\n      subtitle: item.subtitle || item.title,\n      setColor: value => onItemChange(item, value)\n    }),\n    pattern: item => {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.Pattern, {\n        pattern: item.value,\n        lineWidth: \"1\",\n        subtitle: item.title,\n        onChange: v => {\n          onItemChange(item, v);\n        }\n      });\n    },\n    select: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.DropDown, {\n        rows: Object.values(item.options || {}),\n        value: item.options[item.value],\n        subtitle: item.subtitle || item.title,\n        onRowClick: value => {\n          const [key] = Object.entries(item.options).find(_ref3 => {\n            let [_key, _value] = _ref3;\n            return _value === value;\n          });\n          onItemChange(item, key);\n        }\n      }, row => row);\n    },\n    number: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.Slider, {\n        min: item.min ?? 1,\n        step: item.step ?? 1,\n        max: item.max ?? 100,\n        value: item.value,\n        onChange: val => onItemChange(item, val)\n      });\n    },\n    numericinput: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"span\", {\n        className: \"ciq-num-input\"\n      }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.NumericInput, {\n        value: item.value,\n        onChange: val => onItemChange(item, val),\n        min: item.min,\n        step: item.step,\n        max: item.max\n      }));\n    },\n    numbercolorpicker: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.NumberColorPicker, {\n        props: item.value,\n        theme: theme,\n        onChange: val => onItemChange(item, val)\n      });\n    },\n    font: props => {\n      const item = props;\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.FontSetting, {\n        value: item.value,\n        onChange: val => onItemChange(item, val)\n      });\n    }\n  };\n  const input_group_name = `form__input-group--${(title || '').toLowerCase().replace(' ', '-')}`;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: `form__input-group ${input_group_name}`\n  }, title === 'Show Zones' ? '' : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"h4\", null, title), items.map(item => renderMap[item.type] && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(SettingsPanelItem, {\n    key: item.title,\n    type: item.type,\n    title: title === 'Show Zones' ? item.title : item.title.replace(title, ''),\n    Field: renderMap[item.type](item)\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Form__WEBPACK_IMPORTED_MODULE_5__.FormGroup, {\n    type: \"end\"\n  }));\n};\n\nconst Footer = _ref4 => {\n  let {\n    onDelete,\n    onReset,\n    onDone\n  } = _ref4;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"buttons\"\n  }, onDelete && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_6__.DeleteIcon, {\n    className: \"sc-btn--delete\",\n    onClick: onDelete\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(ResetButton, {\n    onClick: onReset\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(DoneButton, {\n    onClick: onDone\n  })));\n};\n\nconst SettingsPanel = _ref5 => {\n  let {\n    itemGroups,\n    theme,\n    onItemChange,\n    setScrollPanel,\n    freezeScroll,\n    formClassname\n  } = _ref5;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: `form form--indicator-setting ${formClassname}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n    setPanel: setScrollPanel,\n    freeze: freezeScroll,\n    autoHide: true,\n    height: \"282px\"\n  }, itemGroups.map(group => group.fields.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(SettingsPanelGroup, {\n    key: group.key,\n    title: group.title,\n    items: group.fields,\n    theme: theme,\n    onItemChange: onItemChange\n  }))));\n};\n\nconst ResetButton = _ref6 => {\n  let {\n    onClick\n  } = _ref6;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--outline-secondary sc-btn--reset\",\n    onClick: onClick\n  }, t.translate('Reset'));\n};\n\nconst DoneButton = _ref7 => {\n  let {\n    onClick\n  } = _ref7;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--primary sc-btn--save\",\n    onClick: onClick\n  }, t.translate('Done'));\n};\n\nconst SettingsDialog = _ref8 => {\n  let {\n    store\n  } = _ref8;\n  const {\n    itemGroups,\n    title,\n    formClassname,\n    description,\n    showTabs,\n    onResetClick,\n    onItemChange,\n    onItemDelete,\n    menuStore,\n    theme,\n    setScrollPanel,\n    dialogPortalNodeId,\n    freezeScroll\n  } = store;\n  const close = menuStore.handleCloseDialog;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    store: menuStore,\n    className: \"cq-modal--settings\",\n    title: title,\n    modalMode: true,\n    enableTabular: showTabs,\n    emptyMenu: true,\n    portalNodeId: dialogPortalNodeId\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Title, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(\"div\", {\n    className: \"cq-chart-settings\"\n  }, showTabs ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.Tabs, {\n    className: \"tabs--vertical\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.TabList, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.Tab, null, \"Settings\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.Tab, null, \"Description\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.TabPanel, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(SettingsPanel, {\n    itemGroups: itemGroups,\n    theme: theme,\n    onItemChange: onItemChange,\n    setScrollPanel: setScrollPanel,\n    freezeScroll: freezeScroll\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Footer, {\n    onReset: onResetClick,\n    onDone: close\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_2__.TabPanel, null, description)) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement((react__WEBPACK_IMPORTED_MODULE_1___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(SettingsPanel, {\n    itemGroups: itemGroups,\n    theme: theme,\n    onItemChange: onItemChange,\n    setScrollPanel: setScrollPanel,\n    freezeScroll: freezeScroll,\n    formClassname: formClassname\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(Footer, {\n    onDelete: onItemDelete,\n    onReset: onResetClick,\n    onDone: close\n  })))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_0__.observer)(SettingsDialog));\n\n/***/ }),\n\n/***/ \"./src/components/Shade.tsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Shade.tsx ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_797846__) => {\n\n\"use strict\";\n__nested_webpack_require_797846__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_797846__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_797846__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_797846__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_797846__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_797846__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_797846__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n\n\n\n\nconst Shade = _ref => {\n  let {\n    store\n  } = _ref;\n  const {\n    visible,\n    className,\n    setShadeRef\n  } = store;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('shade', className, {\n      hidden: !visible\n    }),\n    ref: setShadeRef,\n    style: {\n      top: -120\n    }\n  });\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Shade));\n\n/***/ }),\n\n/***/ \"./src/components/Share.tsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Share.tsx ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_799549__) => {\n\n\"use strict\";\n__nested_webpack_require_799549__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_799549__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_799549__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_799549__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_799549__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_799549__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_799549__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_799549__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_799549__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_799549__(/*! ./Loader */ \"./src/components/Loader.tsx\");\n/* harmony import */ var _sass_components_download_scss__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_799549__(/*! ../../sass/components/_download.scss */ \"./sass/components/_download.scss\");\n/* harmony import */ var _sass_components_download_scss__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__nested_webpack_require_799549__.n(_sass_components_download_scss__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_799549__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_799549__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\nconst Share = _ref => {\n  let {\n    portalNodeId\n  } = _ref;\n  const {\n    share\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    menuStore,\n    downloadCSV,\n    downloadPNG,\n    isLoadingPNG\n  } = share;\n  const {\n    open: menuOpen\n  } = menuStore.dialogStore;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    store: menuStore,\n    className: \"sc-download-menu\",\n    title: t.translate('Download'),\n    tooltip: t.translate('Download'),\n    modalMode: true,\n    isFullscreen: true,\n    portalNodeId: portalNodeId\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-download__menu', {\n      'sc-download__menu--active': menuOpen\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.DownloadIcon, null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_7__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-download\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Loader__WEBPACK_IMPORTED_MODULE_5__.InlineLoader, {\n    className: \"sc-download__item\",\n    onClick: downloadPNG,\n    enabled: isLoadingPNG\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.PngIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-download__item__label\"\n  }, \" \", t.translate('PNG'), \" \")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-download__item\",\n    onClick: downloadCSV\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.CsvIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"sc-download__item__label\"\n  }, \" \", t.translate('CSV'))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Share));\n\n/***/ }),\n\n/***/ \"./src/components/SmartChart.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/SmartChart.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_804189__) => {\n\n\"use strict\";\n__nested_webpack_require_804189__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_804189__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_804189__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_804189__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_804189__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_804189__(/*! ./Chart */ \"./src/components/Chart.tsx\");\n\n\n\n\nconst SmartChart = _ref => {\n  let {\n    children,\n    ...props\n  } = _ref;\n  const is_context_intialized = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n\n  if (!is_context_intialized.current) {\n    (0,src_store__WEBPACK_IMPORTED_MODULE_1__.initContext)();\n    is_context_intialized.current = true;\n  }\n\n  const store = (0,src_store__WEBPACK_IMPORTED_MODULE_1__.useStores)();\n  const context = (0,src_store__WEBPACK_IMPORTED_MODULE_1__.getContext)();\n  const Provider = context.Provider;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Provider, {\n    value: store\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Chart__WEBPACK_IMPORTED_MODULE_2__[\"default\"], props, children));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SmartChart);\n\n/***/ }),\n\n/***/ \"./src/components/StudyLegend.tsx\":\n/*!****************************************!*\\\n  !*** ./src/components/StudyLegend.tsx ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_806025__) => {\n\n\"use strict\";\n__nested_webpack_require_806025__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_806025__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_806025__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_806025__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_tabs__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_806025__(/*! react-tabs */ \"./node_modules/react-tabs/esm/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_806025__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_806025__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_806025__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_806025__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _NotificationBadge__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_806025__(/*! ./NotificationBadge */ \"./src/components/NotificationBadge.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_806025__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_806025__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_806025__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _sass_components_studylegend_scss__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_806025__(/*! ../../sass/components/_studylegend.scss */ \"./sass/components/_studylegend.scss\");\n/* harmony import */ var _sass_components_studylegend_scss__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__nested_webpack_require_806025__.n(_sass_components_studylegend_scss__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_806025__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_806025__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* harmony import */ var _SearchInput__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_806025__(/*! ./SearchInput */ \"./src/components/SearchInput.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_806025__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst StudyIcon = _ref => {\n  let {\n    Icon\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Icon, null);\n};\n\nconst EmptyView = () => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n  className: \"sc-studies--empty\"\n}, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.EmptyStateIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, t.translate('You have no active indicators yet.')));\n\nconst NoResultView = _ref2 => {\n  let {\n    text\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies--empty\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"strong\", null, t.translate('No results for'), \" \\u201C\", text, \"\\u201D\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, t.translate('Try checking your spelling or use a different term')));\n};\n\nconst IndicatorList = _ref3 => {\n  let {\n    items,\n    onSelectItem,\n    onDeleteItem,\n    onEditItem,\n    onInfoItem,\n    disableAll,\n    isTick\n  } = _ref3;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__list\"\n  }, items.map(Item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: `item--${Item.id || Item.flutter_chart_id}`,\n    className: classnames__WEBPACK_IMPORTED_MODULE_2___default()('sc-studies__list__item ', {\n      'sc-studies__list__item--disabled': disableAll,\n      'sc-studies__list__item--disabled-prediction': Item.isPrediction && isTick\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: \"sc-studies__list__item__box\",\n    enabled: !!((onEditItem || onDeleteItem) && Item.bars && Item.bars.length > 30) || Item.isPrediction && isTick,\n    content: Item.isPrediction && isTick ? t.translate('This indicator does not support 1-tick intervals. To use this indicator, change your chart time interval to 1 minute or more.') : `${Item.name} ${Item.bars ? `(${Item.bars})` : ''}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"info\",\n    onClick: () => onSelectItem ? onSelectItem(Item.flutter_chart_id) : null\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StudyIcon, {\n    Icon: Item.icon\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, onDeleteItem ? Item.short_name_and_index : Item.name), Item.bars && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"small\", null, \"(\", Item.bars, \")\"))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"detail\"\n  }, onInfoItem && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.InfoCircleIcon, {\n    className: \"ic-info\",\n    onClick: () => onInfoItem(Item)\n  }), onEditItem && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.SettingIcon, {\n    onClick: () => onEditItem(Item)\n  }), onDeleteItem && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.DeleteIcon, {\n    onClick: () => onDeleteItem(Item.id)\n  }))))));\n};\n\nconst TabularDisplaySearchPanel = _ref4 => {\n  let {\n    categories,\n    onSelectItem,\n    onInfoItem,\n    disableAll,\n    isTick\n  } = _ref4;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    autoHide: true\n  }, categories.map(Category => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    key: Category.name,\n    className: \"sc-studies__category\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__category__head\"\n  }, Category.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__category__body\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IndicatorList, {\n    items: Category.foundItems || [],\n    onSelectItem: onSelectItem,\n    onInfoItem: onInfoItem,\n    disableAll: disableAll,\n    isTick: isTick\n  })))));\n};\n\nconst TabularDisplayActivePanel = _ref5 => {\n  let {\n    items,\n    onDeleteItem,\n    onEditItem,\n    clearAll,\n    isMobile\n  } = _ref5;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__panel__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, isMobile ? t.translate('Up to 2 active indicators allowed.') : t.translate('Up to 5 active indicators allowed.')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--sm sc-btn--outline-secondary\",\n    onClick: () => clearAll()\n  }, t.translate('Clear all'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__panel__content sc-studies__panel__content--active\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IndicatorList, {\n    items: items,\n    onDeleteItem: onDeleteItem,\n    onEditItem: onEditItem\n  })));\n};\n\nconst TabularDisplay = _ref6 => {\n  let {\n    onSelectTab,\n    selectedTab,\n    categories,\n    searchedCategories,\n    onSelectItem,\n    onDeleteItem,\n    onEditItem,\n    onInfoItem,\n    activeItems,\n    clearAll,\n    searchQuery,\n    isMobile,\n    maxAllowedItem,\n    isTick\n  } = _ref6;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.Tabs, {\n    className: \"tabs--vertical\",\n    selectedIndex: selectedTab,\n    onSelect: onSelectTab\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.TabList, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n    key: \"hidden\",\n    className: \"hidden\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n    key: \"active\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.ActiveIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, t.translate('Active')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_NotificationBadge__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    notificationCount: activeItems.length\n  })), categories.map(Category => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.Tab, {\n    key: `tab--${Category.name}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(StudyIcon, {\n    Icon: Category.icon\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, Category.name)))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n    key: \"panel--search\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__panel sc-studies__panel--search\"\n  }, searchedCategories.length ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TabularDisplaySearchPanel, {\n    categories: searchedCategories,\n    onSelectItem: onSelectItem,\n    onInfoItem: onInfoItem,\n    disableAll: activeItems.length === (isMobile ? 2 : 5),\n    isTick: isTick\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(NoResultView, {\n    text: searchQuery\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n    key: \"panel--active\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__panel sc-studies__panel--active\"\n  }, activeItems.length ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TabularDisplayActivePanel, {\n    clearAll: clearAll,\n    items: activeItems,\n    onDeleteItem: onDeleteItem,\n    onEditItem: onEditItem,\n    isMobile: isMobile\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EmptyView, null))), categories.map(Category => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react_tabs__WEBPACK_IMPORTED_MODULE_1__.TabPanel, {\n    key: `panel--${Category.name}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__panel\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", null, Category.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(IndicatorList, {\n    onSelectItem: onSelectItem,\n    onInfoItem: onInfoItem,\n    items: Category.items,\n    disableAll: activeItems.length === maxAllowedItem,\n    isTick: isTick\n  })))));\n};\n\nconst StudyLegend = _ref7 => {\n  let {\n    portalNodeId\n  } = _ref7;\n  const {\n    studies,\n    chart,\n    state,\n    timeperiod\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_4__.useStores)();\n  const {\n    menuStore,\n    deleteAllStudies: deleteAll,\n    items,\n    searchedItems,\n    filterText: searchQuery,\n    selectedTab,\n    onSelectTab,\n    onSelectItem,\n    activeItems,\n    getItemById,\n    deleteStudyById,\n    editStudy,\n    onInfoItem,\n    infoItem,\n    updatePortalNode,\n    maxAllowedItem,\n    setFilterText,\n    searchInput\n  } = studies;\n  const {\n    isTick\n  } = timeperiod;\n  const {\n    isMobile\n  } = chart;\n  const menuOpen = menuStore.open;\n  const activeStudiesNo = activeItems.length;\n  updatePortalNode(portalNodeId);\n\n  const getIndicatorCategoryName = id => (0,_Constant__WEBPACK_IMPORTED_MODULE_10__.getIndicatorsTree)().find(categories => categories.items.some(item => item.flutter_chart_id === id))?.category.replace('-', ' ') ?? '';\n\n  const handleStateChange = (id, type, payload) => {\n    state.stateChange(type, {\n      indicator_type_name: id,\n      indicators_category_name: getIndicatorCategoryName(id),\n      ...(payload ?? {})\n    });\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n    store: menuStore,\n    className: \"sc-studies\",\n    title: t.translate('Indicators'),\n    tooltip: t.translate('Indicators'),\n    modalMode: true,\n    enableTabular: true,\n    portalNodeId: portalNodeId,\n    customHead: infoItem ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"sc-dialog__head--info\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.BackIcon, {\n      onClick: () => {\n        onInfoItem(null);\n        handleStateChange(infoItem.flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_INFO_TOGGLE);\n      }\n    }), infoItem.flutter_chart_id) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      className: \"sc-dialog__head--search\"\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_SearchInput__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n      placeholder: t.translate('Search'),\n      searchInputClassName: \"searchInputClassName\",\n      value: searchQuery,\n      onChange: setFilterText,\n      searchInput: searchInput\n    }))\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_11__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-studies__menu ${menuOpen ? 'sc-studies__menu--active' : ''}`\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_8__.IndicatorIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_NotificationBadge__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    notificationCount: activeStudiesNo\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_11__[\"default\"].Body, null, infoItem && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__info\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    autoHide: true,\n    height: \"360px\",\n    className: \"sc-studies__info__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, infoItem?.description)), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-studies__info__footer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    enabled: infoItem?.disabledAddBtn,\n    content: _Constant__WEBPACK_IMPORTED_MODULE_10__.TooltipsContent.predictionIndicator\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--primary sc-btn--w100\",\n    onClick: () => {\n      onSelectItem(infoItem?.flutter_chart_id);\n      handleStateChange(infoItem?.flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_ADDED, {\n        is_info_open: true\n      });\n    },\n    disabled: infoItem?.disabledAddBtn\n  }, t.translate('Add'))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(TabularDisplay, {\n    onSelectTab: onSelectTab,\n    selectedTab: selectedTab,\n    categories: items,\n    searchedCategories: searchedItems,\n    onSelectItem: flutter_chart_id => {\n      onSelectItem(flutter_chart_id);\n      handleStateChange(flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_ADDED);\n    },\n    onDeleteItem: id => {\n      const item = getItemById(id);\n\n      if (item) {\n        handleStateChange(item.flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_DELETED);\n      }\n\n      deleteStudyById(id);\n    },\n    onEditItem: study => {\n      editStudy(study);\n      handleStateChange(study.flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_SETTINGS_OPEN);\n    },\n    onInfoItem: item => {\n      onInfoItem(item);\n      handleStateChange(item.flutter_chart_id, _Constant__WEBPACK_IMPORTED_MODULE_10__.STATE.INDICATOR_INFO_TOGGLE, {\n        is_info_open: true\n      });\n    },\n    activeItems: activeItems,\n    clearAll: deleteAll,\n    searchQuery: searchQuery,\n    isMobile: isMobile,\n    maxAllowedItem: maxAllowedItem,\n    isTick: isTick\n  })));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_3__.observer)(StudyLegend));\n\n/***/ }),\n\n/***/ \"./src/components/SymbolSelectButton.tsx\":\n/*!***********************************************!*\\\n  !*** ./src/components/SymbolSelectButton.tsx ***!\n  \\***********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_824497__) => {\n\n\"use strict\";\n__nested_webpack_require_824497__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_824497__.d(__nested_webpack_exports__, {\n/* harmony export */   \"ChartPrice\": () => (/* binding */ ChartPrice),\n/* harmony export */   \"SymbolInfo\": () => (/* binding */ SymbolInfo),\n/* harmony export */   \"SymbolSelectButton\": () => (/* binding */ SymbolSelectButton)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_824497__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_824497__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_824497__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_824497__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_824497__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_824497__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_824497__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _MarketOpeningTimeCounter__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_824497__(/*! ./MarketOpeningTimeCounter */ \"./src/components/MarketOpeningTimeCounter.tsx\");\n/* harmony import */ var _AnimatedPrice__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_824497__(/*! ./AnimatedPrice */ \"./src/components/AnimatedPrice.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_824497__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\nconst SymbolInfoBase = () => {\n  const {\n    chartTitle\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    isShowChartPrice,\n    isVisible,\n    todayChange,\n    todayChangePercent,\n    animatedPrice,\n    currentSymbol: symbol,\n    isSymbolOpen,\n    symbolOpenTime\n  } = chartTitle;\n  const {\n    status\n  } = animatedPrice;\n  if (!symbol) return null;\n  const SymbolIcon = _Icons__WEBPACK_IMPORTED_MODULE_4__.ItemIconMap[symbol.symbol] || _Icons__WEBPACK_IMPORTED_MODULE_4__.SymbolPlaceholderIcon;\n  const hasOpenTime = !isSymbolOpen && symbolOpenTime.openTime;\n  const hasNoOpenTime = !isSymbolOpen && !symbolOpenTime.openTime;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, SymbolIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SymbolIcon, {\n    className: `ic-${symbol.symbol}`\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-symbol-info\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('cq-symbol', {\n      'closed-no-opentime': hasNoOpenTime\n    })\n  }, symbol.name), isSymbolOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ChartPrice, {\n    status: status,\n    isVisible: isVisible && isShowChartPrice,\n    todayChange: todayChange,\n    todayChangePercent: todayChangePercent\n  }), hasOpenTime && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ClosedSymbol, {\n    symbolOpenTime: symbolOpenTime\n  })));\n};\n\nconst SymbolInfo = (0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(SymbolInfoBase);\n\nconst SymbolSelectButtonBase = () => {\n  const {\n    chartTitle\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    isSymbolOpen\n  } = chartTitle;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-symbol-select-btn\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-symbol-select-btn__container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(SymbolInfo, null), !isSymbolOpen && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-symbol-closed-text\"\n  }, t.translate('CLOSED'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ArrowIcon, {\n    className: \"cq-symbol-dropdown\"\n  }));\n};\n\nconst SymbolSelectButton = (0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(SymbolSelectButtonBase);\n\nconst ChartPriceBase = _ref => {\n  let {\n    isVisible,\n    status,\n    todayChange,\n    todayChangePercent\n  } = _ref;\n  const {\n    chartTitle\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    animatedPrice,\n    decimalPlaces\n  } = chartTitle;\n  const {\n    price,\n    isIncrease\n  } = animatedPrice;\n  return isVisible ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-chart-price\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_AnimatedPrice__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n    className: \"cq-current-price\",\n    price: price,\n    isIncrease: isIncrease,\n    status: animatedPrice.status,\n    decimalPlaces: decimalPlaces\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"divider\"\n  }, \"-\"), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('cq-change', status)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"cq-todays-change\"\n  }, todayChange || 0), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"cq-todays-change-percent\"\n  }, \"(\", todayChangePercent, \"%)\"), \"\\xA0\")) : null;\n};\n\nconst ChartPrice = (0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(ChartPriceBase);\n\nconst ClosedSymbol = _ref2 => {\n  let {\n    symbolOpenTime\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-chart-closed\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.TimeIcon, {\n    className: \"cq-closed-icon\"\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"cq-closed-opening\"\n  }, t.translate('Opens in:'), \" \\xA0\", /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"cq-closed-opening-time\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_MarketOpeningTimeCounter__WEBPACK_IMPORTED_MODULE_5__.MarketOpeningTimeCounter, {\n    symbolOpenTime: symbolOpenTime\n  }))));\n};\n\n/***/ }),\n\n/***/ \"./src/components/Timeperiod.tsx\":\n/*!***************************************!*\\\n  !*** ./src/components/Timeperiod.tsx ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_831620__) => {\n\n\"use strict\";\n__nested_webpack_require_831620__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_831620__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_831620__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_831620__.n(classnames__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_831620__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_831620__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_831620__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_831620__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_831620__(/*! ../../sass/components/_timeperiod.scss */ \"./sass/components/_timeperiod.scss\");\n/* harmony import */ var _sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_831620__.n(_sass_components_timeperiod_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_831620__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _Loader__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_831620__(/*! ./Loader */ \"./src/components/Loader.tsx\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_831620__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_831620__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\n\n\n\nconst enableLoader = (isLoading, interval, granularity) => isLoading && interval === granularity;\n\nconst enableTooltip = (isMobile, key, chartType_id) => !isMobile && chartType_id !== 'line' && key === 'tick';\n\nconst TimeperiodItemComponent = _ref => {\n  let {\n    item,\n    category,\n    onClick\n  } = _ref;\n  const {\n    timeperiod,\n    chartType,\n    loader,\n    chart,\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const chartTypeId = chartType.type.id;\n  const {\n    allowTickChartTypeOnly\n  } = state;\n  const {\n    mainStore\n  } = timeperiod;\n  const {\n    granularity\n  } = chart;\n  const isMobile = mainStore.chart.isMobile;\n  const {\n    isActive: isLoading\n  } = loader;\n  const is_tick = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo(() => category.key === 'tick', [category]);\n  const is_loading = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo(() => enableLoader(isLoading, item.interval, granularity), [isLoading, item, granularity]);\n  const enable_tooltip = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo(() => enableTooltip(isMobile, category.key, chartTypeId), [isMobile, category.key, chartTypeId]);\n  const is_disabled = react__WEBPACK_IMPORTED_MODULE_2___default().useMemo(() => is_tick && chartTypeId !== 'line' || !is_tick && allowTickChartTypeOnly, [is_tick, chartTypeId, allowTickChartTypeOnly]);\n  const is_active = item.interval === granularity;\n  const handleClick = react__WEBPACK_IMPORTED_MODULE_2___default().useCallback(() => onClick(chartTypeId, category.key, item.interval), [chartTypeId, category, item, onClick]);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    key: item.interval,\n    onClick: handleClick,\n    className: classnames__WEBPACK_IMPORTED_MODULE_0___default()('sc-interval__item', {\n      'sc-interval__item--active': is_active,\n      'sc-interval__item--disabled': is_disabled,\n      'pre-loading': is_loading\n    }),\n    enabled: enable_tooltip,\n    content: t.translate('Available only for \"Area\" chart type.')\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_Loader__WEBPACK_IMPORTED_MODULE_6__.InlineLoader, {\n    enabled: is_loading\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"span\", null, item.num, \" \", t.translate(item.num === 1 ? category.single : category.plural))));\n};\n\nconst TimeperiodItem = (0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(TimeperiodItemComponent);\n\nconst Timeperiod = _ref2 => {\n  let {\n    portalNodeId,\n    onChange\n  } = _ref2;\n  const {\n    timeperiod\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    changeGranularity,\n    setGranularity,\n    updateProps,\n    updatePortalNode\n  } = timeperiod;\n  const onChangeGranularity = onChange || setGranularity;\n\n  const onIntervalClick = (chart_type_id, key, interval) => {\n    if (key === 'tick' && chart_type_id !== 'line') {\n      return;\n    }\n\n    changeGranularity(interval);\n  };\n\n  react__WEBPACK_IMPORTED_MODULE_2___default().useEffect(() => updateProps(onChangeGranularity));\n  updatePortalNode(portalNodeId);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-interval\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-interval__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"strong\", null, t.translate('Time interval'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-interval__info\"\n  }, t.translate('Tick interval only available for \"Area\" Chart type.')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(\"div\", {\n    className: \"sc-interval__content\"\n  }, _Constant__WEBPACK_IMPORTED_MODULE_5__.Intervals.map(category => category.items.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(TimeperiodItem, {\n    key: item.interval,\n    item: item,\n    category: category,\n    onClick: onIntervalClick\n  })))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(Timeperiod));\n\n/***/ }),\n\n/***/ \"./src/components/ToolbarWidget.tsx\":\n/*!******************************************!*\\\n  !*** ./src/components/ToolbarWidget.tsx ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_838208__) => {\n\n\"use strict\";\n__nested_webpack_require_838208__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_838208__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_838208__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_838208__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_838208__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_838208__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_838208__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_838208__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _sass_components_toolbar_widget_scss__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_838208__(/*! ../../sass/components/_toolbar-widget.scss */ \"./sass/components/_toolbar-widget.scss\");\n/* harmony import */ var _sass_components_toolbar_widget_scss__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__nested_webpack_require_838208__.n(_sass_components_toolbar_widget_scss__WEBPACK_IMPORTED_MODULE_4__);\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n\n\n\n\n\nconst ToolbarWidget = _ref => {\n  let {\n    position = 'top',\n    children\n  } = _ref;\n  const {\n    chart,\n    toolbarWidget\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    context\n  } = chart;\n  const {\n    onMouseEnter,\n    onMouseLeave\n  } = toolbarWidget;\n  if (!context) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-toolbar-widget', {\n      [`sc-toolbar-widget--${position}`]: !!position\n    }),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }, children);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(ToolbarWidget));\n\n/***/ }),\n\n/***/ \"./src/components/Tooltip.tsx\":\n/*!************************************!*\\\n  !*** ./src/components/Tooltip.tsx ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_840772__) => {\n\n\"use strict\";\n__nested_webpack_require_840772__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_840772__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_840772__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_840772__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_840772__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_840772__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\nconst Tooltip = _ref => {\n  let {\n    children,\n    className = '',\n    enabled = false,\n    content,\n    // top, right\n    position = 'top',\n    ...props\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", _extends({\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-tooltip', className, {\n      [`sc-tooltip--${position}`]: !!position,\n      'sc-tooltip--enable': enabled\n    })\n  }, props), children, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-tooltip__inner\"\n  }, content));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Tooltip);\n\n/***/ }),\n\n/***/ \"./src/components/Views.tsx\":\n/*!**********************************!*\\\n  !*** ./src/components/Views.tsx ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_842785__) => {\n\n\"use strict\";\n__nested_webpack_require_842785__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_842785__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_842785__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_842785__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_842785__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_842785__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_842785__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_842785__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_842785__(/*! ./Tooltip */ \"./src/components/Tooltip.tsx\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_842785__(/*! ./Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_842785__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_842785__(/*! ./Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _sass_components_view_scss__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_842785__(/*! ../../sass/components/_view.scss */ \"./sass/components/_view.scss\");\n/* harmony import */ var _sass_components_view_scss__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__nested_webpack_require_842785__.n(_sass_components_view_scss__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _Menu__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_842785__(/*! ./Menu */ \"./src/components/Menu.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_842785__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\n\n\nconst ViewItem = _ref => {\n  let {\n    view,\n    remove,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    className: \"sc-views__views__list__item\",\n    onClick: onClick,\n    enabled: view.name.length > 27,\n    content: (0,_utils__WEBPACK_IMPORTED_MODULE_6__.wrapText)(view.name, 26)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"text\"\n  }, view.name), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.DeleteIcon, {\n    onClick: remove\n  }));\n};\n\nconst EmptyView = _ref2 => {\n  let {\n    onClick\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views--empty\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.EmptyStateIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, t.translate('You have no saved templates yet.')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn\",\n    onClick: onClick\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.AddIcon, null), t.translate('Add new template')));\n};\n\nconst OverwriteView = _ref3 => {\n  let {\n    templateName,\n    onCancel,\n    onOverwrite\n  } = _ref3;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views--overwrite\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views--overwrite__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.OverwriteStateIcon, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", null, `${templateName} ${t.translate('already exists.')}`, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"br\", null), t.translate('Would you like to overwrite it?'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views--overwrite__footer\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--outline-secondary\",\n    onClick: onCancel\n  }, t.translate('Cancel')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    className: \"sc-btn sc-btn--primary\",\n    onClick: onOverwrite\n  }, t.translate('Overwrite'))));\n};\n\nconst ActiveListView = _ref4 => {\n  let {\n    views,\n    removeAll,\n    applyLayout,\n    remove\n  } = _ref4;\n  if (!views.length) return null;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views__views\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views__views__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h5\", null, t.translate('Saved templates')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    onClick: removeAll,\n    className: \"sc-btn sc-btn--sm sc-btn--outline-secondary\"\n  }, t.translate('Clear all'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views__views__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views__views__list\"\n  }, views.map((view, i) => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ViewItem, {\n    view: view,\n    key: view.name,\n    onClick: e => applyLayout(i, e),\n    remove: e => remove(i, e)\n  })))));\n};\n\nconst Views = _ref5 => {\n  let {\n    portalNodeId\n  } = _ref5;\n  const {\n    view\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    sortedItems: views,\n    routes: {\n      main,\n      overwrite\n    },\n    onChange,\n    remove,\n    onSubmit,\n    applyLayout,\n    inputRef,\n    currentRoute,\n    templateName,\n    onToggleNew,\n    saveViews,\n    removeAll,\n    isInputActive,\n    onFocus,\n    onBlur,\n    menuStore\n  } = view;\n  const menuOpen = menuStore.dialogStore.open;\n  const isActive = isInputActive || templateName !== '';\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n    store: menuStore,\n    className: \"sc-views-menu\",\n    title: t.translate('Templates'),\n    tooltip: t.translate('Templates'),\n    modalMode: true,\n    portalNodeId: portalNodeId\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Title, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-views__menu', {\n      'sc-views__menu--active': menuOpen\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.TemplateIcon, null))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Menu__WEBPACK_IMPORTED_MODULE_9__[\"default\"].Body, null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-views\"\n  }, currentRoute === 'new' ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EmptyView, {\n    onClick: onToggleNew\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, currentRoute !== 'overwrite' ? '' : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(OverwriteView, {\n    templateName: templateName,\n    onCancel: main,\n    onOverwrite: overwrite\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    autoHide: true\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form form--sc-views\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form__input-group\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form__group\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"form__control\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('form--sc-views__input', {\n      'form--sc-views__input--active': isActive\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"subtitle\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", null, t.translate('Add new templates'))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"input\", {\n    type: \"text\",\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-input', {\n      'sc-input--active': isActive\n    }),\n    placeholder: isActive ? '' : t.translate('Add new templates'),\n    ref: inputRef,\n    value: templateName,\n    onKeyUp: onSubmit,\n    onChange: onChange,\n    onFocus: onFocus,\n    onClick: onFocus,\n    onBlur: onBlur\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n    type: \"button\",\n    onClick: saveViews,\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-btn', 'sc-btn--primary', {\n      'sc-btn--primary--disabled': !isActive\n    })\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_7__.AddIcon, null))))))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ActiveListView, {\n    views: views,\n    removeAll: removeAll,\n    applyLayout: applyLayout,\n    remove: remove\n  }))))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_2__.observer)(Views));\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/CategoricalDisplay.tsx\":\n/*!******************************************************************!*\\\n  !*** ./src/components/categoricaldisplay/CategoricalDisplay.tsx ***!\n  \\******************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_853678__) => {\n\n\"use strict\";\n__nested_webpack_require_853678__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_853678__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_853678__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_853678__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_853678__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Scroll__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_853678__(/*! ../Scroll */ \"./src/components/Scroll.tsx\");\n/* harmony import */ var _sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_853678__(/*! ../../../sass/components/_categorical-display.scss */ \"./sass/components/_categorical-display.scss\");\n/* harmony import */ var _sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__nested_webpack_require_853678__.n(_sass_components_categorical_display_scss__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _SearchInput__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_853678__(/*! ../SearchInput */ \"./src/components/SearchInput.tsx\");\n/* harmony import */ var _ResultsPanel__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_853678__(/*! ./ResultsPanel */ \"./src/components/categoricaldisplay/ResultsPanel.tsx\");\n/* harmony import */ var _Item__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_853678__(/*! ./Item */ \"./src/components/categoricaldisplay/Item.tsx\");\n/* harmony import */ var _FilterPanel__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_853678__(/*! ./FilterPanel */ \"./src/components/categoricaldisplay/FilterPanel.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_853678__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\n\n\nconst CategoricalDisplay = _ref => {\n  let {\n    store,\n    id,\n    searchInputClassName,\n    disableAll,\n    isNestedList,\n    onSelectItem: onSelectItemProp\n  } = _ref;\n  const {\n    updateScrollSpy,\n    setScrollPanel,\n    setFilterText,\n    searchInput,\n    height,\n    filterText,\n    placeholderText,\n    handleTitleClick,\n    filteredItems,\n    setCategoryElement,\n    activeHeadKey,\n    favoritesId,\n    handleFilterClick,\n    focusedCategoryKey,\n    activeCategoryKey\n  } = store;\n  const onSelectItem = onSelectItemProp || store.onSelectItem;\n  const {\n    isMobile\n  } = store.chart;\n  const innerPanel = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_ResultsPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n    onSelectItem: (item, category_id) => {\n      onSelectItem?.(item, category_id);\n      setFilterText('');\n    },\n    disableAll: disableAll,\n    isNestedList: isNestedList,\n    handleTitleClick: handleTitleClick,\n    filteredItems: filteredItems,\n    setCategoryElement: setCategoryElement,\n    activeHeadKey: activeHeadKey,\n    ItemType: _Item__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    favoritesId: favoritesId\n  });\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-mcd ${isNestedList ? 'sc-mcd--nested' : ''}`,\n    style: {\n      height\n    },\n    id: id\n  }, !isMobile && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__tabs\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__tabs__head\"\n  }, t.translate('Markets')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__tabs__body\"\n  }, !isNestedList && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_FilterPanel__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    filteredItems: filteredItems,\n    handleFilterClick: handleFilterClick,\n    activeCategoryKey: activeCategoryKey,\n    focusedCategoryKey: focusedCategoryKey,\n    isSearching: filterText !== ''\n  }))), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__content__head\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_SearchInput__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n    placeholder: placeholderText,\n    searchInputClassName: searchInputClassName,\n    value: filterText,\n    onChange: setFilterText,\n    searchInput: searchInput\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__content__body\"\n  }, isMobile ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__content__body__scroll\",\n    onScroll: updateScrollSpy,\n    ref: setScrollPanel\n  }, innerPanel) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Scroll__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    autoHide: true,\n    onScroll: updateScrollSpy,\n    setPanel: setScrollPanel\n  }, innerPanel))));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(CategoricalDisplay));\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/FilterPanel.tsx\":\n/*!***********************************************************!*\\\n  !*** ./src/components/categoricaldisplay/FilterPanel.tsx ***!\n  \\***********************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_859348__) => {\n\n\"use strict\";\n__nested_webpack_require_859348__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_859348__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_859348__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_859348__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_859348__(/*! mobx-react-lite */ \"./node_modules/mobx-react-lite/es/index.js\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_859348__(/*! ../Icons */ \"./src/components/Icons.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_859348__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\nconst FilterItemIcon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref => {\n  let {\n    categoryId\n  } = _ref;\n  const CategoryIcon = _Icons__WEBPACK_IMPORTED_MODULE_2__.CategoryIconMap[categoryId];\n  return CategoryIcon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CategoryIcon, {\n    className: `ic-${categoryId}`\n  });\n});\nconst FilterItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref2 => {\n  let {\n    focusedCategoryKey,\n    activeCategoryKey,\n    handleFilterClick,\n    category,\n    isSearching\n  } = _ref2;\n  const isActive = focusedCategoryKey && focusedCategoryKey.length ? focusedCategoryKey === category.categoryId : activeCategoryKey === category.categoryId;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-mcd__filter__item ${isActive && !isSearching ? 'sc-mcd__filter__item--selected' : ''}`,\n    onClick: () => handleFilterClick(category.categoryId)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FilterItemIcon, {\n    categoryId: category.categoryId\n  }), t.translate(category.categoryName));\n});\nconst FilterGroup = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref3 => {\n  let {\n    focusedCategoryKey,\n    activeCategoryKey,\n    handleFilterClick,\n    category,\n    isSearching\n  } = _ref3;\n  const [isGroupActive, setIsGroupActive] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n  const [isOpen, setIsOpen] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(false);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-mcd__filter__item ${isGroupActive && !isSearching ? 'sc-mcd__filter__item--selected' : ''}`,\n    onClick: () => setIsOpen(!isOpen)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FilterItemIcon, {\n    categoryId: category.categoryId\n  }), category.categoryName, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_2__.ArrowIcon, {\n    className: `sc-mcd__filter__group-icon ${isOpen && 'sc-mcd__filter__group-icon--open'}`\n  })), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-mcd__filter__subgroups ${isOpen && 'sc-mcd__filter__subgroups--open'}`\n  }, category.subgroups.map(subgroup => {\n    const isActive = focusedCategoryKey && focusedCategoryKey.length ? focusedCategoryKey === subgroup.categoryId : activeCategoryKey === subgroup.categoryId;\n    const isSubgroupActive = category.subgroups.filter(el => el.categoryId === focusedCategoryKey || !focusedCategoryKey && el.categoryId === activeCategoryKey).length > 0;\n\n    if (isActive && isSubgroupActive && !isGroupActive) {\n      setIsGroupActive(true);\n      setIsOpen(true);\n    } else if (!isSubgroupActive && isGroupActive) {\n      setIsGroupActive(false);\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      key: subgroup?.categoryId,\n      className: `sc-mcd__filter__subgroups-item ${isGroupActive ? 'sc-mcd__filter__item--active' : ''} ${isActive && !isSearching ? 'sc-mcd__filter__item--selected' : ''}`,\n      onClick: () => handleFilterClick(subgroup.categoryId)\n    }, t.translate(subgroup.categoryName));\n  })));\n});\n\nconst FilterPanel = _ref4 => {\n  let {\n    filteredItems,\n    handleFilterClick,\n    focusedCategoryKey,\n    activeCategoryKey,\n    isSearching\n  } = _ref4;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__filter\"\n  }, filteredItems.map(category => {\n    if (category.hasSubgroup) {\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FilterGroup, {\n        key: category.categoryId,\n        category: category,\n        handleFilterClick: handleFilterClick,\n        activeCategoryKey: activeCategoryKey,\n        focusedCategoryKey: focusedCategoryKey,\n        isSearching: isSearching\n      });\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(FilterItem, {\n      key: category.categoryId,\n      category: category,\n      handleFilterClick: handleFilterClick,\n      activeCategoryKey: activeCategoryKey,\n      focusedCategoryKey: focusedCategoryKey,\n      isSearching: isSearching\n    });\n  }));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,mobx_react_lite__WEBPACK_IMPORTED_MODULE_1__.observer)(FilterPanel));\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/Item.tsx\":\n/*!****************************************************!*\\\n  !*** ./src/components/categoricaldisplay/Item.tsx ***!\n  \\****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_865229__) => {\n\n\"use strict\";\n__nested_webpack_require_865229__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_865229__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_865229__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_865229__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_865229__(/*! ../Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Favorite__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_865229__(/*! ../Favorite */ \"./src/components/Favorite.tsx\");\n/* provided dependency */ var t = __nested_webpack_require_865229__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\nconst Icon = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref => {\n  let {\n    id\n  } = _ref;\n\n  if (!id || !_Icons__WEBPACK_IMPORTED_MODULE_1__.ItemIconMap[id]) {\n    return null;\n  }\n\n  const ItemIcon = _Icons__WEBPACK_IMPORTED_MODULE_1__.ItemIconMap[id];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ItemIcon, {\n    className: `ic-${id}`\n  });\n});\nconst ItemName = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref2 => {\n  let {\n    item: {\n      itemId,\n      display\n    }\n  } = _ref2;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__item__name\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Icon, {\n    id: itemId\n  }), display);\n});\nconst ItemDetail = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref3 => {\n  let {\n    favoritesId,\n    item: {\n      dataObject,\n      itemId\n    }\n  } = _ref3;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__item__detail\"\n  }, dataObject && (dataObject.exchange_is_open === undefined || dataObject.exchange_is_open) ? '' : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"closed-market\"\n  }, t.translate('CLOSED')), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Favorite__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n    category: favoritesId,\n    id: itemId\n  }));\n});\n\nconst NormalItemBase = _ref4 => {\n  let {\n    onSelectItem,\n    item,\n    favoritesId\n  } = _ref4;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: `sc-mcd__item sc-mcd__item--${item.itemId} ${item.selected ? 'sc-mcd__item--selected ' : ''}`,\n    onClick: () => item.enabled && onSelectItem?.(item.dataObject)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ItemName, {\n    item: item\n  }), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ItemDetail, {\n    item: item,\n    favoritesId: favoritesId\n  }));\n};\n\nconst NormalItem = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(NormalItemBase);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NormalItem);\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/ResultsPanel.tsx\":\n/*!************************************************************!*\\\n  !*** ./src/components/categoricaldisplay/ResultsPanel.tsx ***!\n  \\************************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_868765__) => {\n\n\"use strict\";\n__nested_webpack_require_868765__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_868765__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_868765__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_868765__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_868765__(/*! classnames */ \"./node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_868765__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_868765__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var src_store__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_868765__(/*! src/store */ \"./src/store/index.ts\");\n/* harmony import */ var _Icons__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_868765__(/*! ../Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_868765__(/*! ../../utils */ \"./src/utils/index.ts\");\n/* provided dependency */ var t = __nested_webpack_require_868765__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\n\n\n\n\n\n\n\nfunction getItemCount(category) {\n  let count = 0;\n\n  if ('categoryName' in category && category.hasSubgroup) {\n    category.subgroups.forEach(subgroup => {\n      for (const sub of subgroup.data) {\n        count += sub.data.length;\n      }\n    });\n  } else if ('categoryName' in category && category.hasSubcategory) {\n    for (const sub of category.data) {\n      count += sub.data.length;\n    }\n  } else {\n    count += category.data.length;\n  }\n\n  return count;\n}\n\nconst EmptyCategory = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref => {\n  let {\n    category\n  } = _ref;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__category__content\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"empty-category\"\n  }, t.translate(category.emptyDescription)));\n});\nconst CategoryTitleLeft = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_ref2 => {\n  let {\n    isNestedList,\n    category\n  } = _ref2;\n  const CategoryIcon = _Icons__WEBPACK_IMPORTED_MODULE_4__.CategoryIconMap[category.categoryId];\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('category-title-left', {\n      'category-title-left__subgroup': !CategoryIcon\n    })\n  }, isNestedList && CategoryIcon ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CategoryIcon, {\n    className: `ic-${category.categoryId}`\n  }) : /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"category-title-left__placeholder\"\n  }), t.translate(category.categoryName));\n});\n\nconst CategoryTitle = _ref3 => {\n  let {\n    category,\n    activeHeadKey,\n    isNestedList,\n    handleTitleClick\n  } = _ref3;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-mcd__category__head', {\n      'has-subtitle': category.categorySubtitle,\n      active: category.active\n    }),\n    onClick: () => handleTitleClick(category.categoryId)\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CategoryTitleLeft, {\n    isNestedList: isNestedList,\n    category: category\n  }), (category.categoryNamePostfixShowIfActive && activeHeadKey === category.categoryId || !category.categoryNamePostfixShowIfActive) && category.categoryNamePostfix && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    className: \"category-name-postfix\"\n  }, category.categoryNamePostfix), category.categorySubtitle && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"category-subtitle\"\n  }, t.translate(category.categorySubtitle)), !category.hasSubgroup && isNestedList ? /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.ArrowIcon, {\n    className: \"arrow\"\n  }) : '');\n};\n\nconst row_subcategory_mapper = {\n  commodity_basket: 'basket-indices/?tab=options#commodities-basket',\n  forex_basket: 'basket-indices/?tab=options#forex-basket',\n  random_index: 'synthetic/?tab=options#continuous-indices',\n  crash_index: 'synthetic/?tab=multipliers#crash-boom',\n  random_daily: 'synthetic/?tab=options#daily-reset-indices',\n  jump_index: 'synthetic/?tab=options#jump-indices',\n  step_index: 'synthetic/?tab=multipliers#step-indices',\n  major_pairs: 'forex/?tab=options#major-pairs',\n  minor_pairs: 'forex/?tab=options#minor-pairs',\n  americas_OTC: 'stock/?tab=options#american-indices',\n  asia_oceania_OTC: 'stock/?tab=options#asian-indices',\n  europe_OTC: 'stock/?tab=options#european-indices',\n  non_stable_coin: 'cryptocurrencies/?tab=multipliers#crypto-pairs',\n  energy: 'commodities/?tab=options#energy',\n  metals: 'commodities/?tab=options#metals'\n};\nconst eu_subcategory_mapper = {\n  random_index: 'synthetic/?tab=multipliers#continuous-indices',\n  crash_index: 'synthetic/?tab=multipliers#crash-boom',\n  major_pairs: 'forex/?tab=multipliers#major-pairs',\n  non_stable_coin: 'cryptocurrencies/?tab=multipliers#crypto-pairs'\n};\n\nconst redirectLink = (subCategoryId, should_show_eu_content) => {\n  const DEFAULT_LANGUAGE = 'EN';\n  const lang_from_url = new URLSearchParams(window.location.search).get('lang')?.toLowerCase() || DEFAULT_LANGUAGE.toLowerCase();\n  const link_mapper = should_show_eu_content ? eu_subcategory_mapper[subCategoryId] : row_subcategory_mapper[subCategoryId];\n  let language = `${lang_from_url}/`;\n  const modified_lang_code = lang_from_url.replace('_', '-');\n  if (lang_from_url.includes('_')) language = `${modified_lang_code}/`;\n  let link = `https://deriv.com/${language}`;\n  if (link_mapper) link += `markets/${link_mapper}/`;\n  return link;\n};\n\nconst RedirectIcon = _ref4 => {\n  let {\n    subcategory\n  } = _ref4;\n  const {\n    state\n  } = (0,src_store__WEBPACK_IMPORTED_MODULE_3__.useStores)();\n  const {\n    should_show_eu_content\n  } = state;\n  const derivComLink = redirectLink(subcategory.subcategoryId, !!should_show_eu_content);\n\n  const onInfoClick = () => {\n    state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_2__.STATE.MARKET_INFO_REDIRECT, {\n      symbol_category: (0,_utils__WEBPACK_IMPORTED_MODULE_5__.getSymbolMarketCategory)(subcategory.data[0].dataObject)\n    });\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"a\", {\n    href: derivComLink,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    onClick: onInfoClick\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Icons__WEBPACK_IMPORTED_MODULE_4__.InfoCircleIcon, null));\n};\n\nconst Category = _ref5 => {\n  let {\n    category,\n    categoryItemCount,\n    ItemType,\n    setCategoryElement,\n    onSelectItem,\n    activeHeadKey,\n    disableAll,\n    isNestedList,\n    handleTitleClick,\n    hasSubgroup,\n    favoritesId\n  } = _ref5;\n\n  const handleSelectItem = symbol_object => {\n    onSelectItem?.(symbol_object, category.categoryId);\n  };\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-mcd__category', `sc-mcd__category--${category.categoryId}`, {\n      'sc-mcd__category--has-subtitle': category.categorySubtitle,\n      'sc-mcd__category--active': category.active\n    }),\n    ref: el => setCategoryElement(el, category.categoryId)\n  }, (isNestedList || !category.hasSubcategory) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CategoryTitle, {\n    category: category,\n    activeHeadKey: activeHeadKey,\n    isNestedList: !!isNestedList,\n    handleTitleClick: handleTitleClick,\n    hasSubgroup: hasSubgroup\n  }), !category.hasSubgroup && category.hasSubcategory ? category.data.filter(subcategory => getItemCount(subcategory) > 0).map(subcategory => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('sc-mcd__category__content', `sc-mcd__category__content--${(0,_utils__WEBPACK_IMPORTED_MODULE_5__.stringToSlug)(subcategory.subcategoryName)}`, 'sc-mcd__category--has-subgroup', 'sc-mcd__category__content--has-subcategory'),\n    key: subcategory.subcategoryName\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"subcategory\"\n  }, t.translate(subcategory.subcategoryName), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(RedirectIcon, {\n    subcategory: subcategory\n  })), subcategory.data.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ItemType, {\n    key: item.display,\n    item: item,\n    onSelectItem: handleSelectItem,\n    disableAll: disableAll,\n    favoritesId: favoritesId\n  })))) : !category.hasSubgroup && category.data.length > 0 && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"sc-mcd__category__content\"\n  }, category.data.map(item => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ItemType, {\n    key: item.itemId,\n    item: item,\n    onSelectItem: handleSelectItem,\n    disableAll: disableAll,\n    favoritesId: favoritesId\n  }))), categoryItemCount === 0 && category.emptyDescription && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(EmptyCategory, {\n    category: category\n  }));\n};\n\nconst ResultsPanel = _ref6 => {\n  let {\n    filteredItems,\n    onSelectItem,\n    ItemType,\n    setCategoryElement,\n    activeHeadKey,\n    disableAll,\n    isNestedList,\n    handleTitleClick,\n    favoritesId\n  } = _ref6;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, filteredItems.map(category => {\n    const categoryItemCount = getItemCount(category);\n\n    if (!category.hasSubgroup) {\n      return (categoryItemCount > 0 || category.emptyDescription) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Category, {\n        key: category.categoryId,\n        ItemType: ItemType,\n        category: category,\n        categoryItemCount: categoryItemCount,\n        setCategoryElement: setCategoryElement,\n        onSelectItem: onSelectItem,\n        activeHeadKey: activeHeadKey,\n        disableAll: disableAll,\n        isNestedList: isNestedList,\n        handleTitleClick: handleTitleClick,\n        favoritesId: favoritesId\n      });\n    }\n\n    return (categoryItemCount > 0 || category.emptyDescription) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), {\n      key: category.categoryId\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Category, {\n      key: category.categoryId,\n      ItemType: ItemType,\n      category: category,\n      categoryItemCount: categoryItemCount,\n      setCategoryElement: setCategoryElement,\n      onSelectItem: onSelectItem,\n      activeHeadKey: activeHeadKey,\n      disableAll: disableAll,\n      isNestedList: isNestedList,\n      handleTitleClick: handleTitleClick,\n      favoritesId: favoritesId\n    }), category.subgroups?.map(subgroup => {\n      if (getItemCount(subgroup) > 0) {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Category, {\n          key: subgroup.categoryId,\n          ItemType: ItemType,\n          category: subgroup,\n          categoryItemCount: categoryItemCount,\n          setCategoryElement: setCategoryElement,\n          onSelectItem: onSelectItem,\n          activeHeadKey: activeHeadKey,\n          disableAll: disableAll,\n          isNestedList: isNestedList,\n          handleTitleClick: handleTitleClick,\n          hasSubgroup: true,\n          favoritesId: favoritesId\n        });\n      }\n    }));\n  }));\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ResultsPanel);\n\n/***/ }),\n\n/***/ \"./src/components/categoricaldisplay/index.ts\":\n/*!****************************************************!*\\\n  !*** ./src/components/categoricaldisplay/index.ts ***!\n  \\****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_881497__) => {\n\n\"use strict\";\n__nested_webpack_require_881497__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_881497__.d(__nested_webpack_exports__, {\n/* harmony export */   \"CategoricalDisplay\": () => (/* reexport safe */ _CategoricalDisplay__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"FilterPanel\": () => (/* reexport safe */ _FilterPanel__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"NormalItem\": () => (/* reexport safe */ _Item__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"ResultsPanel\": () => (/* reexport safe */ _ResultsPanel__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _CategoricalDisplay__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_881497__(/*! ./CategoricalDisplay */ \"./src/components/categoricaldisplay/CategoricalDisplay.tsx\");\n/* harmony import */ var _FilterPanel__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_881497__(/*! ./FilterPanel */ \"./src/components/categoricaldisplay/FilterPanel.tsx\");\n/* harmony import */ var _Item__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_881497__(/*! ./Item */ \"./src/components/categoricaldisplay/Item.tsx\");\n/* harmony import */ var _ResultsPanel__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_881497__(/*! ./ResultsPanel */ \"./src/components/categoricaldisplay/ResultsPanel.tsx\");\n\n\n\n\n\n\n/***/ }),\n\n/***/ \"./src/components/ui/Context.ts\":\n/*!**************************************!*\\\n  !*** ./src/components/ui/Context.ts ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_883069__) => {\n\n\"use strict\";\n__nested_webpack_require_883069__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_883069__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * UI context helper class.\n * @param {HTMLElement} topNode The top node of the DOM tree for this context. That node should contain\n * @param {object} [params] Optional parameters\n * @constructor\n */\nclass Context {\n  constructor(topNode, params) {\n    _defineProperty(this, \"params\", void 0);\n\n    _defineProperty(this, \"topNode\", void 0);\n\n    this.params = params || {};\n    this.topNode = topNode;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Context);\n\n/***/ }),\n\n/***/ \"./src/components/ui/utils.ts\":\n/*!************************************!*\\\n  !*** ./src/components/ui/utils.ts ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_884243__) => {\n\n\"use strict\";\n__nested_webpack_require_884243__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_884243__.d(__nested_webpack_exports__, {\n/* harmony export */   \"capitalize\": () => (/* binding */ capitalize),\n/* harmony export */   \"createElement\": () => (/* binding */ createElement),\n/* harmony export */   \"downloadURI\": () => (/* binding */ downloadURI),\n/* harmony export */   \"getParents\": () => (/* binding */ getParents),\n/* harmony export */   \"getUniqueId\": () => (/* binding */ getUniqueId),\n/* harmony export */   \"hexToInt\": () => (/* binding */ hexToInt),\n/* harmony export */   \"intToHexColor\": () => (/* binding */ intToHexColor),\n/* harmony export */   \"setHidden\": () => (/* binding */ setHidden)\n/* harmony export */ });\n// jQuery parents() vanilla alternative: https://stackoverflow.com/a/12981248/1471258\nfunction getParents(el) {\n  let parentSelector = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'body';\n  const parentElement = document.querySelector(parentSelector);\n\n  if (!parentElement) {\n    return [];\n  }\n\n  const parents = [];\n  let p = el.parentNode;\n\n  while (p !== parentElement) {\n    // if parentElement is not in hierarchy\n    if (p === null) {\n      return [];\n    }\n\n    parents.push(p);\n    p = p.parentNode;\n  } // Include parent element in parents\n\n\n  parents.push(parentElement);\n  return parents;\n}\nfunction createElement(html) {\n  const wrapper = document.createElement('div');\n  wrapper.innerHTML = html;\n  return wrapper.firstChild;\n}\nfunction setHidden(element, isHidden) {\n  if (isHidden) {\n    element.setAttribute('hidden', 'true');\n  } else {\n    element.removeAttribute('hidden');\n  }\n}\nfunction downloadURI(uri, name) {\n  const link = document.createElement('a');\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\nfunction getUniqueId() {\n  let s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  };\n\n  return '__' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4() + '__';\n}\nfunction hexToInt(color) {\n  // Tranforms hex color code to integer so that dart can create Color object from it.\n  // Eg: #443a49 -> 0xff443a49 -> 4282661449 or 0xff443a49 -> 4282661449\n  const colorCode = color.replace('#', '0xff');\n  return parseInt(colorCode, 16);\n}\nfunction capitalize(str) {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction intToHexColor(intColor) {\n  // Convert the integer color to a hexadecimal string without the \"0x\" prefix.\n  const hexString = (intColor & 0xffffff).toString(16).toUpperCase(); // Pad the hexadecimal string with zeros to ensure it has 6 digits.\n\n  const paddedHexString = ('000000' + hexString).slice(-6); // Add the \"#\" prefix to the padded hexadecimal string.\n\n  return `#${paddedHexString}`;\n}\n\n/***/ }),\n\n/***/ \"./src/feed/Feed.ts\":\n/*!**************************!*\\\n  !*** ./src/feed/Feed.ts ***!\n  \\**************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_887371__) => {\n\n\"use strict\";\n__nested_webpack_require_887371__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_887371__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_887371__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_887371__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_887371__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var src_utils_date__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_887371__(/*! src/utils/date */ \"./src/utils/date.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_887371__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_887371__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.ts\");\n/* harmony import */ var _subscription__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_887371__(/*! ./subscription */ \"./src/feed/subscription/index.ts\");\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_887371__(/*! ./TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nclass Feed {\n  static get EVENT_MASTER_DATA_UPDATE() {\n    return 'EVENT_MASTER_DATA_UPDATE';\n  }\n\n  static get EVENT_MASTER_DATA_REINITIALIZE() {\n    return 'EVENT_MASTER_DATA_REASSIGN';\n  }\n\n  static get EVENT_START_PAGINATION() {\n    return 'EVENT_START_PAGINATION';\n  }\n\n  static get EVENT_ON_PAGINATION() {\n    return 'EVENT_ON_PAGINATION';\n  }\n\n  get startEpoch() {\n    return this._mainStore.state.startEpoch;\n  }\n\n  get endEpoch() {\n    return this._mainStore.state.endEpoch;\n  }\n\n  get granularity() {\n    return this._mainStore.chart.granularity;\n  }\n\n  get allTicks() {\n    return this._mainStore.state.allTicks;\n  }\n\n  get shouldFetchTickHistory() {\n    return this._mainStore.state.shouldFetchTickHistory || false;\n  }\n\n  get contractInfo() {\n    return this._mainStore.state.contractInfo;\n  }\n\n  get loader() {\n    return this._mainStore.loader;\n  }\n\n  get margin() {\n    return this._mainStore.state.margin;\n  }\n\n  get hasAlternativeSource() {\n    return this._mainStore.state.shouldDrawTicksFromContractInfo;\n  }\n\n  get paginationLoader() {\n    return this._mainStore.paginationLoader;\n  }\n\n  constructor(binaryApi, mainStore, tradingTimes) {\n    _defineProperty(this, \"_binaryApi\", void 0);\n\n    _defineProperty(this, \"_connectionClosedDate\", void 0);\n\n    _defineProperty(this, \"_emitter\", void 0);\n\n    _defineProperty(this, \"_mainStore\", void 0);\n\n    _defineProperty(this, \"_serverTime\", void 0);\n\n    _defineProperty(this, \"tickQueue\", []);\n\n    _defineProperty(this, \"_tradingTimes\", void 0);\n\n    _defineProperty(this, \"quotes\", []);\n\n    _defineProperty(this, \"_activeStreams\", {});\n\n    _defineProperty(this, \"_isConnectionOpened\", true);\n\n    _defineProperty(this, \"onRangeChanged\", () => {\n      // TODO: load the range data\n      this._mainStore.state.setChartIsReady(false);\n\n      this._mainStore.state.saveLayout();\n\n      this._mainStore.state.setChartIsReady(true);\n    });\n\n    this._binaryApi = binaryApi;\n    this._mainStore = mainStore;\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    this._tradingTimes = tradingTimes;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_6__.reaction)(() => mainStore.state.isConnectionOpened, this.onConnectionChanged.bind(this));\n    this._emitter = new (event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default())({\n      emitDelay: 0\n    });\n  }\n\n  // although not used, subscribe is overridden so that unsubscribe will be called by Chart Engine\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  subscribe() {}\n\n  unsubscribe(_ref) {\n    let {\n      symbol,\n      granularity\n    } = _ref;\n\n    // the chart forgets the ticks_history of the main chart symbol before sending a new request in fetchInitialData function.\n    const key = this._getKey({\n      symbol,\n      granularity\n    });\n\n    this._forgetStream(key);\n  }\n\n  _forgetStream(key) {\n    if (this._activeStreams[key]) {\n      this._activeStreams[key].forget();\n\n      delete this._activeStreams[key];\n    }\n  }\n\n  processQuotes(quotes) {\n    quotes.forEach(quote => {\n      quote.DT = new Date(`${quote.Date}Z`);\n    });\n  }\n\n  updateQuotes(quotes, append) {\n    this.processQuotes(quotes);\n\n    if (append) {\n      this.quotes.unshift(...quotes);\n    } else {\n      this.quotes = quotes;\n    }\n  }\n\n  addQuote(quote) {\n    this.processQuotes([quote]);\n    this.quotes.push(quote);\n  }\n\n  getQuoteForEpoch(epoch) {\n    return this.quotes.find(q => {\n      return q.DT?.getTime() == epoch;\n    });\n  }\n\n  getQuoteIndexForEpoch(epoch) {\n    return this.quotes.findIndex(q => {\n      return q.DT?.getTime() == epoch;\n    });\n  }\n\n  getClosestValidEpoch(epoch, granularity) {\n    return Math.round(epoch / granularity) * granularity;\n  }\n\n  getClosestQuoteForEpoch(epoch) {\n    const index = this.findEpochIndex(epoch);\n\n    if (index < 0) {\n      return this.quotes[0];\n    } else if (index > this.quotes.length - 1) {\n      return this.quotes[this.quotes.length - 1];\n    } else {\n      const leftTick = this.quotes[Math.floor(index)];\n      const rightTick = this.quotes[Math.ceil(index)];\n      const distanceToLeft = epoch - leftTick.DT.getTime();\n      const distanceToRight = rightTick.DT.getTime() - epoch;\n      return distanceToLeft <= distanceToRight ? leftTick : rightTick;\n    }\n  }\n\n  getClosestQuoteIndexForEpoch(epoch) {\n    const index = this.findEpochIndex(epoch);\n\n    if (index < 0) {\n      return this.quotes[0];\n    } else if (index > this.quotes.length - 1) {\n      return this.quotes[this.quotes.length - 1];\n    } else {\n      const leftTick = this.quotes[Math.floor(index)];\n      const rightTick = this.quotes[Math.ceil(index)];\n      const distanceToLeft = epoch - leftTick.DT.getTime();\n      const distanceToRight = rightTick.DT.getTime() - epoch;\n      return distanceToLeft <= distanceToRight ? Math.floor(index) : Math.ceil(index);\n    }\n  }\n\n  findEpochIndex(epoch) {\n    let left = -1;\n    let right = this.quotes.length;\n\n    while (right - left > 1) {\n      const mid = Math.trunc((left + right) / 2);\n      const pivot = this.quotes[mid].DT?.getTime();\n\n      if (!pivot) {\n        return mid;\n      }\n\n      if (epoch < pivot) {\n        right = mid;\n      } else if (epoch > pivot) {\n        left = mid;\n      } else {\n        return mid;\n      }\n    }\n\n    if (left >= 0 && epoch == this.quotes[left].DT?.getTime()) {\n      return left;\n    } else if (right < this.quotes.length && epoch == this.quotes[right].DT?.getTime()) {\n      return right;\n    } else {\n      return (left + right) / 2;\n    }\n  }\n\n  getQuotesInterval() {\n    if (this.quotes.length <= 1) return 1;\n    const cumulativeDelta = this.quotes.reduce((acc, val, index, array) => {\n      const currentDT = val.DT?.getTime();\n      const prevDT = array[index - 1]?.DT?.getTime();\n\n      if (prevDT && currentDT) {\n        const delta = (currentDT - prevDT) / 1000;\n        return acc + delta;\n      }\n\n      return acc;\n    }, 0);\n    return Math.round(cumulativeDelta / (this.quotes.length - 1));\n  }\n\n  async fetchInitialData(symbol, params, callback) {\n    this.tickQueue = [];\n    this.setHasReachedEndOfData(false);\n    this.paginationLoader.updateOnPagination(true);\n    const {\n      granularity,\n      symbolObject\n    } = params;\n\n    const key = this._getKey({\n      symbol,\n      granularity\n    });\n\n    let start = this.margin && this.startEpoch ? this.startEpoch - this.margin : this.startEpoch;\n    const end = this.margin && this.endEpoch ? this.endEpoch + this.margin : this.endEpoch;\n    const symbolName = symbolObject.name;\n    this.loader.setState('chart-data');\n\n    if (this._tradingTimes.isFeedUnavailable(symbol)) {\n      this._mainStore.notifier.notifyFeedUnavailable(symbolName);\n\n      let dataCallback = {\n        quotes: []\n      };\n\n      this._mainStore.chart.setChartAvailability(false);\n\n      callback(dataCallback);\n      return;\n    }\n\n    const tickHistoryRequest = {\n      symbol,\n      granularity: granularity,\n      start,\n      count: this.endEpoch ? undefined : this._mainStore.lastDigitStats.count\n    };\n    const validation_error = this.contractInfo.validation_error_code;\n    let getHistoryOnly = false;\n    let quotes;\n\n    if (end) {\n      // When there is end; no streaming required\n      tickHistoryRequest.end = String(end);\n      getHistoryOnly = true;\n    } else if (validation_error !== 'MarketIsClosed' && validation_error !== 'MarketIsClosedTryVolatility') {\n      let subscription;\n\n      const delay = this._tradingTimes.getDelayedMinutes(symbol);\n\n      if (delay > 0) {\n        this._mainStore.notifier.notifyDelayedMarket(symbolName, delay);\n\n        subscription = new _subscription__WEBPACK_IMPORTED_MODULE_4__.DelayedSubscription(tickHistoryRequest, this._binaryApi, delay, this._mainStore);\n      } else {\n        subscription = new _subscription__WEBPACK_IMPORTED_MODULE_4__.RealtimeSubscription(tickHistoryRequest, this._binaryApi, this._mainStore);\n      }\n\n      try {\n        const {\n          quotes: new_quotes,\n          response\n        } = await subscription.initialFetch();\n        quotes = new_quotes;\n\n        if (!this.endEpoch) {\n          this._mainStore.lastDigitStats.updateLastDigitStats(response);\n        }\n      } catch (error) {\n        const {\n          message: text\n        } = error;\n\n        this._mainStore.notifier.notify({\n          text: text,\n          type: 'error',\n          category: 'activesymbol'\n        });\n\n        callback({\n          quotes: []\n        });\n        this.paginationLoader.updateOnPagination(false);\n        return;\n      }\n\n      subscription.onChartData(tickResponse => {\n        // Append comming ticks to chart only if it belongs to selected symbol after symbol changes\n        if (symbol === this._mainStore.chart.currentActiveSymbol?.symbol && !this.hasAlternativeSource) {\n          this._appendChartData(tickResponse, key);\n        }\n      }); // if symbol is changed before request is completed, past request needs to be forgotten:\n\n      if (this._mainStore.chart.isDestroyed || this._mainStore.state.symbol && this._mainStore.state.symbol !== symbol) {\n        callback({\n          quotes: []\n        });\n        subscription.forget();\n        return;\n      }\n\n      this._activeStreams[key] = subscription;\n    } else {\n      this._mainStore.notifier.notifyMarketClose(symbolName); // Although market is closed, we display the past tick history data\n\n\n      getHistoryOnly = true;\n    }\n\n    if (getHistoryOnly) {\n      if (this.shouldFetchTickHistory || !this.contractInfo.tick_stream) {\n        const response = await this._binaryApi.getTickHistory(tickHistoryRequest);\n        quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_5__.TickHistoryFormatter.formatHistory(response);\n      } else {\n        // Passed all_ticks from Deriv-app store modules.contract_replay.contract_store.contract_info.audit_details.all_ticks\n        // Waits for the flutter chart to unmount previous chart\n        const allTicksContract = await new Promise(resolve => {\n          setTimeout(() => resolve(this.allTicks), 50);\n        });\n        quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_5__.TickHistoryFormatter.formatAllTicks(allTicksContract);\n      }\n    }\n\n    if (!quotes) {\n      callback({\n        quotes: []\n      });\n      return;\n    }\n\n    quotes = this._trimQuotes(quotes);\n    callback({\n      quotes\n    });\n\n    this._emitDataUpdate(quotes, true);\n\n    this.paginationLoader.updateOnPagination(false);\n  }\n\n  async fetchPaginationData(symbol, end, count, granularity, callback) {\n    this.paginationLoader.updateOnPagination(true); // ignore comparisons\n\n    this._emitter.emit(Feed.EVENT_START_PAGINATION, {\n      end\n    });\n\n    await this._getPaginationData(symbol, granularity, count, end, callback);\n    this.paginationLoader.updateOnPagination(false);\n  }\n\n  async _getPaginationData(symbol, granularity, count, end, callback) {\n    const isMainChart = true; // TODO There is no need to get historical data before startTime\n\n    if (this.startEpoch\n    /* && start < this.startEpoch */\n    || this.endEpoch && end > this.endEpoch) {\n      callback({\n        moreAvailable: false,\n        quotes: []\n      }); // ignore comparisons\n\n      this._emitter.emit(Feed.EVENT_ON_PAGINATION, {\n        end\n      });\n\n      this.setHasReachedEndOfData(true);\n      return;\n    }\n\n    const now = this._serverTime.getEpoch(); // Tick history data only goes as far back as 3 years:\n\n\n    const startLimit = now - Math.ceil(2.8 * 365 * 24 * 60 * 60);\n    /* == 3 Years */\n\n    let result = {\n      quotes: []\n    };\n    let firstEpoch;\n\n    if (end > startLimit) {\n      try {\n        const response = await this._binaryApi.getTickHistory({\n          symbol,\n          granularity: granularity,\n          count: `${count}`,\n          end: String(end)\n        });\n\n        if (response.error) {\n          const {\n            message: text\n          } = response.error;\n          this.loader.hide();\n\n          this._mainStore.notifier.notify({\n            text: text,\n            type: 'error',\n            category: 'activesymbol'\n          });\n\n          callback({\n            error: response.error\n          });\n          return;\n        }\n\n        firstEpoch = Feed.getFirstEpoch(response);\n\n        if (firstEpoch === undefined || firstEpoch === end) {\n          callback({\n            moreAvailable: false,\n            quotes: []\n          });\n          this.setHasReachedEndOfData(true);\n          return;\n        }\n\n        result.quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_5__.TickHistoryFormatter.formatHistory(response);\n\n        if (firstEpoch <= startLimit) {\n          callback({\n            moreAvailable: false,\n            quotes: []\n          });\n          this.setHasReachedEndOfData(true);\n        }\n      } catch (err) {\n        console.error(err);\n        result = {\n          error: err\n        };\n      }\n    }\n\n    callback(result);\n\n    if (isMainChart) {\n      // ignore comparisons\n      // prevent overlapping by setting pagination end as firstEpoch\n      // if 'end' is greater than firstEpoch from feed\n      const paginationEnd = firstEpoch && end > firstEpoch ? firstEpoch : end;\n\n      this._emitter.emit(Feed.EVENT_ON_PAGINATION, {\n        end: paginationEnd\n      });\n    }\n  }\n\n  setHasReachedEndOfData(hasReachedEndOfData) {\n    this.paginationLoader.updateOnPagination(false);\n\n    if (this._mainStore.state.hasReachedEndOfData !== hasReachedEndOfData) {\n      this._mainStore.state.hasReachedEndOfData = hasReachedEndOfData;\n    }\n  }\n\n  unsubscribeAll() {\n    for (const key of Object.keys(this._activeStreams)) {\n      this._forgetStream(key);\n    }\n  }\n\n  _forgetIfEndEpoch(key) {\n    const subscription = this._activeStreams[key];\n    let result = true;\n\n    if (!subscription) {\n      return;\n    }\n\n    const lastEpoch = subscription.lastStreamEpoch;\n\n    if (this.endEpoch && lastEpoch !== undefined && this.granularity !== undefined && lastEpoch + this.granularity > this.endEpoch) {\n      if (this._activeStreams[key] && this.granularity === 0 && !this._mainStore.state.isStaticChart && (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getUTCDate)(this.endEpoch)).valueOf() >= this.quotes.slice(-1)[0]?.Date.valueOf()) {\n        result = false;\n      }\n\n      this._forgetStream(key);\n    } else {\n      result = false;\n    }\n\n    return result;\n  }\n\n  _appendChartData(quotes, key) {\n    let fromAlternativeSource = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (this._forgetIfEndEpoch(key) && !this._activeStreams[key]) {\n      quotes = [];\n      return;\n    }\n\n    if (!this.hasAlternativeSource || fromAlternativeSource) {\n      if (fromAlternativeSource) {\n        if (!this.tickQueue.length) {\n          this.tickQueue = [quotes[quotes.length - 1]];\n          return;\n        }\n\n        if (this.tickQueue[0].tick?.epoch === quotes[quotes.length - 1].tick?.epoch) return;\n        this.tickQueue = [quotes[quotes.length - 1]];\n        quotes = [quotes[quotes.length - 1]];\n      }\n    }\n\n    this._emitDataUpdate(quotes);\n  }\n\n  appendChartDataFromPOCResponse(contract_info) {\n    const ticks = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_5__.TickHistoryFormatter.formatPOCTick(contract_info);\n\n    if (ticks) {\n      this._appendChartData(ticks, ticks[0].tick.symbol, true);\n    }\n  }\n\n  _emitDataUpdate(quotes) {\n    let isChartReinitialized = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const prev = quotes[quotes.length - 2];\n    const prevClose = prev !== undefined ? prev.Close : undefined;\n    const dataUpdate = { ...quotes[quotes.length - 1],\n      prevClose\n    };\n\n    if (isChartReinitialized) {\n      this._emitter.emit(Feed.EVENT_MASTER_DATA_REINITIALIZE);\n\n      this._mainStore.chart.setChartAvailability(true);\n    } else {\n      this._emitter.emit(Feed.EVENT_MASTER_DATA_UPDATE, dataUpdate);\n    }\n  }\n\n  static getFirstEpoch(_ref2) {\n    let {\n      candles,\n      history\n    } = _ref2;\n\n    if (candles && candles.length > 0) {\n      return candles[0].epoch;\n    }\n\n    if (history && history.times && history.times.length > 0) {\n      const {\n        times\n      } = history;\n      return +times[0];\n    }\n  }\n\n  onMasterDataUpdate(callback) {\n    this._emitter.on(Feed.EVENT_MASTER_DATA_UPDATE, callback);\n  }\n\n  offMasterDataUpdate(callback) {\n    this._emitter.off(Feed.EVENT_MASTER_DATA_UPDATE, callback);\n  }\n\n  onMasterDataReinitialize(callback) {\n    this._emitter.on(Feed.EVENT_MASTER_DATA_REINITIALIZE, callback);\n  }\n\n  offMasterDataReinitialize(callback) {\n    this._emitter.off(Feed.EVENT_MASTER_DATA_REINITIALIZE, callback);\n  }\n\n  onPagination(callback) {\n    this._emitter.on(Feed.EVENT_ON_PAGINATION, callback);\n  }\n\n  offPagination(callback) {\n    this._emitter.off(Feed.EVENT_ON_PAGINATION, callback);\n  }\n\n  onStartPagination(callback) {\n    this._emitter.on(Feed.EVENT_START_PAGINATION, callback);\n  }\n\n  offStartPagination(callback) {\n    this._emitter.off(Feed.EVENT_START_PAGINATION, callback);\n  }\n\n  onConnectionChanged() {\n    const isOpened = this._mainStore.state.isConnectionOpened;\n\n    if (isOpened === undefined || isOpened === this._isConnectionOpened) {\n      return;\n    }\n\n    this._isConnectionOpened = isOpened;\n\n    if (isOpened) {\n      this._onConnectionReopened();\n    } else {\n      this._onConnectionClosed();\n    }\n  }\n\n  _onConnectionClosed() {\n    for (const key in this._activeStreams) {\n      this._activeStreams[key].pause();\n    }\n\n    this._connectionClosedDate = new Date();\n  }\n\n  _onConnectionReopened() {\n    const keys = Object.keys(this._activeStreams);\n\n    if (keys.length === 0) {\n      return;\n    }\n\n    this._mainStore.chart.refreshChart();\n\n    this._connectionClosedDate = undefined;\n  }\n\n  _resumeStream(key) {\n    this._activeStreams[key].pause();\n\n    this._activeStreams[key].resume().then(params => {\n      const {\n        quotes\n      } = params;\n\n      this._appendChartData(quotes, key);\n    });\n  }\n\n  _getKey(_ref3) {\n    let {\n      symbol,\n      granularity\n    } = _ref3;\n    return `${symbol}-${granularity}`;\n  }\n\n  _unpackKey(key) {\n    const [symbol, granularity] = key.split('-');\n    return {\n      symbol,\n      granularity: +granularity\n    };\n  }\n\n  _trimQuotes() {\n    let quotes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let startTickIndex = null;\n    let endTickIndex = null;\n    let trimmedQuotes = quotes;\n    if (!trimmedQuotes.length) return [];\n\n    if (this.startEpoch && this.margin) {\n      startTickIndex = trimmedQuotes.findIndex(tick => (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)(tick.Date) >= (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getUTCDate)(this.startEpoch)));\n\n      if (startTickIndex > 0) {\n        trimmedQuotes = trimmedQuotes.slice(startTickIndex - 1);\n      }\n    }\n\n    if (this.endEpoch && this.margin) {\n      endTickIndex = trimmedQuotes.findIndex(tick => (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)(tick.Date) >= (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getUTCDate)(this.endEpoch)));\n\n      if (endTickIndex > -1) {\n        const addon = (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)(trimmedQuotes[endTickIndex].Date) === (0,src_utils_date__WEBPACK_IMPORTED_MODULE_1__.strToDateTime)((0,_utils__WEBPACK_IMPORTED_MODULE_2__.getUTCDate)(this.endEpoch)) ? 2 : 1;\n        trimmedQuotes = trimmedQuotes.slice(0, endTickIndex + addon);\n      }\n    }\n\n    return trimmedQuotes;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Feed);\n\n/***/ }),\n\n/***/ \"./src/feed/TickHistoryFormatter.ts\":\n/*!******************************************!*\\\n  !*** ./src/feed/TickHistoryFormatter.ts ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_909018__) => {\n\n\"use strict\";\n__nested_webpack_require_909018__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_909018__.d(__nested_webpack_exports__, {\n/* harmony export */   \"TickHistoryFormatter\": () => (/* binding */ TickHistoryFormatter)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_909018__(/*! ../utils */ \"./src/utils/index.ts\");\n\nclass TickHistoryFormatter {\n  static formatHistory(response) {\n    const {\n      history,\n      candles\n    } = response;\n\n    if (history) {\n      const {\n        times = [],\n        prices = []\n      } = history;\n      const quotes = prices.map((p, idx) => ({\n        Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(+times[idx]),\n        Close: +p\n      }));\n      return quotes;\n    }\n\n    if (candles) {\n      const quotes = candles.map(c => {\n        const candle = c;\n        return {\n          Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(+candle.epoch),\n          Open: +candle.open,\n          High: +candle.high,\n          Low: +candle.low,\n          Close: +candle.close\n        };\n      });\n      return quotes;\n    }\n\n    return undefined;\n  }\n\n  static formatTick(response) {\n    if ('tick' in response) {\n      const {\n        tick\n      } = response;\n      const t = tick;\n      return {\n        Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(+t.epoch),\n        Close: +t.quote,\n        // Keep the origial value.\n        // It'll be used to pass down to deriv.app in BottomWidgets.\n        // TODO: use tick.epoch in RawMarker to speed up calculations.\n        tick\n      };\n    }\n\n    if ('ohlc' in response) {\n      const {\n        ohlc\n      } = response;\n      return {\n        Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(+ohlc.open_time),\n        Open: +ohlc.open,\n        High: +ohlc.high,\n        Low: +ohlc.low,\n        Close: +ohlc.close,\n        ohlc\n      };\n    }\n\n    return undefined;\n  }\n\n  static formatAllTicks(allTicksContract) {\n    const getNearestTick = index => {\n      const nextItem = allTicksContract?.[index + 1];\n      const prevItem = allTicksContract?.[index - 1];\n      return prevItem?.tick && nextItem?.tick ? (0,_utils__WEBPACK_IMPORTED_MODULE_0__.lerp)(prevItem?.tick, nextItem?.tick, 0.5) : nextItem?.tick || prevItem?.tick;\n    };\n\n    return allTicksContract?.map((res, index) => ({\n      Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(+res.epoch),\n      Close: +(res.tick || getNearestTick(index))\n    }));\n  }\n\n  static formatPOCTick(contract_info) {\n    const {\n      tick_stream = [],\n      underlying = ''\n    } = contract_info || {};\n\n    if (tick_stream.length && underlying) {\n      return tick_stream.map(_ref => {\n        let {\n          epoch = 0,\n          tick,\n          tick_display_value\n        } = _ref;\n        return {\n          Date: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.getUTCDate)(epoch),\n          Close: tick || 0,\n          tick: {\n            epoch,\n            quote: tick || 0,\n            symbol: underlying,\n            pip_size: tick_display_value?.split('.')[1]?.length || 0\n          }\n        };\n      });\n    }\n\n    return null;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/feed/index.ts\":\n/*!***************************!*\\\n  !*** ./src/feed/index.ts ***!\n  \\***************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_912384__) => {\n\n\"use strict\";\n__nested_webpack_require_912384__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_912384__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Feed\": () => (/* reexport safe */ _Feed__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Feed__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_912384__(/*! ./Feed */ \"./src/feed/Feed.ts\");\n\n\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/DelayedSubscription.ts\":\n/*!******************************************************!*\\\n  !*** ./src/feed/subscription/DelayedSubscription.ts ***!\n  \\******************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_913087__) => {\n\n\"use strict\";\n__nested_webpack_require_913087__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_913087__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_913087__(/*! ./Subscription */ \"./src/feed/subscription/Subscription.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass DelayedSubscription extends _Subscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor(request, api, delay, mainStore) {\n    super(request, api, mainStore);\n\n    _defineProperty(this, \"_timerId\", void 0);\n\n    _defineProperty(this, \"UPDATE_INTERVAL\", 3000);\n\n    _defineProperty(this, \"onUpdateDelayedFeed\", async () => {\n      if (this.lastStreamEpoch) {\n        const tickHistoryRequest = { ...this._request,\n          start: this.lastStreamEpoch,\n          // When updating delayed feeds, we don't want the\n          // start time to be offset by the delayed amount:\n          adjust_start_time: 0\n        };\n        const response = await this._binaryApi.getTickHistory(tickHistoryRequest);\n\n        const quotes = this._processHistoryResponse(response);\n\n        this._emitter?.emit(_Subscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"].EVENT_CHART_DATA, quotes);\n      } else {\n        console.error('Unable to update delayed feed without epoch from last tick');\n\n        this._endTimer();\n      }\n    });\n\n    this._request = { ...this._request,\n      // start times must be offset with delay because\n      // there is no data within delay intervals\n      start: this._request.start - delay * 60\n    };\n  }\n\n  pause() {\n    this._endTimer();\n  }\n\n  async _startSubscribe(tickHistoryRequest) {\n    const response = await this._binaryApi.getTickHistory(tickHistoryRequest);\n\n    const quotes = this._processHistoryResponse(response);\n\n    this._startTimer();\n\n    return {\n      quotes,\n      response\n    };\n  }\n\n  forget() {\n    this._endTimer();\n\n    super.forget();\n  }\n\n  _startTimer() {\n    if (!this._timerId) {\n      this._timerId = setInterval(this.onUpdateDelayedFeed, this.UPDATE_INTERVAL);\n    }\n  }\n\n  _endTimer() {\n    if (this._timerId) {\n      clearInterval(this._timerId);\n      this._timerId = undefined;\n    }\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DelayedSubscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/RealtimeSubscription.ts\":\n/*!*******************************************************!*\\\n  !*** ./src/feed/subscription/RealtimeSubscription.ts ***!\n  \\*******************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_915952__) => {\n\n\"use strict\";\n__nested_webpack_require_915952__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_915952__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_915952__(/*! ../../utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_915952__(/*! ../TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.ts\");\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_915952__(/*! ./Subscription */ \"./src/feed/subscription/Subscription.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass RealtimeSubscription extends _Subscription__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n  constructor() {\n    super(...arguments);\n\n    _defineProperty(this, \"_tickCallback\", void 0);\n  }\n\n  pause() {\n    // prevent forget requests; active streams are invalid when connection closed\n    this._tickCallback = undefined;\n  }\n\n  async resume() {\n    if (this._tickCallback) {\n      throw new Error('You cannot resume an active stream!');\n    }\n\n    return super.resume();\n  }\n\n  async _startSubscribe(tickHistoryRequest) {\n    const contract_info = this.contractInfo;\n\n    const [tickHistoryPromise, processTickHistory] = this._getProcessTickHistoryClosure(); //here we include duration = 'ticks' && exclude duration = 'seconds' which hasn't tick_stream, all_ticks, tick_count (consist of 15-86.400 ticks)\n\n\n    if (!this.shouldFetchTickHistory && !!contract_info.tick_stream) {\n      this._binaryApi.subscribeTickHistory(Object.assign(tickHistoryRequest, {\n        count: contract_info.tick_count\n      }), processTickHistory);\n    } else {\n      const contract_duration = contract_info.current_spot_time && contract_info.date_start ? contract_info.current_spot_time - contract_info.date_start : 0;\n      const min_tick_count = 1000;\n\n      this._binaryApi.subscribeTickHistory(Object.assign(tickHistoryRequest, {\n        count: contract_duration > min_tick_count ? contract_duration : min_tick_count\n      }), processTickHistory);\n    }\n\n    const response = await tickHistoryPromise;\n\n    const quotes = this._processHistoryResponse(response);\n\n    this._tickCallback = processTickHistory;\n    return {\n      quotes,\n      response\n    };\n  }\n\n  forget() {\n    if (this._tickCallback) {\n      const {\n        symbol,\n        granularity\n      } = this._request;\n\n      this._binaryApi.forget({\n        symbol,\n        granularity\n      });\n\n      this._tickCallback = undefined;\n    }\n\n    super.forget();\n  }\n\n  _getProcessTickHistoryClosure() {\n    const tickHistoryPromise = (0,_utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    const processTickHistory = resp => {\n      if (this._mainStore.chart.isDestroyed && resp.subscription?.id) {\n        this._binaryApi.forgetStream(resp.subscription?.id);\n\n        return;\n      } // We assume that 1st response is the history, and subsequent\n      // responses are tick stream data.\n\n\n      if (['tick', 'ohlc'].includes(resp.msg_type)) {\n        this._onTick(resp);\n\n        return;\n      }\n\n      tickHistoryPromise.resolve(resp);\n    };\n\n    return [tickHistoryPromise, processTickHistory];\n  }\n\n  _onTick(response) {\n    this.lastStreamEpoch = +_Subscription__WEBPACK_IMPORTED_MODULE_2__[\"default\"].getEpochFromTick(response);\n    const quotes = [_TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__.TickHistoryFormatter.formatTick(response)];\n\n    this._emitter.emit(_Subscription__WEBPACK_IMPORTED_MODULE_2__[\"default\"].EVENT_CHART_DATA, quotes);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (RealtimeSubscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/Subscription.ts\":\n/*!***********************************************!*\\\n  !*** ./src/feed/subscription/Subscription.ts ***!\n  \\***********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_920192__) => {\n\n\"use strict\";\n__nested_webpack_require_920192__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_920192__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_920192__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_920192__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_920192__(/*! ../TickHistoryFormatter */ \"./src/feed/TickHistoryFormatter.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass Subscription {\n  static get EVENT_CHART_DATA() {\n    return 'EVENT_CHART_DATA';\n  }\n\n  get contractInfo() {\n    return this._mainStore.state.contractInfo;\n  }\n\n  get shouldFetchTickHistory() {\n    return this._mainStore.state.shouldFetchTickHistory || false;\n  }\n\n  constructor(request, api, mainStore) {\n    _defineProperty(this, \"_binaryApi\", void 0);\n\n    _defineProperty(this, \"_emitter\", void 0);\n\n    _defineProperty(this, \"_request\", void 0);\n\n    _defineProperty(this, \"lastStreamEpoch\", void 0);\n\n    _defineProperty(this, \"_mainStore\", void 0);\n\n    this._binaryApi = api;\n    this._request = request;\n    this._emitter = new (event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default())({\n      emitDelay: 0\n    });\n    this._mainStore = mainStore;\n  }\n\n  async initialFetch() {\n    const quotes_and_response = await this._startSubscribe(this._request);\n    return quotes_and_response;\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  pause() {}\n\n  async resume() {\n    if (this.lastStreamEpoch) {\n      const tickHistoryRequest = { ...this._request,\n        start: this.lastStreamEpoch\n      };\n      const quotes_and_response = await this._startSubscribe(tickHistoryRequest);\n      return quotes_and_response;\n    }\n  }\n\n  forget() {\n    this.lastStreamEpoch = undefined;\n\n    this._emitter.off(Subscription.EVENT_CHART_DATA);\n  }\n\n  async _startSubscribe(_request) {\n    throw new Error('Please override!');\n  }\n\n  _processHistoryResponse(response) {\n    if (response.error) {\n      throw response.error;\n    }\n\n    const quotes = _TickHistoryFormatter__WEBPACK_IMPORTED_MODULE_1__.TickHistoryFormatter.formatHistory(response);\n\n    if (!quotes) {\n      const message = `Unexpected response: ${response}`;\n      throw new Error(message);\n    }\n\n    this.lastStreamEpoch = Subscription.getLatestEpoch(response);\n    return quotes;\n  }\n\n  onChartData(callback) {\n    this._emitter.on(Subscription.EVENT_CHART_DATA, callback);\n  }\n\n  static getLatestEpoch(_ref) {\n    let {\n      candles,\n      history\n    } = _ref;\n\n    if (candles) {\n      return candles[candles.length - 1].epoch;\n    }\n\n    if (history) {\n      const {\n        times = []\n      } = history;\n      return times[times.length - 1];\n    }\n  }\n\n  static getEpochFromTick(response) {\n    if ('tick' in response && response.tick) {\n      return response.tick.epoch;\n    }\n\n    return response.ohlc.open_time;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Subscription);\n\n/***/ }),\n\n/***/ \"./src/feed/subscription/index.ts\":\n/*!****************************************!*\\\n  !*** ./src/feed/subscription/index.ts ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_923895__) => {\n\n\"use strict\";\n__nested_webpack_require_923895__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_923895__.d(__nested_webpack_exports__, {\n/* harmony export */   \"DelayedSubscription\": () => (/* reexport safe */ _DelayedSubscription__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"RealtimeSubscription\": () => (/* reexport safe */ _RealtimeSubscription__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _DelayedSubscription__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_923895__(/*! ./DelayedSubscription */ \"./src/feed/subscription/DelayedSubscription.ts\");\n/* harmony import */ var _RealtimeSubscription__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_923895__(/*! ./RealtimeSubscription */ \"./src/feed/subscription/RealtimeSubscription.ts\");\n\n\n\n\n/***/ }),\n\n/***/ \"./src/flutter-chart/index.ts\":\n/*!************************************!*\\\n  !*** ./src/flutter-chart/index.ts ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_924933__) => {\n\n\"use strict\";\n__nested_webpack_require_924933__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_924933__.d(__nested_webpack_exports__, {\n/* harmony export */   \"createChartElement\": () => (/* binding */ createChartElement)\n/* harmony export */ });\nconst createChartElement = _ref => {\n  let {\n    onChartLoad\n  } = _ref;\n\n  if (window.flutterChartElement) {\n    onChartLoad();\n    return;\n  }\n\n  const flutterChartElement = document.createElement('div');\n  flutterChartElement.classList.add('flutter-chart');\n  window.flutterChartElement = flutterChartElement;\n  window._flutter = {\n    loader: {\n      didCreateEngineInitializer: async engineInitializer => {\n        const appRunner = await engineInitializer.initializeEngine({\n          hostElement: window.flutterChartElement\n        });\n        appRunner?.runApp();\n      }\n    }\n  }; // @ts-ignore\n\n  __nested_webpack_require_924933__.e(/*! import() | flutter-chart-adapter */ \"flutter-chart-adapter\").then(__nested_webpack_require_924933__.t.bind(__nested_webpack_require_924933__, /*! chart/main.dart.js */ \"./chart_app/build/web/main.dart.js\", 23));\n  return flutterChartElement;\n};\n\n/***/ }),\n\n/***/ \"./src/flutter-chart/painter.ts\":\n/*!**************************************!*\\\n  !*** ./src/flutter-chart/painter.ts ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_926283__) => {\n\n\"use strict\";\n__nested_webpack_require_926283__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_926283__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Painter)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Painter {\n  constructor() {\n    _defineProperty(this, \"callbacks\", []);\n\n    _defineProperty(this, \"onPaint\", () => {\n      this.callbacks.forEach(cb => cb());\n    });\n\n    _defineProperty(this, \"registerCallback\", callback => {\n      this.callbacks.push(callback);\n    });\n\n    _defineProperty(this, \"unregisterCallback\", callback => {\n      const index = this.callbacks.findIndex(item => item === callback);\n      this.callbacks.splice(index, 1);\n    });\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/hooks/index.ts\":\n/*!****************************!*\\\n  !*** ./src/hooks/index.ts ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_927401__) => {\n\n\"use strict\";\n__nested_webpack_require_927401__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_927401__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useConstructor\": () => (/* reexport safe */ _use_constructor__WEBPACK_IMPORTED_MODULE_2__.useConstructor),\n/* harmony export */   \"usePrevious\": () => (/* reexport safe */ _use_previous__WEBPACK_IMPORTED_MODULE_0__.usePrevious),\n/* harmony export */   \"useStateCallback\": () => (/* reexport safe */ _use_state_callback__WEBPACK_IMPORTED_MODULE_1__.useStateCallback)\n/* harmony export */ });\n/* harmony import */ var _use_previous__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_927401__(/*! ./use-previous */ \"./src/hooks/use-previous.ts\");\n/* harmony import */ var _use_state_callback__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_927401__(/*! ./use-state-callback */ \"./src/hooks/use-state-callback.ts\");\n/* harmony import */ var _use_constructor__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_927401__(/*! ./use-constructor */ \"./src/hooks/use-constructor.ts\");\n\n\n\n\n/***/ }),\n\n/***/ \"./src/hooks/use-constructor.ts\":\n/*!**************************************!*\\\n  !*** ./src/hooks/use-constructor.ts ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_928666__) => {\n\n\"use strict\";\n__nested_webpack_require_928666__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_928666__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useConstructor\": () => (/* binding */ useConstructor)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_928666__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_928666__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst useConstructor = callBack => {\n  const is_called_ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n\n  if (!is_called_ref.current) {\n    callBack();\n    is_called_ref.current = true;\n  }\n};\n\n/***/ }),\n\n/***/ \"./src/hooks/use-previous.ts\":\n/*!***********************************!*\\\n  !*** ./src/hooks/use-previous.ts ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_929604__) => {\n\n\"use strict\";\n__nested_webpack_require_929604__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_929604__.d(__nested_webpack_exports__, {\n/* harmony export */   \"usePrevious\": () => (/* binding */ usePrevious)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_929604__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_929604__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nconst usePrevious = value => {\n  const ref = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n};\n\n/***/ }),\n\n/***/ \"./src/hooks/use-state-callback.ts\":\n/*!*****************************************!*\\\n  !*** ./src/hooks/use-state-callback.ts ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_930579__) => {\n\n\"use strict\";\n__nested_webpack_require_930579__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_930579__.d(__nested_webpack_exports__, {\n/* harmony export */   \"useStateCallback\": () => (/* binding */ useStateCallback)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_930579__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_930579__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// this hook mimics this.setState({ state: value, ... }, () => callbackFunc());\nconst useStateCallback = initial_state => {\n  const [state, setState] = react__WEBPACK_IMPORTED_MODULE_0___default().useState(initial_state);\n  const callbackRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n\n  const setStateCallback = (current_state, cb) => {\n    callbackRef.current = cb;\n    setState(current_state);\n  };\n\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    if (callbackRef.current) {\n      callbackRef.current(state);\n      callbackRef.current = null;\n    }\n  }, [state]);\n  return [state, setStateCallback];\n};\n\n/***/ }),\n\n/***/ \"./src/overrides.ts\":\n/*!**************************!*\\\n  !*** ./src/overrides.ts ***!\n  \\**************************/\n/***/ (() => {\n\n// This is needed to download the canvas as image. Context of the chart has preserveDrawingBuffer as false by default.\n// @ts-ignore\nHTMLCanvasElement.prototype.getContext = function (origFn) {\n  return function (type, attribs) {\n    attribs = attribs || {};\n    attribs.preserveDrawingBuffer = true; // @ts-ignore\n\n    return origFn.call(this, type, attribs);\n  };\n}(HTMLCanvasElement.prototype.getContext);\n\n/***/ }),\n\n/***/ \"./src/store/AnimatedPriceStore.ts\":\n/*!*****************************************!*\\\n  !*** ./src/store/AnimatedPriceStore.ts ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_932539__) => {\n\n\"use strict\";\n__nested_webpack_require_932539__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_932539__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AnimatedPriceStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_932539__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass AnimatedPriceStore {\n  constructor() {\n    _defineProperty(this, \"className\", '');\n\n    _defineProperty(this, \"price\", 0);\n\n    _defineProperty(this, \"isIncrease\", false);\n\n    _defineProperty(this, \"status\", '');\n\n    _defineProperty(this, \"oldPrice\", 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      price: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      isIncrease: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      status: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      setPrice: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n  }\n\n  setPrice(val, prevPrice) {\n    const oldVal = prevPrice || +this.oldPrice;\n    const newVal = +val;\n    let isIncrease = false;\n\n    if (newVal > oldVal) {\n      isIncrease = true;\n      this.status = 'up';\n    } else if (newVal < oldVal) {\n      this.status = 'down';\n    } else {\n      this.status = '';\n      return;\n    }\n\n    this.price = val;\n    this.oldPrice = this.price;\n    this.isIncrease = isIncrease;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/BarrierStore.ts\":\n/*!***********************************!*\\\n  !*** ./src/store/BarrierStore.ts ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_934373__) => {\n\n\"use strict\";\n__nested_webpack_require_934373__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_934373__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BarrierStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_934373__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_934373__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\n/* harmony import */ var _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_934373__(/*! ./PriceLineStore */ \"./src/store/PriceLineStore.ts\");\n/* harmony import */ var _ShadeStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_934373__(/*! ./ShadeStore */ \"./src/store/ShadeStore.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_934373__(/*! ../utils */ \"./src/utils/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nclass BarrierStore {\n  static get SHADE_NONE_SINGLE() {\n    return 'SHADE_NONE_SINGLE';\n  }\n\n  static get SHADE_NONE_DOUBLE() {\n    return 'SHADE_NONE_DOUBLE';\n  }\n\n  static get SHADE_ABOVE() {\n    return 'SHADE_ABOVE';\n  }\n\n  static get SHADE_BELOW() {\n    return 'SHADE_BELOW';\n  }\n\n  static get SHADE_BETWEEN() {\n    return 'SHADE_BETWEEN';\n  }\n\n  static get SHADE_OUTSIDE() {\n    return 'SHADE_OUTSIDE';\n  }\n\n  static get BARRIER_CHANGED() {\n    return 'BARRIER_CHANGED';\n  }\n\n  get pip() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places;\n  }\n\n  get overlappedBarrierWidth() {\n    return 16;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"_high_barrier\", void 0);\n\n    _defineProperty(this, \"_low_barrier\", void 0);\n\n    _defineProperty(this, \"aboveShadeStore\", void 0);\n\n    _defineProperty(this, \"belowShadeStore\", void 0);\n\n    _defineProperty(this, \"betweenShadeStore\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"title\", void 0);\n\n    _defineProperty(this, \"shadeColor\", void 0);\n\n    _defineProperty(this, \"color\", void 0);\n\n    _defineProperty(this, \"foregroundColor\", void 0);\n\n    _defineProperty(this, \"isBetweenShadeVisible\", false);\n\n    _defineProperty(this, \"isTopShadeVisible\", false);\n\n    _defineProperty(this, \"isBottomShadeVisible\", false);\n\n    _defineProperty(this, \"hidePriceLines\", false);\n\n    _defineProperty(this, \"lineStyle\", void 0);\n\n    _defineProperty(this, \"isInitialized\", false);\n\n    _defineProperty(this, \"initializePromise\", (0,_utils_PendingPromise__WEBPACK_IMPORTED_MODULE_0__[\"default\"])());\n\n    _defineProperty(this, \"hideBarrierLine\", false);\n\n    _defineProperty(this, \"hideOffscreenLine\", false);\n\n    _defineProperty(this, \"hideOffscreenBarrier\", false);\n\n    _defineProperty(this, \"isSingleBarrier\", false);\n\n    _defineProperty(this, \"_shadeState\", '');\n\n    _defineProperty(this, \"disposeDrawReaction\", void 0);\n\n    _defineProperty(this, \"onChartLoaded\", () => {\n      this.init();\n      this.disposeDrawReaction = (0,mobx__WEBPACK_IMPORTED_MODULE_4__.reaction)(() => [this.mainStore.chartAdapter.epochBounds, this.mainStore.chartAdapter.quoteBounds], this._drawShadedArea);\n    });\n\n    _defineProperty(this, \"_onBarrierChange\", null);\n\n    _defineProperty(this, \"_fireOnBarrierChange\", () => {\n      const high = this._high_barrier.visible ? Number(this._high_barrier.price).toFixed(this.pip) : undefined;\n      const low = this._low_barrier.visible ? Number(this._low_barrier.price).toFixed(this.pip) : undefined;\n\n      if (typeof this._onBarrierChange === 'function') {\n        this._onBarrierChange({\n          high,\n          low\n        });\n      }\n    });\n\n    _defineProperty(this, \"_drawShadedArea\", () => {\n      if (!this.isInitialized) {\n        return;\n      }\n\n      if (this._shadeState === BarrierStore.SHADE_ABOVE) {\n        this._shadeAbove();\n      } else if (this._shadeState === BarrierStore.SHADE_BELOW) {\n        this._shadeBelow();\n      } else if (this._shadeState === BarrierStore.SHADE_BETWEEN) {\n        this._shadeBetween();\n      } else if (this._shadeState === BarrierStore.SHADE_OUTSIDE) {\n        this._shadeOutside();\n      }\n\n      if (this._low_barrier.visible && this._isBarriersOffScreen()) {\n        const order = this._high_barrier.top === 0 ? null : 101;\n        this._high_barrier.zIndex = order;\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_4__.makeObservable)(this, {\n      color: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      destructor: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound,\n      foregroundColor: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      hideBarrierLine: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      hideOffscreenBarrier: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      hideOffscreenLine: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      hidePriceLines: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      init: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound,\n      initializePromise: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isBetweenShadeVisible: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isBottomShadeVisible: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isInitialized: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isSingleBarrier: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isTopShadeVisible: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      lineStyle: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      overlappedBarrierWidth: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      pip: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      shadeColor: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound\n    });\n    this.mainStore = mainStore;\n    this._high_barrier = new _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.mainStore);\n    this._low_barrier = new _PriceLineStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.mainStore);\n\n    this._high_barrier.onPriceChanged(this._drawShadedArea);\n\n    this._low_barrier.onPriceChanged(this._drawShadedArea);\n\n    this._high_barrier.onDragReleased(this._fireOnBarrierChange);\n\n    this._low_barrier.onDragReleased(this._fireOnBarrierChange);\n\n    this._setupConstrainBarrierPrices();\n\n    this.aboveShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('top-shade');\n    this.betweenShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('between-shade');\n    this.belowShadeStore = new _ShadeStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]('bottom-shade');\n    this.shadeState = BarrierStore.SHADE_NONE_SINGLE;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_4__.when)(() => this.mainStore.chartAdapter.isChartLoaded, this.onChartLoaded);\n\n    this.mainStore.chart._barriers.push(this);\n  }\n\n  init() {\n    this.isInitialized = true;\n    this.initializePromise.resolve();\n  }\n\n  updateProps(_ref) {\n    let {\n      color,\n      foregroundColor,\n      shadeColor,\n      shade,\n      high,\n      low,\n      relative,\n      draggable,\n      onChange,\n      hideBarrierLine,\n      hideOffscreenBarrier,\n      hideOffscreenLine,\n      hidePriceLines,\n      lineStyle,\n      title,\n      showOffscreenArrows,\n      isSingleBarrier,\n      opacityOnOverlap\n    } = _ref;\n    this.initializePromise.then((0,mobx__WEBPACK_IMPORTED_MODULE_4__.action)(() => {\n      if (color) {\n        this.color = color;\n      }\n\n      if (foregroundColor) {\n        this.foregroundColor = foregroundColor;\n      }\n\n      if (shadeColor) {\n        this.shadeColor = shadeColor;\n      }\n\n      if (shade) {\n        this.shadeState = `SHADE_${shade}`.toUpperCase();\n      }\n\n      if (relative !== undefined) {\n        this.relative = relative;\n      }\n\n      if (draggable !== undefined) {\n        this.draggable = draggable;\n      }\n\n      if (high !== undefined) {\n        this.high_barrier = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getStringValue)(high, this.pip);\n      }\n\n      if (low !== undefined) {\n        this.low_barrier = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.getStringValue)(low, this.pip);\n      }\n\n      if (onChange) {\n        this.onBarrierChange = onChange;\n      }\n\n      if (title) {\n        this.title = title;\n      }\n\n      this.lineStyle = lineStyle;\n      this.hideBarrierLine = !!hideBarrierLine;\n      this.hidePriceLines = !!hidePriceLines;\n      this.hideOffscreenLine = !!hideOffscreenLine;\n      this.hideOffscreenBarrier = !!hideOffscreenBarrier;\n      this.isSingleBarrier = !!isSingleBarrier;\n    }));\n\n    if (opacityOnOverlap) {\n      this.opacityOnOverlap = opacityOnOverlap;\n    }\n\n    if (showOffscreenArrows) {\n      this.showOffscreenArrows = showOffscreenArrows;\n    }\n  }\n\n  destructor() {\n    if (!this.context) return;\n\n    this._high_barrier.destructor();\n\n    this._low_barrier.destructor();\n\n    this.disposeDrawReaction?.();\n\n    const i = this.mainStore.chart._barriers.findIndex(b => b === this);\n\n    if (i !== -1) {\n      this.mainStore.chart._barriers.splice(i, 1);\n    }\n  }\n\n  get high_barrier() {\n    return this._high_barrier.price;\n  }\n\n  set high_barrier(price) {\n    this._high_barrier.price = price;\n  }\n\n  get low_barrier() {\n    return this._low_barrier.price;\n  }\n\n  set low_barrier(price) {\n    this._low_barrier.price = price;\n  }\n\n  _setupConstrainBarrierPrices() {\n    // barrier 1 cannot go below barrier 2\n    this._high_barrier.priceConstrainer = newPrice => {\n      const nextPrice = this._low_barrier.visible && newPrice < +this._low_barrier.realPrice ? this._high_barrier.realPrice : newPrice;\n      return +nextPrice;\n    }; // barrier 2 cannot go above barrier 1\n\n\n    this._low_barrier.priceConstrainer = newPrice => {\n      const nextPrice = newPrice > +this._high_barrier.realPrice ? this._low_barrier.realPrice : newPrice;\n      return +nextPrice;\n    };\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  set onBarrierChange(callback) {\n    if (this._onBarrierChange !== callback) {\n      this._onBarrierChange = callback;\n    }\n  }\n\n  get shadeState() {\n    return this._shadeState;\n  }\n\n  set shadeState(shadeState) {\n    if (this._shadeState === shadeState) {\n      return;\n    }\n\n    this._shadeState = shadeState;\n    const noShade = this._shadeState === BarrierStore.SHADE_NONE_SINGLE || this._shadeState === BarrierStore.SHADE_NONE_DOUBLE;\n\n    if (noShade) {\n      this.aboveShadeStore.visible = false;\n      this.betweenShadeStore.visible = false;\n      this.belowShadeStore.visible = false;\n    } else {\n      const aboveShadeEnable = this._shadeState === BarrierStore.SHADE_ABOVE || this._shadeState === BarrierStore.SHADE_OUTSIDE;\n      const belowShadeEnable = this._shadeState === BarrierStore.SHADE_BELOW || this._shadeState === BarrierStore.SHADE_OUTSIDE;\n      const betweenShadeEnable = this._shadeState === BarrierStore.SHADE_BETWEEN;\n      this.aboveShadeStore.visible = aboveShadeEnable;\n      this.betweenShadeStore.visible = betweenShadeEnable;\n      this.belowShadeStore.visible = belowShadeEnable;\n\n      this._drawShadedArea();\n    }\n\n    const showLowBarrier = this._shadeState === BarrierStore.SHADE_OUTSIDE || this._shadeState === BarrierStore.SHADE_BETWEEN || this._shadeState === BarrierStore.SHADE_NONE_DOUBLE;\n    const wasLowBarrierVisible = this._low_barrier.visible;\n    this._low_barrier.visible = showLowBarrier;\n\n    if (this.isInitialized && showLowBarrier && !wasLowBarrierVisible) {\n      if (this._low_barrier.realPrice >= this._high_barrier.realPrice && this.mainStore.chart.currentClose) {\n        // fix position if _low_barrier above _high_barrier, since _low_barrier position is not updated when not visible\n        this._low_barrier.price = (+this._high_barrier.price - this.mainStore.chart.currentClose).toString();\n      }\n    }\n  }\n\n  get relative() {\n    return this._high_barrier.relative;\n  }\n\n  set relative(value) {\n    this._high_barrier.relative = value;\n    this._low_barrier.relative = value;\n  }\n\n  get draggable() {\n    return this._high_barrier.draggable;\n  }\n\n  set draggable(value) {\n    this._high_barrier.draggable = value;\n    this._low_barrier.draggable = value;\n  }\n\n  get showOffscreenArrows() {\n    return this._high_barrier.showOffscreenArrows;\n  }\n\n  set showOffscreenArrows(value) {\n    this._high_barrier.showOffscreenArrows = value;\n  }\n\n  get opacityOnOverlap() {\n    return this._high_barrier.opacityOnOverlap;\n  }\n\n  set opacityOnOverlap(value) {\n    this._high_barrier.opacityOnOverlap = value;\n  }\n\n  _isBarriersOffScreen() {\n    return this._high_barrier.offScreen && this._low_barrier.offScreen;\n  }\n\n  _shadeBetween() {\n    this.betweenShadeStore.setPosition({\n      top: this._high_barrier.top,\n      bottom: this._low_barrier.top,\n      right: this.mainStore.chart.yAxisWidth\n    });\n  }\n\n  _shadeBelow() {\n    let barrier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._high_barrier;\n    this.belowShadeStore.setPosition({\n      top: barrier.top,\n      bottom: 0,\n      right: this.mainStore.chart.yAxisWidth\n    });\n  }\n\n  _shadeAbove() {\n    let barrier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._high_barrier;\n    this.aboveShadeStore.setPosition({\n      top: 0,\n      bottom: barrier.top,\n      right: this.mainStore.chart.yAxisWidth\n    });\n  }\n\n  _shadeOutside() {\n    this._shadeAbove(this._high_barrier);\n\n    this._shadeBelow(this._low_barrier);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/BottomWidgetsContainerStore.ts\":\n/*!**************************************************!*\\\n  !*** ./src/store/BottomWidgetsContainerStore.ts ***!\n  \\**************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_948227__) => {\n\n\"use strict\";\n__nested_webpack_require_948227__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_948227__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BottomWidgetsContainerStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_948227__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass BottomWidgetsContainerStore {\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get state() {\n    return this.mainStore.state;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"bottom\", 30);\n\n    _defineProperty(this, \"isReadyToShow\", false);\n\n    _defineProperty(this, \"mainChartHeight\", 0);\n\n    _defineProperty(this, \"totalHeight\", 0);\n\n    _defineProperty(this, \"initial\", () => {\n      this.isReadyToShow = true;\n    });\n\n    _defineProperty(this, \"updateChartHeight\", async () => {\n      // Todo: Find a better way to calculate indicators height.\n      setTimeout(() => {\n        if (!this.mainStore.chart.chartContainerHeight) return;\n        const chartAdapter = this.mainStore.chartAdapter;\n        const {\n          bottomQuote\n        } = chartAdapter.quoteBounds;\n        const mainChartHeight = chartAdapter.getYFromQuote(bottomQuote);\n        const addedIndicatorsHeight = this.mainStore.chart.chartContainerHeight - mainChartHeight;\n        this.bottom = this.mainStore.chartAdapter.isFeedLoaded && addedIndicatorsHeight > 80 ? addedIndicatorsHeight : 30;\n      }, 300);\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      bottom: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      isReadyToShow: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      mainChartHeight: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      totalHeight: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      updateChartHeight: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.when)(() => !!this.context, this.initial);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/CategoricalDisplayStore.ts\":\n/*!**********************************************!*\\\n  !*** ./src/store/CategoricalDisplayStore.ts ***!\n  \\**********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_950806__) => {\n\n\"use strict\";\n__nested_webpack_require_950806__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_950806__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CategoricalDisplayStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_950806__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_950806__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_950806__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_950806__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_950806__(/*! ../utils */ \"./src/utils/index.ts\");\n/* provided dependency */ var t = __nested_webpack_require_950806__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass CategoricalDisplayStore {\n  constructor(_ref) {\n    let {\n      getCategoricalItems,\n      onSelectItem,\n      getIsShown,\n      placeholderText,\n      favoritesId,\n      mainStore,\n      id,\n      getCurrentActiveCategory,\n      getCurrentActiveSubCategory,\n      getCurrentActiveMarket,\n      searchInputClassName\n    } = _ref;\n\n    _defineProperty(this, \"activeMarket\", void 0);\n\n    _defineProperty(this, \"activeSubCategory\", '');\n\n    _defineProperty(this, \"categoryElements\", void 0);\n\n    _defineProperty(this, \"favoritesId\", void 0);\n\n    _defineProperty(this, \"getCategoricalItems\", void 0);\n\n    _defineProperty(this, \"getCurrentActiveCategory\", void 0);\n\n    _defineProperty(this, \"getCurrentActiveMarket\", void 0);\n\n    _defineProperty(this, \"getCurrentActiveSubCategory\", void 0);\n\n    _defineProperty(this, \"id\", void 0);\n\n    _defineProperty(this, \"isInit\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"onSelectItem\", void 0);\n\n    _defineProperty(this, \"pauseScrollSpy\", false);\n\n    _defineProperty(this, \"searchInput\", void 0);\n\n    _defineProperty(this, \"searchInputClassName\", void 0);\n\n    _defineProperty(this, \"placeholderText\", void 0);\n\n    _defineProperty(this, \"isShown\", false);\n\n    _defineProperty(this, \"scrollPanel\", void 0);\n\n    _defineProperty(this, \"filterText\", '');\n\n    _defineProperty(this, \"activeCategoryKey\", '');\n\n    _defineProperty(this, \"focusedCategoryKey\", null);\n\n    _defineProperty(this, \"isScrollingDown\", false);\n\n    _defineProperty(this, \"activeHeadKey\", '');\n\n    _defineProperty(this, \"scrollTop\", undefined);\n\n    _defineProperty(this, \"isUserScrolling\", true);\n\n    _defineProperty(this, \"lastFilteredItems\", []);\n\n    _defineProperty(this, \"activeCategories\", []);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      isShown: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      scrollPanel: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      filterText: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      activeCategoryKey: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      focusedCategoryKey: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      isScrollingDown: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      activeHeadKey: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      init: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      favoritesCategoryData: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      getFavorites: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      filteredItems: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      updateScrollSpy: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      scrollUp: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      scrollDown: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setCategoryElement: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setFilterText: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      handleFilterClick: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setScrollPanel: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      handleTitleClick: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      scrollToActiveSymbol: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.reaction)(() => getIsShown && getIsShown() && this.scrollPanel, () => {\n      if (getIsShown() && this.scrollPanel) {\n        this.scrollToActiveSymbol();\n      }\n    }, {\n      delay: 200\n    });\n    this.getCategoricalItems = getCategoricalItems;\n    this.onSelectItem = onSelectItem;\n    this.favoritesId = favoritesId;\n    this.id = id;\n    this.categoryElements = {};\n    this.mainStore = mainStore;\n    this.getCurrentActiveCategory = getCurrentActiveCategory;\n    this.getCurrentActiveSubCategory = getCurrentActiveSubCategory;\n    this.getCurrentActiveMarket = getCurrentActiveMarket;\n    this.isInit = false;\n    this.searchInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef();\n    this.searchInputClassName = searchInputClassName;\n    this.placeholderText = placeholderText;\n  }\n\n  get chart() {\n    return this.mainStore.chart;\n  }\n\n  get context() {\n    return this.chart.context;\n  }\n\n  get height() {\n    return this.chart.chartContainerHeight ? this.chart.chartContainerHeight - (this.chart.isMobile ? 0 : 120) : 0;\n  }\n\n  init() {\n    this.isInit = true; // Select first non-empty category:\n\n    if (this.activeCategoryKey === '' && this.filteredItems.length > 0) {\n      for (const category of this.filteredItems) {\n        const el = this.categoryElements[category.categoryId];\n\n        if (el) {\n          this.activeCategoryKey = category.categoryId;\n          break;\n        }\n      }\n    }\n  }\n\n  get favoritesCategoryData() {\n    return Object.keys(this.mainStore.favorites.favoritesMap[this.favoritesId]) || [];\n  }\n\n  getFavorites() {\n    this.pauseScrollSpy = true;\n    const favoritesCategory = {\n      categoryName: t.translate('Favorites'),\n      categoryId: 'favorite',\n      hasSubcategory: false,\n      hasSubgroup: false,\n      active: true,\n      subgroups: [],\n      emptyDescription: t.translate('There are no favorites yet.')\n    };\n    setTimeout(() => {\n      this.pauseScrollSpy = false;\n    }, 20);\n    return favoritesCategory;\n  }\n\n  get filteredItems() {\n    let filteredItems = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.cloneCategories)(this.getCategoricalItems());\n    const activeItems = this.activeCategories.length ? this.activeCategories : [this.getCurrentActiveCategory ? this.getCurrentActiveCategory() : 'favorite'];\n\n    for (const item of filteredItems) {\n      if (activeItems.includes(item.categoryId)) {\n        item.active = true;\n      }\n    }\n\n    if (this.favoritesId) {\n      const favsCategory = { ...this.getFavorites(),\n        data: this.favoritesCategoryData\n      };\n\n      const findFavItem = category => {\n        const foundItems = [];\n\n        if (category.hasSubgroup && 'categoryName' in category) {\n          category.subgroups.forEach(el => el.data.forEach(subcategory => {\n            const foundSubItems = findFavItem(subcategory);\n            foundItems.push(...foundSubItems);\n          }));\n        } else if (category.hasSubcategory) {\n          category.data.forEach(subcategory => {\n            const foundSubItems = findFavItem(subcategory);\n            foundItems.push(...foundSubItems);\n          });\n        } else {\n          favsCategory.data.forEach(favItem => {\n            if (typeof favItem === 'string') {\n              const itemObj = category.data.find(item => item.itemId === favItem);\n\n              if (itemObj) {\n                foundItems.push(itemObj);\n              }\n            }\n          });\n        }\n\n        return foundItems;\n      };\n\n      const favsCategoryItem = favsCategory.data.filter(favItem => typeof favItem !== 'string');\n      filteredItems.forEach(category => {\n        const foundItems = findFavItem(category);\n        favsCategoryItem.push(...foundItems);\n      });\n      favsCategory.data = favsCategoryItem.filter(favItem => favItem);\n      filteredItems.unshift(favsCategory);\n    }\n\n    if (this.filterText === '') {\n      this.lastFilteredItems = filteredItems;\n      return filteredItems;\n    }\n\n    let searchHasResult = false;\n    const queries = this.filterText.split(' ').filter(x => x !== '').map(b => b.toLowerCase().trim()); // regex to check all separate words by comma, should exist in the string\n\n    const hasSearchString = text => queries.reduce((a, b) => text.toLowerCase().includes(b) && a, true);\n\n    const filterCategory = c => {\n      c.data = c.data.filter(item => hasSearchString(item.display || (typeof item.dataObject === 'object' ? item.dataObject.symbol : '')));\n\n      if (c.data.length) {\n        searchHasResult = true;\n      }\n    };\n\n    for (const category of filteredItems) {\n      category.active = true;\n\n      if (category.hasSubgroup) {\n        category.subgroups = (0,mobx__WEBPACK_IMPORTED_MODULE_3__.toJS)(category.subgroups);\n\n        for (const subgroup of category.subgroups) {\n          subgroup.active = true;\n\n          for (const subcategory of subgroup.data) {\n            filterCategory(subcategory);\n          }\n        }\n      } else if (category.hasSubcategory) {\n        for (const subcategory of category.data) {\n          filterCategory(subcategory);\n        }\n      } else {\n        filterCategory(category);\n      }\n    }\n\n    if (!searchHasResult) {\n      filteredItems = this.lastFilteredItems;\n    }\n\n    if (!this.pauseScrollSpy) {\n      this.lastFilteredItems = filteredItems;\n    }\n\n    return filteredItems;\n  }\n\n  updateScrollSpy() {\n    if (this.pauseScrollSpy || !this.scrollPanel) {\n      return;\n    }\n\n    if (this.filteredItems.length === 0) {\n      return;\n    }\n\n    const scrollPanelTop = this.scrollPanel.getBoundingClientRect().top;\n    let activeMenuId = null;\n\n    for (const category of this.filteredItems) {\n      const el = this.categoryElements[category.categoryId];\n      const row_gap = 57;\n\n      if (!el) {\n        return;\n      }\n\n      const gap_top = this.filteredItems.indexOf(category) * (category.hasSubgroup ? category.subgroups.length + 1 * row_gap : row_gap);\n      const r = el.getBoundingClientRect();\n      const top = r.top - scrollPanelTop - gap_top;\n\n      if (top < 0) {\n        activeMenuId = category.hasSubgroup ? category.subgroups[category.subgroups.length > 1 ? +(r.top < 0) : 0]?.categoryId : category?.categoryId;\n      }\n    }\n\n    const scrollTop = this.scrollPanel.getBoundingClientRect().top;\n\n    if (this.scrollTop && this.scrollTop > scrollTop) {\n      this.scrollUp();\n    } else {\n      this.scrollDown();\n    }\n\n    this.scrollTop = scrollTop;\n    this.focusedCategoryKey = activeMenuId || this.filteredItems[0].categoryId;\n    this.activeHeadKey = this.scrollTop === 0 ? null : this.focusedCategoryKey;\n  }\n\n  scrollUp() {\n    this.isScrollingDown = false;\n  }\n\n  scrollDown() {\n    // This only affects when scrolling by mouse not by code\n    this.isScrollingDown = this.isUserScrolling;\n    this.isUserScrolling = true;\n  }\n\n  setCategoryElement(element, id) {\n    this.categoryElements[id] = element;\n  }\n\n  setFilterText(filterText) {\n    this.filterText = filterText;\n    this.isUserScrolling = false;\n    this.updateScrollSpy();\n\n    if (filterText === '') {\n      setTimeout(() => this.scrollToActiveSymbol(), 1);\n    }\n\n    this.mainStore.state.debouncedStateChange(src_Constant__WEBPACK_IMPORTED_MODULE_1__.STATE.MARKET_SEARCH, {\n      search_string: filterText\n    });\n  }\n\n  handleFilterClick(categoryId) {\n    this.focusedCategoryKey = '';\n    const el = this.categoryElements[categoryId];\n    const gap_top = Object.keys(this.categoryElements).indexOf(categoryId) * 40;\n\n    if (el) {\n      // TODO: Scroll animation\n      this.pauseScrollSpy = true;\n      this.isUserScrolling = false;\n\n      if (this.scrollPanel) {\n        if (this.chart.isMobile) {\n          this.scrollPanel.scroll({\n            top: el.offsetTop - 95,\n            left: 0,\n            behavior: 'smooth'\n          });\n        } else {\n          this.scrollPanel.scrollTop = el.offsetTop - gap_top;\n        }\n      }\n\n      this.focusedCategoryKey = categoryId;\n      this.activeHeadKey = null; // scrollTop takes some time to take affect, so we need\n      // a slight delay before enabling the scroll spy again\n\n      setTimeout(() => {\n        this.pauseScrollSpy = false;\n      }, 20);\n    }\n  }\n\n  setScrollPanel(element) {\n    this.scrollPanel = element;\n  }\n\n  handleTitleClick(categoryId) {\n    this.activeCategories = [];\n\n    for (const item of this.filteredItems) {\n      const isItemActive = !item.hasSubgroup ? item.categoryId === categoryId : item.subgroups?.filter(subgroup => subgroup.categoryId === categoryId).length > 0;\n\n      if (isItemActive) {\n        if (item.hasSubgroup) {\n          const triggered_subgroup = item.subgroups.find(subgroup => subgroup.categoryId === categoryId);\n\n          if (triggered_subgroup !== undefined) {\n            triggered_subgroup.active = !triggered_subgroup.active;\n          }\n        }\n\n        item.active = !item.active;\n        setTimeout(() => this.handleFilterClick(item.categoryId), 250);\n      }\n\n      if (item.active && item.categoryId !== 'favorite') {\n        this.activeCategories.push(item.categoryId);\n      }\n    }\n\n    setTimeout(() => this.updateScrollSpy(), 0);\n  }\n\n  scrollToActiveSymbol() {\n    this.focusedCategoryKey = null;\n    this.activeCategoryKey = this.getCurrentActiveCategory ? this.getCurrentActiveCategory() : 'favorite';\n    this.activeSubCategory = this.getCurrentActiveSubCategory ? this.getCurrentActiveSubCategory() : '';\n    this.activeMarket = this.getCurrentActiveMarket ? this.getCurrentActiveMarket() : '';\n    const el = this.categoryElements[this.activeCategoryKey];\n    const activeSubCategoryClassName = `.sc-mcd__category--${this.activeCategoryKey}  .sc-mcd__category__content--${this.activeSubCategory}`;\n    const el_active_sub_category = this.scrollPanel?.querySelector(activeSubCategoryClassName);\n    const activeMarketClassName = `${activeSubCategoryClassName} .sc-mcd__item--${this.activeMarket}`;\n    const el_active_market = this.scrollPanel?.querySelector(activeMarketClassName);\n    this.activeHeadKey = this.activeCategoryKey || null;\n    this.pauseScrollSpy = true;\n    this.isUserScrolling = false;\n\n    if (this.scrollPanel) {\n      if (el && this.scrollPanel) {\n        this.scrollPanel.scrollTop = el.offsetTop;\n\n        if (el_active_market) {\n          const topOffset = this.mainStore.chart.isMobile ? 100 : 40;\n          this.scrollPanel.scrollTop = el.offsetTop + el_active_market.offsetTop - topOffset;\n        } else if (el_active_sub_category) {\n          const topOffset = this.mainStore.chart.isMobile ? 100 : 0;\n          this.scrollPanel.scrollTop = el.offsetTop + el_active_sub_category.offsetTop - topOffset;\n        }\n      }\n    }\n\n    setTimeout(() => {\n      this.pauseScrollSpy = false;\n    }, 20);\n\n    if (!this.isInit) {\n      this.init();\n    }\n\n    if (!this.mainStore.chart.isMobile) {\n      setTimeout(() => this.searchInput.current && this.searchInput.current.focus(), 0);\n    }\n\n    if (!this.mainStore.chart.isMobile) {\n      const categories = Object.keys(this.categoryElements);\n      const filtered_categories = categories.filter(item => this.categoryElements[item] !== null);\n      const last_category = categories[categories.length - 1];\n      const last_category_bottom_gap = this.height - (64 + (filtered_categories.length - 1) * 40); // to make the last category height reach it's filter tab\n\n      const last_category_element = this.categoryElements[last_category];\n      if (last_category_element) last_category_element.style.minHeight = `${last_category_bottom_gap}px`;\n    }\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartAdapterStore.ts\":\n/*!****************************************!*\\\n  !*** ./src/store/ChartAdapterStore.ts ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_967035__) => {\n\n\"use strict\";\n__nested_webpack_require_967035__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_967035__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartAdapterStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_967035__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_967035__(/*! moment */ \"moment\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_967035__.n(moment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_967035__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_967035__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_flutter_chart__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_967035__(/*! src/flutter-chart */ \"./src/flutter-chart/index.ts\");\n/* harmony import */ var src_flutter_chart_painter__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_967035__(/*! src/flutter-chart/painter */ \"./src/flutter-chart/painter.ts\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_967035__(/*! src/utils */ \"./src/utils/index.ts\");\n/* harmony import */ var src_components_ui_utils__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_967035__(/*! src/components/ui/utils */ \"./src/components/ui/utils.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\nclass ChartAdapterStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"isChartLoaded\", false);\n\n    _defineProperty(this, \"flutterChart\", void 0);\n\n    _defineProperty(this, \"epochBounds\", {\n      leftEpoch: 0,\n      rightEpoch: 0\n    });\n\n    _defineProperty(this, \"quoteBounds\", {\n      topQuote: 0,\n      bottomQuote: 0\n    });\n\n    _defineProperty(this, \"isFeedLoaded\", false);\n\n    _defineProperty(this, \"msPerPx\", void 0);\n\n    _defineProperty(this, \"drawingHoverIndex\", null);\n\n    _defineProperty(this, \"isDataFitModeEnabled\", false);\n\n    _defineProperty(this, \"painter\", new src_flutter_chart_painter__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n\n    _defineProperty(this, \"drawingColor\", 0);\n\n    _defineProperty(this, \"isScaled\", false);\n\n    _defineProperty(this, \"crossHairValue\", {\n      x: 0,\n      y: 0,\n      xLocal: 0,\n      yLocal: 0,\n      bottomIndex: 0\n    });\n\n    _defineProperty(this, \"isOverFlutterCharts\", false);\n\n    _defineProperty(this, \"checkIndicatorHover\", (dx, dy, dxLocal, dyLocal, bottomIndicatorIndex) => {\n      // dxLocal and dyLocal are the local position value correponding to the bottom indicator/main chart\n      const epoch = this.flutterChart?.crosshair.getEpochFromX(dxLocal) || 0;\n      const quote = (this.flutterChart?.crosshair.getQuoteFromY(dyLocal) || 0).toFixed(this.mainStore.crosshair.decimalPlaces);\n      this.mainStore.crosshair.onMouseMove(dx, dy, epoch, quote);\n      const getClosestEpoch = this.mainStore.chart.feed?.getClosestValidEpoch;\n      const granularity = this.mainStore.chartAdapter.getGranularityInMs();\n      const hoverIndex = this.flutterChart?.app.getIndicatorHoverIndex(dxLocal, dyLocal, getClosestEpoch, granularity, bottomIndicatorIndex);\n\n      if (this.isScaled) {\n        this.isScaled = false;\n        return;\n      }\n\n      this.mainStore.studies.highlightIndicator(hoverIndex, dx, dy);\n    });\n\n    _defineProperty(this, \"debouncedIndicatorHover\", lodash_debounce__WEBPACK_IMPORTED_MODULE_1___default()(this.checkIndicatorHover, 5));\n\n    _defineProperty(this, \"onWheel\", e => {\n      e.preventDefault();\n\n      if (e.deltaX === 0 && e.deltaZ === 0) {\n        const value = (100 - Math.min(10, Math.max(-10, e.deltaY))) / 100;\n        this.scale(value);\n      } else {\n        window.flutterChart?.app.scroll(e.deltaX);\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"onMouseMove\", e => {\n      this.isOverFlutterCharts = e.target?.tagName?.toLowerCase() === 'flt-glass-pane';\n    });\n\n    _defineProperty(this, \"onDoubleClick\", () => {\n      if (this.drawingHoverIndex != null) {\n        this.mainStore.drawTools.onSetting(this.drawingHoverIndex);\n        this.mainStore.crosshair.removeDrawingToolToolTip();\n      } else if (this.mainStore.studies.currentHoverIndex != null) {\n        this.mainStore.studies.editStudyByIndex(this.mainStore.studies.currentHoverIndex);\n        this.mainStore.studies.clearHoverItem(this.mainStore.studies.currentHoverIndex);\n      }\n    });\n\n    _defineProperty(this, \"newChart\", async () => {\n      this.isFeedLoaded = false;\n      this.isDataFitModeEnabled = this.mainStore.chart.startWithDataFitMode || false;\n      await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n      this.flutterChart?.app.newChart({\n        symbol: this.mainStore.chart.currentActiveSymbol?.symbol,\n        granularity: this.getGranularityInMs(),\n        chartType: this.mainStore.state.chartType,\n        isLive: this.mainStore.chart.isLive || false,\n        startWithDataFitMode: this.isDataFitModeEnabled,\n        theme: this.mainStore.chartSetting.theme,\n        msPerPx: this.msPerPx,\n        pipSize: this.mainStore.chart.pip,\n        isMobile: this.mainStore.chart.isMobile || false,\n        yAxisMargin: this.mainStore.state.yAxisMargin\n      });\n    });\n\n    _defineProperty(this, \"toggleDataFitMode\", () => {\n      this.isDataFitModeEnabled = !this.isDataFitModeEnabled;\n      window.flutterChart?.app.toggleDataFitMode(this.isDataFitModeEnabled);\n    });\n\n    _defineProperty(this, \"getInterpolatedPositionAndPrice\", epoch => {\n      if (!epoch) return;\n      const date = moment__WEBPACK_IMPORTED_MODULE_0___default().utc(epoch).toDate();\n      const tickIdx = this.mainStore.chart.feed?.getClosestQuoteIndexForEpoch(epoch); // To not place markers in the middle of ticks.\n\n      let x = this.getXFromEpoch(epoch);\n\n      if (typeof tickIdx === 'number' && tickIdx > -1) {\n        const bar = this.mainStore.chart.feed?.quotes[tickIdx];\n        let price = bar ? bar.Close : null;\n        let delta_x, delta_y, ratio; // Here we interpolate the pixel distance between two adjacent ticks.\n\n        if (bar && bar.DT < date) {\n          const barNext = this.mainStore.chart.feed?.quotes[tickIdx + 1];\n          const barPrev = tickIdx > 0 ? this.mainStore.chart.feed?.quotes[tickIdx - 1] : null;\n\n          if (barNext && barNext.Close && barNext.DT > date) {\n            delta_x = this.getXFromEpoch(barNext.DT.getTime()) - x;\n            ratio = (date - bar.DT.getTime()) / (barNext.DT.getTime() - bar.DT.getTime());\n            if (price) delta_y = barNext.Close - price;\n          } else if (barPrev && barPrev.Close) {\n            delta_x = x - this.getXFromEpoch(barPrev.DT.getTime());\n            ratio = (date - bar.DT.getTime()) / (bar.DT.getTime() - barPrev.DT.getTime());\n            if (price) delta_y = price - barPrev.Close;\n          }\n        }\n\n        if (ratio) {\n          if (delta_x) {\n            x += ratio * delta_x;\n          }\n\n          if (price && delta_y) {\n            price += ratio * delta_y;\n          }\n        }\n\n        return {\n          x,\n          price\n        };\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_6__.makeObservable)(this, {\n      onMount: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onTickHistory: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onChartLoad: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onTick: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      loadHistory: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onVisibleAreaChanged: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onQuoteAreaChanged: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      setMsPerPx: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      newChart: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      scale: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      toggleDataFitMode: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      onCrosshairMove: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound,\n      isDataFitModeEnabled: mobx__WEBPACK_IMPORTED_MODULE_6__.observable,\n      isChartLoaded: mobx__WEBPACK_IMPORTED_MODULE_6__.observable,\n      epochBounds: mobx__WEBPACK_IMPORTED_MODULE_6__.observable.ref,\n      quoteBounds: mobx__WEBPACK_IMPORTED_MODULE_6__.observable.ref,\n      msPerPx: mobx__WEBPACK_IMPORTED_MODULE_6__.observable,\n      isFeedLoaded: mobx__WEBPACK_IMPORTED_MODULE_6__.observable,\n      cleanChart: mobx__WEBPACK_IMPORTED_MODULE_6__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.cleanChart();\n    this.initFlutterCharts();\n  }\n\n  initFlutterCharts() {\n    window.jsInterop = {\n      onChartLoad: this.onChartLoad,\n      onMainSeriesPaint: this.painter.onPaint,\n      onVisibleAreaChanged: this.onVisibleAreaChanged,\n      onQuoteAreaChanged: this.onQuoteAreaChanged,\n      loadHistory: this.loadHistory,\n      onCrosshairDisappeared: () => {\n        this.mainStore.crosshair.updateVisibility(false);\n      },\n      onCrosshairHover: (dx, dy, dxLocal, dyLocal, bottomIndicatorIndex) => {\n        if (!this.isOverFlutterCharts) return;\n        this.onCrosshairMove(dx, dy, dxLocal, dyLocal, bottomIndicatorIndex);\n\n        if (this.drawingHoverIndex != null) {\n          const drawingRepoItems = this.mainStore.chartAdapter.flutterChart?.drawingTool.getDrawingToolsRepoItems().map(item => (0,src_utils__WEBPACK_IMPORTED_MODULE_4__.safeParse)(item)).filter(item => item);\n\n          if (!drawingRepoItems) {\n            return;\n          }\n\n          const item = drawingRepoItems[this.drawingHoverIndex];\n\n          if (item) {\n            this.mainStore.crosshair.renderDrawingToolToolTip((0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_5__.capitalize)(item.name.replace('dt_', '')) || '', dx, dy);\n          }\n        }\n\n        this.debouncedIndicatorHover(dx, dy, dxLocal, dyLocal, bottomIndicatorIndex);\n      },\n      indicators: {\n        onRemove: index => {\n          this.mainStore.studies.deleteStudy(index);\n        },\n        onEdit: index => {\n          this.mainStore.studies.editStudyByIndex(index);\n        },\n        onSwap: (index1, index2) => {\n          const {\n            activeItems\n          } = this.mainStore.studies;\n          [activeItems[index1], activeItems[index2]] = [activeItems[index2], activeItems[index1]];\n        }\n      },\n      drawingTool: {\n        onAdd: () => {\n          this.mainStore.drawTools.onCreation();\n        },\n        onUpdate: () => {\n          this.mainStore.drawTools.onUpdate();\n        },\n        onLoad: items => {\n          this.mainStore.drawTools.onLoad(items);\n        },\n        onMouseEnter: index => {\n          this.drawingHoverIndex = index;\n        },\n        onMouseExit: () => {\n          this.drawingHoverIndex = null;\n          this.mainStore.crosshair.removeDrawingToolToolTip();\n        }\n      }\n    };\n    (0,src_flutter_chart__WEBPACK_IMPORTED_MODULE_2__.createChartElement)({\n      onChartLoad: this.onChartLoad\n    });\n  }\n\n  onMount(element) {\n    element.appendChild(window.flutterChartElement);\n    window.flutterChartElement?.addEventListener('wheel', this.onWheel, {\n      capture: true\n    });\n    window.flutterChartElement?.addEventListener('dblclick', this.onDoubleClick, {\n      capture: true\n    });\n    window.addEventListener('mousemove', this.onMouseMove, {\n      capture: true\n    });\n  }\n\n  onUnmount() {\n    window.flutterChartElement?.removeEventListener('wheel', this.onWheel, {\n      capture: true\n    });\n    window.flutterChartElement?.removeEventListener('dblclick', this.onDoubleClick, {\n      capture: true\n    });\n    window.removeEventListener('mousemove', this.onMouseMove, {\n      capture: true\n    });\n  }\n\n  onChartLoad() {\n    this.flutterChart = window.flutterChart;\n    this.isChartLoaded = true;\n  }\n\n  cleanChart() {\n    // Clean charts if it's already loaded\n    if (window.flutterChartElement) {\n      this.updateLeftMargin();\n      this.setShowInterval(false);\n      this.setSymbolClosed(false);\n    }\n  }\n\n  onCrosshairMove(dx, dy, dxLocal, dyLocal, bottomIndicatorIndex) {\n    // dxLocal and dyLocal are the local position value correponding to the bottom indicator/main chart\n    const epoch = this.flutterChart?.crosshair.getEpochFromX(dxLocal) || 0;\n    const quote = (this.flutterChart?.crosshair.getQuoteFromY(dyLocal) || 0).toFixed(this.mainStore.crosshair.decimalPlaces);\n    this.mainStore.crosshair.onMouseMove(dx, dy, epoch, quote);\n    this.crossHairValue = {\n      x: dx,\n      y: dy,\n      xLocal: dxLocal,\n      yLocal: dyLocal,\n      bottomIndex: bottomIndicatorIndex\n    };\n  }\n\n  onVisibleAreaChanged(leftEpoch, rightEpoch) {\n    if (this.epochBounds.leftEpoch !== leftEpoch || this.epochBounds.rightEpoch !== rightEpoch) {\n      this.epochBounds = {\n        leftEpoch,\n        rightEpoch\n      };\n    }\n\n    if (this.crossHairValue) {\n      const {\n        x,\n        y,\n        yLocal,\n        xLocal,\n        bottomIndex\n      } = this.crossHairValue;\n\n      if (x !== 0 && y !== 0) {\n        this.onCrosshairMove(x, y, xLocal, yLocal, bottomIndex);\n      }\n    }\n  }\n\n  onQuoteAreaChanged(topQuote, bottomQuote) {\n    this.quoteBounds = {\n      topQuote,\n      bottomQuote\n    };\n  }\n\n  getGranularityInMs() {\n    const granularity = this.mainStore.state.granularity || 1;\n    return granularity * 1000;\n  }\n\n  async onTickHistory(quotes) {\n    this.isFeedLoaded = true;\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.mainStore.chart.feed?.updateQuotes(quotes, false);\n    this.flutterChart?.feed.onTickHistory(quotes, false);\n  }\n\n  async onTick(quote) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    const lastQuote = this.mainStore.chart.feed?.quotes[this.mainStore.chart.feed?.quotes.length - 1];\n    if (lastQuote && new Date(lastQuote.Date) > new Date(quote.Date)) return;\n    this.mainStore.chart.feed?.addQuote(quote);\n\n    if (quote.ohlc) {\n      this.flutterChart?.feed.onNewCandle(quote);\n    } else if (this.getGranularityInMs() < 60000) {\n      this.flutterChart?.feed.onNewTick(quote);\n    }\n  }\n\n  loadHistory(payload) {\n    const {\n      count,\n      end\n    } = payload;\n    const {\n      state,\n      chart\n    } = this.mainStore;\n    const {\n      granularity\n    } = state;\n    chart.feed?.fetchPaginationData(chart.currentActiveSymbol?.symbol, end, count, granularity, _ref => {\n      let {\n        quotes\n      } = _ref;\n      this.mainStore.chart.feed?.updateQuotes(quotes || [], true);\n      this.flutterChart?.feed.onTickHistory(quotes || [], true);\n    });\n  }\n\n  updateChartStyle(chartType) {\n    this.flutterChart?.config.updateChartStyle(chartType);\n  }\n\n  async updateTheme(theme) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.flutterChart?.config.updateTheme(theme);\n  }\n\n  async updateLeftMargin(leftMargin) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.flutterChart?.config.updateLeftMargin(leftMargin);\n  }\n\n  async updateLiveStatus(isLive) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.flutterChart?.config.updateLiveStatus(isLive);\n  }\n\n  async setSymbolClosed(isClosed) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.flutterChart?.config.setSymbolClosed(isClosed);\n  }\n\n  async setShowInterval(showInterval) {\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isChartLoaded);\n    this.flutterChart?.config.toggleTimeIntervalVisibility(showInterval);\n  }\n\n  scale(scale) {\n    if (this.mainStore.studies.currentHoverIndex !== null) {\n      this.isScaled = true;\n    }\n\n    this.isDataFitModeEnabled = false;\n    const msPerPx = this.flutterChart?.app.scale(scale);\n\n    if (msPerPx != null) {\n      this.setMsPerPx(msPerPx);\n    }\n  }\n\n  async updateContracts(contractsMarker) {\n    const transformedContractsMarker = contractsMarker.filter(c => c.markers?.length > 0).map(c => {\n      c.markers.forEach(m => {\n        if (!m.quote) {\n          const {\n            price\n          } = this.getInterpolatedPositionAndPrice(m.epoch * 1000) || {};\n          m.quote = price;\n        }\n      });\n      return c;\n    });\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_6__.when)(() => this.isFeedLoaded);\n    this.flutterChart?.config.updateContracts(transformedContractsMarker);\n  }\n\n  setMsPerPx(msPerPx) {\n    this.msPerPx = msPerPx;\n    this.mainStore.state.saveLayout();\n  }\n\n  getXFromEpoch(epoch) {\n    return this.flutterChart?.app.getXFromEpoch(epoch) ?? 0;\n  }\n\n  getYFromQuote(quote) {\n    return this.flutterChart?.app.getYFromQuote(quote) ?? 0;\n  }\n\n  getEpochFromX(x) {\n    return this.flutterChart?.app.getEpochFromX(x) ?? 0;\n  }\n\n  getQuoteFromY(y) {\n    return this.flutterChart?.app.getQuoteFromY(y) ?? 0;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartModeStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/ChartModeStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_984486__) => {\n\n\"use strict\";\n__nested_webpack_require_984486__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_984486__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartModeStore)\n/* harmony export */ });\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_984486__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass ChartModeStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mainStore, {\n      route: 'chart-mode'\n    });\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartSettingStore.ts\":\n/*!****************************************!*\\\n  !*** ./src/store/ChartSettingStore.ts ***!\n  \\****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_985635__) => {\n\n\"use strict\";\n__nested_webpack_require_985635__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_985635__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartSettingStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_985635__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_985635__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_985635__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_985635__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\n/* provided dependency */ var t = __nested_webpack_require_985635__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass ChartSettingStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"language\", '');\n\n    _defineProperty(this, \"position\", 'bottom');\n\n    _defineProperty(this, \"theme\", 'light');\n\n    _defineProperty(this, \"countdown\", false);\n\n    _defineProperty(this, \"historical\", false);\n\n    _defineProperty(this, \"isAutoScale\", true);\n\n    _defineProperty(this, \"isHighestLowestMarkerEnabled\", true);\n\n    _defineProperty(this, \"minimumLeftBars\", void 0);\n\n    _defineProperty(this, \"whitespace\", void 0);\n\n    _defineProperty(this, \"languages\", []);\n\n    _defineProperty(this, \"defaultLanguage\", {});\n\n    _defineProperty(this, \"onSettingsChange\", undefined);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      language: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      position: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      theme: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      countdown: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      historical: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      isAutoScale: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      isHighestLowestMarkerEnabled: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      minimumLeftBars: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      updateActiveLanguage: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setLanguage: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setTheme: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setPosition: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      showCountdown: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setHistorical: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setAutoScale: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      setWhiteSpace: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      toggleHighestLowestMarker: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      whitespace: mobx__WEBPACK_IMPORTED_MODULE_3__.observable\n    });\n    this.defaultLanguage = this.languages[0];\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'setting'\n    }); // below reaction is updating the symbols and those elements that are not updating automatically on language change.\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.reaction)(() => this?.language?.key, () => {\n      mainStore?.chart?.activeSymbols?.retrieveActiveSymbols?.(true).then(() => {\n        mainStore?.chart?.changeSymbol?.(mainStore.state.symbol, mainStore.state.granularity, true);\n      });\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.when)(() => !!this.context, () => {\n      this.setSettings(mainStore.state.settings);\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  setSettings(settings) {\n    if (settings === undefined) {\n      return;\n    }\n\n    const {\n      countdown,\n      historical,\n      language,\n      minimumLeftBars,\n      position,\n      isAutoScale,\n      isHighestLowestMarkerEnabled,\n      theme,\n      activeLanguages,\n      whitespace\n    } = settings;\n\n    if (!(!activeLanguages && _Constant__WEBPACK_IMPORTED_MODULE_0__.Languages.every(x => this.languages.find(y => y.key === x.key)) || activeLanguages && this.languages.length === activeLanguages.length && this.languages.every(x => activeLanguages.indexOf(x.key.toUpperCase()) !== -1))) {\n      this.updateActiveLanguage(activeLanguages);\n    }\n\n    if (theme !== undefined) {\n      this.setTheme(theme);\n    }\n\n    if (position !== undefined) {\n      this.setPosition(position);\n    }\n\n    if (countdown !== undefined) {\n      this.showCountdown(countdown);\n    }\n\n    if (language !== undefined) {\n      this.setLanguage(language);\n    }\n\n    this.setMinimumLeftBars(minimumLeftBars);\n\n    if (historical !== undefined) {\n      this.setHistorical(historical);\n    }\n\n    if (isAutoScale !== undefined) {\n      this.setAutoScale(isAutoScale);\n    }\n\n    if (isHighestLowestMarkerEnabled !== undefined) {\n      this.toggleHighestLowestMarker(isHighestLowestMarkerEnabled);\n    }\n\n    this.setWhiteSpace(whitespace);\n  }\n\n  saveSetting() {\n    if (this.onSettingsChange && this.language) {\n      this.onSettingsChange({\n        countdown: this.countdown,\n        historical: this.historical,\n        language: this.language?.key,\n        position: this.position,\n        isAutoScale: this.isAutoScale,\n        isHighestLowestMarkerEnabled: this.isHighestLowestMarkerEnabled,\n        minimumLeftBars: this.minimumLeftBars,\n        theme: this.theme,\n        whitespace: this.whitespace\n      });\n    }\n  }\n\n  updateActiveLanguage(activeLanguages) {\n    if (activeLanguages) {\n      this.languages = activeLanguages.map(lngKey => _Constant__WEBPACK_IMPORTED_MODULE_0__.Languages.find(lng => lng.key.toUpperCase() === lngKey) || '').filter(x => x);\n    } else this.languages = _Constant__WEBPACK_IMPORTED_MODULE_0__.Languages; // set default language as the first item of active languages or Eng\n\n\n    this.defaultLanguage = this.languages[0];\n\n    if (this.language && !this.languages.find(x => x.key === this.language?.key) || !this.language) {\n      this.setLanguage(this.languages[0].key);\n    }\n  }\n\n  setLanguage(lng) {\n    if (!this.languages.length) {\n      return;\n    }\n\n    if (this.language && lng === this.language.key) {\n      return;\n    }\n\n    this.language = this.languages.find(item => item.key === lng) || this.defaultLanguage;\n    t.setLanguage(this.language.key, () => {\n      this?.mainStore?.loader?.hide?.();\n    });\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, `Change language to ${this.language?.key}`);\n    this.saveSetting();\n  }\n\n  setTheme(theme) {\n    if (this.theme === theme) {\n      return;\n    }\n\n    this.theme = theme;\n    this.mainStore.drawTools.updateTheme();\n    this.mainStore.chartAdapter.updateTheme(theme);\n\n    if (this.context) {\n      this.mainStore.state.setChartTheme(theme);\n    }\n\n    this.mainStore.studies.updateTheme();\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, `Change theme to ${theme}`);\n    this.saveSetting();\n  }\n\n  setPosition(value) {\n    if (this.position === value) {\n      return;\n    }\n\n    this.position = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, 'Change Position');\n    this.saveSetting();\n    /**\n     * Chart should fix its height & width after the position changed,\n     * for that purpose we stay some 10 ms so that position varaible update\n     * on chart context then ask chart to update itself hight & width\n     */\n\n    setTimeout(() => {\n      this.mainStore.chart.resizeScreen();\n    }, 10);\n    this.menuStore.setOpen(false);\n  }\n\n  showCountdown(value) {\n    if (this.countdown === value) {\n      return;\n    }\n\n    this.mainStore.chartAdapter.setShowInterval(value);\n    this.countdown = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, `${value ? 'Show' : 'Hide'} Countdown`);\n    this.saveSetting();\n  }\n\n  setHistorical(value) {\n    if (this.historical === value) {\n      return;\n    }\n\n    this.historical = value;\n    this.isHighestLowestMarkerEnabled = !value;\n    this.saveSetting();\n    /**\n     * Chart should fix its height & width after the position changed,\n     * for that purpose we stay some 10 ms so that position varaible update\n     * on chart context then ask chart to update itself hight & width\n     */\n\n    setTimeout(() => {\n      this.mainStore.chart.resizeScreen();\n    }, 10);\n  }\n\n  setAutoScale(value) {\n    if (this.isAutoScale === value) {\n      return;\n    }\n\n    this.isAutoScale = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, ` Change AutoScale to ${value}`);\n    this.saveSetting();\n  }\n\n  setMinimumLeftBars(value) {\n    if (this.minimumLeftBars === value) {\n      return;\n    }\n\n    this.minimumLeftBars = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, ` Change MinimumLeftBars to ${value}`);\n    this.saveSetting();\n  }\n\n  setWhiteSpace(value) {\n    if (this.whitespace === value) {\n      return;\n    }\n\n    this.whitespace = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, ` Change Whitespace to ${value}`);\n    this.saveSetting();\n  }\n\n  toggleHighestLowestMarker(value) {\n    if (this.isHighestLowestMarkerEnabled === value) {\n      return;\n    }\n\n    this.isHighestLowestMarkerEnabled = value;\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartSetting, ` ${value ? 'Show' : 'Hide'} HighestLowestMarker.`);\n    this.saveSetting();\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartSizeStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/ChartSizeStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_996554__) => {\n\n\"use strict\";\n__nested_webpack_require_996554__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_996554__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartSizeStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_996554__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_996554__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass ChartSizeStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_1__.makeObservable)(this, {\n      updateChartState: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      zoomIn: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      zoomOut: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound\n    });\n    this.mainStore = mainStore;\n  }\n\n  get state() {\n    return this.mainStore.state;\n  }\n\n  updateChartState() {\n    this.mainStore.chart.updateScaledOneOne(false);\n  }\n\n  zoomIn() {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_0__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_0__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_0__.LogActions.ChartSize, 'zoom In');\n    this.mainStore.chartAdapter.scale(1.25);\n  }\n\n  zoomOut() {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_0__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_0__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_0__.LogActions.ChartSize, 'zoom Out');\n    this.mainStore.chartAdapter.scale(0.75);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartState.ts\":\n/*!*********************************!*\\\n  !*** ./src/store/ChartState.ts ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_998553__) => {\n\n\"use strict\";\n__nested_webpack_require_998553__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_998553__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_998553__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_998553__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_998553__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_utils_object__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_998553__(/*! src/utils/object */ \"./src/utils/object.ts\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_998553__(/*! ../../sass/_themes.scss */ \"./sass/_themes.scss\");\n/* harmony import */ var _sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__nested_webpack_require_998553__.n(_sass_themes_scss__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_998553__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_998553__(/*! ../utils */ \"./src/utils/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-new */\n\n\n\n\n\n\n\nclass ChartState {\n  get context() {\n    return this.chartStore.context;\n  }\n\n  get chartTypeStore() {\n    return this.mainStore.chartType;\n  }\n\n  get timeperiodStore() {\n    return this.mainStore.timeperiod;\n  }\n\n  get loader() {\n    return this.mainStore.loader;\n  }\n\n  get rootElement() {\n    return this.chartStore.rootElement;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"chartStore\", void 0);\n\n    _defineProperty(this, \"getIndicatorHeightRatio\", void 0);\n\n    _defineProperty(this, \"shouldDrawTicksFromContractInfo\", false);\n\n    _defineProperty(this, \"has_updated_settings\", false);\n\n    _defineProperty(this, \"isAnimationEnabled\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"margin\", void 0);\n\n    _defineProperty(this, \"granularity\", void 0);\n\n    _defineProperty(this, \"chartType\", void 0);\n\n    _defineProperty(this, \"startEpoch\", void 0);\n\n    _defineProperty(this, \"endEpoch\", void 0);\n\n    _defineProperty(this, \"symbol\", void 0);\n\n    _defineProperty(this, \"heightFactor\", void 0);\n\n    _defineProperty(this, \"isConnectionOpened\", false);\n\n    _defineProperty(this, \"isChartReady\", false);\n\n    _defineProperty(this, \"chartStatusListener\", void 0);\n\n    _defineProperty(this, \"stateChangeListener\", void 0);\n\n    _defineProperty(this, \"settings\", void 0);\n\n    _defineProperty(this, \"showLastDigitStats\", false);\n\n    _defineProperty(this, \"scrollToEpoch\", void 0);\n\n    _defineProperty(this, \"clearChart\", void 0);\n\n    _defineProperty(this, \"isChartClosed\", false);\n\n    _defineProperty(this, \"shouldMinimiseLastDigits\", false);\n\n    _defineProperty(this, \"should_show_eu_content\", void 0);\n\n    _defineProperty(this, \"allowTickChartTypeOnly\", void 0);\n\n    _defineProperty(this, \"isStaticChart\", false);\n\n    _defineProperty(this, \"shouldFetchTradingTimes\", true);\n\n    _defineProperty(this, \"shouldFetchTickHistory\", true);\n\n    _defineProperty(this, \"allTicks\", []);\n\n    _defineProperty(this, \"contractInfo\", {});\n\n    _defineProperty(this, \"refreshActiveSymbols\", void 0);\n\n    _defineProperty(this, \"hasReachedEndOfData\", false);\n\n    _defineProperty(this, \"prevChartType\", void 0);\n\n    _defineProperty(this, \"isChartScrollingToEpoch\", false);\n\n    _defineProperty(this, \"crosshairState\", 1);\n\n    _defineProperty(this, \"crosshairTooltipLeftAllow\", null);\n\n    _defineProperty(this, \"maxTick\", void 0);\n\n    _defineProperty(this, \"enableScroll\", true);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"yAxisMargin\", {\n      top: 106,\n      bottom: 64\n    });\n\n    _defineProperty(this, \"tradingTimes\", null);\n\n    _defineProperty(this, \"activeSymbols\", null);\n\n    _defineProperty(this, \"chartControlsWidgets\", void 0);\n\n    _defineProperty(this, \"enabledChartFooter\", void 0);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      this.granularity = this.chartStore.granularity;\n    });\n\n    _defineProperty(this, \"debouncedStateChange\", lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()((state, option) => {\n      this.stateChange(state, option);\n    }, 500));\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.makeObservable)(this, {\n      granularity: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      chartType: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      startEpoch: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      endEpoch: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      symbol: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      has_updated_settings: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      heightFactor: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      isConnectionOpened: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      isChartReady: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      chartStatusListener: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      debouncedStateChange: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      stateChangeListener: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      should_show_eu_content: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      settings: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      showLastDigitStats: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      allowTickChartTypeOnly: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      scrollToEpoch: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      clearChart: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      isChartClosed: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      shouldMinimiseLastDigits: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      isStaticChart: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      shouldFetchTradingTimes: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      shouldFetchTickHistory: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      allTicks: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      contractInfo: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      refreshActiveSymbols: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      shouldDrawTicksFromContractInfo: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      hasReachedEndOfData: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      prevChartType: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      isChartScrollingToEpoch: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      crosshairState: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      crosshairTooltipLeftAllow: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      maxTick: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      enableScroll: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      enableZoom: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      yAxisMargin: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      setChartIsReady: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      setChartClosed: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.chartStore = mainStore.chart;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.when)(() => !!this.context, this.onContextReady);\n  }\n\n  updateProps(_ref) {\n    let {\n      networkStatus,\n      chartControlsWidgets,\n      enabledChartFooter,\n      chartStatusListener,\n      shouldDrawTicksFromContractInfo,\n      stateChangeListener,\n      getIndicatorHeightRatio,\n      chartType,\n      clearChart,\n      endEpoch,\n      isAnimationEnabled = true,\n      isConnectionOpened,\n      isStaticChart,\n      granularity,\n      margin = 0,\n      refreshActiveSymbols,\n      scrollToEpoch,\n      settings,\n      shouldFetchTradingTimes = true,\n      shouldFetchTickHistory = true,\n      should_show_eu_content,\n      should_zoom_out_on_yaxis,\n      allTicks = [],\n      contractInfo = {},\n      showLastDigitStats = false,\n      allowTickChartTypeOnly = false,\n      startEpoch,\n      symbol,\n      crosshairState,\n      zoom,\n      maxTick,\n      crosshairTooltipLeftAllow,\n      yAxisMargin,\n      enableScroll = null,\n      enableZoom = null,\n      anchorChartToLeft = false,\n      chartData,\n      isLive,\n      startWithDataFitMode,\n      leftMargin\n    } = _ref;\n    let isSymbolChanged = false;\n    let isGranularityChanged = false;\n\n    if (chartData?.tradingTimes && typeof chartData.tradingTimes === 'object' && JSON.stringify(chartData.tradingTimes) !== this.tradingTimes) {\n      this.mainStore.chart.tradingTimes?._calculatingTradingTime(chartData.tradingTimes);\n      this.tradingTimes = JSON.stringify(chartData.tradingTimes);\n    }\n\n    if (chartData?.activeSymbols && typeof chartData.activeSymbols === 'object' && JSON.stringify(chartData.activeSymbols) !== this.activeSymbols) {\n      this.activeSymbols = JSON.stringify(chartData.activeSymbols);\n      this.mainStore.chart.activeSymbols?.computeActiveSymbols(chartData.activeSymbols);\n    }\n\n    this.chartStatusListener = chartStatusListener;\n    this.stateChangeListener = stateChangeListener;\n    this.isAnimationEnabled = isAnimationEnabled;\n    this.isConnectionOpened = isConnectionOpened;\n    this.isStaticChart = isStaticChart;\n    this.margin = margin;\n    this.has_updated_settings = !(0,src_utils_object__WEBPACK_IMPORTED_MODULE_1__.isDeepEqual)(this.settings?.whitespace, settings?.whitespace);\n    this.settings = settings;\n    this.should_show_eu_content = should_show_eu_content;\n    this.shouldFetchTradingTimes = shouldFetchTradingTimes;\n    this.shouldFetchTickHistory = shouldFetchTickHistory;\n    this.allowTickChartTypeOnly = allowTickChartTypeOnly;\n    this.allTicks = allTicks;\n    this.contractInfo = contractInfo;\n    this.showLastDigitStats = showLastDigitStats;\n    this.getIndicatorHeightRatio = getIndicatorHeightRatio;\n    const feed = this.mainStore.chart.feed;\n\n    if (shouldDrawTicksFromContractInfo && feed && contractInfo.tick_stream) {\n      this.shouldDrawTicksFromContractInfo = shouldDrawTicksFromContractInfo;\n      feed.appendChartDataFromPOCResponse.call(feed, contractInfo);\n    }\n\n    if (networkStatus && (!this.mainStore.chart.networkStatus || networkStatus.class !== this.mainStore.chart.networkStatus.class)) {\n      this.mainStore.chart.networkStatus = networkStatus;\n    }\n\n    if (chartControlsWidgets !== this.chartControlsWidgets) {\n      this.chartControlsWidgets = chartControlsWidgets;\n    }\n\n    if (enabledChartFooter !== this.enabledChartFooter) {\n      this.enabledChartFooter = enabledChartFooter;\n    }\n\n    if (symbol !== this.symbol) {\n      this.symbol = symbol;\n      isSymbolChanged = true;\n      this.mainStore.chartTitle.hidePrice();\n    }\n\n    if (chartType && chartType !== this.chartType) {\n      if (chartType === 'table') this.prevChartType = this.chartTypeStore.type.id;\n      this.setChartType(chartType);\n    }\n\n    if (granularity !== undefined && granularity !== this.granularity) {\n      this.setChartGranularity(granularity);\n      isGranularityChanged = true;\n    }\n\n    if (this.chartStore.activeSymbols && refreshActiveSymbols !== this.refreshActiveSymbols) {\n      this.refreshActiveSymbols = refreshActiveSymbols;\n\n      if (this.refreshActiveSymbols) {\n        this.chartStore.activeSymbols.retrieveActiveSymbols(this.refreshActiveSymbols);\n      }\n    }\n\n    if (clearChart !== this.clearChart) {\n      this.clearChart = clearChart;\n      this.cleanChart();\n    } // This if statement should be always after setting `this.scrollToEpoch` value\n\n\n    if (this.startEpoch !== startEpoch || this.endEpoch !== endEpoch) {\n      this.startEpoch = startEpoch;\n      this.endEpoch = endEpoch;\n\n      if (isStaticChart && this.granularity === this.mainStore.chart.granularity) {\n        // Reload the chart if it is a static chart and the granularity hasn't changed\n        this.mainStore.chart.newChart();\n      } else if (this.mainStore.chart.feed) {\n        /* When layout is importing and range is changing as the same time we dont need to set the range,\n           the imported layout witll take care of it. */\n        if (!this.scrollToEpoch && !isSymbolChanged && !isGranularityChanged) {\n          this.mainStore.chart.feed.onRangeChanged();\n        }\n      }\n    } // Please always assign scrollToEpoch after startEpoch and keep this if statement exactly after above if clause\n\n\n    if (!isStaticChart && scrollToEpoch !== this.scrollToEpoch) {\n      this.scrollToEpoch = scrollToEpoch;\n\n      if (this.mainStore.chart && this.mainStore.chart.feed && !isSymbolChanged && !isGranularityChanged) {\n        this.setIsChartScrollingToEpoch(true);\n\n        if (anchorChartToLeft) {\n          setTimeout(() => this.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.SCROLL_TO_LEFT), 900);\n        } else {\n          this.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.SCROLL_TO_LEFT);\n        }\n      }\n    }\n\n    if (crosshairState !== undefined && crosshairState !== null && crosshairState !== this.crosshairState) {\n      this.mainStore.crosshair.setCrosshairState(crosshairState);\n      this.crosshairState = crosshairState;\n    }\n\n    if (crosshairTooltipLeftAllow !== undefined && this.crosshairTooltipLeftAllow !== crosshairTooltipLeftAllow) {\n      this.crosshairTooltipLeftAllow = crosshairTooltipLeftAllow;\n    }\n\n    if (zoom) {\n      if (zoom === 1) {\n        this.mainStore.chartSize.zoomIn();\n      } else {\n        this.mainStore.chartSize.zoomOut();\n      }\n    }\n\n    this.mainStore.chartSetting.setSettings(this.settings);\n\n    if (maxTick && this.maxTick !== maxTick) {\n      this.maxTick = maxTick;\n    }\n\n    if (yAxisMargin && typeof yAxisMargin === 'object') {\n      this.yAxisMargin = { ...this.yAxisMargin,\n        ...yAxisMargin\n      };\n    }\n\n    if (should_zoom_out_on_yaxis) {\n      const {\n        height_factor,\n        yaxis_margin\n      } = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.getYAxisScalingParams)({\n        is_contract_chart: shouldDrawTicksFromContractInfo,\n        is_mobile: this.mainStore.chart.isMobile,\n        ticks_length: this.mainStore.chart.feed?.quotes.length,\n        yaxis_height: this.mainStore.chart.chartContainerHeight\n      });\n      this.yAxisMargin = { ...this.yAxisMargin,\n        ...yaxis_margin\n      };\n      this.heightFactor = height_factor;\n    }\n\n    if (enableScroll !== null && this.enableScroll !== enableScroll) {\n      this.enableScroll = enableScroll;\n    }\n\n    if (enableZoom !== null && this.enableZoom !== enableZoom) {\n      this.enableZoom = enableZoom;\n    }\n\n    if (isLive != null && isLive != undefined && this.mainStore.chart.isLive != isLive) {\n      this.mainStore.chart.isLive = isLive;\n      this.mainStore.chartAdapter.updateLiveStatus(isLive);\n    }\n\n    if (startWithDataFitMode != null && startWithDataFitMode != undefined && this.mainStore.chart.startWithDataFitMode != startWithDataFitMode) {\n      this.mainStore.chart.startWithDataFitMode = startWithDataFitMode;\n    }\n\n    if (this.mainStore.chart.leftMargin != leftMargin) {\n      this.mainStore.chart.leftMargin = leftMargin;\n      this.mainStore.chartAdapter.updateLeftMargin(leftMargin);\n    }\n  }\n\n  setIsChartScrollingToEpoch(isScrollingToEpoch) {\n    this.isChartScrollingToEpoch = isScrollingToEpoch;\n  }\n\n  setChartClosed(isClosed) {\n    this.isChartClosed = isClosed;\n    this.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.MARKET_STATE_CHANGE, {\n      symbol: this.symbol,\n      isClosed\n    });\n  }\n\n  setChartTheme(theme) {\n    if (this.rootElement) {\n      (this.rootElement?.querySelector('.chartContainer')).style.backgroundColor = (_sass_themes_scss__WEBPACK_IMPORTED_MODULE_2___default())[`${theme}_chart_bg`];\n    }\n  }\n\n  stateChange(tag, option) {\n    if (this.stateChangeListener && typeof this.stateChangeListener === 'function') {\n      this.stateChangeListener(tag, option);\n    }\n  }\n\n  setChartIsReady(isChartReady) {\n    if (this.isChartReady !== isChartReady) {\n      this.isChartReady = isChartReady;\n\n      if (isChartReady) {\n        this.chartStore.setResizeEvent();\n        this.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.READY);\n      }\n\n      if (this.chartStatusListener && typeof this.chartStatusListener === 'function') {\n        this.chartStatusListener(isChartReady);\n      }\n    }\n  }\n\n  setChartGranularity(granularity) {\n    const isTimeUnitSecond = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.calculateTimeUnitInterval)(granularity).timeUnit === 'second';\n    const isChartTypeCandle = this.mainStore.chartType.isCandle || this.chartType && this.mainStore.chartType.isTypeCandle(this.chartType);\n    this.mainStore.chartAdapter.setMsPerPx(undefined);\n\n    if (this.context && isTimeUnitSecond && isChartTypeCandle) {\n      this.setChartType('line'); // if granularity is zero, set the chartType to 'line'\n    }\n\n    this.granularity = granularity === null ? undefined : granularity;\n  }\n\n  setChartType(chartType) {\n    this.chartType = chartType;\n\n    if (this.chartType) {\n      this.mainStore.chartAdapter.updateChartStyle(this.chartType);\n    }\n\n    if (this.chartTypeStore.onChartTypeChanged) {\n      this.chartTypeStore.onChartTypeChanged(chartType);\n    }\n  }\n\n  setShouldMinimiseLastDigit(status) {\n    this.shouldMinimiseLastDigits = status;\n  }\n\n  saveLayout() {\n    if (!this.chartStore.chartId) return;\n    const layoutData = this.mainStore.view.getLayout();\n    const id = this.mainStore.chart.chartId;\n    (0,_utils__WEBPACK_IMPORTED_MODULE_4__.saveToLocalStorage)(`chart-layout-${id}`, {\n      studyItems: layoutData.studyItems,\n      crosshair: layoutData.crosshair,\n      msPerPx: layoutData.msPerPx\n    });\n  } // returns false if restoring layout fails\n\n\n  restoreLayout() {\n    const id = this.mainStore.chart.chartId;\n    const layout = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.createObjectFromLocalStorage)(`chart-layout-${id}`);\n\n    if (!layout) {\n      this.clearLayout();\n      return false;\n    }\n\n    this.mainStore.view.restoreLayout(layout);\n    return true;\n  }\n\n  clearLayout() {\n    window.flutterChart?.indicators.clearIndicators();\n    window.flutterChart?.drawingTool.clearDrawingTool();\n  }\n\n  saveDrawings() {\n    if (!this.chartStore.chartId) return;\n    const layoutData = this.mainStore.view.getLayout();\n    const id = this.mainStore.chart.chartId;\n    (0,_utils__WEBPACK_IMPORTED_MODULE_4__.saveToLocalStorage)(`chart-layout-${id}`, {\n      crosshair: layoutData.crosshair,\n      studyItems: layoutData.studyItems,\n      msPerPx: layoutData.msPerPx\n    });\n  }\n\n  cleanChart() {\n    if (!this.clearChart || !this.isChartReady) return;\n    this.mainStore.studies.deleteAllStudies(); // TODO: use constant\n\n    this.mainStore.crosshair.onCrosshairChanged(2);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChartState);\n\n/***/ }),\n\n/***/ \"./src/store/ChartStore.ts\":\n/*!*********************************!*\\\n  !*** ./src/store/ChartStore.ts ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1017982__) => {\n\n\"use strict\";\n__nested_webpack_require_1017982__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1017982__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1017982__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1017982__(/*! moment */ \"moment\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1017982__.n(moment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _binaryapi__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1017982__(/*! ../binaryapi */ \"./src/binaryapi/index.ts\");\n/* harmony import */ var _components_ui_Context__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1017982__(/*! ../components/ui/Context */ \"./src/components/ui/Context.ts\");\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1017982__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _feed__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1017982__(/*! ../feed */ \"./src/feed/index.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1017982__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1017982__(/*! ../utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable prefer-rest-params */\n\n/* eslint-disable @typescript-eslint/no-this-alias */\n\n\n\n\n\n\n\n\n\nclass ChartStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"chartContainerHeight\", void 0);\n\n    _defineProperty(this, \"chartHeight\", void 0);\n\n    _defineProperty(this, \"chartId\", void 0);\n\n    _defineProperty(this, \"containerWidth\", null);\n\n    _defineProperty(this, \"context\", null);\n\n    _defineProperty(this, \"currentActiveSymbol\", void 0);\n\n    _defineProperty(this, \"currentLanguage\", void 0);\n\n    _defineProperty(this, \"cursorInChart\", false);\n\n    _defineProperty(this, \"startWithDataFitMode\", false);\n\n    _defineProperty(this, \"feed\", void 0);\n\n    _defineProperty(this, \"isBarrierDragging\", false);\n\n    _defineProperty(this, \"isChartAvailable\", true);\n\n    _defineProperty(this, \"isLive\", false);\n\n    _defineProperty(this, \"isMobile\", false);\n\n    _defineProperty(this, \"isScaledOneOne\", false);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"networkStatus\", void 0);\n\n    _defineProperty(this, \"resizeObserver\", void 0);\n\n    _defineProperty(this, \"serverTime\", void 0);\n\n    _defineProperty(this, \"shouldRenderDialogs\", false);\n\n    _defineProperty(this, \"leftMargin\", void 0);\n\n    _defineProperty(this, \"feedCall\", {});\n\n    _defineProperty(this, \"RANGE_PADDING_PX\", 125);\n\n    _defineProperty(this, \"contextPromise\", (0,_utils_PendingPromise__WEBPACK_IMPORTED_MODULE_6__[\"default\"])());\n\n    _defineProperty(this, \"rootNode\", null);\n\n    _defineProperty(this, \"api\", null);\n\n    _defineProperty(this, \"defaults\", {\n      granularity: 0,\n      chartType: 'line'\n    });\n\n    _defineProperty(this, \"granularity\", void 0);\n\n    _defineProperty(this, \"enableRouting\", null);\n\n    _defineProperty(this, \"chartNode\", null);\n\n    _defineProperty(this, \"chartControlsNode\", null);\n\n    _defineProperty(this, \"state\", void 0);\n\n    _defineProperty(this, \"onMessage\", null);\n\n    _defineProperty(this, \"_barriers\", []);\n\n    _defineProperty(this, \"tradingTimes\", void 0);\n\n    _defineProperty(this, \"activeSymbols\", void 0);\n\n    _defineProperty(this, \"whitespace\", void 0);\n\n    _defineProperty(this, \"isDestroyed\", false);\n\n    _defineProperty(this, \"currentCloseQuote\", () => {\n      const quotes = this.mainStore.chart.feed?.quotes;\n      let currentQuote = quotes?.[quotes.length - 1];\n\n      if (currentQuote && !currentQuote.Close) {\n        const dataSegmentClose = quotes?.filter(item => item && item.Close);\n\n        if (dataSegmentClose && dataSegmentClose.length) {\n          currentQuote = dataSegmentClose[dataSegmentClose.length - 1];\n        } else {\n          const dataSetClose = quotes?.filter(item => item && item.Close);\n\n          if (dataSetClose && dataSetClose.length) {\n            currentQuote = dataSetClose[dataSetClose.length - 1];\n          }\n        }\n      }\n\n      return currentQuote;\n    });\n\n    _defineProperty(this, \"indicatorHeightRatio\", num => {\n      let ratio = {};\n\n      if (typeof this.stateStore.getIndicatorHeightRatio === 'function' && this.chartNode) {\n        ratio = this.stateStore.getIndicatorHeightRatio(this.chartNode.offsetHeight, num);\n      }\n\n      if (this.chartNode && (!ratio || !ratio.height || !ratio.percent)) {\n        const chartHeight = this.chartNode.offsetHeight;\n        const isSmallScreen = chartHeight < 780;\n        const denominator = num >= 5 ? num : num + 1;\n        const reservedHeight = this.isMobile ? 160 : 320;\n        const indicatorsHeight = Math.round((chartHeight - (reservedHeight + (isSmallScreen ? 20 : 0))) / denominator);\n        ratio = {\n          height: indicatorsHeight,\n          percent: indicatorsHeight / chartHeight\n        };\n      }\n\n      return ratio;\n    });\n\n    _defineProperty(this, \"init\", (rootNode, props) => {\n      this.loader.show();\n      this.mainStore.state.setChartIsReady(false);\n      this.loader.setState('chart-engine');\n      this.chartId = props.id || 'base-chart';\n\n      this._initChart(rootNode, props);\n    });\n\n    _defineProperty(this, \"setResizeEvent\", () => {\n      const listener = entries => {\n        entries.forEach(() => {\n          if (this.rootNode && this.rootNode.clientWidth > 0) this.resizeScreen();\n        });\n      };\n\n      if ('ResizeObserver' in window) {\n        this.resizeObserver = new ResizeObserver(listener);\n        if (this.rootNode) this.resizeObserver.observe(this.rootNode);\n      } else {\n        __nested_webpack_require_1017982__.e(/*! import() | resize-observer-polyfill */ \"resize-observer-polyfill\").then(__nested_webpack_require_1017982__.bind(__nested_webpack_require_1017982__, /*! resize-observer-polyfill */ \"./node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js\")).then(_ref => {\n          let {\n            default: ResizeObserver\n          } = _ref;\n          window.ResizeObserver = ResizeObserver;\n\n          if (!this.rootNode) {\n            return;\n          }\n\n          this.resizeObserver = new ResizeObserver(listener);\n          this.resizeObserver.observe(this.rootNode);\n        });\n      }\n    });\n\n    _defineProperty(this, \"onMarketOpenClosedChange\", changes => {\n      const symbolObjects = this.activeSymbols?.processedSymbols || [];\n      let shouldRefreshChart = false;\n\n      for (const {\n        symbol,\n        name\n      } of symbolObjects) {\n        if (symbol in changes) {\n          if (changes[symbol]) {\n            shouldRefreshChart = true;\n            this.chartClosedOpenThemeChange(false);\n            this.mainStore.notifier.notifyMarketOpen(name);\n          } else {\n            this.chartClosedOpenThemeChange(true);\n            this.mainStore.notifier.notifyMarketClose(name);\n          }\n        }\n      }\n\n      if (shouldRefreshChart) {\n        // refresh to stream opened market\n        this.refreshChart();\n      }\n    });\n\n    _defineProperty(this, \"remainLabelY\", () => {\n      return 0;\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_7__.makeObservable)(this, {\n      chartContainerHeight: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      chartHeight: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      containerWidth: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      context: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      currentActiveSymbol: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      currentLanguage: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      cursorInChart: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      isBarrierDragging: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      isChartAvailable: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      isMobile: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      isScaledOneOne: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      networkStatus: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      serverTime: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      shouldRenderDialogs: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      yAxisWidth: mobx__WEBPACK_IMPORTED_MODULE_7__.computed,\n      _initChart: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      categorizedSymbols: mobx__WEBPACK_IMPORTED_MODULE_7__.computed,\n      changeSymbol: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      destroy: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      granularity: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      newChart: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onServerTimeChange: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      openFullscreen: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      pip: mobx__WEBPACK_IMPORTED_MODULE_7__.computed,\n      refreshChart: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      resizeScreen: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      setChartAvailability: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      updateCurrentActiveSymbol: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      updateScaledOneOne: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound\n    });\n    this.mainStore = mainStore;\n  }\n\n  get loader() {\n    return this.mainStore.loader;\n  }\n\n  get routingStore() {\n    return this.mainStore.routing;\n  }\n\n  get stateStore() {\n    return this.mainStore.state;\n  }\n\n  get studiesStore() {\n    return this.mainStore.studies;\n  }\n\n  get pip() {\n    return this.currentActiveSymbol?.decimal_places;\n  }\n\n  get rootElement() {\n    return this.chartId ? document.getElementById(this.chartId) : null;\n  }\n\n  get currentClose() {\n    return this.currentCloseQuote()?.Close;\n  }\n\n  get yAxisWidth() {\n    return window.flutterChart?.app.getYAxisWidth() || 60;\n  }\n\n  updateHeight(position) {\n    const historicalMobile = this.mainStore.chartSetting.historical && this.isMobile;\n    const panelPosition = position || this.mainStore.chartSetting.position; // TODO use constant here for chartcontrol height\n\n    let offsetHeight = 0;\n\n    if (this.stateStore.enabledChartFooter) {\n      offsetHeight = 32;\n    } else if (panelPosition === 'bottom' && this.stateStore.chartControlsWidgets) {\n      offsetHeight = 40;\n    }\n\n    this.chartHeight = this.chartNode?.offsetHeight;\n    this.chartContainerHeight = (this.chartHeight || 0) - offsetHeight - (historicalMobile ? 45 : 0);\n  }\n\n  resizeScreen() {\n    if (this.rootNode && this.rootNode.clientWidth >= 1280) {\n      this.containerWidth = 1280;\n    } else if (this.rootNode && this.rootNode.clientWidth >= 900) {\n      this.containerWidth = 900;\n    } else {\n      this.containerWidth = 480;\n    }\n\n    this.updateHeight();\n  }\n  /**\n   * Get the height ratio of each active indicator in the bottom of chart\n   *\n   * this method get the number of active indicator that locate in the bottom\n   * chart and by considering the chart height return the height that each\n   * indicator should have.\n   * if the getIndicatorHeightRatio callback passed to the chart from parent\n   * component, use that callback to calculate the height ratio. the callback\n   * should return an object that contain {height, percent} properties. otherwise\n   * the chart ignore it and calculate the ratio by itself\n   *\n   * @version 0.3.16\n   * @param {number} num: count of active indicator in the bottom of chart\n   * @returns {number} height: height of each active indicator in the bottom\n   * @returns {number} percent: percent of height of an indicator compare to the chart heigh\n   */\n\n\n  _initChart(rootNode, props) {\n    this.rootNode = rootNode;\n    this.chartNode = this.rootNode?.querySelector('.ciq-chart-area');\n    this.chartControlsNode = this.rootNode?.querySelector('.cq-chart-controls');\n    const {\n      symbol,\n      granularity,\n      requestAPI,\n      requestSubscribe,\n      requestForget,\n      requestForgetStream,\n      isMobile,\n      enableRouting,\n      onMessage,\n      settings,\n      onSettingsChange,\n      getMarketsOrder,\n      initialData,\n      chartData,\n      feedCall,\n      isLive,\n      startWithDataFitMode,\n      leftMargin\n    } = props;\n    this.feedCall = feedCall || {};\n    this.api = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__.BinaryAPI(requestAPI, requestSubscribe, requestForget, requestForgetStream);\n    this.currentLanguage = localStorage.getItem('current_chart_lang')?.toLowerCase(); // trading times and active symbols can be reused across multiple charts\n\n    this.tradingTimes = ChartStore.tradingTimes || (ChartStore.tradingTimes = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__.TradingTimes(this.api, {\n      enable: this.feedCall.tradingTimes,\n      shouldFetchTradingTimes: this.mainStore.state.shouldFetchTradingTimes,\n      tradingTimes: initialData?.tradingTimes\n    }));\n    this.activeSymbols = this.currentLanguage === settings?.language && ChartStore.activeSymbols || (ChartStore.activeSymbols = new _binaryapi__WEBPACK_IMPORTED_MODULE_1__.ActiveSymbols(this.api, this.tradingTimes, {\n      enable: this.feedCall.activeSymbols,\n      getMarketsOrder,\n      activeSymbols: initialData?.activeSymbols,\n      chartData\n    }));\n    const {\n      chartSetting\n    } = this.mainStore;\n    chartSetting.setSettings(settings);\n    chartSetting.onSettingsChange = onSettingsChange;\n    localStorage.setItem('current_chart_lang', settings?.language || 'en');\n    this.isMobile = isMobile;\n    this.whitespace = isMobile ? 50 : 150;\n    this.state = this.mainStore.state;\n    this.mainStore.notifier.onMessage = onMessage;\n    this.granularity = granularity !== undefined ? granularity : this.defaults.granularity;\n    this.isLive = isLive || false;\n    this.startWithDataFitMode = startWithDataFitMode || false;\n    this.leftMargin = leftMargin;\n    ChartStore.chartCount += 1; // connect chart to data\n\n    this.feed = new _feed__WEBPACK_IMPORTED_MODULE_4__.Feed(this.api, this.mainStore, this.tradingTimes);\n    this.enableRouting = enableRouting;\n\n    if (this.enableRouting) {\n      this.routingStore.handleRouting();\n    }\n\n    const context = new _components_ui_Context__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this.rootNode);\n    this.stateStore.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_3__.STATE.INITIAL);\n    this.loader.setState('market-symbol');\n    this.activeSymbols?.retrieveActiveSymbols().then(() => {\n      this.loader.setState('trading-time');\n      this.tradingTimes?.initialize().then((0,mobx__WEBPACK_IMPORTED_MODULE_7__.action)(() => {\n        // In the odd event that chart is destroyed by the time\n        // the request finishes, just calmly return...\n        if (this.isDestroyed) {\n          return;\n        }\n\n        if (this.startWithDataFitMode) {\n          this.state?.clearLayout();\n        } else {\n          this.state?.restoreLayout();\n        }\n\n        let _symbol = this.state?.symbol || symbol;\n\n        this.changeSymbol( // default to first available symbol\n        _symbol || this.activeSymbols && Object.keys(this.activeSymbols.symbolMap)[0], this.granularity);\n        this.context = context;\n        this.chartClosedOpenThemeChange(!this.currentActiveSymbol?.exchange_is_open);\n        this.mainStore.chart.tradingTimes?.onMarketOpenCloseChanged((0,mobx__WEBPACK_IMPORTED_MODULE_7__.action)(changes => {\n          for (const sy in changes) {\n            if (this.currentActiveSymbol?.symbol === sy) {\n              this.chartClosedOpenThemeChange(!changes[sy]);\n            }\n          }\n        }));\n        this.contextPromise?.resolve?.(this.context);\n        this.resizeScreen();\n        (0,mobx__WEBPACK_IMPORTED_MODULE_7__.reaction)(() => [this.state?.symbol, this.state?.granularity], () => {\n          if (this.state?.symbol !== undefined || this.state?.granularity !== undefined) {\n            this.changeSymbol(this.state.symbol, this.state.granularity);\n          }\n        });\n        this.tradingTimes?.onTimeChanged(this.onServerTimeChange);\n        setTimeout((0,mobx__WEBPACK_IMPORTED_MODULE_7__.action)(() => {\n          // Defer the render of the dialogs and dropdowns; this enables\n          // considerable performance improvements for slower devices.\n          this.shouldRenderDialogs = true;\n        }), 500);\n      }));\n    });\n  }\n\n  chartClosedOpenThemeChange(isChartClosed) {\n    this.mainStore.state.setChartClosed(isChartClosed);\n    this.mainStore.state.setChartTheme(this.mainStore.chartSetting.theme);\n    this.mainStore.chartAdapter.setSymbolClosed(isChartClosed);\n  }\n\n  get categorizedSymbols() {\n    if (!this.activeSymbols || this.activeSymbols.categorizedSymbols.length === 0) return [];\n    const activeSymbols = this.activeSymbols.activeSymbols;\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.cloneCategories)(activeSymbols, item => {\n      const selected = item.dataObject.symbol === this.currentActiveSymbol?.symbol;\n      return { ...item,\n        selected\n      };\n    });\n  }\n\n  onServerTimeChange() {\n    if (this.tradingTimes?._serverTime) {\n      this.serverTime = moment__WEBPACK_IMPORTED_MODULE_0___default()(this.tradingTimes._serverTime.getEpoch() * 1000).format('DD MMM YYYY HH:mm:ss [GMT]');\n    }\n  }\n\n  updateCurrentActiveSymbol(symbolObj) {\n    this.currentActiveSymbol = symbolObj;\n  }\n\n  setChartAvailability(status) {\n    this.isChartAvailable = status;\n  }\n\n  changeSymbol(symbolObj, granularity) {\n    let isLanguageChanged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof symbolObj === 'string') {\n      symbolObj = this.activeSymbols?.getSymbolObj(symbolObj);\n    }\n\n    const isSymbolAvailable = symbolObj && this.currentActiveSymbol;\n\n    if (isSymbolAvailable && symbolObj?.symbol === this.currentActiveSymbol?.symbol && granularity !== undefined && granularity === this.granularity && !isLanguageChanged) {\n      return;\n    }\n\n    this.newChart(symbolObj);\n\n    if (granularity !== undefined) {\n      this.granularity = granularity;\n    }\n\n    if (symbolObj) {\n      this.updateCurrentActiveSymbol(symbolObj);\n    }\n  } // Calling newChart with symbolObj as undefined refreshes the chart\n\n\n  newChart() {\n    let symbolObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.currentActiveSymbol;\n    if (!symbolObj) return;\n\n    if (this.currentActiveSymbol) {\n      this.feed?.unsubscribe({\n        symbol: this.currentActiveSymbol.symbol,\n        granularity: this.granularity\n      });\n    }\n\n    this.loader.show();\n    this.mainStore.state.setChartIsReady(false);\n\n    const onChartLoad = err => {\n      this.loader.hide();\n      this.chartClosedOpenThemeChange(!symbolObj.exchange_is_open);\n      this.mainStore.paginationLoader.updateOnPagination(false);\n      this.mainStore.state.setChartIsReady(true);\n\n      if (err) {\n        /* TODO, symbol not found error */\n        return;\n      }\n    };\n\n    this.mainStore.chartAdapter.newChart();\n    this.feed?.fetchInitialData(symbolObj.symbol, {\n      granularity: this.mainStore.state.granularity,\n      symbolObject: symbolObj\n    }, _ref2 => {\n      let {\n        quotes,\n        error\n      } = _ref2;\n      this.mainStore.chartAdapter.onTickHistory(quotes || []);\n      this.mainStore.chart.feed?.offMasterDataUpdate(this.mainStore.chartAdapter.onTick);\n      this.mainStore.chart.feed?.onMasterDataUpdate(this.mainStore.chartAdapter.onTick);\n      onChartLoad(error);\n    });\n  }\n\n  updateScaledOneOne(state) {\n    this.isScaledOneOne = state;\n  } // Makes requests to tick history API that will replace\n  // Existing chart tick/ohlc data\n\n\n  refreshChart() {\n    this.newChart();\n  }\n\n  destroy() {\n    ChartStore.chartCount -= 1;\n    this.isDestroyed = true;\n\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n\n    if (this.tradingTimes && ChartStore.chartCount === 0) {\n      ChartStore.tradingTimes = null;\n      this.tradingTimes.destructor();\n    } // Destroying the chart does not unsubscribe the streams;\n    // we need to manually unsubscribe them.\n\n\n    if (this.feed) {\n      this.feed.unsubscribeAll();\n      this.feed = null;\n    }\n\n    this.mainStore.drawTools.destructor();\n    this.currentActiveSymbol = null;\n    this.contextPromise = null;\n    this.context = null;\n  }\n\n  openFullscreen() {\n    const fullscreen_map = {\n      element: ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n      fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n      fnc_exit: ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen']\n    };\n    const isInFullScreen = fullscreen_map.element.some(fnc => document[fnc] && document[fnc] !== null);\n    const el = isInFullScreen ? document : document.documentElement;\n    const fncToCall = fullscreen_map[isInFullScreen ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]); // fncToCall can be undefined for iOS that does not support fullscreenAPI\n\n    if (fncToCall) {\n      el[fncToCall]()?.catch(() => undefined);\n    }\n  }\n\n}\n\n_defineProperty(ChartStore, \"chartCount\", 0);\n\n_defineProperty(ChartStore, \"tradingTimes\", void 0);\n\n_defineProperty(ChartStore, \"activeSymbols\", void 0);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ChartStore);\n\n/***/ }),\n\n/***/ \"./src/store/ChartTitleStore.ts\":\n/*!**************************************!*\\\n  !*** ./src/store/ChartTitleStore.ts ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1039835__) => {\n\n\"use strict\";\n__nested_webpack_require_1039835__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1039835__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartTitleStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1039835__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1039835__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.ts\");\n/* harmony import */ var _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1039835__(/*! ./AnimatedPriceStore */ \"./src/store/AnimatedPriceStore.ts\");\n/* harmony import */ var _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1039835__(/*! ./CategoricalDisplayStore */ \"./src/store/CategoricalDisplayStore.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1039835__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\n/* provided dependency */ var t = __nested_webpack_require_1039835__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nclass ChartTitleStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"animatedPrice\", void 0);\n\n    _defineProperty(this, \"categoricalDisplay\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"serverTime\", void 0);\n\n    _defineProperty(this, \"todayChange\", null);\n\n    _defineProperty(this, \"todayChangePercent\", null);\n\n    _defineProperty(this, \"isVisible\", false);\n\n    _defineProperty(this, \"openMarket\", {});\n\n    _defineProperty(this, \"enableShowPrice\", false);\n\n    _defineProperty(this, \"searchInputClassName\", void 0);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      this.chart.feed?.onMasterDataUpdate(this.update);\n      this.update();\n      this.tradingTimes?.onMarketOpenCloseChanged((0,mobx__WEBPACK_IMPORTED_MODULE_4__.action)(changes => {\n        for (const symbol in changes) {\n          if (this.currentSymbol?.symbol === symbol) {\n            this.currentSymbol.exchange_is_open = changes[symbol];\n          }\n        }\n      }));\n    });\n\n    _defineProperty(this, \"onMouseEnter\", () => this.crosshairStore.updateVisibility(false));\n\n    _defineProperty(this, \"onMouseLeave\", () => this.crosshairStore.updateVisibility(true));\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_4__.makeObservable)(this, {\n      todayChange: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      todayChangePercent: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      isVisible: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      openMarket: mobx__WEBPACK_IMPORTED_MODULE_4__.observable,\n      currentSymbol: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      isSymbolOpen: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      decimalPlaces: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      isShowChartPrice: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      tradingTimes: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      symbolOpenTime: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      currentActiveCategory: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      currentActiveSubCategory: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      currentActiveMarket: mobx__WEBPACK_IMPORTED_MODULE_4__.computed,\n      setSymbol: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound,\n      update: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound,\n      hidePrice: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_4__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_4__.when)(() => !!this.context, this.onContextReady);\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](mainStore, {\n      route: 'chart-title'\n    });\n    this.animatedPrice = new _AnimatedPriceStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n    this.categoricalDisplay = new _CategoricalDisplayStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      getCategoricalItems: () => this.mainStore.chart.categorizedSymbols,\n      getIsShown: () => this.menuStore.open,\n      placeholderText: t.translate('Search...'),\n      favoritesId: 'chartTitle&Comparison',\n      mainStore,\n      id: 'market_dropdown',\n      getCurrentActiveCategory: () => this.currentActiveCategory,\n      getCurrentActiveSubCategory: () => this.currentActiveSubCategory,\n      getCurrentActiveMarket: () => this.currentActiveMarket,\n      searchInputClassName: this.searchInputClassName\n    });\n    this.serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getInstance();\n  }\n\n  get chart() {\n    return this.mainStore.chart;\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get crosshairStore() {\n    return this.mainStore.crosshair;\n  }\n\n  get currentSymbol() {\n    return this.mainStore.chart.currentActiveSymbol;\n  }\n\n  get isSymbolOpen() {\n    return this.currentSymbol?.exchange_is_open;\n  }\n\n  get decimalPlaces() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;\n  }\n\n  get isShowChartPrice() {\n    return this.mainStore.chart.isChartAvailable;\n  }\n\n  get tradingTimes() {\n    return this.mainStore.chart.tradingTimes;\n  }\n\n  get symbolOpenTime() {\n    const times = this.tradingTimes?._tradingTimesMap && this.tradingTimes._tradingTimesMap.length && this.currentSymbol ? this.tradingTimes._tradingTimesMap[this.currentSymbol.symbol].times : [];\n    const now = this.serverTime.getLocalDate().getTime();\n    let openTime = times ? times.find(time => time.open.getTime() > now) : null;\n\n    if (!(openTime instanceof Date)) {\n      openTime = null;\n    }\n\n    return {\n      openTime\n    };\n  }\n\n  get currentActiveCategory() {\n    const current_active_symbol = this.mainStore.chart.currentActiveSymbol;\n\n    if (this.openMarket.category) {\n      return this.openMarket.category;\n    }\n\n    if (current_active_symbol?.subgroup !== 'none') {\n      return current_active_symbol?.subgroup;\n    }\n\n    return current_active_symbol ? current_active_symbol.market : 'favorite';\n  }\n\n  get currentActiveSubCategory() {\n    if (this.openMarket.subcategory) {\n      return this.openMarket.subcategory;\n    }\n\n    return this.mainStore.chart.currentActiveSymbol ? this.mainStore.chart.currentActiveSymbol.symbol : '';\n  }\n\n  get currentActiveMarket() {\n    if (this.openMarket.market) {\n      return this.openMarket.market;\n    }\n\n    return null;\n  }\n\n  setSymbol(symbolObj) {\n    if (this.mainStore.state.symbol !== undefined) {\n      console.error('Changing symbol does nothing because symbol prop is being set. Consider overriding the onChange prop in <ChartTitle />');\n      return;\n    }\n\n    this.chart.changeSymbol(symbolObj);\n  }\n\n  update(quote) {\n    if (!this.currentSymbol) {\n      return;\n    }\n\n    const isVisible = quote || !this.isShowChartPrice;\n\n    if (!isVisible) {\n      return;\n    }\n\n    let currentPrice = quote?.Close;\n\n    if (currentPrice) {\n      currentPrice = +currentPrice.toFixed(this.decimalPlaces);\n      const oldPrice = quote?.prevClose || this.animatedPrice.price;\n      this.animatedPrice.setPrice(currentPrice, oldPrice);\n\n      if (oldPrice) {\n        this.todayChange = Math.abs(currentPrice - oldPrice).toFixed(this.decimalPlaces);\n        this.todayChangePercent = (Number(this.todayChange) / oldPrice * 100).toFixed(2);\n      }\n    } // `todayChange` and `todayChangePercent` has problem on\n    // changing symbol, if two symbol have great difference\n    // in their values, it has a jumb in showing the correct\n    // values, with this code, we simply ignore the first update\n    // of these tow value and show the second data and it fix the\n    // above issue\n\n\n    if (!this.isVisible && isVisible && !this.enableShowPrice) {\n      this.enableShowPrice = true;\n      return;\n    }\n\n    this.isVisible = isVisible;\n  }\n\n  hidePrice() {\n    this.isVisible = false;\n    this.enableShowPrice = false;\n  }\n\n  updateProps(_ref) {\n    let {\n      open_market,\n      open\n    } = _ref;\n\n    if (open_market) {\n      this.openMarket = open_market;\n    }\n\n    if (open) {\n      this.menuStore.setOpen(true);\n    }\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ChartTypeStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/ChartTypeStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1048451__) => {\n\n\"use strict\";\n__nested_webpack_require_1048451__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1048451__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChartTypeStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1048451__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1048451__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1048451__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _ListStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1048451__(/*! ./ListStore */ \"./src/store/ListStore.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1048451__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1048451__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nconst notCandles = [..._Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes].filter(t => !t.candleOnly).map(t => t.id);\nclass ChartTypeStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"chartTypes\", []);\n\n    _defineProperty(this, \"listStore\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"settingsDialog\", void 0);\n\n    _defineProperty(this, \"type\", _Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes.find(t => t.id === 'line'));\n\n    _defineProperty(this, \"onChartTypeChanged\", void 0);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      this.chartTypes = [..._Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes];\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.makeObservable)(this, {\n      type: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      setChartType: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      setType: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      isTypeCandle: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.when)(() => !!this.context, this.onContextReady);\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](mainStore, {\n      route: 'chart-type'\n    });\n    this.listStore = new _ListStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n      getContext: () => this.context,\n      getItems: () => this.types\n    });\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n      mainStore,\n      onChanged: () => null\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.reaction)(() => this.mainStore.state.chartType, () => {\n      if (this.mainStore.state.chartType !== undefined) {\n        this.setType(this.mainStore.state.chartType);\n      }\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get chartTypeProp() {\n    return this.mainStore.state.chartType;\n  }\n\n  get isCandle() {\n    return this.type ? notCandles.indexOf(this.type.id) === -1 : false;\n  }\n\n  get isSpline() {\n    return this.type.id === 'spline';\n  }\n\n  setChartType(type) {\n    if (!type) return;\n    this.setType(type);\n  }\n\n  setType(type) {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.ChartType, type);\n    let chartType;\n    type = type || 'line';\n\n    if (typeof type != 'string') {\n      chartType = type;\n    } else {\n      chartType = this.types.find(t => t.id === type);\n    }\n\n    if (!chartType || chartType.id === this.type.id) {\n      return;\n    }\n\n    this.type = chartType;\n  }\n\n  updateProps(onChange) {\n    this.onChartTypeChanged = onChange;\n  }\n\n  get types() {\n    const isTickSelected = this.mainStore.chart.granularity === 0;\n\n    if (this.chartTypes === undefined || this.chartTypes.length === 0) {\n      this.chartTypes = [..._Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes];\n    }\n\n    return this.chartTypes.map(t => ({ ...t,\n      active: t.id === this.type.id,\n      disabled: t.candleOnly ? isTickSelected : false\n    }));\n  }\n\n  isTypeCandle(type) {\n    if (typeof type === 'string') {\n      type = this.types.find(t => t.id === type) || this.types[0];\n    }\n\n    return notCandles.indexOf(type.id) === -1;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ConnectStore.tsx\":\n/*!************************************!*\\\n  !*** ./src/store/ConnectStore.tsx ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1053389__) => {\n\n\"use strict\";\n__nested_webpack_require_1053389__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1053389__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1053389__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1053389__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_hooks__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1053389__(/*! src/hooks */ \"./src/hooks/index.ts\");\n/* harmony import */ var ___WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1053389__(/*! . */ \"./src/store/index.ts\");\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n\n\n\n\nconst ConnectStoreWrapper = _ref => {\n  let {\n    StoreClass,\n    ...props\n  } = _ref;\n  const store = (0,___WEBPACK_IMPORTED_MODULE_2__.useStores)();\n  const storeRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n  (0,src_hooks__WEBPACK_IMPORTED_MODULE_1__.useConstructor)(() => {\n    storeRef.current = new StoreClass(store);\n  });\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    storeRef.current?.updateProps?.(props);\n  });\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(() => {\n    return () => {\n      storeRef.current?.destructor?.();\n    };\n  }, []);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null, props.children(storeRef.current));\n};\n\nconst connectStore = (BaseComponent, StoreClass) => {\n  const Component = _ref2 => {\n    let {\n      children,\n      ...props\n    } = _ref2;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ConnectStoreWrapper, _extends({\n      StoreClass: StoreClass\n    }, props), store => /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(BaseComponent, _extends({\n      store: store\n    }, props), children));\n  };\n\n  return Component;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (connectStore);\n\n/***/ }),\n\n/***/ \"./src/store/CrosshairStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/CrosshairStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1056024__) => {\n\n\"use strict\";\n__nested_webpack_require_1056024__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1056024__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1056024__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1056024__(/*! moment */ \"moment\");\n/* harmony import */ var moment__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1056024__.n(moment__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1056024__(/*! src/Constant */ \"./src/Constant.tsx\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst MAX_TOOLTIP_WIDTH = 315;\n\nclass CrosshairStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"prev_arrow\", void 0);\n\n    _defineProperty(this, \"state\", 2);\n\n    _defineProperty(this, \"drawingTooltip\", null);\n\n    _defineProperty(this, \"indicatorTooltip\", null);\n\n    _defineProperty(this, \"node\", null);\n\n    _defineProperty(this, \"showChange\", false);\n\n    _defineProperty(this, \"showSeries\", false);\n\n    _defineProperty(this, \"showStudies\", false);\n\n    _defineProperty(this, \"isDrawingRegistered\", false);\n\n    _defineProperty(this, \"selectedDrawing\", '');\n\n    _defineProperty(this, \"refs\", void 0);\n\n    _defineProperty(this, \"hoverOnScreen\", false);\n\n    _defineProperty(this, \"isOverChartContainer\", false);\n\n    _defineProperty(this, \"onCrosshairChanged\", () => null);\n\n    _defineProperty(this, \"onMount\", async refs => {\n      await (0,mobx__WEBPACK_IMPORTED_MODULE_2__.when)(() => this.mainStore.chartAdapter.isChartLoaded);\n      const contentWindow = document.querySelector('.chartContainer');\n\n      if (contentWindow) {\n        contentWindow.addEventListener('mouseout', this.onMouseOut);\n      }\n\n      this.refs = refs;\n    });\n\n    _defineProperty(this, \"onUnmount\", () => {\n      const contentWindow = document.querySelector('.chartContainer');\n\n      if (contentWindow) {\n        contentWindow.removeEventListener('mouseout', this.onMouseOut);\n      }\n\n      this.refs = undefined;\n    });\n\n    _defineProperty(this, \"onMouseMove\", (dx, dy, epoch, quote) => {\n      if (this.hoverOnScreen === false) {\n        this.isOverChartContainer = true;\n        this.updateVisibility(true);\n        this.hoverOnScreen = true;\n      }\n\n      if (!this.isOverChartContainer) return;\n      this.setPositions(dx, dy, epoch, quote);\n      this.renderCrosshairTooltip(dx, dy);\n      this.mainStore.crosshair.updateVisibility(true);\n    });\n\n    _defineProperty(this, \"onMouseOut\", () => {\n      this.isOverChartContainer = false;\n      this.updateVisibility(false);\n      this.hoverOnScreen = false;\n    });\n\n    _defineProperty(this, \"setPositions\", (offsetX, offsetY, epoch, quote) => {\n      if (!this.refs) return;\n      const {\n        crossHairXRef,\n        crossHairYRef,\n        floatDateRef,\n        floatPriceRef\n      } = this.refs;\n      if (crossHairXRef.current) crossHairXRef.current.style.transform = `translate(${offsetX}px, 0px)`;\n      if (crossHairYRef.current) crossHairYRef.current.style.transform = `translate(0px, ${offsetY}px)`;\n\n      if (floatDateRef.current) {\n        const width = floatDateRef.current.clientWidth;\n        floatDateRef.current.innerText = moment__WEBPACK_IMPORTED_MODULE_0___default().utc(epoch).format(this.getDateTimeFormat());\n        floatDateRef.current.style.transform = `translate(${offsetX - width / 2}px, 0px)`;\n      }\n\n      if (floatPriceRef.current) {\n        const height = floatPriceRef.current.clientHeight;\n        const price = this.mainStore.chartAdapter.getQuoteFromY(offsetY);\n\n        if (price >= 0) {\n          const quoteLabel = Number(quote).toFixed(this.mainStore.chart.pip);\n          floatPriceRef.current.innerText = `${quoteLabel}`;\n        }\n\n        floatPriceRef.current.style.transform = `translate(0px, ${offsetY - height / 2}px)`;\n      }\n    });\n\n    _defineProperty(this, \"renderCrosshairTooltip\", (offsetX, offsetY) => {\n      // if no tooltip exists, then skip\n      if (this.state !== 2) return;\n      if (!this.mainStore.chartAdapter.isChartLoaded) return;\n      const epoch = this.mainStore.chartAdapter.getEpochFromX(offsetX);\n      const quotes = this.mainStore.chart.feed?.quotes || [];\n      const lastQuote = quotes[quotes.length - 1];\n      const lastQuoteEpoch = lastQuote?.DT?.getTime();\n      const granularity = this.mainStore.chartAdapter.getGranularityInMs();\n      const nextQuoteEpoch = lastQuoteEpoch ? lastQuoteEpoch + granularity / 2 : epoch;\n      const quoteBar = epoch <= nextQuoteEpoch ? this.mainStore.chart.feed?.getClosestQuoteForEpoch(epoch) : undefined;\n      let rows = [];\n\n      if (quoteBar) {\n        rows = this.calculateRows(quoteBar);\n      }\n\n      const closestEpoch = this.mainStore.chart.feed?.getClosestValidEpoch(epoch, granularity);\n      const indicatorsRows = this.getIndicatorRows(quoteBar?.DT?.getTime() || closestEpoch || epoch);\n      rows.push(...indicatorsRows);\n\n      if (rows.length === 0 || !this.isChartReady) {\n        this.updateTooltipPosition({\n          left: -5000,\n          top: 0,\n          rows: null\n        });\n      } else {\n        this.updateTooltipPosition({\n          left: offsetX,\n          top: offsetY,\n          rows\n        });\n      }\n    });\n\n    _defineProperty(this, \"selectedDrawingHoverClick\", async () => {\n      await (0,mobx__WEBPACK_IMPORTED_MODULE_2__.when)(() => this.mainStore.chartAdapter.isChartLoaded);\n      const contentWindow = document.querySelector('.chartContainer');\n      if (!contentWindow || this.isDrawingRegistered) return;\n      this.isDrawingRegistered = true;\n    });\n\n    _defineProperty(this, \"renderDrawingToolToolTip\", (name, dx, dy) => {\n      if (this.drawingTooltip !== null) {\n        this.drawingTooltip.style.top = `${dy - 100}px`;\n        this.drawingTooltip.style.left = `${dx - 150}px`;\n      } else {\n        if (document.querySelector('.draw-tool-tooltip') != null) return;\n        const chartContainer = this.context?.topNode?.querySelector('.chartContainer');\n        const parentDiv = document.createElement('div');\n        parentDiv.classList.add('draw-tool-tooltip', 'mSticky');\n        parentDiv.style.display = 'inline-block';\n        parentDiv.style.position = 'absolute';\n        parentDiv.style.top = `${dy - 100}px`;\n        parentDiv.style.left = `${dx - 150}px`;\n        parentDiv.innerHTML = `\n                        <span class='mStickyInterior' style='display:inline-block'>${name}</span>\n                        <span class='mouseDeleteInstructions'>Double click to manage</span>\n            `;\n        this.drawingTooltip = parentDiv;\n        chartContainer?.appendChild(parentDiv);\n      }\n    });\n\n    _defineProperty(this, \"renderIndicatorToolTip\", (name, dx, dy) => {\n      if (this.indicatorTooltip !== null) {\n        this.indicatorTooltip.style.top = `${dy - 100}px`;\n        this.indicatorTooltip.style.left = `${dx - 150}px`;\n      } else {\n        if (document.querySelector('.indicator-tooltip') != null) return;\n        const chartContainer = this.context?.topNode?.querySelector('.chartContainer');\n        const parentDiv = document.createElement('div');\n        parentDiv.classList.add('indicator-tooltip', 'mSticky');\n        parentDiv.style.display = 'inline-block';\n        parentDiv.style.position = 'absolute';\n        parentDiv.style.top = `${dy - 100}px`;\n        parentDiv.style.left = `${dx - 150}px`;\n        parentDiv.innerHTML = `\n                    <span class='mStickyInterior' style='display:inline-block'>${name}</span>\n                    <span class='mouseDeleteInstructions'>Double click to manage</span>\n        `;\n        this.indicatorTooltip = parentDiv;\n        chartContainer?.appendChild(parentDiv);\n      }\n    });\n\n    _defineProperty(this, \"removeDrawingToolToolTip\", () => {\n      // TODO: cleanup\n      if (document.getElementsByClassName('draw-tool-tooltip').length > 0) {\n        document.getElementsByClassName('draw-tool-tooltip')[0].remove();\n        this.drawingTooltip = null;\n      }\n    });\n\n    _defineProperty(this, \"removeIndicatorToolTip\", () => {\n      // TODO: cleanup\n      if (document.getElementsByClassName('indicator-tooltip').length > 0) {\n        document.getElementsByClassName('indicator-tooltip')[0].remove();\n        this.indicatorTooltip = null;\n      }\n    });\n\n    _defineProperty(this, \"getIndicatorRows\", epoch => {\n      const rows = [];\n      const tooltipContent = window.flutterChart.app.getTooltipContent(epoch, this.decimalPlaces || 2);\n      const activeItems = this.mainStore.studies.activeItems || [];\n      tooltipContent.filter(c => c).forEach((item, index) => {\n        if (index < activeItems.length) {\n          const labels = (0,src_Constant__WEBPACK_IMPORTED_MODULE_1__.getTooltipLabels)(item.name, activeItems[index])?.labels || [];\n          labels.forEach((label, i) => {\n            const value = item.values[i];\n            if (!value) return;\n            rows.push({\n              name: label,\n              value\n            });\n          });\n        }\n      });\n      return rows;\n    });\n\n    _defineProperty(this, \"updateVisibility\", visible => {\n      const crosshair = this.refs?.crosshairRef.current;\n\n      if (crosshair) {\n        if (visible) crosshair.classList.add('active');else crosshair.classList.remove('active');\n      }\n    });\n\n    _defineProperty(this, \"getDateTimeFormat\", () => {\n      switch (this.mainStore.timeperiod.timeUnit) {\n        case 'day':\n          return 'DD/MM/YYYY';\n\n        case 'hour':\n        case 'minute':\n          return 'DD/MM HH:mm';\n\n        case 'tick':\n          return 'DD/MM HH:mm:ss';\n\n        default:\n          return 'DD/MM HH:mm';\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.makeObservable)(this, {\n      activeSymbol: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      decimalPlaces: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      state: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      toggleState: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      setCrosshairState: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound\n    });\n    this.mainStore = mainStore;\n  }\n\n  get activeSymbol() {\n    return this.mainStore.chart.currentActiveSymbol;\n  }\n\n  get decimalPlaces() {\n    return this.activeSymbol?.decimal_places || 2;\n  }\n\n  get showOhl() {\n    return this.mainStore.timeperiod.timeUnit !== 'tick' && this.mainStore.chartType.isCandle;\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get isChartReady() {\n    return this.mainStore.state.isChartReady;\n  }\n\n  toggleState() {\n    const state = (this.state + 1) % 3;\n    this.setCrosshairState(state);\n  }\n\n  updateProps(onChange) {\n    this.onCrosshairChanged = onChange || (() => null);\n  }\n\n  setCrosshairState(state) {\n    if (!this.context) {\n      return;\n    }\n\n    this.state = state;\n    this.mainStore.state.crosshairState = state;\n    this.mainStore.state.saveLayout();\n    this.onCrosshairChanged(this.state);\n    const isCrosshairVisible = state !== 0;\n    this.mainStore.chartAdapter.flutterChart?.config.updateCrosshairVisibility(isCrosshairVisible);\n  }\n\n  calculateRows(data) {\n    const dupMap = {};\n    const fields = []; // Access main chart panel and yAxis in this scope:\n\n    fields.push({\n      member: 'DT',\n      display: 'DT'\n    });\n    dupMap.DT = dupMap.Close = 1;\n\n    if (this.showChange) {\n      fields.push({\n        member: 'Change',\n        display: 'Change'\n      });\n    }\n\n    if (this.showOhl) {\n      for (const el of ['Open', 'Close', 'High', 'Low']) {\n        fields.push({\n          member: el,\n          display: el\n        });\n      }\n\n      dupMap.Open = dupMap.High = dupMap.Low = 1;\n    }\n\n    if (this.activeSymbol?.name) {\n      const display = this.activeSymbol?.name;\n      fields.push({\n        member: 'Close',\n        display\n      });\n    }\n\n    const rows = [];\n\n    for (const obj of fields) {\n      const {\n        member: name,\n        display: displayName\n      } = obj;\n      let dsField = data[name];\n\n      if (['Open', 'Close', 'High', 'Low'].includes(name)) {\n        dsField = Number(dsField).toFixed(this.mainStore.chart.pip);\n      }\n\n      const fieldName = displayName?.replace(/^(Result )(.*)/, '$2');\n\n      if (dsField && (name === 'DT' || typeof dsField !== 'object')) {\n        let fieldValue = '';\n\n        if (dsField.constructor === Number) {\n          fieldValue = dsField.toString();\n        } else if (dsField.constructor === Date) {\n          fieldValue = moment__WEBPACK_IMPORTED_MODULE_0___default()(dsField).format(this.getDateTimeFormat());\n        } else {\n          fieldValue = dsField;\n        }\n\n        rows.push({\n          name: fieldName.toUpperCase(),\n          value: fieldValue\n        });\n      }\n    }\n\n    return rows;\n  }\n\n  // YES! we are manually patching DOM, Because we don't want to pay\n  // for react reconciler & mox tracking observables.\n  updateTooltipPosition(_ref) {\n    let {\n      top,\n      left,\n      rows\n    } = _ref;\n    const crosshair = this.context?.topNode?.querySelector('.cq-crosshair-tooltip');\n\n    if (crosshair) {\n      crosshair.style.transform = `translate(${left}px, ${top}px)`;\n      const tooltipRightLimit = this.mainStore.state.crosshairTooltipLeftAllow || MAX_TOOLTIP_WIDTH;\n      const arrow = left <= tooltipRightLimit ? 'arrow-left' : 'arrow-right';\n\n      if (arrow !== this.prev_arrow) {\n        if (this.prev_arrow) {\n          crosshair.classList.remove(this.prev_arrow);\n        }\n\n        crosshair.classList.add(arrow);\n        this.prev_arrow = arrow;\n      } // if there is a need to update the rows.\n\n\n      if (rows !== null) {\n        const content = crosshair.querySelector('.cq-crosshair-content');\n\n        if (content) {\n          content.innerHTML = rows.map(r => `\n                <div class=\"row\">\n                    <span>${r.name !== 'DT' ? r.name : r.value}</span>\n                    <span>${r.name !== 'DT' ? r.value : ''}</span>\n                </div>\n            `).join('');\n        }\n      }\n    }\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CrosshairStore);\n\n/***/ }),\n\n/***/ \"./src/store/DialogStore.ts\":\n/*!**********************************!*\\\n  !*** ./src/store/DialogStore.ts ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1070802__) => {\n\n\"use strict\";\n__nested_webpack_require_1070802__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1070802__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DialogStore)\n/* harmony export */ });\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1070802__(/*! lodash.debounce */ \"./node_modules/lodash.debounce/index.js\");\n/* harmony import */ var lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1070802__.n(lodash_debounce__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1070802__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nlet activeDialog;\nclass DialogStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"open\", false);\n\n    _defineProperty(this, \"onClose\", () => this.setOpen(false));\n\n    _defineProperty(this, \"setOpen\", lodash_debounce__WEBPACK_IMPORTED_MODULE_0___default()(val => {\n      this.openDialog(val);\n    }, 10, {\n      leading: true,\n      trailing: false\n    }));\n\n    _defineProperty(this, \"handleClickOutside\", e => {\n      let isRightClick = false;\n\n      if ('which' in e) {\n        isRightClick = e.which === 3;\n      } else if ('button' in e) {\n        isRightClick = e.button === 2;\n      }\n\n      if (!e.isHandledByDialog && !isRightClick) {\n        this.onClose();\n      }\n    });\n\n    _defineProperty(this, \"closeOnEscape\", e => {\n      const ESCAPE = 27;\n\n      if (e.keyCode === ESCAPE) {\n        this.onClose();\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_1__.makeObservable)(this, {\n      open: mobx__WEBPACK_IMPORTED_MODULE_1__.observable,\n      openDialog: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      register: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      unregister: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      onContainerClick: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      updateCloseCallback: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_1__.when)(() => !!this.context, () => {\n      this.routingStore.registerDialog(this);\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get routingStore() {\n    return this.mainStore.routing;\n  }\n\n  openDialog(val) {\n    if (this.open !== val) {\n      this.open = val;\n\n      if (this.open) {\n        // As we combine dialogs with the menu, so for opening\n        // the items which has no menu, this trigger right after\n        // firing open action, this delay prevent that issue.\n        setTimeout(this.register, 100);\n      } else {\n        this.unregister();\n      }\n\n      if (val === true) {\n        // close active dialog.\n        if (activeDialog) {\n          activeDialog.openDialog(false);\n        }\n\n        activeDialog = this;\n      } else {\n        activeDialog = undefined;\n      }\n    }\n  }\n\n  register() {\n    document.addEventListener('click', this.handleClickOutside, false);\n    document.addEventListener('keydown', this.closeOnEscape, false);\n  }\n\n  unregister() {\n    document.removeEventListener('click', this.handleClickOutside);\n    document.removeEventListener('keydown', this.closeOnEscape);\n  }\n\n  onContainerClick(e) {\n    /* TODO: why stopPropagation() is not working ಠ_ಠ */\n    // e.stopPropagation();\n    e.nativeEvent.isHandledByDialog = true;\n  }\n\n  updateCloseCallback(onClose) {\n    if (onClose !== undefined) {\n      this.onClose = onClose;\n    }\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/DrawToolsStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/DrawToolsStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1074806__) => {\n\n\"use strict\";\n__nested_webpack_require_1074806__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1074806__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DrawToolsStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1074806__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1074806__(/*! lodash.set */ \"./node_modules/lodash.set/index.js\");\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1074806__.n(lodash_set__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var src_components_ui_utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1074806__(/*! src/components/ui/utils */ \"./src/components/ui/utils.ts\");\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1074806__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1074806__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1074806__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1074806__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1074806__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.ts\");\n/* provided dependency */ var t = __nested_webpack_require_1074806__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nclass DrawToolsStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"_pervDrawingObjectCount\", 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"settingsDialog\", void 0);\n\n    _defineProperty(this, \"activeToolsGroup\", []);\n\n    _defineProperty(this, \"portalNodeIdChanged\", void 0);\n\n    _defineProperty(this, \"seletedDrawToolConfig\", null);\n\n    _defineProperty(this, \"getDrawToolsItems\", () => {\n      const drawTools = (0,_Constant__WEBPACK_IMPORTED_MODULE_2__.getDrawTools)();\n      return Object.keys(drawTools).map(key => drawTools[key]);\n    });\n\n    _defineProperty(this, \"drawingToolsRepoArray\", () => {\n      return this.mainStore.chartAdapter.flutterChart?.drawingTool.getDrawingToolsRepoItems().map(item => (0,_utils__WEBPACK_IMPORTED_MODULE_3__.safeParse)(item)).filter(item => item).filter(item => {\n        return !(item.drawingData.isDrawingFinished == false);\n      });\n    });\n\n    _defineProperty(this, \"onContextReady\", () => {\n      document.addEventListener('keydown', this.closeOnEscape, false);\n      document.addEventListener('dblclick', this.doubleClick);\n    });\n\n    _defineProperty(this, \"closeOnEscape\", e => {\n      const ESCAPE = 27;\n\n      if (e.keyCode === ESCAPE) {\n        this.mainStore.chartAdapter.flutterChart?.drawingTool.clearDrawingToolSelect(); // drawingTools.selectedDrawingTool = null;\n\n        this.seletedDrawToolConfig = null;\n        this.drawingFinished();\n      }\n    });\n\n    _defineProperty(this, \"doubleClick\", () => this.drawingFinished());\n\n    _defineProperty(this, \"transform\", value => {\n      if (typeof value === 'string' && (value.startsWith('#') || value.toLowerCase().startsWith('0x'))) {\n        return (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_1__.hexToInt)(value);\n      }\n\n      if ((0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLiteralObject)(value)) {\n        const map = value;\n        Object.keys(value).forEach(key => {\n          map[key] = this.transform(map[key]);\n        });\n      } else if (Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n          value[i] = this.transform(value[i]);\n        }\n      }\n\n      return value;\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_7__.makeObservable)(this, {\n      activeToolsGroup: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      portalNodeIdChanged: mobx__WEBPACK_IMPORTED_MODULE_7__.observable,\n      activeToolsNo: mobx__WEBPACK_IMPORTED_MODULE_7__.computed,\n      destructor: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      drawingFinished: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      clearAll: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      updateActiveToolsGroup: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      showDrawToolDialog: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      selectTool: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onChanged: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onDeleted: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onSetting: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      updatePortalNode: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onCreation: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound,\n      onLoad: mobx__WEBPACK_IMPORTED_MODULE_7__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_5__[\"default\"](mainStore, {\n      route: 'draw-tool'\n    });\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_6__[\"default\"]({\n      mainStore,\n      onDeleted: id => {\n        const drawToolsItems = this.drawingToolsRepoArray();\n        const index = drawToolsItems?.findIndex(item => item.configId === id);\n\n        if (index !== undefined && index > -1) {\n          this.onDeleted(index);\n        }\n      },\n      onChanged: items => this.onChanged(items)\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_7__.when)(() => !!this.context, this.onContextReady);\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get stateStore() {\n    return this.mainStore.state;\n  }\n\n  get crosshairStore() {\n    return this.mainStore.crosshair;\n  }\n\n  get activeToolsNo() {\n    return this.activeToolsGroup.reduce((a, b) => a + b.items.length, 0);\n  }\n\n  destructor() {\n    document.removeEventListener('keydown', this.closeOnEscape);\n    document.removeEventListener('dblclick', this.doubleClick);\n  } // Callback that gets called when theme is changed\n\n\n  updateTheme() {\n    this.activeToolsGroup.forEach(item => item.items.forEach(data => {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_3__.transformStudiesforTheme)(data.parameters, this.mainStore.chartSetting.theme);\n      this.onChanged(data.parameters, data.index);\n    }));\n  } // Callback that runs when the chart is loaded\n\n\n  onLoad(drawings) {\n    this.activeToolsGroup = [];\n    drawings.forEach(item => {\n      if (typeof item === 'string') {\n        item = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.safeParse)(item);\n      }\n\n      if (!item) {\n        return;\n      }\n\n      const drawingName = item.name.replace('dt_', '');\n\n      if (drawingName) {\n        const finalItem = this.processDrawTool(drawingName);\n        finalItem.config = item;\n        finalItem.parameters.forEach(params => {\n          if (params.path) {\n            if (['lineStyle', 'fillStyle'].includes(params.path)) {\n              params.value = (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_1__.intToHexColor)(item[params.path]?.color?.value ?? item[params.path]?.color);\n            } else if (params.path == 'enableLabel') {\n              params.value = item[params.path];\n            }\n          }\n        });\n        this.updateActiveToolsGroup(finalItem);\n      }\n    });\n  } // Function that show the setting dialog for drawing tool\n\n\n  showDrawToolDialog(drawing) {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_4__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogActions.DrawTools, `Edit ${drawing.name}`);\n\n    if (drawing) {\n      let title = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.formatCamelCase)(drawing.name || '');\n      const parameters = _Constant__WEBPACK_IMPORTED_MODULE_2__.defaultdrawToolsConfigs[drawing.id]().parameters;\n      parameters.map(p => p.value = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.clone)(p.defaultValue));\n      title = `${drawing.title} ${drawing.num || ''}`;\n      this.settingsDialog.title = title;\n      this.settingsDialog.dialogPortalNodeId = this.portalNodeIdChanged;\n      this.settingsDialog.items = drawing.parameters;\n      this.settingsDialog.formTitle = t.translate('Result');\n      this.settingsDialog.id = drawing.config.configId;\n      this.settingsDialog.formClassname = 'form--drawing-tool';\n      this.settingsDialog.setOpen(true);\n    }\n  }\n\n  drawingFinished() {\n    if (this.stateStore) {\n      this.crosshairStore.setCrosshairState(this.stateStore.crosshairState);\n    }\n  } // Callback to remove all drawings\n\n\n  clearAll() {\n    this.activeToolsGroup = [];\n    window.flutterChart?.drawingTool.clearDrawingTool(); //this.mainStore.state.saveDrawings();\n\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_4__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogActions.DrawTools, 'Clear All');\n  }\n\n  // Callback that runs when a drawing tool is selected\n  selectTool(id) {\n    this.menuStore.setOpen(false);\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_4__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogActions.DrawTools, `Add ${id}`); /// If found, remove the item with the given index\n\n    const finalItem = this.processDrawTool(id);\n    this.seletedDrawToolConfig = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.clone)(finalItem);\n    finalItem.lineStyle = {\n      color: finalItem.lineStyle\n    };\n\n    if (finalItem.fillStyle) {\n      finalItem.fillStyle = {\n        color: finalItem.fillStyle\n      };\n    }\n\n    delete finalItem.parameters;\n\n    if (finalItem) {\n      this.mainStore.chartAdapter.flutterChart?.drawingTool.addOrUpdateDrawing(JSON.stringify(finalItem));\n    }\n  } /// The common function (now only responsible for creating finalItem)\n\n\n  processDrawTool(id) {\n    const drawToolsConfig = (0,_Constant__WEBPACK_IMPORTED_MODULE_2__.getDrawTools)();\n    const props = drawToolsConfig[id];\n    const {\n      parameters,\n      config\n    } = (0,_Constant__WEBPACK_IMPORTED_MODULE_2__.getDefaultDrawingConfig)(id);\n    (0,_utils__WEBPACK_IMPORTED_MODULE_3__.transformStudiesforTheme)(parameters, this.mainStore.chartSetting.theme);\n    (0,_utils__WEBPACK_IMPORTED_MODULE_3__.transformStudiesforTheme)(config, this.mainStore.chartSetting.theme);\n    let finalItem = null;\n\n    if (props && parameters) {\n      parameters.map(p => p.value = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.clone)(p.defaultValue));\n      const item = {\n        config,\n        parameters,\n        bars: '0',\n        ...props\n      };\n      const params = item.parameters.reduce((acc, it) => {\n        const {\n          path,\n          paths,\n          value\n        } = it;\n\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLiteralObject)(value) && paths) {\n          const map = value;\n          const keys = Object.keys(map);\n          keys.forEach(key => {\n            lodash_set__WEBPACK_IMPORTED_MODULE_0___default()(acc, paths[key], map[key]);\n          });\n        } else if (path) {\n          lodash_set__WEBPACK_IMPORTED_MODULE_0___default()(acc, path, value);\n        }\n\n        return acc;\n      }, item.config || {});\n      const drawingData = {\n        id: item.id,\n        name: `dt_${id}`,\n        title: (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_1__.capitalize)(item.id),\n        ...this.transform(params)\n      };\n      const drawToolConfig = (0,_Constant__WEBPACK_IMPORTED_MODULE_2__.getDrawTools)();\n      finalItem = { ...drawingData,\n        ...drawToolConfig[id],\n        parameters,\n        ...{\n          index: this.activeToolsNo\n        }\n      };\n    }\n\n    return finalItem;\n  } /// This callback run when any of the drawing is dragged, used to save updated drawing config\n\n\n  onUpdate() {\n    const drawToolsItem = this.drawingToolsRepoArray();\n\n    if (drawToolsItem) {\n      this.onLoad(drawToolsItem);\n    }\n  } /// Used to add item in activeToolsGroup\n\n\n  updateActiveToolsGroup(finalItem) {\n    const activeTools = [...this.activeToolsGroup];\n    const groupIndex = activeTools.findIndex(item => item.id === finalItem.id);\n\n    if (groupIndex === -1) {\n      activeTools.push({\n        id: finalItem.id,\n        items: [finalItem]\n      });\n    } else {\n      const item = activeTools[groupIndex];\n      item.items.push({ ...finalItem,\n        ...{\n          num: item.items.length\n        }\n      });\n      activeTools[groupIndex] = item;\n    }\n\n    this.activeToolsGroup = activeTools;\n  } /// Callback that runs after the creation of the drawing tool in flutter charts\n\n\n  onCreation() {\n    if (this.seletedDrawToolConfig !== null) {\n      this.updateActiveToolsGroup(this.seletedDrawToolConfig);\n      const drawingToolsItem = this.drawingToolsRepoArray();\n\n      if (!drawingToolsItem) {\n        return;\n      }\n\n      this.activeToolsGroup.forEach(item => {\n        item.items.forEach(data => {\n          if (drawingToolsItem[data.index]) {\n            const config = drawingToolsItem[data.index];\n\n            if (config) {\n              if (this.seletedDrawToolConfig?.id && this.seletedDrawToolConfig.id === 'channel' && this.seletedDrawToolConfig.index === data.index) {\n                const edgePoints = config.edgePoints;\n\n                if (edgePoints && edgePoints.length === 2) {\n                  const incrementedConfig = drawingToolsItem[data.index + 1];\n\n                  if (incrementedConfig) {\n                    data.config = incrementedConfig;\n                  }\n                } else {\n                  data.config = config;\n                }\n              } else {\n                data.config = config;\n              }\n            }\n          }\n        });\n      }); /// for continuous, re-initializing it with updated index\n\n      if (this.seletedDrawToolConfig.id === 'continuous') {\n        const finalItem = this.processDrawTool(this.seletedDrawToolConfig.id);\n        this.seletedDrawToolConfig = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.clone)(finalItem); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        this.selectTool(this.seletedDrawToolConfig.id);\n      } else {\n        /// for other tools, making config to null\n        this.seletedDrawToolConfig = null;\n      }\n    }\n  } /// When any of the property of a drawing tool is changed (lineStyle,fillStyle)\n  /// OnUpdate runs after this function as well\n\n\n  onChanged(parameters, drawingIndex) {\n    let index;\n    this.mainStore.chartAdapter.flutterChart?.drawingTool.clearDrawingToolSelect();\n    const drawToolsItem = this.drawingToolsRepoArray();\n\n    if (!drawToolsItem) {\n      return;\n    }\n\n    if (!drawingIndex && drawingIndex !== 0) {\n      index = drawToolsItem.findIndex(item => item.configId === this.settingsDialog.id);\n    } else {\n      index = drawingIndex;\n    }\n\n    if (index === -1) return;\n    const selectedConfig = drawToolsItem[index];\n    parameters.forEach(item => {\n      if (!item.path) {\n        return;\n      }\n\n      if (item.type == 'colorpicker') {\n        selectedConfig[item.path].color = (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_1__.hexToInt)(item.value);\n      } else if (item.type == 'switch') {\n        selectedConfig[item.path] = item.value;\n      }\n    });\n    this.mainStore.chartAdapter.flutterChart?.drawingTool.editDrawing(JSON.stringify(selectedConfig), index);\n  } /// Callback that runs when drawingTool is Deleted\n\n\n  onDeleted(index) {\n    if (index !== undefined) {\n      this.mainStore.chartAdapter.flutterChart?.drawingTool.removeDrawingTool(index);\n      this.onUpdate();\n      this.mainStore.crosshair.removeDrawingToolToolTip(); /// Log the event\n\n      if (index) {\n        (0,_utils_ga__WEBPACK_IMPORTED_MODULE_4__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_4__.LogActions.DrawTools, `Remove ${index}`);\n      }\n    }\n  } /// When the settings are opened for a drawing tools\n\n\n  onSetting(index) {\n    if (index !== undefined) {\n      let targetItem;\n\n      for (const group of this.activeToolsGroup) {\n        const foundItem = group.items.find(item => item.index === index);\n\n        if (foundItem) {\n          targetItem = foundItem;\n        }\n      }\n\n      if (targetItem) {\n        this.showDrawToolDialog(targetItem);\n      }\n    }\n  } /// Update portal node\n\n\n  updatePortalNode(portalNodeId) {\n    this.portalNodeIdChanged = portalNodeId;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/FavoriteStore.ts\":\n/*!************************************!*\\\n  !*** ./src/store/FavoriteStore.ts ***!\n  \\************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1091779__) => {\n\n\"use strict\";\n__nested_webpack_require_1091779__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1091779__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1091779__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1091779__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1091779__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1091779__(/*! ../utils */ \"./src/utils/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nfunction loadFavorites() {\n  const local = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.createObjectFromLocalStorage)('cq-favorites');\n\n  if (!local) {\n    return;\n  }\n\n  const favorites = {};\n\n  for (const categoryName in local) {\n    const category = {};\n\n    for (const id of local[categoryName]) {\n      category[id] = true;\n    }\n\n    favorites[categoryName] = category;\n  }\n\n  return favorites;\n}\n\nclass FavoriteStore {\n  static get EVENT_FAVORITES_UPDATE() {\n    return 'EVENT_FAVORITES_UPDATE';\n  }\n\n  static getInstance() {\n    if (!FavoriteStore.instance) {\n      FavoriteStore.instance = new FavoriteStore();\n    }\n\n    return FavoriteStore.instance;\n  }\n\n  constructor() {\n    _defineProperty(this, \"favoritesMap\", loadFavorites() || {\n      indicators: {},\n      'chartTitle&Comparison': {}\n    });\n\n    _defineProperty(this, \"_emitter\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.makeObservable)(this, {\n      favoritesMap: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      isFavorite: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      toggleFavorite: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound\n    });\n    this._emitter = new (event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default())({\n      emitDelay: 0\n    });\n  }\n\n  onFavoriteUpdate(callback) {\n    this._emitter.on(FavoriteStore.EVENT_FAVORITES_UPDATE, callback);\n  }\n\n  offFavoriteUpdate(callback) {\n    this._emitter.off(FavoriteStore.EVENT_FAVORITES_UPDATE, callback);\n  }\n\n  isFavorite(category, id) {\n    return id in this.favoritesMap[category];\n  }\n\n  toggleFavorite(category, id) {\n    const cat = this.favoritesMap[category];\n\n    if (cat[id]) {\n      delete cat[id];\n    } else {\n      cat[id] = true;\n    }\n\n    this._emitter.emit(FavoriteStore.EVENT_FAVORITES_UPDATE, {\n      category,\n      id,\n      value: cat[id] || false\n    }); // this.favoritesMap = { ...this.favoritesMap }; // force observable to update\n\n\n    this.saveFavorites();\n  }\n\n  saveFavorites() {\n    const favorites = {};\n\n    for (const categoryName in this.favoritesMap) {\n      const category = [];\n\n      for (const id in this.favoritesMap[categoryName]) {\n        category.push(id);\n      }\n\n      favorites[categoryName] = category;\n    }\n\n    (0,_utils__WEBPACK_IMPORTED_MODULE_1__.saveToLocalStorage)('cq-favorites', favorites);\n  }\n\n}\n\n_defineProperty(FavoriteStore, \"instance\", void 0);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FavoriteStore);\n\n/***/ }),\n\n/***/ \"./src/store/HighestLowestStore.ts\":\n/*!*****************************************!*\\\n  !*** ./src/store/HighestLowestStore.ts ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1095521__) => {\n\n\"use strict\";\n__nested_webpack_require_1095521__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1095521__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var src_utils_date__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1095521__(/*! src/utils/date */ \"./src/utils/date.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1095521__(/*! ../utils */ \"./src/utils/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass HighestLowestStore {\n  get feed() {\n    return this.mainStore.chart.feed;\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get isHighestLowestMarkerEnabled() {\n    return this.mainStore.chartSetting.isHighestLowestMarkerEnabled;\n  }\n\n  get decimalPlaces() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"highestRef\", null);\n\n    _defineProperty(this, \"lowestRef\", null);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"highest\", null);\n\n    _defineProperty(this, \"lowest\", null);\n\n    _defineProperty(this, \"setHighestRef\", ref => {\n      this.highestRef = ref;\n\n      if (this.highestRef !== null && ref !== null) {\n        this.highestRef.value = ref.div.querySelector('.spot__value');\n      }\n    });\n\n    _defineProperty(this, \"setLowestRef\", ref => {\n      this.lowestRef = ref;\n\n      if (this.lowestRef != null && ref !== null) {\n        this.lowestRef.value = ref.div.querySelector('.spot__value');\n      }\n    });\n\n    _defineProperty(this, \"calculateHighestLowestByNewData\", () => {\n      if (!this.highestRef || !this.lowestRef) {\n        return;\n      }\n\n      const dataSegment = this.mainStore.chart.feed?.quotes;\n\n      if (dataSegment && dataSegment.length) {\n        this.highest = null;\n        this.lowest = null;\n        dataSegment.forEach(tick => {\n          if (!tick) {\n            return;\n          }\n\n          if (!this.highest || this.highest.Close <= tick.Close) {\n            this.highest = tick;\n          }\n\n          if (!this.lowest || this.lowest.Close >= tick.Close) {\n            this.lowest = tick;\n          }\n        });\n      }\n\n      if (!this.highest || !this.lowest || this.highest.Close === this.lowest.Close) {\n        this.highestRef.setPosition({\n          epoch: null,\n          price: null\n        });\n        this.lowestRef.setPosition({\n          epoch: null,\n          price: null\n        });\n        return;\n      }\n\n      if (this.highest) {\n        const price = this.highest.Close.toFixed(this.decimalPlaces);\n        this.highestRef.setPosition({\n          epoch: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUTCEpoch)((0,src_utils_date__WEBPACK_IMPORTED_MODULE_0__.strToDateTime)(this.highest.Date)),\n          price: +price\n        });\n        this.highestRef.value.textContent = price;\n      }\n\n      if (this.lowest) {\n        const price = this.lowest.Close.toFixed(this.decimalPlaces);\n        this.lowestRef.setPosition({\n          epoch: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getUTCEpoch)((0,src_utils_date__WEBPACK_IMPORTED_MODULE_0__.strToDateTime)(this.lowest.Date)),\n          price: +price\n        });\n        this.lowestRef.value.textContent = price;\n      }\n    });\n\n    this.mainStore = mainStore;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HighestLowestStore);\n\n/***/ }),\n\n/***/ \"./src/store/IndicatorPredictionDialogStore.ts\":\n/*!*****************************************************!*\\\n  !*** ./src/store/IndicatorPredictionDialogStore.ts ***!\n  \\*****************************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1099446__) => {\n\n\"use strict\";\n__nested_webpack_require_1099446__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1099446__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndicatorPredictionDialogStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1099446__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1099446__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass IndicatorPredictionDialogStore {\n  constructor(_ref) {\n    let {\n      mainStore\n    } = _ref;\n\n    _defineProperty(this, \"dialogPortalNodeId\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"scrollPanel\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_1__.makeObservable)(this, {\n      dialogPortalNodeId: mobx__WEBPACK_IMPORTED_MODULE_1__.observable,\n      open: mobx__WEBPACK_IMPORTED_MODULE_1__.computed,\n      setOpen: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      handleCancel: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound,\n      handleContinue: mobx__WEBPACK_IMPORTED_MODULE_1__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_0__[\"default\"](mainStore, {\n      route: 'indicator-setting'\n    });\n  }\n\n  get open() {\n    return this.menuStore.open;\n  }\n\n  setOpen(value) {\n    if (value && this.scrollPanel) {\n      this.scrollPanel.scrollTop = 0;\n    }\n\n    return this.menuStore.setOpen(value);\n  }\n\n  handleCancel() {\n    this.setOpen(false);\n  }\n\n  handleContinue() {\n    this.mainStore.timeperiod.setGranularity(0);\n    this.mainStore.studies.deletePredictionStudies();\n    setTimeout(() => {\n      this.handleCancel();\n    }, 100);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/LastDigitStatsStore.ts\":\n/*!******************************************!*\\\n  !*** ./src/store/LastDigitStatsStore.ts ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1101764__) => {\n\n\"use strict\";\n__nested_webpack_require_1101764__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1101764__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LastDigitStatsStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1101764__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass LastDigitStatsStore {\n  // api tick\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"bars\", []);\n\n    _defineProperty(this, \"lastTick\", null);\n\n    _defineProperty(this, \"count\", 1000);\n\n    _defineProperty(this, \"digits\", []);\n\n    _defineProperty(this, \"latestData\", []);\n\n    _defineProperty(this, \"lastSymbol\", '');\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      bars: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      lastTick: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      decimalPlaces: mobx__WEBPACK_IMPORTED_MODULE_0__.computed,\n      isVisible: mobx__WEBPACK_IMPORTED_MODULE_0__.computed,\n      marketDisplayName: mobx__WEBPACK_IMPORTED_MODULE_0__.computed,\n      shouldMinimiseLastDigits: mobx__WEBPACK_IMPORTED_MODULE_0__.computed,\n      updateLastDigitStats: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      onMasterDataUpdate: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      updateBars: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore; // since last digits stats is going to be rendered in deriv-app\n    // we always keep track of the last digit stats.\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.when)(() => !!this.context, () => {\n      this.lastSymbol = this.marketDisplayName; // TODO: call onMasterDataUpdate on symbol change.\n\n      this.mainStore.chart.feed?.onMasterDataUpdate(this.onMasterDataUpdate);\n      this.mainStore.chart.feed?.onMasterDataReinitialize(() => {\n        if (this.context && this.mainStore.chart.feed) {\n          this.mainStore.chart.feed.offMasterDataUpdate(this.onMasterDataUpdate);\n          this.mainStore.chart.feed.onMasterDataUpdate(this.onMasterDataUpdate);\n        }\n      });\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get api() {\n    return this.mainStore.chart.api;\n  }\n\n  get decimalPlaces() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places || 2;\n  }\n\n  get isVisible() {\n    return this.mainStore.state.showLastDigitStats;\n  }\n\n  get marketDisplayName() {\n    return this.mainStore.chart.currentActiveSymbol ? this.mainStore.chart.currentActiveSymbol.name : '';\n  }\n\n  get shouldMinimiseLastDigits() {\n    return this.mainStore.state.shouldMinimiseLastDigits;\n  }\n\n  async updateLastDigitStats(response) {\n    if (!this.context || !this.mainStore.chart.currentActiveSymbol) return;\n    this.digits = [];\n    this.bars = [];\n    this.latestData = [];\n\n    for (let i = 0; i < 10; i++) {\n      this.digits.push(0);\n      this.bars.push({\n        height: 0,\n        cName: ''\n      });\n    }\n\n    const tickHistory = response || (await this.api?.getTickHistory({\n      symbol: this.mainStore.chart.currentActiveSymbol.symbol,\n      count: this.count\n    }));\n    this.latestData = tickHistory?.history?.prices ? tickHistory.history.prices : [];\n    if (!this.context || !this.mainStore.chart.currentActiveSymbol) return;\n    this.latestData.forEach(price => {\n      const lastDigit = (+price).toFixed(this.decimalPlaces).slice(-1);\n      this.digits[+lastDigit]++;\n    });\n    this.updateBars();\n  }\n\n  onMasterDataUpdate(_ref) {\n    let {\n      Close,\n      tick\n    } = _ref;\n    if (!this.context || !this.mainStore.chart.currentActiveSymbol) return;\n    this.lastTick = tick;\n\n    if (this.marketDisplayName !== this.lastSymbol) {\n      this.lastSymbol = this.marketDisplayName; // Symbol has changed\n\n      this.updateLastDigitStats();\n    } else if (this.latestData.length) {\n      const firstDigit = (+this.latestData.shift()).toFixed(this.decimalPlaces).slice(-1);\n      const price = (+Close).toFixed(this.decimalPlaces);\n      const lastDigit = price.slice(-1);\n      this.latestData.push(+price);\n      this.digits[+lastDigit]++;\n      this.digits[+firstDigit]--;\n      this.updateBars();\n    }\n  }\n\n  updateBars() {\n    const min = Math.min(...this.digits);\n    const max = Math.max(...this.digits);\n    this.digits.forEach((digit, idx) => {\n      this.bars[idx].height = digit * 100 / this.count;\n      if (digit === min) this.bars[idx].cName = 'min';else if (digit === max) this.bars[idx].cName = 'max';else this.bars[idx].cName = '';\n    });\n    this.bars = this.bars.slice(0); // force array update\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ListStore.ts\":\n/*!********************************!*\\\n  !*** ./src/store/ListStore.ts ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1106850__) => {\n\n\"use strict\";\n__nested_webpack_require_1106850__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1106850__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ListStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1106850__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass ListStore {\n  constructor(_ref) {\n    let {\n      getContext,\n      getItems,\n      onItemSelected\n    } = _ref;\n\n    _defineProperty(this, \"getContext\", void 0);\n\n    _defineProperty(this, \"getItems\", void 0);\n\n    _defineProperty(this, \"onItemSelected\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      onItemClick: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.getContext = getContext;\n    this.getItems = getItems; // items : [{id: '', text: '', disabled?: false, active?: false}]\n\n    this.onItemSelected = onItemSelected;\n  }\n\n  onItemClick(_idx, item) {\n    if (this.onItemSelected) this.onItemSelected(item);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/LoaderStore.ts\":\n/*!**********************************!*\\\n  !*** ./src/store/LoaderStore.ts ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1108339__) => {\n\n\"use strict\";\n__nested_webpack_require_1108339__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1108339__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LoaderStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1108339__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* provided dependency */ var t = __nested_webpack_require_1108339__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass LoaderStore {\n  constructor() {\n    _defineProperty(this, \"isActive\", false);\n\n    _defineProperty(this, \"currentState\", false);\n\n    _defineProperty(this, \"states\", {});\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      isActive: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      currentState: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      setState: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      show: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      hide: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.states = {\n      'chart-engine': t.translate('Retrieving Chart Engine...'),\n      'market-symbol': t.translate('Retrieving Market Symbols...'),\n      'trading-time': t.translate('Retrieving Trading Times...'),\n      'chart-data': t.translate('Retrieving Chart Data...')\n    };\n  }\n\n  setState(state) {\n    if (!this.states[state]) {\n      console.error('Wrong state requested!');\n      return;\n    }\n\n    this.currentState = this.states[state];\n  }\n\n  show() {\n    this.isActive = true;\n  }\n\n  hide() {\n    this.isActive = false;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/MenuStore.ts\":\n/*!********************************!*\\\n  !*** ./src/store/MenuStore.ts ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1110362__) => {\n\n\"use strict\";\n__nested_webpack_require_1110362__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1110362__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MenuStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1110362__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1110362__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1110362__(/*! src/utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _DialogStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1110362__(/*! ./DialogStore */ \"./src/store/DialogStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass MenuStore {\n  constructor(mainStore, options) {\n    _defineProperty(this, \"dialogStore\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"dialogStatus\", false);\n\n    _defineProperty(this, \"route\", '');\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      dialogStatus: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      route: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      open: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      setOpen: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onTitleClick: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      handleDialogStatus: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      handleCloseDialog: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.dialogStore = new _DialogStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore);\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.reaction)(() => this.open, () => this.blurInput());\n\n    if (options && options.route) {\n      this.route = options.route;\n    }\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get routingStore() {\n    return this.mainStore.routing;\n  }\n\n  get open() {\n    return this.dialogStore.open;\n  }\n\n  setOpen(val) {\n    this.dialogStore.setOpen(val);\n    /**\n     *  Update the url hash by considering the dialog `route` and `open`\n     */\n\n    this.routingStore.updateRoute(this.route, val);\n  }\n\n  blurInput() {\n    setTimeout(this.handleDialogStatus, 300);\n  }\n\n  onTitleClick(e) {\n    if (e) {\n      e.stopPropagation();\n    }\n\n    this.setOpen(!this.open);\n  }\n\n  handleDialogStatus() {\n    if (this.route === 'chart-mode') {\n      const chart_type_name = src_Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes.find(type => type.id === this.mainStore.chartType.type.id)?.text ?? '';\n      this.mainStore.state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_0__.STATE.CHART_MODE_TOGGLE, {\n        is_open: this.open,\n        chart_type_name: this.mainStore.chartType.type.id === 'colored_bar' ? chart_type_name : chart_type_name.toLowerCase(),\n        time_interval_name: (0,src_utils__WEBPACK_IMPORTED_MODULE_1__.getTimeIntervalName)(this.mainStore.state.granularity, src_Constant__WEBPACK_IMPORTED_MODULE_0__.Intervals)\n      });\n    } else if (this.route === 'chart-title') {\n      this.mainStore.state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_0__.STATE.MARKETS_LIST_TOGGLE, {\n        is_open: this.open,\n        symbol: this.mainStore.chart.currentActiveSymbol?.symbol\n      });\n    } else if (this.route === 'indicators') {\n      this.mainStore.state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_0__.STATE.INDICATORS_MODAL_TOGGLE, {\n        is_open: this.open\n      });\n    }\n\n    this.dialogStatus = this.open;\n  }\n\n  handleCloseDialog() {\n    this.dialogStatus = false;\n    setTimeout(() => this.setOpen(false), 300);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/NavigationWidgetStore.ts\":\n/*!********************************************!*\\\n  !*** ./src/store/NavigationWidgetStore.ts ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1114524__) => {\n\n\"use strict\";\n__nested_webpack_require_1114524__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1114524__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ NavigationWidgetStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1114524__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass NavigationWidgetStore {\n  get chart() {\n    return this.mainStore.chart;\n  }\n\n  get stateStore() {\n    return this.mainStore.state;\n  }\n\n  get crosshairStore() {\n    return this.mainStore.crosshair;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"mouse_in\", false);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      mouse_in: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      enableScale: mobx__WEBPACK_IMPORTED_MODULE_0__.computed,\n      onMouseEnter: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      onMouseLeave: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      onCrosshairChange: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.reaction)(() => this.crosshairStore.state, this.onCrosshairChange);\n  }\n\n  get enableScale() {\n    return this.stateStore.startEpoch;\n  }\n\n  onMouseEnter() {\n    this.mouse_in = true;\n    this.crosshairStore.updateVisibility(false);\n  }\n\n  onMouseLeave() {\n    this.mouse_in = false;\n    this.crosshairStore.updateVisibility(true);\n  }\n\n  onCrosshairChange() {\n    if (this.crosshairStore.state === 2 && this.mouse_in) {\n      this.crosshairStore.updateVisibility(false);\n    }\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/Notifier.ts\":\n/*!*******************************!*\\\n  !*** ./src/store/Notifier.ts ***!\n  \\*******************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1116630__) => {\n\n\"use strict\";\n__nested_webpack_require_1116630__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1116630__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* provided dependency */ var t = __nested_webpack_require_1116630__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Notifier {\n  constructor() {\n    _defineProperty(this, \"onMessage\", void 0);\n  }\n\n  static get CATEGORY_ACTIVE_SYMBOL() {\n    return 'activesymbol';\n  }\n\n  /*\n   * a Notification object has the following structure:\n   * {\n   *     text, // displayed messages\n   *     type, // message type; choose from `info`, `warning`, `success`, `error`. Defaults to `warning`\n   *     category, // choose from `activesymbol`\n   * }\n   */\n  notify(notification) {\n    if (this.onMessage) {\n      this.onMessage({\n        type: 'warning',\n        ...notification\n      });\n    }\n  }\n\n  notifyMarketOpen(symbol) {\n    this.notify({\n      text: t.translate('[symbol] market is now opened.', {\n        symbol\n      }),\n      type: 'info',\n      category: Notifier.CATEGORY_ACTIVE_SYMBOL\n    });\n  }\n\n  notifyMarketClose(symbol) {\n    this.notify({\n      text: t.translate('[symbol] market is presently closed.', {\n        symbol\n      }),\n      category: Notifier.CATEGORY_ACTIVE_SYMBOL\n    });\n  }\n\n  notifyDelayedMarket(symbol, delay) {\n    this.notify({\n      text: t.translate('[symbol] feed is delayed by [delay] minutes', {\n        symbol,\n        delay\n      }),\n      category: Notifier.CATEGORY_ACTIVE_SYMBOL\n    });\n  }\n\n  notifyFeedUnavailable(symbol) {\n    this.notify({\n      text: t.translate('Streaming for [symbol] is not available due to license restrictions', {\n        symbol\n      }),\n      type: 'error',\n      category: Notifier.CATEGORY_ACTIVE_SYMBOL\n    });\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Notifier);\n\n/***/ }),\n\n/***/ \"./src/store/PaginationLoaderStore.ts\":\n/*!********************************************!*\\\n  !*** ./src/store/PaginationLoaderStore.ts ***!\n  \\********************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1119014__) => {\n\n\"use strict\";\n__nested_webpack_require_1119014__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1119014__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1119014__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nclass PaginationLoaderStore {\n  get feed() {\n    return this.mainStore.chart.feed;\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"ref\", null);\n\n    _defineProperty(this, \"isOnPagination\", false);\n\n    _defineProperty(this, \"paginationEndEpoch\", null);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      this.feed?.onStartPagination(this.setOnPagination);\n      this.feed?.onPagination(this.setOnPagination);\n    });\n\n    _defineProperty(this, \"setRef\", ref => {\n      this.ref = ref;\n\n      if (this.ref !== null) {\n        this.ref.setPosition({\n          epoch: this.paginationEndEpoch,\n          price: 0\n        });\n      }\n    });\n\n    _defineProperty(this, \"setOnPagination\", _ref => {\n      let {\n        end\n      } = _ref;\n      this.isOnPagination = !this.isOnPagination;\n      this.paginationEndEpoch = this.isOnPagination ? end : null;\n\n      if (this.ref) {\n        this.ref.setPosition({\n          epoch: this.paginationEndEpoch,\n          price: 0\n        });\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      isOnPagination: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      updateOnPagination: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      setOnPagination: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.when)(() => !!this.context, this.onContextReady);\n  }\n\n  updateOnPagination(state) {\n    this.isOnPagination = state;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PaginationLoaderStore);\n\n/***/ }),\n\n/***/ \"./src/store/PriceLineStore.ts\":\n/*!*************************************!*\\\n  !*** ./src/store/PriceLineStore.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1121537__) => {\n\n\"use strict\";\n__nested_webpack_require_1121537__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1121537__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PriceLineStore)\n/* harmony export */ });\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1121537__(/*! event-emitter-es6 */ \"./node_modules/event-emitter-es6/index.js\");\n/* harmony import */ var event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1121537__.n(event_emitter_es6__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1121537__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1121537__(/*! ../utils */ \"./src/utils/index.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nconst LINE_OFFSET_HEIGHT = 4;\nconst LINE_OFFSET_HEIGHT_HALF = LINE_OFFSET_HEIGHT >> 1;\nclass PriceLineStore {\n  set zIndex(value) {\n    if (this._line && value) {\n      this._line.style.zIndex = value.toString();\n    }\n  }\n\n  get pip() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"__top\", 0);\n\n    _defineProperty(this, \"_emitter\", void 0);\n\n    _defineProperty(this, \"_line\", void 0);\n\n    _defineProperty(this, \"_priceConstrainer\", 0);\n\n    _defineProperty(this, \"_startDragPrice\", '0');\n\n    _defineProperty(this, \"className\", void 0);\n\n    _defineProperty(this, \"hideBarrierLine\", void 0);\n\n    _defineProperty(this, \"hideOffscreenLine\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"opacityOnOverlap\", 0);\n\n    _defineProperty(this, \"showOffscreenArrows\", false);\n\n    _defineProperty(this, \"_relative\", false);\n\n    _defineProperty(this, \"draggable\", true);\n\n    _defineProperty(this, \"isDragging\", false);\n\n    _defineProperty(this, \"visible\", true);\n\n    _defineProperty(this, \"_price\", '0');\n\n    _defineProperty(this, \"_dragPrice\", '0');\n\n    _defineProperty(this, \"offScreen\", false);\n\n    _defineProperty(this, \"title\", void 0);\n\n    _defineProperty(this, \"isOverlapping\", false);\n\n    _defineProperty(this, \"isOverlappingWithPriceLine\", false);\n\n    _defineProperty(this, \"offScreenDirection\", null);\n\n    _defineProperty(this, \"disposeDrawReaction\", void 0);\n\n    _defineProperty(this, \"onChartLoaded\", () => {\n      this.disposeDrawReaction = (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(() => [this.mainStore.chartAdapter.epochBounds, this.mainStore.chartAdapter.quoteBounds], () => {\n        if (!this.isDragging) {\n          this._draw();\n        }\n      });\n    });\n\n    _defineProperty(this, \"init\", () => {\n      const exitIfNotisDraggable = (e, callback) => {\n        if (this.visible && this.draggable) {\n          callback.call(this, e);\n        }\n      };\n\n      const subholder = document.querySelector('.ciq-chart-area');\n\n      if (this._line && subholder) {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.makeElementDraggable)(this._line, subholder, {\n          onDragStart: e => exitIfNotisDraggable(e, this._startDrag),\n          onDrag: e => exitIfNotisDraggable(e, e => this._dragLine(e, subholder)),\n          onDragReleased: e => exitIfNotisDraggable(e, this._endDrag)\n        });\n      }\n    });\n\n    _defineProperty(this, \"_startDrag\", () => {\n      this.isDragging = true;\n      this.mainStore.chart.isBarrierDragging = true;\n      this.dragPrice = this.price;\n      this._startDragPrice = this._price;\n    });\n\n    _defineProperty(this, \"_dragLine\", (e, zone) => {\n      if (!this._line) {\n        return;\n      }\n\n      const {\n        top\n      } = zone.getBoundingClientRect();\n      const newTop = e.pageY - top;\n      const newCenter = newTop && newTop + LINE_OFFSET_HEIGHT_HALF;\n\n      let newPrice = newCenter && this._priceFromLocation(newCenter);\n\n      if (typeof this._priceConstrainer === 'function') {\n        newPrice = this._priceConstrainer(newPrice);\n      }\n\n      if (this.relative) {\n        newPrice -= this.mainStore.chart.currentClose;\n      }\n\n      this.dragPrice = `${newPrice}`;\n    });\n\n    _defineProperty(this, \"_endDrag\", () => {\n      this.isDragging = false;\n      this.mainStore.chart.isBarrierDragging = false;\n\n      if (Number(this._startDragPrice).toFixed(this.pip) !== Number(this.dragPrice).toFixed(this.pip)) {\n        this.price = this.dragPrice;\n\n        this._emitter.emit(PriceLineStore.EVENT_DRAG_RELEASED, this._price);\n      }\n    });\n\n    _defineProperty(this, \"_calculateTop\", () => {\n      if (this.mainStore.chart.currentCloseQuote() === null || !this.mainStore.chartAdapter.isChartLoaded) {\n        return;\n      }\n\n      let top = this._locationFromPrice(+this.realPrice); // @ts-ignore\n\n\n      const height = window.flutterChartElement?.clientHeight || 0; // keep line on chart even if price is off viewable area:\n\n      if (top < 0) {\n        // this.uncentered = true;\n        if (top < -LINE_OFFSET_HEIGHT_HALF) {\n          this.offScreenDirection = _utils__WEBPACK_IMPORTED_MODULE_1__.DIRECTIONS.UP;\n        }\n\n        top = 0;\n      } else if (top + LINE_OFFSET_HEIGHT > height) {\n        // this.uncentered = true;\n        if (top + LINE_OFFSET_HEIGHT - height > LINE_OFFSET_HEIGHT_HALF) {\n          this.offScreenDirection = _utils__WEBPACK_IMPORTED_MODULE_1__.DIRECTIONS.DOWN;\n        }\n\n        top = height - LINE_OFFSET_HEIGHT;\n      } else {\n        // this.uncentered = false;\n        this.offScreenDirection = null;\n      }\n\n      this.offScreen = !!this.offScreenDirection;\n\n      if (top + 30 > height) {\n        top = height - 30;\n      } else if (top < 10) {\n        top = 10;\n      }\n\n      if (this.offScreenDirection && this.showOffscreenArrows) {\n        top += this.offScreenDirection === _utils__WEBPACK_IMPORTED_MODULE_1__.DIRECTIONS.UP ? +_utils__WEBPACK_IMPORTED_MODULE_1__.ARROW_HEIGHT : -_utils__WEBPACK_IMPORTED_MODULE_1__.ARROW_HEIGHT;\n      }\n\n      if (this.opacityOnOverlap) {\n        this.isOverlapping = this.overlapCheck(top);\n      }\n\n      this.isOverlappingWithPriceLine = this._distanceFromCurrentPrice() < 25;\n      return Math.round(top) | 0;\n    });\n\n    _defineProperty(this, \"_draw\", () => {\n      if (this.visible && this._line) {\n        this.top = this._calculateTop();\n      }\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.makeObservable)(this, {\n      _dragPrice: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      _price: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      draggable: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      isDragging: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      isOverlapping: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      isOverlappingWithPriceLine: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      offScreen: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      offScreenDirection: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      title: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      visible: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      overlappedBarrierWidth: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      pip: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      priceDisplay: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      _calculateTop: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      _dragLine: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      _endDrag: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      _startDrag: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      setDragLine: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound\n    });\n    this.mainStore = mainStore;\n    this._emitter = new (event_emitter_es6__WEBPACK_IMPORTED_MODULE_0___default())({\n      emitDelay: 0\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.when)(() => this.mainStore.chartAdapter.isChartLoaded, this.onChartLoaded);\n  }\n\n  destructor() {\n    this.disposeDrawReaction?.();\n  }\n\n  static get EVENT_PRICE_CHANGED() {\n    return 'EVENT_PRICE_CHANGED';\n  }\n\n  static get EVENT_DRAG_RELEASED() {\n    return 'EVENT_DRAG_RELEASED';\n  }\n\n  get priceDisplay() {\n    let display = this.isDragging ? Number(this.dragPrice).toFixed(this.pip) : this._price;\n\n    if (this.relative && +this._price > 0 && display[0] !== '+') {\n      display = `+${display}`;\n    }\n\n    return display;\n  }\n\n  get price() {\n    return this._price;\n  }\n\n  set price(value) {\n    if (value !== this._price && !this.isDragging) {\n      this._price = value;\n\n      this._draw();\n\n      this._emitter.emit(PriceLineStore.EVENT_PRICE_CHANGED, this._price);\n    }\n  }\n\n  get dragPrice() {\n    return this._dragPrice;\n  }\n\n  set dragPrice(value) {\n    if (value != this._dragPrice) {\n      this._dragPrice = value;\n\n      this._draw();\n\n      this._emitter.emit(PriceLineStore.EVENT_PRICE_CHANGED, this._dragPrice);\n    }\n  }\n\n  get relative() {\n    return this._relative;\n  }\n\n  set relative(value) {\n    if (this._relative === value) {\n      return;\n    }\n\n    this._relative = value; // convert between relative and absolute\n\n    const currentQuote = this.mainStore.chart.currentCloseQuote();\n    let currentPrice = currentQuote ? currentQuote.Close : 0;\n\n    if (this._relative) {\n      currentPrice = -currentPrice;\n    }\n\n    this.price = (+this._price + currentPrice).toString();\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  set priceConstrainer(value) {\n    this._priceConstrainer = value;\n  }\n\n  get realPrice() {\n    const price = this.isDragging ? this.dragPrice : this.price;\n    const real_price = this.relative ? this.mainStore.chart.currentCloseQuote()?.Close + Number(price) : Number(price);\n    return real_price.toString();\n  }\n\n  get priceLineWidth() {\n    return window.flutterChart?.app.getCurrentTickWidth() || 60;\n  }\n\n  get overlappedBarrierWidth() {\n    return 16;\n  }\n\n  setDragLine(el) {\n    this._line = el;\n\n    if (this._line) {\n      this._draw();\n    }\n  }\n\n  _locationFromPrice(p) {\n    return this.mainStore.chartAdapter.getYFromQuote(p);\n  }\n\n  _priceFromLocation(y) {\n    return this.mainStore.chartAdapter.getQuoteFromY(y);\n  }\n\n  _distanceFromCurrentPrice() {\n    return Math.abs(this._locationFromPrice(+this.realPrice) - this._locationFromPrice(+this.realPrice - (this.isDragging ? +this._dragPrice : +this._price)));\n  }\n\n  // Manually update the top to improve performance.\n  // We don't pay for react reconciler and mobx observable tracking in animation frames.\n  set top(v) {\n    this.__top = v;\n\n    if (this._line) {\n      this._line.style.transform = `translateY(${this.top - 13}px)`;\n    }\n  }\n\n  get top() {\n    return this.__top;\n  }\n\n  onPriceChanged(callback) {\n    this._emitter.on(PriceLineStore.EVENT_PRICE_CHANGED, callback);\n  }\n\n  onDragReleased(callback) {\n    this._emitter.on(PriceLineStore.EVENT_DRAG_RELEASED, callback);\n  }\n\n  overlapCheck(top) {\n    const {\n      _barriers\n    } = this.mainStore.chart;\n\n    const filtered_barriers = _barriers.filter(a => +a._high_barrier.price !== 0);\n\n    const current_barrier_idx = filtered_barriers.findIndex(b => b._high_barrier === this);\n\n    for (let i = 0; i < filtered_barriers.length; i++) {\n      if (i === current_barrier_idx) {\n        continue;\n      }\n\n      const barrier = filtered_barriers[i];\n      const diffTop = barrier._high_barrier.top && Math.abs(barrier._high_barrier.top - top);\n\n      if (diffTop && diffTop < 25) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  get isMobile() {\n    return this.mainStore.chart.isMobile;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/RoutingStore.ts\":\n/*!***********************************!*\\\n  !*** ./src/store/RoutingStore.ts ***!\n  \\***********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1133421__) => {\n\n\"use strict\";\n__nested_webpack_require_1133421__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1133421__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RoutingStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1133421__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nconst allDialogs = [];\nclass RoutingStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      handleRouting: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      updateRoute: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      registerDialog: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      closeAll: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore;\n  }\n\n  handleRouting() {\n    window.addEventListener('hashchange', () => {\n      const hash = window.history.state.urlPath.replace('#', '');\n\n      if (hash === '') {\n        this.closeAll();\n      }\n    }, false);\n  }\n\n  updateRoute(route, dialogStatus) {\n    const enableRouting = this.mainStore.chart.enableRouting;\n\n    if (enableRouting && dialogStatus && route) {\n      window.history.replaceState({\n        urlPath: '#'\n      }, '', '#');\n      window.history.pushState({\n        urlPath: `#${route}`\n      }, '', `#${route}`);\n    } else if (enableRouting && !dialogStatus && route) {\n      window.history.replaceState({\n        urlPath: '#'\n      }, '', '#');\n    }\n  }\n\n  registerDialog(dialogStore) {\n    allDialogs.push(dialogStore);\n  }\n\n  closeAll() {\n    allDialogs.forEach(m => m.setOpen(false));\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ScrollStore.ts\":\n/*!**********************************!*\\\n  !*** ./src/store/ScrollStore.ts ***!\n  \\**********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1135547__) => {\n\n\"use strict\";\n__nested_webpack_require_1135547__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1135547__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ScrollStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1135547__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass ScrollStore {\n  constructor() {\n    _defineProperty(this, \"isHover\", false);\n\n    _defineProperty(this, \"scrollPanel\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      isHover: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      scrollPanel: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      handleMouseOver: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      handleMouseOut: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      setScrollPanel: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.reaction)(() => this.scrollPanel, () => {\n      if (!this.scrollPanel) {\n        return;\n      }\n\n      this.scrollPanel.addEventListener('mouseover', this.handleMouseOver);\n      this.scrollPanel.addEventListener('mouseout', this.handleMouseOut);\n    });\n  }\n\n  handleMouseOver() {\n    if (!this.isHover) this.isHover = true;\n  }\n\n  handleMouseOut() {\n    if (this.isHover) this.isHover = false;\n  }\n\n  setScrollPanel(element) {\n    if (!this.scrollPanel) this.scrollPanel = element;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/SettingsDialogStore.ts\":\n/*!******************************************!*\\\n  !*** ./src/store/SettingsDialogStore.ts ***!\n  \\******************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1137467__) => {\n\n\"use strict\";\n__nested_webpack_require_1137467__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1137467__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SettingsDialogStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1137467__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var src_utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1137467__(/*! src/utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1137467__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\nclass SettingsDialogStore {\n  // [{id: '', title: '', value: ''}]\n  // 'settings' | 'description'\n  get showTabs() {\n    return !!this.description;\n  }\n\n  constructor(_ref) {\n    let {\n      mainStore,\n      onChanged,\n      onDeleted\n    } = _ref;\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"onChanged\", void 0);\n\n    _defineProperty(this, \"onDeleted\", void 0);\n\n    _defineProperty(this, \"items\", []);\n\n    _defineProperty(this, \"title\", '');\n\n    _defineProperty(this, \"formTitle\", '');\n\n    _defineProperty(this, \"formClassname\", '');\n\n    _defineProperty(this, \"description\", '');\n\n    _defineProperty(this, \"activeTab\", 'settings');\n\n    _defineProperty(this, \"scrollPanel\", void 0);\n\n    _defineProperty(this, \"dialogPortalNodeId\", void 0);\n\n    _defineProperty(this, \"freezeScroll\", false);\n\n    _defineProperty(this, \"id\", '');\n\n    _defineProperty(this, \"flutter_chart_id\", '');\n\n    _defineProperty(this, \"checkDropdownOpen\", () => {\n      let freezeScroll = false;\n\n      if (!this.scrollPanel) {\n        return;\n      }\n\n      const dropdowns = this.scrollPanel.querySelectorAll('.sc-color-picker, .sc-dropdown');\n      dropdowns.forEach(dropdown => {\n        if (dropdown.className.indexOf('active') !== -1) freezeScroll = true;\n      });\n      this.setFreezeScroll(freezeScroll);\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.makeObservable)(this, {\n      items: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      title: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      formTitle: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      formClassname: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      description: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      activeTab: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      showTabs: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      scrollPanel: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      dialogPortalNodeId: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      freezeScroll: mobx__WEBPACK_IMPORTED_MODULE_2__.observable,\n      open: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      setFreezeScroll: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      setOpen: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      onResetClick: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      onItemDelete: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      onItemChange: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound,\n      itemGroups: mobx__WEBPACK_IMPORTED_MODULE_2__.computed,\n      setScrollPanel: mobx__WEBPACK_IMPORTED_MODULE_2__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.onChanged = onChanged;\n    this.onDeleted = onDeleted;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](mainStore, {\n      route: 'indicator-setting'\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(() => this.open, () => {\n      if (!this.scrollPanel || !this.open) {\n        return;\n      }\n\n      const dropdowns = this.scrollPanel.querySelectorAll('.sc-color-picker, .sc-dropdown');\n      this.scrollPanel.addEventListener('click', () => {\n        this.setFreezeScroll(false);\n      });\n      dropdowns.forEach(dropdown => {\n        dropdown.addEventListener('click', () => setTimeout(() => this.checkDropdownOpen(), 50));\n      });\n      this.setFreezeScroll(false);\n    }, {\n      delay: 300\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get theme() {\n    return this.mainStore.chartSetting.theme;\n  }\n\n  get open() {\n    return this.menuStore.open;\n  }\n\n  setFreezeScroll(status) {\n    this.freezeScroll = status;\n  }\n\n  setOpen(value) {\n    if (value && this.scrollPanel) {\n      this.scrollPanel.scrollTop = 0;\n    }\n\n    return this.menuStore.setOpen(value);\n  }\n\n  onResetClick() {\n    const items = this.items.map(item => ({ ...item,\n      value: (0,src_utils__WEBPACK_IMPORTED_MODULE_0__.clone)(item.defaultValue)\n    }));\n    this.items = items;\n    this.onChanged(items);\n  }\n\n  onItemDelete() {\n    this.menuStore.setOpen(false);\n    if (this.onDeleted) this.onDeleted(this.id);\n  }\n\n  onItemChange(item, newValue) {\n    if (item && item.value !== newValue) {\n      item.value = newValue;\n      this.items = this.items.slice(0); // force array update\n\n      this.onChanged(this.items);\n    }\n  }\n\n  get itemGroups() {\n    const restGroup = [];\n    const groups = [];\n    groups.push({\n      key: '%k',\n      title: '%K',\n      fields: []\n    });\n    groups.push({\n      key: '%d',\n      title: '%D',\n      fields: []\n    });\n    groups.push({\n      key: 'over_bought',\n      title: 'Over Bought',\n      fields: []\n    });\n    groups.push({\n      key: 'over_sold',\n      title: 'OverSold',\n      fields: []\n    });\n    groups.push({\n      key: 'show_zones',\n      title: 'Show Zones',\n      fields: []\n    });\n\n    for (const index in this.items) {\n      const item = this.items[index];\n      const {\n        group_key,\n        title\n      } = item;\n      const group = groups.find(x => group_key === x.key);\n\n      if (group) {\n        item.subtitle = title.replace(group.key, '').trim();\n        group.fields.push(item);\n      } else {\n        restGroup.push(item);\n      }\n    }\n\n    groups.unshift({\n      key: 'others',\n      title: this.formTitle || this.title,\n      fields: restGroup\n    });\n    return groups;\n  }\n\n  setScrollPanel(element) {\n    this.scrollPanel = element;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ShadeStore.ts\":\n/*!*********************************!*\\\n  !*** ./src/store/ShadeStore.ts ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1143987__) => {\n\n\"use strict\";\n__nested_webpack_require_1143987__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1143987__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShadeStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1143987__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass ShadeStore {\n  constructor(className) {\n    _defineProperty(this, \"_div\", null);\n\n    _defineProperty(this, \"className\", '');\n\n    _defineProperty(this, \"visible\", false);\n\n    _defineProperty(this, \"setPosition\", _ref => {\n      let {\n        top,\n        bottom,\n        right\n      } = _ref;\n\n      if (this._div) {\n        let pos = null;\n\n        if (bottom && top) {\n          // between shade\n          const y = (bottom + top) / 2 + 60; // manually scale from default 120px (_barrier.scss)\n\n          const scale = (bottom - top) / 120.0;\n          pos = `translate(${-right}px, ${y}px) scale(1, ${scale})`;\n        } else if (bottom) {\n          // above shade\n          pos = `translate(${-right}px, ${bottom}px)`;\n        } else if (top) {\n          // below shade\n          pos = `translate(${-right}px, ${top + 120}px)`;\n        }\n\n        this._div.style.transform = pos;\n      }\n    });\n\n    _defineProperty(this, \"setShadeRef\", ref => {\n      this._div = ref;\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      className: mobx__WEBPACK_IMPORTED_MODULE_0__.observable,\n      visible: mobx__WEBPACK_IMPORTED_MODULE_0__.observable\n    });\n    this.className = className;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ShareStore.ts\":\n/*!*********************************!*\\\n  !*** ./src/store/ShareStore.ts ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1146019__) => {\n\n\"use strict\";\n__nested_webpack_require_1146019__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1146019__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ShareStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1146019__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1146019__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1146019__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1146019__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass ShareStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"screenshotArea\", void 0);\n\n    _defineProperty(this, \"isLoadingPNG\", false);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      this.screenshotArea = (this.context?.topNode).querySelector('.ciq-chart');\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      timeUnit: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      timeperiodDisplay: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      marketDisplayName: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      decimalPlaces: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      isLoadingPNG: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      downloadPNG: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      _onCanvasReady: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      downloadCSV: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'download'\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.when)(() => !!this.context, this.onContextReady);\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get timeUnit() {\n    return this.mainStore.timeperiod.timeUnit;\n  }\n\n  get timeperiodDisplay() {\n    return this.mainStore.timeperiod.display;\n  }\n\n  get marketDisplayName() {\n    return this.mainStore.chart.currentActiveSymbol?.name;\n  }\n\n  get decimalPlaces() {\n    return this.mainStore.chart.currentActiveSymbol?.decimal_places;\n  }\n\n  createNewTab() {\n    // Create a new tab for older iOS browsers that don't support HTML5 download attribute\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i) ? window.open() : null;\n  }\n\n  downloadPNG() {\n    this.isLoadingPNG = true;\n    const newTab = this.createNewTab();\n    __nested_webpack_require_1146019__.e(/*! import() | html2canvas */ \"html2canvas\").then(__nested_webpack_require_1146019__.t.bind(__nested_webpack_require_1146019__, /*! html2canvas */ \"./node_modules/html2canvas/dist/html2canvas.js\", 23)).then(html2canvas => {\n      // since react rerenders is not immediate, we\n      // immediately append/unappend class name before taking screenshot.\n      this.screenshotArea?.classList.add('ciq-chart--screenshot'); // There is no html2canvas version able to render our svgs on a screenshot (tried 0.5.0-beta4 as well),\n      // the below workaround lets us temporarily replace svgs with imgs on canvas before taking a screenshot:\n\n      const nodesToRecover = [];\n      const nodesToRemove = [];\n      const svgIcons = this.screenshotArea?.querySelectorAll('svg') || [];\n      svgIcons.forEach(svg => {\n        const parentNode = svg.parentNode;\n        const canvas = document.createElement('canvas');\n        canvas.width = Number(getComputedStyle(svg).width.match(/[0-9]+/));\n        canvas.height = Number(getComputedStyle(svg).height.match(/[0-9]+/));\n        const context = canvas.getContext('2d');\n        const rgbColor = getComputedStyle(svg).fill;\n\n        if (rgbColor) {\n          const hexColorDigitPart = rgbColor.split(',').map(item => Number(item.replace(/\\D+/g, '')).toString(16).padStart(2, '0')).join('');\n\n          if (context && hexColorDigitPart > '333333') {\n            context.fillStyle = getComputedStyle(svg).fill;\n            context.fillRect(0, 0, canvas.width, canvas.height);\n            context.globalCompositeOperation = 'destination-in';\n          }\n        }\n\n        const image = new Image();\n        image.src = svg.querySelector('use')?.getAttribute?.('xlink:href') || '';\n\n        image.onload = () => {\n          if (context) {\n            context.drawImage(image, 0, 0);\n          }\n\n          if (!_utils__WEBPACK_IMPORTED_MODULE_0__.is_browser.Firefox() && !_utils__WEBPACK_IMPORTED_MODULE_0__.is_browser.Safari()) {\n            nodesToRecover.push({\n              parent: parentNode,\n              child: svg\n            });\n            parentNode?.removeChild(svg);\n            nodesToRemove.push({\n              parent: parentNode,\n              child: canvas\n            });\n            parentNode?.appendChild(canvas);\n          }\n        };\n      });\n      setTimeout(() => {\n        html2canvas.default(this.screenshotArea).then(canvas => {\n          this._onCanvasReady(canvas, newTab); // replacing the added imgs on canvas back with svgs after downloading a screenshot:\n\n\n          if (!_utils__WEBPACK_IMPORTED_MODULE_0__.is_browser.Firefox() && !_utils__WEBPACK_IMPORTED_MODULE_0__.is_browser.Safari()) {\n            nodesToRemove.forEach(pair => {\n              if (pair?.parent?.contains(pair.child) && pair.child instanceof HTMLCanvasElement) {\n                pair.parent?.removeChild?.(pair.child);\n              }\n            });\n            nodesToRecover.forEach(pair => {\n              pair.parent?.appendChild(pair.child);\n            });\n          }\n        });\n      }, 100);\n    });\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Download, 'Download PNG');\n  }\n\n  _onCanvasReady(canvas, newTab) {\n    const content = canvas.toDataURL('image/png');\n    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.downloadFileInBrowser)(`${new Date().toUTCString()}.png`, content, 'image/png;', newTab);\n    this.isLoadingPNG = false;\n    this.screenshotArea?.classList.remove('ciq-chart--screenshot');\n  }\n\n  downloadCSV() {\n    const isTick = this.timeUnit === 'tick';\n    const header = `Date,Time,${isTick ? this.marketDisplayName : 'Open,High,Low,Close'}`;\n    const lines = [header];\n    const quotes = this.mainStore.chart.feed?.quotes || [];\n    const totalItemCount = quotes.length;\n    const allowableItems = totalItemCount <= 100 ? quotes : quotes.slice(totalItemCount - 100, totalItemCount);\n    allowableItems.forEach(_ref => {\n      let {\n        DT,\n        Open,\n        High,\n        Low,\n        Close\n      } = _ref;\n      if (!DT) return;\n      const year = DT.getFullYear();\n      const month = DT.getMonth() + 1; // months from 1-12\n\n      const day = DT.getDate();\n      const hours = DT.getHours();\n      const minutes = DT.getMinutes();\n      const seconds = DT.getSeconds();\n      const formattedSeconds = seconds > 9 ? `:${seconds}` : `:0${seconds}`;\n      const date = `${year}-${month > 9 ? month : `0${month}`}-${day > 9 ? day : `0${day}`}`;\n      const time = `${hours > 9 ? hours : `0${hours}`}:${minutes > 9 ? minutes : `0${minutes}`}${isTick ? formattedSeconds : ''}`;\n\n      if (isTick && Close) {\n        lines.push(`${date},${time},${Close}`);\n      }\n\n      if (!isTick && Open && High && Low && Close) {\n        lines.push([date, time, Open.toFixed(this.decimalPlaces), High.toFixed(this.decimalPlaces), Low.toFixed(this.decimalPlaces), Close.toFixed(this.decimalPlaces)].join(','));\n      }\n    });\n    (0,_utils__WEBPACK_IMPORTED_MODULE_0__.downloadFileInBrowser)(`${this.marketDisplayName} (${this.timeperiodDisplay}).csv`, lines.join('\\n'), 'text/csv;charset=utf-8;', this.createNewTab());\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Download, 'Download CSV');\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/StudyLegendStore.ts\":\n/*!***************************************!*\\\n  !*** ./src/store/StudyLegendStore.ts ***!\n  \\***************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1154584__) => {\n\n\"use strict\";\n__nested_webpack_require_1154584__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1154584__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StudyLegendStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_1154584__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1154584__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1154584__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1154584__(/*! lodash.set */ \"./node_modules/lodash.set/index.js\");\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__nested_webpack_require_1154584__.n(lodash_set__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var src_components_ui_utils__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1154584__(/*! src/components/ui/utils */ \"./src/components/ui/utils.ts\");\n/* harmony import */ var _components_Icons__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1154584__(/*! ../components/Icons */ \"./src/components/Icons.tsx\");\n/* harmony import */ var _Constant__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1154584__(/*! ../Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1154584__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1154584__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1154584__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\n/* harmony import */ var _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_1154584__(/*! ./SettingsDialogStore */ \"./src/store/SettingsDialogStore.ts\");\n/* provided dependency */ var t = __nested_webpack_require_1154584__(/*! ./src/Translation.ts */ \"./src/Translation.ts\")[\"t\"];\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\nclass StudyLegendStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    _defineProperty(this, \"searchInput\", void 0);\n\n    _defineProperty(this, \"settingsDialog\", void 0);\n\n    _defineProperty(this, \"selectedTab\", 1);\n\n    _defineProperty(this, \"filterText\", '');\n\n    _defineProperty(this, \"activeItems\", []);\n\n    _defineProperty(this, \"infoItem\", null);\n\n    _defineProperty(this, \"portalNodeIdChanged\", '');\n\n    _defineProperty(this, \"currentHoverIndex\", null);\n\n    _defineProperty(this, \"previousHoverIndex\", null);\n\n    _defineProperty(this, \"searchInputClassName\", void 0);\n\n    _defineProperty(this, \"onContextReady\", () => {\n      // to remove studies if user has already more than 5\n      this.renderLegend();\n    });\n\n    _defineProperty(this, \"transform\", value => {\n      if (typeof value === 'string' && (value.startsWith('#') || value.toLowerCase().startsWith('0x'))) {\n        return (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_2__.hexToInt)(value);\n      }\n\n      if ((0,_utils__WEBPACK_IMPORTED_MODULE_5__.isLiteralObject)(value)) {\n        const map = value;\n        Object.keys(value).forEach(key => {\n          map[key] = this.transform(map[key]);\n        });\n      } else if (Array.isArray(value)) {\n        for (let i = 0; i < value.length; i++) {\n          value[i] = this.transform(value[i]);\n        }\n      }\n\n      return value;\n    });\n\n    _defineProperty(this, \"addOrUpdateIndicator\", (activeItem, index) => {\n      const params = activeItem.parameters.reduce((acc, item) => {\n        const {\n          path,\n          paths,\n          value\n        } = item;\n\n        if ((0,_utils__WEBPACK_IMPORTED_MODULE_5__.isLiteralObject)(value) && paths) {\n          const map = value;\n          const keys = Object.keys(map);\n          keys.forEach(key => {\n            lodash_set__WEBPACK_IMPORTED_MODULE_1___default()(acc, paths[key], map[key]);\n          });\n        } else if (path) {\n          lodash_set__WEBPACK_IMPORTED_MODULE_1___default()(acc, path, value);\n        }\n\n        return acc;\n      }, activeItem.config || {});\n      const config = {\n        id: activeItem.id,\n        name: activeItem.flutter_chart_id,\n        title: (activeItem.short_name_and_index + (activeItem.bars ? ` (${activeItem.bars})` : '')).toUpperCase(),\n        ...this.transform(params)\n      };\n      this.mainStore.chartAdapter.flutterChart?.app.addOrUpdateIndicator(JSON.stringify(config), index);\n    });\n\n    _defineProperty(this, \"renderLegend\", () => {\n      if (!this.context) {\n        return;\n      } // Temporary prevent user from adding more than 5 indicators\n      // All traces can be removed after new design for studies\n\n\n      this.updateStyle();\n    });\n\n    _defineProperty(this, \"getIndicatorProps\", indicator => {\n      return (0,_utils__WEBPACK_IMPORTED_MODULE_5__.flatMap)((0,_Constant__WEBPACK_IMPORTED_MODULE_4__.getIndicatorsTree)(), collection => collection.items).find(item => item?.flutter_chart_id === indicator);\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_9__.makeObservable)(this, {\n      selectedTab: mobx__WEBPACK_IMPORTED_MODULE_9__.observable,\n      filterText: mobx__WEBPACK_IMPORTED_MODULE_9__.observable,\n      activeItems: mobx__WEBPACK_IMPORTED_MODULE_9__.observable,\n      infoItem: mobx__WEBPACK_IMPORTED_MODULE_9__.observable,\n      portalNodeIdChanged: mobx__WEBPACK_IMPORTED_MODULE_9__.observable,\n      onSelectItem: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      updateStyle: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      editStudy: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      editStudyByIndex: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      deleteStudy: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      deleteStudyById: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      updateStudy: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      deletePredictionStudies: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      deleteAllStudies: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      onSelectTab: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      setFilterText: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      onInfoItem: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      updatePortalNode: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      restoreStudies: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      getItemById: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      setIndicator: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      highlightIndicator: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound,\n      clearHoverItem: mobx__WEBPACK_IMPORTED_MODULE_9__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_9__.when)(() => !!this.context, this.onContextReady);\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_7__[\"default\"](mainStore, {\n      route: 'indicators'\n    });\n    this.settingsDialog = new _SettingsDialogStore__WEBPACK_IMPORTED_MODULE_8__[\"default\"]({\n      mainStore,\n      onDeleted: this.deleteStudyById,\n      favoritesId: 'indicators',\n      onChanged: items => this.updateStudy(items)\n    });\n    this.searchInput = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createRef();\n    (0,mobx__WEBPACK_IMPORTED_MODULE_9__.reaction)(() => this.menuStore.open, () => {\n      if (!this.menuStore.open) {\n        this.setFilterText('');\n      }\n\n      setTimeout(() => {\n        if (this.searchInput && this.searchInput.current) this.searchInput.current.focus();\n      }, 400);\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get items() {\n    return [...(0,_Constant__WEBPACK_IMPORTED_MODULE_4__.getIndicatorsTree)()].map(indicator => {\n      // the only icon which is different on light/dark is trend\n      if (indicator.name === 'trend') {\n        indicator.icon = this.mainStore.chartSetting.theme === 'light' ? _components_Icons__WEBPACK_IMPORTED_MODULE_3__.IndicatorCatTrendLightIcon : _components_Icons__WEBPACK_IMPORTED_MODULE_3__.IndicatorCatTrendDarkIcon;\n      }\n\n      return indicator;\n    });\n  }\n\n  get searchedItems() {\n    return [...(0,_Constant__WEBPACK_IMPORTED_MODULE_4__.getIndicatorsTree)()].map(category => {\n      category.foundItems = category.items.filter(item => item.name.toLowerCase().indexOf(this.filterText.toLowerCase().trim()) !== -1);\n      return category;\n    }).filter(category => category.foundItems?.length);\n  }\n\n  get hasPredictionIndicator() {\n    return (this.activeItems || []).filter(item => item.isPrediction).length > 0;\n  }\n\n  get maxAllowedItem() {\n    return this.mainStore.chart.isMobile ? 2 : 5;\n  }\n\n  onSelectItem(indicatorName) {\n    this.onInfoItem(null);\n    if (this.activeItems.length >= this.maxAllowedItem) return;\n    this.changeStudyPanelTitle();\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_6__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogActions.Indicator, `Add ${indicatorName}`);\n    const props = this.getIndicatorProps(indicatorName);\n    const {\n      parameters,\n      config\n    } = (0,_Constant__WEBPACK_IMPORTED_MODULE_4__.getDefaultIndicatorConfig)(indicatorName);\n\n    if (props && parameters) {\n      parameters.map(p => p.value = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.clone)(p.defaultValue));\n      const nameObj = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.prepareIndicatorName)(this.settingsDialog.flutter_chart_id, parameters);\n      const lastGroupItem = this.findLastActiveItem(props.flutter_chart_id);\n      const group_length = lastGroupItem ? lastGroupItem.group_length + 1 : 0;\n      const item = { ...props,\n        group_length,\n        short_name_and_index: props.short_name + (group_length ? ` ${group_length}` : ''),\n        id: (0,src_components_ui_utils__WEBPACK_IMPORTED_MODULE_2__.getUniqueId)(),\n        config,\n        parameters,\n        bars: nameObj.bars\n      };\n      (0,_utils__WEBPACK_IMPORTED_MODULE_5__.transformStudiesforTheme)(parameters, this.mainStore.chartSetting.theme);\n      this.addOrUpdateIndicator(item);\n      this.activeItems.push(item);\n      this.mainStore.bottomWidgetsContainer.updateChartHeight();\n      this.mainStore.state.saveLayout();\n    }\n  }\n\n  async restoreStudies(activeItems) {\n    this.deleteAllStudies();\n    activeItems.forEach((activeItem, index) => {\n      const props = this.getIndicatorProps(activeItem.flutter_chart_id);\n\n      if (props) {\n        this.addOrUpdateIndicator(activeItem);\n        Object.assign(activeItem, props);\n      } else {\n        activeItems.splice(index, 1);\n      }\n    });\n    this.activeItems = activeItems;\n    this.mainStore.bottomWidgetsContainer.updateChartHeight();\n  }\n\n  updateTheme() {\n    this.activeItems.forEach((activeItem, index) => {\n      (0,_utils__WEBPACK_IMPORTED_MODULE_5__.transformStudiesforTheme)(activeItem.parameters, this.mainStore.chartSetting.theme);\n      this.addOrUpdateIndicator(activeItem, index);\n    });\n    this.mainStore.state.saveLayout();\n  } // Temporary prevent user from adding more than 5 indicators\n  // TODO All traces can be removed after new design for studies\n\n\n  updateStyle() {\n    const should_minimise_last_digit = this.mainStore.studies.activeItems.length > 2;\n    this.mainStore.state.setShouldMinimiseLastDigit(should_minimise_last_digit);\n  }\n\n  updateProps(_ref) {\n    let {\n      searchInputClassName\n    } = _ref;\n    this.searchInputClassName = searchInputClassName;\n  }\n\n  editStudyByIndex(index) {\n    const activeItem = this.activeItems[index];\n    if (activeItem) this.editStudy(activeItem);\n  }\n\n  editStudy(study) {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_6__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogActions.Indicator, `Edit ${study.flutter_chart_id}`);\n    this.settingsDialog.id = study.id;\n    this.settingsDialog.flutter_chart_id = study.flutter_chart_id;\n    this.settingsDialog.items = study.parameters;\n    this.settingsDialog.title = study.name;\n    this.settingsDialog.formTitle = t.translate('Result');\n    this.settingsDialog.formClassname = `form--${study.id.toLowerCase().replace(/ /g, '-')}`; // TODO:\n    // const description = StudyInfo[study.sd.type];\n    // this.settingsDialog.description = description || t.translate(\"No description yet\");\n\n    this.settingsDialog.description = '';\n    this.settingsDialog.dialogPortalNodeId = this.portalNodeIdChanged;\n    this.settingsDialog.setOpen(true);\n  }\n\n  deleteStudyById(id) {\n    const index = this.activeItems.findIndex(item => item.id === id);\n    this.mainStore.chartAdapter.flutterChart?.indicators.removeIndicator(index);\n    this.deleteStudy(index);\n  }\n\n  deleteStudy(index) {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_6__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_6__.LogActions.Indicator, `Remove ${index}`);\n    this.activeItems.splice(index, 1);\n    this.mainStore.bottomWidgetsContainer.updateChartHeight();\n    this.mainStore.crosshair.removeIndicatorToolTip();\n    this.renderLegend();\n    this.mainStore.state.saveLayout();\n  }\n\n  updateStudy(parameters) {\n    this.changeStudyPanelTitle();\n    const props = this.getIndicatorProps(this.settingsDialog.flutter_chart_id);\n    const {\n      config\n    } = (0,_Constant__WEBPACK_IMPORTED_MODULE_4__.getDefaultIndicatorConfig)(this.settingsDialog.flutter_chart_id) || {};\n\n    if (props && parameters) {\n      const nameObj = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.prepareIndicatorName)(this.settingsDialog.flutter_chart_id, parameters);\n      const index = this.activeItems.findIndex(item => item.id === this.settingsDialog.id);\n      const currentActiveItem = this.activeItems[index];\n      const item = { ...props,\n        short_name_and_index: props.short_name + (currentActiveItem.group_length ? ` ${currentActiveItem.group_length}` : ''),\n        group_length: currentActiveItem.group_length,\n        id: this.settingsDialog.id,\n        bars: nameObj.bars,\n        parameters,\n        config\n      };\n      this.activeItems[index] = item;\n      this.addOrUpdateIndicator(item, index);\n      this.mainStore.state.saveLayout();\n    }\n  }\n\n  changeStudyPanelTitle() {\n    // Remove numbers from the end of indicator titles in mobile\n    if (this.mainStore.chart.isMobile) {\n      this.mainStore.state.saveLayout();\n    }\n  }\n  /**\n   * Gets called continually in the draw animation loop.\n   * Be careful not to render unnecessarily. */\n\n\n  deletePredictionStudies() {\n    let filteredItem = this.activeItems.filter(item => item.isPrediction == true);\n    filteredItem.forEach(item => {\n      this.mainStore.state.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_4__.STATE.INDICATOR_DELETED);\n      this.deleteStudyById(item.id);\n    });\n    this.mainStore.state.saveLayout();\n  }\n\n  deleteAllStudies() {\n    this.activeItems = [];\n    window.flutterChart?.indicators.clearIndicators();\n    this.mainStore.state.saveLayout();\n    this.mainStore.state.stateChange(_Constant__WEBPACK_IMPORTED_MODULE_4__.STATE.INDICATORS_CLEAR_ALL);\n  }\n\n  onSelectTab(tabIndex) {\n    this.setFilterText('');\n    this.selectedTab = tabIndex;\n    this.onInfoItem(null);\n  }\n\n  setFilterText(filterText) {\n    this.selectedTab = filterText !== '' ? 0 : 1;\n    this.filterText = filterText;\n    this.mainStore.state.debouncedStateChange(_Constant__WEBPACK_IMPORTED_MODULE_4__.STATE.INDICATOR_SEARCH, {\n      search_string: filterText\n    });\n  }\n\n  onInfoItem(study) {\n    this.infoItem = study ? { ...study,\n      disabledAddBtn: study.isPrediction && this.mainStore.timeperiod.isTick\n    } : study;\n  }\n\n  setIndicator(item, index) {\n    this.addOrUpdateIndicator(item, index);\n  }\n\n  highlightIndicator(hoverIndex, dx, dy) {\n    this.currentHoverIndex = hoverIndex;\n\n    if (this.previousHoverIndex === this.currentHoverIndex) {\n      return;\n    }\n\n    if (typeof this.previousHoverIndex === 'number') {\n      this.clearHoverItem(this.previousHoverIndex);\n    }\n\n    if (hoverIndex != null) {\n      const item = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.clone)(this.activeItems[hoverIndex]);\n\n      if (item && item.config) {\n        this.mainStore.crosshair.renderIndicatorToolTip(`${item.name} ${item.bars || ''}`, dx, dy);\n\n        for (const key in item.config) {\n          if (key.includes('Style')) {\n            item.config[key].thickness = 2;\n\n            if (key === 'scatterStyle') {\n              item.config[key].radius = 2.5;\n            }\n          }\n\n          if (key.includes('Styles')) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            item.config[key].forEach(element => {\n              element.thickness = 2;\n            });\n          }\n        }\n\n        this.setIndicator(item, hoverIndex);\n      }\n    }\n\n    this.previousHoverIndex = hoverIndex;\n  }\n\n  clearHoverItem(index) {\n    const item = this.activeItems[index];\n    this.mainStore.crosshair.removeIndicatorToolTip();\n\n    if (item) {\n      this.setIndicator(item, index);\n    }\n  }\n\n  updatePortalNode(portalNodeId) {\n    this.portalNodeIdChanged = portalNodeId;\n  }\n\n  findLastActiveItem(flutter_chart_id) {\n    for (let i = this.activeItems.length - 1; i >= 0; i--) {\n      if (this.activeItems[i].flutter_chart_id === flutter_chart_id) {\n        return this.activeItems[i];\n      }\n    }\n  }\n\n  getItemById(id) {\n    return this.activeItems.find(item => item.id === id);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/TimeperiodStore.ts\":\n/*!**************************************!*\\\n  !*** ./src/store/TimeperiodStore.ts ***!\n  \\**************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1172640__) => {\n\n\"use strict\";\n__nested_webpack_require_1172640__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1172640__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TimeperiodStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1172640__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var src_Constant__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1172640__(/*! src/Constant */ \"./src/Constant.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1172640__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1172640__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _utils_ServerTime__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1172640__(/*! ../utils/ServerTime */ \"./src/utils/ServerTime.ts\");\n/* harmony import */ var _IndicatorPredictionDialogStore__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1172640__(/*! ./IndicatorPredictionDialogStore */ \"./src/store/IndicatorPredictionDialogStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\nconst UnitMap = {\n  tick: 'T',\n  minute: 'M',\n  hour: 'H',\n  day: 'D'\n};\nconst TimeMap = {\n  minute: 60,\n  hour: 3600,\n  day: 86400\n};\nclass TimeperiodStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"_serverTime\", void 0);\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"portalNodeIdChanged\", void 0);\n\n    _defineProperty(this, \"predictionIndicator\", void 0);\n\n    _defineProperty(this, \"onGranularityChange\", () => null);\n\n    _defineProperty(this, \"remain\", null);\n\n    _defineProperty(this, \"onDataInitialized\", () => {\n      this.updateCountdown();\n      (0,mobx__WEBPACK_IMPORTED_MODULE_5__.reaction)(() => [this.timeUnit, this.mainStore.chartSetting.countdown, this.mainStore.chartType.type, this.loader.currentState, this.isSymbolOpen], this.updateCountdown.bind(this));\n      (0,mobx__WEBPACK_IMPORTED_MODULE_5__.reaction)(() => this.mainStore.state.granularity, granularity => this.onGranularityChange(granularity));\n    });\n\n    _defineProperty(this, \"countdownInterval\", void 0);\n\n    _defineProperty(this, \"remainLabelY\", () => {\n      const currentClose = this.mainStore.chart.currentClose;\n      if (!currentClose) return;\n      const y = this.mainStore.chartAdapter.getYFromQuote(currentClose);\n      return y;\n    });\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.makeObservable)(this, {\n      changeGranularity: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      portalNodeIdChanged: mobx__WEBPACK_IMPORTED_MODULE_5__.observable,\n      setGranularity: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      updateProps: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound,\n      updatePortalNode: mobx__WEBPACK_IMPORTED_MODULE_5__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.predictionIndicator = new _IndicatorPredictionDialogStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"]({\n      mainStore\n    });\n    this._serverTime = _utils_ServerTime__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getInstance();\n    (0,mobx__WEBPACK_IMPORTED_MODULE_5__.when)(() => this.mainStore.chartAdapter.isFeedLoaded, this.onDataInitialized);\n  }\n\n  get loader() {\n    return this.mainStore.loader;\n  }\n\n  get isTick() {\n    return this.timeUnit === 'tick';\n  }\n\n  get isSymbolOpen() {\n    return this.mainStore.chartTitle.isSymbolOpen;\n  }\n\n  get timeUnit() {\n    return (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getTimeUnit)(this.mainStore.chart.granularity);\n  }\n\n  get display() {\n    if (this.mainStore.chart.granularity === undefined) {\n      return '';\n    }\n\n    return `${this.mainStore.chart.granularity === 0 ? 1 : this.mainStore.chart.granularity / TimeMap[this.timeUnit]} ${UnitMap[this.timeUnit]}`;\n  }\n\n  clearCountdown() {\n    if (this.countdownInterval) {\n      clearInterval(this.countdownInterval);\n    }\n\n    this.countdownInterval = undefined;\n  }\n\n  updateCountdown() {\n    this.remain = null;\n    this.clearCountdown();\n\n    const setRemain = () => {\n      if (this.isTick || !this.isSymbolOpen) {\n        this.clearCountdown();\n        return;\n      }\n\n      const dataSegment = this.mainStore.chart?.feed?.quotes;\n\n      if (dataSegment && dataSegment.length) {\n        const dataSegmentClose = [...dataSegment].filter(item => item && item.Close);\n\n        if (dataSegmentClose && dataSegmentClose.length) {\n          const currentQuote = dataSegmentClose[dataSegmentClose.length - 1];\n\n          if (currentQuote.DT) {\n            const now = this._serverTime.getLocalDate().getTime();\n\n            const diff = now - currentQuote.DT.getTime();\n            const granularity = this.mainStore.chart.granularity;\n            const chartInterval = (granularity || 1) * 1000;\n            const coefficient = diff > chartInterval ? Math.floor(diff / chartInterval) + 1 : 1;\n            this.remain = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.displayMilliseconds)(coefficient * chartInterval - diff);\n            this.mainStore.chartAdapter.flutterChart?.config.setRemainingTime(this.remain || '');\n          }\n        }\n      }\n    };\n\n    const hasCountdown = this.mainStore.chartSetting.countdown && !this.isTick;\n\n    if (hasCountdown) {\n      if (!this.countdownInterval) {\n        this.countdownInterval = setInterval(setRemain, 1000);\n        setRemain();\n      }\n    }\n  }\n\n  setGranularity(granularity) {\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_2__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_2__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_2__.LogActions.Interval, granularity?.toString());\n\n    if (this.onGranularityChange) {\n      this.onGranularityChange(granularity);\n    } else {\n      this.mainStore.chart.changeSymbol(undefined, granularity);\n    }\n  }\n\n  updateProps(onChange) {\n    if (this.mainStore.state.granularity !== undefined) {\n      this.onGranularityChange = onChange;\n    }\n  }\n\n  changeGranularity(interval) {\n    if (interval) {\n      const chart_type_name = src_Constant__WEBPACK_IMPORTED_MODULE_0__.ChartTypes.find(type => type.id === this.mainStore.chartType.type.id)?.text ?? '';\n      this.mainStore.state.stateChange(src_Constant__WEBPACK_IMPORTED_MODULE_0__.STATE.CHART_INTERVAL_CHANGE, {\n        time_interval_name: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getTimeIntervalName)(interval, src_Constant__WEBPACK_IMPORTED_MODULE_0__.Intervals),\n        chart_type_name: this.mainStore.chartType.type.id === 'colored_bar' ? chart_type_name : chart_type_name.toLowerCase()\n      });\n    }\n\n    if (interval === 0 && this.mainStore.studies.hasPredictionIndicator) {\n      this.predictionIndicator.dialogPortalNodeId = this.portalNodeIdChanged;\n      this.predictionIndicator.setOpen(true);\n    } else {\n      this.onGranularityChange(interval);\n    }\n  }\n\n  updatePortalNode(portalNodeId) {\n    this.portalNodeIdChanged = portalNodeId;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ToolbarWidgetStore.ts\":\n/*!*****************************************!*\\\n  !*** ./src/store/ToolbarWidgetStore.ts ***!\n  \\*****************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1179975__) => {\n\n\"use strict\";\n__nested_webpack_require_1179975__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1179975__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ToolbarWidgetStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1179975__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nclass ToolbarWidgetStore {\n  get crosshairStore() {\n    return this.mainStore.crosshair;\n  }\n\n  get chartStore() {\n    return this.mainStore.chart;\n  }\n\n  constructor(mainStore) {\n    _defineProperty(this, \"mainStore\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.makeObservable)(this, {\n      onMouseEnter: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound,\n      onMouseLeave: mobx__WEBPACK_IMPORTED_MODULE_0__.action.bound\n    });\n    this.mainStore = mainStore;\n    (0,mobx__WEBPACK_IMPORTED_MODULE_0__.reaction)(() => [this.mainStore.chartMode.menuStore.open, this.mainStore.drawTools.menuStore.open, this.mainStore.studies.menuStore.open, this.mainStore.share.menuStore.open, this.mainStore.view.menuStore.open], () => {\n      // Check if all floating toolbar component dialog close\n      if (!this.mainStore.chartMode.menuStore.open && !this.mainStore.drawTools.menuStore.open && !this.mainStore.studies.menuStore.open && !this.mainStore.share.menuStore.open && !this.mainStore.view.menuStore.open) {\n        this.onMouseLeave();\n      }\n    });\n  }\n\n  onMouseEnter() {\n    this.crosshairStore.updateVisibility(false);\n  }\n\n  onMouseLeave() {\n    this.crosshairStore.updateVisibility(true);\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/ViewStore.ts\":\n/*!********************************!*\\\n  !*** ./src/store/ViewStore.ts ***!\n  \\********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1181993__) => {\n\n\"use strict\";\n__nested_webpack_require_1181993__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1181993__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ViewStore)\n/* harmony export */ });\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1181993__(/*! mobx */ \"./node_modules/mobx/dist/mobx.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1181993__(/*! ../utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1181993__(/*! ../utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _MenuStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1181993__(/*! ./MenuStore */ \"./src/store/MenuStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass ViewStore {\n  constructor(mainStore) {\n    _defineProperty(this, \"templateName\", '');\n\n    _defineProperty(this, \"currentRoute\", 'main');\n\n    _defineProperty(this, \"isInputActive\", false);\n\n    _defineProperty(this, \"views\", (0,_utils__WEBPACK_IMPORTED_MODULE_0__.createObjectFromLocalStorage)('chart-views') || []);\n\n    _defineProperty(this, \"routes\", {\n      add: () => this.saveViews(),\n      main: () => this.updateRoute('add'),\n      cancel: () => this.onCancel(),\n      overwrite: () => this.overwrite()\n    });\n\n    _defineProperty(this, \"mainStore\", void 0);\n\n    _defineProperty(this, \"menuStore\", void 0);\n\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.makeObservable)(this, {\n      templateName: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      currentRoute: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      isInputActive: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      routes: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      views: mobx__WEBPACK_IMPORTED_MODULE_3__.observable,\n      sortedItems: mobx__WEBPACK_IMPORTED_MODULE_3__.computed,\n      onChange: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onSubmit: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onCancel: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      updateRoute: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      saveViews: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      overwrite: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      remove: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      removeAll: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      applyLayout: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onToggleNew: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      inputRef: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onFocus: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound,\n      onBlur: mobx__WEBPACK_IMPORTED_MODULE_3__.action.bound\n    });\n    this.mainStore = mainStore;\n    this.menuStore = new _MenuStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](mainStore, {\n      route: 'templates'\n    });\n    (0,mobx__WEBPACK_IMPORTED_MODULE_3__.reaction)(() => this.menuStore.dialogStore.open, () => {\n      if (this.views.length === 0) {\n        this.updateRoute('new');\n      } else {\n        this.updateRoute('main');\n      }\n\n      if (this.menuStore.dialogStore.open) {\n        this.templateName = '';\n      }\n    });\n  }\n\n  get context() {\n    return this.mainStore.chart.context;\n  }\n\n  get loader() {\n    return this.mainStore.loader;\n  }\n\n  get sortedItems() {\n    return [...this.views].sort((a, b) => a.name.toLowerCase() < b.name.toLowerCase() ? -1 : 1);\n  }\n\n  updateLocalStorage() {\n    localStorage.setItem('chart-views', JSON.stringify(this.views));\n  }\n\n  onChange(e) {\n    if (this.currentRoute === 'overwrite') {\n      return;\n    }\n\n    this.templateName = e.target.value;\n  }\n\n  onSubmit(e) {\n    if (e.keyCode === 13) {\n      this.saveViews();\n      (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Template, 'Save Template');\n    }\n  }\n\n  onCancel() {\n    this.templateName = '';\n    this.updateRoute('main');\n  }\n\n  updateRoute(name) {\n    this.currentRoute = name;\n  }\n\n  getLayout() {\n    return {\n      chartType: this.mainStore.state.chartType,\n      granularity: this.mainStore.state.granularity,\n      timeUnit: this.mainStore.state.timeperiodStore.timeUnit,\n      studyItems: this.mainStore.studies.activeItems,\n      crosshair: this.mainStore.crosshair.state,\n      drawTools: this.mainStore.drawTools.activeToolsGroup,\n      msPerPx: this.mainStore.chartAdapter.msPerPx\n    };\n  }\n\n  saveViews() {\n    if (this.views.some(x => x.name.toLowerCase().trim() === this.templateName.toLowerCase().trim())) {\n      this.updateRoute('overwrite');\n    } else if (this.templateName.trim().length > 0) {\n      this.updateRoute('main');\n      this.views.push({\n        name: this.templateName.trim(),\n        layout: (0,_utils__WEBPACK_IMPORTED_MODULE_0__.clone)(this.getLayout())\n      });\n      this.updateLocalStorage();\n      this.templateName = '';\n    }\n  }\n\n  overwrite() {\n    const layout = (0,_utils__WEBPACK_IMPORTED_MODULE_0__.clone)(this.getLayout());\n    const templateIndex = this.views.findIndex(x => x.name.toLowerCase() === this.templateName.toLowerCase());\n    this.views[templateIndex].layout = layout;\n    this.views[templateIndex].name = this.templateName.trim();\n    this.updateLocalStorage();\n    this.updateRoute('main');\n    this.templateName = '';\n  }\n\n  remove(idx, e) {\n    this.views = this.sortedItems.filter((_x, index) => idx !== index);\n    e.nativeEvent.is_item_removed = true;\n    this.updateLocalStorage();\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Template, 'Remove Template');\n  }\n\n  removeAll() {\n    this.views = [];\n    this.updateLocalStorage();\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Template, 'Remove All Templates');\n    this.updateRoute('new');\n  }\n\n  applyLayout(idx, e) {\n    if (e.nativeEvent.is_item_removed) {\n      return;\n    }\n\n    const {\n      layout\n    } = this.sortedItems[idx];\n    this.restoreLayout((0,_utils__WEBPACK_IMPORTED_MODULE_0__.clone)(layout));\n    (0,_utils_ga__WEBPACK_IMPORTED_MODULE_1__.logEvent)(_utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogCategories.ChartControl, _utils_ga__WEBPACK_IMPORTED_MODULE_1__.LogActions.Template, 'Load Template');\n  }\n\n  async restoreLayout(layout) {\n    const finishImportLayout = () => {\n      if (this.loader) {\n        this.loader.hide();\n        this.mainStore.paginationLoader.updateOnPagination(false);\n      }\n\n      this.mainStore.state.setChartIsReady(true);\n\n      if (layout.granularity !== undefined) {\n        this.mainStore.timeperiod.setGranularity(layout.granularity);\n      }\n    };\n\n    if (this.loader) {\n      this.loader.show();\n    }\n\n    this.mainStore.chartAdapter.msPerPx = layout.msPerPx;\n    this.mainStore.state.setChartIsReady(false);\n\n    if (layout.chartType !== undefined) {\n      this.mainStore.chartType.setChartType(layout.chartType);\n    }\n\n    this.menuStore.setOpen(false);\n    await (0,mobx__WEBPACK_IMPORTED_MODULE_3__.when)(() => this.mainStore.chartAdapter.isChartLoaded);\n    this.mainStore.studies.restoreStudies(layout.studyItems || []);\n\n    if (typeof layout.crosshair === 'number') {\n      this.mainStore.crosshair.setCrosshairState(layout.crosshair);\n    }\n\n    finishImportLayout();\n  }\n\n  onToggleNew() {\n    this.updateRoute('main');\n  }\n\n  inputRef(ref) {\n    if (ref) {\n      ref.focus();\n      this.isInputActive = true;\n    }\n  }\n\n  onFocus() {\n    this.isInputActive = true;\n  }\n\n  onBlur() {\n    this.isInputActive = false;\n  }\n\n}\n\n/***/ }),\n\n/***/ \"./src/store/index.ts\":\n/*!****************************!*\\\n  !*** ./src/store/index.ts ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1190135__) => {\n\n\"use strict\";\n__nested_webpack_require_1190135__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1190135__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MainStore),\n/* harmony export */   \"getContext\": () => (/* binding */ getContext),\n/* harmony export */   \"initContext\": () => (/* binding */ initContext),\n/* harmony export */   \"useStores\": () => (/* binding */ useStores)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1190135__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__nested_webpack_require_1190135__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _BottomWidgetsContainerStore__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1190135__(/*! ./BottomWidgetsContainerStore */ \"./src/store/BottomWidgetsContainerStore.ts\");\n/* harmony import */ var _TimeperiodStore__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1190135__(/*! ./TimeperiodStore */ \"./src/store/TimeperiodStore.ts\");\n/* harmony import */ var _ChartStore__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1190135__(/*! ./ChartStore */ \"./src/store/ChartStore.ts\");\n/* harmony import */ var _ChartTypeStore__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1190135__(/*! ./ChartTypeStore */ \"./src/store/ChartTypeStore.ts\");\n/* harmony import */ var _ChartModeStore__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1190135__(/*! ./ChartModeStore */ \"./src/store/ChartModeStore.ts\");\n/* harmony import */ var _StudyLegendStore__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1190135__(/*! ./StudyLegendStore */ \"./src/store/StudyLegendStore.ts\");\n/* harmony import */ var _DrawToolsStore__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1190135__(/*! ./DrawToolsStore */ \"./src/store/DrawToolsStore.ts\");\n/* harmony import */ var _ChartTitleStore__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_1190135__(/*! ./ChartTitleStore */ \"./src/store/ChartTitleStore.ts\");\n/* harmony import */ var _ViewStore__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_1190135__(/*! ./ViewStore */ \"./src/store/ViewStore.ts\");\n/* harmony import */ var _CrosshairStore__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_1190135__(/*! ./CrosshairStore */ \"./src/store/CrosshairStore.ts\");\n/* harmony import */ var _ShareStore__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_1190135__(/*! ./ShareStore */ \"./src/store/ShareStore.ts\");\n/* harmony import */ var _ChartSettingStore__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_1190135__(/*! ./ChartSettingStore */ \"./src/store/ChartSettingStore.ts\");\n/* harmony import */ var _LoaderStore__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_1190135__(/*! ./LoaderStore */ \"./src/store/LoaderStore.ts\");\n/* harmony import */ var _FavoriteStore__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_1190135__(/*! ./FavoriteStore */ \"./src/store/FavoriteStore.ts\");\n/* harmony import */ var _ChartSizeStore__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_1190135__(/*! ./ChartSizeStore */ \"./src/store/ChartSizeStore.ts\");\n/* harmony import */ var _RoutingStore__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_1190135__(/*! ./RoutingStore */ \"./src/store/RoutingStore.ts\");\n/* harmony import */ var _ChartState__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_1190135__(/*! ./ChartState */ \"./src/store/ChartState.ts\");\n/* harmony import */ var _Notifier__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_1190135__(/*! ./Notifier */ \"./src/store/Notifier.ts\");\n/* harmony import */ var _LastDigitStatsStore__WEBPACK_IMPORTED_MODULE_19__ = __nested_webpack_require_1190135__(/*! ./LastDigitStatsStore */ \"./src/store/LastDigitStatsStore.ts\");\n/* harmony import */ var _NavigationWidgetStore__WEBPACK_IMPORTED_MODULE_20__ = __nested_webpack_require_1190135__(/*! ./NavigationWidgetStore */ \"./src/store/NavigationWidgetStore.ts\");\n/* harmony import */ var _HighestLowestStore__WEBPACK_IMPORTED_MODULE_21__ = __nested_webpack_require_1190135__(/*! ./HighestLowestStore */ \"./src/store/HighestLowestStore.ts\");\n/* harmony import */ var _PaginationLoaderStore__WEBPACK_IMPORTED_MODULE_22__ = __nested_webpack_require_1190135__(/*! ./PaginationLoaderStore */ \"./src/store/PaginationLoaderStore.ts\");\n/* harmony import */ var _ToolbarWidgetStore__WEBPACK_IMPORTED_MODULE_23__ = __nested_webpack_require_1190135__(/*! ./ToolbarWidgetStore */ \"./src/store/ToolbarWidgetStore.ts\");\n/* harmony import */ var _ScrollStore__WEBPACK_IMPORTED_MODULE_24__ = __nested_webpack_require_1190135__(/*! ./ScrollStore */ \"./src/store/ScrollStore.ts\");\n/* harmony import */ var _ChartAdapterStore__WEBPACK_IMPORTED_MODULE_25__ = __nested_webpack_require_1190135__(/*! ./ChartAdapterStore */ \"./src/store/ChartAdapterStore.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass MainStore {\n  constructor() {\n    _defineProperty(this, \"notifier\", new _Notifier__WEBPACK_IMPORTED_MODULE_18__[\"default\"]());\n\n    _defineProperty(this, \"favorites\", _FavoriteStore__WEBPACK_IMPORTED_MODULE_14__[\"default\"].getInstance());\n\n    _defineProperty(this, \"chart\", new _ChartStore__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this));\n\n    _defineProperty(this, \"state\", new _ChartState__WEBPACK_IMPORTED_MODULE_17__[\"default\"](this));\n\n    _defineProperty(this, \"chartAdapter\", new _ChartAdapterStore__WEBPACK_IMPORTED_MODULE_25__[\"default\"](this));\n\n    _defineProperty(this, \"chartType\", new _ChartTypeStore__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this));\n\n    _defineProperty(this, \"chartMode\", new _ChartModeStore__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this));\n\n    _defineProperty(this, \"studies\", new _StudyLegendStore__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this));\n\n    _defineProperty(this, \"drawTools\", new _DrawToolsStore__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this));\n\n    _defineProperty(this, \"chartTitle\", new _ChartTitleStore__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this));\n\n    _defineProperty(this, \"timeperiod\", new _TimeperiodStore__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this));\n\n    _defineProperty(this, \"view\", new _ViewStore__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this));\n\n    _defineProperty(this, \"crosshair\", new _CrosshairStore__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this));\n\n    _defineProperty(this, \"share\", new _ShareStore__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this));\n\n    _defineProperty(this, \"chartSetting\", new _ChartSettingStore__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this));\n\n    _defineProperty(this, \"loader\", new _LoaderStore__WEBPACK_IMPORTED_MODULE_13__[\"default\"]());\n\n    _defineProperty(this, \"chartSize\", new _ChartSizeStore__WEBPACK_IMPORTED_MODULE_15__[\"default\"](this));\n\n    _defineProperty(this, \"routing\", new _RoutingStore__WEBPACK_IMPORTED_MODULE_16__[\"default\"](this));\n\n    _defineProperty(this, \"lastDigitStats\", new _LastDigitStatsStore__WEBPACK_IMPORTED_MODULE_19__[\"default\"](this));\n\n    _defineProperty(this, \"bottomWidgetsContainer\", new _BottomWidgetsContainerStore__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this));\n\n    _defineProperty(this, \"navigationWidget\", new _NavigationWidgetStore__WEBPACK_IMPORTED_MODULE_20__[\"default\"](this));\n\n    _defineProperty(this, \"highestLowest\", new _HighestLowestStore__WEBPACK_IMPORTED_MODULE_21__[\"default\"](this));\n\n    _defineProperty(this, \"paginationLoader\", new _PaginationLoaderStore__WEBPACK_IMPORTED_MODULE_22__[\"default\"](this));\n\n    _defineProperty(this, \"toolbarWidget\", new _ToolbarWidgetStore__WEBPACK_IMPORTED_MODULE_23__[\"default\"](this));\n\n    _defineProperty(this, \"scroll\", new _ScrollStore__WEBPACK_IMPORTED_MODULE_24__[\"default\"]());\n  }\n\n}\nlet stores_context;\nconst initContext = () => {\n  const root_store = new MainStore();\n  stores_context = react__WEBPACK_IMPORTED_MODULE_0___default().createContext(root_store);\n};\nconst getContext = () => stores_context;\nconst useStores = () => react__WEBPACK_IMPORTED_MODULE_0___default().useContext(stores_context);\n\n/***/ }),\n\n/***/ \"./src/utils/PendingPromise.ts\":\n/*!*************************************!*\\\n  !*** ./src/utils/PendingPromise.ts ***!\n  \\*************************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1198233__) => {\n\n\"use strict\";\n__nested_webpack_require_1198233__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1198233__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PendingPromise)\n/* harmony export */ });\nfunction PendingPromise() {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n\n  promise.resolve = res => {\n    promise.isPending = false;\n    resolve(res);\n  };\n\n  promise.reject = error => {\n    promise.isPending = false;\n    reject(error);\n  };\n\n  promise.data = data;\n  return promise;\n}\n\n/***/ }),\n\n/***/ \"./src/utils/ServerTime.ts\":\n/*!*********************************!*\\\n  !*** ./src/utils/ServerTime.ts ***!\n  \\*********************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1199162__) => {\n\n\"use strict\";\n__nested_webpack_require_1199162__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1199162__.d(__nested_webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _date__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1199162__(/*! ./date */ \"./src/utils/date.ts\");\n/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1199162__(/*! ./index */ \"./src/utils/index.ts\");\n/* harmony import */ var _PendingPromise__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1199162__(/*! ./PendingPromise */ \"./src/utils/PendingPromise.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nclass ServerTime {\n  constructor() {\n    _defineProperty(this, \"_api\", void 0);\n\n    _defineProperty(this, \"clientTimeAtRequest\", void 0);\n\n    _defineProperty(this, \"getTimeInterval\", void 0);\n\n    _defineProperty(this, \"onTimeUpdated\", void 0);\n\n    _defineProperty(this, \"serverTimeAtResponse\", void 0);\n\n    _defineProperty(this, \"updateTimeInterval\", void 0);\n\n    _defineProperty(this, \"clockStarted\", false);\n\n    _defineProperty(this, \"clockStartedPromise\", (0,_PendingPromise__WEBPACK_IMPORTED_MODULE_2__[\"default\"])());\n\n    _defineProperty(this, \"_timeResponse\", response => {\n      if ('msg_type' in response && response.error) {\n        this.clockStarted = false;\n      }\n\n      if (!this.clockStarted) {\n        this.init();\n        return;\n      }\n\n      const serverTime = response.time;\n      const clientTimeAtResponse = (0,_index__WEBPACK_IMPORTED_MODULE_1__.getUTCEpoch)(new Date());\n\n      if (serverTime && this.clientTimeAtRequest) {\n        this.serverTimeAtResponse = serverTime + (clientTimeAtResponse - this.clientTimeAtRequest) / 2;\n      }\n\n      const updateTime = () => {\n        if (this.serverTimeAtResponse) this.serverTimeAtResponse += 1;\n\n        if (typeof this.onTimeUpdated === 'function') {\n          this.onTimeUpdated();\n        }\n      };\n\n      if (this.updateTimeInterval) {\n        clearInterval(this.updateTimeInterval);\n      }\n\n      this.updateTimeInterval = setInterval(updateTime, 1000);\n    });\n  }\n\n  async init(api, updatedCallback) {\n    this._api = api;\n    this.onTimeUpdated = updatedCallback;\n\n    if (!this.clockStarted) {\n      this.clockStarted = true;\n\n      if (this.getTimeInterval) {\n        clearInterval(this.getTimeInterval);\n      }\n\n      await this.requestTime();\n      this.getTimeInterval = setInterval(this.requestTime.bind(this), 30000);\n    } else {\n      return this.clockStartedPromise;\n    }\n  }\n\n  async requestTime() {\n    this.clientTimeAtRequest = (0,_index__WEBPACK_IMPORTED_MODULE_1__.getUTCEpoch)(new Date());\n\n    if (this.serverTimeAtResponse) {\n      // it is not the first time\n      await this._api?.getServerTime().then(this._timeResponse);\n    } else {\n      // it is the first time\n      // to boot up the speed, at the beginig\n      // we use the user time\n      this._timeResponse({\n        time: Math.floor(new Date().getTime() / 1000)\n      });\n    }\n\n    this.clockStartedPromise.resolve();\n  }\n\n  getEpoch() {\n    if (this.serverTimeAtResponse) {\n      return this.serverTimeAtResponse;\n    }\n\n    throw new Error('Server time is undefined!');\n  }\n\n  getLocalDate() {\n    return (0,_index__WEBPACK_IMPORTED_MODULE_1__.getLocalDate)(this.getEpoch());\n  }\n\n  getUTCDate() {\n    return (0,_date__WEBPACK_IMPORTED_MODULE_0__.strToDateTime)((0,_index__WEBPACK_IMPORTED_MODULE_1__.getUTCDate)(this.getEpoch()));\n  }\n\n  static getInstance() {\n    if (!this._instance) {\n      this._instance = new ServerTime();\n    }\n\n    return this._instance;\n  }\n\n}\n\n_defineProperty(ServerTime, \"_instance\", void 0);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ServerTime);\n\n/***/ }),\n\n/***/ \"./src/utils/date.ts\":\n/*!***************************!*\\\n  !*** ./src/utils/date.ts ***!\n  \\***************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1203285__) => {\n\n\"use strict\";\n__nested_webpack_require_1203285__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1203285__.d(__nested_webpack_exports__, {\n/* harmony export */   \"strToDate\": () => (/* binding */ strToDate),\n/* harmony export */   \"strToDateTime\": () => (/* binding */ strToDateTime)\n/* harmony export */ });\nconst dateRegex = new RegExp('\\\\d{17}');\nconst strToDateTime = date => {\n  if (!date || date.getFullYear) return date;\n  var dateArray = [];\n  var y, m, d, h, mn, sc, ms;\n\n  if (date.length == 12 || date.length == 14) {\n    y = parseFloat(date.substring(0, 4));\n    m = parseFloat(date.substring(4, 6)) - 1;\n    d = parseFloat(date.substring(6, 8));\n    h = parseFloat(date.substring(8, 10));\n    mn = parseFloat(date.substring(10, 12));\n    sc = parseFloat(date.substring(12, 14)) || 0;\n    return new Date(y, m, d, h, mn, sc, 0);\n  } else if (dateRegex.test(date)) {\n    y = parseFloat(date.substring(0, 4));\n    m = parseFloat(date.substring(4, 6)) - 1;\n    d = parseFloat(date.substring(6, 8));\n    h = parseFloat(date.substring(8, 10));\n    mn = parseFloat(date.substring(10, 12));\n    sc = parseFloat(date.substring(12, 14));\n    ms = parseFloat(date.substring(14, 17));\n    return new Date(y, m, d, h, mn, sc, ms);\n  }\n\n  var dArray = [date];\n  var t = date.indexOf('T');\n\n  if (t != -1) {\n    var afterT = date.substring(t);\n\n    if (afterT.indexOf('Z') != -1 || afterT.indexOf('-') != -1 || afterT.indexOf('+') != -1) {\n      return new Date(date);\n    }\n\n    dArray = date.split('T');\n  } else if (date.indexOf(' ') != -1) dArray = date.split(' ');\n\n  if (dArray[0].indexOf('/') != -1) dateArray = dArray[0].split('/');else if (dArray[0].indexOf('-') != -1) dateArray = dArray[0].split('-');else return strToDate(date);\n  var year = parseFloat(dateArray[2]);\n\n  if (dateArray[0] && dateArray[0].length == 4) {\n    year = parseFloat(dateArray[0]);\n    dateArray[0] = dateArray[1];\n    dateArray[1] = dateArray[2];\n  }\n\n  if (dArray.length > 1) {\n    var meridiem = dArray[2];\n    dArray = dArray[1].split(':');\n\n    if (meridiem) {\n      if (dArray[0] == '12' && meridiem.toUpperCase() == 'AM') dArray[0] = 0;else if (dArray[0] != '12' && meridiem.toUpperCase() == 'PM') dArray[0] = parseInt(dArray[0], 10) + 12;\n    }\n\n    var sec = 0,\n        msec = 0;\n\n    if (dArray.length == 3) {\n      if (dArray[2].indexOf('.') == -1) {\n        sec = parseInt(dArray[2], 10);\n      } else {\n        sec = dArray[2].split('.');\n\n        if (sec[1].length == 3) {\n          msec = sec[1];\n          sec = sec[0];\n        }\n      }\n    }\n\n    return new Date(year, dateArray[0] - 1, dateArray[1], dArray[0], dArray[1], sec, msec);\n  }\n\n  return new Date(year, dateArray[0] - 1, dateArray[1], 0, 0, 0, 0);\n};\nconst strToDate = date => {\n  var dateArray;\n  if (date.indexOf('/') != -1) dateArray = date.split('/');else if (date.indexOf('-') != -1) dateArray = date.split('-');else if (date.length >= 8) {\n    return new Date(parseFloat(date.substring(0, 4)), parseFloat(date.substring(4, 6)) - 1, parseFloat(date.substring(6, 8)));\n  } else {\n    return new Date();\n  }\n\n  if (dateArray.length < 3) {\n    return new Date();\n  }\n\n  if (dateArray[2].indexOf(' ') != -1) {\n    dateArray[2] = dateArray[2].substring(0, dateArray[2].indexOf(' '));\n  } else if (dateArray[2].indexOf('T') != -1) {\n    dateArray[2] = dateArray[2].substring(0, dateArray[2].indexOf('T'));\n  }\n\n  var year = parseFloat(dateArray[2]);\n  if (year < 20) year += 2000;\n\n  if (dateArray[0].length == 4) {\n    year = parseFloat(dateArray[0]);\n    dateArray[0] = dateArray[1];\n    dateArray[1] = dateArray[2];\n  }\n\n  return new Date(year, dateArray[0] - 1, dateArray[1]);\n};\n\n/***/ }),\n\n/***/ \"./src/utils/ga.ts\":\n/*!*************************!*\\\n  !*** ./src/utils/ga.ts ***!\n  \\*************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1207128__) => {\n\n\"use strict\";\n__nested_webpack_require_1207128__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1207128__.d(__nested_webpack_exports__, {\n/* harmony export */   \"LogActions\": () => (/* binding */ LogActions),\n/* harmony export */   \"LogCategories\": () => (/* binding */ LogCategories),\n/* harmony export */   \"initGA\": () => (/* binding */ initGA),\n/* harmony export */   \"logEvent\": () => (/* binding */ logEvent),\n/* harmony export */   \"logPageView\": () => (/* binding */ logPageView)\n/* harmony export */ });\n// @ts-nocheck\nconst LogCategories = Object.freeze({\n  ChartTitle: 'Chart Title',\n  CategoricalDisplay: 'Categorical Display',\n  ChartControl: 'Chart Control'\n});\nconst LogActions = Object.freeze({\n  MarketSelector: 'Market Selector',\n  Favorite: 'Favorite',\n  ChartSetting: 'Chart Setting',\n  ChartSize: 'Chart Size',\n  ChartType: 'Chart Type',\n  Comparison: 'Comparison',\n  DrawTools: 'Draw Tools',\n  Download: 'Download',\n  Indicator: 'Indicator',\n  Interval: 'Interval',\n  Template: 'Template'\n});\n/* eslint-disable */\n\nfunction initGA() {\n  /* @START-EXCLUDE: 'lib' */\n  if (!window.isProductionWebsite) return;\n\n  (function (i, s, o, g, r, a, m) {\n    i.GoogleAnalyticsObject = r;\n    i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments);\n    }, i[r].l = 1 * new Date();\n    a = s.createElement(o), m = s.getElementsByTagName(o)[0];\n    a.async = 1;\n    a.src = g;\n    m.parentNode.insertBefore(a, m);\n  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');\n\n  ga('create', 'UA-40877026-15', 'auto');\n  /* @END-EXCLUDE */\n}\nfunction logPageView() {\n  /* @START-EXCLUDE: 'lib' */\n  if (!window.isProductionWebsite || !window.ga) return;\n  ga('send', 'pageview', window.location.pathname);\n  /* @END-EXCLUDE */\n}\nfunction logEvent(category, action, label) {\n  /* @START-EXCLUDE: 'lib' */\n  if (!window.isProductionWebsite || !window.ga) return;\n  ga('send', 'event', category, action, label);\n  /* @END-EXCLUDE */\n}\n\n/***/ }),\n\n/***/ \"./src/utils/index.ts\":\n/*!****************************!*\\\n  !*** ./src/utils/index.ts ***!\n  \\****************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1209320__) => {\n\n\"use strict\";\n__nested_webpack_require_1209320__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1209320__.d(__nested_webpack_exports__, {\n/* harmony export */   \"ARROW_COLORS\": () => (/* binding */ ARROW_COLORS),\n/* harmony export */   \"ARROW_HEIGHT\": () => (/* binding */ ARROW_HEIGHT),\n/* harmony export */   \"DIRECTIONS\": () => (/* binding */ DIRECTIONS),\n/* harmony export */   \"calculateTimeUnitInterval\": () => (/* binding */ calculateTimeUnitInterval),\n/* harmony export */   \"clone\": () => (/* binding */ clone),\n/* harmony export */   \"cloneCategories\": () => (/* binding */ cloneCategories),\n/* harmony export */   \"cloneCategory\": () => (/* binding */ cloneCategory),\n/* harmony export */   \"createObjectFromLocalStorage\": () => (/* binding */ createObjectFromLocalStorage),\n/* harmony export */   \"displayMilliseconds\": () => (/* binding */ displayMilliseconds),\n/* harmony export */   \"downloadFileInBrowser\": () => (/* binding */ downloadFileInBrowser),\n/* harmony export */   \"flatMap\": () => (/* binding */ flatMap),\n/* harmony export */   \"formatCamelCase\": () => (/* binding */ formatCamelCase),\n/* harmony export */   \"getIntervalInSeconds\": () => (/* binding */ getIntervalInSeconds),\n/* harmony export */   \"getLocalDate\": () => (/* binding */ getLocalDate),\n/* harmony export */   \"getStringValue\": () => (/* binding */ getStringValue),\n/* harmony export */   \"getSymbolMarketCategory\": () => (/* binding */ getSymbolMarketCategory),\n/* harmony export */   \"getTimeIntervalName\": () => (/* binding */ getTimeIntervalName),\n/* harmony export */   \"getTimeUnit\": () => (/* binding */ getTimeUnit),\n/* harmony export */   \"getUTCDate\": () => (/* binding */ getUTCDate),\n/* harmony export */   \"getUTCEpoch\": () => (/* binding */ getUTCEpoch),\n/* harmony export */   \"getYAxisScalingParams\": () => (/* binding */ getYAxisScalingParams),\n/* harmony export */   \"isLiteralObject\": () => (/* binding */ isLiteralObject),\n/* harmony export */   \"is_browser\": () => (/* binding */ is_browser),\n/* harmony export */   \"lerp\": () => (/* binding */ lerp),\n/* harmony export */   \"makeElementDraggable\": () => (/* binding */ makeElementDraggable),\n/* harmony export */   \"prepareIndicatorName\": () => (/* binding */ prepareIndicatorName),\n/* harmony export */   \"renderSVGString\": () => (/* binding */ renderSVGString),\n/* harmony export */   \"safeParse\": () => (/* binding */ safeParse),\n/* harmony export */   \"sameBar\": () => (/* binding */ sameBar),\n/* harmony export */   \"saveToLocalStorage\": () => (/* binding */ saveToLocalStorage),\n/* harmony export */   \"stableSort\": () => (/* binding */ stableSort),\n/* harmony export */   \"stringToSlug\": () => (/* binding */ stringToSlug),\n/* harmony export */   \"transformStudiesforTheme\": () => (/* binding */ transformStudiesforTheme),\n/* harmony export */   \"wrapText\": () => (/* binding */ wrapText)\n/* harmony export */ });\nfunction createObjectFromLocalStorage(key) {\n  const val = localStorage.getItem(key);\n\n  if (val !== null) {\n    try {\n      return JSON.parse(val);\n    } catch (e) {\n      return undefined;\n    }\n  }\n\n  return undefined;\n}\nfunction safeParse(value) {\n  try {\n    return JSON.parse(value);\n  } catch (e) {\n    return undefined;\n  }\n}\nfunction saveToLocalStorage(key, value) {\n  const string = JSON.stringify(value);\n  localStorage.setItem(key, string);\n}\nfunction getStringValue(p, pipSize) {\n  return typeof p === 'string' ? p : p.toFixed(pipSize);\n}\nconst getTimeUnit = granularity => {\n  if (granularity !== undefined) {\n    if (granularity === 86400) {\n      return 'day';\n    }\n\n    if (granularity === 0) {\n      return 'tick';\n    }\n\n    if (granularity >= 60 && granularity <= 1800) {\n      return 'minute';\n    }\n\n    return 'hour';\n  }\n};\n/**\n *\n * @param {TProcessedSymbolItem} symbol_object\n * @returns {string} concatenation of market name, market subgroup name (if has a subgroup) & submarket name.\n * E.g.: 'derived-baskets-forex_basket', where 'Derived' is a market, 'Baskets' is a market subgroup,\n * and 'Forex basket' is a submarket.\n */\n\nconst getSymbolMarketCategory = symbol_object => {\n  const {\n    market_display_name,\n    submarket_display_name,\n    subgroup\n  } = symbol_object || {};\n  if (!market_display_name) return '';\n  const market = market_display_name.replace(' ', '_');\n  const submarket = submarket_display_name.replace(' ', '_');\n\n  if (subgroup && subgroup !== 'none') {\n    return `${market}-${subgroup}-${submarket}`.toLowerCase();\n  }\n\n  return `${market}-${submarket}`.toLowerCase();\n};\nconst getTimeIntervalName = (interval, intervals) => {\n  const interval_category = intervals.find(i => i.items.some(item => item.interval === interval));\n  const interval_num = interval_category?.items?.find(item => item.interval === interval)?.num;\n  const interval_label = interval_num === 1 ? interval_category?.single : interval_category?.plural;\n  return interval_label ? `${interval_num} ${interval_label}` : '';\n};\nconst getIntervalInSeconds = _ref => {\n  let {\n    timeUnit,\n    interval\n  } = _ref;\n  let unit = timeUnit;\n  let interv = interval;\n\n  if (interv === 'day') {\n    unit = 86400;\n    interv = 1;\n  }\n\n  if (interv === 'hour') {\n    unit = 3600;\n  } else if (timeUnit === 'minute') {\n    unit = 60;\n  } else if (timeUnit === 'second') {\n    unit = 1;\n  }\n\n  if (unit !== undefined && interv !== undefined) {\n    if (typeof unit === 'string') {\n      unit = Number(unit);\n    }\n\n    if (typeof interv === 'string') {\n      interv = Number(interv);\n    }\n\n    return unit * interv;\n  }\n\n  return 0;\n};\nconst is_browser = {\n  Chrome: () => navigator.userAgent.indexOf('Chrome') !== -1 && !navigator.userAgent.match(/OPR|Opera|Chromium|Edg|Edge/i),\n  Chromium: () => navigator.userAgent.indexOf('Chromium') !== -1,\n  Edge: () => !!navigator.userAgent.match(/Edg|Edge/i) && !document.documentMode,\n  Firefox: () => navigator.userAgent.indexOf('Firefox') !== -1 && navigator.userAgent.indexOf('Seamonkey') === -1,\n  IE: () => navigator.userAgent.match(/MSIE|Trident/i) || !!document.documentMode,\n  Opera: () => !!navigator.userAgent.match(/OPR|Opera/i),\n  Safari: () => navigator.userAgent.indexOf('Safari') !== -1 && !navigator.userAgent.match(/Chrome|Chromium/i),\n  Seamonkey: () => navigator.userAgent.indexOf('Seamonkey') !== -1\n};\nfunction stableSort(arr, compare) {\n  const original = arr;\n  const newArray = arr.slice(0).sort((a, b) => {\n    const result = compare(a, b);\n    return result === 0 ? original.indexOf(a) - original.indexOf(b) : result;\n  });\n  return newArray;\n}\nfunction sameBar(bar1, bar2) {\n  return !(!bar1 || !bar2 || +bar1.DT !== +bar2.DT || bar1.Close !== bar2.Close || bar1.Open !== bar2.Open || bar1.Volume !== bar2.Volume);\n}\nfunction downloadFileInBrowser(filename, content, type, newTab) {\n  const blob = new Blob([content], {\n    type\n  });\n\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, filename);\n    return;\n  }\n\n  const url = type === 'image/png;' ? content : URL.createObjectURL(blob);\n  const link = document.createElement('a');\n\n  if (link.download !== undefined) {\n    // Browsers that support HTML5 download attribute\n    link.setAttribute('href', url);\n    link.setAttribute('download', filename);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body?.removeChild?.(link);\n    return;\n  }\n\n  if (newTab) {\n    if (type === 'image/png;') {\n      newTab.document.write(`<iframe src=\"${url}\" frameborder=\"0\" style=\"border:0; top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100%;\" allowfullscreen></iframe>`);\n    } else {\n      const lines = content.split('\\n');\n\n      for (let i = 0; i < lines.length; i++) {\n        newTab.document.write(`${lines[i]}<br/>`);\n      }\n    }\n  }\n}\nconst getYAxisScalingParams = _ref2 => {\n  let {\n    is_contract_chart,\n    is_mobile,\n    ticks_length,\n    yaxis_height\n  } = _ref2;\n  let top, bottom;\n  const params = {\n    height_factor: 0.8\n  };\n  if (!yaxis_height) return params;\n\n  if (!is_contract_chart) {\n    top = bottom = is_mobile ? yaxis_height * 0.33 : yaxis_height * 0.27;\n  } else if (ticks_length) {\n    const coefficient = ticks_length < 5 ? 0.3 : 0.25;\n    const yaxis_margin_mobile = yaxis_height * coefficient;\n    const yaxis_margin_desktop = yaxis_height * 0.27;\n    top = bottom = is_mobile ? yaxis_margin_mobile : yaxis_margin_desktop;\n  }\n\n  return { ...params,\n    ...(top && bottom ? {\n      yaxis_margin: {\n        top,\n        bottom\n      }\n    } : {})\n  };\n};\nfunction getUTCEpoch(date) {\n  return date.getTime() / 1000 - date.getTimezoneOffset() * 60 | 0;\n}\nfunction getUTCDate(epoch) {\n  const UTCdate = new Date(epoch * 1000).toISOString();\n  return UTCdate.substring(0, 19);\n}\nfunction getLocalDate(epoch) {\n  return new Date(epoch * 1000);\n}\nfunction calculateTimeUnitInterval(granularity) {\n  let interval = 1;\n  let timeUnit = 'second';\n\n  if (granularity === 86400) {\n    timeUnit = 'day';\n  } else if (granularity && granularity > 59) {\n    interval = granularity / 60;\n    timeUnit = 'minute';\n  }\n\n  return {\n    interval,\n    timeUnit\n  };\n}\nfunction displayMilliseconds(ms) {\n  const totalSec = ms / 1000;\n\n  if (totalSec <= 0) {\n    return null;\n  }\n\n  const padNum = n => `0${n}`.slice(-2);\n\n  const seconds = padNum(Math.trunc(totalSec % 60));\n  const minutes = padNum(Math.trunc(totalSec / 60 % 60));\n  let hours = Math.trunc(totalSec / 3600 % 24);\n  hours = hours ? `${hours}:` : '';\n  return `${hours}${minutes}:${seconds}`;\n}\nfunction cloneCategory(category) {\n  let transformItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n  const categoryData = [];\n  const categoryCopy = { ...category,\n    data: categoryData\n  };\n\n  if (category.hasSubcategory) {\n    for (const subcategory of category.data) {\n      if ('data' in subcategory) {\n        const subcategoryData = [];\n        const subcategoryCopy = { ...subcategory,\n          data: subcategoryData\n        };\n\n        for (const item of subcategory.data) {\n          subcategoryData.push(transformItem(item));\n        }\n\n        categoryData.push(subcategoryCopy);\n      }\n    }\n  } else {\n    for (const item of category.data) {\n      categoryData.push(transformItem(item));\n    }\n  }\n\n  return categoryCopy;\n}\nfunction cloneCategories(categories) {\n  let transformItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x => x;\n  const categorized = [];\n\n  for (const category of categories) {\n    categorized.push(cloneCategory(category, transformItem));\n  }\n\n  return categorized;\n}\nconst ARROW_HEIGHT = 41;\nconst ARROW_COLORS = Object.freeze({\n  GREEN: '#4bb4b3',\n  ORANGE: '#ff6444'\n});\nconst DIRECTIONS = Object.freeze({\n  UP: 'UP',\n  DOWN: 'DOWN'\n});\nconst formatCamelCase = s => {\n  const capitalized = s.charAt(0).toUpperCase() + s.slice(1);\n  return capitalized.replace(/([a-z](?=[A-Z]))/g, '$1 ');\n};\nconst movingAverageShortCode = {\n  doubleExponential: 'DEMA',\n  exponential: 'EMA',\n  hull: 'HMA',\n  simple: 'MA',\n  timeSeries: 'TSMA',\n  triangular: 'TMA',\n  tripleExponential: 'TEMA',\n  variable: 'VMA',\n  weighted: 'WMA',\n  wellesWilder: 'SMMA',\n  zeroLag: 'ZMA'\n};\nconst fieldTypeShortCode = {\n  open: 'O',\n  high: 'H',\n  close: 'C',\n  low: 'L',\n  'Hl/2': 'Hl/2',\n  'HlC/3': 'Hlc/3',\n  'HlCC/4': 'Hlcc/4',\n  'OHlC/4': 'Ohlc/4'\n};\nconst prepareIndicatorName = function (name) {\n  let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  const getStudyBars = () => {\n    const bars = parameters.filter(p => ['movingAverageType', 'maType', 'fieldType'].includes(p.path || '') || ['number', 'switch'].includes(p.type)).map(p => {\n      if (p.path === 'movingAverageType' || p.path === 'maType') {\n        return movingAverageShortCode[p.value];\n      } else if (p.path === 'fieldType') {\n        return fieldTypeShortCode[p.value];\n      }\n\n      if (p.type === 'switch') {\n        return p.value ? 'Y' : 'N';\n      }\n\n      return p.value || p.defaultValue;\n    }).join(',');\n    return bars ? bars : undefined;\n  };\n\n  const bars = getStudyBars();\n  return {\n    name: formatCamelCase(name.replace(`(${bars})`, '').replace('-', ' ')).trim(),\n    bars\n  };\n};\nconst renderSVGString = icon => {\n  const vb = icon.viewBox?.split(' ').slice(2) || [];\n  return `<svg id=\"${icon.id}\" width=\"${vb[0]}\" height=\"${vb[1]}\"><use xlink:href=\"${__nested_webpack_require_1209320__.p + icon.url}\" /></svg>`;\n};\nconst wrapText = (str, letter_count) => {\n  if (str.length > letter_count) {\n    let wrappedStr = str;\n    const count = Math.floor(str.length / letter_count);\n\n    for (let i = 1; i <= count; i++) {\n      wrappedStr = `${wrappedStr.slice(0, letter_count * i)} ${wrappedStr.slice(letter_count * i, wrappedStr.length)}`;\n    }\n\n    return wrappedStr;\n  }\n\n  return str;\n};\nconst stringToSlug = str => str.toLowerCase().replace(/[^\\w ]+/g, '').replace(/ +/g, '-');\nconst makeElementDraggable = (el, zone, _ref3) => {\n  let {\n    onDragStart,\n    onDrag,\n    onDragReleased\n  } = _ref3;\n  el.addEventListener('mousedown', dragMouseDown);\n  let isDragging = false;\n\n  function dragMouseDown(ev) {\n    window.addEventListener('mousemove', elementDrag);\n    zone.addEventListener('mouseup', closeDragElement);\n    isDragging = true;\n    onDragStart?.(ev);\n  }\n\n  function elementDrag(ev) {\n    if (isDragging) {\n      onDrag?.(ev);\n    }\n  }\n\n  function closeDragElement(ev) {\n    isDragging = false;\n    onDragReleased?.(ev);\n    window.removeEventListener('mousemove', elementDrag);\n    zone.removeEventListener('mouseup', closeDragElement);\n  }\n};\nconst lerp = (a, b, t) => {\n  a = a ?? 0;\n  b = b ?? 0;\n  return a * (1.0 - t) + b * t;\n};\nconst transformStudiesforTheme = (value, theme) => {\n  if (typeof value == 'string' && (value.startsWith('#') || value.toLowerCase().startsWith('0x'))) {\n    let color = value;\n\n    if (theme === 'light' && color === '#FFFFFF') {\n      return '#000000';\n    } else if (theme === 'dark' && color === '#000000') {\n      return '#FFFFFF';\n    }\n\n    return color;\n  } else if (isLiteralObject(value)) {\n    const map = value;\n    Object.keys(value).forEach(key => {\n      map[key] = transformStudiesforTheme(map[key], theme);\n    });\n  } else if (Array.isArray(value)) {\n    for (let i = 0; i < value.length; i++) {\n      value[i] = transformStudiesforTheme(value[i], theme);\n    }\n  }\n\n  return value;\n};\nconst clone = obj => {\n  var copy;\n  if (null == obj || 'object' != typeof obj) return obj;\n\n  if (obj instanceof Date) {\n    copy = new Date();\n    copy.setTime(obj.getTime());\n    return copy;\n  }\n\n  if (obj instanceof Array) {\n    copy = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      copy[i] = clone(obj[i]);\n    }\n\n    return copy;\n  }\n\n  if (obj instanceof Object) {\n    copy = {};\n\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);\n    }\n\n    return copy;\n  }\n\n  throw obj;\n};\nconst flatMap = (array, callback) => {\n  return array.reduce((x, y) => [...x, ...callback(y)], []);\n};\nconst isLiteralObject = function (a) {\n  return !!a && a.constructor === Object;\n};\n\n/***/ }),\n\n/***/ \"./src/utils/object.ts\":\n/*!*****************************!*\\\n  !*** ./src/utils/object.ts ***!\n  \\*****************************/\n/***/ ((__unused_webpack_module, __nested_webpack_exports__, __nested_webpack_require_1224604__) => {\n\n\"use strict\";\n__nested_webpack_require_1224604__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1224604__.d(__nested_webpack_exports__, {\n/* harmony export */   \"isDeepEqual\": () => (/* binding */ isDeepEqual),\n/* harmony export */   \"isEqualArray\": () => (/* binding */ isEqualArray),\n/* harmony export */   \"isEqualObject\": () => (/* binding */ isEqualObject)\n/* harmony export */ });\n// Note that this function breaks on objects with circular references.\nconst isDeepEqual = (a, b) => {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (Array.isArray(a)) {\n    return isEqualArray(a, b);\n  }\n\n  if (a && b && typeof a === 'object') {\n    return isEqualObject(a, b);\n  }\n\n  if (typeof a === 'number' && typeof b === 'number' && Number.isNaN(a) && Number.isNaN(b)) {\n    return true;\n  } // else\n\n\n  return a === b;\n};\nconst isEqualArray = (arr1, arr2) => arr1 === arr2 || arr1.length === arr2.length && arr1.every((value, idx) => isDeepEqual(value, arr2[idx]));\nconst isEqualObject = (obj1, obj2) => obj1 === obj2 || Object.keys(obj1).length === Object.keys(obj2).length && Object.keys(obj1).every(key => isDeepEqual(obj1[key], obj2[key]));\n\n/***/ }),\n\n/***/ \"./node_modules/react-tabs/style/react-tabs.css\":\n/*!******************************************************!*\\\n  !*** ./node_modules/react-tabs/style/react-tabs.css ***!\n  \\******************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/_themes.scss\":\n/*!***************************!*\\\n  !*** ./sass/_themes.scss ***!\n  \\***************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_bottom-widget-container.scss\":\n/*!*******************************************************!*\\\n  !*** ./sass/components/_bottom-widget-container.scss ***!\n  \\*******************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_categorical-display.scss\":\n/*!***************************************************!*\\\n  !*** ./sass/components/_categorical-display.scss ***!\n  \\***************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-controls.scss\":\n/*!**********************************************!*\\\n  !*** ./sass/components/_chart-controls.scss ***!\n  \\**********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-footer.scss\":\n/*!********************************************!*\\\n  !*** ./sass/components/_chart-footer.scss ***!\n  \\********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-mode.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_chart-mode.scss ***!\n  \\******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-setting.scss\":\n/*!*********************************************!*\\\n  !*** ./sass/components/_chart-setting.scss ***!\n  \\*********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-size.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_chart-size.scss ***!\n  \\******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-title.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_chart-title.scss ***!\n  \\*******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_chart-types.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_chart-types.scss ***!\n  \\*******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_ciq-list.scss\":\n/*!****************************************!*\\\n  !*** ./sass/components/_ciq-list.scss ***!\n  \\****************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_crosshair.scss\":\n/*!*****************************************!*\\\n  !*** ./sass/components/_crosshair.scss ***!\n  \\*****************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_dialog.scss\":\n/*!**************************************!*\\\n  !*** ./sass/components/_dialog.scss ***!\n  \\**************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_download.scss\":\n/*!****************************************!*\\\n  !*** ./sass/components/_download.scss ***!\n  \\****************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_draw_tools.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_draw_tools.scss ***!\n  \\******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_form.scss\":\n/*!************************************!*\\\n  !*** ./sass/components/_form.scss ***!\n  \\************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_highest-lowest-marker.scss\":\n/*!*****************************************************!*\\\n  !*** ./sass/components/_highest-lowest-marker.scss ***!\n  \\*****************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_icons.scss\":\n/*!*************************************!*\\\n  !*** ./sass/components/_icons.scss ***!\n  \\*************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_indicator_prediction_dialog.scss\":\n/*!***********************************************************!*\\\n  !*** ./sass/components/_indicator_prediction_dialog.scss ***!\n  \\***********************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_last-digits.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_last-digits.scss ***!\n  \\*******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_menu-dropdown.scss\":\n/*!*********************************************!*\\\n  !*** ./sass/components/_menu-dropdown.scss ***!\n  \\*********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_navigation-widget.scss\":\n/*!*************************************************!*\\\n  !*** ./sass/components/_navigation-widget.scss ***!\n  \\*************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_pagination-loader.scss\":\n/*!*************************************************!*\\\n  !*** ./sass/components/_pagination-loader.scss ***!\n  \\*************************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_scroll.scss\":\n/*!**************************************!*\\\n  !*** ./sass/components/_scroll.scss ***!\n  \\**************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_search.scss\":\n/*!**************************************!*\\\n  !*** ./sass/components/_search.scss ***!\n  \\**************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_settings-dialog.scss\":\n/*!***********************************************!*\\\n  !*** ./sass/components/_settings-dialog.scss ***!\n  \\***********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_studylegend.scss\":\n/*!*******************************************!*\\\n  !*** ./sass/components/_studylegend.scss ***!\n  \\*******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_timeperiod.scss\":\n/*!******************************************!*\\\n  !*** ./sass/components/_timeperiod.scss ***!\n  \\******************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_toolbar-widget.scss\":\n/*!**********************************************!*\\\n  !*** ./sass/components/_toolbar-widget.scss ***!\n  \\**********************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/components/_view.scss\":\n/*!************************************!*\\\n  !*** ./sass/components/_view.scss ***!\n  \\************************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/main.scss\":\n/*!************************!*\\\n  !*** ./sass/main.scss ***!\n  \\************************/\n/***/ ((module) => {\n\n// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ff444f\",\"light_chart_text\":\"#555975\",\"dark_chart_text\":\"#999999\",\"light_chart_grid\":\"#f2f3f4\",\"dark_chart_grid\":\"#1d1f20\",\"light_chart_mountain_border\":\"#85acb0\",\"light_chart_mountain_bg\":\"rgba(133, 172, 176, 0.16)\",\"light_chart_mountain_bg_shade\":\"rgba(255, 255, 255, 0)\",\"light_chart_closed_mountain_border\":\"rgba(133, 172, 176, 0.32)\",\"dark_chart_mountain_border\":\"#85acb0\",\"dark_chart_mountain_bg\":\"rgba(255, 255, 255, 0.36)\",\"dark_chart_mountain_bg_shade\":\"rgba(16, 19, 32, 0)\",\"dark_chart_closed_mountain_border\":\"rgba(255, 255, 255, 0.32)\",\"chart_closed_candle_up\":\"rgba(133, 172, 176, 0.32)\",\"chart_closed_candle_down\":\"rgba(255, 68, 79, 0.32)\",\"chart_closed_candle_border\":\"rgba(51, 51, 51, 0.32)\",\"chart_current_hr\":\"#ff444f\",\"chart_closed_current_hr\":\"rgba(255, 68, 79, 0.32)\",\"light_chart_bg\":\"#ffffff\",\"dark_chart_bg\":\"#0e0e0e\",\"light_float_labels_bg\":\"#d6dadb\",\"dark_float_labels_bg\":\"#323738\",\"light_float_labels_text\":\"#333333\",\"dark_float_labels_text\":\"#ffffff\"};\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-bchusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-bchusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1266783__) => {\n\nmodule.exports = {\n      id: \"ic-bchusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1266783__.p + \"sprite-a6820f.smartcharts.svg#ic-bchusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-bnbusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-bnbusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1267340__) => {\n\nmodule.exports = {\n      id: \"ic-bnbusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1267340__.p + \"sprite-a6820f.smartcharts.svg#ic-bnbusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-btceth.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-btceth.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1267897__) => {\n\nmodule.exports = {\n      id: \"ic-btceth-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1267897__.p + \"sprite-a6820f.smartcharts.svg#ic-btceth-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-btcltc.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-btcltc.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1268454__) => {\n\nmodule.exports = {\n      id: \"ic-btcltc-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1268454__.p + \"sprite-a6820f.smartcharts.svg#ic-btcltc-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-btcusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-btcusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1269011__) => {\n\nmodule.exports = {\n      id: \"ic-btcusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1269011__.p + \"sprite-a6820f.smartcharts.svg#ic-btcusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-dshusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-dshusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1269568__) => {\n\nmodule.exports = {\n      id: \"ic-dshusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1269568__.p + \"sprite-a6820f.smartcharts.svg#ic-dshusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-eosusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-eosusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1270125__) => {\n\nmodule.exports = {\n      id: \"ic-eosusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1270125__.p + \"sprite-a6820f.smartcharts.svg#ic-eosusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-ethusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-ethusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1270682__) => {\n\nmodule.exports = {\n      id: \"ic-ethusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1270682__.p + \"sprite-a6820f.smartcharts.svg#ic-ethusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-iotusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-iotusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1271239__) => {\n\nmodule.exports = {\n      id: \"ic-iotusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1271239__.p + \"sprite-a6820f.smartcharts.svg#ic-iotusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-ltcusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-ltcusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1271796__) => {\n\nmodule.exports = {\n      id: \"ic-ltcusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1271796__.p + \"sprite-a6820f.smartcharts.svg#ic-ltcusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-neousd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-neousd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1272353__) => {\n\nmodule.exports = {\n      id: \"ic-neousd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1272353__.p + \"sprite-a6820f.smartcharts.svg#ic-neousd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-omgusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-omgusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1272910__) => {\n\nmodule.exports = {\n      id: \"ic-omgusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1272910__.p + \"sprite-a6820f.smartcharts.svg#ic-omgusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-trxusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-trxusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1273467__) => {\n\nmodule.exports = {\n      id: \"ic-trxusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1273467__.p + \"sprite-a6820f.smartcharts.svg#ic-trxusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-xlmusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-xlmusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1274024__) => {\n\nmodule.exports = {\n      id: \"ic-xlmusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1274024__.p + \"sprite-a6820f.smartcharts.svg#ic-xlmusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-xmrusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-xmrusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1274581__) => {\n\nmodule.exports = {\n      id: \"ic-xmrusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1274581__.p + \"sprite-a6820f.smartcharts.svg#ic-xmrusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-xrpusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-xrpusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1275138__) => {\n\nmodule.exports = {\n      id: \"ic-xrpusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1275138__.p + \"sprite-a6820f.smartcharts.svg#ic-xrpusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/cryptos/ic-zecusd.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/active-symbols/cryptos/ic-zecusd.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1275695__) => {\n\nmodule.exports = {\n      id: \"ic-zecusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1275695__.p + \"sprite-a6820f.smartcharts.svg#ic-zecusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/active-symbols/energy/oil usd/ic-oilusd.svg ***!\n  \\****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1276280__) => {\n\nmodule.exports = {\n      id: \"ic-oilusd-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1276280__.p + \"sprite-a6820f.smartcharts.svg#ic-oilusd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/ic-otcbadge.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/active-symbols/ic-otcbadge.svg ***!\n  \\***************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1276813__) => {\n\nmodule.exports = {\n      id: \"ic-otcbadge-usage\",\n      viewBox: \"0 0 13 9\",\n      url: __nested_webpack_require_1276813__.p + \"sprite-a6820f.smartcharts.svg#ic-otcbadge-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/metals/ic-metal.svg\":\n/*!*******************************************************!*\\\n  !*** ./sass/icons/active-symbols/metals/ic-metal.svg ***!\n  \\*******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1277365__) => {\n\nmodule.exports = {\n      id: \"ic-metal-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1277365__.p + \"sprite-a6820f.smartcharts.svg#ic-metal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-australian-200.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-australian-200.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1277976__) => {\n\nmodule.exports = {\n      id: \"ic-australian-200-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1277976__.p + \"sprite-a6820f.smartcharts.svg#ic-australian-200-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-euro-50.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-euro-50.svg ***!\n  \\****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1278577__) => {\n\nmodule.exports = {\n      id: \"ic-euro-50-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1278577__.p + \"sprite-a6820f.smartcharts.svg#ic-euro-50-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-france-40.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-france-40.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1279172__) => {\n\nmodule.exports = {\n      id: \"ic-france-40-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1279172__.p + \"sprite-a6820f.smartcharts.svg#ic-france-40-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-germany-40.svg\":\n/*!*******************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-germany-40.svg ***!\n  \\*******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1279775__) => {\n\nmodule.exports = {\n      id: \"ic-germany-40-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1279775__.p + \"sprite-a6820f.smartcharts.svg#ic-germany-40-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-hong-kong-50.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-hong-kong-50.svg ***!\n  \\*********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1280388__) => {\n\nmodule.exports = {\n      id: \"ic-hong-kong-50-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1280388__.p + \"sprite-a6820f.smartcharts.svg#ic-hong-kong-50-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-japan-225.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-japan-225.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1280993__) => {\n\nmodule.exports = {\n      id: \"ic-japan-225-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1280993__.p + \"sprite-a6820f.smartcharts.svg#ic-japan-225-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-netherland-25.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-netherland-25.svg ***!\n  \\**********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1281608__) => {\n\nmodule.exports = {\n      id: \"ic-netherland-25-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1281608__.p + \"sprite-a6820f.smartcharts.svg#ic-netherland-25-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-swiss-20.svg\":\n/*!*****************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-swiss-20.svg ***!\n  \\*****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1282211__) => {\n\nmodule.exports = {\n      id: \"ic-swiss-20-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1282211__.p + \"sprite-a6820f.smartcharts.svg#ic-swiss-20-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-uk-100.svg\":\n/*!***************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-uk-100.svg ***!\n  \\***************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1282796__) => {\n\nmodule.exports = {\n      id: \"ic-uk-100-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1282796__.p + \"sprite-a6820f.smartcharts.svg#ic-uk-100-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-usd-500.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-usd-500.svg ***!\n  \\****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1283381__) => {\n\nmodule.exports = {\n      id: \"ic-usd-500-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1283381__.p + \"sprite-a6820f.smartcharts.svg#ic-usd-500-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-usd-tech-100.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-usd-tech-100.svg ***!\n  \\*********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1283988__) => {\n\nmodule.exports = {\n      id: \"ic-usd-tech-100-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1283988__.p + \"sprite-a6820f.smartcharts.svg#ic-usd-tech-100-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/stock-indices/ic-wallstreet-30.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/active-symbols/stock-indices/ic-wallstreet-30.svg ***!\n  \\**********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1284609__) => {\n\nmodule.exports = {\n      id: \"ic-wallstreet-30-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1284609__.p + \"sprite-a6820f.smartcharts.svg#ic-wallstreet-30-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/10 index/ic-10-index-v.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/10 index/ic-10-index-v.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1285244__) => {\n\nmodule.exports = {\n      id: \"ic-10-index-v-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1285244__.p + \"sprite-a6820f.smartcharts.svg#ic-10-index-v-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/100 index/ic-100-index-v.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/100 index/ic-100-index-v.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1285881__) => {\n\nmodule.exports = {\n      id: \"ic-100-index-v-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1285881__.p + \"sprite-a6820f.smartcharts.svg#ic-100-index-v-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s10 index/ic-10-1s-index.svg ***!\n  \\****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1286524__) => {\n\nmodule.exports = {\n      id: \"ic-10-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1286524__.p + \"sprite-a6820f.smartcharts.svg#ic-10-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s100 index/ic-100-1s-index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1287175__) => {\n\nmodule.exports = {\n      id: \"ic-100-1s-index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1287175__.p + \"sprite-a6820f.smartcharts.svg#ic-100-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s150 index/ic-150-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s150 index/ic-150-1s-index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1287828__) => {\n\nmodule.exports = {\n      id: \"ic-150-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1287828__.p + \"sprite-a6820f.smartcharts.svg#ic-150-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s200 index/ic-200-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s200 index/ic-200-1s-index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1288481__) => {\n\nmodule.exports = {\n      id: \"ic-200-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1288481__.p + \"sprite-a6820f.smartcharts.svg#ic-200-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s25 index/light-25(1s)index.svg\":\n/*!*******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s25 index/light-25(1s)index.svg ***!\n  \\*******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1289138__) => {\n\nmodule.exports = {\n      id: \"light-25(1s)index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1289138__.p + \"sprite-a6820f.smartcharts.svg#light-25(1s)index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s250 index/ic-250-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s250 index/ic-250-1s-index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1289795__) => {\n\nmodule.exports = {\n      id: \"ic-250-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1289795__.p + \"sprite-a6820f.smartcharts.svg#ic-250-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s300 index/ic-300-1s-index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s300 index/ic-300-1s-index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1290448__) => {\n\nmodule.exports = {\n      id: \"ic-300-1s-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1290448__.p + \"sprite-a6820f.smartcharts.svg#ic-300-1s-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s50 index/light-50(1s) index.svg\":\n/*!********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s50 index/light-50(1s) index.svg ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1291109__) => {\n\nmodule.exports = {\n      id: \"light-50(1s) index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1291109__.p + \"sprite-a6820f.smartcharts.svg#light-50(1s) index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/1s75 index/light-75(1s) index.svg\":\n/*!********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/1s75 index/light-75(1s) index.svg ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1291776__) => {\n\nmodule.exports = {\n      id: \"light-75(1s) index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1291776__.p + \"sprite-a6820f.smartcharts.svg#light-75(1s) index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/25 index/ic-25-index-v.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/25 index/ic-25-index-v.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1292415__) => {\n\nmodule.exports = {\n      id: \"ic-25-index-v-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1292415__.p + \"sprite-a6820f.smartcharts.svg#ic-25-index-v-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/50 index/ic-50-index-v.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/50 index/ic-50-index-v.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1293044__) => {\n\nmodule.exports = {\n      id: \"ic-50-index-v-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1293044__.p + \"sprite-a6820f.smartcharts.svg#ic-50-index-v-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/75 index/ic-75-index-v.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/75 index/ic-75-index-v.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1293673__) => {\n\nmodule.exports = {\n      id: \"ic-75-index-v-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1293673__.p + \"sprite-a6820f.smartcharts.svg#ic-75-index-v-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/bear market/ic-marketbear.svg ***!\n  \\****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1294314__) => {\n\nmodule.exports = {\n      id: \"ic-marketbear-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1294314__.p + \"sprite-a6820f.smartcharts.svg#ic-marketbear-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/boom1000 index/boom1000 index.svg\":\n/*!********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/boom1000 index/boom1000 index.svg ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1294971__) => {\n\nmodule.exports = {\n      id: \"boom1000 index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1294971__.p + \"sprite-a6820f.smartcharts.svg#boom1000 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/boom300 index/boom300 index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/boom300 index/boom300 index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1295622__) => {\n\nmodule.exports = {\n      id: \"boom300 index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1295622__.p + \"sprite-a6820f.smartcharts.svg#boom300 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/boom500 index/boom500 index.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/boom500 index/boom500 index.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1296271__) => {\n\nmodule.exports = {\n      id: \"boom500 index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1296271__.p + \"sprite-a6820f.smartcharts.svg#boom500 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/bull market/ic-marketbull.svg ***!\n  \\****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1296912__) => {\n\nmodule.exports = {\n      id: \"ic-marketbull-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1296912__.p + \"sprite-a6820f.smartcharts.svg#ic-marketbull-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/crash1000 index/crash1000 index.svg\":\n/*!**********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/crash1000 index/crash1000 index.svg ***!\n  \\**********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1297577__) => {\n\nmodule.exports = {\n      id: \"crash1000 index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1297577__.p + \"sprite-a6820f.smartcharts.svg#crash1000 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/crash300 index/crash300 index.svg\":\n/*!********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/crash300 index/crash300 index.svg ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1298238__) => {\n\nmodule.exports = {\n      id: \"crash300 index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1298238__.p + \"sprite-a6820f.smartcharts.svg#crash300 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/crash500 index/crash500 index.svg\":\n/*!********************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/crash500 index/crash500 index.svg ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1298897__) => {\n\nmodule.exports = {\n      id: \"crash500 index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1298897__.p + \"sprite-a6820f.smartcharts.svg#crash500 index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd10 index/ic-10-index.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd10 index/ic-10-index.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1299528__) => {\n\nmodule.exports = {\n      id: \"ic-10-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1299528__.p + \"sprite-a6820f.smartcharts.svg#ic-10-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd100 index/ic-100-index.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd100 index/ic-100-index.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1300161__) => {\n\nmodule.exports = {\n      id: \"ic-100-index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1300161__.p + \"sprite-a6820f.smartcharts.svg#ic-100-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd150 index/ic-150-index.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd150 index/ic-150-index.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1300796__) => {\n\nmodule.exports = {\n      id: \"ic-150-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1300796__.p + \"sprite-a6820f.smartcharts.svg#ic-150-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd200 index/ic-200-index.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd200 index/ic-200-index.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1301431__) => {\n\nmodule.exports = {\n      id: \"ic-200-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1301431__.p + \"sprite-a6820f.smartcharts.svg#ic-200-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd25 index/ic-25-index.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd25 index/ic-25-index.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1302058__) => {\n\nmodule.exports = {\n      id: \"ic-25-index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1302058__.p + \"sprite-a6820f.smartcharts.svg#ic-25-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd50 index/ic-50-index.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd50 index/ic-50-index.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1302683__) => {\n\nmodule.exports = {\n      id: \"ic-50-index-usage\",\n      viewBox: \"0 0 33 32\",\n      url: __nested_webpack_require_1302683__.p + \"sprite-a6820f.smartcharts.svg#ic-50-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/jd75 index/ic-75-index.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/jd75 index/ic-75-index.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1303308__) => {\n\nmodule.exports = {\n      id: \"ic-75-index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1303308__.p + \"sprite-a6820f.smartcharts.svg#ic-75-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/active-symbols/volatility/step index/step index.svg\":\n/*!************************************************************************!*\\\n  !*** ./sass/icons/active-symbols/volatility/step index/step index.svg ***!\n  \\************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1303929__) => {\n\nmodule.exports = {\n      id: \"step index-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1303929__.p + \"sprite-a6820f.smartcharts.svg#step index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/error.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/alert message/error.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1304436__) => {\n\nmodule.exports = {\n      id: \"error-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1304436__.p + \"sprite-a6820f.smartcharts.svg#error-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/info.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/alert message/info.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1304929__) => {\n\nmodule.exports = {\n      id: \"info-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1304929__.p + \"sprite-a6820f.smartcharts.svg#info-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/success.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/alert message/success.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1305432__) => {\n\nmodule.exports = {\n      id: \"success-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1305432__.p + \"sprite-a6820f.smartcharts.svg#success-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/alert message/warning.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/alert message/warning.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1305941__) => {\n\nmodule.exports = {\n      id: \"warning-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1305941__.p + \"sprite-a6820f.smartcharts.svg#warning-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/arrows/ic-arrow-green.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/arrows/ic-arrow-green.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1306450__) => {\n\nmodule.exports = {\n      id: \"ic-arrow-green-usage\",\n      viewBox: \"0 0 22 31\",\n      url: __nested_webpack_require_1306450__.p + \"sprite-a6820f.smartcharts.svg#ic-arrow-green-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/arrows/ic-arrow-orange.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/arrows/ic-arrow-orange.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1306977__) => {\n\nmodule.exports = {\n      id: \"ic-arrow-orange-usage\",\n      viewBox: \"0 0 22 31\",\n      url: __nested_webpack_require_1306977__.p + \"sprite-a6820f.smartcharts.svg#ic-arrow-orange-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/back/ic-back.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/back/ic-back.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1307466__) => {\n\nmodule.exports = {\n      id: \"ic-back-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1307466__.p + \"sprite-a6820f.smartcharts.svg#ic-back-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg\":\n/*!*******************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/baseline/ic-baseline-normal.svg ***!\n  \\*******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1308107__) => {\n\nmodule.exports = {\n      id: \"ic-baseline-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1308107__.p + \"sprite-a6820f.smartcharts.svg#ic-baseline-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/candle/ic-candle-normal.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1308754__) => {\n\nmodule.exports = {\n      id: \"ic-candle-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1308754__.p + \"sprite-a6820f.smartcharts.svg#ic-candle-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/dot/ic-dot-normal.svg ***!\n  \\*********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1309373__) => {\n\nmodule.exports = {\n      id: \"ic-dot-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1309373__.p + \"sprite-a6820f.smartcharts.svg#ic-dot-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg\":\n/*!****************************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/hollow candle/ic-hollowcandle-normal.svg ***!\n  \\****************************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1310062__) => {\n\nmodule.exports = {\n      id: \"ic-hollowcandle-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1310062__.p + \"sprite-a6820f.smartcharts.svg#ic-hollowcandle-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-heikin-ashi-normal.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1310709__) => {\n\nmodule.exports = {\n      id: \"ic-heikin-ashi-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1310709__.p + \"sprite-a6820f.smartcharts.svg#ic-heikin-ashi-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-kagi-normal.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-kagi-normal.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1311326__) => {\n\nmodule.exports = {\n      id: \"ic-kagi-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1311326__.p + \"sprite-a6820f.smartcharts.svg#ic-kagi-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-linebreak-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-linebreak-normal.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1311949__) => {\n\nmodule.exports = {\n      id: \"ic-linebreak-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1311949__.p + \"sprite-a6820f.smartcharts.svg#ic-linebreak-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg\":\n/*!*************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-pointfigure-normal.svg ***!\n  \\*************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1312590__) => {\n\nmodule.exports = {\n      id: \"ic-pointfigure-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1312590__.p + \"sprite-a6820f.smartcharts.svg#ic-pointfigure-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-rangebars-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-rangebars-normal.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1313227__) => {\n\nmodule.exports = {\n      id: \"ic-rangebars-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1313227__.p + \"sprite-a6820f.smartcharts.svg#ic-rangebars-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ic-renko-normal.svg\":\n/*!*******************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ic-renko-normal.svg ***!\n  \\*******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1313844__) => {\n\nmodule.exports = {\n      id: \"ic-renko-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1313844__.p + \"sprite-a6820f.smartcharts.svg#ic-renko-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/line dot/ic-linedot-normal.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1314497__) => {\n\nmodule.exports = {\n      id: \"ic-linedot-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1314497__.p + \"sprite-a6820f.smartcharts.svg#ic-linedot-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/line/ic-line-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/line/ic-line-normal.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1315126__) => {\n\nmodule.exports = {\n      id: \"ic-line-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1315126__.p + \"sprite-a6820f.smartcharts.svg#ic-line-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/ohlc/ic-ohlc-normal.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1315749__) => {\n\nmodule.exports = {\n      id: \"ic-ohlc-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1315749__.p + \"sprite-a6820f.smartcharts.svg#ic-ohlc-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg\":\n/*!***************************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/spline/ic-spline-normal.svg ***!\n  \\***************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1316388__) => {\n\nmodule.exports = {\n      id: \"ic-spline-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1316388__.p + \"sprite-a6820f.smartcharts.svg#ic-spline-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/chart types/table/table.svg\":\n/*!***************************************************************!*\\\n  !*** ./sass/icons/chart settings/chart types/table/table.svg ***!\n  \\***************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1316983__) => {\n\nmodule.exports = {\n      id: \"table-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1316983__.p + \"sprite-a6820f.smartcharts.svg#table-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/comparison/ic-comparison-normal.svg\":\n/*!***********************************************************************!*\\\n  !*** ./sass/icons/chart settings/comparison/ic-comparison-normal.svg ***!\n  \\***********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1317588__) => {\n\nmodule.exports = {\n      id: \"ic-comparison-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1317588__.p + \"sprite-a6820f.smartcharts.svg#ic-comparison-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-off.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-off.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1318203__) => {\n\nmodule.exports = {\n      id: \"ic-crosshair-off-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1318203__.p + \"sprite-a6820f.smartcharts.svg#ic-crosshair-off-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-on.svg\":\n/*!*****************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-on.svg ***!\n  \\*****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1318806__) => {\n\nmodule.exports = {\n      id: \"ic-crosshair-on-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1318806__.p + \"sprite-a6820f.smartcharts.svg#ic-crosshair-on-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/chart settings/crosshair/ic-crosshair-tooltip.svg ***!\n  \\**********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1319427__) => {\n\nmodule.exports = {\n      id: \"ic-crosshair-tooltip-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1319427__.p + \"sprite-a6820f.smartcharts.svg#ic-crosshair-tooltip-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg\":\n/*!****************************************************************************!*\\\n  !*** ./sass/icons/chart settings/drawing tools/ic-drawingtools-normal.svg ***!\n  \\****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1320082__) => {\n\nmodule.exports = {\n      id: \"ic-drawingtools-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1320082__.p + \"sprite-a6820f.smartcharts.svg#ic-drawingtools-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/setting/ic-position-bottom.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/chart settings/setting/ic-position-bottom.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1320701__) => {\n\nmodule.exports = {\n      id: \"ic-position-bottom-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1320701__.p + \"sprite-a6820f.smartcharts.svg#ic-position-bottom-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/setting/ic-position-left.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/chart settings/setting/ic-position-left.svg ***!\n  \\****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1321304__) => {\n\nmodule.exports = {\n      id: \"ic-position-left-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1321304__.p + \"sprite-a6820f.smartcharts.svg#ic-position-left-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg\":\n/*!***************************************************************!*\\\n  !*** ./sass/icons/chart settings/zoom-in/ic-zoomin-light.svg ***!\n  \\***************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1321899__) => {\n\nmodule.exports = {\n      id: \"ic-zoomin-light-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1321899__.p + \"sprite-a6820f.smartcharts.svg#ic-zoomin-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg\":\n/*!*****************************************************************!*\\\n  !*** ./sass/icons/chart settings/zoom-out/ic-zoomout-light.svg ***!\n  \\*****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1322500__) => {\n\nmodule.exports = {\n      id: \"ic-zoomout-light-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1322500__.p + \"sprite-a6820f.smartcharts.svg#ic-zoomout-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-area-grayscale.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/chart-type/ic-area-grayscale.svg ***!\n  \\*****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1323055__) => {\n\nmodule.exports = {\n      id: \"ic-area-grayscale-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1323055__.p + \"sprite-a6820f.smartcharts.svg#ic-area-grayscale-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-area.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/chart-type/ic-area.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1323572__) => {\n\nmodule.exports = {\n      id: \"ic-area-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1323572__.p + \"sprite-a6820f.smartcharts.svg#ic-area-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-candle-grayscale.svg\":\n/*!*******************************************************!*\\\n  !*** ./sass/icons/chart-type/ic-candle-grayscale.svg ***!\n  \\*******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1324117__) => {\n\nmodule.exports = {\n      id: \"ic-candle-grayscale-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1324117__.p + \"sprite-a6820f.smartcharts.svg#ic-candle-grayscale-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-candle.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/chart-type/ic-candle.svg ***!\n  \\*********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1324646__) => {\n\nmodule.exports = {\n      id: \"ic-candle-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1324646__.p + \"sprite-a6820f.smartcharts.svg#ic-candle-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-hollow-grayscale.svg\":\n/*!*******************************************************!*\\\n  !*** ./sass/icons/chart-type/ic-hollow-grayscale.svg ***!\n  \\*******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1325195__) => {\n\nmodule.exports = {\n      id: \"ic-hollow-grayscale-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1325195__.p + \"sprite-a6820f.smartcharts.svg#ic-hollow-grayscale-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-hollow.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/chart-type/ic-hollow.svg ***!\n  \\*********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1325724__) => {\n\nmodule.exports = {\n      id: \"ic-hollow-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1325724__.p + \"sprite-a6820f.smartcharts.svg#ic-hollow-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-ohlc-grayscale.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/chart-type/ic-ohlc-grayscale.svg ***!\n  \\*****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1326265__) => {\n\nmodule.exports = {\n      id: \"ic-ohlc-grayscale-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1326265__.p + \"sprite-a6820f.smartcharts.svg#ic-ohlc-grayscale-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/chart-type/ic-ohlc.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/chart-type/ic-ohlc.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1326782__) => {\n\nmodule.exports = {\n      id: \"ic-ohlc-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1326782__.p + \"sprite-a6820f.smartcharts.svg#ic-ohlc-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/clear/ic-clear.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/clear/ic-clear.svg ***!\n  \\***************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1327263__) => {\n\nmodule.exports = {\n      id: \"ic-clear-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1327263__.p + \"sprite-a6820f.smartcharts.svg#ic-clear-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/close/ic-close-bold.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/close/ic-close-bold.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1327766__) => {\n\nmodule.exports = {\n      id: \"ic-close-bold-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1327766__.p + \"sprite-a6820f.smartcharts.svg#ic-close-bold-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/close/ic-close-circle.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/close/ic-close-circle.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1328287__) => {\n\nmodule.exports = {\n      id: \"ic-close-circle-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1328287__.p + \"sprite-a6820f.smartcharts.svg#ic-close-circle-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/full-screen.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/common/full-screen.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1328800__) => {\n\nmodule.exports = {\n      id: \"full-screen-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1328800__.p + \"sprite-a6820f.smartcharts.svg#full-screen-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-active.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/common/ic-active.svg ***!\n  \\*****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1329297__) => {\n\nmodule.exports = {\n      id: \"ic-active-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1329297__.p + \"sprite-a6820f.smartcharts.svg#ic-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-add.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/common/ic-add.svg ***!\n  \\**************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1329778__) => {\n\nmodule.exports = {\n      id: \"ic-add-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1329778__.p + \"sprite-a6820f.smartcharts.svg#ic-add-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-charts.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/common/ic-charts.svg ***!\n  \\*****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1330265__) => {\n\nmodule.exports = {\n      id: \"ic-charts-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1330265__.p + \"sprite-a6820f.smartcharts.svg#ic-charts-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-checkbox-active.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/common/ic-checkbox-active.svg ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1330794__) => {\n\nmodule.exports = {\n      id: \"ic-checkbox-active-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1330794__.p + \"sprite-a6820f.smartcharts.svg#ic-checkbox-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-checkbox.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/common/ic-checkbox.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1331313__) => {\n\nmodule.exports = {\n      id: \"ic-checkbox-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1331313__.p + \"sprite-a6820f.smartcharts.svg#ic-checkbox-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-close.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/common/ic-close.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1331806__) => {\n\nmodule.exports = {\n      id: \"ic-close-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1331806__.p + \"sprite-a6820f.smartcharts.svg#ic-close-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-download.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/common/ic-download.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1332305__) => {\n\nmodule.exports = {\n      id: \"ic-download-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1332305__.p + \"sprite-a6820f.smartcharts.svg#ic-download-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-drawing-tool.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/common/ic-drawing-tool.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1332826__) => {\n\nmodule.exports = {\n      id: \"ic-drawing-tool-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1332826__.p + \"sprite-a6820f.smartcharts.svg#ic-drawing-tool-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-help-center.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/common/ic-help-center.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1333351__) => {\n\nmodule.exports = {\n      id: \"ic-help-center-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1333351__.p + \"sprite-a6820f.smartcharts.svg#ic-help-center-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-indicators.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/common/ic-indicators.svg ***!\n  \\*********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1333870__) => {\n\nmodule.exports = {\n      id: \"ic-indicators-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1333870__.p + \"sprite-a6820f.smartcharts.svg#ic-indicators-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-info.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/common/ic-info.svg ***!\n  \\***************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1334363__) => {\n\nmodule.exports = {\n      id: \"ic-info-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1334363__.p + \"sprite-a6820f.smartcharts.svg#ic-info-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-input-number-minus.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/common/ic-input-number-minus.svg ***!\n  \\*****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1334900__) => {\n\nmodule.exports = {\n      id: \"ic-input-number-minus-usage\",\n      viewBox: \"0 0 8 8\",\n      url: __nested_webpack_require_1334900__.p + \"sprite-a6820f.smartcharts.svg#ic-input-number-minus-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-input-number-plus.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/common/ic-input-number-plus.svg ***!\n  \\****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1335459__) => {\n\nmodule.exports = {\n      id: \"ic-input-number-plus-usage\",\n      viewBox: \"0 0 8 8\",\n      url: __nested_webpack_require_1335459__.p + \"sprite-a6820f.smartcharts.svg#ic-input-number-plus-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-language.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/common/ic-language.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1335980__) => {\n\nmodule.exports = {\n      id: \"ic-language-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1335980__.p + \"sprite-a6820f.smartcharts.svg#ic-language-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-templates.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/common/ic-templates.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1336489__) => {\n\nmodule.exports = {\n      id: \"ic-templates-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1336489__.p + \"sprite-a6820f.smartcharts.svg#ic-templates-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/common/ic-theme.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/common/ic-theme.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1336984__) => {\n\nmodule.exports = {\n      id: \"ic-theme-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1336984__.p + \"sprite-a6820f.smartcharts.svg#ic-theme-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/delete/ic-delete.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/delete/ic-delete.svg ***!\n  \\*****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1337475__) => {\n\nmodule.exports = {\n      id: \"ic-delete-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1337475__.p + \"sprite-a6820f.smartcharts.svg#ic-delete-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/download/ic-csv.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/download/ic-csv.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1337964__) => {\n\nmodule.exports = {\n      id: \"ic-csv-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1337964__.p + \"sprite-a6820f.smartcharts.svg#ic-csv-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/download/ic-png.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/download/ic-png.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1338447__) => {\n\nmodule.exports = {\n      id: \"ic-png-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1338447__.p + \"sprite-a6820f.smartcharts.svg#ic-png-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-channel.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-channel.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1338954__) => {\n\nmodule.exports = {\n      id: \"ic-channel-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1338954__.p + \"sprite-a6820f.smartcharts.svg#ic-channel-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-continuous.svg\":\n/*!*************************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-continuous.svg ***!\n  \\*************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1339481__) => {\n\nmodule.exports = {\n      id: \"ic-continuous-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1339481__.p + \"sprite-a6820f.smartcharts.svg#ic-continuous-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-fibonacci-fan.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-fibonacci-fan.svg ***!\n  \\****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1340026__) => {\n\nmodule.exports = {\n      id: \"ic-fibonacci-fan-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1340026__.p + \"sprite-a6820f.smartcharts.svg#ic-fibonacci-fan-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-horizontal.svg\":\n/*!*************************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-horizontal.svg ***!\n  \\*************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1340565__) => {\n\nmodule.exports = {\n      id: \"ic-horizontal-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1340565__.p + \"sprite-a6820f.smartcharts.svg#ic-horizontal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-line.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-line.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1341074__) => {\n\nmodule.exports = {\n      id: \"ic-line-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1341074__.p + \"sprite-a6820f.smartcharts.svg#ic-line-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-ray.svg\":\n/*!******************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-ray.svg ***!\n  \\******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1341567__) => {\n\nmodule.exports = {\n      id: \"ic-ray-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1341567__.p + \"sprite-a6820f.smartcharts.svg#ic-ray-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-rectangle.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-rectangle.svg ***!\n  \\************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1342082__) => {\n\nmodule.exports = {\n      id: \"ic-rectangle-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1342082__.p + \"sprite-a6820f.smartcharts.svg#ic-rectangle-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-trend.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-trend.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1342593__) => {\n\nmodule.exports = {\n      id: \"ic-trend-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1342593__.p + \"sprite-a6820f.smartcharts.svg#ic-trend-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/draw-tools/ic-vertical.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/draw-tools/ic-vertical.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1343108__) => {\n\nmodule.exports = {\n      id: \"ic-vertical-usage\",\n      viewBox: \"0 0 24 24\",\n      url: __nested_webpack_require_1343108__.p + \"sprite-a6820f.smartcharts.svg#ic-vertical-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/dropdown/ic-dropdown.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/dropdown/ic-dropdown.svg ***!\n  \\*********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1343621__) => {\n\nmodule.exports = {\n      id: \"ic-dropdown-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1343621__.p + \"sprite-a6820f.smartcharts.svg#ic-dropdown-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/edit/ic-edit.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/edit/ic-edit.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1344102__) => {\n\nmodule.exports = {\n      id: \"ic-edit-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1344102__.p + \"sprite-a6820f.smartcharts.svg#ic-edit-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/favorite/ic-favorite-normal.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/favorite/ic-favorite-normal.svg ***!\n  \\****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1344635__) => {\n\nmodule.exports = {\n      id: \"ic-favorite-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1344635__.p + \"sprite-a6820f.smartcharts.svg#ic-favorite-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/aud.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/aud.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1345118__) => {\n\nmodule.exports = {\n      id: \"aud-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1345118__.p + \"sprite-a6820f.smartcharts.svg#aud-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/cad.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/cad.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1345571__) => {\n\nmodule.exports = {\n      id: \"cad-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1345571__.p + \"sprite-a6820f.smartcharts.svg#cad-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chf.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/chf.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1346024__) => {\n\nmodule.exports = {\n      id: \"chf-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1346024__.p + \"sprite-a6820f.smartcharts.svg#chf-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chinese-traditional.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/flags/chinese-traditional.svg ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1346541__) => {\n\nmodule.exports = {\n      id: \"chinese-traditional-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1346541__.p + \"sprite-a6820f.smartcharts.svg#chinese-traditional-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/chinese.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/chinese.svg ***!\n  \\**************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1347042__) => {\n\nmodule.exports = {\n      id: \"chinese-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1347042__.p + \"sprite-a6820f.smartcharts.svg#chinese-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/dutch.svg\":\n/*!************************************!*\\\n  !*** ./sass/icons/flags/dutch.svg ***!\n  \\************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1347511__) => {\n\nmodule.exports = {\n      id: \"dutch-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1347511__.p + \"sprite-a6820f.smartcharts.svg#dutch-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/eur.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/eur.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1347968__) => {\n\nmodule.exports = {\n      id: \"eur-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1347968__.p + \"sprite-a6820f.smartcharts.svg#eur-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/french.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/french.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1348433__) => {\n\nmodule.exports = {\n      id: \"french-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1348433__.p + \"sprite-a6820f.smartcharts.svg#french-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/gbp.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/gbp.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1348892__) => {\n\nmodule.exports = {\n      id: \"gbp-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1348892__.p + \"sprite-a6820f.smartcharts.svg#gbp-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/german.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/german.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1349357__) => {\n\nmodule.exports = {\n      id: \"german-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1349357__.p + \"sprite-a6820f.smartcharts.svg#german-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/hong kong.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/flags/hong kong.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1349840__) => {\n\nmodule.exports = {\n      id: \"hong kong-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1349840__.p + \"sprite-a6820f.smartcharts.svg#hong kong-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/indonesia.svg\":\n/*!****************************************!*\\\n  !*** ./sass/icons/flags/indonesia.svg ***!\n  \\****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1350329__) => {\n\nmodule.exports = {\n      id: \"indonesia-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1350329__.p + \"sprite-a6820f.smartcharts.svg#indonesia-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/italy.svg\":\n/*!************************************!*\\\n  !*** ./sass/icons/flags/italy.svg ***!\n  \\************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1350802__) => {\n\nmodule.exports = {\n      id: \"italy-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1350802__.p + \"sprite-a6820f.smartcharts.svg#italy-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/jpy.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/jpy.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1351259__) => {\n\nmodule.exports = {\n      id: \"jpy-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1351259__.p + \"sprite-a6820f.smartcharts.svg#jpy-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/korean.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/korean.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1351724__) => {\n\nmodule.exports = {\n      id: \"korean-usage\",\n      viewBox: \"0 0 36 24\",\n      url: __nested_webpack_require_1351724__.p + \"sprite-a6820f.smartcharts.svg#korean-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/mxn.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/mxn.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1352183__) => {\n\nmodule.exports = {\n      id: \"mxn-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1352183__.p + \"sprite-a6820f.smartcharts.svg#mxn-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/nok.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/nok.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1352636__) => {\n\nmodule.exports = {\n      id: \"nok-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1352636__.p + \"sprite-a6820f.smartcharts.svg#nok-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/nzd.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/nzd.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1353089__) => {\n\nmodule.exports = {\n      id: \"nzd-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1353089__.p + \"sprite-a6820f.smartcharts.svg#nzd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/pln.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/pln.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1353542__) => {\n\nmodule.exports = {\n      id: \"pln-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1353542__.p + \"sprite-a6820f.smartcharts.svg#pln-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/russia.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/russia.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1354007__) => {\n\nmodule.exports = {\n      id: \"russia-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1354007__.p + \"sprite-a6820f.smartcharts.svg#russia-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/sek.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/sek.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1354466__) => {\n\nmodule.exports = {\n      id: \"sek-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1354466__.p + \"sprite-a6820f.smartcharts.svg#sek-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/spanish.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/spanish.svg ***!\n  \\**************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1354935__) => {\n\nmodule.exports = {\n      id: \"spanish-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1354935__.p + \"sprite-a6820f.smartcharts.svg#spanish-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/thailand.svg\":\n/*!***************************************!*\\\n  !*** ./sass/icons/flags/thailand.svg ***!\n  \\***************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1355416__) => {\n\nmodule.exports = {\n      id: \"thailand-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1355416__.p + \"sprite-a6820f.smartcharts.svg#thailand-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/turkey.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/flags/turkey.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1355891__) => {\n\nmodule.exports = {\n      id: \"turkey-usage\",\n      viewBox: \"0 0 24 17\",\n      url: __nested_webpack_require_1355891__.p + \"sprite-a6820f.smartcharts.svg#turkey-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/usd.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/usd.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1356350__) => {\n\nmodule.exports = {\n      id: \"usd-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1356350__.p + \"sprite-a6820f.smartcharts.svg#usd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/vietnam.svg\":\n/*!**************************************!*\\\n  !*** ./sass/icons/flags/vietnam.svg ***!\n  \\**************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1356819__) => {\n\nmodule.exports = {\n      id: \"vietnam-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1356819__.p + \"sprite-a6820f.smartcharts.svg#vietnam-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/wallstreet.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/flags/wallstreet.svg ***!\n  \\*****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1357308__) => {\n\nmodule.exports = {\n      id: \"wallstreet-usage\",\n      viewBox: \"0 0 24 16\",\n      url: __nested_webpack_require_1357308__.p + \"sprite-a6820f.smartcharts.svg#wallstreet-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/flags/xau.svg\":\n/*!**********************************!*\\\n  !*** ./sass/icons/flags/xau.svg ***!\n  \\**********************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1357775__) => {\n\nmodule.exports = {\n      id: \"xau-usage\",\n      viewBox: \"0 0 8 8\",\n      url: __nested_webpack_require_1357775__.p + \"sprite-a6820f.smartcharts.svg#xau-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-adx.svg\":\n/*!******************************************!*\\\n  !*** ./sass/icons/indicators/ic-adx.svg ***!\n  \\******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1358258__) => {\n\nmodule.exports = {\n      id: \"ic-adx-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1358258__.p + \"sprite-a6820f.smartcharts.svg#ic-adx-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-alligator.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/indicators/ic-alligator.svg ***!\n  \\************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1358773__) => {\n\nmodule.exports = {\n      id: \"ic-alligator-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1358773__.p + \"sprite-a6820f.smartcharts.svg#ic-alligator-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-aroon.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/indicators/ic-aroon.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1359284__) => {\n\nmodule.exports = {\n      id: \"ic-aroon-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1359284__.p + \"sprite-a6820f.smartcharts.svg#ic-aroon-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-averages.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-averages.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1359799__) => {\n\nmodule.exports = {\n      id: \"ic-averages-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1359799__.p + \"sprite-a6820f.smartcharts.svg#ic-averages-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-awesome-oscillator.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/indicators/ic-awesome-oscillator.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1360360__) => {\n\nmodule.exports = {\n      id: \"ic-awesome-oscillator-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1360360__.p + \"sprite-a6820f.smartcharts.svg#ic-awesome-oscillator-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-bollinger.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/indicators/ic-bollinger.svg ***!\n  \\************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1360905__) => {\n\nmodule.exports = {\n      id: \"ic-bollinger-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1360905__.p + \"sprite-a6820f.smartcharts.svg#ic-bollinger-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-cat-averages.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/indicators/ic-cat-averages.svg ***!\n  \\***************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1361444__) => {\n\nmodule.exports = {\n      id: \"ic-cat-averages-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1361444__.p + \"sprite-a6820f.smartcharts.svg#ic-cat-averages-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-commodity-channel-index.svg\":\n/*!**************************************************************!*\\\n  !*** ./sass/icons/indicators/ic-commodity-channel-index.svg ***!\n  \\**************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1362033__) => {\n\nmodule.exports = {\n      id: \"ic-commodity-channel-index-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1362033__.p + \"sprite-a6820f.smartcharts.svg#ic-commodity-channel-index-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-donchian.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-donchian.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1362584__) => {\n\nmodule.exports = {\n      id: \"ic-donchian-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1362584__.p + \"sprite-a6820f.smartcharts.svg#ic-donchian-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-dtrended.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-dtrended.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1363105__) => {\n\nmodule.exports = {\n      id: \"ic-dtrended-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1363105__.p + \"sprite-a6820f.smartcharts.svg#ic-dtrended-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-envelope.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-envelope.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1363626__) => {\n\nmodule.exports = {\n      id: \"ic-envelope-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1363626__.p + \"sprite-a6820f.smartcharts.svg#ic-envelope-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-fractal-chaos.svg\":\n/*!****************************************************!*\\\n  !*** ./sass/icons/indicators/ic-fractal-chaos.svg ***!\n  \\****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1364167__) => {\n\nmodule.exports = {\n      id: \"ic-fractal-chaos-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1364167__.p + \"sprite-a6820f.smartcharts.svg#ic-fractal-chaos-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-gator.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/indicators/ic-gator.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1364686__) => {\n\nmodule.exports = {\n      id: \"ic-gator-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1364686__.p + \"sprite-a6820f.smartcharts.svg#ic-gator-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-ichimoku.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-ichimoku.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1365201__) => {\n\nmodule.exports = {\n      id: \"ic-ichimoku-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1365201__.p + \"sprite-a6820f.smartcharts.svg#ic-ichimoku-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-macd.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/indicators/ic-macd.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1365706__) => {\n\nmodule.exports = {\n      id: \"ic-macd-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1365706__.p + \"sprite-a6820f.smartcharts.svg#ic-macd-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-momentum.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/indicators/ic-momentum.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1366219__) => {\n\nmodule.exports = {\n      id: \"ic-momentum-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1366219__.p + \"sprite-a6820f.smartcharts.svg#ic-momentum-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-other.svg\":\n/*!********************************************!*\\\n  !*** ./sass/icons/indicators/ic-other.svg ***!\n  \\********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1366728__) => {\n\nmodule.exports = {\n      id: \"ic-other-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1366728__.p + \"sprite-a6820f.smartcharts.svg#ic-other-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-parabolic.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/indicators/ic-parabolic.svg ***!\n  \\************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1367247__) => {\n\nmodule.exports = {\n      id: \"ic-parabolic-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1367247__.p + \"sprite-a6820f.smartcharts.svg#ic-parabolic-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-rainbow.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/indicators/ic-rainbow.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1367766__) => {\n\nmodule.exports = {\n      id: \"ic-rainbow-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1367766__.p + \"sprite-a6820f.smartcharts.svg#ic-rainbow-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-rate-of-change.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/indicators/ic-rate-of-change.svg ***!\n  \\*****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1368309__) => {\n\nmodule.exports = {\n      id: \"ic-rate-of-change-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1368309__.p + \"sprite-a6820f.smartcharts.svg#ic-rate-of-change-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-rsi.svg\":\n/*!******************************************!*\\\n  !*** ./sass/icons/indicators/ic-rsi.svg ***!\n  \\******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1368822__) => {\n\nmodule.exports = {\n      id: \"ic-rsi-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1368822__.p + \"sprite-a6820f.smartcharts.svg#ic-rsi-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-stochastic-momentum.svg\":\n/*!**********************************************************!*\\\n  !*** ./sass/icons/indicators/ic-stochastic-momentum.svg ***!\n  \\**********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1369377__) => {\n\nmodule.exports = {\n      id: \"ic-stochastic-momentum-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1369377__.p + \"sprite-a6820f.smartcharts.svg#ic-stochastic-momentum-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-stochastic-oscillator.svg\":\n/*!************************************************************!*\\\n  !*** ./sass/icons/indicators/ic-stochastic-oscillator.svg ***!\n  \\************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1369972__) => {\n\nmodule.exports = {\n      id: \"ic-stochastic-oscillator-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1369972__.p + \"sprite-a6820f.smartcharts.svg#ic-stochastic-oscillator-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-trend-dark.svg\":\n/*!*************************************************!*\\\n  !*** ./sass/icons/indicators/ic-trend-dark.svg ***!\n  \\*************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1370527__) => {\n\nmodule.exports = {\n      id: \"ic-trend-dark-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1370527__.p + \"sprite-a6820f.smartcharts.svg#ic-trend-dark-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-trend-light.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/indicators/ic-trend-light.svg ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1371064__) => {\n\nmodule.exports = {\n      id: \"ic-trend-light-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1371064__.p + \"sprite-a6820f.smartcharts.svg#ic-trend-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-volatility.svg\":\n/*!*************************************************!*\\\n  !*** ./sass/icons/indicators/ic-volatility.svg ***!\n  \\*************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1371599__) => {\n\nmodule.exports = {\n      id: \"ic-volatility-usage\",\n      viewBox: \"0 0 17 16\",\n      url: __nested_webpack_require_1371599__.p + \"sprite-a6820f.smartcharts.svg#ic-volatility-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-william-percent.svg\":\n/*!******************************************************!*\\\n  !*** ./sass/icons/indicators/ic-william-percent.svg ***!\n  \\******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1372152__) => {\n\nmodule.exports = {\n      id: \"ic-william-percent-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1372152__.p + \"sprite-a6820f.smartcharts.svg#ic-william-percent-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/indicators/ic-zig-zag.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/indicators/ic-zig-zag.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1372683__) => {\n\nmodule.exports = {\n      id: \"ic-zig-zag-usage\",\n      viewBox: \"0 0 25 24\",\n      url: __nested_webpack_require_1372683__.p + \"sprite-a6820f.smartcharts.svg#ic-zig-zag-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/measure/ic-measure.svg\":\n/*!*******************************************!*\\\n  !*** ./sass/icons/measure/ic-measure.svg ***!\n  \\*******************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1373186__) => {\n\nmodule.exports = {\n      id: \"ic-measure-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1373186__.p + \"sprite-a6820f.smartcharts.svg#ic-measure-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-home.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-home.svg ***!\n  \\***************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1373721__) => {\n\nmodule.exports = {\n      id: \"ic-home-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1373721__.p + \"sprite-a6820f.smartcharts.svg#ic-home-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-scale-full.svg\":\n/*!*********************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-scale-full.svg ***!\n  \\*********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1374274__) => {\n\nmodule.exports = {\n      id: \"ic-scale-full-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1374274__.p + \"sprite-a6820f.smartcharts.svg#ic-scale-full-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-zoomin.svg\":\n/*!*****************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-zoomin.svg ***!\n  \\*****************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1374823__) => {\n\nmodule.exports = {\n      id: \"ic-zoomin-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1374823__.p + \"sprite-a6820f.smartcharts.svg#ic-zoomin-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/navigation-widgets/ic-zoomout.svg\":\n/*!******************************************************!*\\\n  !*** ./sass/icons/navigation-widgets/ic-zoomout.svg ***!\n  \\******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1375368__) => {\n\nmodule.exports = {\n      id: \"ic-zoomout-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1375368__.p + \"sprite-a6820f.smartcharts.svg#ic-zoomout-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/pencil/ic-pencil.svg\":\n/*!*****************************************!*\\\n  !*** ./sass/icons/pencil/ic-pencil.svg ***!\n  \\*****************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1375863__) => {\n\nmodule.exports = {\n      id: \"ic-pencil-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1375863__.p + \"sprite-a6820f.smartcharts.svg#ic-pencil-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/placeholder/ic-placeholder.svg\":\n/*!***************************************************!*\\\n  !*** ./sass/icons/placeholder/ic-placeholder.svg ***!\n  \\***************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1376396__) => {\n\nmodule.exports = {\n      id: \"ic-placeholder-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1376396__.p + \"sprite-a6820f.smartcharts.svg#ic-placeholder-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/search/ic-search-normal.svg\":\n/*!************************************************!*\\\n  !*** ./sass/icons/search/ic-search-normal.svg ***!\n  \\************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1376927__) => {\n\nmodule.exports = {\n      id: \"ic-search-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1376927__.p + \"sprite-a6820f.smartcharts.svg#ic-search-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/countdown/ic-countdown-dark-active.svg\":\n/*!*******************************************************************!*\\\n  !*** ./sass/icons/setting/countdown/ic-countdown-dark-active.svg ***!\n  \\*******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1377538__) => {\n\nmodule.exports = {\n      id: \"ic-countdown-dark-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1377538__.p + \"sprite-a6820f.smartcharts.svg#ic-countdown-dark-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/countdown/ic-countdown-dark-normal.svg\":\n/*!*******************************************************************!*\\\n  !*** ./sass/icons/setting/countdown/ic-countdown-dark-normal.svg ***!\n  \\*******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1378167__) => {\n\nmodule.exports = {\n      id: \"ic-countdown-dark-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1378167__.p + \"sprite-a6820f.smartcharts.svg#ic-countdown-dark-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/countdown/ic-countdown-light-active.svg\":\n/*!********************************************************************!*\\\n  !*** ./sass/icons/setting/countdown/ic-countdown-light-active.svg ***!\n  \\********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1378800__) => {\n\nmodule.exports = {\n      id: \"ic-countdown-light-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1378800__.p + \"sprite-a6820f.smartcharts.svg#ic-countdown-light-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/countdown/ic-countdown-light-normal.svg\":\n/*!********************************************************************!*\\\n  !*** ./sass/icons/setting/countdown/ic-countdown-light-normal.svg ***!\n  \\********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1379435__) => {\n\nmodule.exports = {\n      id: \"ic-countdown-light-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1379435__.p + \"sprite-a6820f.smartcharts.svg#ic-countdown-light-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-active.svg\":\n/*!*****************************************************************************!*\\\n  !*** ./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-active.svg ***!\n  \\*****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1380106__) => {\n\nmodule.exports = {\n      id: \"ic-highest-lowest-dark-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1380106__.p + \"sprite-a6820f.smartcharts.svg#ic-highest-lowest-dark-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-normal.svg\":\n/*!*****************************************************************************!*\\\n  !*** ./sass/icons/setting/highest-lowest/ic-highest-lowest-dark-normal.svg ***!\n  \\*****************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1380785__) => {\n\nmodule.exports = {\n      id: \"ic-highest-lowest-dark-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1380785__.p + \"sprite-a6820f.smartcharts.svg#ic-highest-lowest-dark-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-light-active.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/setting/highest-lowest/ic-highest-lowest-light-active.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1381468__) => {\n\nmodule.exports = {\n      id: \"ic-highest-lowest-light-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1381468__.p + \"sprite-a6820f.smartcharts.svg#ic-highest-lowest-light-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/highest-lowest/ic-highest-lowest-light-normal.svg\":\n/*!******************************************************************************!*\\\n  !*** ./sass/icons/setting/highest-lowest/ic-highest-lowest-light-normal.svg ***!\n  \\******************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1382153__) => {\n\nmodule.exports = {\n      id: \"ic-highest-lowest-light-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1382153__.p + \"sprite-a6820f.smartcharts.svg#ic-highest-lowest-light-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/historical/ic-historical-dark-active.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/setting/historical/ic-historical-dark-active.svg ***!\n  \\*********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1382802__) => {\n\nmodule.exports = {\n      id: \"ic-historical-dark-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1382802__.p + \"sprite-a6820f.smartcharts.svg#ic-historical-dark-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/historical/ic-historical-dark-normal.svg\":\n/*!*********************************************************************!*\\\n  !*** ./sass/icons/setting/historical/ic-historical-dark-normal.svg ***!\n  \\*********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1383441__) => {\n\nmodule.exports = {\n      id: \"ic-historical-dark-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1383441__.p + \"sprite-a6820f.smartcharts.svg#ic-historical-dark-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/historical/ic-historical-light-active.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/setting/historical/ic-historical-light-active.svg ***!\n  \\**********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1384084__) => {\n\nmodule.exports = {\n      id: \"ic-historical-light-active-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1384084__.p + \"sprite-a6820f.smartcharts.svg#ic-historical-light-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/historical/ic-historical-light-normal.svg\":\n/*!**********************************************************************!*\\\n  !*** ./sass/icons/setting/historical/ic-historical-light-normal.svg ***!\n  \\**********************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1384729__) => {\n\nmodule.exports = {\n      id: \"ic-historical-light-normal-usage\",\n      viewBox: \"0 0 160 120\",\n      url: __nested_webpack_require_1384729__.p + \"sprite-a6820f.smartcharts.svg#ic-historical-light-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/ic-theme-dark.svg\":\n/*!**********************************************!*\\\n  !*** ./sass/icons/setting/ic-theme-dark.svg ***!\n  \\**********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1385278__) => {\n\nmodule.exports = {\n      id: \"ic-theme-dark-usage\",\n      viewBox: \"0 0 236 180\",\n      url: __nested_webpack_require_1385278__.p + \"sprite-a6820f.smartcharts.svg#ic-theme-dark-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/setting/ic-theme-light.svg\":\n/*!***********************************************!*\\\n  !*** ./sass/icons/setting/ic-theme-light.svg ***!\n  \\***********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1385805__) => {\n\nmodule.exports = {\n      id: \"ic-theme-light-usage\",\n      viewBox: \"0 0 236 180\",\n      url: __nested_webpack_require_1385805__.p + \"sprite-a6820f.smartcharts.svg#ic-theme-light-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/shape/ic-empty-state.svg\":\n/*!*********************************************!*\\\n  !*** ./sass/icons/shape/ic-empty-state.svg ***!\n  \\*********************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1386326__) => {\n\nmodule.exports = {\n      id: \"ic-empty-state-usage\",\n      viewBox: \"0 0 128 118\",\n      url: __nested_webpack_require_1386326__.p + \"sprite-a6820f.smartcharts.svg#ic-empty-state-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/shape/ic-overwrite-state.svg\":\n/*!*************************************************!*\\\n  !*** ./sass/icons/shape/ic-overwrite-state.svg ***!\n  \\*************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1386863__) => {\n\nmodule.exports = {\n      id: \"ic-overwrite-state-usage\",\n      viewBox: \"0 0 128 128\",\n      url: __nested_webpack_require_1386863__.p + \"sprite-a6820f.smartcharts.svg#ic-overwrite-state-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/basket_index/ic-basket-active.svg\":\n/*!**************************************************************!*\\\n  !*** ./sass/icons/sidebar/basket_index/ic-basket-active.svg ***!\n  \\**************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1387460__) => {\n\nmodule.exports = {\n      id: \"ic-basket-active-usage\",\n      viewBox: \"0 0 32 32\",\n      url: __nested_webpack_require_1387460__.p + \"sprite-a6820f.smartcharts.svg#ic-basket-active-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/basket_index/ic-basket-normal.svg\":\n/*!**************************************************************!*\\\n  !*** ./sass/icons/sidebar/basket_index/ic-basket-normal.svg ***!\n  \\**************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1388051__) => {\n\nmodule.exports = {\n      id: \"ic-basket-normal-usage\",\n      viewBox: \"0 0 16 15\",\n      url: __nested_webpack_require_1388051__.p + \"sprite-a6820f.smartcharts.svg#ic-basket-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/commodities/ic-commodities-normal.svg\":\n/*!******************************************************************!*\\\n  !*** ./sass/icons/sidebar/commodities/ic-commodities-normal.svg ***!\n  \\******************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1388658__) => {\n\nmodule.exports = {\n      id: \"ic-commodities-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1388658__.p + \"sprite-a6820f.smartcharts.svg#ic-commodities-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/cryptocurrency/ic-cryptocurrency-normal.svg\":\n/*!************************************************************************!*\\\n  !*** ./sass/icons/sidebar/cryptocurrency/ic-cryptocurrency-normal.svg ***!\n  \\************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1389299__) => {\n\nmodule.exports = {\n      id: \"ic-cryptocurrency-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1389299__.p + \"sprite-a6820f.smartcharts.svg#ic-cryptocurrency-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/forex/ic-forex-normal.svg\":\n/*!******************************************************!*\\\n  !*** ./sass/icons/sidebar/forex/ic-forex-normal.svg ***!\n  \\******************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1389874__) => {\n\nmodule.exports = {\n      id: \"ic-forex-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1389874__.p + \"sprite-a6820f.smartcharts.svg#ic-forex-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/indices/ic-indices-normal.svg\":\n/*!**********************************************************!*\\\n  !*** ./sass/icons/sidebar/indices/ic-indices-normal.svg ***!\n  \\**********************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1390447__) => {\n\nmodule.exports = {\n      id: \"ic-indices-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1390447__.p + \"sprite-a6820f.smartcharts.svg#ic-indices-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/otc/ic-otc-normal.svg\":\n/*!**************************************************!*\\\n  !*** ./sass/icons/sidebar/otc/ic-otc-normal.svg ***!\n  \\**************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1390992__) => {\n\nmodule.exports = {\n      id: \"ic-otc-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1390992__.p + \"sprite-a6820f.smartcharts.svg#ic-otc-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/synth_index/ic-synth-normal.svg\":\n/*!************************************************************!*\\\n  !*** ./sass/icons/sidebar/synth_index/ic-synth-normal.svg ***!\n  \\************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1391569__) => {\n\nmodule.exports = {\n      id: \"ic-synth-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1391569__.p + \"sprite-a6820f.smartcharts.svg#ic-synth-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/sidebar/volatility/ic-volatility-normal.svg\":\n/*!****************************************************************!*\\\n  !*** ./sass/icons/sidebar/volatility/ic-volatility-normal.svg ***!\n  \\****************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1392166__) => {\n\nmodule.exports = {\n      id: \"ic-volatility-normal-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1392166__.p + \"sprite-a6820f.smartcharts.svg#ic-volatility-normal-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/tick/ic-tick.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/tick/ic-tick.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1392665__) => {\n\nmodule.exports = {\n      id: \"ic-tick-usage\",\n      viewBox: \"0 0 16 16\",\n      url: __nested_webpack_require_1392665__.p + \"sprite-a6820f.smartcharts.svg#ic-tick-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./sass/icons/time/ic-time.svg\":\n/*!*************************************!*\\\n  !*** ./sass/icons/time/ic-time.svg ***!\n  \\*************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1393138__) => {\n\nmodule.exports = {\n      id: \"ic-time-usage\",\n      viewBox: \"0 0 12 12\",\n      url: __nested_webpack_require_1393138__.p + \"sprite-a6820f.smartcharts.svg#ic-time-usage\",\n      toString: function () {\n        return this.url;\n      }\n    }\n\n/***/ }),\n\n/***/ \"./translation lazy recursive ^\\\\.\\\\/.*\\\\.json$\":\n/*!********************************************************************************!*\\\n  !*** ./translation/ lazy ^\\.\\/.*\\.json$ chunkName: [request] namespace object ***!\n  \\********************************************************************************/\n/***/ ((module, __unused_webpack_exports, __nested_webpack_require_1393757__) => {\n\nvar map = {\n\t\"./ar.json\": [\n\t\t\"./translation/ar.json\",\n\t\t\"ar-json\"\n\t],\n\t\"./bn.json\": [\n\t\t\"./translation/bn.json\",\n\t\t\"bn-json\"\n\t],\n\t\"./de.json\": [\n\t\t\"./translation/de.json\",\n\t\t\"de-json\"\n\t],\n\t\"./es.json\": [\n\t\t\"./translation/es.json\",\n\t\t\"es-json\"\n\t],\n\t\"./fr.json\": [\n\t\t\"./translation/fr.json\",\n\t\t\"fr-json\"\n\t],\n\t\"./id.json\": [\n\t\t\"./translation/id.json\",\n\t\t\"id-json\"\n\t],\n\t\"./it.json\": [\n\t\t\"./translation/it.json\",\n\t\t\"it-json\"\n\t],\n\t\"./ko.json\": [\n\t\t\"./translation/ko.json\",\n\t\t\"ko-json\"\n\t],\n\t\"./messages.json\": [\n\t\t\"./translation/messages.json\",\n\t\t\"messages-json\"\n\t],\n\t\"./nl.json\": [\n\t\t\"./translation/nl.json\",\n\t\t\"nl-json\"\n\t],\n\t\"./pl.json\": [\n\t\t\"./translation/pl.json\",\n\t\t\"pl-json\"\n\t],\n\t\"./pt.json\": [\n\t\t\"./translation/pt.json\",\n\t\t\"pt-json\"\n\t],\n\t\"./ru.json\": [\n\t\t\"./translation/ru.json\",\n\t\t\"ru-json\"\n\t],\n\t\"./si.json\": [\n\t\t\"./translation/si.json\",\n\t\t\"si-json\"\n\t],\n\t\"./th.json\": [\n\t\t\"./translation/th.json\",\n\t\t\"th-json\"\n\t],\n\t\"./tr.json\": [\n\t\t\"./translation/tr.json\",\n\t\t\"tr-json\"\n\t],\n\t\"./vi.json\": [\n\t\t\"./translation/vi.json\",\n\t\t\"vi-json\"\n\t],\n\t\"./zh.json\": [\n\t\t\"./translation/zh.json\",\n\t\t\"zh-json\"\n\t],\n\t\"./zh_cn.json\": [\n\t\t\"./translation/zh_cn.json\",\n\t\t\"zh_cn-json\"\n\t],\n\t\"./zh_tw.json\": [\n\t\t\"./translation/zh_tw.json\",\n\t\t\"zh_tw-json\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__nested_webpack_require_1393757__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __nested_webpack_require_1393757__.e(ids[1]).then(() => {\n\t\treturn __nested_webpack_require_1393757__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./translation lazy recursive ^\\\\.\\\\/.*\\\\.json$\";\nmodule.exports = webpackAsyncContext;\n\n/***/ }),\n\n/***/ \"react-dom\":\n/*!***********************************************************************************!*\\\n  !*** external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"root\":\"ReactDOM\"} ***!\n  \\***********************************************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;\n\n/***/ }),\n\n/***/ \"react-transition-group\":\n/*!*************************************************************************************************************************!*\\\n  !*** external {\"commonjs\":\"react-transition-group\",\"commonjs2\":\"react-transition-group\",\"root\":\"ReactTransitionGroup\"} ***!\n  \\*************************************************************************************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react_transition_group__;\n\n/***/ }),\n\n/***/ \"react\":\n/*!************************************************************************!*\\\n  !*** external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\"} ***!\n  \\************************************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\n\n/***/ }),\n\n/***/ \"moment\":\n/*!***************************************************************************!*\\\n  !*** external {\"root\":\"moment\",\"commonjs\":\"moment\",\"commonjs2\":\"moment\"} ***!\n  \\***************************************************************************/\n/***/ ((module) => {\n\n\"use strict\";\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_moment__;\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_1397399__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_1397399__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_1397399__.m = __webpack_modules__;\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t(() => {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__nested_webpack_require_1397399__.n = (module) => {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\t() => (module['default']) :\n/******/ \t\t\t\t() => (module);\n/******/ \t\t\t__nested_webpack_require_1397399__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/create fake namespace object */\n/******/ \t(() => {\n/******/ \t\tvar getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\n/******/ \t\tvar leafPrototypes;\n/******/ \t\t// create a fake namespace object\n/******/ \t\t// mode & 1: value is a module id, require it\n/******/ \t\t// mode & 2: merge all properties of value into the ns\n/******/ \t\t// mode & 4: return value when already ns object\n/******/ \t\t// mode & 16: return value when it's Promise-like\n/******/ \t\t// mode & 8|1: behave like require\n/******/ \t\t__nested_webpack_require_1397399__.t = function(value, mode) {\n/******/ \t\t\tif(mode & 1) value = this(value);\n/******/ \t\t\tif(mode & 8) return value;\n/******/ \t\t\tif(typeof value === 'object' && value) {\n/******/ \t\t\t\tif((mode & 4) && value.__esModule) return value;\n/******/ \t\t\t\tif((mode & 16) && typeof value.then === 'function') return value;\n/******/ \t\t\t}\n/******/ \t\t\tvar ns = Object.create(null);\n/******/ \t\t\t__nested_webpack_require_1397399__.r(ns);\n/******/ \t\t\tvar def = {};\n/******/ \t\t\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n/******/ \t\t\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n/******/ \t\t\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n/******/ \t\t\t}\n/******/ \t\t\tdef['default'] = () => (value);\n/******/ \t\t\t__nested_webpack_require_1397399__.d(ns, def);\n/******/ \t\t\treturn ns;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t(() => {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__nested_webpack_require_1397399__.d = (exports, definition) => {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__nested_webpack_require_1397399__.o(definition, key) && !__nested_webpack_require_1397399__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/ensure chunk */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_1397399__.f = {};\n/******/ \t\t// This file contains only the entry chunk.\n/******/ \t\t// The chunk loading function for additional chunks\n/******/ \t\t__nested_webpack_require_1397399__.e = (chunkId) => {\n/******/ \t\t\treturn Promise.all(Object.keys(__nested_webpack_require_1397399__.f).reduce((promises, key) => {\n/******/ \t\t\t\t__nested_webpack_require_1397399__.f[key](chunkId, promises);\n/******/ \t\t\t\treturn promises;\n/******/ \t\t\t}, []));\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/get javascript chunk filename */\n/******/ \t(() => {\n/******/ \t\t// This function allow to reference async chunks\n/******/ \t\t__nested_webpack_require_1397399__.u = (chunkId) => {\n/******/ \t\t\t// return url for filenames based on template\n/******/ \t\t\treturn \"\" + chunkId + \"-\" + {\"ar-json\":\"646390\",\"bn-json\":\"ef1a8e\",\"de-json\":\"21a098\",\"es-json\":\"aab9ab\",\"fr-json\":\"6d7336\",\"id-json\":\"cccc5d\",\"it-json\":\"49c544\",\"ko-json\":\"8a4521\",\"messages-json\":\"25dbdf\",\"nl-json\":\"01ab10\",\"pl-json\":\"3ba93e\",\"pt-json\":\"ea148a\",\"ru-json\":\"34cc42\",\"si-json\":\"717521\",\"th-json\":\"7c1492\",\"tr-json\":\"9ba125\",\"vi-json\":\"05c446\",\"zh-json\":\"3b763c\",\"zh_cn-json\":\"ecbeca\",\"zh_tw-json\":\"fde027\",\"resize-observer-polyfill\":\"8d7e7d\",\"html2canvas\":\"094fa7\",\"flutter-chart-adapter\":\"a37f9c\"}[chunkId] + \".smartcharts.js\";\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/get mini-css chunk filename */\n/******/ \t(() => {\n/******/ \t\t// This function allow to reference async chunks\n/******/ \t\t__nested_webpack_require_1397399__.miniCssF = (chunkId) => {\n/******/ \t\t\t// return url for filenames based on template\n/******/ \t\t\treturn undefined;\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/global */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_1397399__.g = (function() {\n/******/ \t\t\tif (typeof globalThis === 'object') return globalThis;\n/******/ \t\t\ttry {\n/******/ \t\t\t\treturn this || new Function('return this')();\n/******/ \t\t\t} catch (e) {\n/******/ \t\t\t\tif (typeof window === 'object') return window;\n/******/ \t\t\t}\n/******/ \t\t})();\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_1397399__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/load script */\n/******/ \t(() => {\n/******/ \t\tvar inProgress = {};\n/******/ \t\tvar dataWebpackPrefix = \"smartcharts:\";\n/******/ \t\t// loadScript function to load a script via script tag\n/******/ \t\t__nested_webpack_require_1397399__.l = (url, done, key, chunkId) => {\n/******/ \t\t\tif(inProgress[url]) { inProgress[url].push(done); return; }\n/******/ \t\t\tvar script, needAttach;\n/******/ \t\t\tif(key !== undefined) {\n/******/ \t\t\t\tvar scripts = document.getElementsByTagName(\"script\");\n/******/ \t\t\t\tfor(var i = 0; i < scripts.length; i++) {\n/******/ \t\t\t\t\tvar s = scripts[i];\n/******/ \t\t\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t\tif(!script) {\n/******/ \t\t\t\tneedAttach = true;\n/******/ \t\t\t\tscript = document.createElement('script');\n/******/ \t\t\n/******/ \t\t\t\tscript.charset = 'utf-8';\n/******/ \t\t\t\tscript.timeout = 120;\n/******/ \t\t\t\tif (__nested_webpack_require_1397399__.nc) {\n/******/ \t\t\t\t\tscript.setAttribute(\"nonce\", __nested_webpack_require_1397399__.nc);\n/******/ \t\t\t\t}\n/******/ \t\t\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n/******/ \t\t\t\tscript.src = url;\n/******/ \t\t\t}\n/******/ \t\t\tinProgress[url] = [done];\n/******/ \t\t\tvar onScriptComplete = (prev, event) => {\n/******/ \t\t\t\t// avoid mem leaks in IE.\n/******/ \t\t\t\tscript.onerror = script.onload = null;\n/******/ \t\t\t\tclearTimeout(timeout);\n/******/ \t\t\t\tvar doneFns = inProgress[url];\n/******/ \t\t\t\tdelete inProgress[url];\n/******/ \t\t\t\tscript.parentNode && script.parentNode.removeChild(script);\n/******/ \t\t\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n/******/ \t\t\t\tif(prev) return prev(event);\n/******/ \t\t\t}\n/******/ \t\t\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n/******/ \t\t\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n/******/ \t\t\tscript.onload = onScriptComplete.bind(null, script.onload);\n/******/ \t\t\tneedAttach && document.head.appendChild(script);\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/make namespace object */\n/******/ \t(() => {\n/******/ \t\t// define __esModule on exports\n/******/ \t\t__nested_webpack_require_1397399__.r = (exports) => {\n/******/ \t\t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t\t}\n/******/ \t\t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t\t};\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/publicPath */\n/******/ \t(() => {\n/******/ \t\t__nested_webpack_require_1397399__.p = \"\";\n/******/ \t})();\n/******/ \t\n/******/ \t/* webpack/runtime/jsonp chunk loading */\n/******/ \t(() => {\n/******/ \t\t// no baseURI\n/******/ \t\t\n/******/ \t\t// object to store loaded and loading chunks\n/******/ \t\t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n/******/ \t\t// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\n/******/ \t\tvar installedChunks = {\n/******/ \t\t\t\"main\": 0\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t__nested_webpack_require_1397399__.f.j = (chunkId, promises) => {\n/******/ \t\t\t\t// JSONP chunk loading for javascript\n/******/ \t\t\t\tvar installedChunkData = __nested_webpack_require_1397399__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n/******/ \t\t\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n/******/ \t\t\n/******/ \t\t\t\t\t// a Promise means \"currently loading\".\n/******/ \t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\tpromises.push(installedChunkData[2]);\n/******/ \t\t\t\t\t} else {\n/******/ \t\t\t\t\t\tif(true) { // all chunks have JS\n/******/ \t\t\t\t\t\t\t// setup Promise in chunk cache\n/******/ \t\t\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n/******/ \t\t\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n/******/ \t\t\n/******/ \t\t\t\t\t\t\t// start chunk loading\n/******/ \t\t\t\t\t\t\tvar url = __nested_webpack_require_1397399__.p + __nested_webpack_require_1397399__.u(chunkId);\n/******/ \t\t\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n/******/ \t\t\t\t\t\t\tvar error = new Error();\n/******/ \t\t\t\t\t\t\tvar loadingEnded = (event) => {\n/******/ \t\t\t\t\t\t\t\tif(__nested_webpack_require_1397399__.o(installedChunks, chunkId)) {\n/******/ \t\t\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n/******/ \t\t\t\t\t\t\t\t\tif(installedChunkData) {\n/******/ \t\t\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n/******/ \t\t\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n/******/ \t\t\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n/******/ \t\t\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n/******/ \t\t\t\t\t\t\t\t\t\terror.type = errorType;\n/******/ \t\t\t\t\t\t\t\t\t\terror.request = realSrc;\n/******/ \t\t\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n/******/ \t\t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t\t}\n/******/ \t\t\t\t\t\t\t};\n/******/ \t\t\t\t\t\t\t__nested_webpack_require_1397399__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n/******/ \t\t\t\t\t\t}\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t};\n/******/ \t\t\n/******/ \t\t// no prefetching\n/******/ \t\t\n/******/ \t\t// no preloaded\n/******/ \t\t\n/******/ \t\t// no HMR\n/******/ \t\t\n/******/ \t\t// no HMR manifest\n/******/ \t\t\n/******/ \t\t// no on chunks loaded\n/******/ \t\t\n/******/ \t\t// install a JSONP callback for chunk loading\n/******/ \t\tvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n/******/ \t\t\tvar chunkIds = data[0];\n/******/ \t\t\tvar moreModules = data[1];\n/******/ \t\t\tvar runtime = data[2];\n/******/ \t\t\t// add \"moreModules\" to the modules object,\n/******/ \t\t\t// then flag all \"chunkIds\" as loaded and fire callback\n/******/ \t\t\tvar moduleId, chunkId, i = 0;\n/******/ \t\t\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n/******/ \t\t\t\tfor(moduleId in moreModules) {\n/******/ \t\t\t\t\tif(__nested_webpack_require_1397399__.o(moreModules, moduleId)) {\n/******/ \t\t\t\t\t\t__nested_webpack_require_1397399__.m[moduleId] = moreModules[moduleId];\n/******/ \t\t\t\t\t}\n/******/ \t\t\t\t}\n/******/ \t\t\t\tif(runtime) var result = runtime(__nested_webpack_require_1397399__);\n/******/ \t\t\t}\n/******/ \t\t\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n/******/ \t\t\tfor(;i < chunkIds.length; i++) {\n/******/ \t\t\t\tchunkId = chunkIds[i];\n/******/ \t\t\t\tif(__nested_webpack_require_1397399__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n/******/ \t\t\t\t\tinstalledChunks[chunkId][0]();\n/******/ \t\t\t\t}\n/******/ \t\t\t\tinstalledChunks[chunkId] = 0;\n/******/ \t\t\t}\n/******/ \t\t\n/******/ \t\t}\n/******/ \t\t\n/******/ \t\tvar chunkLoadingGlobal = self[\"webpackChunksmartcharts\"] = self[\"webpackChunksmartcharts\"] || [];\n/******/ \t\tchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\n/******/ \t\tchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n/******/ \t})();\n/******/ \t\n/************************************************************************/\nvar __nested_webpack_exports__ = {};\n// This entry need to be wrapped in an IIFE because it need to be in strict mode.\n(() => {\n\"use strict\";\n/*!**********************!*\\\n  !*** ./src/index.ts ***!\n  \\**********************/\n__nested_webpack_require_1397399__.r(__nested_webpack_exports__);\n/* harmony export */ __nested_webpack_require_1397399__.d(__nested_webpack_exports__, {\n/* harmony export */   \"Barrier\": () => (/* reexport safe */ _components_Barrier__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"ChartMode\": () => (/* reexport safe */ _components_ChartMode__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"ChartSetting\": () => (/* reexport safe */ _components_ChartSetting__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   \"ChartSize\": () => (/* reexport safe */ _components_ChartSize__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   \"ChartTitle\": () => (/* reexport safe */ _components_ChartTitle__WEBPACK_IMPORTED_MODULE_13__[\"default\"]),\n/* harmony export */   \"ChartTypes\": () => (/* reexport safe */ _components_ChartTypes__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"CrosshairToggle\": () => (/* reexport safe */ _components_CrosshairToggle__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   \"DrawTools\": () => (/* reexport safe */ _components_DrawTools__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   \"LogActions\": () => (/* reexport safe */ _utils_ga__WEBPACK_IMPORTED_MODULE_17__.LogActions),\n/* harmony export */   \"LogCategories\": () => (/* reexport safe */ _utils_ga__WEBPACK_IMPORTED_MODULE_17__.LogCategories),\n/* harmony export */   \"Marker\": () => (/* binding */ Marker),\n/* harmony export */   \"PendingPromise\": () => (/* reexport safe */ _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"Share\": () => (/* reexport safe */ _components_Share__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   \"SmartChart\": () => (/* reexport safe */ _components_SmartChart__WEBPACK_IMPORTED_MODULE_12__[\"default\"]),\n/* harmony export */   \"StudyLegend\": () => (/* reexport safe */ _components_StudyLegend__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"Timeperiod\": () => (/* reexport safe */ _components_Timeperiod__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   \"ToolbarWidget\": () => (/* reexport safe */ _components_ToolbarWidget__WEBPACK_IMPORTED_MODULE_15__[\"default\"]),\n/* harmony export */   \"Views\": () => (/* reexport safe */ _components_Views__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   \"createObjectFromLocalStorage\": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_16__.createObjectFromLocalStorage),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"logEvent\": () => (/* reexport safe */ _utils_ga__WEBPACK_IMPORTED_MODULE_17__.logEvent),\n/* harmony export */   \"setSmartChartsPublicPath\": () => (/* binding */ setSmartChartsPublicPath)\n/* harmony export */ });\n/* harmony import */ var _components_Barrier__WEBPACK_IMPORTED_MODULE_0__ = __nested_webpack_require_1397399__(/*! ./components/Barrier */ \"./src/components/Barrier.tsx\");\n/* harmony import */ var _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__ = __nested_webpack_require_1397399__(/*! ./utils/PendingPromise */ \"./src/utils/PendingPromise.ts\");\n/* harmony import */ var _components_ChartTypes__WEBPACK_IMPORTED_MODULE_2__ = __nested_webpack_require_1397399__(/*! ./components/ChartTypes */ \"./src/components/ChartTypes.tsx\");\n/* harmony import */ var _components_ChartMode__WEBPACK_IMPORTED_MODULE_3__ = __nested_webpack_require_1397399__(/*! ./components/ChartMode */ \"./src/components/ChartMode.tsx\");\n/* harmony import */ var _components_StudyLegend__WEBPACK_IMPORTED_MODULE_4__ = __nested_webpack_require_1397399__(/*! ./components/StudyLegend */ \"./src/components/StudyLegend.tsx\");\n/* harmony import */ var _components_Views__WEBPACK_IMPORTED_MODULE_5__ = __nested_webpack_require_1397399__(/*! ./components/Views */ \"./src/components/Views.tsx\");\n/* harmony import */ var _components_CrosshairToggle__WEBPACK_IMPORTED_MODULE_6__ = __nested_webpack_require_1397399__(/*! ./components/CrosshairToggle */ \"./src/components/CrosshairToggle.tsx\");\n/* harmony import */ var _components_Timeperiod__WEBPACK_IMPORTED_MODULE_7__ = __nested_webpack_require_1397399__(/*! ./components/Timeperiod */ \"./src/components/Timeperiod.tsx\");\n/* harmony import */ var _components_ChartSize__WEBPACK_IMPORTED_MODULE_8__ = __nested_webpack_require_1397399__(/*! ./components/ChartSize */ \"./src/components/ChartSize.tsx\");\n/* harmony import */ var _components_DrawTools__WEBPACK_IMPORTED_MODULE_9__ = __nested_webpack_require_1397399__(/*! ./components/DrawTools */ \"./src/components/DrawTools.tsx\");\n/* harmony import */ var _components_ChartSetting__WEBPACK_IMPORTED_MODULE_10__ = __nested_webpack_require_1397399__(/*! ./components/ChartSetting */ \"./src/components/ChartSetting.tsx\");\n/* harmony import */ var _components_Share__WEBPACK_IMPORTED_MODULE_11__ = __nested_webpack_require_1397399__(/*! ./components/Share */ \"./src/components/Share.tsx\");\n/* harmony import */ var _components_SmartChart__WEBPACK_IMPORTED_MODULE_12__ = __nested_webpack_require_1397399__(/*! ./components/SmartChart */ \"./src/components/SmartChart.tsx\");\n/* harmony import */ var _components_ChartTitle__WEBPACK_IMPORTED_MODULE_13__ = __nested_webpack_require_1397399__(/*! ./components/ChartTitle */ \"./src/components/ChartTitle.tsx\");\n/* harmony import */ var _components_FastMarker__WEBPACK_IMPORTED_MODULE_14__ = __nested_webpack_require_1397399__(/*! ./components/FastMarker */ \"./src/components/FastMarker.tsx\");\n/* harmony import */ var _components_ToolbarWidget__WEBPACK_IMPORTED_MODULE_15__ = __nested_webpack_require_1397399__(/*! ./components/ToolbarWidget */ \"./src/components/ToolbarWidget.tsx\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_16__ = __nested_webpack_require_1397399__(/*! ./utils */ \"./src/utils/index.ts\");\n/* harmony import */ var _utils_ga__WEBPACK_IMPORTED_MODULE_17__ = __nested_webpack_require_1397399__(/*! ./utils/ga */ \"./src/utils/ga.ts\");\n/* harmony import */ var _overrides__WEBPACK_IMPORTED_MODULE_18__ = __nested_webpack_require_1397399__(/*! ./overrides */ \"./src/overrides.ts\");\n/* harmony import */ var _overrides__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__nested_webpack_require_1397399__.n(_overrides__WEBPACK_IMPORTED_MODULE_18__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction setSmartChartsPublicPath(path) {\n  __nested_webpack_require_1397399__.p = path; // eslint-disable-line\n}\n\nconst Marker = _components_FastMarker__WEBPACK_IMPORTED_MODULE_14__[\"default\"];\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  Barrier: _components_Barrier__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n  ChartSetting: _components_ChartSetting__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n  ChartSize: _components_ChartSize__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n  ChartTitle: _components_ChartTitle__WEBPACK_IMPORTED_MODULE_13__[\"default\"],\n  ChartTypes: _components_ChartTypes__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  ChartMode: _components_ChartMode__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n  createObjectFromLocalStorage: _utils__WEBPACK_IMPORTED_MODULE_16__.createObjectFromLocalStorage,\n  CrosshairToggle: _components_CrosshairToggle__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n  DrawTools: _components_DrawTools__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n  FastMarker: _components_FastMarker__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  Marker: _components_FastMarker__WEBPACK_IMPORTED_MODULE_14__[\"default\"],\n  PendingPromise: _utils_PendingPromise__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  setSmartChartsPublicPath,\n  Share: _components_Share__WEBPACK_IMPORTED_MODULE_11__[\"default\"],\n  SmartChart: _components_SmartChart__WEBPACK_IMPORTED_MODULE_12__[\"default\"],\n  StudyLegend: _components_StudyLegend__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n  Timeperiod: _components_Timeperiod__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n  Views: _components_Views__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n  ToolbarWidget: _components_ToolbarWidget__WEBPACK_IMPORTED_MODULE_15__[\"default\"],\n  logEvent: _utils_ga__WEBPACK_IMPORTED_MODULE_17__.logEvent,\n  LogCategories: _utils_ga__WEBPACK_IMPORTED_MODULE_17__.LogCategories,\n  LogActions: _utils_ga__WEBPACK_IMPORTED_MODULE_17__.LogActions\n});\n})();\n\n__nested_webpack_exports__ = __nested_webpack_exports__[\"default\"];\n/******/ \treturn __nested_webpack_exports__;\n/******/ })()\n;\n});\n//# sourceMappingURL=smartcharts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@deriv/deriv-charts-beta/dist/smartcharts.js\n");

/***/ }),

/***/ "../../node_modules/react-transition-group/esm/ReplaceTransition.js":
/*!**************************************************************************!*\
  !*** ../../node_modules/react-transition-group/esm/ReplaceTransition.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/objectWithoutPropertiesLoose */ \"../../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! prop-types */ \"../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"react-dom\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TransitionGroup */ \"../../node_modules/react-transition-group/esm/TransitionGroup.js\");\n\n\n\n\n\n\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\nvar ReplaceTransition = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n    var child = react__WEBPACK_IMPORTED_MODULE_2___default().Children.toArray(children)[idx];\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n\n    if (this.props[handler]) {\n      var maybeNode = child.props.nodeRef ? undefined : react_dom__WEBPACK_IMPORTED_MODULE_3___default().findDOMNode(this);\n      this.props[handler](maybeNode);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = (0,_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = react__WEBPACK_IMPORTED_MODULE_2___default().Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_2___default().createElement(_TransitionGroup__WEBPACK_IMPORTED_MODULE_4__[\"default\"], props, inProp ? react__WEBPACK_IMPORTED_MODULE_2___default().cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : react__WEBPACK_IMPORTED_MODULE_2___default().cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}((react__WEBPACK_IMPORTED_MODULE_2___default().Component));\n\nReplaceTransition.propTypes =  true ? {\n  in: (prop_types__WEBPACK_IMPORTED_MODULE_5___default().bool.isRequired),\n  children: function children(props, propName) {\n    if (react__WEBPACK_IMPORTED_MODULE_2___default().Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : 0;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReplaceTransition);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1JlcGxhY2VUcmFuc2l0aW9uLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi90cmFkZXIvLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL1JlcGxhY2VUcmFuc2l0aW9uLmpzPzlkZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlXCI7XG5pbXBvcnQgX2luaGVyaXRzTG9vc2UgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzTG9vc2VcIjtcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgVHJhbnNpdGlvbkdyb3VwIGZyb20gJy4vVHJhbnNpdGlvbkdyb3VwJztcbi8qKlxuICogVGhlIGA8UmVwbGFjZVRyYW5zaXRpb24+YCBjb21wb25lbnQgaXMgYSBzcGVjaWFsaXplZCBgVHJhbnNpdGlvbmAgY29tcG9uZW50XG4gKiB0aGF0IGFuaW1hdGVzIGJldHdlZW4gdHdvIGNoaWxkcmVuLlxuICpcbiAqIGBgYGpzeFxuICogPFJlcGxhY2VUcmFuc2l0aW9uIGluPlxuICogICA8RmFkZT48ZGl2PkkgYXBwZWFyIGZpcnN0PC9kaXY+PC9GYWRlPlxuICogICA8RmFkZT48ZGl2PkkgcmVwbGFjZSB0aGUgYWJvdmU8L2Rpdj48L0ZhZGU+XG4gKiA8L1JlcGxhY2VUcmFuc2l0aW9uPlxuICogYGBgXG4gKi9cblxudmFyIFJlcGxhY2VUcmFuc2l0aW9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0c0xvb3NlKFJlcGxhY2VUcmFuc2l0aW9uLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBSZXBsYWNlVHJhbnNpdGlvbigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgX2FyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBfYXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICB9XG5cbiAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KF9hcmdzKSkgfHwgdGhpcztcblxuICAgIF90aGlzLmhhbmRsZUVudGVyID0gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgIGFyZ3NbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUxpZmVjeWNsZSgnb25FbnRlcicsIDAsIGFyZ3MpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVFbnRlcmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuMyksIF9rZXkzID0gMDsgX2tleTMgPCBfbGVuMzsgX2tleTMrKykge1xuICAgICAgICBhcmdzW19rZXkzXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVMaWZlY3ljbGUoJ29uRW50ZXJpbmcnLCAwLCBhcmdzKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlRW50ZXJlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIGZvciAodmFyIF9sZW40ID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IG5ldyBBcnJheShfbGVuNCksIF9rZXk0ID0gMDsgX2tleTQgPCBfbGVuNDsgX2tleTQrKykge1xuICAgICAgICBhcmdzW19rZXk0XSA9IGFyZ3VtZW50c1tfa2V5NF07XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfdGhpcy5oYW5kbGVMaWZlY3ljbGUoJ29uRW50ZXJlZCcsIDAsIGFyZ3MpO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVFeGl0ID0gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjUgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW41KSwgX2tleTUgPSAwOyBfa2V5NSA8IF9sZW41OyBfa2V5NSsrKSB7XG4gICAgICAgIGFyZ3NbX2tleTVdID0gYXJndW1lbnRzW19rZXk1XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUxpZmVjeWNsZSgnb25FeGl0JywgMSwgYXJncyk7XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZUV4aXRpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBmb3IgKHZhciBfbGVuNiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbjYpLCBfa2V5NiA9IDA7IF9rZXk2IDwgX2xlbjY7IF9rZXk2KyspIHtcbiAgICAgICAgYXJnc1tfa2V5Nl0gPSBhcmd1bWVudHNbX2tleTZdO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gX3RoaXMuaGFuZGxlTGlmZWN5Y2xlKCdvbkV4aXRpbmcnLCAxLCBhcmdzKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlRXhpdGVkID0gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjcgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW43KSwgX2tleTcgPSAwOyBfa2V5NyA8IF9sZW43OyBfa2V5NysrKSB7XG4gICAgICAgIGFyZ3NbX2tleTddID0gYXJndW1lbnRzW19rZXk3XTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIF90aGlzLmhhbmRsZUxpZmVjeWNsZSgnb25FeGl0ZWQnLCAxLCBhcmdzKTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFJlcGxhY2VUcmFuc2l0aW9uLnByb3RvdHlwZTtcblxuICBfcHJvdG8uaGFuZGxlTGlmZWN5Y2xlID0gZnVuY3Rpb24gaGFuZGxlTGlmZWN5Y2xlKGhhbmRsZXIsIGlkeCwgb3JpZ2luYWxBcmdzKSB7XG4gICAgdmFyIF9jaGlsZCRwcm9wcztcblxuICAgIHZhciBjaGlsZHJlbiA9IHRoaXMucHJvcHMuY2hpbGRyZW47XG4gICAgdmFyIGNoaWxkID0gUmVhY3QuQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbilbaWR4XTtcbiAgICBpZiAoY2hpbGQucHJvcHNbaGFuZGxlcl0pIChfY2hpbGQkcHJvcHMgPSBjaGlsZC5wcm9wcylbaGFuZGxlcl0uYXBwbHkoX2NoaWxkJHByb3BzLCBvcmlnaW5hbEFyZ3MpO1xuXG4gICAgaWYgKHRoaXMucHJvcHNbaGFuZGxlcl0pIHtcbiAgICAgIHZhciBtYXliZU5vZGUgPSBjaGlsZC5wcm9wcy5ub2RlUmVmID8gdW5kZWZpbmVkIDogUmVhY3RET00uZmluZERPTU5vZGUodGhpcyk7XG4gICAgICB0aGlzLnByb3BzW2hhbmRsZXJdKG1heWJlTm9kZSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgaW5Qcm9wID0gX3RoaXMkcHJvcHMuaW4sXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcImNoaWxkcmVuXCIsIFwiaW5cIl0pO1xuXG4gICAgdmFyIF9SZWFjdCRDaGlsZHJlbiR0b0FyciA9IFJlYWN0LkNoaWxkcmVuLnRvQXJyYXkoY2hpbGRyZW4pLFxuICAgICAgICBmaXJzdCA9IF9SZWFjdCRDaGlsZHJlbiR0b0FyclswXSxcbiAgICAgICAgc2Vjb25kID0gX1JlYWN0JENoaWxkcmVuJHRvQXJyWzFdO1xuXG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXI7XG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXJpbmc7XG4gICAgZGVsZXRlIHByb3BzLm9uRW50ZXJlZDtcbiAgICBkZWxldGUgcHJvcHMub25FeGl0O1xuICAgIGRlbGV0ZSBwcm9wcy5vbkV4aXRpbmc7XG4gICAgZGVsZXRlIHByb3BzLm9uRXhpdGVkO1xuICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUcmFuc2l0aW9uR3JvdXAsIHByb3BzLCBpblByb3AgPyBSZWFjdC5jbG9uZUVsZW1lbnQoZmlyc3QsIHtcbiAgICAgIGtleTogJ2ZpcnN0JyxcbiAgICAgIG9uRW50ZXI6IHRoaXMuaGFuZGxlRW50ZXIsXG4gICAgICBvbkVudGVyaW5nOiB0aGlzLmhhbmRsZUVudGVyaW5nLFxuICAgICAgb25FbnRlcmVkOiB0aGlzLmhhbmRsZUVudGVyZWRcbiAgICB9KSA6IFJlYWN0LmNsb25lRWxlbWVudChzZWNvbmQsIHtcbiAgICAgIGtleTogJ3NlY29uZCcsXG4gICAgICBvbkVudGVyOiB0aGlzLmhhbmRsZUV4aXQsXG4gICAgICBvbkVudGVyaW5nOiB0aGlzLmhhbmRsZUV4aXRpbmcsXG4gICAgICBvbkVudGVyZWQ6IHRoaXMuaGFuZGxlRXhpdGVkXG4gICAgfSkpO1xuICB9O1xuXG4gIHJldHVybiBSZXBsYWNlVHJhbnNpdGlvbjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuUmVwbGFjZVRyYW5zaXRpb24ucHJvcFR5cGVzID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8ge1xuICBpbjogUHJvcFR5cGVzLmJvb2wuaXNSZXF1aXJlZCxcbiAgY2hpbGRyZW46IGZ1bmN0aW9uIGNoaWxkcmVuKHByb3BzLCBwcm9wTmFtZSkge1xuICAgIGlmIChSZWFjdC5DaGlsZHJlbi5jb3VudChwcm9wc1twcm9wTmFtZV0pICE9PSAyKSByZXR1cm4gbmV3IEVycm9yKFwiXFxcIlwiICsgcHJvcE5hbWUgKyBcIlxcXCIgbXVzdCBiZSBleGFjdGx5IHR3byB0cmFuc2l0aW9uIGNvbXBvbmVudHMuXCIpO1xuICAgIHJldHVybiBudWxsO1xuICB9XG59IDoge307XG5leHBvcnQgZGVmYXVsdCBSZXBsYWNlVHJhbnNpdGlvbjsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../node_modules/react-transition-group/esm/ReplaceTransition.js\n");

/***/ }),

/***/ "../../node_modules/react-transition-group/esm/SwitchTransition.js":
/*!*************************************************************************!*\
  !*** ../../node_modules/react-transition-group/esm/SwitchTransition.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"modes\": () => (/* binding */ modes)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/inheritsLoose */ \"../../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! prop-types */ \"../../node_modules/prop-types/index.js\");\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Transition */ \"../../node_modules/react-transition-group/esm/Transition.js\");\n/* harmony import */ var _TransitionGroupContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TransitionGroupContext */ \"../../node_modules/react-transition-group/esm/TransitionGroupContext.js\");\n\n\nvar _leaveRenders, _enterRenders;\n\n\n\n\n\n\nfunction areChildrenDifferent(oldChildren, newChildren) {\n  if (oldChildren === newChildren) return false;\n\n  if (react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(oldChildren) && react__WEBPACK_IMPORTED_MODULE_1___default().isValidElement(newChildren) && oldChildren.key != null && oldChildren.key === newChildren.key) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Enum of modes for SwitchTransition component\n * @enum { string }\n */\n\n\nvar modes = {\n  out: 'out-in',\n  in: 'in-out'\n};\n\nvar callHook = function callHook(element, name, cb) {\n  return function () {\n    var _element$props;\n\n    element.props[name] && (_element$props = element.props)[name].apply(_element$props, arguments);\n    cb();\n  };\n};\n\nvar leaveRenders = (_leaveRenders = {}, _leaveRenders[modes.out] = function (_ref) {\n  var current = _ref.current,\n      changeState = _ref.changeState;\n  return react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERING, null);\n    })\n  });\n}, _leaveRenders[modes.in] = function (_ref2) {\n  var current = _ref2.current,\n      changeState = _ref2.changeState,\n      children = _ref2.children;\n  return [current, react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERING);\n    })\n  })];\n}, _leaveRenders);\nvar enterRenders = (_enterRenders = {}, _enterRenders[modes.out] = function (_ref3) {\n  var children = _ref3.children,\n      changeState = _ref3.changeState;\n  return react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n    in: true,\n    onEntered: callHook(children, 'onEntered', function () {\n      changeState(_Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERED, react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n        in: true\n      }));\n    })\n  });\n}, _enterRenders[modes.in] = function (_ref4) {\n  var current = _ref4.current,\n      children = _ref4.children,\n      changeState = _ref4.changeState;\n  return [react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(current, {\n    in: false,\n    onExited: callHook(current, 'onExited', function () {\n      changeState(_Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERED, react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n        in: true\n      }));\n    })\n  }), react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(children, {\n    in: true\n  })];\n}, _enterRenders);\n/**\n * A transition component inspired by the [vue transition modes](https://vuejs.org/v2/guide/transitions.html#Transition-Modes).\n * You can use it when you want to control the render between state transitions.\n * Based on the selected mode and the child's key which is the `Transition` or `CSSTransition` component, the `SwitchTransition` makes a consistent transition between them.\n *\n * If the `out-in` mode is selected, the `SwitchTransition` waits until the old child leaves and then inserts a new child.\n * If the `in-out` mode is selected, the `SwitchTransition` inserts a new child first, waits for the new child to enter and then removes the old child.\n *\n * **Note**: If you want the animation to happen simultaneously\n * (that is, to have the old child removed and a new child inserted **at the same time**),\n * you should use\n * [`TransitionGroup`](https://reactcommunity.org/react-transition-group/transition-group)\n * instead.\n *\n * ```jsx\n * function App() {\n *  const [state, setState] = useState(false);\n *  return (\n *    <SwitchTransition>\n *      <CSSTransition\n *        key={state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        addEndListener={(node, done) => node.addEventListener(\"transitionend\", done, false)}\n *        classNames='fade'\n *      >\n *        <button onClick={() => setState(state => !state)}>\n *          {state ? \"Goodbye, world!\" : \"Hello, world!\"}\n *        </button>\n *      </CSSTransition>\n *    </SwitchTransition>\n *  );\n * }\n * ```\n *\n * ```css\n * .fade-enter{\n *    opacity: 0;\n * }\n * .fade-exit{\n *    opacity: 1;\n * }\n * .fade-enter-active{\n *    opacity: 1;\n * }\n * .fade-exit-active{\n *    opacity: 0;\n * }\n * .fade-enter-active,\n * .fade-exit-active{\n *    transition: opacity 500ms;\n * }\n * ```\n */\n\nvar SwitchTransition = /*#__PURE__*/function (_React$Component) {\n  (0,_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(SwitchTransition, _React$Component);\n\n  function SwitchTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      status: _Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERED,\n      current: null\n    };\n    _this.appeared = false;\n\n    _this.changeState = function (status, current) {\n      if (current === void 0) {\n        current = _this.state.current;\n      }\n\n      _this.setState({\n        status: status,\n        current: current\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = SwitchTransition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.appeared = true;\n  };\n\n  SwitchTransition.getDerivedStateFromProps = function getDerivedStateFromProps(props, state) {\n    if (props.children == null) {\n      return {\n        current: null\n      };\n    }\n\n    if (state.status === _Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERING && props.mode === modes.in) {\n      return {\n        status: _Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERING\n      };\n    }\n\n    if (state.current && areChildrenDifferent(state.current, props.children)) {\n      return {\n        status: _Transition__WEBPACK_IMPORTED_MODULE_2__.EXITING\n      };\n    }\n\n    return {\n      current: react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(props.children, {\n        in: true\n      })\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        mode = _this$props.mode,\n        _this$state = this.state,\n        status = _this$state.status,\n        current = _this$state.current;\n    var data = {\n      children: children,\n      current: current,\n      changeState: this.changeState,\n      status: status\n    };\n    var component;\n\n    switch (status) {\n      case _Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERING:\n        component = enterRenders[mode](data);\n        break;\n\n      case _Transition__WEBPACK_IMPORTED_MODULE_2__.EXITING:\n        component = leaveRenders[mode](data);\n        break;\n\n      case _Transition__WEBPACK_IMPORTED_MODULE_2__.ENTERED:\n        component = current;\n    }\n\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_1___default().createElement(_TransitionGroupContext__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Provider, {\n      value: {\n        isMounting: !this.appeared\n      }\n    }, component);\n  };\n\n  return SwitchTransition;\n}((react__WEBPACK_IMPORTED_MODULE_1___default().Component));\n\nSwitchTransition.propTypes =  true ? {\n  /**\n   * Transition modes.\n   * `out-in`: Current element transitions out first, then when complete, the new element transitions in.\n   * `in-out`: New element transitions in first, then when complete, the current element transitions out.\n   *\n   * @type {'out-in'|'in-out'}\n   */\n  mode: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOf([modes.in, modes.out]),\n\n  /**\n   * Any `Transition` or `CSSTransition` component.\n   */\n  children: prop_types__WEBPACK_IMPORTED_MODULE_4___default().oneOfType([(prop_types__WEBPACK_IMPORTED_MODULE_4___default().element.isRequired)])\n} : 0;\nSwitchTransition.defaultProps = {\n  mode: modes.out\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SwitchTransition);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/react-transition-group/esm/SwitchTransition.js\n");

/***/ }),

/***/ "../../node_modules/react-transition-group/esm/index.js":
/*!**************************************************************!*\
  !*** ../../node_modules/react-transition-group/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CSSTransition\": () => (/* reexport safe */ _CSSTransition__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"ReplaceTransition\": () => (/* reexport safe */ _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"SwitchTransition\": () => (/* reexport safe */ _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"Transition\": () => (/* reexport safe */ _Transition__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"TransitionGroup\": () => (/* reexport safe */ _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"config\": () => (/* reexport safe */ _config__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _CSSTransition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./CSSTransition */ \"../../node_modules/react-transition-group/esm/CSSTransition.js\");\n/* harmony import */ var _ReplaceTransition__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ReplaceTransition */ \"../../node_modules/react-transition-group/esm/ReplaceTransition.js\");\n/* harmony import */ var _SwitchTransition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SwitchTransition */ \"../../node_modules/react-transition-group/esm/SwitchTransition.js\");\n/* harmony import */ var _TransitionGroup__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TransitionGroup */ \"../../node_modules/react-transition-group/esm/TransitionGroup.js\");\n/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Transition */ \"../../node_modules/react-transition-group/esm/Transition.js\");\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./config */ \"../../node_modules/react-transition-group/esm/config.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LXRyYW5zaXRpb24tZ3JvdXAvZXNtL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvdHJhZGVyLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC10cmFuc2l0aW9uLWdyb3VwL2VzbS9pbmRleC5qcz8xNWE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgQ1NTVHJhbnNpdGlvbiB9IGZyb20gJy4vQ1NTVHJhbnNpdGlvbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFJlcGxhY2VUcmFuc2l0aW9uIH0gZnJvbSAnLi9SZXBsYWNlVHJhbnNpdGlvbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFN3aXRjaFRyYW5zaXRpb24gfSBmcm9tICcuL1N3aXRjaFRyYW5zaXRpb24nO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUcmFuc2l0aW9uR3JvdXAgfSBmcm9tICcuL1RyYW5zaXRpb25Hcm91cCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFRyYW5zaXRpb24gfSBmcm9tICcuL1RyYW5zaXRpb24nO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjb25maWcgfSBmcm9tICcuL2NvbmZpZyc7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../node_modules/react-transition-group/esm/index.js\n");

/***/ })

}]);