/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["@deriv/components", "@deriv/shared", "@deriv/translations", "mobx", "react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["@deriv/account"] = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else
		root["@deriv/account"] = factory(root["@deriv/components"], root["@deriv/shared"], root["@deriv/translations"], root["mobx"], root["react"], root["react-dom"]);
})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js":
/***/ (function(module) {

eval("!function(e,t){ true?module.exports=t():0}(\"undefined\"!=typeof self?self:this,(function(){return(()=>{var e={757:(e,t,r)=>{e.exports=r(666)},266:(e,t,r)=>{var n=\"undefined\"!=typeof JSON?JSON:r(418);e.exports=function(e,t){t||(t={}),\"function\"==typeof t&&(t={cmp:t});var r=t.space||\"\";\"number\"==typeof r&&(r=Array(r+1).join(\" \"));var o,u=\"boolean\"==typeof t.cycles&&t.cycles,c=t.replacer||function(e,t){return t},a=t.cmp&&(o=t.cmp,function(e){return function(t,r){var n={key:t,value:e[t]},i={key:r,value:e[r]};return o(n,i)}}),p=[];return function e(t,o,d,h){var y=r?\"\\n\"+new Array(h+1).join(r):\"\",l=r?\": \":\":\";if(d&&d.toJSON&&\"function\"==typeof d.toJSON&&(d=d.toJSON()),void 0!==(d=c.call(t,o,d))){if(\"object\"!=typeof d||null===d)return n.stringify(d);if(i(d)){for(var g=[],f=0;f<d.length;f++){var _=e(d,f,d[f],h+1)||n.stringify(null);g.push(y+r+_)}return\"[\"+g.join(\",\")+y+\"]\"}if(-1!==p.indexOf(d)){if(u)return n.stringify(\"__cycle__\");throw new TypeError(\"Converting circular structure to JSON\")}p.push(d);var m=s(d).sort(a&&a(d));for(g=[],f=0;f<m.length;f++){var v=e(d,o=m[f],d[o],h+1);if(v){var q=n.stringify(o)+l+v;g.push(y+r+q)}}return p.splice(p.indexOf(d),1),\"{\"+g.join(\",\")+y+\"}\"}}({\"\":e},\"\",e,0)};var i=Array.isArray||function(e){return\"[object Array]\"==={}.toString.call(e)},s=Object.keys||function(e){var t=Object.prototype.hasOwnProperty||function(){return!0},r=[];for(var n in e)t.call(e,n)&&r.push(n);return r}},418:(e,t,r)=>{t.parse=r(396),t.stringify=r(177)},396:e=>{var t,r,n,i,s={'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"},o=function(e){throw{name:\"SyntaxError\",message:e,at:t,text:n}},u=function(e){return e&&e!==r&&o(\"Expected '\"+e+\"' instead of '\"+r+\"'\"),r=n.charAt(t),t+=1,r},c=function(){var e,t=\"\";for(\"-\"===r&&(t=\"-\",u(\"-\"));r>=\"0\"&&r<=\"9\";)t+=r,u();if(\".\"===r)for(t+=\".\";u()&&r>=\"0\"&&r<=\"9\";)t+=r;if(\"e\"===r||\"E\"===r)for(t+=r,u(),\"-\"!==r&&\"+\"!==r||(t+=r,u());r>=\"0\"&&r<=\"9\";)t+=r,u();if(e=+t,isFinite(e))return e;o(\"Bad number\")},a=function(){var e,t,n,i=\"\";if('\"'===r)for(;u();){if('\"'===r)return u(),i;if(\"\\\\\"===r)if(u(),\"u\"===r){for(n=0,t=0;t<4&&(e=parseInt(u(),16),isFinite(e));t+=1)n=16*n+e;i+=String.fromCharCode(n)}else{if(\"string\"!=typeof s[r])break;i+=s[r]}else i+=r}o(\"Bad string\")},p=function(){for(;r&&r<=\" \";)u()};i=function(){switch(p(),r){case\"{\":return function(){var e,t={};if(\"{\"===r){if(u(\"{\"),p(),\"}\"===r)return u(\"}\"),t;for(;r;){if(e=a(),p(),u(\":\"),Object.hasOwnProperty.call(t,e)&&o('Duplicate key \"'+e+'\"'),t[e]=i(),p(),\"}\"===r)return u(\"}\"),t;u(\",\"),p()}}o(\"Bad object\")}();case\"[\":return function(){var e=[];if(\"[\"===r){if(u(\"[\"),p(),\"]\"===r)return u(\"]\"),e;for(;r;){if(e.push(i()),p(),\"]\"===r)return u(\"]\"),e;u(\",\"),p()}}o(\"Bad array\")}();case'\"':return a();case\"-\":return c();default:return r>=\"0\"&&r<=\"9\"?c():function(){switch(r){case\"t\":return u(\"t\"),u(\"r\"),u(\"u\"),u(\"e\"),!0;case\"f\":return u(\"f\"),u(\"a\"),u(\"l\"),u(\"s\"),u(\"e\"),!1;case\"n\":return u(\"n\"),u(\"u\"),u(\"l\"),u(\"l\"),null}o(\"Unexpected '\"+r+\"'\")}()}},e.exports=function(e,s){var u;return n=e,t=0,r=\" \",u=i(),p(),r&&o(\"Syntax error\"),\"function\"==typeof s?function e(t,r){var n,i,o=t[r];if(o&&\"object\"==typeof o)for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(void 0!==(i=e(o,n))?o[n]=i:delete o[n]);return s.call(t,r,o)}({\"\":u},\"\"):u}},177:e=>{var t,r,n,i=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,s={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};function o(e){return i.lastIndex=0,i.test(e)?'\"'+e.replace(i,(function(e){var t=s[e];return\"string\"==typeof t?t:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)}))+'\"':'\"'+e+'\"'}function u(e,i){var s,c,a,p,d,h=t,y=i[e];switch(y&&\"object\"==typeof y&&\"function\"==typeof y.toJSON&&(y=y.toJSON(e)),\"function\"==typeof n&&(y=n.call(i,e,y)),typeof y){case\"string\":return o(y);case\"number\":return isFinite(y)?String(y):\"null\";case\"boolean\":case\"null\":return String(y);case\"object\":if(!y)return\"null\";if(t+=r,d=[],\"[object Array]\"===Object.prototype.toString.apply(y)){for(p=y.length,s=0;s<p;s+=1)d[s]=u(s,y)||\"null\";return a=0===d.length?\"[]\":t?\"[\\n\"+t+d.join(\",\\n\"+t)+\"\\n\"+h+\"]\":\"[\"+d.join(\",\")+\"]\",t=h,a}if(n&&\"object\"==typeof n)for(p=n.length,s=0;s<p;s+=1)\"string\"==typeof(c=n[s])&&(a=u(c,y))&&d.push(o(c)+(t?\": \":\":\")+a);else for(c in y)Object.prototype.hasOwnProperty.call(y,c)&&(a=u(c,y))&&d.push(o(c)+(t?\": \":\":\")+a);return a=0===d.length?\"{}\":t?\"{\\n\"+t+d.join(\",\\n\"+t)+\"\\n\"+h+\"}\":\"{\"+d.join(\",\")+\"}\",t=h,a}}e.exports=function(e,i,s){var o;if(t=\"\",r=\"\",\"number\"==typeof s)for(o=0;o<s;o+=1)r+=\" \";else\"string\"==typeof s&&(r=s);if(n=i,i&&\"function\"!=typeof i&&(\"object\"!=typeof i||\"number\"!=typeof i.length))throw new Error(\"JSON.stringify\");return u(\"\",{\"\":e})}},666:e=>{var t=function(e){\"use strict\";var t,r=Object.prototype,n=r.hasOwnProperty,i=\"function\"==typeof Symbol?Symbol:{},s=i.iterator||\"@@iterator\",o=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function a(e,t,r,n){var i=t&&t.prototype instanceof f?t:f,s=Object.create(i.prototype),o=new O(n||[]);return s._invoke=function(e,t,r){var n=d;return function(i,s){if(n===y)throw new Error(\"Generator is already running\");if(n===l){if(\"throw\"===i)throw s;return E()}for(r.method=i,r.arg=s;;){var o=r.delegate;if(o){var u=x(o,r);if(u){if(u===g)continue;return u}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(n===d)throw n=l,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);n=y;var c=p(e,t,r);if(\"normal\"===c.type){if(n=r.done?l:h,c.arg===g)continue;return{value:c.arg,done:r.done}}\"throw\"===c.type&&(n=l,r.method=\"throw\",r.arg=c.arg)}}}(e,r,o),s}function p(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}e.wrap=a;var d=\"suspendedStart\",h=\"suspendedYield\",y=\"executing\",l=\"completed\",g={};function f(){}function _(){}function m(){}var v={};c(v,s,(function(){return this}));var q=Object.getPrototypeOf,b=q&&q(q(S([])));b&&b!==r&&n.call(b,s)&&(v=b);var w=m.prototype=f.prototype=Object.create(v);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function r(i,s,o,u){var c=p(e[i],e,s);if(\"throw\"!==c.type){var a=c.arg,d=a.value;return d&&\"object\"==typeof d&&n.call(d,\"__await\")?t.resolve(d.__await).then((function(e){r(\"next\",e,o,u)}),(function(e){r(\"throw\",e,o,u)})):t.resolve(d).then((function(e){a.value=e,o(a)}),(function(e){return r(\"throw\",e,o,u)}))}u(c.arg)}var i;this._invoke=function(e,n){function s(){return new t((function(t,i){r(e,n,t,i)}))}return i=i?i.then(s,s):s()}}function x(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,\"throw\"===r.method){if(e.iterator.return&&(r.method=\"return\",r.arg=t,x(e,r),\"throw\"===r.method))return g;r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return g}var i=p(n,e.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var s=i.arg;return s?s.done?(r[e.resultName]=s.value,r.next=e.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=t),r.delegate=null,g):s:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function M(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function S(e){if(e){var r=e[s];if(r)return r.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,o=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return o.next=o}}return{next:E}}function E(){return{value:t,done:!0}}return _.prototype=m,c(w,\"constructor\",m),c(m,\"constructor\",_),_.displayName=c(m,u,\"GeneratorFunction\"),e.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===_||\"GeneratorFunction\"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(w),e},e.awrap=function(e){return{__await:e}},k(A.prototype),c(A.prototype,o,(function(){return this})),e.AsyncIterator=A,e.async=function(t,r,n,i,s){void 0===s&&(s=Promise);var o=new A(a(t,r,n,i),s);return e.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},k(w),c(w,u,\"Generator\"),c(w,s,(function(){return this})),c(w,\"toString\",(function(){return\"[object Generator]\"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=S,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(M),!e)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return u.type=\"throw\",u.arg=e,r.next=n,i&&(r.method=\"next\",r.arg=t),!!i}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],u=o.completion;if(\"root\"===o.tryLoc)return i(\"end\");if(o.tryLoc<=this.prev){var c=n.call(o,\"catchLoc\"),a=n.call(o,\"finallyLoc\");if(c&&a){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!a)throw new Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,\"finallyLoc\")&&this.prev<i.finallyLoc){var s=i;break}}s&&(\"break\"===e||\"continue\"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var o=s?s.completion:{};return o.type=e,o.arg=t,s?(this.method=\"next\",this.next=s.finallyLoc,g):this.complete(o)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),M(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var i=n.arg;M(r)}return i}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,r,n){return this.delegate={iterator:S(e),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){\"object\"==typeof globalThis?globalThis.regeneratorRuntime=t:Function(\"r\",\"regeneratorRuntime = r\")(t)}}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var n={};return(()=>{\"use strict\";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function t(e){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},t(e)}function i(e,t,r,n,i,s,o){try{var u=e[s](o),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,i)}function s(e){return function(){var t=this,r=arguments;return new Promise((function(n,s){var o=e.apply(t,r);function u(e){i(o,n,s,u,c,\"next\",e)}function c(e){i(o,n,s,u,c,\"throw\",e)}u(void 0)}))}}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function c(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function a(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&p(e,t)}function h(e,r){if(r&&(\"object\"===t(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return a(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}r.d(n,{default:()=>Fe});var l=r(757),g=r.n(l);function f(){return Error.call(this),this.message=\"no elements in sequence\",this.name=\"EmptyError\",this}f.prototype=Object.create(Error.prototype);var _=f,m=function(e,t){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},m(e,t)};function v(e,t){function r(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function q(e){return\"function\"==typeof e}var b=!1,w={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){e&&(new Error).stack,b=e},get useDeprecatedSynchronousErrorHandling(){return b}};function k(e){setTimeout((function(){throw e}),0)}var A={closed:!0,next:function(e){},error:function(e){if(w.useDeprecatedSynchronousErrorHandling)throw e;k(e)},complete:function(){}},x=Array.isArray||function(e){return e&&\"number\"==typeof e.length};function R(e){return Error.call(this),this.message=e?e.length+\" errors occurred during unsubscription:\\n\"+e.map((function(e,t){return t+1+\") \"+e.toString()})).join(\"\\n  \"):\"\",this.name=\"UnsubscriptionError\",this.errors=e,this}R.prototype=Object.create(Error.prototype);var M=R,O=function(){function e(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}return e.prototype.unsubscribe=function(){var t;if(!this.closed){var r,n=this,i=n._parentOrParents,s=n._unsubscribe,o=n._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,i instanceof e)i.remove(this);else if(null!==i)for(var u=0;u<i.length;++u)i[u].remove(this);if(q(s))try{s.call(this)}catch(e){t=e instanceof M?S(e.errors):[e]}if(x(o)){u=-1;for(var c=o.length;++u<c;){var a=o[u];if(null!==(r=a)&&\"object\"==typeof r)try{a.unsubscribe()}catch(e){t=t||[],e instanceof M?t=t.concat(S(e.errors)):t.push(e)}}}if(t)throw new M(t)}},e.prototype.add=function(t){var r=t;if(!t)return e.EMPTY;switch(typeof t){case\"function\":r=new e(t);case\"object\":if(r===this||r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(!(r instanceof e)){var n=r;(r=new e)._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+t+\" added to Subscription.\")}var i=r._parentOrParents;if(null===i)r._parentOrParents=this;else if(i instanceof e){if(i===this)return r;r._parentOrParents=[i,this]}else{if(-1!==i.indexOf(this))return r;i.push(this)}var s=this._subscriptions;return null===s?this._subscriptions=[r]:s.push(r),r},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var r=t.indexOf(e);-1!==r&&t.splice(r,1)}},e.EMPTY=function(e){return e.closed=!0,e}(new e),e}();function S(e){return e.reduce((function(e,t){return e.concat(t instanceof M?t.errors:t)}),[])}var E=\"function\"==typeof Symbol?Symbol(\"rxSubscriber\"):\"@@rxSubscriber_\"+Math.random(),j=function(e){function t(r,n,i){var s=e.call(this)||this;switch(s.syncErrorValue=null,s.syncErrorThrown=!1,s.syncErrorThrowable=!1,s.isStopped=!1,arguments.length){case 0:s.destination=A;break;case 1:if(!r){s.destination=A;break}if(\"object\"==typeof r){r instanceof t?(s.syncErrorThrowable=r.syncErrorThrowable,s.destination=r,r.add(s)):(s.syncErrorThrowable=!0,s.destination=new P(s,r));break}default:s.syncErrorThrowable=!0,s.destination=new P(s,r,n,i)}return s}return v(t,e),t.prototype[E]=function(){return this},t.create=function(e,r,n){var i=new t(e,r,n);return i.syncErrorThrowable=!1,i},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this},t}(O),P=function(e){function t(t,r,n,i){var s,o=e.call(this)||this;o._parentSubscriber=t;var u=o;return q(r)?s=r:r&&(s=r.next,n=r.error,i=r.complete,r!==A&&(q((u=Object.create(r)).unsubscribe)&&o.add(u.unsubscribe.bind(u)),u.unsubscribe=o.unsubscribe.bind(o))),o._context=u,o._next=s,o._error=n,o._complete=i,o}return v(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;w.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber,r=w.useDeprecatedSynchronousErrorHandling;if(this._error)r&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)r?(t.syncErrorValue=e,t.syncErrorThrown=!0):k(e),this.unsubscribe();else{if(this.unsubscribe(),r)throw e;k(e)}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var r=function(){return e._complete.call(e._context)};w.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){if(this.unsubscribe(),w.useDeprecatedSynchronousErrorHandling)throw e;k(e)}},t.prototype.__tryOrSetError=function(e,t,r){if(!w.useDeprecatedSynchronousErrorHandling)throw new Error(\"bad call\");try{t.call(this._context,r)}catch(t){return w.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=t,e.syncErrorThrown=!0,!0):(k(t),!0)}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(j);function C(e,t){return function(r){return r.lift(new T(e,t))}}var T=function(){function e(e,t){this.predicate=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new L(e,this.predicate,this.thisArg))},e}(),L=function(e){function t(t,r,n){var i=e.call(this,t)||this;return i.predicate=r,i.thisArg=n,i.count=0,i}return v(t,e),t.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},t}(j);function D(){return Error.call(this),this.message=\"argument out of range\",this.name=\"ArgumentOutOfRangeError\",this}D.prototype=Object.create(Error.prototype);var I=D,B=\"function\"==typeof Symbol&&Symbol.observable||\"@@observable\";function H(){}function N(e){return e?1===e.length?e[0]:function(t){return e.reduce((function(e,t){return t(e)}),t)}:H}var F=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var r=new e;return r.source=this,r.operator=t,r},e.prototype.subscribe=function(e,t,r){var n=this.operator,i=function(e,t,r){if(e){if(e instanceof j)return e;if(e[E])return e[E]()}return e||t||r?new j(e,t,r):new j(A)}(e,t,r);if(n?i.add(n.call(i,this.source)):i.add(this.source||w.useDeprecatedSynchronousErrorHandling&&!i.syncErrorThrowable?this._subscribe(i):this._trySubscribe(i)),w.useDeprecatedSynchronousErrorHandling&&i.syncErrorThrowable&&(i.syncErrorThrowable=!1,i.syncErrorThrown))throw i.syncErrorValue;return i},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){w.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){var t=e,r=t.closed,n=t.destination,i=t.isStopped;if(r||i)return!1;e=n&&n instanceof j?n:null}return!0}(e)?e.error(t):console.warn(t)}},e.prototype.forEach=function(e,t){var r=this;return new(t=U(t))((function(t,n){var i;i=r.subscribe((function(t){try{e(t)}catch(e){n(e),i&&i.unsubscribe()}}),n,t)}))},e.prototype._subscribe=function(e){var t=this.source;return t&&t.subscribe(e)},e.prototype[B]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 0===e.length?this:N(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=U(e))((function(e,r){var n;t.subscribe((function(e){return n=e}),(function(e){return r(e)}),(function(){return e(n)}))}))},e.create=function(t){return new e(t)},e}();function U(e){if(e||(e=w.Promise||Promise),!e)throw new Error(\"no Promise impl found\");return e}var V=new F((function(e){return e.complete()}));function G(e){return function(t){return 0===e?r?function(e){return new F((function(t){return e.schedule((function(){return t.complete()}))}))}(r):V:t.lift(new J(e));var r}}var J=function(){function e(e){if(this.total=e,this.total<0)throw new I}return e.prototype.call=function(e,t){return t.subscribe(new z(e,this.total))},e}(),z=function(e){function t(t,r){var n=e.call(this,t)||this;return n.total=r,n.count=0,n}return v(t,e),t.prototype._next=function(e){var t=this.total,r=++this.count;r<=t&&(this.destination.next(e),r===t&&(this.destination.complete(),this.unsubscribe()))},t}(j);function W(e){return void 0===e&&(e=null),function(t){return t.lift(new Y(e))}}var Y=function(){function e(e){this.defaultValue=e}return e.prototype.call=function(e,t){return t.subscribe(new K(e,this.defaultValue))},e}(),K=function(e){function t(t,r){var n=e.call(this,t)||this;return n.defaultValue=r,n.isEmpty=!0,n}return v(t,e),t.prototype._next=function(e){this.isEmpty=!1,this.destination.next(e)},t.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},t}(j);function $(e){return void 0===e&&(e=Z),function(t){return t.lift(new Q(e))}}var Q=function(){function e(e){this.errorFactory=e}return e.prototype.call=function(e,t){return t.subscribe(new X(e,this.errorFactory))},e}(),X=function(e){function t(t,r){var n=e.call(this,t)||this;return n.errorFactory=r,n.hasValue=!1,n}return v(t,e),t.prototype._next=function(e){this.hasValue=!0,this.destination.next(e)},t.prototype._complete=function(){if(this.hasValue)return this.destination.complete();var e=void 0;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)},t}(j);function Z(){return new _}function ee(e){return e}function te(e,t){var r=arguments.length>=2;return function(n){return n.pipe(e?C((function(t,r){return e(t,r,n)})):ee,G(1),r?W(t):$((function(){return new _})))}}function re(){return Error.call(this),this.message=\"object unsubscribed\",this.name=\"ObjectUnsubscribedError\",this}re.prototype=Object.create(Error.prototype);var ne=re,ie=function(e){function t(t,r){var n=e.call(this)||this;return n.subject=t,n.subscriber=r,n.closed=!1,n}return v(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var r=t.indexOf(this.subscriber);-1!==r&&t.splice(r,1)}}},t}(O),se=function(e){function t(t){var r=e.call(this,t)||this;return r.destination=t,r}return v(t,e),t}(j),oe=function(e){function t(){var t=e.call(this)||this;return t.observers=[],t.closed=!1,t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return v(t,e),t.prototype[E]=function(){return new se(this)},t.prototype.lift=function(e){var t=new ue(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new ne;if(!this.isStopped)for(var t=this.observers,r=t.length,n=t.slice(),i=0;i<r;i++)n[i].next(e)},t.prototype.error=function(e){if(this.closed)throw new ne;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,r=t.length,n=t.slice(),i=0;i<r;i++)n[i].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new ne;this.isStopped=!0;for(var e=this.observers,t=e.length,r=e.slice(),n=0;n<t;n++)r[n].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new ne;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new ne;return this.hasError?(e.error(this.thrownError),O.EMPTY):this.isStopped?(e.complete(),O.EMPTY):(this.observers.push(e),new ie(this,e))},t.prototype.asObservable=function(){var e=new F;return e.source=this,e},t.create=function(e,t){return new ue(e,t)},t}(F),ue=function(e){function t(t,r){var n=e.call(this)||this;return n.destination=t,n.source=r,n}return v(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):O.EMPTY},t}(oe);function ce(){return function(e){return e.lift(new ae(e))}}var ae=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var r=this.connectable;r._refCount++;var n=new pe(e,r),i=t.subscribe(n);return n.closed||(n.connection=r.connect()),i},e}(),pe=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return v(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._refCount;if(t<=0)this.connection=null;else if(e._refCount=t-1,t>1)this.connection=null;else{var r=this.connection,n=e._connection;this.connection=null,!n||r&&n!==r||n.unsubscribe()}}else this.connection=null},t}(j),de=function(e){function t(t,r){var n=e.call(this)||this;return n.source=t,n.subjectFactory=r,n._refCount=0,n._isComplete=!1,n}return v(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,(e=this._connection=new O).add(this.source.subscribe(new ye(this.getSubject(),this))),e.closed&&(this._connection=null,e=O.EMPTY)),e},t.prototype.refCount=function(){return ce()(this)},t}(F).prototype,he={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:de._subscribe},_isComplete:{value:de._isComplete,writable:!0},getSubject:{value:de.getSubject},connect:{value:de.connect},refCount:{value:de.refCount}},ye=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return v(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(se);function le(){return new oe}function ge(){return function(e){return ce()((t=le,function(e){var r;r=\"function\"==typeof t?t:function(){return t};var n=Object.create(e,he);return n.source=e,n.subjectFactory=r,n})(e));var t}}function fe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _e=function(){function e(){o(this,e)}return c(e,[{key:\"accountClosure\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_closure:{required:1,type:\"numeric\"},passthrough:{},reason:{required:1,type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"account_closure\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"accountSecurity\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_security:{required:1,type:\"numeric\"},otp:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},totp_action:{type:\"string\"}},r={method:\"account_security\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"accountStatistics\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_statistics:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"account_statistics\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"activeSymbols\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={active_symbols:{required:1,type:\"string\"},landing_company:{type:\"string\"},passthrough:{},product_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"active_symbols\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"affiliateAccountAdd\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address_city:{required:1,type:\"string\"},address_line_1:{required:1,type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{required:1,type:\"string\"},address_state:{required:1,type:\"string\"},affiliate_account_add:{required:1,type:\"numeric\"},country:{required:1,type:\"string\"},first_name:{required:1,type:\"string\"},last_name:{required:1,type:\"string\"},non_pep_declaration:{required:1,type:\"numeric\"},passthrough:{},password:{required:1,type:\"string\"},phone:{required:1,type:\"string\"},req_id:{type:\"numeric\"},tnc_accepted:{required:1,type:\"numeric\"},username:{required:1,type:\"string\"}},r={method:\"affiliate_account_add\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"apiToken\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={api_token:{required:1,type:\"numeric\"},delete_token:{type:\"string\"},new_token:{type:\"string\"},new_token_scopes:{},passthrough:{},req_id:{type:\"numeric\"},valid_for_current_ip_only:{type:\"numeric\"}},r={method:\"api_token\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appDelete\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_delete:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_delete\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appGet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_get:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_get\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appMarkupDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_id:{type:\"numeric\"},app_markup_details:{required:1,type:\"numeric\"},client_loginid:{type:\"string\"},date_from:{required:1,type:\"string\"},date_to:{required:1,type:\"string\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},sort:{type:\"string\"},sort_fields:{}},r={method:\"app_markup_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appRegister\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_markup_percentage:{type:\"numeric\"},app_register:{required:1,type:\"numeric\"},appstore:{type:\"string\"},github:{type:\"string\"},googleplay:{type:\"string\"},homepage:{type:\"string\"},name:{required:1,type:\"string\"},passthrough:{},redirect_uri:{type:\"string\"},req_id:{type:\"numeric\"},scopes:{required:1},verification_uri:{type:\"string\"}},r={method:\"app_register\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_markup_percentage:{type:\"numeric\"},app_update:{required:1,type:\"numeric\"},appstore:{type:\"string\"},github:{type:\"string\"},googleplay:{type:\"string\"},homepage:{type:\"string\"},name:{required:1,type:\"string\"},passthrough:{},redirect_uri:{type:\"string\"},req_id:{type:\"numeric\"},scopes:{required:1},verification_uri:{type:\"string\"}},r={method:\"app_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"assetIndex\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={asset_index:{required:1,type:\"numeric\"},landing_company:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"asset_index\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"authorize\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={add_to_login_history:{type:\"numeric\"},authorize:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"authorize\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"balance\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account:{type:\"string\"},balance:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"balance\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"buy\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={buy:{required:1,type:\"string\"},parameters:{amount:{type:\"numeric\"},app_markup_percentage:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},barrier_range:{type:\"string\"},basis:{type:\"string\"},cancellation:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},limit_order:{stop_loss:{type:\"numeric\"},take_profit:{type:\"numeric\"}},multiplier:{type:\"numeric\"},product_type:{type:\"string\"},selected_tick:{type:\"numeric\"},symbol:{required:1,type:\"string\"},trading_period_start:{type:\"numeric\"}},passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"buy\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"buyContractForMultipleAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={buy_contract_for_multiple_accounts:{required:1,type:\"string\"},parameters:{amount:{type:\"numeric\"},app_markup_percentage:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},basis:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},multiplier:{type:\"numeric\"},selected_tick:{type:\"numeric\"},symbol:{required:1,type:\"string\"}},passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},tokens:{required:1}},r={method:\"buy_contract_for_multiple_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cancel:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashier\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address:{type:\"string\"},amount:{type:\"numeric\"},cashier:{required:1,type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},provider:{type:\"string\"},req_id:{type:\"numeric\"},type:{type:\"string\"},verification_code:{type:\"string\"}},r={method:\"cashier\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashierPayments\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cashier_payments:{required:1,type:\"numeric\"},passthrough:{},provider:{type:\"string\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},transaction_type:{type:\"string\"}},r={method:\"cashier_payments\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashierWithdrawalCancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cashier_withdrawal_cancel:{required:1,type:\"numeric\"},id:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"cashier_withdrawal_cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"changeEmail\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={change_email:{required:1,type:\"string\"},new_email:{required:1,type:\"string\"},new_password:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"change_email\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"changePassword\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={change_password:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"change_password\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{required:1,type:\"numeric\"},contract_update:{required:1,type:\"numeric\"},limit_order:{stop_loss:{},take_profit:{}},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"contract_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractUpdateHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{required:1,type:\"numeric\"},contract_update_history:{required:1,type:\"numeric\"},limit:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"contract_update_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractsFor\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contracts_for:{required:1,type:\"string\"},currency:{type:\"string\"},landing_company:{type:\"string\"},passthrough:{},product_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"contracts_for\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copyStart\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={assets:{},copy_start:{required:1,type:\"string\"},max_trade_stake:{type:\"numeric\"},min_trade_stake:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},trade_types:{}},r={method:\"copy_start\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copyStop\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copy_stop:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"copy_stop\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copytradingList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copytrading_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"copytrading_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copytradingStatistics\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copytrading_statistics:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},trader_id:{required:1,type:\"string\"}},r={method:\"copytrading_statistics\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cryptoConfig\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={crypto_config:{required:1,type:\"numeric\"},currency_code:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"crypto_config\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"documentUpload\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={document_format:{required:1,type:\"string\"},document_id:{type:\"string\"},document_issuing_country:{type:\"string\"},document_type:{required:1,type:\"string\"},document_upload:{required:1,type:\"numeric\"},expected_checksum:{required:1,type:\"string\"},expiration_date:{type:\"string\"},file_size:{required:1,type:\"numeric\"},lifetime_valid:{type:\"numeric\"},page_type:{type:\"string\"},passthrough:{},proof_of_ownership:{details:{required:1},id:{required:1,type:\"numeric\"}},req_id:{type:\"numeric\"}},r={method:\"document_upload\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"economicCalendar\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={currency:{type:\"string\"},economic_calendar:{required:1,type:\"numeric\"},end_date:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},start_date:{type:\"numeric\"}},r={method:\"economic_calendar\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"exchangeRates\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={base_currency:{required:1,type:\"string\"},exchange_rates:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},target_currency:{type:\"string\"}},r={method:\"exchange_rates\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"forget\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={forget:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"forget\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"forgetAll\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={forget_all:{required:1},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"forget_all\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAccountStatus\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_account_status:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_account_status\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAccountTypes\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_account_types:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_account_types\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAvailableAccountsToTransfer\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_available_accounts_to_transfer:{required:1,type:\"numeric\"},loginid:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_available_accounts_to_transfer\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getFinancialAssessment\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_financial_assessment:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_financial_assessment\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getLimits\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_limits:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_limits\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getSelfExclusion\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_self_exclusion:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_self_exclusion\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_settings:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"identityVerificationDocumentAdd\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={document_number:{required:1,type:\"string\"},document_type:{required:1,type:\"string\"},identity_verification_document_add:{required:1,type:\"numeric\"},issuing_country:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"identity_verification_document_add\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"landingCompany\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"landing_company\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"landingCompanyDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company_details:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"landing_company_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"linkWallet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={client_id:{required:1,type:\"string\"},link_wallet:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},wallet_id:{required:1,type:\"string\"}},r={method:\"link_wallet\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"loginHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={limit:{type:\"numeric\"},login_history:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"login_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"logout\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={logout:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"logout\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5Deposit\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},from_binary:{type:\"string\"},mt5_deposit:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},to_mt5:{required:1,type:\"string\"}},r={method:\"mt5_deposit\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5GetSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_get_settings:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"mt5_get_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5LoginList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={mt5_login_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"mt5_login_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5NewAccount\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{required:1,type:\"string\"},address:{type:\"string\"},city:{type:\"string\"},company:{type:\"string\"},country:{type:\"string\"},currency:{type:\"string\"},dry_run:{type:\"numeric\"},email:{required:1,type:\"string\"},investPassword:{type:\"string\"},leverage:{required:1,type:\"numeric\"},mainPassword:{required:1,type:\"string\"},mt5_account_category:{type:\"string\"},mt5_account_type:{type:\"string\"},mt5_new_account:{required:1,type:\"numeric\"},name:{required:1,type:\"string\"},passthrough:{},phone:{type:\"string\"},phonePassword:{type:\"string\"},req_id:{type:\"numeric\"},server:{},state:{type:\"string\"},zipCode:{type:\"string\"}},r={method:\"mt5_new_account\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_change:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},password_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"mt5_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordCheck\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_check:{required:1,type:\"numeric\"},passthrough:{},password:{required:1,type:\"string\"},password_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"mt5_password_check\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_reset:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},passthrough:{},password_type:{type:\"string\"},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"mt5_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5Withdrawal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},from_mt5:{required:1,type:\"string\"},mt5_withdrawal:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},to_binary:{required:1,type:\"string\"}},r={method:\"mt5_withdrawal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountMaltainvest\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={accept_risk:{required:1,type:\"numeric\"},account_opening_reason:{type:\"string\"},account_turnover:{type:\"string\"},address_city:{required:1,type:\"string\"},address_line_1:{required:1,type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},affiliate_token:{type:\"string\"},binary_options_trading_experience:{type:\"string\"},binary_options_trading_frequency:{type:\"string\"},cfd_trading_experience:{type:\"string\"},cfd_trading_frequency:{type:\"string\"},citizen:{type:\"string\"},client_type:{type:\"string\"},currency:{type:\"string\"},date_of_birth:{required:1,type:\"string\"},education_level:{required:1,type:\"string\"},employment_industry:{required:1,type:\"string\"},employment_status:{type:\"string\"},estimated_worth:{required:1,type:\"string\"},first_name:{required:1,type:\"string\"},forex_trading_experience:{type:\"string\"},forex_trading_frequency:{type:\"string\"},income_source:{required:1,type:\"string\"},last_name:{required:1,type:\"string\"},net_income:{required:1,type:\"string\"},new_account_maltainvest:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},occupation:{required:1,type:\"string\"},other_instruments_trading_experience:{type:\"string\"},other_instruments_trading_frequency:{type:\"string\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},req_id:{type:\"numeric\"},residence:{required:1,type:\"string\"},salutation:{required:1,type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},source_of_wealth:{type:\"string\"},tax_identification_number:{required:1,type:\"string\"},tax_residence:{required:1,type:\"string\"}},r={method:\"new_account_maltainvest\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountReal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_opening_reason:{type:\"string\"},account_turnover:{type:\"string\"},address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},affiliate_token:{type:\"string\"},citizen:{},client_type:{type:\"string\"},currency:{type:\"string\"},date_of_birth:{type:\"string\"},first_name:{type:\"string\"},last_name:{type:\"string\"},new_account_real:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},req_id:{type:\"numeric\"},residence:{type:\"string\"},salutation:{type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},tax_identification_number:{type:\"string\"},tax_residence:{type:\"string\"}},r={method:\"new_account_real\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountVirtual\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_token:{type:\"string\"},client_password:{type:\"string\"},date_first_contact:{type:\"string\"},email_consent:{type:\"numeric\"},gclid_url:{type:\"string\"},new_account_virtual:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},residence:{type:\"string\"},signup_device:{type:\"string\"},type:{type:\"string\"},utm_ad_id:{},utm_adgroup_id:{},utm_adrollclk_id:{},utm_campaign:{},utm_campaign_id:{},utm_content:{},utm_fbcl_id:{},utm_gl_client_id:{},utm_medium:{},utm_msclk_id:{},utm_source:{},utm_term:{},verification_code:{type:\"string\"}},r={method:\"new_account_virtual\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountWallet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},currency:{required:1,type:\"string\"},date_of_birth:{type:\"string\"},first_name:{type:\"string\"},last_name:{type:\"string\"},new_account_wallet:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},payment_method:{required:1,type:\"string\"},phone:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"new_account_wallet\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"notificationEvent\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={args:{documents:{}},category:{required:1,type:\"string\"},event:{required:1,type:\"string\"},notification_event:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"notification_event\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"oauthApps\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={oauth_apps:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"oauth_apps\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},contact_info:{type:\"string\"},description:{type:\"string\"},local_currency:{type:\"string\"},max_order_amount:{required:1,type:\"numeric\"},min_order_amount:{required:1,type:\"numeric\"},p2p_advert_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method:{type:\"string\"},payment_method_ids:{},payment_method_names:{},rate:{required:1,type:\"numeric\"},rate_type:{type:\"string\"},req_id:{type:\"numeric\"},type:{required:1,type:\"string\"}},r={method:\"p2p_advert_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{type:\"string\"},p2p_advert_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},use_client_limits:{type:\"numeric\"}},r={method:\"p2p_advert_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={advertiser_id:{type:\"string\"},advertiser_name:{type:\"string\"},amount:{type:\"numeric\"},counterparty_type:{type:\"string\"},favourites_only:{type:\"numeric\"},limit:{type:\"numeric\"},local_currency:{type:\"string\"},offset:{type:\"numeric\"},p2p_advert_list:{required:1,type:\"numeric\"},passthrough:{},payment_method:{},req_id:{type:\"numeric\"},sort_by:{type:\"string\"},use_client_limits:{type:\"numeric\"}},r={method:\"p2p_advert_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},delete:{type:\"numeric\"},description:{type:\"string\"},id:{required:1,type:\"string\"},is_active:{type:\"numeric\"},local_currency:{type:\"string\"},max_order_amount:{type:\"numeric\"},min_order_amount:{type:\"numeric\"},p2p_advert_update:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method_ids:{},payment_method_names:{},rate:{type:\"numeric\"},rate_type:{type:\"string\"},remaining_amount:{type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"p2p_advert_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserAdverts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={limit:{type:\"numeric\"},offset:{type:\"numeric\"},p2p_advertiser_adverts:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_advertiser_adverts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},default_advert_description:{type:\"string\"},name:{required:1,type:\"string\"},p2p_advertiser_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_advertiser_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{type:\"string\"},p2p_advertiser_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_advertiser_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserPaymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={create:{},delete:{},p2p_advertiser_payment_methods:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},update:{}},r={method:\"p2p_advertiser_payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserRelations\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={add_blocked:{},add_favourites:{},p2p_advertiser_relations:{required:1,type:\"numeric\"},passthrough:{},remove_blocked:{},remove_favourites:{},req_id:{type:\"numeric\"}},r={method:\"p2p_advertiser_relations\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},default_advert_description:{type:\"string\"},is_listed:{type:\"numeric\"},p2p_advertiser_update:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},req_id:{type:\"numeric\"},show_name:{type:\"numeric\"}},r={method:\"p2p_advertiser_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pChatCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={order_id:{required:1,type:\"string\"},p2p_chat_create:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_chat_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderCancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_cancel:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderConfirm\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_confirm:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_confirm\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={advert_id:{required:1,type:\"string\"},amount:{required:1,type:\"numeric\"},contact_info:{type:\"string\"},p2p_order_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method_ids:{},rate:{type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderDispute\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={dispute_reason:{required:1,type:\"string\"},id:{required:1,type:\"string\"},p2p_order_dispute:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_dispute\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={active:{type:\"numeric\"},advert_id:{type:\"string\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},p2p_order_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderReview\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={order_id:{required:1,type:\"string\"},p2p_order_review:{required:1,type:\"numeric\"},passthrough:{},rating:{required:1,type:\"numeric\"},recommended:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_review\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pPaymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={p2p_payment_methods:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pPing\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={p2p_ping:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_ping\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={country:{type:\"string\"},passthrough:{},payment_methods:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_id:{type:\"string\"},code_of_conduct_approval:{required:1,type:\"numeric\"},commission_deposit:{required:1,type:\"numeric\"},commission_withdrawal:{required:1,type:\"numeric\"},email:{required:1,type:\"string\"},information:{required:1,type:\"string\"},passthrough:{},payment_agent_name:{required:1,type:\"string\"},paymentagent_create:{required:1,type:\"numeric\"},phone_numbers:{},req_id:{type:\"numeric\"},supported_payment_methods:{required:1},urls:{required:1}},r={method:\"paymentagent_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},paymentagent_details:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"paymentagent_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={currency:{type:\"string\"},passthrough:{},paymentagent_list:{required:1,type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"paymentagent_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentTransfer\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},currency:{required:1,type:\"string\"},description:{type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},paymentagent_transfer:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},transfer_to:{required:1,type:\"string\"}},r={method:\"paymentagent_transfer\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentWithdraw\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},currency:{required:1,type:\"string\"},description:{type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},paymentagent_loginid:{required:1,type:\"string\"},paymentagent_withdraw:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"paymentagent_withdraw\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"payoutCurrencies\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},payout_currencies:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"payout_currencies\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ping\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},ping:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"ping\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"portfolio\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_type:{},passthrough:{},portfolio:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"portfolio\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"profitTable\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_type:{},date_from:{type:\"string\"},date_to:{type:\"string\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},profit_table:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sort:{type:\"string\"}},r={method:\"profit_table\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"proposal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},barrier_range:{type:\"string\"},basis:{type:\"string\"},cancellation:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},limit_order:{stop_loss:{type:\"numeric\"},take_profit:{type:\"numeric\"}},multiplier:{type:\"numeric\"},passthrough:{},product_type:{type:\"string\"},proposal:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},selected_tick:{type:\"numeric\"},subscribe:{type:\"numeric\"},symbol:{required:1,type:\"string\"},trading_period_start:{type:\"numeric\"}},r={method:\"proposal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"proposalOpenContract\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{type:\"numeric\"},passthrough:{},proposal_open_contract:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"proposal_open_contract\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"realityCheck\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},reality_check:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"reality_check\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"requestReport\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={date_from:{required:1,type:\"numeric\"},date_to:{required:1,type:\"numeric\"},passthrough:{},report_type:{required:1,type:\"string\"},req_id:{type:\"numeric\"},request_report:{required:1,type:\"numeric\"}},r={method:\"request_report\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"resetPassword\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={date_of_birth:{type:\"string\"},new_password:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},reset_password:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"reset_password\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"residenceList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},residence_list:{required:1,type:\"numeric\"}},r={method:\"residence_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"revokeOauthApp\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},revoke_oauth_app:{required:1,type:\"numeric\"}},r={method:\"revoke_oauth_app\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sell\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sell:{required:1,type:\"numeric\"}},r={method:\"sell\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sellContractForMultipleAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sell_contract_for_multiple_accounts:{required:1,type:\"numeric\"},shortcode:{required:1,type:\"string\"},tokens:{required:1}},r={method:\"sell_contract_for_multiple_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sellExpired\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},sell_expired:{required:1,type:\"numeric\"}},r={method:\"sell_expired\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"serviceToken\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={country:{type:\"string\"},passthrough:{},referrer:{type:\"string\"},req_id:{type:\"numeric\"},server:{type:\"string\"},service:{required:1},service_token:{required:1,type:\"numeric\"}},r={method:\"service_token\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setAccountCurrency\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},set_account_currency:{required:1,type:\"string\"}},r={method:\"set_account_currency\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setFinancialAssessment\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_turnover:{type:\"string\"},binary_options_trading_experience:{type:\"string\"},binary_options_trading_frequency:{type:\"string\"},cfd_trading_experience:{type:\"string\"},cfd_trading_frequency:{type:\"string\"},education_level:{required:1,type:\"string\"},employment_industry:{required:1,type:\"string\"},employment_status:{type:\"string\"},estimated_worth:{required:1,type:\"string\"},forex_trading_experience:{type:\"string\"},forex_trading_frequency:{type:\"string\"},income_source:{required:1,type:\"string\"},net_income:{required:1,type:\"string\"},occupation:{required:1,type:\"string\"},other_instruments_trading_experience:{type:\"string\"},other_instruments_trading_frequency:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},set_financial_assessment:{required:1,type:\"numeric\"},source_of_wealth:{type:\"string\"}},r={method:\"set_financial_assessment\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setSelfExclusion\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={exclude_until:{},max_30day_deposit:{},max_30day_losses:{},max_30day_turnover:{},max_7day_deposit:{},max_7day_losses:{},max_7day_turnover:{},max_balance:{},max_deposit:{},max_losses:{},max_open_bets:{},max_turnover:{},passthrough:{},req_id:{type:\"numeric\"},session_duration_limit:{},set_self_exclusion:{required:1,type:\"numeric\"},timeout_until:{}},r={method:\"set_self_exclusion\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_opening_reason:{type:\"string\"},address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{},address_postcode:{type:\"string\"},address_state:{type:\"string\"},allow_copiers:{type:\"numeric\"},citizen:{},date_of_birth:{type:\"string\"},email_consent:{type:\"numeric\"},feature_flag:{wallet:{type:\"numeric\"}},first_name:{type:\"string\"},last_name:{type:\"string\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},preferred_language:{},req_id:{type:\"numeric\"},request_professional_status:{type:\"numeric\"},residence:{},salutation:{type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},set_settings:{required:1,type:\"numeric\"},tax_identification_number:{type:\"string\"},tax_residence:{type:\"string\"}},r={method:\"set_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"statement\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={action_type:{type:\"string\"},date_from:{type:\"numeric\"},date_to:{type:\"numeric\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},statement:{required:1,type:\"numeric\"}},r={method:\"statement\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"statesList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},states_list:{required:1,type:\"string\"}},r={method:\"states_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ticks\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},ticks:{required:1}},r={method:\"ticks\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ticksHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={adjust_start_time:{type:\"numeric\"},count:{type:\"numeric\"},end:{required:1,type:\"string\"},granularity:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},start:{type:\"numeric\"},style:{type:\"string\"},subscribe:{type:\"numeric\"},ticks_history:{required:1,type:\"string\"}},r={method:\"ticks_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"time\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},time:{required:1,type:\"numeric\"}},r={method:\"time\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tncApproval\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_coc_agreement:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},tnc_approval:{required:1,type:\"numeric\"},ukgc_funds_protection:{type:\"numeric\"}},r={method:\"tnc_approval\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"topupVirtual\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},topup_virtual:{required:1,type:\"numeric\"}},r={method:\"topup_virtual\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingDurations\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},trading_durations:{required:1,type:\"numeric\"}},r={method:\"trading_durations\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_accounts:{required:1,type:\"numeric\"}},r={method:\"trading_platform_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformDeposit\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},from_account:{type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},to_account:{required:1,type:\"string\"},trading_platform_deposit:{required:1,type:\"numeric\"}},r={method:\"trading_platform_deposit\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformInvestorPasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_id:{required:1,type:\"string\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_investor_password_change:{required:1,type:\"numeric\"}},r={method:\"trading_platform_investor_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformInvestorPasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_id:{required:1,type:\"string\"},new_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_investor_password_reset:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"trading_platform_investor_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformNewAccount\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{required:1,type:\"string\"},currency:{type:\"string\"},dry_run:{type:\"numeric\"},market_type:{required:1,type:\"string\"},passthrough:{},password:{required:1,type:\"string\"},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},sub_account_type:{type:\"string\"},trading_platform_new_account:{required:1,type:\"numeric\"}},r={method:\"trading_platform_new_account\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformPasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={new_password:{required:1,type:\"string\"},old_password:{type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_password_change:{required:1,type:\"numeric\"}},r={method:\"trading_platform_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformPasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={new_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_password_reset:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"trading_platform_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformProductListing\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_id:{},country_code:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},trading_platform_product_listing:{required:1,type:\"numeric\"}},r={method:\"trading_platform_product_listing\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformWithdrawal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},from_account:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},to_account:{required:1,type:\"string\"},trading_platform_withdrawal:{required:1,type:\"numeric\"}},r={method:\"trading_platform_withdrawal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingServers\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{type:\"string\"},environment:{type:\"string\"},market_type:{type:\"string\"},passthrough:{},platform:{type:\"string\"},req_id:{type:\"numeric\"},trading_servers:{required:1,type:\"numeric\"}},r={method:\"trading_servers\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingTimes\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},trading_times:{required:1,type:\"string\"}},r={method:\"trading_times\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"transaction\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{required:1,type:\"numeric\"},transaction:{required:1,type:\"numeric\"}},r={method:\"transaction\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"transferBetweenAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_from:{type:\"string\"},account_to:{type:\"string\"},accounts:{type:\"string\"},amount:{type:\"numeric\"},currency:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},transfer_between_accounts:{required:1,type:\"numeric\"}},r={method:\"transfer_between_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"verifyEmail\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},type:{required:1,type:\"string\"},url_parameters:{affiliate_token:{type:\"string\"},date_first_contact:{type:\"string\"},gclid_url:{type:\"string\"},pa_amount:{type:\"numeric\"},pa_currency:{type:\"string\"},pa_loginid:{type:\"string\"},pa_remarks:{type:\"string\"},redirect_to:{type:\"numeric\"},signup_device:{type:\"string\"},utm_ad_id:{},utm_adgroup_id:{},utm_adrollclk_id:{},utm_campaign:{},utm_campaign_id:{},utm_content:{},utm_fbcl_id:{},utm_gl_client_id:{},utm_medium:{},utm_msclk_id:{},utm_source:{},utm_term:{}},verify_email:{required:1,type:\"string\"}},r={method:\"verify_email\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"websiteStatus\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},website_status:{required:1,type:\"numeric\"}},r={method:\"website_status\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"processRequest\",value:function(e){var r=e.config,n=function(e){var t=e.config,r=e.args,n=e.method,i=e.needsMethodArg,s=r;return i&&!me(s)&&(s=fe({},n,s)),s[n]=s[n]||1,Object.keys(s).forEach((function(e){var r=s[e];e in t&&(\"string\"===t[e].type?s[e]=\"\".concat(r):\"numeric\"===t[e].type?s[e]=parseFloat(r):\"boolean\"===t[e].type&&(s[e]=+r))})),s}(e),i=function(e){var r=e.config,n=e.args;if(!me(n))return\"Requires an object but a \".concat(t(n),\" is passed.\");var i=[],s=Object.keys(r).filter((function(e){return(r[e]||{}).required&&!(e in n)}));return s.length&&i.push(\"Required parameters missing: \".concat(s.join(\", \"))),Object.keys(n).forEach((function(e){var s=n[e];if(e in r){var o=r[e].type;o&&(ve[o](s)||i.push(\"\".concat(o,\" value expected but found \").concat(t(s),\": \").concat(e)))}})),i.length?i.join(\" - \"):\"\"}({config:r,args:n});return i?Promise.reject(i):this.send(n)}}]),e}(),me=function(e){return e instanceof Object},ve={object:me,numeric:function(e){return!Number.isNaN(1*e)},string:function(e){return\"string\"==typeof e},boolean:function(e){return[!0,!1,0,1].includes(e)}};function qe(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function be(e,t,r){return be=qe()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var i=new(Function.bind.apply(e,n));return r&&p(i,r.prototype),i},be.apply(null,arguments)}function we(e){var t=\"function\"==typeof Map?new Map:void 0;return we=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf(\"[native code]\")))return e;var r;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return be(e,arguments,y(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),p(n,e)},we(e)}function ke(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=y(e);if(t){var i=y(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return h(this,r)}}function Ae(e){return function(t){d(n,t);var r=ke(n);function n(t){var i;return o(this,n),(i=r.call(this)).type=e,i.message=t,i}return c(n,[{key:\"toString\",value:function(){return\"\".concat(this.type,\": \").concat(this.message)}}]),n}(we(Error))}var xe=function(e){d(r,e);var t=ke(r);function r(){return o(this,r),t.apply(this,arguments)}return c(r)}(Ae(\"APIError\")),Re=function(e){d(r,e);var t=ke(r);function r(){return o(this,r),t.apply(this,arguments)}return c(r)}(Ae(\"ConstructionError\")),Me=r(266),Oe=r.n(Me);function Se(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ee(e){var t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Se(Object(r),!0).forEach((function(t){fe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Se(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},e);return delete t.req_id,delete t.passthrough,delete t.subscribe,Oe()(t)}var je=function(e){d(f,e);var t,r,n,i,u,a,p,l=(a=f,p=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(a);if(p){var r=y(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return h(this,e)});function f(e,t){var r;if(o(this,f),!e)throw new Re(\"Cache object needs an API to work\");return(r=l.call(this)).api=e,r.storage=t,r}return c(f,[{key:\"send\",value:(u=s(g().mark((function e(t){var r;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.has(t);case 2:if(!e.sent){e.next=4;break}return e.abrupt(\"return\",this.get(t));case 4:return e.next=6,this.api.send(t);case 6:return r=e.sent,e.next=9,this.set(t,r);case 9:return e.abrupt(\"return\",r);case 10:case\"end\":return e.stop()}}),e,this)}))),function(e){return u.apply(this,arguments)})},{key:\"has\",value:(i=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.has(Ee(t)));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return i.apply(this,arguments)})},{key:\"get\",value:(n=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.get(Ee(t)));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:\"getByMsgType\",value:(r=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.getByMsgType(t));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:\"set\",value:(t=s(g().mark((function e(t,r){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.set(Ee(t),r));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e,r){return t.apply(this,arguments)})}]),f}(_e);var Pe=function(e){d(i,e);var t,r,n=(t=i,r=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=y(t);if(r){var i=y(this).constructor;e=Reflect.construct(n,arguments,i)}else e=n.apply(this,arguments);return h(this,e)});function i(){var e,t,r,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};return o(this,i),e=n.call(this,(function(e,n){t=e,r=n})),s(t,r),e.resolveCallback=t,e.rejectCallback=r,e.state=\"pending\",e}return c(i,[{key:\"resolve\",value:function(e){return this.resolveCallback(e),this.state=\"resolved\",this}},{key:\"reject\",value:function(e){return this.rejectCallback(e),this.state=\"rejected\",this}},{key:\"isPending\",value:function(){return\"pending\"===this.state}},{key:\"isRejected\",value:function(){return\"rejected\"===this.state}},{key:\"isResolved\",value:function(){return\"resolved\"===this.state}}],[{key:\"wrap\",value:function(e){if(e instanceof this)return e;var t=new this;return e.then(t.resolve.bind(t),t.reject.bind(t)),t}}]),i}(we(Promise)),Ce=function(){function e(){o(this,e),this.store={by_msg_type:{}}}return c(e,[{key:\"has\",value:function(e){return e in this.store}},{key:\"get\",value:function(e){return this.store[e]}},{key:\"getByMsgType\",value:function(e){return this.store.by_msg_type[e]}},{key:\"set\",value:function(e,t){this.store.by_msg_type[t.msg_type]=t,this.store[e]=t}}]),e}(),Te=function(){function e(e){this.callback=e}return e.prototype.call=function(e,t){return t.subscribe(new Le(e,this.callback))},e}(),Le=function(e){function t(t,r){var n=e.call(this,t)||this;return n.add(new O(r)),n}return v(t,e),t}(j);const De=[\"balance\",\"buy\",\"cashier_payments\",\"exchange_rates\",\"p2p_advert_info\",\"p2p_advertiser_create\",\"p2p_advertiser_info\",\"p2p_order_create\",\"p2p_order_info\",\"p2p_order_list\",\"proposal\",\"proposal_open_contract\",\"ticks\",\"ticks_history\",\"transaction\",\"website_status\"];function Ie(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Be(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ie(Object(r),!0).forEach((function(t){fe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ie(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var He=function(){function e(t){o(this,e),this.api=t,this.sources={},this.subs_id_to_key={},this.key_to_subs_id={},this.buy_key_to_contract_id={},this.subs_per_msg_type=[],this.streams_list=De}return c(e,[{key:\"subscribe\",value:function(e){return this.sourceExists(e)?this.getSource(e):this.createNewSource(Be(Be({},e),{},{subscribe:1}))}},{key:\"getSource\",value:function(e){var t=Ne(e);if(t in this.sources)return this.sources[t];if(e.proposal_open_contract&&e.contract_id){var r=Object.values(this.buy_key_to_contract_id).find((function(t){return t.contract_id===e.contract_id}));if(r)return this.sources[r.buy_key]}}},{key:\"sourceExists\",value:function(e){return this.getSource(e)}},{key:\"createNewSource\",value:function(e){var t,r=this,n=Ne(e),i=this.api.sendAndGetSource(e).pipe((t=function(){n in r.key_to_subs_id&&r.forget(r.key_to_subs_id[n]).then((function(){}),(function(){}))},function(e){return e.lift(new Te(t))}),ge());return this.sources[n]=i,this.saveSubsPerMsgType(e,n),i.pipe(te()).toPromise().then((function(t){e.buy&&(r.buy_key_to_contract_id[n]={contract_id:t.buy.contract_id,buy_key:n}),r.saveSubsId(n,t)}),this.removeKeyOnError(n)),i}},{key:\"forget\",value:function(e){return this.completeSubsByIds(e),this.api.send({forget:e})}},{key:\"forgetAll\",value:function(){for(var e=this,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r.forEach((function(t){(e.subs_per_msg_type[t]||[]).forEach((function(t){return e.completeSubsByKey(t)})),e.subs_per_msg_type[t]=[]})),this.api.send({forget_all:r})}},{key:\"completeSubsByIds\",value:function(){for(var e=this,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];r.forEach((function(t){var r=e.subs_id_to_key[t];delete e.subs_id_to_key[t],e.completeSubsByKey(r)}))}},{key:\"saveSubsId\",value:function(e,t){var r=t.subscription;if(!r)return this.completeSubsByKey(e);var n=r.id;n in this.subs_id_to_key||(this.subs_id_to_key[n]=e,this.key_to_subs_id[e]=n)}},{key:\"saveSubsPerMsgType\",value:function(e,t){var r=this.getMsgType(e);r?(this.subs_per_msg_type[r]=this.subs_per_msg_type[r]||[],this.subs_per_msg_type[r].push(t)):this.api.sanityErrors.next(new xe(\"Subscription type is not found in deriv-api\"))}},{key:\"removeKeyOnError\",value:function(e){var t=this;return function(){return t.completeSubsByKey(e)}}},{key:\"completeSubsByKey\",value:function(e){if(e&&this.sources[e]){var t=this.sources[e];delete this.sources[e];var r=this.key_to_subs_id[e];delete this.subs_id_to_key[r],delete this.key_to_subs_id[e],delete this.buy_key_to_contract_id[e],t.complete()}}},{key:\"getMsgType\",value:function(e){return this.streams_list.find((function(t){return t in e}))}}]),e}();function Ne(e){return Ee(e)}var Fe=function(e){d(f,e);var t,r,n,i,u,p,l=(u=f,p=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(u);if(p){var r=y(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return h(this,e)});function f(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.storage,n=t.app_id,i=t.connection,s=t.cache,u=void 0===s?new Ce:s,c=t.endpoint,p=void 0===c?\"ws.binaryws.com\":c,d=t.lang,h=void 0===d?\"EN\":d,y=t.brand,g=void 0===y?\"\":y,_=t.middleware,m=void 0===_?{}:_;if(o(this,f),(e=l.call(this)).events=new oe,i)e.connection=i;else{if(!n)throw Error(\"An app_id is required to connect to the API\");e.shouldReconnect=!0,e.connectionArgs={app_id:n,endpointUrl:Ue(p),lang:h.toUpperCase(),brand:g.toLowerCase()},e.connect()}return e.lang=h,e.reqId=0,e.connected=new Pe,e.sanityErrors=new oe,e.middleware=m,e.pendingRequests={},e.expect_response_types={},e.subscription_manager=new He(a(e)),e.reconnect_timeout=!1,e.keep_alive_interval=!1,r&&(e.storage=new je(a(e),r)),e.cache=new je(e.storage?e.storage:a(e),u),e.connectionHandlers(),e}return c(f,[{key:\"connectionHandlers\",value:function(){this.connection.onopen=this.openHandler.bind(this),this.connection.onclose=this.closeHandler.bind(this),this.connection.onmessage=this.messageHandler.bind(this),this.connection.onerror=this.errorHandler.bind(this)}},{key:\"connect\",value:function(){if(!this.connectionArgs)throw new Re(\"Connection arguments are required to create a connection.\");this.events.next({name:\"connect\"});var e=this.connectionArgs,t=e.endpointUrl,r=e.lang,n=e.app_id,i=e.brand;this.connection=new WebSocket(\"\".concat(t.toString(),\"websockets/v3?app_id=\").concat(n,\"&l=\").concat(r,\"&brand=\").concat(i))}},{key:\"disconnect\",value:function(){this.shouldReconnect=!1,this.connection.close()}},{key:\"isConnectionClosed\",value:function(){return 2===this.connection.readyState||3===this.connection.readyState}},{key:\"sendAndGetSource\",value:function(e){var t=this,r=new oe;return e.req_id=e.req_id||++this.reqId,this.pendingRequests[e.req_id]=r,this.connected.then((function(){t.isConnectionClosed()||t.connection.send(JSON.stringify(e))})).catch((function(e){return r.error(e)})),r}},{key:\"send\",value:(i=s(g().mark((function e(){var t,r,n,i,s,o,u,c,a=this,p=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=p.length,r=new Array(t),n=0;n<t;n++)r[n]=p[n];if(!(i=this.callMiddleware(\"sendWillBeCalled\",{args:r}))){e.next=4;break}return e.abrupt(\"return\",i);case 4:if(s=r[0],o=this.callMiddleware(\"requestDataTransformer\",s)||s,this.events.next({name:\"send\",data:o}),this.deleteFromExpectResponse(o),(u=this.sendAndGetSource(o).pipe(te()).toPromise()).then((function(e){a.cache.set(o,e),a.storage&&a.storage.set(o,e)}),(function(){})),!(c=this.callMiddleware(\"sendIsCalled\",{response_promise:u,args:r}))){e.next=13;break}return e.abrupt(\"return\",c);case 13:return e.abrupt(\"return\",u);case 14:case\"end\":return e.stop()}}),e,this)}))),function(){return i.apply(this,arguments)})},{key:\"callMiddleware\",value:function(e,t){if(e in this.middleware)return this.middleware[e](t)}},{key:\"subscribe\",value:function(e){var t=this.callMiddleware(\"requestDataTransformer\",e)||e;return this.subscription_manager.subscribe(t)}},{key:\"forget\",value:(n=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.subscription_manager.forget(t));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:\"forgetAll\",value:(r=s(g().mark((function e(){var t,r=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",(t=this.subscription_manager).forgetAll.apply(t,r));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})},{key:\"keepAlivePing\",value:function(){this.ping({ping:1}),this.reconnect_timeout=setTimeout(this.reconnect.bind(this),5e3)}},{key:\"pong\",value:function(){this.reconnect_timeout&&(clearTimeout(this.reconnect_timeout),this.reconnect_timeout=!1)}},{key:\"openHandler\",value:function(){this.events.next({name:\"open\"}),this.shouldReconnect&&(this.keep_alive_interval=setInterval(this.keepAlivePing.bind(this),3e4)),1===this.connection.readyState?this.connected.resolve():setTimeout(this.openHandler.bind(this),50)}},{key:\"messageHandler\",value:function(e){if(e.data){var t=JSON.parse(e.data);this.reconnect_timeout&&\"pong\"===t.ping&&this.pong(),this.events.next({name:\"message\",data:t});var r=t.req_id;if(r in this.pendingRequests){var n=this.expect_response_types[t.msg_type];n&&n.isPending()&&n.resolve(t);var i=t.echo_req,s=i&&i.proposal_open_contract&&!i.contract_id;if(t.error&&!s)this.pendingRequests[r].error(t);else if(this.pendingRequests[r].isStopped&&t.subscription){var o=t.subscription.id;this.forget(o)}else this.pendingRequests[r].next(t)}else this.sanityErrors.next(new xe(\"Extra response\"))}else this.sanityErrors.next(new xe(\"Something went wrong while receiving the response from API.\"))}},{key:\"closeHandler\",value:function(){this.events.next({name:\"close\"}),this.shouldReconnect&&(this.events.next({name:\"reconnecting\"}),this.reconnect())}},{key:\"reconnect\",value:function(){this.shouldReconnect&&(this.keep_alive_interval&&(clearInterval(this.keep_alive_interval),this.keep_alive_interval=!1),this.pong(),this.connect(),this.connectionHandlers())}},{key:\"errorHandler\",value:function(){this.sanityErrors.next(new xe(\"Something went wrong while receiving the response from API.\"))}},{key:\"onClose\",value:function(){return this.events.pipe(C((function(e){return\"close\"===e.name})),ge())}},{key:\"onOpen\",value:function(){return this.events.pipe(C((function(e){return\"open\"===e.name})),ge())}},{key:\"onMessage\",value:function(){return this.events.pipe(C((function(e){return\"message\"===e.name})),ge())}},{key:\"expectResponse\",value:(t=s(g().mark((function e(){var t,r,n,i=this,s=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=s.length,r=new Array(t),n=0;n<t;n++)r[n]=s[n];if(r.forEach((function(e){e in i.expect_response_types||(i.expect_response_types[e]=Ve(i.cache.getByMsgType(e).then((function(t){return!t&&i.storage?i.storage.getByMsgType(e):t}))))})),1!==r.length){e.next=4;break}return e.abrupt(\"return\",this.expect_response_types[r[0]]);case 4:return e.abrupt(\"return\",Promise.all(r.map((function(e){return i.expect_response_types[e]}))));case 5:case\"end\":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:\"deleteFromExpectResponse\",value:function(e){var t=Object.keys(this.expect_response_types).find((function(t){return t in e}));this.expect_response_types[t]&&!this.expect_response_types[t].isPending()&&delete this.expect_response_types[t]}}]),f}(_e);function Ue(r){if(\"string\"!=typeof r)throw new Re(\"Endpoint must be a string, passed: \".concat(t(r)));var n,i,s;try{var o=(i=r.match(/((?:\\w*:\\/\\/)*)(.*)/),s=3,function(e){if(Array.isArray(e))return e}(i)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,i,s=[],o=!0,u=!1;try{for(r=r.call(e);!(o=(n=r.next()).done)&&(s.push(n.value),!t||s.length!==t);o=!0);}catch(e){u=!0,i=e}finally{try{o||null==r.return||r.return()}finally{if(u)throw i}}return s}}(i,s)||function(t,r){if(t){if(\"string\"==typeof t)return e(t,r);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,r):void 0}}(i,s)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),u=(o[0],o[1]),c=o[2];n=new URL(\"\".concat(\"ws://\"===u?u:\"wss://\").concat(c))}catch(e){throw new Re(\"Invalid URL: \".concat(r))}return n}function Ve(e){return Pe.wrap(e.then((function(e){return e||new Pe})))}})(),n.default})()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi9kZXJpdi1hcGkvZGlzdC9EZXJpdkFQSUJhc2ljLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0BkZXJpdi9kZXJpdi1hcGkvZGlzdC9EZXJpdkFQSUJhc2ljLmpzP2E2YzQiXSwic291cmNlc0NvbnRlbnQiOlsiIWZ1bmN0aW9uKGUsdCl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwib2JqZWN0XCI9PXR5cGVvZiBtb2R1bGU/bW9kdWxlLmV4cG9ydHM9dCgpOlwiZnVuY3Rpb25cIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoW10sdCk6XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHM/ZXhwb3J0cy5EZXJpdkFQSUJhc2ljPXQoKTplLkRlcml2QVBJQmFzaWM9dCgpfShcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMsKGZ1bmN0aW9uKCl7cmV0dXJuKCgpPT57dmFyIGU9ezc1NzooZSx0LHIpPT57ZS5leHBvcnRzPXIoNjY2KX0sMjY2OihlLHQscik9Pnt2YXIgbj1cInVuZGVmaW5lZFwiIT10eXBlb2YgSlNPTj9KU09OOnIoNDE4KTtlLmV4cG9ydHM9ZnVuY3Rpb24oZSx0KXt0fHwodD17fSksXCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKHQ9e2NtcDp0fSk7dmFyIHI9dC5zcGFjZXx8XCJcIjtcIm51bWJlclwiPT10eXBlb2YgciYmKHI9QXJyYXkocisxKS5qb2luKFwiIFwiKSk7dmFyIG8sdT1cImJvb2xlYW5cIj09dHlwZW9mIHQuY3ljbGVzJiZ0LmN5Y2xlcyxjPXQucmVwbGFjZXJ8fGZ1bmN0aW9uKGUsdCl7cmV0dXJuIHR9LGE9dC5jbXAmJihvPXQuY21wLGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbih0LHIpe3ZhciBuPXtrZXk6dCx2YWx1ZTplW3RdfSxpPXtrZXk6cix2YWx1ZTplW3JdfTtyZXR1cm4gbyhuLGkpfX0pLHA9W107cmV0dXJuIGZ1bmN0aW9uIGUodCxvLGQsaCl7dmFyIHk9cj9cIlxcblwiK25ldyBBcnJheShoKzEpLmpvaW4ocik6XCJcIixsPXI/XCI6IFwiOlwiOlwiO2lmKGQmJmQudG9KU09OJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBkLnRvSlNPTiYmKGQ9ZC50b0pTT04oKSksdm9pZCAwIT09KGQ9Yy5jYWxsKHQsbyxkKSkpe2lmKFwib2JqZWN0XCIhPXR5cGVvZiBkfHxudWxsPT09ZClyZXR1cm4gbi5zdHJpbmdpZnkoZCk7aWYoaShkKSl7Zm9yKHZhciBnPVtdLGY9MDtmPGQubGVuZ3RoO2YrKyl7dmFyIF89ZShkLGYsZFtmXSxoKzEpfHxuLnN0cmluZ2lmeShudWxsKTtnLnB1c2goeStyK18pfXJldHVyblwiW1wiK2cuam9pbihcIixcIikreStcIl1cIn1pZigtMSE9PXAuaW5kZXhPZihkKSl7aWYodSlyZXR1cm4gbi5zdHJpbmdpZnkoXCJfX2N5Y2xlX19cIik7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkNvbnZlcnRpbmcgY2lyY3VsYXIgc3RydWN0dXJlIHRvIEpTT05cIil9cC5wdXNoKGQpO3ZhciBtPXMoZCkuc29ydChhJiZhKGQpKTtmb3IoZz1bXSxmPTA7ZjxtLmxlbmd0aDtmKyspe3ZhciB2PWUoZCxvPW1bZl0sZFtvXSxoKzEpO2lmKHYpe3ZhciBxPW4uc3RyaW5naWZ5KG8pK2wrdjtnLnB1c2goeStyK3EpfX1yZXR1cm4gcC5zcGxpY2UocC5pbmRleE9mKGQpLDEpLFwie1wiK2cuam9pbihcIixcIikreStcIn1cIn19KHtcIlwiOmV9LFwiXCIsZSwwKX07dmFyIGk9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuXCJbb2JqZWN0IEFycmF5XVwiPT09e30udG9TdHJpbmcuY2FsbChlKX0scz1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7dmFyIHQ9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eXx8ZnVuY3Rpb24oKXtyZXR1cm4hMH0scj1bXTtmb3IodmFyIG4gaW4gZSl0LmNhbGwoZSxuKSYmci5wdXNoKG4pO3JldHVybiByfX0sNDE4OihlLHQscik9Pnt0LnBhcnNlPXIoMzk2KSx0LnN0cmluZ2lmeT1yKDE3Nyl9LDM5NjplPT57dmFyIHQscixuLGkscz17J1wiJzonXCInLFwiXFxcXFwiOlwiXFxcXFwiLFwiL1wiOlwiL1wiLGI6XCJcXGJcIixmOlwiXFxmXCIsbjpcIlxcblwiLHI6XCJcXHJcIix0OlwiXFx0XCJ9LG89ZnVuY3Rpb24oZSl7dGhyb3d7bmFtZTpcIlN5bnRheEVycm9yXCIsbWVzc2FnZTplLGF0OnQsdGV4dDpufX0sdT1mdW5jdGlvbihlKXtyZXR1cm4gZSYmZSE9PXImJm8oXCJFeHBlY3RlZCAnXCIrZStcIicgaW5zdGVhZCBvZiAnXCIrcitcIidcIikscj1uLmNoYXJBdCh0KSx0Kz0xLHJ9LGM9ZnVuY3Rpb24oKXt2YXIgZSx0PVwiXCI7Zm9yKFwiLVwiPT09ciYmKHQ9XCItXCIsdShcIi1cIikpO3I+PVwiMFwiJiZyPD1cIjlcIjspdCs9cix1KCk7aWYoXCIuXCI9PT1yKWZvcih0Kz1cIi5cIjt1KCkmJnI+PVwiMFwiJiZyPD1cIjlcIjspdCs9cjtpZihcImVcIj09PXJ8fFwiRVwiPT09cilmb3IodCs9cix1KCksXCItXCIhPT1yJiZcIitcIiE9PXJ8fCh0Kz1yLHUoKSk7cj49XCIwXCImJnI8PVwiOVwiOyl0Kz1yLHUoKTtpZihlPSt0LGlzRmluaXRlKGUpKXJldHVybiBlO28oXCJCYWQgbnVtYmVyXCIpfSxhPWZ1bmN0aW9uKCl7dmFyIGUsdCxuLGk9XCJcIjtpZignXCInPT09cilmb3IoO3UoKTspe2lmKCdcIic9PT1yKXJldHVybiB1KCksaTtpZihcIlxcXFxcIj09PXIpaWYodSgpLFwidVwiPT09cil7Zm9yKG49MCx0PTA7dDw0JiYoZT1wYXJzZUludCh1KCksMTYpLGlzRmluaXRlKGUpKTt0Kz0xKW49MTYqbitlO2krPVN0cmluZy5mcm9tQ2hhckNvZGUobil9ZWxzZXtpZihcInN0cmluZ1wiIT10eXBlb2Ygc1tyXSlicmVhaztpKz1zW3JdfWVsc2UgaSs9cn1vKFwiQmFkIHN0cmluZ1wiKX0scD1mdW5jdGlvbigpe2Zvcig7ciYmcjw9XCIgXCI7KXUoKX07aT1mdW5jdGlvbigpe3N3aXRjaChwKCkscil7Y2FzZVwie1wiOnJldHVybiBmdW5jdGlvbigpe3ZhciBlLHQ9e307aWYoXCJ7XCI9PT1yKXtpZih1KFwie1wiKSxwKCksXCJ9XCI9PT1yKXJldHVybiB1KFwifVwiKSx0O2Zvcig7cjspe2lmKGU9YSgpLHAoKSx1KFwiOlwiKSxPYmplY3QuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpJiZvKCdEdXBsaWNhdGUga2V5IFwiJytlKydcIicpLHRbZV09aSgpLHAoKSxcIn1cIj09PXIpcmV0dXJuIHUoXCJ9XCIpLHQ7dShcIixcIikscCgpfX1vKFwiQmFkIG9iamVjdFwiKX0oKTtjYXNlXCJbXCI6cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9W107aWYoXCJbXCI9PT1yKXtpZih1KFwiW1wiKSxwKCksXCJdXCI9PT1yKXJldHVybiB1KFwiXVwiKSxlO2Zvcig7cjspe2lmKGUucHVzaChpKCkpLHAoKSxcIl1cIj09PXIpcmV0dXJuIHUoXCJdXCIpLGU7dShcIixcIikscCgpfX1vKFwiQmFkIGFycmF5XCIpfSgpO2Nhc2UnXCInOnJldHVybiBhKCk7Y2FzZVwiLVwiOnJldHVybiBjKCk7ZGVmYXVsdDpyZXR1cm4gcj49XCIwXCImJnI8PVwiOVwiP2MoKTpmdW5jdGlvbigpe3N3aXRjaChyKXtjYXNlXCJ0XCI6cmV0dXJuIHUoXCJ0XCIpLHUoXCJyXCIpLHUoXCJ1XCIpLHUoXCJlXCIpLCEwO2Nhc2VcImZcIjpyZXR1cm4gdShcImZcIiksdShcImFcIiksdShcImxcIiksdShcInNcIiksdShcImVcIiksITE7Y2FzZVwiblwiOnJldHVybiB1KFwiblwiKSx1KFwidVwiKSx1KFwibFwiKSx1KFwibFwiKSxudWxsfW8oXCJVbmV4cGVjdGVkICdcIityK1wiJ1wiKX0oKX19LGUuZXhwb3J0cz1mdW5jdGlvbihlLHMpe3ZhciB1O3JldHVybiBuPWUsdD0wLHI9XCIgXCIsdT1pKCkscCgpLHImJm8oXCJTeW50YXggZXJyb3JcIiksXCJmdW5jdGlvblwiPT10eXBlb2Ygcz9mdW5jdGlvbiBlKHQscil7dmFyIG4saSxvPXRbcl07aWYobyYmXCJvYmplY3RcIj09dHlwZW9mIG8pZm9yKG4gaW4gbylPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobyxuKSYmKHZvaWQgMCE9PShpPWUobyxuKSk/b1tuXT1pOmRlbGV0ZSBvW25dKTtyZXR1cm4gcy5jYWxsKHQscixvKX0oe1wiXCI6dX0sXCJcIik6dX19LDE3NzplPT57dmFyIHQscixuLGk9L1tcXFxcXFxcIlxceDAwLVxceDFmXFx4N2YtXFx4OWZcXHUwMGFkXFx1MDYwMC1cXHUwNjA0XFx1MDcwZlxcdTE3YjRcXHUxN2I1XFx1MjAwYy1cXHUyMDBmXFx1MjAyOC1cXHUyMDJmXFx1MjA2MC1cXHUyMDZmXFx1ZmVmZlxcdWZmZjAtXFx1ZmZmZl0vZyxzPXtcIlxcYlwiOlwiXFxcXGJcIixcIlxcdFwiOlwiXFxcXHRcIixcIlxcblwiOlwiXFxcXG5cIixcIlxcZlwiOlwiXFxcXGZcIixcIlxcclwiOlwiXFxcXHJcIiwnXCInOidcXFxcXCInLFwiXFxcXFwiOlwiXFxcXFxcXFxcIn07ZnVuY3Rpb24gbyhlKXtyZXR1cm4gaS5sYXN0SW5kZXg9MCxpLnRlc3QoZSk/J1wiJytlLnJlcGxhY2UoaSwoZnVuY3Rpb24oZSl7dmFyIHQ9c1tlXTtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdD90OlwiXFxcXHVcIisoXCIwMDAwXCIrZS5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KSkuc2xpY2UoLTQpfSkpKydcIic6J1wiJytlKydcIid9ZnVuY3Rpb24gdShlLGkpe3ZhciBzLGMsYSxwLGQsaD10LHk9aVtlXTtzd2l0Y2goeSYmXCJvYmplY3RcIj09dHlwZW9mIHkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHkudG9KU09OJiYoeT15LnRvSlNPTihlKSksXCJmdW5jdGlvblwiPT10eXBlb2YgbiYmKHk9bi5jYWxsKGksZSx5KSksdHlwZW9mIHkpe2Nhc2VcInN0cmluZ1wiOnJldHVybiBvKHkpO2Nhc2VcIm51bWJlclwiOnJldHVybiBpc0Zpbml0ZSh5KT9TdHJpbmcoeSk6XCJudWxsXCI7Y2FzZVwiYm9vbGVhblwiOmNhc2VcIm51bGxcIjpyZXR1cm4gU3RyaW5nKHkpO2Nhc2VcIm9iamVjdFwiOmlmKCF5KXJldHVyblwibnVsbFwiO2lmKHQrPXIsZD1bXSxcIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmFwcGx5KHkpKXtmb3IocD15Lmxlbmd0aCxzPTA7czxwO3MrPTEpZFtzXT11KHMseSl8fFwibnVsbFwiO3JldHVybiBhPTA9PT1kLmxlbmd0aD9cIltdXCI6dD9cIltcXG5cIit0K2Quam9pbihcIixcXG5cIit0KStcIlxcblwiK2grXCJdXCI6XCJbXCIrZC5qb2luKFwiLFwiKStcIl1cIix0PWgsYX1pZihuJiZcIm9iamVjdFwiPT10eXBlb2Ygbilmb3IocD1uLmxlbmd0aCxzPTA7czxwO3MrPTEpXCJzdHJpbmdcIj09dHlwZW9mKGM9bltzXSkmJihhPXUoYyx5KSkmJmQucHVzaChvKGMpKyh0P1wiOiBcIjpcIjpcIikrYSk7ZWxzZSBmb3IoYyBpbiB5KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh5LGMpJiYoYT11KGMseSkpJiZkLnB1c2gobyhjKSsodD9cIjogXCI6XCI6XCIpK2EpO3JldHVybiBhPTA9PT1kLmxlbmd0aD9cInt9XCI6dD9cIntcXG5cIit0K2Quam9pbihcIixcXG5cIit0KStcIlxcblwiK2grXCJ9XCI6XCJ7XCIrZC5qb2luKFwiLFwiKStcIn1cIix0PWgsYX19ZS5leHBvcnRzPWZ1bmN0aW9uKGUsaSxzKXt2YXIgbztpZih0PVwiXCIscj1cIlwiLFwibnVtYmVyXCI9PXR5cGVvZiBzKWZvcihvPTA7bzxzO28rPTEpcis9XCIgXCI7ZWxzZVwic3RyaW5nXCI9PXR5cGVvZiBzJiYocj1zKTtpZihuPWksaSYmXCJmdW5jdGlvblwiIT10eXBlb2YgaSYmKFwib2JqZWN0XCIhPXR5cGVvZiBpfHxcIm51bWJlclwiIT10eXBlb2YgaS5sZW5ndGgpKXRocm93IG5ldyBFcnJvcihcIkpTT04uc3RyaW5naWZ5XCIpO3JldHVybiB1KFwiXCIse1wiXCI6ZX0pfX0sNjY2OmU9Pnt2YXIgdD1mdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjt2YXIgdCxyPU9iamVjdC5wcm90b3R5cGUsbj1yLmhhc093blByb3BlcnR5LGk9XCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sP1N5bWJvbDp7fSxzPWkuaXRlcmF0b3J8fFwiQEBpdGVyYXRvclwiLG89aS5hc3luY0l0ZXJhdG9yfHxcIkBAYXN5bmNJdGVyYXRvclwiLHU9aS50b1N0cmluZ1RhZ3x8XCJAQHRvU3RyaW5nVGFnXCI7ZnVuY3Rpb24gYyhlLHQscil7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsZW51bWVyYWJsZTohMCxjb25maWd1cmFibGU6ITAsd3JpdGFibGU6ITB9KSxlW3RdfXRyeXtjKHt9LFwiXCIpfWNhdGNoKGUpe2M9ZnVuY3Rpb24oZSx0LHIpe3JldHVybiBlW3RdPXJ9fWZ1bmN0aW9uIGEoZSx0LHIsbil7dmFyIGk9dCYmdC5wcm90b3R5cGUgaW5zdGFuY2VvZiBmP3Q6ZixzPU9iamVjdC5jcmVhdGUoaS5wcm90b3R5cGUpLG89bmV3IE8obnx8W10pO3JldHVybiBzLl9pbnZva2U9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPWQ7cmV0dXJuIGZ1bmN0aW9uKGkscyl7aWYobj09PXkpdGhyb3cgbmV3IEVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgcnVubmluZ1wiKTtpZihuPT09bCl7aWYoXCJ0aHJvd1wiPT09aSl0aHJvdyBzO3JldHVybiBFKCl9Zm9yKHIubWV0aG9kPWksci5hcmc9czs7KXt2YXIgbz1yLmRlbGVnYXRlO2lmKG8pe3ZhciB1PXgobyxyKTtpZih1KXtpZih1PT09Zyljb250aW51ZTtyZXR1cm4gdX19aWYoXCJuZXh0XCI9PT1yLm1ldGhvZClyLnNlbnQ9ci5fc2VudD1yLmFyZztlbHNlIGlmKFwidGhyb3dcIj09PXIubWV0aG9kKXtpZihuPT09ZCl0aHJvdyBuPWwsci5hcmc7ci5kaXNwYXRjaEV4Y2VwdGlvbihyLmFyZyl9ZWxzZVwicmV0dXJuXCI9PT1yLm1ldGhvZCYmci5hYnJ1cHQoXCJyZXR1cm5cIixyLmFyZyk7bj15O3ZhciBjPXAoZSx0LHIpO2lmKFwibm9ybWFsXCI9PT1jLnR5cGUpe2lmKG49ci5kb25lP2w6aCxjLmFyZz09PWcpY29udGludWU7cmV0dXJue3ZhbHVlOmMuYXJnLGRvbmU6ci5kb25lfX1cInRocm93XCI9PT1jLnR5cGUmJihuPWwsci5tZXRob2Q9XCJ0aHJvd1wiLHIuYXJnPWMuYXJnKX19fShlLHIsbyksc31mdW5jdGlvbiBwKGUsdCxyKXt0cnl7cmV0dXJue3R5cGU6XCJub3JtYWxcIixhcmc6ZS5jYWxsKHQscil9fWNhdGNoKGUpe3JldHVybnt0eXBlOlwidGhyb3dcIixhcmc6ZX19fWUud3JhcD1hO3ZhciBkPVwic3VzcGVuZGVkU3RhcnRcIixoPVwic3VzcGVuZGVkWWllbGRcIix5PVwiZXhlY3V0aW5nXCIsbD1cImNvbXBsZXRlZFwiLGc9e307ZnVuY3Rpb24gZigpe31mdW5jdGlvbiBfKCl7fWZ1bmN0aW9uIG0oKXt9dmFyIHY9e307Yyh2LHMsKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSk7dmFyIHE9T2JqZWN0LmdldFByb3RvdHlwZU9mLGI9cSYmcShxKFMoW10pKSk7YiYmYiE9PXImJm4uY2FsbChiLHMpJiYodj1iKTt2YXIgdz1tLnByb3RvdHlwZT1mLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHYpO2Z1bmN0aW9uIGsoZSl7W1wibmV4dFwiLFwidGhyb3dcIixcInJldHVyblwiXS5mb3JFYWNoKChmdW5jdGlvbih0KXtjKGUsdCwoZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX2ludm9rZSh0LGUpfSkpfSkpfWZ1bmN0aW9uIEEoZSx0KXtmdW5jdGlvbiByKGkscyxvLHUpe3ZhciBjPXAoZVtpXSxlLHMpO2lmKFwidGhyb3dcIiE9PWMudHlwZSl7dmFyIGE9Yy5hcmcsZD1hLnZhbHVlO3JldHVybiBkJiZcIm9iamVjdFwiPT10eXBlb2YgZCYmbi5jYWxsKGQsXCJfX2F3YWl0XCIpP3QucmVzb2x2ZShkLl9fYXdhaXQpLnRoZW4oKGZ1bmN0aW9uKGUpe3IoXCJuZXh0XCIsZSxvLHUpfSksKGZ1bmN0aW9uKGUpe3IoXCJ0aHJvd1wiLGUsbyx1KX0pKTp0LnJlc29sdmUoZCkudGhlbigoZnVuY3Rpb24oZSl7YS52YWx1ZT1lLG8oYSl9KSwoZnVuY3Rpb24oZSl7cmV0dXJuIHIoXCJ0aHJvd1wiLGUsbyx1KX0pKX11KGMuYXJnKX12YXIgaTt0aGlzLl9pbnZva2U9ZnVuY3Rpb24oZSxuKXtmdW5jdGlvbiBzKCl7cmV0dXJuIG5ldyB0KChmdW5jdGlvbih0LGkpe3IoZSxuLHQsaSl9KSl9cmV0dXJuIGk9aT9pLnRoZW4ocyxzKTpzKCl9fWZ1bmN0aW9uIHgoZSxyKXt2YXIgbj1lLml0ZXJhdG9yW3IubWV0aG9kXTtpZihuPT09dCl7aWYoci5kZWxlZ2F0ZT1udWxsLFwidGhyb3dcIj09PXIubWV0aG9kKXtpZihlLml0ZXJhdG9yLnJldHVybiYmKHIubWV0aG9kPVwicmV0dXJuXCIsci5hcmc9dCx4KGUsciksXCJ0aHJvd1wiPT09ci5tZXRob2QpKXJldHVybiBnO3IubWV0aG9kPVwidGhyb3dcIixyLmFyZz1uZXcgVHlwZUVycm9yKFwiVGhlIGl0ZXJhdG9yIGRvZXMgbm90IHByb3ZpZGUgYSAndGhyb3cnIG1ldGhvZFwiKX1yZXR1cm4gZ312YXIgaT1wKG4sZS5pdGVyYXRvcixyLmFyZyk7aWYoXCJ0aHJvd1wiPT09aS50eXBlKXJldHVybiByLm1ldGhvZD1cInRocm93XCIsci5hcmc9aS5hcmcsci5kZWxlZ2F0ZT1udWxsLGc7dmFyIHM9aS5hcmc7cmV0dXJuIHM/cy5kb25lPyhyW2UucmVzdWx0TmFtZV09cy52YWx1ZSxyLm5leHQ9ZS5uZXh0TG9jLFwicmV0dXJuXCIhPT1yLm1ldGhvZCYmKHIubWV0aG9kPVwibmV4dFwiLHIuYXJnPXQpLHIuZGVsZWdhdGU9bnVsbCxnKTpzOihyLm1ldGhvZD1cInRocm93XCIsci5hcmc9bmV3IFR5cGVFcnJvcihcIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0XCIpLHIuZGVsZWdhdGU9bnVsbCxnKX1mdW5jdGlvbiBSKGUpe3ZhciB0PXt0cnlMb2M6ZVswXX07MSBpbiBlJiYodC5jYXRjaExvYz1lWzFdKSwyIGluIGUmJih0LmZpbmFsbHlMb2M9ZVsyXSx0LmFmdGVyTG9jPWVbM10pLHRoaXMudHJ5RW50cmllcy5wdXNoKHQpfWZ1bmN0aW9uIE0oZSl7dmFyIHQ9ZS5jb21wbGV0aW9ufHx7fTt0LnR5cGU9XCJub3JtYWxcIixkZWxldGUgdC5hcmcsZS5jb21wbGV0aW9uPXR9ZnVuY3Rpb24gTyhlKXt0aGlzLnRyeUVudHJpZXM9W3t0cnlMb2M6XCJyb290XCJ9XSxlLmZvckVhY2goUix0aGlzKSx0aGlzLnJlc2V0KCEwKX1mdW5jdGlvbiBTKGUpe2lmKGUpe3ZhciByPWVbc107aWYocilyZXR1cm4gci5jYWxsKGUpO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIGUubmV4dClyZXR1cm4gZTtpZighaXNOYU4oZS5sZW5ndGgpKXt2YXIgaT0tMSxvPWZ1bmN0aW9uIHIoKXtmb3IoOysraTxlLmxlbmd0aDspaWYobi5jYWxsKGUsaSkpcmV0dXJuIHIudmFsdWU9ZVtpXSxyLmRvbmU9ITEscjtyZXR1cm4gci52YWx1ZT10LHIuZG9uZT0hMCxyfTtyZXR1cm4gby5uZXh0PW99fXJldHVybntuZXh0OkV9fWZ1bmN0aW9uIEUoKXtyZXR1cm57dmFsdWU6dCxkb25lOiEwfX1yZXR1cm4gXy5wcm90b3R5cGU9bSxjKHcsXCJjb25zdHJ1Y3RvclwiLG0pLGMobSxcImNvbnN0cnVjdG9yXCIsXyksXy5kaXNwbGF5TmFtZT1jKG0sdSxcIkdlbmVyYXRvckZ1bmN0aW9uXCIpLGUuaXNHZW5lcmF0b3JGdW5jdGlvbj1mdW5jdGlvbihlKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlJiZlLmNvbnN0cnVjdG9yO3JldHVybiEhdCYmKHQ9PT1ffHxcIkdlbmVyYXRvckZ1bmN0aW9uXCI9PT0odC5kaXNwbGF5TmFtZXx8dC5uYW1lKSl9LGUubWFyaz1mdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mP09iamVjdC5zZXRQcm90b3R5cGVPZihlLG0pOihlLl9fcHJvdG9fXz1tLGMoZSx1LFwiR2VuZXJhdG9yRnVuY3Rpb25cIikpLGUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUodyksZX0sZS5hd3JhcD1mdW5jdGlvbihlKXtyZXR1cm57X19hd2FpdDplfX0sayhBLnByb3RvdHlwZSksYyhBLnByb3RvdHlwZSxvLChmdW5jdGlvbigpe3JldHVybiB0aGlzfSkpLGUuQXN5bmNJdGVyYXRvcj1BLGUuYXN5bmM9ZnVuY3Rpb24odCxyLG4saSxzKXt2b2lkIDA9PT1zJiYocz1Qcm9taXNlKTt2YXIgbz1uZXcgQShhKHQscixuLGkpLHMpO3JldHVybiBlLmlzR2VuZXJhdG9yRnVuY3Rpb24ocik/bzpvLm5leHQoKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gZS5kb25lP2UudmFsdWU6by5uZXh0KCl9KSl9LGsodyksYyh3LHUsXCJHZW5lcmF0b3JcIiksYyh3LHMsKGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSksYyh3LFwidG9TdHJpbmdcIiwoZnVuY3Rpb24oKXtyZXR1cm5cIltvYmplY3QgR2VuZXJhdG9yXVwifSkpLGUua2V5cz1mdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSl0LnB1c2gocik7cmV0dXJuIHQucmV2ZXJzZSgpLGZ1bmN0aW9uIHIoKXtmb3IoO3QubGVuZ3RoOyl7dmFyIG49dC5wb3AoKTtpZihuIGluIGUpcmV0dXJuIHIudmFsdWU9bixyLmRvbmU9ITEscn1yZXR1cm4gci5kb25lPSEwLHJ9fSxlLnZhbHVlcz1TLE8ucHJvdG90eXBlPXtjb25zdHJ1Y3RvcjpPLHJlc2V0OmZ1bmN0aW9uKGUpe2lmKHRoaXMucHJldj0wLHRoaXMubmV4dD0wLHRoaXMuc2VudD10aGlzLl9zZW50PXQsdGhpcy5kb25lPSExLHRoaXMuZGVsZWdhdGU9bnVsbCx0aGlzLm1ldGhvZD1cIm5leHRcIix0aGlzLmFyZz10LHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKE0pLCFlKWZvcih2YXIgciBpbiB0aGlzKVwidFwiPT09ci5jaGFyQXQoMCkmJm4uY2FsbCh0aGlzLHIpJiYhaXNOYU4oK3Iuc2xpY2UoMSkpJiYodGhpc1tyXT10KX0sc3RvcDpmdW5jdGlvbigpe3RoaXMuZG9uZT0hMDt2YXIgZT10aGlzLnRyeUVudHJpZXNbMF0uY29tcGxldGlvbjtpZihcInRocm93XCI9PT1lLnR5cGUpdGhyb3cgZS5hcmc7cmV0dXJuIHRoaXMucnZhbH0sZGlzcGF0Y2hFeGNlcHRpb246ZnVuY3Rpb24oZSl7aWYodGhpcy5kb25lKXRocm93IGU7dmFyIHI9dGhpcztmdW5jdGlvbiBpKG4saSl7cmV0dXJuIHUudHlwZT1cInRocm93XCIsdS5hcmc9ZSxyLm5leHQ9bixpJiYoci5tZXRob2Q9XCJuZXh0XCIsci5hcmc9dCksISFpfWZvcih2YXIgcz10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7cz49MDstLXMpe3ZhciBvPXRoaXMudHJ5RW50cmllc1tzXSx1PW8uY29tcGxldGlvbjtpZihcInJvb3RcIj09PW8udHJ5TG9jKXJldHVybiBpKFwiZW5kXCIpO2lmKG8udHJ5TG9jPD10aGlzLnByZXYpe3ZhciBjPW4uY2FsbChvLFwiY2F0Y2hMb2NcIiksYT1uLmNhbGwobyxcImZpbmFsbHlMb2NcIik7aWYoYyYmYSl7aWYodGhpcy5wcmV2PG8uY2F0Y2hMb2MpcmV0dXJuIGkoby5jYXRjaExvYywhMCk7aWYodGhpcy5wcmV2PG8uZmluYWxseUxvYylyZXR1cm4gaShvLmZpbmFsbHlMb2MpfWVsc2UgaWYoYyl7aWYodGhpcy5wcmV2PG8uY2F0Y2hMb2MpcmV0dXJuIGkoby5jYXRjaExvYywhMCl9ZWxzZXtpZighYSl0aHJvdyBuZXcgRXJyb3IoXCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseVwiKTtpZih0aGlzLnByZXY8by5maW5hbGx5TG9jKXJldHVybiBpKG8uZmluYWxseUxvYyl9fX19LGFicnVwdDpmdW5jdGlvbihlLHQpe2Zvcih2YXIgcj10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7cj49MDstLXIpe3ZhciBpPXRoaXMudHJ5RW50cmllc1tyXTtpZihpLnRyeUxvYzw9dGhpcy5wcmV2JiZuLmNhbGwoaSxcImZpbmFsbHlMb2NcIikmJnRoaXMucHJldjxpLmZpbmFsbHlMb2Mpe3ZhciBzPWk7YnJlYWt9fXMmJihcImJyZWFrXCI9PT1lfHxcImNvbnRpbnVlXCI9PT1lKSYmcy50cnlMb2M8PXQmJnQ8PXMuZmluYWxseUxvYyYmKHM9bnVsbCk7dmFyIG89cz9zLmNvbXBsZXRpb246e307cmV0dXJuIG8udHlwZT1lLG8uYXJnPXQscz8odGhpcy5tZXRob2Q9XCJuZXh0XCIsdGhpcy5uZXh0PXMuZmluYWxseUxvYyxnKTp0aGlzLmNvbXBsZXRlKG8pfSxjb21wbGV0ZTpmdW5jdGlvbihlLHQpe2lmKFwidGhyb3dcIj09PWUudHlwZSl0aHJvdyBlLmFyZztyZXR1cm5cImJyZWFrXCI9PT1lLnR5cGV8fFwiY29udGludWVcIj09PWUudHlwZT90aGlzLm5leHQ9ZS5hcmc6XCJyZXR1cm5cIj09PWUudHlwZT8odGhpcy5ydmFsPXRoaXMuYXJnPWUuYXJnLHRoaXMubWV0aG9kPVwicmV0dXJuXCIsdGhpcy5uZXh0PVwiZW5kXCIpOlwibm9ybWFsXCI9PT1lLnR5cGUmJnQmJih0aGlzLm5leHQ9dCksZ30sZmluaXNoOmZ1bmN0aW9uKGUpe2Zvcih2YXIgdD10aGlzLnRyeUVudHJpZXMubGVuZ3RoLTE7dD49MDstLXQpe3ZhciByPXRoaXMudHJ5RW50cmllc1t0XTtpZihyLmZpbmFsbHlMb2M9PT1lKXJldHVybiB0aGlzLmNvbXBsZXRlKHIuY29tcGxldGlvbixyLmFmdGVyTG9jKSxNKHIpLGd9fSxjYXRjaDpmdW5jdGlvbihlKXtmb3IodmFyIHQ9dGhpcy50cnlFbnRyaWVzLmxlbmd0aC0xO3Q+PTA7LS10KXt2YXIgcj10aGlzLnRyeUVudHJpZXNbdF07aWYoci50cnlMb2M9PT1lKXt2YXIgbj1yLmNvbXBsZXRpb247aWYoXCJ0aHJvd1wiPT09bi50eXBlKXt2YXIgaT1uLmFyZztNKHIpfXJldHVybiBpfX10aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIil9LGRlbGVnYXRlWWllbGQ6ZnVuY3Rpb24oZSxyLG4pe3JldHVybiB0aGlzLmRlbGVnYXRlPXtpdGVyYXRvcjpTKGUpLHJlc3VsdE5hbWU6cixuZXh0TG9jOm59LFwibmV4dFwiPT09dGhpcy5tZXRob2QmJih0aGlzLmFyZz10KSxnfX0sZX0oZS5leHBvcnRzKTt0cnl7cmVnZW5lcmF0b3JSdW50aW1lPXR9Y2F0Y2goZSl7XCJvYmplY3RcIj09dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpcy5yZWdlbmVyYXRvclJ1bnRpbWU9dDpGdW5jdGlvbihcInJcIixcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikodCl9fX0sdD17fTtmdW5jdGlvbiByKG4pe3ZhciBpPXRbbl07aWYodm9pZCAwIT09aSlyZXR1cm4gaS5leHBvcnRzO3ZhciBzPXRbbl09e2V4cG9ydHM6e319O3JldHVybiBlW25dKHMscy5leHBvcnRzLHIpLHMuZXhwb3J0c31yLm49ZT0+e3ZhciB0PWUmJmUuX19lc01vZHVsZT8oKT0+ZS5kZWZhdWx0OigpPT5lO3JldHVybiByLmQodCx7YTp0fSksdH0sci5kPShlLHQpPT57Zm9yKHZhciBuIGluIHQpci5vKHQsbikmJiFyLm8oZSxuKSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsbix7ZW51bWVyYWJsZTohMCxnZXQ6dFtuXX0pfSxyLm89KGUsdCk9Pk9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHQpO3ZhciBuPXt9O3JldHVybigoKT0+e1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGUoZSx0KXsobnVsbD09dHx8dD5lLmxlbmd0aCkmJih0PWUubGVuZ3RoKTtmb3IodmFyIHI9MCxuPW5ldyBBcnJheSh0KTtyPHQ7cisrKW5bcl09ZVtyXTtyZXR1cm4gbn1mdW5jdGlvbiB0KGUpe3JldHVybiB0PVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmXCJzeW1ib2xcIj09dHlwZW9mIFN5bWJvbC5pdGVyYXRvcj9mdW5jdGlvbihlKXtyZXR1cm4gdHlwZW9mIGV9OmZ1bmN0aW9uKGUpe3JldHVybiBlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBTeW1ib2wmJmUuY29uc3RydWN0b3I9PT1TeW1ib2wmJmUhPT1TeW1ib2wucHJvdG90eXBlP1wic3ltYm9sXCI6dHlwZW9mIGV9LHQoZSl9ZnVuY3Rpb24gaShlLHQscixuLGkscyxvKXt0cnl7dmFyIHU9ZVtzXShvKSxjPXUudmFsdWV9Y2F0Y2goZSl7cmV0dXJuIHZvaWQgcihlKX11LmRvbmU/dChjKTpQcm9taXNlLnJlc29sdmUoYykudGhlbihuLGkpfWZ1bmN0aW9uIHMoZSl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxyPWFyZ3VtZW50cztyZXR1cm4gbmV3IFByb21pc2UoKGZ1bmN0aW9uKG4scyl7dmFyIG89ZS5hcHBseSh0LHIpO2Z1bmN0aW9uIHUoZSl7aShvLG4scyx1LGMsXCJuZXh0XCIsZSl9ZnVuY3Rpb24gYyhlKXtpKG8sbixzLHUsYyxcInRocm93XCIsZSl9dSh2b2lkIDApfSkpfX1mdW5jdGlvbiBvKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgdCkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX1mdW5jdGlvbiB1KGUsdCl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBuPXRbcl07bi5lbnVtZXJhYmxlPW4uZW51bWVyYWJsZXx8ITEsbi5jb25maWd1cmFibGU9ITAsXCJ2YWx1ZVwiaW4gbiYmKG4ud3JpdGFibGU9ITApLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLG4ua2V5LG4pfX1mdW5jdGlvbiBjKGUsdCxyKXtyZXR1cm4gdCYmdShlLnByb3RvdHlwZSx0KSxyJiZ1KGUsciksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSxlfWZ1bmN0aW9uIGEoZSl7aWYodm9pZCAwPT09ZSl0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoXCJ0aGlzIGhhc24ndCBiZWVuIGluaXRpYWxpc2VkIC0gc3VwZXIoKSBoYXNuJ3QgYmVlbiBjYWxsZWRcIik7cmV0dXJuIGV9ZnVuY3Rpb24gcChlLHQpe3JldHVybiBwPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZS5fX3Byb3RvX189dCxlfSxwKGUsdCl9ZnVuY3Rpb24gZChlLHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQmJm51bGwhPT10KXRocm93IG5ldyBUeXBlRXJyb3IoXCJTdXBlciBleHByZXNzaW9uIG11c3QgZWl0aGVyIGJlIG51bGwgb3IgYSBmdW5jdGlvblwiKTtlLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKHQmJnQucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6ZSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSksT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsXCJwcm90b3R5cGVcIix7d3JpdGFibGU6ITF9KSx0JiZwKGUsdCl9ZnVuY3Rpb24gaChlLHIpe2lmKHImJihcIm9iamVjdFwiPT09dChyKXx8XCJmdW5jdGlvblwiPT10eXBlb2YgcikpcmV0dXJuIHI7aWYodm9pZCAwIT09cil0aHJvdyBuZXcgVHlwZUVycm9yKFwiRGVyaXZlZCBjb25zdHJ1Y3RvcnMgbWF5IG9ubHkgcmV0dXJuIG9iamVjdCBvciB1bmRlZmluZWRcIik7cmV0dXJuIGEoZSl9ZnVuY3Rpb24geShlKXtyZXR1cm4geT1PYmplY3Quc2V0UHJvdG90eXBlT2Y/T2JqZWN0LmdldFByb3RvdHlwZU9mOmZ1bmN0aW9uKGUpe3JldHVybiBlLl9fcHJvdG9fX3x8T2JqZWN0LmdldFByb3RvdHlwZU9mKGUpfSx5KGUpfXIuZChuLHtkZWZhdWx0OigpPT5GZX0pO3ZhciBsPXIoNzU3KSxnPXIubihsKTtmdW5jdGlvbiBmKCl7cmV0dXJuIEVycm9yLmNhbGwodGhpcyksdGhpcy5tZXNzYWdlPVwibm8gZWxlbWVudHMgaW4gc2VxdWVuY2VcIix0aGlzLm5hbWU9XCJFbXB0eUVycm9yXCIsdGhpc31mLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7dmFyIF89ZixtPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIG09T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKGUsdCl7ZS5fX3Byb3RvX189dH18fGZ1bmN0aW9uKGUsdCl7Zm9yKHZhciByIGluIHQpdC5oYXNPd25Qcm9wZXJ0eShyKSYmKGVbcl09dFtyXSl9LG0oZSx0KX07ZnVuY3Rpb24gdihlLHQpe2Z1bmN0aW9uIHIoKXt0aGlzLmNvbnN0cnVjdG9yPWV9bShlLHQpLGUucHJvdG90eXBlPW51bGw9PT10P09iamVjdC5jcmVhdGUodCk6KHIucHJvdG90eXBlPXQucHJvdG90eXBlLG5ldyByKX1mdW5jdGlvbiBxKGUpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGV9dmFyIGI9ITEsdz17UHJvbWlzZTp2b2lkIDAsc2V0IHVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcoZSl7ZSYmKG5ldyBFcnJvcikuc3RhY2ssYj1lfSxnZXQgdXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZygpe3JldHVybiBifX07ZnVuY3Rpb24gayhlKXtzZXRUaW1lb3V0KChmdW5jdGlvbigpe3Rocm93IGV9KSwwKX12YXIgQT17Y2xvc2VkOiEwLG5leHQ6ZnVuY3Rpb24oZSl7fSxlcnJvcjpmdW5jdGlvbihlKXtpZih3LnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcpdGhyb3cgZTtrKGUpfSxjb21wbGV0ZTpmdW5jdGlvbigpe319LHg9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIGUmJlwibnVtYmVyXCI9PXR5cGVvZiBlLmxlbmd0aH07ZnVuY3Rpb24gUihlKXtyZXR1cm4gRXJyb3IuY2FsbCh0aGlzKSx0aGlzLm1lc3NhZ2U9ZT9lLmxlbmd0aCtcIiBlcnJvcnMgb2NjdXJyZWQgZHVyaW5nIHVuc3Vic2NyaXB0aW9uOlxcblwiK2UubWFwKChmdW5jdGlvbihlLHQpe3JldHVybiB0KzErXCIpIFwiK2UudG9TdHJpbmcoKX0pKS5qb2luKFwiXFxuICBcIik6XCJcIix0aGlzLm5hbWU9XCJVbnN1YnNjcmlwdGlvbkVycm9yXCIsdGhpcy5lcnJvcnM9ZSx0aGlzfVIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTt2YXIgTT1SLE89ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuY2xvc2VkPSExLHRoaXMuX3BhcmVudE9yUGFyZW50cz1udWxsLHRoaXMuX3N1YnNjcmlwdGlvbnM9bnVsbCxlJiYodGhpcy5fdW5zdWJzY3JpYmU9ZSl9cmV0dXJuIGUucHJvdG90eXBlLnVuc3Vic2NyaWJlPWZ1bmN0aW9uKCl7dmFyIHQ7aWYoIXRoaXMuY2xvc2VkKXt2YXIgcixuPXRoaXMsaT1uLl9wYXJlbnRPclBhcmVudHMscz1uLl91bnN1YnNjcmliZSxvPW4uX3N1YnNjcmlwdGlvbnM7aWYodGhpcy5jbG9zZWQ9ITAsdGhpcy5fcGFyZW50T3JQYXJlbnRzPW51bGwsdGhpcy5fc3Vic2NyaXB0aW9ucz1udWxsLGkgaW5zdGFuY2VvZiBlKWkucmVtb3ZlKHRoaXMpO2Vsc2UgaWYobnVsbCE9PWkpZm9yKHZhciB1PTA7dTxpLmxlbmd0aDsrK3UpaVt1XS5yZW1vdmUodGhpcyk7aWYocShzKSl0cnl7cy5jYWxsKHRoaXMpfWNhdGNoKGUpe3Q9ZSBpbnN0YW5jZW9mIE0/UyhlLmVycm9ycyk6W2VdfWlmKHgobykpe3U9LTE7Zm9yKHZhciBjPW8ubGVuZ3RoOysrdTxjOyl7dmFyIGE9b1t1XTtpZihudWxsIT09KHI9YSkmJlwib2JqZWN0XCI9PXR5cGVvZiByKXRyeXthLnVuc3Vic2NyaWJlKCl9Y2F0Y2goZSl7dD10fHxbXSxlIGluc3RhbmNlb2YgTT90PXQuY29uY2F0KFMoZS5lcnJvcnMpKTp0LnB1c2goZSl9fX1pZih0KXRocm93IG5ldyBNKHQpfX0sZS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKHQpe3ZhciByPXQ7aWYoIXQpcmV0dXJuIGUuRU1QVFk7c3dpdGNoKHR5cGVvZiB0KXtjYXNlXCJmdW5jdGlvblwiOnI9bmV3IGUodCk7Y2FzZVwib2JqZWN0XCI6aWYocj09PXRoaXN8fHIuY2xvc2VkfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiByLnVuc3Vic2NyaWJlKXJldHVybiByO2lmKHRoaXMuY2xvc2VkKXJldHVybiByLnVuc3Vic2NyaWJlKCkscjtpZighKHIgaW5zdGFuY2VvZiBlKSl7dmFyIG49cjsocj1uZXcgZSkuX3N1YnNjcmlwdGlvbnM9W25dfWJyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKFwidW5yZWNvZ25pemVkIHRlYXJkb3duIFwiK3QrXCIgYWRkZWQgdG8gU3Vic2NyaXB0aW9uLlwiKX12YXIgaT1yLl9wYXJlbnRPclBhcmVudHM7aWYobnVsbD09PWkpci5fcGFyZW50T3JQYXJlbnRzPXRoaXM7ZWxzZSBpZihpIGluc3RhbmNlb2YgZSl7aWYoaT09PXRoaXMpcmV0dXJuIHI7ci5fcGFyZW50T3JQYXJlbnRzPVtpLHRoaXNdfWVsc2V7aWYoLTEhPT1pLmluZGV4T2YodGhpcykpcmV0dXJuIHI7aS5wdXNoKHRoaXMpfXZhciBzPXRoaXMuX3N1YnNjcmlwdGlvbnM7cmV0dXJuIG51bGw9PT1zP3RoaXMuX3N1YnNjcmlwdGlvbnM9W3JdOnMucHVzaChyKSxyfSxlLnByb3RvdHlwZS5yZW1vdmU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fc3Vic2NyaXB0aW9ucztpZih0KXt2YXIgcj10LmluZGV4T2YoZSk7LTEhPT1yJiZ0LnNwbGljZShyLDEpfX0sZS5FTVBUWT1mdW5jdGlvbihlKXtyZXR1cm4gZS5jbG9zZWQ9ITAsZX0obmV3IGUpLGV9KCk7ZnVuY3Rpb24gUyhlKXtyZXR1cm4gZS5yZWR1Y2UoKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuY29uY2F0KHQgaW5zdGFuY2VvZiBNP3QuZXJyb3JzOnQpfSksW10pfXZhciBFPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbD9TeW1ib2woXCJyeFN1YnNjcmliZXJcIik6XCJAQHJ4U3Vic2NyaWJlcl9cIitNYXRoLnJhbmRvbSgpLGo9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdChyLG4saSl7dmFyIHM9ZS5jYWxsKHRoaXMpfHx0aGlzO3N3aXRjaChzLnN5bmNFcnJvclZhbHVlPW51bGwscy5zeW5jRXJyb3JUaHJvd249ITEscy5zeW5jRXJyb3JUaHJvd2FibGU9ITEscy5pc1N0b3BwZWQ9ITEsYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAwOnMuZGVzdGluYXRpb249QTticmVhaztjYXNlIDE6aWYoIXIpe3MuZGVzdGluYXRpb249QTticmVha31pZihcIm9iamVjdFwiPT10eXBlb2Ygcil7ciBpbnN0YW5jZW9mIHQ/KHMuc3luY0Vycm9yVGhyb3dhYmxlPXIuc3luY0Vycm9yVGhyb3dhYmxlLHMuZGVzdGluYXRpb249cixyLmFkZChzKSk6KHMuc3luY0Vycm9yVGhyb3dhYmxlPSEwLHMuZGVzdGluYXRpb249bmV3IFAocyxyKSk7YnJlYWt9ZGVmYXVsdDpzLnN5bmNFcnJvclRocm93YWJsZT0hMCxzLmRlc3RpbmF0aW9uPW5ldyBQKHMscixuLGkpfXJldHVybiBzfXJldHVybiB2KHQsZSksdC5wcm90b3R5cGVbRV09ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc30sdC5jcmVhdGU9ZnVuY3Rpb24oZSxyLG4pe3ZhciBpPW5ldyB0KGUscixuKTtyZXR1cm4gaS5zeW5jRXJyb3JUaHJvd2FibGU9ITEsaX0sdC5wcm90b3R5cGUubmV4dD1mdW5jdGlvbihlKXt0aGlzLmlzU3RvcHBlZHx8dGhpcy5fbmV4dChlKX0sdC5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oZSl7dGhpcy5pc1N0b3BwZWR8fCh0aGlzLmlzU3RvcHBlZD0hMCx0aGlzLl9lcnJvcihlKSl9LHQucHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7dGhpcy5pc1N0b3BwZWR8fCh0aGlzLmlzU3RvcHBlZD0hMCx0aGlzLl9jb21wbGV0ZSgpKX0sdC5wcm90b3R5cGUudW5zdWJzY3JpYmU9ZnVuY3Rpb24oKXt0aGlzLmNsb3NlZHx8KHRoaXMuaXNTdG9wcGVkPSEwLGUucHJvdG90eXBlLnVuc3Vic2NyaWJlLmNhbGwodGhpcykpfSx0LnByb3RvdHlwZS5fbmV4dD1mdW5jdGlvbihlKXt0aGlzLmRlc3RpbmF0aW9uLm5leHQoZSl9LHQucHJvdG90eXBlLl9lcnJvcj1mdW5jdGlvbihlKXt0aGlzLmRlc3RpbmF0aW9uLmVycm9yKGUpLHRoaXMudW5zdWJzY3JpYmUoKX0sdC5wcm90b3R5cGUuX2NvbXBsZXRlPWZ1bmN0aW9uKCl7dGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpLHRoaXMudW5zdWJzY3JpYmUoKX0sdC5wcm90b3R5cGUuX3Vuc3Vic2NyaWJlQW5kUmVjeWNsZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX3BhcmVudE9yUGFyZW50cztyZXR1cm4gdGhpcy5fcGFyZW50T3JQYXJlbnRzPW51bGwsdGhpcy51bnN1YnNjcmliZSgpLHRoaXMuY2xvc2VkPSExLHRoaXMuaXNTdG9wcGVkPSExLHRoaXMuX3BhcmVudE9yUGFyZW50cz1lLHRoaXN9LHR9KE8pLFA9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIsbixpKXt2YXIgcyxvPWUuY2FsbCh0aGlzKXx8dGhpcztvLl9wYXJlbnRTdWJzY3JpYmVyPXQ7dmFyIHU9bztyZXR1cm4gcShyKT9zPXI6ciYmKHM9ci5uZXh0LG49ci5lcnJvcixpPXIuY29tcGxldGUsciE9PUEmJihxKCh1PU9iamVjdC5jcmVhdGUocikpLnVuc3Vic2NyaWJlKSYmby5hZGQodS51bnN1YnNjcmliZS5iaW5kKHUpKSx1LnVuc3Vic2NyaWJlPW8udW5zdWJzY3JpYmUuYmluZChvKSkpLG8uX2NvbnRleHQ9dSxvLl9uZXh0PXMsby5fZXJyb3I9bixvLl9jb21wbGV0ZT1pLG99cmV0dXJuIHYodCxlKSx0LnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKGUpe2lmKCF0aGlzLmlzU3RvcHBlZCYmdGhpcy5fbmV4dCl7dmFyIHQ9dGhpcy5fcGFyZW50U3Vic2NyaWJlcjt3LnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcmJnQuc3luY0Vycm9yVGhyb3dhYmxlP3RoaXMuX190cnlPclNldEVycm9yKHQsdGhpcy5fbmV4dCxlKSYmdGhpcy51bnN1YnNjcmliZSgpOnRoaXMuX190cnlPclVuc3ViKHRoaXMuX25leHQsZSl9fSx0LnByb3RvdHlwZS5lcnJvcj1mdW5jdGlvbihlKXtpZighdGhpcy5pc1N0b3BwZWQpe3ZhciB0PXRoaXMuX3BhcmVudFN1YnNjcmliZXIscj13LnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmc7aWYodGhpcy5fZXJyb3IpciYmdC5zeW5jRXJyb3JUaHJvd2FibGU/KHRoaXMuX190cnlPclNldEVycm9yKHQsdGhpcy5fZXJyb3IsZSksdGhpcy51bnN1YnNjcmliZSgpKToodGhpcy5fX3RyeU9yVW5zdWIodGhpcy5fZXJyb3IsZSksdGhpcy51bnN1YnNjcmliZSgpKTtlbHNlIGlmKHQuc3luY0Vycm9yVGhyb3dhYmxlKXI/KHQuc3luY0Vycm9yVmFsdWU9ZSx0LnN5bmNFcnJvclRocm93bj0hMCk6ayhlKSx0aGlzLnVuc3Vic2NyaWJlKCk7ZWxzZXtpZih0aGlzLnVuc3Vic2NyaWJlKCkscil0aHJvdyBlO2soZSl9fX0sdC5wcm90b3R5cGUuY29tcGxldGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO2lmKCF0aGlzLmlzU3RvcHBlZCl7dmFyIHQ9dGhpcy5fcGFyZW50U3Vic2NyaWJlcjtpZih0aGlzLl9jb21wbGV0ZSl7dmFyIHI9ZnVuY3Rpb24oKXtyZXR1cm4gZS5fY29tcGxldGUuY2FsbChlLl9jb250ZXh0KX07dy51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nJiZ0LnN5bmNFcnJvclRocm93YWJsZT8odGhpcy5fX3RyeU9yU2V0RXJyb3IodCxyKSx0aGlzLnVuc3Vic2NyaWJlKCkpOih0aGlzLl9fdHJ5T3JVbnN1YihyKSx0aGlzLnVuc3Vic2NyaWJlKCkpfWVsc2UgdGhpcy51bnN1YnNjcmliZSgpfX0sdC5wcm90b3R5cGUuX190cnlPclVuc3ViPWZ1bmN0aW9uKGUsdCl7dHJ5e2UuY2FsbCh0aGlzLl9jb250ZXh0LHQpfWNhdGNoKGUpe2lmKHRoaXMudW5zdWJzY3JpYmUoKSx3LnVzZURlcHJlY2F0ZWRTeW5jaHJvbm91c0Vycm9ySGFuZGxpbmcpdGhyb3cgZTtrKGUpfX0sdC5wcm90b3R5cGUuX190cnlPclNldEVycm9yPWZ1bmN0aW9uKGUsdCxyKXtpZighdy51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nKXRocm93IG5ldyBFcnJvcihcImJhZCBjYWxsXCIpO3RyeXt0LmNhbGwodGhpcy5fY29udGV4dCxyKX1jYXRjaCh0KXtyZXR1cm4gdy51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nPyhlLnN5bmNFcnJvclZhbHVlPXQsZS5zeW5jRXJyb3JUaHJvd249ITAsITApOihrKHQpLCEwKX1yZXR1cm4hMX0sdC5wcm90b3R5cGUuX3Vuc3Vic2NyaWJlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fcGFyZW50U3Vic2NyaWJlcjt0aGlzLl9jb250ZXh0PW51bGwsdGhpcy5fcGFyZW50U3Vic2NyaWJlcj1udWxsLGUudW5zdWJzY3JpYmUoKX0sdH0oaik7ZnVuY3Rpb24gQyhlLHQpe3JldHVybiBmdW5jdGlvbihyKXtyZXR1cm4gci5saWZ0KG5ldyBUKGUsdCkpfX12YXIgVD1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt0aGlzLnByZWRpY2F0ZT1lLHRoaXMudGhpc0FyZz10fXJldHVybiBlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuc3Vic2NyaWJlKG5ldyBMKGUsdGhpcy5wcmVkaWNhdGUsdGhpcy50aGlzQXJnKSl9LGV9KCksTD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQscixuKXt2YXIgaT1lLmNhbGwodGhpcyx0KXx8dGhpcztyZXR1cm4gaS5wcmVkaWNhdGU9cixpLnRoaXNBcmc9bixpLmNvdW50PTAsaX1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLl9uZXh0PWZ1bmN0aW9uKGUpe3ZhciB0O3RyeXt0PXRoaXMucHJlZGljYXRlLmNhbGwodGhpcy50aGlzQXJnLGUsdGhpcy5jb3VudCsrKX1jYXRjaChlKXtyZXR1cm4gdm9pZCB0aGlzLmRlc3RpbmF0aW9uLmVycm9yKGUpfXQmJnRoaXMuZGVzdGluYXRpb24ubmV4dChlKX0sdH0oaik7ZnVuY3Rpb24gRCgpe3JldHVybiBFcnJvci5jYWxsKHRoaXMpLHRoaXMubWVzc2FnZT1cImFyZ3VtZW50IG91dCBvZiByYW5nZVwiLHRoaXMubmFtZT1cIkFyZ3VtZW50T3V0T2ZSYW5nZUVycm9yXCIsdGhpc31ELnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7dmFyIEk9RCxCPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLm9ic2VydmFibGV8fFwiQEBvYnNlcnZhYmxlXCI7ZnVuY3Rpb24gSCgpe31mdW5jdGlvbiBOKGUpe3JldHVybiBlPzE9PT1lLmxlbmd0aD9lWzBdOmZ1bmN0aW9uKHQpe3JldHVybiBlLnJlZHVjZSgoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdChlKX0pLHQpfTpIfXZhciBGPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLl9pc1NjYWxhcj0hMSxlJiYodGhpcy5fc3Vic2NyaWJlPWUpfXJldHVybiBlLnByb3RvdHlwZS5saWZ0PWZ1bmN0aW9uKHQpe3ZhciByPW5ldyBlO3JldHVybiByLnNvdXJjZT10aGlzLHIub3BlcmF0b3I9dCxyfSxlLnByb3RvdHlwZS5zdWJzY3JpYmU9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXRoaXMub3BlcmF0b3IsaT1mdW5jdGlvbihlLHQscil7aWYoZSl7aWYoZSBpbnN0YW5jZW9mIGopcmV0dXJuIGU7aWYoZVtFXSlyZXR1cm4gZVtFXSgpfXJldHVybiBlfHx0fHxyP25ldyBqKGUsdCxyKTpuZXcgaihBKX0oZSx0LHIpO2lmKG4/aS5hZGQobi5jYWxsKGksdGhpcy5zb3VyY2UpKTppLmFkZCh0aGlzLnNvdXJjZXx8dy51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nJiYhaS5zeW5jRXJyb3JUaHJvd2FibGU/dGhpcy5fc3Vic2NyaWJlKGkpOnRoaXMuX3RyeVN1YnNjcmliZShpKSksdy51c2VEZXByZWNhdGVkU3luY2hyb25vdXNFcnJvckhhbmRsaW5nJiZpLnN5bmNFcnJvclRocm93YWJsZSYmKGkuc3luY0Vycm9yVGhyb3dhYmxlPSExLGkuc3luY0Vycm9yVGhyb3duKSl0aHJvdyBpLnN5bmNFcnJvclZhbHVlO3JldHVybiBpfSxlLnByb3RvdHlwZS5fdHJ5U3Vic2NyaWJlPWZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gdGhpcy5fc3Vic2NyaWJlKGUpfWNhdGNoKHQpe3cudXNlRGVwcmVjYXRlZFN5bmNocm9ub3VzRXJyb3JIYW5kbGluZyYmKGUuc3luY0Vycm9yVGhyb3duPSEwLGUuc3luY0Vycm9yVmFsdWU9dCksZnVuY3Rpb24oZSl7Zm9yKDtlOyl7dmFyIHQ9ZSxyPXQuY2xvc2VkLG49dC5kZXN0aW5hdGlvbixpPXQuaXNTdG9wcGVkO2lmKHJ8fGkpcmV0dXJuITE7ZT1uJiZuIGluc3RhbmNlb2Ygaj9uOm51bGx9cmV0dXJuITB9KGUpP2UuZXJyb3IodCk6Y29uc29sZS53YXJuKHQpfX0sZS5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7cmV0dXJuIG5ldyh0PVUodCkpKChmdW5jdGlvbih0LG4pe3ZhciBpO2k9ci5zdWJzY3JpYmUoKGZ1bmN0aW9uKHQpe3RyeXtlKHQpfWNhdGNoKGUpe24oZSksaSYmaS51bnN1YnNjcmliZSgpfX0pLG4sdCl9KSl9LGUucHJvdG90eXBlLl9zdWJzY3JpYmU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5zb3VyY2U7cmV0dXJuIHQmJnQuc3Vic2NyaWJlKGUpfSxlLnByb3RvdHlwZVtCXT1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKCl7Zm9yKHZhciBlPVtdLHQ9MDt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKWVbdF09YXJndW1lbnRzW3RdO3JldHVybiAwPT09ZS5sZW5ndGg/dGhpczpOKGUpKHRoaXMpfSxlLnByb3RvdHlwZS50b1Byb21pc2U9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcztyZXR1cm4gbmV3KGU9VShlKSkoKGZ1bmN0aW9uKGUscil7dmFyIG47dC5zdWJzY3JpYmUoKGZ1bmN0aW9uKGUpe3JldHVybiBuPWV9KSwoZnVuY3Rpb24oZSl7cmV0dXJuIHIoZSl9KSwoZnVuY3Rpb24oKXtyZXR1cm4gZShuKX0pKX0pKX0sZS5jcmVhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBlKHQpfSxlfSgpO2Z1bmN0aW9uIFUoZSl7aWYoZXx8KGU9dy5Qcm9taXNlfHxQcm9taXNlKSwhZSl0aHJvdyBuZXcgRXJyb3IoXCJubyBQcm9taXNlIGltcGwgZm91bmRcIik7cmV0dXJuIGV9dmFyIFY9bmV3IEYoKGZ1bmN0aW9uKGUpe3JldHVybiBlLmNvbXBsZXRlKCl9KSk7ZnVuY3Rpb24gRyhlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIDA9PT1lP3I/ZnVuY3Rpb24oZSl7cmV0dXJuIG5ldyBGKChmdW5jdGlvbih0KXtyZXR1cm4gZS5zY2hlZHVsZSgoZnVuY3Rpb24oKXtyZXR1cm4gdC5jb21wbGV0ZSgpfSkpfSkpfShyKTpWOnQubGlmdChuZXcgSihlKSk7dmFyIHJ9fXZhciBKPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXtpZih0aGlzLnRvdGFsPWUsdGhpcy50b3RhbDwwKXRocm93IG5ldyBJfXJldHVybiBlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuc3Vic2NyaWJlKG5ldyB6KGUsdGhpcy50b3RhbCkpfSxlfSgpLHo9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzLHQpfHx0aGlzO3JldHVybiBuLnRvdGFsPXIsbi5jb3VudD0wLG59cmV0dXJuIHYodCxlKSx0LnByb3RvdHlwZS5fbmV4dD1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnRvdGFsLHI9Kyt0aGlzLmNvdW50O3I8PXQmJih0aGlzLmRlc3RpbmF0aW9uLm5leHQoZSkscj09PXQmJih0aGlzLmRlc3RpbmF0aW9uLmNvbXBsZXRlKCksdGhpcy51bnN1YnNjcmliZSgpKSl9LHR9KGopO2Z1bmN0aW9uIFcoZSl7cmV0dXJuIHZvaWQgMD09PWUmJihlPW51bGwpLGZ1bmN0aW9uKHQpe3JldHVybiB0LmxpZnQobmV3IFkoZSkpfX12YXIgWT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5kZWZhdWx0VmFsdWU9ZX1yZXR1cm4gZS5wcm90b3R5cGUuY2FsbD1mdW5jdGlvbihlLHQpe3JldHVybiB0LnN1YnNjcmliZShuZXcgSyhlLHRoaXMuZGVmYXVsdFZhbHVlKSl9LGV9KCksSz1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQscil7dmFyIG49ZS5jYWxsKHRoaXMsdCl8fHRoaXM7cmV0dXJuIG4uZGVmYXVsdFZhbHVlPXIsbi5pc0VtcHR5PSEwLG59cmV0dXJuIHYodCxlKSx0LnByb3RvdHlwZS5fbmV4dD1mdW5jdGlvbihlKXt0aGlzLmlzRW1wdHk9ITEsdGhpcy5kZXN0aW5hdGlvbi5uZXh0KGUpfSx0LnByb3RvdHlwZS5fY29tcGxldGU9ZnVuY3Rpb24oKXt0aGlzLmlzRW1wdHkmJnRoaXMuZGVzdGluYXRpb24ubmV4dCh0aGlzLmRlZmF1bHRWYWx1ZSksdGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpfSx0fShqKTtmdW5jdGlvbiAkKGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT1aKSxmdW5jdGlvbih0KXtyZXR1cm4gdC5saWZ0KG5ldyBRKGUpKX19dmFyIFE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3RoaXMuZXJyb3JGYWN0b3J5PWV9cmV0dXJuIGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gdC5zdWJzY3JpYmUobmV3IFgoZSx0aGlzLmVycm9yRmFjdG9yeSkpfSxlfSgpLFg9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzLHQpfHx0aGlzO3JldHVybiBuLmVycm9yRmFjdG9yeT1yLG4uaGFzVmFsdWU9ITEsbn1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLl9uZXh0PWZ1bmN0aW9uKGUpe3RoaXMuaGFzVmFsdWU9ITAsdGhpcy5kZXN0aW5hdGlvbi5uZXh0KGUpfSx0LnByb3RvdHlwZS5fY29tcGxldGU9ZnVuY3Rpb24oKXtpZih0aGlzLmhhc1ZhbHVlKXJldHVybiB0aGlzLmRlc3RpbmF0aW9uLmNvbXBsZXRlKCk7dmFyIGU9dm9pZCAwO3RyeXtlPXRoaXMuZXJyb3JGYWN0b3J5KCl9Y2F0Y2godCl7ZT10fXRoaXMuZGVzdGluYXRpb24uZXJyb3IoZSl9LHR9KGopO2Z1bmN0aW9uIFooKXtyZXR1cm4gbmV3IF99ZnVuY3Rpb24gZWUoZSl7cmV0dXJuIGV9ZnVuY3Rpb24gdGUoZSx0KXt2YXIgcj1hcmd1bWVudHMubGVuZ3RoPj0yO3JldHVybiBmdW5jdGlvbihuKXtyZXR1cm4gbi5waXBlKGU/QygoZnVuY3Rpb24odCxyKXtyZXR1cm4gZSh0LHIsbil9KSk6ZWUsRygxKSxyP1codCk6JCgoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IF99KSkpfX1mdW5jdGlvbiByZSgpe3JldHVybiBFcnJvci5jYWxsKHRoaXMpLHRoaXMubWVzc2FnZT1cIm9iamVjdCB1bnN1YnNjcmliZWRcIix0aGlzLm5hbWU9XCJPYmplY3RVbnN1YnNjcmliZWRFcnJvclwiLHRoaXN9cmUucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoRXJyb3IucHJvdG90eXBlKTt2YXIgbmU9cmUsaWU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5zdWJqZWN0PXQsbi5zdWJzY3JpYmVyPXIsbi5jbG9zZWQ9ITEsbn1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLnVuc3Vic2NyaWJlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuY2xvc2VkKXt0aGlzLmNsb3NlZD0hMDt2YXIgZT10aGlzLnN1YmplY3QsdD1lLm9ic2VydmVycztpZih0aGlzLnN1YmplY3Q9bnVsbCx0JiYwIT09dC5sZW5ndGgmJiFlLmlzU3RvcHBlZCYmIWUuY2xvc2VkKXt2YXIgcj10LmluZGV4T2YodGhpcy5zdWJzY3JpYmVyKTstMSE9PXImJnQuc3BsaWNlKHIsMSl9fX0sdH0oTyksc2U9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0KXt2YXIgcj1lLmNhbGwodGhpcyx0KXx8dGhpcztyZXR1cm4gci5kZXN0aW5hdGlvbj10LHJ9cmV0dXJuIHYodCxlKSx0fShqKSxvZT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KCl7dmFyIHQ9ZS5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiB0Lm9ic2VydmVycz1bXSx0LmNsb3NlZD0hMSx0LmlzU3RvcHBlZD0hMSx0Lmhhc0Vycm9yPSExLHQudGhyb3duRXJyb3I9bnVsbCx0fXJldHVybiB2KHQsZSksdC5wcm90b3R5cGVbRV09ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHNlKHRoaXMpfSx0LnByb3RvdHlwZS5saWZ0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyB1ZSh0aGlzLHRoaXMpO3JldHVybiB0Lm9wZXJhdG9yPWUsdH0sdC5wcm90b3R5cGUubmV4dD1mdW5jdGlvbihlKXtpZih0aGlzLmNsb3NlZCl0aHJvdyBuZXcgbmU7aWYoIXRoaXMuaXNTdG9wcGVkKWZvcih2YXIgdD10aGlzLm9ic2VydmVycyxyPXQubGVuZ3RoLG49dC5zbGljZSgpLGk9MDtpPHI7aSsrKW5baV0ubmV4dChlKX0sdC5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oZSl7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IG5lO3RoaXMuaGFzRXJyb3I9ITAsdGhpcy50aHJvd25FcnJvcj1lLHRoaXMuaXNTdG9wcGVkPSEwO2Zvcih2YXIgdD10aGlzLm9ic2VydmVycyxyPXQubGVuZ3RoLG49dC5zbGljZSgpLGk9MDtpPHI7aSsrKW5baV0uZXJyb3IoZSk7dGhpcy5vYnNlcnZlcnMubGVuZ3RoPTB9LHQucHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IG5lO3RoaXMuaXNTdG9wcGVkPSEwO2Zvcih2YXIgZT10aGlzLm9ic2VydmVycyx0PWUubGVuZ3RoLHI9ZS5zbGljZSgpLG49MDtuPHQ7bisrKXJbbl0uY29tcGxldGUoKTt0aGlzLm9ic2VydmVycy5sZW5ndGg9MH0sdC5wcm90b3R5cGUudW5zdWJzY3JpYmU9ZnVuY3Rpb24oKXt0aGlzLmlzU3RvcHBlZD0hMCx0aGlzLmNsb3NlZD0hMCx0aGlzLm9ic2VydmVycz1udWxsfSx0LnByb3RvdHlwZS5fdHJ5U3Vic2NyaWJlPWZ1bmN0aW9uKHQpe2lmKHRoaXMuY2xvc2VkKXRocm93IG5ldyBuZTtyZXR1cm4gZS5wcm90b3R5cGUuX3RyeVN1YnNjcmliZS5jYWxsKHRoaXMsdCl9LHQucHJvdG90eXBlLl9zdWJzY3JpYmU9ZnVuY3Rpb24oZSl7aWYodGhpcy5jbG9zZWQpdGhyb3cgbmV3IG5lO3JldHVybiB0aGlzLmhhc0Vycm9yPyhlLmVycm9yKHRoaXMudGhyb3duRXJyb3IpLE8uRU1QVFkpOnRoaXMuaXNTdG9wcGVkPyhlLmNvbXBsZXRlKCksTy5FTVBUWSk6KHRoaXMub2JzZXJ2ZXJzLnB1c2goZSksbmV3IGllKHRoaXMsZSkpfSx0LnByb3RvdHlwZS5hc09ic2VydmFibGU9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgRjtyZXR1cm4gZS5zb3VyY2U9dGhpcyxlfSx0LmNyZWF0ZT1mdW5jdGlvbihlLHQpe3JldHVybiBuZXcgdWUoZSx0KX0sdH0oRiksdWU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5kZXN0aW5hdGlvbj10LG4uc291cmNlPXIsbn1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kZXN0aW5hdGlvbjt0JiZ0Lm5leHQmJnQubmV4dChlKX0sdC5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5kZXN0aW5hdGlvbjt0JiZ0LmVycm9yJiZ0aGlzLmRlc3RpbmF0aW9uLmVycm9yKGUpfSx0LnByb3RvdHlwZS5jb21wbGV0ZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuZGVzdGluYXRpb247ZSYmZS5jb21wbGV0ZSYmdGhpcy5kZXN0aW5hdGlvbi5jb21wbGV0ZSgpfSx0LnByb3RvdHlwZS5fc3Vic2NyaWJlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnNvdXJjZT90aGlzLnNvdXJjZS5zdWJzY3JpYmUoZSk6Ty5FTVBUWX0sdH0ob2UpO2Z1bmN0aW9uIGNlKCl7cmV0dXJuIGZ1bmN0aW9uKGUpe3JldHVybiBlLmxpZnQobmV3IGFlKGUpKX19dmFyIGFlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLmNvbm5lY3RhYmxlPWV9cmV0dXJuIGUucHJvdG90eXBlLmNhbGw9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmNvbm5lY3RhYmxlO3IuX3JlZkNvdW50Kys7dmFyIG49bmV3IHBlKGUsciksaT10LnN1YnNjcmliZShuKTtyZXR1cm4gbi5jbG9zZWR8fChuLmNvbm5lY3Rpb249ci5jb25uZWN0KCkpLGl9LGV9KCkscGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzLHQpfHx0aGlzO3JldHVybiBuLmNvbm5lY3RhYmxlPXIsbn1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLl91bnN1YnNjcmliZT1mdW5jdGlvbigpe3ZhciBlPXRoaXMuY29ubmVjdGFibGU7aWYoZSl7dGhpcy5jb25uZWN0YWJsZT1udWxsO3ZhciB0PWUuX3JlZkNvdW50O2lmKHQ8PTApdGhpcy5jb25uZWN0aW9uPW51bGw7ZWxzZSBpZihlLl9yZWZDb3VudD10LTEsdD4xKXRoaXMuY29ubmVjdGlvbj1udWxsO2Vsc2V7dmFyIHI9dGhpcy5jb25uZWN0aW9uLG49ZS5fY29ubmVjdGlvbjt0aGlzLmNvbm5lY3Rpb249bnVsbCwhbnx8ciYmbiE9PXJ8fG4udW5zdWJzY3JpYmUoKX19ZWxzZSB0aGlzLmNvbm5lY3Rpb249bnVsbH0sdH0oaiksZGU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5zb3VyY2U9dCxuLnN1YmplY3RGYWN0b3J5PXIsbi5fcmVmQ291bnQ9MCxuLl9pc0NvbXBsZXRlPSExLG59cmV0dXJuIHYodCxlKSx0LnByb3RvdHlwZS5fc3Vic2NyaWJlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdldFN1YmplY3QoKS5zdWJzY3JpYmUoZSl9LHQucHJvdG90eXBlLmdldFN1YmplY3Q9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9zdWJqZWN0O3JldHVybiBlJiYhZS5pc1N0b3BwZWR8fCh0aGlzLl9zdWJqZWN0PXRoaXMuc3ViamVjdEZhY3RvcnkoKSksdGhpcy5fc3ViamVjdH0sdC5wcm90b3R5cGUuY29ubmVjdD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2Nvbm5lY3Rpb247cmV0dXJuIGV8fCh0aGlzLl9pc0NvbXBsZXRlPSExLChlPXRoaXMuX2Nvbm5lY3Rpb249bmV3IE8pLmFkZCh0aGlzLnNvdXJjZS5zdWJzY3JpYmUobmV3IHllKHRoaXMuZ2V0U3ViamVjdCgpLHRoaXMpKSksZS5jbG9zZWQmJih0aGlzLl9jb25uZWN0aW9uPW51bGwsZT1PLkVNUFRZKSksZX0sdC5wcm90b3R5cGUucmVmQ291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4gY2UoKSh0aGlzKX0sdH0oRikucHJvdG90eXBlLGhlPXtvcGVyYXRvcjp7dmFsdWU6bnVsbH0sX3JlZkNvdW50Ont2YWx1ZTowLHdyaXRhYmxlOiEwfSxfc3ViamVjdDp7dmFsdWU6bnVsbCx3cml0YWJsZTohMH0sX2Nvbm5lY3Rpb246e3ZhbHVlOm51bGwsd3JpdGFibGU6ITB9LF9zdWJzY3JpYmU6e3ZhbHVlOmRlLl9zdWJzY3JpYmV9LF9pc0NvbXBsZXRlOnt2YWx1ZTpkZS5faXNDb21wbGV0ZSx3cml0YWJsZTohMH0sZ2V0U3ViamVjdDp7dmFsdWU6ZGUuZ2V0U3ViamVjdH0sY29ubmVjdDp7dmFsdWU6ZGUuY29ubmVjdH0scmVmQ291bnQ6e3ZhbHVlOmRlLnJlZkNvdW50fX0seWU9ZnVuY3Rpb24oZSl7ZnVuY3Rpb24gdCh0LHIpe3ZhciBuPWUuY2FsbCh0aGlzLHQpfHx0aGlzO3JldHVybiBuLmNvbm5lY3RhYmxlPXIsbn1yZXR1cm4gdih0LGUpLHQucHJvdG90eXBlLl9lcnJvcj1mdW5jdGlvbih0KXt0aGlzLl91bnN1YnNjcmliZSgpLGUucHJvdG90eXBlLl9lcnJvci5jYWxsKHRoaXMsdCl9LHQucHJvdG90eXBlLl9jb21wbGV0ZT1mdW5jdGlvbigpe3RoaXMuY29ubmVjdGFibGUuX2lzQ29tcGxldGU9ITAsdGhpcy5fdW5zdWJzY3JpYmUoKSxlLnByb3RvdHlwZS5fY29tcGxldGUuY2FsbCh0aGlzKX0sdC5wcm90b3R5cGUuX3Vuc3Vic2NyaWJlPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5jb25uZWN0YWJsZTtpZihlKXt0aGlzLmNvbm5lY3RhYmxlPW51bGw7dmFyIHQ9ZS5fY29ubmVjdGlvbjtlLl9yZWZDb3VudD0wLGUuX3N1YmplY3Q9bnVsbCxlLl9jb25uZWN0aW9uPW51bGwsdCYmdC51bnN1YnNjcmliZSgpfX0sdH0oc2UpO2Z1bmN0aW9uIGxlKCl7cmV0dXJuIG5ldyBvZX1mdW5jdGlvbiBnZSgpe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gY2UoKSgodD1sZSxmdW5jdGlvbihlKXt2YXIgcjtyPVwiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dDpmdW5jdGlvbigpe3JldHVybiB0fTt2YXIgbj1PYmplY3QuY3JlYXRlKGUsaGUpO3JldHVybiBuLnNvdXJjZT1lLG4uc3ViamVjdEZhY3Rvcnk9cixufSkoZSkpO3ZhciB0fX1mdW5jdGlvbiBmZShlLHQscil7cmV0dXJuIHQgaW4gZT9PYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpyLGVudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwfSk6ZVt0XT1yLGV9dmFyIF9lPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpe28odGhpcyxlKX1yZXR1cm4gYyhlLFt7a2V5OlwiYWNjb3VudENsb3N1cmVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY2NvdW50X2Nsb3N1cmU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVhc29uOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYWNjb3VudF9jbG9zdXJlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhY2NvdW50U2VjdXJpdHlcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY2NvdW50X3NlY3VyaXR5OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LG90cDp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRvdHBfYWN0aW9uOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJhY2NvdW50X3NlY3VyaXR5XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhY2NvdW50U3RhdGlzdGljc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FjY291bnRfc3RhdGlzdGljczp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJhY2NvdW50X3N0YXRpc3RpY3NcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImFjdGl2ZVN5bWJvbHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY3RpdmVfc3ltYm9sczp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGxhbmRpbmdfY29tcGFueTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwcm9kdWN0X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYWN0aXZlX3N5bWJvbHNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImFmZmlsaWF0ZUFjY291bnRBZGRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthZGRyZXNzX2NpdHk6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2xpbmVfMTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3NfbGluZV8yOnt0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3NfcG9zdGNvZGU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX3N0YXRlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sYWZmaWxpYXRlX2FjY291bnRfYWRkOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGNvdW50cnk6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxmaXJzdF9uYW1lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sbGFzdF9uYW1lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sbm9uX3BlcF9kZWNsYXJhdGlvbjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxwYXNzd29yZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBob25lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0bmNfYWNjZXB0ZWQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sdXNlcm5hbWU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwiYWZmaWxpYXRlX2FjY291bnRfYWRkXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhcGlUb2tlblwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FwaV90b2tlbjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxkZWxldGVfdG9rZW46e3R5cGU6XCJzdHJpbmdcIn0sbmV3X3Rva2VuOnt0eXBlOlwic3RyaW5nXCJ9LG5ld190b2tlbl9zY29wZXM6e30scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx2YWxpZF9mb3JfY3VycmVudF9pcF9vbmx5Ont0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYXBpX3Rva2VuXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhcHBEZWxldGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthcHBfZGVsZXRlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImFwcF9kZWxldGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImFwcEdldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FwcF9nZXQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYXBwX2dldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiYXBwTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FwcF9saXN0OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImFwcF9saXN0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhcHBNYXJrdXBEZXRhaWxzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YXBwX2lkOnt0eXBlOlwibnVtZXJpY1wifSxhcHBfbWFya3VwX2RldGFpbHM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sY2xpZW50X2xvZ2luaWQ6e3R5cGU6XCJzdHJpbmdcIn0sZGF0ZV9mcm9tOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZGF0ZV90bzp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGRlc2NyaXB0aW9uOnt0eXBlOlwibnVtZXJpY1wifSxsaW1pdDp7dHlwZTpcIm51bWVyaWNcIn0sb2Zmc2V0Ont0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHNvcnQ6e3R5cGU6XCJzdHJpbmdcIn0sc29ydF9maWVsZHM6e319LHI9e21ldGhvZDpcImFwcF9tYXJrdXBfZGV0YWlsc1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiYXBwUmVnaXN0ZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthcHBfbWFya3VwX3BlcmNlbnRhZ2U6e3R5cGU6XCJudW1lcmljXCJ9LGFwcF9yZWdpc3Rlcjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxhcHBzdG9yZTp7dHlwZTpcInN0cmluZ1wifSxnaXRodWI6e3R5cGU6XCJzdHJpbmdcIn0sZ29vZ2xlcGxheTp7dHlwZTpcInN0cmluZ1wifSxob21lcGFnZTp7dHlwZTpcInN0cmluZ1wifSxuYW1lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVkaXJlY3RfdXJpOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc2NvcGVzOntyZXF1aXJlZDoxfSx2ZXJpZmljYXRpb25fdXJpOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJhcHBfcmVnaXN0ZXJcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImFwcFVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FwcF9tYXJrdXBfcGVyY2VudGFnZTp7dHlwZTpcIm51bWVyaWNcIn0sYXBwX3VwZGF0ZTp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxhcHBzdG9yZTp7dHlwZTpcInN0cmluZ1wifSxnaXRodWI6e3R5cGU6XCJzdHJpbmdcIn0sZ29vZ2xlcGxheTp7dHlwZTpcInN0cmluZ1wifSxob21lcGFnZTp7dHlwZTpcInN0cmluZ1wifSxuYW1lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVkaXJlY3RfdXJpOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc2NvcGVzOntyZXF1aXJlZDoxfSx2ZXJpZmljYXRpb25fdXJpOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJhcHBfdXBkYXRlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhc3NldEluZGV4XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YXNzZXRfaW5kZXg6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sbGFuZGluZ19jb21wYW55Ont0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImFzc2V0X2luZGV4XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJhdXRob3JpemVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthZGRfdG9fbG9naW5faGlzdG9yeTp7dHlwZTpcIm51bWVyaWNcIn0sYXV0aG9yaXplOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYXV0aG9yaXplXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJiYWxhbmNlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWNjb3VudDp7dHlwZTpcInN0cmluZ1wifSxiYWxhbmNlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiYmFsYW5jZVwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiYnV5XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YnV5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFyYW1ldGVyczp7YW1vdW50Ont0eXBlOlwibnVtZXJpY1wifSxhcHBfbWFya3VwX3BlcmNlbnRhZ2U6e3R5cGU6XCJudW1lcmljXCJ9LGJhcnJpZXI6e3R5cGU6XCJzdHJpbmdcIn0sYmFycmllcjI6e3R5cGU6XCJzdHJpbmdcIn0sYmFycmllcl9yYW5nZTp7dHlwZTpcInN0cmluZ1wifSxiYXNpczp7dHlwZTpcInN0cmluZ1wifSxjYW5jZWxsYXRpb246e3R5cGU6XCJzdHJpbmdcIn0sY29udHJhY3RfdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGN1cnJlbmN5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZGF0ZV9leHBpcnk6e3R5cGU6XCJudW1lcmljXCJ9LGRhdGVfc3RhcnQ6e3R5cGU6XCJudW1lcmljXCJ9LGR1cmF0aW9uOnt0eXBlOlwibnVtZXJpY1wifSxkdXJhdGlvbl91bml0Ont0eXBlOlwic3RyaW5nXCJ9LGxpbWl0X29yZGVyOntzdG9wX2xvc3M6e3R5cGU6XCJudW1lcmljXCJ9LHRha2VfcHJvZml0Ont0eXBlOlwibnVtZXJpY1wifX0sbXVsdGlwbGllcjp7dHlwZTpcIm51bWVyaWNcIn0scHJvZHVjdF90eXBlOnt0eXBlOlwic3RyaW5nXCJ9LHNlbGVjdGVkX3RpY2s6e3R5cGU6XCJudW1lcmljXCJ9LHN5bWJvbDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHRyYWRpbmdfcGVyaW9kX3N0YXJ0Ont0eXBlOlwibnVtZXJpY1wifX0scGFzc3Rocm91Z2g6e30scHJpY2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJidXlcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImJ1eUNvbnRyYWN0Rm9yTXVsdGlwbGVBY2NvdW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2J1eV9jb250cmFjdF9mb3JfbXVsdGlwbGVfYWNjb3VudHM6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXJhbWV0ZXJzOnthbW91bnQ6e3R5cGU6XCJudW1lcmljXCJ9LGFwcF9tYXJrdXBfcGVyY2VudGFnZTp7dHlwZTpcIm51bWVyaWNcIn0sYmFycmllcjp7dHlwZTpcInN0cmluZ1wifSxiYXJyaWVyMjp7dHlwZTpcInN0cmluZ1wifSxiYXNpczp7dHlwZTpcInN0cmluZ1wifSxjb250cmFjdF90eXBlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sY3VycmVuY3k6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxkYXRlX2V4cGlyeTp7dHlwZTpcIm51bWVyaWNcIn0sZGF0ZV9zdGFydDp7dHlwZTpcIm51bWVyaWNcIn0sZHVyYXRpb246e3R5cGU6XCJudW1lcmljXCJ9LGR1cmF0aW9uX3VuaXQ6e3R5cGU6XCJzdHJpbmdcIn0sbXVsdGlwbGllcjp7dHlwZTpcIm51bWVyaWNcIn0sc2VsZWN0ZWRfdGljazp7dHlwZTpcIm51bWVyaWNcIn0sc3ltYm9sOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHBhc3N0aHJvdWdoOnt9LHByaWNlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdG9rZW5zOntyZXF1aXJlZDoxfX0scj17bWV0aG9kOlwiYnV5X2NvbnRyYWN0X2Zvcl9tdWx0aXBsZV9hY2NvdW50c1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY2FuY2VsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y2FuY2VsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImNhbmNlbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY2FzaGllclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FkZHJlc3M6e3R5cGU6XCJzdHJpbmdcIn0sYW1vdW50Ont0eXBlOlwibnVtZXJpY1wifSxjYXNoaWVyOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZHJ5X3J1bjp7dHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scHJvdmlkZXI6e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0eXBlOnt0eXBlOlwic3RyaW5nXCJ9LHZlcmlmaWNhdGlvbl9jb2RlOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJjYXNoaWVyXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJjYXNoaWVyUGF5bWVudHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjYXNoaWVyX3BheW1lbnRzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHByb3ZpZGVyOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifSx0cmFuc2FjdGlvbl90eXBlOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJjYXNoaWVyX3BheW1lbnRzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJjYXNoaWVyV2l0aGRyYXdhbENhbmNlbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2Nhc2hpZXJfd2l0aGRyYXdhbF9jYW5jZWw6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0saWQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJjYXNoaWVyX3dpdGhkcmF3YWxfY2FuY2VsXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJjaGFuZ2VFbWFpbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2NoYW5nZV9lbWFpbDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG5ld19lbWFpbDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG5ld19wYXNzd29yZDp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHZlcmlmaWNhdGlvbl9jb2RlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcImNoYW5nZV9lbWFpbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY2hhbmdlUGFzc3dvcmRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjaGFuZ2VfcGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sbmV3X3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sb2xkX3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiY2hhbmdlX3Bhc3N3b3JkXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJjb250cmFjdFVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2NvbnRyYWN0X2lkOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGNvbnRyYWN0X3VwZGF0ZTp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxsaW1pdF9vcmRlcjp7c3RvcF9sb3NzOnt9LHRha2VfcHJvZml0Ont9fSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJjb250cmFjdF91cGRhdGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImNvbnRyYWN0VXBkYXRlSGlzdG9yeVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2NvbnRyYWN0X2lkOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGNvbnRyYWN0X3VwZGF0ZV9oaXN0b3J5OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGxpbWl0Ont0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJjb250cmFjdF91cGRhdGVfaGlzdG9yeVwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY29udHJhY3RzRm9yXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y29udHJhY3RzX2Zvcjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGN1cnJlbmN5Ont0eXBlOlwic3RyaW5nXCJ9LGxhbmRpbmdfY29tcGFueTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwcm9kdWN0X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiY29udHJhY3RzX2ZvclwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY29weVN0YXJ0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YXNzZXRzOnt9LGNvcHlfc3RhcnQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxtYXhfdHJhZGVfc3Rha2U6e3R5cGU6XCJudW1lcmljXCJ9LG1pbl90cmFkZV9zdGFrZTp7dHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFkZV90eXBlczp7fX0scj17bWV0aG9kOlwiY29weV9zdGFydFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY29weVN0b3BcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjb3B5X3N0b3A6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJjb3B5X3N0b3BcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImNvcHl0cmFkaW5nTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2NvcHl0cmFkaW5nX2xpc3Q6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiY29weXRyYWRpbmdfbGlzdFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiY29weXRyYWRpbmdTdGF0aXN0aWNzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y29weXRyYWRpbmdfc3RhdGlzdGljczp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRyYWRlcl9pZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJjb3B5dHJhZGluZ19zdGF0aXN0aWNzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJjcnlwdG9Db25maWdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjcnlwdG9fY29uZmlnOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGN1cnJlbmN5X2NvZGU6e3R5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiY3J5cHRvX2NvbmZpZ1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiZG9jdW1lbnRVcGxvYWRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtkb2N1bWVudF9mb3JtYXQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxkb2N1bWVudF9pZDp7dHlwZTpcInN0cmluZ1wifSxkb2N1bWVudF9pc3N1aW5nX2NvdW50cnk6e3R5cGU6XCJzdHJpbmdcIn0sZG9jdW1lbnRfdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGRvY3VtZW50X3VwbG9hZDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxleHBlY3RlZF9jaGVja3N1bTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGV4cGlyYXRpb25fZGF0ZTp7dHlwZTpcInN0cmluZ1wifSxmaWxlX3NpemU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sbGlmZXRpbWVfdmFsaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHBhZ2VfdHlwZTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwcm9vZl9vZl9vd25lcnNoaXA6e2RldGFpbHM6e3JlcXVpcmVkOjF9LGlkOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJkb2N1bWVudF91cGxvYWRcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImVjb25vbWljQ2FsZW5kYXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjdXJyZW5jeTp7dHlwZTpcInN0cmluZ1wifSxlY29ub21pY19jYWxlbmRhcjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxlbmRfZGF0ZTp7dHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdGFydF9kYXRlOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiZWNvbm9taWNfY2FsZW5kYXJcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImV4Y2hhbmdlUmF0ZXNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtiYXNlX2N1cnJlbmN5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZXhjaGFuZ2VfcmF0ZXM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9LHRhcmdldF9jdXJyZW5jeTp7dHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwiZXhjaGFuZ2VfcmF0ZXNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImZvcmdldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2ZvcmdldDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImZvcmdldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiZm9yZ2V0QWxsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Zm9yZ2V0X2FsbDp7cmVxdWlyZWQ6MX0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiZm9yZ2V0X2FsbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiZ2V0QWNjb3VudFN0YXR1c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2dldF9hY2NvdW50X3N0YXR1czp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJnZXRfYWNjb3VudF9zdGF0dXNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImdldEFjY291bnRUeXBlc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2dldF9hY2NvdW50X3R5cGVzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImdldF9hY2NvdW50X3R5cGVzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJnZXRBdmFpbGFibGVBY2NvdW50c1RvVHJhbnNmZXJcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtnZXRfYXZhaWxhYmxlX2FjY291bnRzX3RvX3RyYW5zZmVyOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGxvZ2luaWQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJnZXRfYXZhaWxhYmxlX2FjY291bnRzX3RvX3RyYW5zZmVyXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJnZXRGaW5hbmNpYWxBc3Nlc3NtZW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Z2V0X2ZpbmFuY2lhbF9hc3Nlc3NtZW50OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImdldF9maW5hbmNpYWxfYXNzZXNzbWVudFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiZ2V0TGltaXRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Z2V0X2xpbWl0czp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJnZXRfbGltaXRzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJnZXRTZWxmRXhjbHVzaW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Z2V0X3NlbGZfZXhjbHVzaW9uOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImdldF9zZWxmX2V4Y2x1c2lvblwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwiZ2V0U2V0dGluZ3NcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtnZXRfc2V0dGluZ3M6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiZ2V0X3NldHRpbmdzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJpZGVudGl0eVZlcmlmaWNhdGlvbkRvY3VtZW50QWRkXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17ZG9jdW1lbnRfbnVtYmVyOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZG9jdW1lbnRfdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGlkZW50aXR5X3ZlcmlmaWNhdGlvbl9kb2N1bWVudF9hZGQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0saXNzdWluZ19jb3VudHJ5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwiaWRlbnRpdHlfdmVyaWZpY2F0aW9uX2RvY3VtZW50X2FkZFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibGFuZGluZ0NvbXBhbnlcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtsYW5kaW5nX2NvbXBhbnk6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJsYW5kaW5nX2NvbXBhbnlcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImxhbmRpbmdDb21wYW55RGV0YWlsc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2xhbmRpbmdfY29tcGFueV9kZXRhaWxzOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwibGFuZGluZ19jb21wYW55X2RldGFpbHNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcImxpbmtXYWxsZXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjbGllbnRfaWQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxsaW5rX3dhbGxldDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHdhbGxldF9pZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJsaW5rX3dhbGxldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibG9naW5IaXN0b3J5XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bGltaXQ6e3R5cGU6XCJudW1lcmljXCJ9LGxvZ2luX2hpc3Rvcnk6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwibG9naW5faGlzdG9yeVwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibG9nb3V0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bG9nb3V0OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcImxvZ291dFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibXQ1RGVwb3NpdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2Ftb3VudDp7dHlwZTpcIm51bWVyaWNcIn0sZnJvbV9iaW5hcnk6e3R5cGU6XCJzdHJpbmdcIn0sbXQ1X2RlcG9zaXQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0b19tdDU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwibXQ1X2RlcG9zaXRcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcIm10NUdldFNldHRpbmdzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bG9naW46e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxtdDVfZ2V0X3NldHRpbmdzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcIm10NV9nZXRfc2V0dGluZ3NcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcIm10NUxvZ2luTGlzdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e210NV9sb2dpbl9saXN0OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcIm10NV9sb2dpbl9saXN0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJtdDVOZXdBY2NvdW50XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWNjb3VudF90eXBlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sYWRkcmVzczp7dHlwZTpcInN0cmluZ1wifSxjaXR5Ont0eXBlOlwic3RyaW5nXCJ9LGNvbXBhbnk6e3R5cGU6XCJzdHJpbmdcIn0sY291bnRyeTp7dHlwZTpcInN0cmluZ1wifSxjdXJyZW5jeTp7dHlwZTpcInN0cmluZ1wifSxkcnlfcnVuOnt0eXBlOlwibnVtZXJpY1wifSxlbWFpbDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGludmVzdFBhc3N3b3JkOnt0eXBlOlwic3RyaW5nXCJ9LGxldmVyYWdlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LG1haW5QYXNzd29yZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG10NV9hY2NvdW50X2NhdGVnb3J5Ont0eXBlOlwic3RyaW5nXCJ9LG10NV9hY2NvdW50X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0sbXQ1X25ld19hY2NvdW50OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LG5hbWU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwaG9uZTp7dHlwZTpcInN0cmluZ1wifSxwaG9uZVBhc3N3b3JkOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc2VydmVyOnt9LHN0YXRlOnt0eXBlOlwic3RyaW5nXCJ9LHppcENvZGU6e3R5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcIm10NV9uZXdfYWNjb3VudFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibXQ1UGFzc3dvcmRDaGFuZ2VcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtsb2dpbjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG10NV9wYXNzd29yZF9jaGFuZ2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sbmV3X3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sb2xkX3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGFzc3dvcmRfdHlwZTp7dHlwZTpcInN0cmluZ1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJtdDVfcGFzc3dvcmRfY2hhbmdlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJtdDVQYXNzd29yZENoZWNrXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bG9naW46e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxtdDVfcGFzc3dvcmRfY2hlY2s6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzd29yZF90eXBlOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcIm10NV9wYXNzd29yZF9jaGVja1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibXQ1UGFzc3dvcmRSZXNldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2xvZ2luOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sbXQ1X3Bhc3N3b3JkX3Jlc2V0OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LG5ld19wYXNzd29yZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHBhc3N3b3JkX3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx2ZXJpZmljYXRpb25fY29kZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJtdDVfcGFzc3dvcmRfcmVzZXRcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcIm10NVdpdGhkcmF3YWxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthbW91bnQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sZnJvbV9tdDU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxtdDVfd2l0aGRyYXdhbDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRvX2JpbmFyeTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJtdDVfd2l0aGRyYXdhbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibmV3QWNjb3VudE1hbHRhaW52ZXN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWNjZXB0X3Jpc2s6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sYWNjb3VudF9vcGVuaW5nX3JlYXNvbjp7dHlwZTpcInN0cmluZ1wifSxhY2NvdW50X3R1cm5vdmVyOnt0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3NfY2l0eTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3NfbGluZV8xOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sYWRkcmVzc19saW5lXzI6e3R5cGU6XCJzdHJpbmdcIn0sYWRkcmVzc19wb3N0Y29kZTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX3N0YXRlOnt0eXBlOlwic3RyaW5nXCJ9LGFmZmlsaWF0ZV90b2tlbjp7dHlwZTpcInN0cmluZ1wifSxiaW5hcnlfb3B0aW9uc190cmFkaW5nX2V4cGVyaWVuY2U6e3R5cGU6XCJzdHJpbmdcIn0sYmluYXJ5X29wdGlvbnNfdHJhZGluZ19mcmVxdWVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sY2ZkX3RyYWRpbmdfZXhwZXJpZW5jZTp7dHlwZTpcInN0cmluZ1wifSxjZmRfdHJhZGluZ19mcmVxdWVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sY2l0aXplbjp7dHlwZTpcInN0cmluZ1wifSxjbGllbnRfdHlwZTp7dHlwZTpcInN0cmluZ1wifSxjdXJyZW5jeTp7dHlwZTpcInN0cmluZ1wifSxkYXRlX29mX2JpcnRoOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZWR1Y2F0aW9uX2xldmVsOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZW1wbG95bWVudF9pbmR1c3RyeTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGVtcGxveW1lbnRfc3RhdHVzOnt0eXBlOlwic3RyaW5nXCJ9LGVzdGltYXRlZF93b3J0aDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGZpcnN0X25hbWU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxmb3JleF90cmFkaW5nX2V4cGVyaWVuY2U6e3R5cGU6XCJzdHJpbmdcIn0sZm9yZXhfdHJhZGluZ19mcmVxdWVuY3k6e3R5cGU6XCJzdHJpbmdcIn0saW5jb21lX3NvdXJjZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGxhc3RfbmFtZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG5ldF9pbmNvbWU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxuZXdfYWNjb3VudF9tYWx0YWludmVzdDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxub25fcGVwX2RlY2xhcmF0aW9uOnt0eXBlOlwibnVtZXJpY1wifSxvY2N1cGF0aW9uOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sb3RoZXJfaW5zdHJ1bWVudHNfdHJhZGluZ19leHBlcmllbmNlOnt0eXBlOlwic3RyaW5nXCJ9LG90aGVyX2luc3RydW1lbnRzX3RyYWRpbmdfZnJlcXVlbmN5Ont0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHBob25lOnt9LHBsYWNlX29mX2JpcnRoOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0scmVzaWRlbmNlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sc2FsdXRhdGlvbjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHNlY3JldF9hbnN3ZXI6e3R5cGU6XCJzdHJpbmdcIn0sc2VjcmV0X3F1ZXN0aW9uOnt0eXBlOlwic3RyaW5nXCJ9LHNvdXJjZV9vZl93ZWFsdGg6e3R5cGU6XCJzdHJpbmdcIn0sdGF4X2lkZW50aWZpY2F0aW9uX251bWJlcjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHRheF9yZXNpZGVuY2U6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwibmV3X2FjY291bnRfbWFsdGFpbnZlc3RcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcIm5ld0FjY291bnRSZWFsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWNjb3VudF9vcGVuaW5nX3JlYXNvbjp7dHlwZTpcInN0cmluZ1wifSxhY2NvdW50X3R1cm5vdmVyOnt0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3NfY2l0eTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2xpbmVfMTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2xpbmVfMjp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX3Bvc3Rjb2RlOnt0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3Nfc3RhdGU6e3R5cGU6XCJzdHJpbmdcIn0sYWZmaWxpYXRlX3Rva2VuOnt0eXBlOlwic3RyaW5nXCJ9LGNpdGl6ZW46e30sY2xpZW50X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0sY3VycmVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sZGF0ZV9vZl9iaXJ0aDp7dHlwZTpcInN0cmluZ1wifSxmaXJzdF9uYW1lOnt0eXBlOlwic3RyaW5nXCJ9LGxhc3RfbmFtZTp7dHlwZTpcInN0cmluZ1wifSxuZXdfYWNjb3VudF9yZWFsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LG5vbl9wZXBfZGVjbGFyYXRpb246e3R5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHBob25lOnt9LHBsYWNlX29mX2JpcnRoOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0scmVzaWRlbmNlOnt0eXBlOlwic3RyaW5nXCJ9LHNhbHV0YXRpb246e3R5cGU6XCJzdHJpbmdcIn0sc2VjcmV0X2Fuc3dlcjp7dHlwZTpcInN0cmluZ1wifSxzZWNyZXRfcXVlc3Rpb246e3R5cGU6XCJzdHJpbmdcIn0sdGF4X2lkZW50aWZpY2F0aW9uX251bWJlcjp7dHlwZTpcInN0cmluZ1wifSx0YXhfcmVzaWRlbmNlOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJuZXdfYWNjb3VudF9yZWFsXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJuZXdBY2NvdW50VmlydHVhbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FmZmlsaWF0ZV90b2tlbjp7dHlwZTpcInN0cmluZ1wifSxjbGllbnRfcGFzc3dvcmQ6e3R5cGU6XCJzdHJpbmdcIn0sZGF0ZV9maXJzdF9jb250YWN0Ont0eXBlOlwic3RyaW5nXCJ9LGVtYWlsX2NvbnNlbnQ6e3R5cGU6XCJudW1lcmljXCJ9LGdjbGlkX3VybDp7dHlwZTpcInN0cmluZ1wifSxuZXdfYWNjb3VudF92aXJ0dWFsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0scmVzaWRlbmNlOnt0eXBlOlwic3RyaW5nXCJ9LHNpZ251cF9kZXZpY2U6e3R5cGU6XCJzdHJpbmdcIn0sdHlwZTp7dHlwZTpcInN0cmluZ1wifSx1dG1fYWRfaWQ6e30sdXRtX2FkZ3JvdXBfaWQ6e30sdXRtX2Fkcm9sbGNsa19pZDp7fSx1dG1fY2FtcGFpZ246e30sdXRtX2NhbXBhaWduX2lkOnt9LHV0bV9jb250ZW50Ont9LHV0bV9mYmNsX2lkOnt9LHV0bV9nbF9jbGllbnRfaWQ6e30sdXRtX21lZGl1bTp7fSx1dG1fbXNjbGtfaWQ6e30sdXRtX3NvdXJjZTp7fSx1dG1fdGVybTp7fSx2ZXJpZmljYXRpb25fY29kZTp7dHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwibmV3X2FjY291bnRfdmlydHVhbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwibmV3QWNjb3VudFdhbGxldFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FkZHJlc3NfY2l0eTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2xpbmVfMTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2xpbmVfMjp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX3Bvc3Rjb2RlOnt0eXBlOlwic3RyaW5nXCJ9LGFkZHJlc3Nfc3RhdGU6e3R5cGU6XCJzdHJpbmdcIn0sY3VycmVuY3k6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxkYXRlX29mX2JpcnRoOnt0eXBlOlwic3RyaW5nXCJ9LGZpcnN0X25hbWU6e3R5cGU6XCJzdHJpbmdcIn0sbGFzdF9uYW1lOnt0eXBlOlwic3RyaW5nXCJ9LG5ld19hY2NvdW50X3dhbGxldDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxub25fcGVwX2RlY2xhcmF0aW9uOnt0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxwYXltZW50X21ldGhvZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBob25lOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcIm5ld19hY2NvdW50X3dhbGxldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5Olwibm90aWZpY2F0aW9uRXZlbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthcmdzOntkb2N1bWVudHM6e319LGNhdGVnb3J5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZXZlbnQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxub3RpZmljYXRpb25fZXZlbnQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwibm90aWZpY2F0aW9uX2V2ZW50XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJvYXV0aEFwcHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtvYXV0aF9hcHBzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcIm9hdXRoX2FwcHNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycEFkdmVydENyZWF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2Ftb3VudDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxjb250YWN0X2luZm86e3R5cGU6XCJzdHJpbmdcIn0sZGVzY3JpcHRpb246e3R5cGU6XCJzdHJpbmdcIn0sbG9jYWxfY3VycmVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sbWF4X29yZGVyX2Ftb3VudDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxtaW5fb3JkZXJfYW1vdW50OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHAycF9hZHZlcnRfY3JlYXRlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHBheW1lbnRfaW5mbzp7dHlwZTpcInN0cmluZ1wifSxwYXltZW50X21ldGhvZDp7dHlwZTpcInN0cmluZ1wifSxwYXltZW50X21ldGhvZF9pZHM6e30scGF5bWVudF9tZXRob2RfbmFtZXM6e30scmF0ZTp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxyYXRlX3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0eXBlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInAycF9hZHZlcnRfY3JlYXRlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRJbmZvXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17aWQ6e3R5cGU6XCJzdHJpbmdcIn0scDJwX2FkdmVydF9pbmZvOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifSx1c2VfY2xpZW50X2xpbWl0czp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInAycF9hZHZlcnRfaW5mb1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicDJwQWR2ZXJ0TGlzdFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FkdmVydGlzZXJfaWQ6e3R5cGU6XCJzdHJpbmdcIn0sYWR2ZXJ0aXNlcl9uYW1lOnt0eXBlOlwic3RyaW5nXCJ9LGFtb3VudDp7dHlwZTpcIm51bWVyaWNcIn0sY291bnRlcnBhcnR5X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0sZmF2b3VyaXRlc19vbmx5Ont0eXBlOlwibnVtZXJpY1wifSxsaW1pdDp7dHlwZTpcIm51bWVyaWNcIn0sbG9jYWxfY3VycmVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sb2Zmc2V0Ont0eXBlOlwibnVtZXJpY1wifSxwMnBfYWR2ZXJ0X2xpc3Q6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scGF5bWVudF9tZXRob2Q6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzb3J0X2J5Ont0eXBlOlwic3RyaW5nXCJ9LHVzZV9jbGllbnRfbGltaXRzOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX2FkdmVydF9saXN0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRVcGRhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjb250YWN0X2luZm86e3R5cGU6XCJzdHJpbmdcIn0sZGVsZXRlOnt0eXBlOlwibnVtZXJpY1wifSxkZXNjcmlwdGlvbjp7dHlwZTpcInN0cmluZ1wifSxpZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGlzX2FjdGl2ZTp7dHlwZTpcIm51bWVyaWNcIn0sbG9jYWxfY3VycmVuY3k6e3R5cGU6XCJzdHJpbmdcIn0sbWF4X29yZGVyX2Ftb3VudDp7dHlwZTpcIm51bWVyaWNcIn0sbWluX29yZGVyX2Ftb3VudDp7dHlwZTpcIm51bWVyaWNcIn0scDJwX2FkdmVydF91cGRhdGU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scGF5bWVudF9pbmZvOnt0eXBlOlwic3RyaW5nXCJ9LHBheW1lbnRfbWV0aG9kX2lkczp7fSxwYXltZW50X21ldGhvZF9uYW1lczp7fSxyYXRlOnt0eXBlOlwibnVtZXJpY1wifSxyYXRlX3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scmVtYWluaW5nX2Ftb3VudDp7dHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX2FkdmVydF91cGRhdGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycEFkdmVydGlzZXJBZHZlcnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bGltaXQ6e3R5cGU6XCJudW1lcmljXCJ9LG9mZnNldDp7dHlwZTpcIm51bWVyaWNcIn0scDJwX2FkdmVydGlzZXJfYWR2ZXJ0czp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfYWR2ZXJ0aXNlcl9hZHZlcnRzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRpc2VyQ3JlYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y29udGFjdF9pbmZvOnt0eXBlOlwic3RyaW5nXCJ9LGRlZmF1bHRfYWR2ZXJ0X2Rlc2NyaXB0aW9uOnt0eXBlOlwic3RyaW5nXCJ9LG5hbWU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwMnBfYWR2ZXJ0aXNlcl9jcmVhdGU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scGF5bWVudF9pbmZvOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX2FkdmVydGlzZXJfY3JlYXRlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRpc2VySW5mb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2lkOnt0eXBlOlwic3RyaW5nXCJ9LHAycF9hZHZlcnRpc2VyX2luZm86e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfYWR2ZXJ0aXNlcl9pbmZvXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRpc2VyUGF5bWVudE1ldGhvZHNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjcmVhdGU6e30sZGVsZXRlOnt9LHAycF9hZHZlcnRpc2VyX3BheW1lbnRfbWV0aG9kczp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHVwZGF0ZTp7fX0scj17bWV0aG9kOlwicDJwX2FkdmVydGlzZXJfcGF5bWVudF9tZXRob2RzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBBZHZlcnRpc2VyUmVsYXRpb25zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWRkX2Jsb2NrZWQ6e30sYWRkX2Zhdm91cml0ZXM6e30scDJwX2FkdmVydGlzZXJfcmVsYXRpb25zOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlbW92ZV9ibG9ja2VkOnt9LHJlbW92ZV9mYXZvdXJpdGVzOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInAycF9hZHZlcnRpc2VyX3JlbGF0aW9uc1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicDJwQWR2ZXJ0aXNlclVwZGF0ZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2NvbnRhY3RfaW5mbzp7dHlwZTpcInN0cmluZ1wifSxkZWZhdWx0X2FkdmVydF9kZXNjcmlwdGlvbjp7dHlwZTpcInN0cmluZ1wifSxpc19saXN0ZWQ6e3R5cGU6XCJudW1lcmljXCJ9LHAycF9hZHZlcnRpc2VyX3VwZGF0ZTp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxwYXltZW50X2luZm86e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzaG93X25hbWU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfYWR2ZXJ0aXNlcl91cGRhdGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycENoYXRDcmVhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtvcmRlcl9pZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHAycF9jaGF0X2NyZWF0ZTp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfY2hhdF9jcmVhdGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycE9yZGVyQ2FuY2VsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17aWQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwMnBfb3JkZXJfY2FuY2VsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInAycF9vcmRlcl9jYW5jZWxcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycE9yZGVyQ29uZmlybVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2lkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scDJwX29yZGVyX2NvbmZpcm06e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX29yZGVyX2NvbmZpcm1cIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycE9yZGVyQ3JlYXRlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWR2ZXJ0X2lkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sYW1vdW50OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGNvbnRhY3RfaW5mbzp7dHlwZTpcInN0cmluZ1wifSxwMnBfb3JkZXJfY3JlYXRlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHBheW1lbnRfaW5mbzp7dHlwZTpcInN0cmluZ1wifSxwYXltZW50X21ldGhvZF9pZHM6e30scmF0ZTp7dHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfb3JkZXJfY3JlYXRlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBPcmRlckRpc3B1dGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtkaXNwdXRlX3JlYXNvbjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGlkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scDJwX29yZGVyX2Rpc3B1dGU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX29yZGVyX2Rpc3B1dGVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycE9yZGVySW5mb1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2lkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scDJwX29yZGVyX2luZm86e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfb3JkZXJfaW5mb1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicDJwT3JkZXJMaXN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWN0aXZlOnt0eXBlOlwibnVtZXJpY1wifSxhZHZlcnRfaWQ6e3R5cGU6XCJzdHJpbmdcIn0sbGltaXQ6e3R5cGU6XCJudW1lcmljXCJ9LG9mZnNldDp7dHlwZTpcIm51bWVyaWNcIn0scDJwX29yZGVyX2xpc3Q6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfb3JkZXJfbGlzdFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicDJwT3JkZXJSZXZpZXdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtvcmRlcl9pZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHAycF9vcmRlcl9yZXZpZXc6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmF0aW5nOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHJlY29tbWVuZGVkOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInAycF9vcmRlcl9yZXZpZXdcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInAycFBheW1lbnRNZXRob2RzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cDJwX3BheW1lbnRfbWV0aG9kczp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwMnBfcGF5bWVudF9tZXRob2RzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwMnBQaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cDJwX3Bpbmc6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicDJwX3BpbmdcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInBheW1lbnRNZXRob2RzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y291bnRyeTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwYXltZW50X21ldGhvZHM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicGF5bWVudF9tZXRob2RzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwYXltZW50YWdlbnRDcmVhdGVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthZmZpbGlhdGVfaWQ6e3R5cGU6XCJzdHJpbmdcIn0sY29kZV9vZl9jb25kdWN0X2FwcHJvdmFsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LGNvbW1pc3Npb25fZGVwb3NpdDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxjb21taXNzaW9uX3dpdGhkcmF3YWw6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sZW1haWw6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxpbmZvcm1hdGlvbjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHBheW1lbnRfYWdlbnRfbmFtZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBheW1lbnRhZ2VudF9jcmVhdGU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scGhvbmVfbnVtYmVyczp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHN1cHBvcnRlZF9wYXltZW50X21ldGhvZHM6e3JlcXVpcmVkOjF9LHVybHM6e3JlcXVpcmVkOjF9fSxyPXttZXRob2Q6XCJwYXltZW50YWdlbnRfY3JlYXRlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwYXltZW50YWdlbnREZXRhaWxzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scGF5bWVudGFnZW50X2RldGFpbHM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicGF5bWVudGFnZW50X2RldGFpbHNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInBheW1lbnRhZ2VudExpc3RcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjdXJyZW5jeTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwYXltZW50YWdlbnRfbGlzdDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInBheW1lbnRhZ2VudF9saXN0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwYXltZW50YWdlbnRUcmFuc2ZlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2Ftb3VudDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxjdXJyZW5jeTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGRlc2NyaXB0aW9uOnt0eXBlOlwic3RyaW5nXCJ9LGRyeV9ydW46e3R5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHBheW1lbnRhZ2VudF90cmFuc2Zlcjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRyYW5zZmVyX3RvOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInBheW1lbnRhZ2VudF90cmFuc2ZlclwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicGF5bWVudGFnZW50V2l0aGRyYXdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthbW91bnQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sY3VycmVuY3k6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxkZXNjcmlwdGlvbjp7dHlwZTpcInN0cmluZ1wifSxkcnlfcnVuOnt0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxwYXltZW50YWdlbnRfbG9naW5pZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHBheW1lbnRhZ2VudF93aXRoZHJhdzp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHZlcmlmaWNhdGlvbl9jb2RlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInBheW1lbnRhZ2VudF93aXRoZHJhd1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwicGF5b3V0Q3VycmVuY2llc1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e3Bhc3N0aHJvdWdoOnt9LHBheW91dF9jdXJyZW5jaWVzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInBheW91dF9jdXJyZW5jaWVzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scGluZzp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwaW5nXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwb3J0Zm9saW9cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjb250cmFjdF90eXBlOnt9LHBhc3N0aHJvdWdoOnt9LHBvcnRmb2xpbzp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwb3J0Zm9saW9cIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInByb2ZpdFRhYmxlXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y29udHJhY3RfdHlwZTp7fSxkYXRlX2Zyb206e3R5cGU6XCJzdHJpbmdcIn0sZGF0ZV90bzp7dHlwZTpcInN0cmluZ1wifSxkZXNjcmlwdGlvbjp7dHlwZTpcIm51bWVyaWNcIn0sbGltaXQ6e3R5cGU6XCJudW1lcmljXCJ9LG9mZnNldDp7dHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scHJvZml0X3RhYmxlOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc29ydDp7dHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwicHJvZml0X3RhYmxlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJwcm9wb3NhbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2Ftb3VudDp7dHlwZTpcIm51bWVyaWNcIn0sYmFycmllcjp7dHlwZTpcInN0cmluZ1wifSxiYXJyaWVyMjp7dHlwZTpcInN0cmluZ1wifSxiYXJyaWVyX3JhbmdlOnt0eXBlOlwic3RyaW5nXCJ9LGJhc2lzOnt0eXBlOlwic3RyaW5nXCJ9LGNhbmNlbGxhdGlvbjp7dHlwZTpcInN0cmluZ1wifSxjb250cmFjdF90eXBlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sY3VycmVuY3k6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxkYXRlX2V4cGlyeTp7dHlwZTpcIm51bWVyaWNcIn0sZGF0ZV9zdGFydDp7dHlwZTpcIm51bWVyaWNcIn0sZHVyYXRpb246e3R5cGU6XCJudW1lcmljXCJ9LGR1cmF0aW9uX3VuaXQ6e3R5cGU6XCJzdHJpbmdcIn0sbGltaXRfb3JkZXI6e3N0b3BfbG9zczp7dHlwZTpcIm51bWVyaWNcIn0sdGFrZV9wcm9maXQ6e3R5cGU6XCJudW1lcmljXCJ9fSxtdWx0aXBsaWVyOnt0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxwcm9kdWN0X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scHJvcG9zYWw6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzZWxlY3RlZF90aWNrOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9LHN5bWJvbDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHRyYWRpbmdfcGVyaW9kX3N0YXJ0Ont0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicHJvcG9zYWxcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInByb3Bvc2FsT3BlbkNvbnRyYWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17Y29udHJhY3RfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHByb3Bvc2FsX29wZW5fY29udHJhY3Q6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3R5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJwcm9wb3NhbF9vcGVuX2NvbnRyYWN0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJyZWFsaXR5Q2hlY2tcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtwYXNzdGhyb3VnaDp7fSxyZWFsaXR5X2NoZWNrOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInJlYWxpdHlfY2hlY2tcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInJlcXVlc3RSZXBvcnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtkYXRlX2Zyb206e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sZGF0ZV90bzp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXBvcnRfdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0scmVxdWVzdF9yZXBvcnQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInJlcXVlc3RfcmVwb3J0XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJyZXNldFBhc3N3b3JkXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17ZGF0ZV9vZl9iaXJ0aDp7dHlwZTpcInN0cmluZ1wifSxuZXdfcGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHJlc2V0X3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHZlcmlmaWNhdGlvbl9jb2RlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInJlc2V0X3Bhc3N3b3JkXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJyZXNpZGVuY2VMaXN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxyZXNpZGVuY2VfbGlzdDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwicmVzaWRlbmNlX2xpc3RcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInJldm9rZU9hdXRoQXBwXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxyZXZva2Vfb2F1dGhfYXBwOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJyZXZva2Vfb2F1dGhfYXBwXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJzZWxsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scHJpY2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzZWxsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJzZWxsXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJzZWxsQ29udHJhY3RGb3JNdWx0aXBsZUFjY291bnRzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scHJpY2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzZWxsX2NvbnRyYWN0X2Zvcl9tdWx0aXBsZV9hY2NvdW50czp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxzaG9ydGNvZGU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSx0b2tlbnM6e3JlcXVpcmVkOjF9fSxyPXttZXRob2Q6XCJzZWxsX2NvbnRyYWN0X2Zvcl9tdWx0aXBsZV9hY2NvdW50c1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5Olwic2VsbEV4cGlyZWRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHNlbGxfZXhwaXJlZDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwic2VsbF9leHBpcmVkXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJzZXJ2aWNlVG9rZW5cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtjb3VudHJ5Ont0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHJlZmVycmVyOnt0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc2VydmVyOnt0eXBlOlwic3RyaW5nXCJ9LHNlcnZpY2U6e3JlcXVpcmVkOjF9LHNlcnZpY2VfdG9rZW46e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInNlcnZpY2VfdG9rZW5cIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInNldEFjY291bnRDdXJyZW5jeVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e3Bhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc2V0X2FjY291bnRfY3VycmVuY3k6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwic2V0X2FjY291bnRfY3VycmVuY3lcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInNldEZpbmFuY2lhbEFzc2Vzc21lbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY2NvdW50X3R1cm5vdmVyOnt0eXBlOlwic3RyaW5nXCJ9LGJpbmFyeV9vcHRpb25zX3RyYWRpbmdfZXhwZXJpZW5jZTp7dHlwZTpcInN0cmluZ1wifSxiaW5hcnlfb3B0aW9uc190cmFkaW5nX2ZyZXF1ZW5jeTp7dHlwZTpcInN0cmluZ1wifSxjZmRfdHJhZGluZ19leHBlcmllbmNlOnt0eXBlOlwic3RyaW5nXCJ9LGNmZF90cmFkaW5nX2ZyZXF1ZW5jeTp7dHlwZTpcInN0cmluZ1wifSxlZHVjYXRpb25fbGV2ZWw6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxlbXBsb3ltZW50X2luZHVzdHJ5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZW1wbG95bWVudF9zdGF0dXM6e3R5cGU6XCJzdHJpbmdcIn0sZXN0aW1hdGVkX3dvcnRoOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sZm9yZXhfdHJhZGluZ19leHBlcmllbmNlOnt0eXBlOlwic3RyaW5nXCJ9LGZvcmV4X3RyYWRpbmdfZnJlcXVlbmN5Ont0eXBlOlwic3RyaW5nXCJ9LGluY29tZV9zb3VyY2U6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxuZXRfaW5jb21lOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sb2NjdXBhdGlvbjp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG90aGVyX2luc3RydW1lbnRzX3RyYWRpbmdfZXhwZXJpZW5jZTp7dHlwZTpcInN0cmluZ1wifSxvdGhlcl9pbnN0cnVtZW50c190cmFkaW5nX2ZyZXF1ZW5jeTp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHNldF9maW5hbmNpYWxfYXNzZXNzbWVudDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSxzb3VyY2Vfb2Zfd2VhbHRoOnt0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJzZXRfZmluYW5jaWFsX2Fzc2Vzc21lbnRcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInNldFNlbGZFeGNsdXNpb25cIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtleGNsdWRlX3VudGlsOnt9LG1heF8zMGRheV9kZXBvc2l0Ont9LG1heF8zMGRheV9sb3NzZXM6e30sbWF4XzMwZGF5X3R1cm5vdmVyOnt9LG1heF83ZGF5X2RlcG9zaXQ6e30sbWF4XzdkYXlfbG9zc2VzOnt9LG1heF83ZGF5X3R1cm5vdmVyOnt9LG1heF9iYWxhbmNlOnt9LG1heF9kZXBvc2l0Ont9LG1heF9sb3NzZXM6e30sbWF4X29wZW5fYmV0czp7fSxtYXhfdHVybm92ZXI6e30scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzZXNzaW9uX2R1cmF0aW9uX2xpbWl0Ont9LHNldF9zZWxmX2V4Y2x1c2lvbjp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifSx0aW1lb3V0X3VudGlsOnt9fSxyPXttZXRob2Q6XCJzZXRfc2VsZl9leGNsdXNpb25cIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInNldFNldHRpbmdzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWNjb3VudF9vcGVuaW5nX3JlYXNvbjp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX2NpdHk6e3R5cGU6XCJzdHJpbmdcIn0sYWRkcmVzc19saW5lXzE6e3R5cGU6XCJzdHJpbmdcIn0sYWRkcmVzc19saW5lXzI6e30sYWRkcmVzc19wb3N0Y29kZTp7dHlwZTpcInN0cmluZ1wifSxhZGRyZXNzX3N0YXRlOnt0eXBlOlwic3RyaW5nXCJ9LGFsbG93X2NvcGllcnM6e3R5cGU6XCJudW1lcmljXCJ9LGNpdGl6ZW46e30sZGF0ZV9vZl9iaXJ0aDp7dHlwZTpcInN0cmluZ1wifSxlbWFpbF9jb25zZW50Ont0eXBlOlwibnVtZXJpY1wifSxmZWF0dXJlX2ZsYWc6e3dhbGxldDp7dHlwZTpcIm51bWVyaWNcIn19LGZpcnN0X25hbWU6e3R5cGU6XCJzdHJpbmdcIn0sbGFzdF9uYW1lOnt0eXBlOlwic3RyaW5nXCJ9LG5vbl9wZXBfZGVjbGFyYXRpb246e3R5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHBob25lOnt9LHBsYWNlX29mX2JpcnRoOnt0eXBlOlwic3RyaW5nXCJ9LHByZWZlcnJlZF9sYW5ndWFnZTp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHJlcXVlc3RfcHJvZmVzc2lvbmFsX3N0YXR1czp7dHlwZTpcIm51bWVyaWNcIn0scmVzaWRlbmNlOnt9LHNhbHV0YXRpb246e3R5cGU6XCJzdHJpbmdcIn0sc2VjcmV0X2Fuc3dlcjp7dHlwZTpcInN0cmluZ1wifSxzZWNyZXRfcXVlc3Rpb246e3R5cGU6XCJzdHJpbmdcIn0sc2V0X3NldHRpbmdzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHRheF9pZGVudGlmaWNhdGlvbl9udW1iZXI6e3R5cGU6XCJzdHJpbmdcIn0sdGF4X3Jlc2lkZW5jZTp7dHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwic2V0X3NldHRpbmdzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJzdGF0ZW1lbnRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY3Rpb25fdHlwZTp7dHlwZTpcInN0cmluZ1wifSxkYXRlX2Zyb206e3R5cGU6XCJudW1lcmljXCJ9LGRhdGVfdG86e3R5cGU6XCJudW1lcmljXCJ9LGRlc2NyaXB0aW9uOnt0eXBlOlwibnVtZXJpY1wifSxsaW1pdDp7dHlwZTpcIm51bWVyaWNcIn0sb2Zmc2V0Ont0eXBlOlwibnVtZXJpY1wifSxwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHN0YXRlbWVudDp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwic3RhdGVtZW50XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJzdGF0ZXNMaXN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdGF0ZXNfbGlzdDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9fSxyPXttZXRob2Q6XCJzdGF0ZXNfbGlzdFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidGlja3NcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHN1YnNjcmliZTp7dHlwZTpcIm51bWVyaWNcIn0sdGlja3M6e3JlcXVpcmVkOjF9fSxyPXttZXRob2Q6XCJ0aWNrc1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidGlja3NIaXN0b3J5XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWRqdXN0X3N0YXJ0X3RpbWU6e3R5cGU6XCJudW1lcmljXCJ9LGNvdW50Ont0eXBlOlwibnVtZXJpY1wifSxlbmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxncmFudWxhcml0eTp7dHlwZTpcIm51bWVyaWNcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdGFydDp7dHlwZTpcIm51bWVyaWNcIn0sc3R5bGU6e3R5cGU6XCJzdHJpbmdcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifSx0aWNrc19oaXN0b3J5OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInRpY2tzX2hpc3RvcnlcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInRpbWVcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXtwYXNzdGhyb3VnaDp7fSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRpbWU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRpbWVcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInRuY0FwcHJvdmFsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YWZmaWxpYXRlX2NvY19hZ3JlZW1lbnQ6e3R5cGU6XCJudW1lcmljXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdG5jX2FwcHJvdmFsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9LHVrZ2NfZnVuZHNfcHJvdGVjdGlvbjp7dHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRuY19hcHByb3ZhbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidG9wdXBWaXJ0dWFsXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0b3B1cF92aXJ0dWFsOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJ0b3B1cF92aXJ0dWFsXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nRHVyYXRpb25zXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bGFuZGluZ19jb21wYW55Ont0eXBlOlwic3RyaW5nXCJ9LHBhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdHJhZGluZ19kdXJhdGlvbnM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfZHVyYXRpb25zXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nUGxhdGZvcm1BY2NvdW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e3Bhc3N0aHJvdWdoOnt9LHBsYXRmb3JtOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFkaW5nX3BsYXRmb3JtX2FjY291bnRzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJ0cmFkaW5nX3BsYXRmb3JtX2FjY291bnRzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nUGxhdGZvcm1EZXBvc2l0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17YW1vdW50Ont0eXBlOlwibnVtZXJpY1wifSxmcm9tX2FjY291bnQ6e3R5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGxhdGZvcm06e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRvX2FjY291bnQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSx0cmFkaW5nX3BsYXRmb3JtX2RlcG9zaXQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfcGxhdGZvcm1fZGVwb3NpdFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZENoYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FjY291bnRfaWQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxuZXdfcGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxvbGRfcGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwbGF0Zm9ybTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdHJhZGluZ19wbGF0Zm9ybV9pbnZlc3Rvcl9wYXNzd29yZF9jaGFuZ2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfcGxhdGZvcm1faW52ZXN0b3JfcGFzc3dvcmRfY2hhbmdlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nUGxhdGZvcm1JbnZlc3RvclBhc3N3b3JkUmVzZXRcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY2NvdW50X2lkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0sbmV3X3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGxhdGZvcm06e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRyYWRpbmdfcGxhdGZvcm1faW52ZXN0b3JfcGFzc3dvcmRfcmVzZXQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sdmVyaWZpY2F0aW9uX2NvZGU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwidHJhZGluZ19wbGF0Zm9ybV9pbnZlc3Rvcl9wYXNzd29yZF9yZXNldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidHJhZGluZ1BsYXRmb3JtTmV3QWNjb3VudFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FjY291bnRfdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LGN1cnJlbmN5Ont0eXBlOlwic3RyaW5nXCJ9LGRyeV9ydW46e3R5cGU6XCJudW1lcmljXCJ9LG1hcmtldF90eXBlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGFzc3dvcmQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxwbGF0Zm9ybTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3ViX2FjY291bnRfdHlwZTp7dHlwZTpcInN0cmluZ1wifSx0cmFkaW5nX3BsYXRmb3JtX25ld19hY2NvdW50OntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJ0cmFkaW5nX3BsYXRmb3JtX25ld19hY2NvdW50XCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nUGxhdGZvcm1QYXNzd29yZENoYW5nZVwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e25ld19wYXNzd29yZDp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LG9sZF9wYXNzd29yZDp7dHlwZTpcInN0cmluZ1wifSxwYXNzdGhyb3VnaDp7fSxwbGF0Zm9ybTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdHJhZGluZ19wbGF0Zm9ybV9wYXNzd29yZF9jaGFuZ2U6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfcGxhdGZvcm1fcGFzc3dvcmRfY2hhbmdlXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFkaW5nUGxhdGZvcm1QYXNzd29yZFJlc2V0XCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17bmV3X3Bhc3N3b3JkOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGxhdGZvcm06e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRyYWRpbmdfcGxhdGZvcm1fcGFzc3dvcmRfcmVzZXQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sdmVyaWZpY2F0aW9uX2NvZGU6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifX0scj17bWV0aG9kOlwidHJhZGluZ19wbGF0Zm9ybV9wYXNzd29yZF9yZXNldFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidHJhZGluZ1BsYXRmb3JtUHJvZHVjdExpc3RpbmdcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthcHBfaWQ6e30sY291bnRyeV9jb2RlOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFkaW5nX3BsYXRmb3JtX3Byb2R1Y3RfbGlzdGluZzp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwidHJhZGluZ19wbGF0Zm9ybV9wcm9kdWN0X2xpc3RpbmdcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInRyYWRpbmdQbGF0Zm9ybVdpdGhkcmF3YWxcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthbW91bnQ6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sZnJvbV9hY2NvdW50OntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGxhdGZvcm06e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSxyZXFfaWQ6e3R5cGU6XCJudW1lcmljXCJ9LHRvX2FjY291bnQ6e3JlcXVpcmVkOjEsdHlwZTpcInN0cmluZ1wifSx0cmFkaW5nX3BsYXRmb3JtX3dpdGhkcmF3YWw6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfcGxhdGZvcm1fd2l0aGRyYXdhbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidHJhZGluZ1NlcnZlcnNcIix2YWx1ZTpmdW5jdGlvbigpe3ZhciBlPWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSx0PXthY2NvdW50X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0sZW52aXJvbm1lbnQ6e3R5cGU6XCJzdHJpbmdcIn0sbWFya2V0X3R5cGU6e3R5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scGxhdGZvcm06e3R5cGU6XCJzdHJpbmdcIn0scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFkaW5nX3NlcnZlcnM6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfc2VydmVyc1wiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5OlwidHJhZGluZ1RpbWVzXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFkaW5nX3RpbWVzOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInRyYWRpbmdfdGltZXNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInRyYW5zYWN0aW9uXCIsdmFsdWU6ZnVuY3Rpb24oKXt2YXIgZT1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06e30sdD17cGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSxzdWJzY3JpYmU6e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn0sdHJhbnNhY3Rpb246e3JlcXVpcmVkOjEsdHlwZTpcIm51bWVyaWNcIn19LHI9e21ldGhvZDpcInRyYW5zYWN0aW9uXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ0cmFuc2ZlckJldHdlZW5BY2NvdW50c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e2FjY291bnRfZnJvbTp7dHlwZTpcInN0cmluZ1wifSxhY2NvdW50X3RvOnt0eXBlOlwic3RyaW5nXCJ9LGFjY291bnRzOnt0eXBlOlwic3RyaW5nXCJ9LGFtb3VudDp7dHlwZTpcIm51bWVyaWNcIn0sY3VycmVuY3k6e3R5cGU6XCJzdHJpbmdcIn0scGFzc3Rocm91Z2g6e30scmVxX2lkOnt0eXBlOlwibnVtZXJpY1wifSx0cmFuc2Zlcl9iZXR3ZWVuX2FjY291bnRzOntyZXF1aXJlZDoxLHR5cGU6XCJudW1lcmljXCJ9fSxyPXttZXRob2Q6XCJ0cmFuc2Zlcl9iZXR3ZWVuX2FjY291bnRzXCIsbmVlZHNNZXRob2RBcmc6XCIxXCIsYXJnczplLGNvbmZpZzp0fTtyZXR1cm4gdGhpcy5wcm9jZXNzUmVxdWVzdChyKX19LHtrZXk6XCJ2ZXJpZnlFbWFpbFwiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e3Bhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sdHlwZTp7cmVxdWlyZWQ6MSx0eXBlOlwic3RyaW5nXCJ9LHVybF9wYXJhbWV0ZXJzOnthZmZpbGlhdGVfdG9rZW46e3R5cGU6XCJzdHJpbmdcIn0sZGF0ZV9maXJzdF9jb250YWN0Ont0eXBlOlwic3RyaW5nXCJ9LGdjbGlkX3VybDp7dHlwZTpcInN0cmluZ1wifSxwYV9hbW91bnQ6e3R5cGU6XCJudW1lcmljXCJ9LHBhX2N1cnJlbmN5Ont0eXBlOlwic3RyaW5nXCJ9LHBhX2xvZ2luaWQ6e3R5cGU6XCJzdHJpbmdcIn0scGFfcmVtYXJrczp7dHlwZTpcInN0cmluZ1wifSxyZWRpcmVjdF90bzp7dHlwZTpcIm51bWVyaWNcIn0sc2lnbnVwX2RldmljZTp7dHlwZTpcInN0cmluZ1wifSx1dG1fYWRfaWQ6e30sdXRtX2FkZ3JvdXBfaWQ6e30sdXRtX2Fkcm9sbGNsa19pZDp7fSx1dG1fY2FtcGFpZ246e30sdXRtX2NhbXBhaWduX2lkOnt9LHV0bV9jb250ZW50Ont9LHV0bV9mYmNsX2lkOnt9LHV0bV9nbF9jbGllbnRfaWQ6e30sdXRtX21lZGl1bTp7fSx1dG1fbXNjbGtfaWQ6e30sdXRtX3NvdXJjZTp7fSx1dG1fdGVybTp7fX0sdmVyaWZ5X2VtYWlsOntyZXF1aXJlZDoxLHR5cGU6XCJzdHJpbmdcIn19LHI9e21ldGhvZDpcInZlcmlmeV9lbWFpbFwiLG5lZWRzTWV0aG9kQXJnOlwiMVwiLGFyZ3M6ZSxjb25maWc6dH07cmV0dXJuIHRoaXMucHJvY2Vzc1JlcXVlc3Qocil9fSx7a2V5Olwid2Vic2l0ZVN0YXR1c1wiLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9YXJndW1lbnRzLmxlbmd0aD4wJiZ2b2lkIDAhPT1hcmd1bWVudHNbMF0/YXJndW1lbnRzWzBdOnt9LHQ9e3Bhc3N0aHJvdWdoOnt9LHJlcV9pZDp7dHlwZTpcIm51bWVyaWNcIn0sc3Vic2NyaWJlOnt0eXBlOlwibnVtZXJpY1wifSx3ZWJzaXRlX3N0YXR1czp7cmVxdWlyZWQ6MSx0eXBlOlwibnVtZXJpY1wifX0scj17bWV0aG9kOlwid2Vic2l0ZV9zdGF0dXNcIixuZWVkc01ldGhvZEFyZzpcIjFcIixhcmdzOmUsY29uZmlnOnR9O3JldHVybiB0aGlzLnByb2Nlc3NSZXF1ZXN0KHIpfX0se2tleTpcInByb2Nlc3NSZXF1ZXN0XCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHI9ZS5jb25maWcsbj1mdW5jdGlvbihlKXt2YXIgdD1lLmNvbmZpZyxyPWUuYXJncyxuPWUubWV0aG9kLGk9ZS5uZWVkc01ldGhvZEFyZyxzPXI7cmV0dXJuIGkmJiFtZShzKSYmKHM9ZmUoe30sbixzKSksc1tuXT1zW25dfHwxLE9iamVjdC5rZXlzKHMpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciByPXNbZV07ZSBpbiB0JiYoXCJzdHJpbmdcIj09PXRbZV0udHlwZT9zW2VdPVwiXCIuY29uY2F0KHIpOlwibnVtZXJpY1wiPT09dFtlXS50eXBlP3NbZV09cGFyc2VGbG9hdChyKTpcImJvb2xlYW5cIj09PXRbZV0udHlwZSYmKHNbZV09K3IpKX0pKSxzfShlKSxpPWZ1bmN0aW9uKGUpe3ZhciByPWUuY29uZmlnLG49ZS5hcmdzO2lmKCFtZShuKSlyZXR1cm5cIlJlcXVpcmVzIGFuIG9iamVjdCBidXQgYSBcIi5jb25jYXQodChuKSxcIiBpcyBwYXNzZWQuXCIpO3ZhciBpPVtdLHM9T2JqZWN0LmtleXMocikuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4ocltlXXx8e30pLnJlcXVpcmVkJiYhKGUgaW4gbil9KSk7cmV0dXJuIHMubGVuZ3RoJiZpLnB1c2goXCJSZXF1aXJlZCBwYXJhbWV0ZXJzIG1pc3Npbmc6IFwiLmNvbmNhdChzLmpvaW4oXCIsIFwiKSkpLE9iamVjdC5rZXlzKG4pLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciBzPW5bZV07aWYoZSBpbiByKXt2YXIgbz1yW2VdLnR5cGU7byYmKHZlW29dKHMpfHxpLnB1c2goXCJcIi5jb25jYXQobyxcIiB2YWx1ZSBleHBlY3RlZCBidXQgZm91bmQgXCIpLmNvbmNhdCh0KHMpLFwiOiBcIikuY29uY2F0KGUpKSl9fSkpLGkubGVuZ3RoP2kuam9pbihcIiAtIFwiKTpcIlwifSh7Y29uZmlnOnIsYXJnczpufSk7cmV0dXJuIGk/UHJvbWlzZS5yZWplY3QoaSk6dGhpcy5zZW5kKG4pfX1dKSxlfSgpLG1lPWZ1bmN0aW9uKGUpe3JldHVybiBlIGluc3RhbmNlb2YgT2JqZWN0fSx2ZT17b2JqZWN0Om1lLG51bWVyaWM6ZnVuY3Rpb24oZSl7cmV0dXJuIU51bWJlci5pc05hTigxKmUpfSxzdHJpbmc6ZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGV9LGJvb2xlYW46ZnVuY3Rpb24oZSl7cmV0dXJuWyEwLCExLDAsMV0uaW5jbHVkZXMoZSl9fTtmdW5jdGlvbiBxZSgpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0fHwhUmVmbGVjdC5jb25zdHJ1Y3QpcmV0dXJuITE7aWYoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSlyZXR1cm4hMDt0cnl7cmV0dXJuIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLFtdLChmdW5jdGlvbigpe30pKSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fWZ1bmN0aW9uIGJlKGUsdCxyKXtyZXR1cm4gYmU9cWUoKT9SZWZsZWN0LmNvbnN0cnVjdDpmdW5jdGlvbihlLHQscil7dmFyIG49W251bGxdO24ucHVzaC5hcHBseShuLHQpO3ZhciBpPW5ldyhGdW5jdGlvbi5iaW5kLmFwcGx5KGUsbikpO3JldHVybiByJiZwKGksci5wcm90b3R5cGUpLGl9LGJlLmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiB3ZShlKXt2YXIgdD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBNYXA/bmV3IE1hcDp2b2lkIDA7cmV0dXJuIHdlPWZ1bmN0aW9uKGUpe2lmKG51bGw9PT1lfHwocj1lLC0xPT09RnVuY3Rpb24udG9TdHJpbmcuY2FsbChyKS5pbmRleE9mKFwiW25hdGl2ZSBjb2RlXVwiKSkpcmV0dXJuIGU7dmFyIHI7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb25cIik7aWYodm9pZCAwIT09dCl7aWYodC5oYXMoZSkpcmV0dXJuIHQuZ2V0KGUpO3Quc2V0KGUsbil9ZnVuY3Rpb24gbigpe3JldHVybiBiZShlLGFyZ3VtZW50cyx5KHRoaXMpLmNvbnN0cnVjdG9yKX1yZXR1cm4gbi5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZShlLnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOm4sZW51bWVyYWJsZTohMSx3cml0YWJsZTohMCxjb25maWd1cmFibGU6ITB9fSkscChuLGUpfSx3ZShlKX1mdW5jdGlvbiBrZShlKXt2YXIgdD1mdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0fHwhUmVmbGVjdC5jb25zdHJ1Y3QpcmV0dXJuITE7aWYoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSlyZXR1cm4hMDt0cnl7cmV0dXJuIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLFtdLChmdW5jdGlvbigpe30pKSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fSgpO3JldHVybiBmdW5jdGlvbigpe3ZhciByLG49eShlKTtpZih0KXt2YXIgaT15KHRoaXMpLmNvbnN0cnVjdG9yO3I9UmVmbGVjdC5jb25zdHJ1Y3Qobixhcmd1bWVudHMsaSl9ZWxzZSByPW4uYXBwbHkodGhpcyxhcmd1bWVudHMpO3JldHVybiBoKHRoaXMscil9fWZ1bmN0aW9uIEFlKGUpe3JldHVybiBmdW5jdGlvbih0KXtkKG4sdCk7dmFyIHI9a2Uobik7ZnVuY3Rpb24gbih0KXt2YXIgaTtyZXR1cm4gbyh0aGlzLG4pLChpPXIuY2FsbCh0aGlzKSkudHlwZT1lLGkubWVzc2FnZT10LGl9cmV0dXJuIGMobixbe2tleTpcInRvU3RyaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm5cIlwiLmNvbmNhdCh0aGlzLnR5cGUsXCI6IFwiKS5jb25jYXQodGhpcy5tZXNzYWdlKX19XSksbn0od2UoRXJyb3IpKX12YXIgeGU9ZnVuY3Rpb24oZSl7ZChyLGUpO3ZhciB0PWtlKHIpO2Z1bmN0aW9uIHIoKXtyZXR1cm4gbyh0aGlzLHIpLHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBjKHIpfShBZShcIkFQSUVycm9yXCIpKSxSZT1mdW5jdGlvbihlKXtkKHIsZSk7dmFyIHQ9a2Uocik7ZnVuY3Rpb24gcigpe3JldHVybiBvKHRoaXMsciksdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9cmV0dXJuIGMocil9KEFlKFwiQ29uc3RydWN0aW9uRXJyb3JcIikpLE1lPXIoMjY2KSxPZT1yLm4oTWUpO2Z1bmN0aW9uIFNlKGUsdCl7dmFyIHI9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIG49T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTt0JiYobj1uLmZpbHRlcigoZnVuY3Rpb24odCl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSx0KS5lbnVtZXJhYmxlfSkpKSxyLnB1c2guYXBwbHkocixuKX1yZXR1cm4gcn1mdW5jdGlvbiBFZShlKXt2YXIgdD1mdW5jdGlvbihlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgcj1udWxsIT1hcmd1bWVudHNbdF0/YXJndW1lbnRzW3RdOnt9O3QlMj9TZShPYmplY3QociksITApLmZvckVhY2goKGZ1bmN0aW9uKHQpe2ZlKGUsdCxyW3RdKX0pKTpPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycz9PYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHIpKTpTZShPYmplY3QocikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihyLHQpKX0pKX1yZXR1cm4gZX0oe30sZSk7cmV0dXJuIGRlbGV0ZSB0LnJlcV9pZCxkZWxldGUgdC5wYXNzdGhyb3VnaCxkZWxldGUgdC5zdWJzY3JpYmUsT2UoKSh0KX12YXIgamU9ZnVuY3Rpb24oZSl7ZChmLGUpO3ZhciB0LHIsbixpLHUsYSxwLGw9KGE9ZixwPWZ1bmN0aW9uKCl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIFJlZmxlY3R8fCFSZWZsZWN0LmNvbnN0cnVjdClyZXR1cm4hMTtpZihSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKXJldHVybiExO2lmKFwiZnVuY3Rpb25cIj09dHlwZW9mIFByb3h5KXJldHVybiEwO3RyeXtyZXR1cm4gQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sW10sKGZ1bmN0aW9uKCl7fSkpKSwhMH1jYXRjaChlKXtyZXR1cm4hMX19KCksZnVuY3Rpb24oKXt2YXIgZSx0PXkoYSk7aWYocCl7dmFyIHI9eSh0aGlzKS5jb25zdHJ1Y3RvcjtlPVJlZmxlY3QuY29uc3RydWN0KHQsYXJndW1lbnRzLHIpfWVsc2UgZT10LmFwcGx5KHRoaXMsYXJndW1lbnRzKTtyZXR1cm4gaCh0aGlzLGUpfSk7ZnVuY3Rpb24gZihlLHQpe3ZhciByO2lmKG8odGhpcyxmKSwhZSl0aHJvdyBuZXcgUmUoXCJDYWNoZSBvYmplY3QgbmVlZHMgYW4gQVBJIHRvIHdvcmtcIik7cmV0dXJuKHI9bC5jYWxsKHRoaXMpKS5hcGk9ZSxyLnN0b3JhZ2U9dCxyfXJldHVybiBjKGYsW3trZXk6XCJzZW5kXCIsdmFsdWU6KHU9cyhnKCkubWFyaygoZnVuY3Rpb24gZSh0KXt2YXIgcjtyZXR1cm4gZygpLndyYXAoKGZ1bmN0aW9uKGUpe2Zvcig7Oylzd2l0Y2goZS5wcmV2PWUubmV4dCl7Y2FzZSAwOnJldHVybiBlLm5leHQ9Mix0aGlzLmhhcyh0KTtjYXNlIDI6aWYoIWUuc2VudCl7ZS5uZXh0PTQ7YnJlYWt9cmV0dXJuIGUuYWJydXB0KFwicmV0dXJuXCIsdGhpcy5nZXQodCkpO2Nhc2UgNDpyZXR1cm4gZS5uZXh0PTYsdGhpcy5hcGkuc2VuZCh0KTtjYXNlIDY6cmV0dXJuIHI9ZS5zZW50LGUubmV4dD05LHRoaXMuc2V0KHQscik7Y2FzZSA5OnJldHVybiBlLmFicnVwdChcInJldHVyblwiLHIpO2Nhc2UgMTA6Y2FzZVwiZW5kXCI6cmV0dXJuIGUuc3RvcCgpfX0pLGUsdGhpcyl9KSkpLGZ1bmN0aW9uKGUpe3JldHVybiB1LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlwiaGFzXCIsdmFsdWU6KGk9cyhnKCkubWFyaygoZnVuY3Rpb24gZSh0KXtyZXR1cm4gZygpLndyYXAoKGZ1bmN0aW9uKGUpe2Zvcig7Oylzd2l0Y2goZS5wcmV2PWUubmV4dCl7Y2FzZSAwOnJldHVybiBlLmFicnVwdChcInJldHVyblwiLHRoaXMuc3RvcmFnZS5oYXMoRWUodCkpKTtjYXNlIDE6Y2FzZVwiZW5kXCI6cmV0dXJuIGUuc3RvcCgpfX0pLGUsdGhpcyl9KSkpLGZ1bmN0aW9uKGUpe3JldHVybiBpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlwiZ2V0XCIsdmFsdWU6KG49cyhnKCkubWFyaygoZnVuY3Rpb24gZSh0KXtyZXR1cm4gZygpLndyYXAoKGZ1bmN0aW9uKGUpe2Zvcig7Oylzd2l0Y2goZS5wcmV2PWUubmV4dCl7Y2FzZSAwOnJldHVybiBlLmFicnVwdChcInJldHVyblwiLHRoaXMuc3RvcmFnZS5nZXQoRWUodCkpKTtjYXNlIDE6Y2FzZVwiZW5kXCI6cmV0dXJuIGUuc3RvcCgpfX0pLGUsdGhpcyl9KSkpLGZ1bmN0aW9uKGUpe3JldHVybiBuLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0pfSx7a2V5OlwiZ2V0QnlNc2dUeXBlXCIsdmFsdWU6KHI9cyhnKCkubWFyaygoZnVuY3Rpb24gZSh0KXtyZXR1cm4gZygpLndyYXAoKGZ1bmN0aW9uKGUpe2Zvcig7Oylzd2l0Y2goZS5wcmV2PWUubmV4dCl7Y2FzZSAwOnJldHVybiBlLmFicnVwdChcInJldHVyblwiLHRoaXMuc3RvcmFnZS5nZXRCeU1zZ1R5cGUodCkpO2Nhc2UgMTpjYXNlXCJlbmRcIjpyZXR1cm4gZS5zdG9wKCl9fSksZSx0aGlzKX0pKSksZnVuY3Rpb24oZSl7cmV0dXJuIHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9LHtrZXk6XCJzZXRcIix2YWx1ZToodD1zKGcoKS5tYXJrKChmdW5jdGlvbiBlKHQscil7cmV0dXJuIGcoKS53cmFwKChmdW5jdGlvbihlKXtmb3IoOzspc3dpdGNoKGUucHJldj1lLm5leHQpe2Nhc2UgMDpyZXR1cm4gZS5hYnJ1cHQoXCJyZXR1cm5cIix0aGlzLnN0b3JhZ2Uuc2V0KEVlKHQpLHIpKTtjYXNlIDE6Y2FzZVwiZW5kXCI6cmV0dXJuIGUuc3RvcCgpfX0pLGUsdGhpcyl9KSkpLGZ1bmN0aW9uKGUscil7cmV0dXJuIHQuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9XSksZn0oX2UpO3ZhciBQZT1mdW5jdGlvbihlKXtkKGksZSk7dmFyIHQscixuPSh0PWkscj1mdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0fHwhUmVmbGVjdC5jb25zdHJ1Y3QpcmV0dXJuITE7aWYoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSlyZXR1cm4hMDt0cnl7cmV0dXJuIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLFtdLChmdW5jdGlvbigpe30pKSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGZ1bmN0aW9uKCl7dmFyIGUsbj15KHQpO2lmKHIpe3ZhciBpPXkodGhpcykuY29uc3RydWN0b3I7ZT1SZWZsZWN0LmNvbnN0cnVjdChuLGFyZ3VtZW50cyxpKX1lbHNlIGU9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGgodGhpcyxlKX0pO2Z1bmN0aW9uIGkoKXt2YXIgZSx0LHIscz1hcmd1bWVudHMubGVuZ3RoPjAmJnZvaWQgMCE9PWFyZ3VtZW50c1swXT9hcmd1bWVudHNbMF06ZnVuY3Rpb24oKXt9O3JldHVybiBvKHRoaXMsaSksZT1uLmNhbGwodGhpcywoZnVuY3Rpb24oZSxuKXt0PWUscj1ufSkpLHModCxyKSxlLnJlc29sdmVDYWxsYmFjaz10LGUucmVqZWN0Q2FsbGJhY2s9cixlLnN0YXRlPVwicGVuZGluZ1wiLGV9cmV0dXJuIGMoaSxbe2tleTpcInJlc29sdmVcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZXNvbHZlQ2FsbGJhY2soZSksdGhpcy5zdGF0ZT1cInJlc29sdmVkXCIsdGhpc319LHtrZXk6XCJyZWplY3RcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5yZWplY3RDYWxsYmFjayhlKSx0aGlzLnN0YXRlPVwicmVqZWN0ZWRcIix0aGlzfX0se2tleTpcImlzUGVuZGluZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJwZW5kaW5nXCI9PT10aGlzLnN0YXRlfX0se2tleTpcImlzUmVqZWN0ZWRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVyblwicmVqZWN0ZWRcIj09PXRoaXMuc3RhdGV9fSx7a2V5OlwiaXNSZXNvbHZlZFwiLHZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuXCJyZXNvbHZlZFwiPT09dGhpcy5zdGF0ZX19XSxbe2tleTpcIndyYXBcIix2YWx1ZTpmdW5jdGlvbihlKXtpZihlIGluc3RhbmNlb2YgdGhpcylyZXR1cm4gZTt2YXIgdD1uZXcgdGhpcztyZXR1cm4gZS50aGVuKHQucmVzb2x2ZS5iaW5kKHQpLHQucmVqZWN0LmJpbmQodCkpLHR9fV0pLGl9KHdlKFByb21pc2UpKSxDZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXtvKHRoaXMsZSksdGhpcy5zdG9yZT17YnlfbXNnX3R5cGU6e319fXJldHVybiBjKGUsW3trZXk6XCJoYXNcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gZSBpbiB0aGlzLnN0b3JlfX0se2tleTpcImdldFwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnN0b3JlW2VdfX0se2tleTpcImdldEJ5TXNnVHlwZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnN0b3JlLmJ5X21zZ190eXBlW2VdfX0se2tleTpcInNldFwiLHZhbHVlOmZ1bmN0aW9uKGUsdCl7dGhpcy5zdG9yZS5ieV9tc2dfdHlwZVt0Lm1zZ190eXBlXT10LHRoaXMuc3RvcmVbZV09dH19XSksZX0oKSxUZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5jYWxsYmFjaz1lfXJldHVybiBlLnByb3RvdHlwZS5jYWxsPWZ1bmN0aW9uKGUsdCl7cmV0dXJuIHQuc3Vic2NyaWJlKG5ldyBMZShlLHRoaXMuY2FsbGJhY2spKX0sZX0oKSxMZT1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQscil7dmFyIG49ZS5jYWxsKHRoaXMsdCl8fHRoaXM7cmV0dXJuIG4uYWRkKG5ldyBPKHIpKSxufXJldHVybiB2KHQsZSksdH0oaik7Y29uc3QgRGU9W1wiYmFsYW5jZVwiLFwiYnV5XCIsXCJjYXNoaWVyX3BheW1lbnRzXCIsXCJleGNoYW5nZV9yYXRlc1wiLFwicDJwX2FkdmVydF9pbmZvXCIsXCJwMnBfYWR2ZXJ0aXNlcl9jcmVhdGVcIixcInAycF9hZHZlcnRpc2VyX2luZm9cIixcInAycF9vcmRlcl9jcmVhdGVcIixcInAycF9vcmRlcl9pbmZvXCIsXCJwMnBfb3JkZXJfbGlzdFwiLFwicHJvcG9zYWxcIixcInByb3Bvc2FsX29wZW5fY29udHJhY3RcIixcInRpY2tzXCIsXCJ0aWNrc19oaXN0b3J5XCIsXCJ0cmFuc2FjdGlvblwiLFwid2Vic2l0ZV9zdGF0dXNcIl07ZnVuY3Rpb24gSWUoZSx0KXt2YXIgcj1PYmplY3Qua2V5cyhlKTtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO3QmJihuPW4uZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSkpLHIucHVzaC5hcHBseShyLG4pfXJldHVybiByfWZ1bmN0aW9uIEJlKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciByPW51bGwhPWFyZ3VtZW50c1t0XT9hcmd1bWVudHNbdF06e307dCUyP0llKE9iamVjdChyKSwhMCkuZm9yRWFjaCgoZnVuY3Rpb24odCl7ZmUoZSx0LHJbdF0pfSkpOk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzP09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMocikpOkllKE9iamVjdChyKSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCxPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHIsdCkpfSkpfXJldHVybiBlfXZhciBIZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUodCl7byh0aGlzLGUpLHRoaXMuYXBpPXQsdGhpcy5zb3VyY2VzPXt9LHRoaXMuc3Vic19pZF90b19rZXk9e30sdGhpcy5rZXlfdG9fc3Vic19pZD17fSx0aGlzLmJ1eV9rZXlfdG9fY29udHJhY3RfaWQ9e30sdGhpcy5zdWJzX3Blcl9tc2dfdHlwZT1bXSx0aGlzLnN0cmVhbXNfbGlzdD1EZX1yZXR1cm4gYyhlLFt7a2V5Olwic3Vic2NyaWJlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc291cmNlRXhpc3RzKGUpP3RoaXMuZ2V0U291cmNlKGUpOnRoaXMuY3JlYXRlTmV3U291cmNlKEJlKEJlKHt9LGUpLHt9LHtzdWJzY3JpYmU6MX0pKX19LHtrZXk6XCJnZXRTb3VyY2VcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD1OZShlKTtpZih0IGluIHRoaXMuc291cmNlcylyZXR1cm4gdGhpcy5zb3VyY2VzW3RdO2lmKGUucHJvcG9zYWxfb3Blbl9jb250cmFjdCYmZS5jb250cmFjdF9pZCl7dmFyIHI9T2JqZWN0LnZhbHVlcyh0aGlzLmJ1eV9rZXlfdG9fY29udHJhY3RfaWQpLmZpbmQoKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNvbnRyYWN0X2lkPT09ZS5jb250cmFjdF9pZH0pKTtpZihyKXJldHVybiB0aGlzLnNvdXJjZXNbci5idXlfa2V5XX19fSx7a2V5Olwic291cmNlRXhpc3RzXCIsdmFsdWU6ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuZ2V0U291cmNlKGUpfX0se2tleTpcImNyZWF0ZU5ld1NvdXJjZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0LHI9dGhpcyxuPU5lKGUpLGk9dGhpcy5hcGkuc2VuZEFuZEdldFNvdXJjZShlKS5waXBlKCh0PWZ1bmN0aW9uKCl7biBpbiByLmtleV90b19zdWJzX2lkJiZyLmZvcmdldChyLmtleV90b19zdWJzX2lkW25dKS50aGVuKChmdW5jdGlvbigpe30pLChmdW5jdGlvbigpe30pKX0sZnVuY3Rpb24oZSl7cmV0dXJuIGUubGlmdChuZXcgVGUodCkpfSksZ2UoKSk7cmV0dXJuIHRoaXMuc291cmNlc1tuXT1pLHRoaXMuc2F2ZVN1YnNQZXJNc2dUeXBlKGUsbiksaS5waXBlKHRlKCkpLnRvUHJvbWlzZSgpLnRoZW4oKGZ1bmN0aW9uKHQpe2UuYnV5JiYoci5idXlfa2V5X3RvX2NvbnRyYWN0X2lkW25dPXtjb250cmFjdF9pZDp0LmJ1eS5jb250cmFjdF9pZCxidXlfa2V5Om59KSxyLnNhdmVTdWJzSWQobix0KX0pLHRoaXMucmVtb3ZlS2V5T25FcnJvcihuKSksaX19LHtrZXk6XCJmb3JnZXRcIix2YWx1ZTpmdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5jb21wbGV0ZVN1YnNCeUlkcyhlKSx0aGlzLmFwaS5zZW5kKHtmb3JnZXQ6ZX0pfX0se2tleTpcImZvcmdldEFsbFwiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMsdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3JldHVybiByLmZvckVhY2goKGZ1bmN0aW9uKHQpeyhlLnN1YnNfcGVyX21zZ190eXBlW3RdfHxbXSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7cmV0dXJuIGUuY29tcGxldGVTdWJzQnlLZXkodCl9KSksZS5zdWJzX3Blcl9tc2dfdHlwZVt0XT1bXX0pKSx0aGlzLmFwaS5zZW5kKHtmb3JnZXRfYWxsOnJ9KX19LHtrZXk6XCJjb21wbGV0ZVN1YnNCeUlkc1wiLHZhbHVlOmZ1bmN0aW9uKCl7Zm9yKHZhciBlPXRoaXMsdD1hcmd1bWVudHMubGVuZ3RoLHI9bmV3IEFycmF5KHQpLG49MDtuPHQ7bisrKXJbbl09YXJndW1lbnRzW25dO3IuZm9yRWFjaCgoZnVuY3Rpb24odCl7dmFyIHI9ZS5zdWJzX2lkX3RvX2tleVt0XTtkZWxldGUgZS5zdWJzX2lkX3RvX2tleVt0XSxlLmNvbXBsZXRlU3Vic0J5S2V5KHIpfSkpfX0se2tleTpcInNhdmVTdWJzSWRcIix2YWx1ZTpmdW5jdGlvbihlLHQpe3ZhciByPXQuc3Vic2NyaXB0aW9uO2lmKCFyKXJldHVybiB0aGlzLmNvbXBsZXRlU3Vic0J5S2V5KGUpO3ZhciBuPXIuaWQ7biBpbiB0aGlzLnN1YnNfaWRfdG9fa2V5fHwodGhpcy5zdWJzX2lkX3RvX2tleVtuXT1lLHRoaXMua2V5X3RvX3N1YnNfaWRbZV09bil9fSx7a2V5Olwic2F2ZVN1YnNQZXJNc2dUeXBlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmdldE1zZ1R5cGUoZSk7cj8odGhpcy5zdWJzX3Blcl9tc2dfdHlwZVtyXT10aGlzLnN1YnNfcGVyX21zZ190eXBlW3JdfHxbXSx0aGlzLnN1YnNfcGVyX21zZ190eXBlW3JdLnB1c2godCkpOnRoaXMuYXBpLnNhbml0eUVycm9ycy5uZXh0KG5ldyB4ZShcIlN1YnNjcmlwdGlvbiB0eXBlIGlzIG5vdCBmb3VuZCBpbiBkZXJpdi1hcGlcIikpfX0se2tleTpcInJlbW92ZUtleU9uRXJyb3JcIix2YWx1ZTpmdW5jdGlvbihlKXt2YXIgdD10aGlzO3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0LmNvbXBsZXRlU3Vic0J5S2V5KGUpfX19LHtrZXk6XCJjb21wbGV0ZVN1YnNCeUtleVwiLHZhbHVlOmZ1bmN0aW9uKGUpe2lmKGUmJnRoaXMuc291cmNlc1tlXSl7dmFyIHQ9dGhpcy5zb3VyY2VzW2VdO2RlbGV0ZSB0aGlzLnNvdXJjZXNbZV07dmFyIHI9dGhpcy5rZXlfdG9fc3Vic19pZFtlXTtkZWxldGUgdGhpcy5zdWJzX2lkX3RvX2tleVtyXSxkZWxldGUgdGhpcy5rZXlfdG9fc3Vic19pZFtlXSxkZWxldGUgdGhpcy5idXlfa2V5X3RvX2NvbnRyYWN0X2lkW2VdLHQuY29tcGxldGUoKX19fSx7a2V5OlwiZ2V0TXNnVHlwZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLnN0cmVhbXNfbGlzdC5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdCBpbiBlfSkpfX1dKSxlfSgpO2Z1bmN0aW9uIE5lKGUpe3JldHVybiBFZShlKX12YXIgRmU9ZnVuY3Rpb24oZSl7ZChmLGUpO3ZhciB0LHIsbixpLHUscCxsPSh1PWYscD1mdW5jdGlvbigpe2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBSZWZsZWN0fHwhUmVmbGVjdC5jb25zdHJ1Y3QpcmV0dXJuITE7aWYoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSlyZXR1cm4hMTtpZihcImZ1bmN0aW9uXCI9PXR5cGVvZiBQcm94eSlyZXR1cm4hMDt0cnl7cmV0dXJuIEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLFtdLChmdW5jdGlvbigpe30pKSksITB9Y2F0Y2goZSl7cmV0dXJuITF9fSgpLGZ1bmN0aW9uKCl7dmFyIGUsdD15KHUpO2lmKHApe3ZhciByPXkodGhpcykuY29uc3RydWN0b3I7ZT1SZWZsZWN0LmNvbnN0cnVjdCh0LGFyZ3VtZW50cyxyKX1lbHNlIGU9dC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7cmV0dXJuIGgodGhpcyxlKX0pO2Z1bmN0aW9uIGYoKXt2YXIgZSx0PWFyZ3VtZW50cy5sZW5ndGg+MCYmdm9pZCAwIT09YXJndW1lbnRzWzBdP2FyZ3VtZW50c1swXTp7fSxyPXQuc3RvcmFnZSxuPXQuYXBwX2lkLGk9dC5jb25uZWN0aW9uLHM9dC5jYWNoZSx1PXZvaWQgMD09PXM/bmV3IENlOnMsYz10LmVuZHBvaW50LHA9dm9pZCAwPT09Yz9cIndzLmJpbmFyeXdzLmNvbVwiOmMsZD10LmxhbmcsaD12b2lkIDA9PT1kP1wiRU5cIjpkLHk9dC5icmFuZCxnPXZvaWQgMD09PXk/XCJcIjp5LF89dC5taWRkbGV3YXJlLG09dm9pZCAwPT09Xz97fTpfO2lmKG8odGhpcyxmKSwoZT1sLmNhbGwodGhpcykpLmV2ZW50cz1uZXcgb2UsaSllLmNvbm5lY3Rpb249aTtlbHNle2lmKCFuKXRocm93IEVycm9yKFwiQW4gYXBwX2lkIGlzIHJlcXVpcmVkIHRvIGNvbm5lY3QgdG8gdGhlIEFQSVwiKTtlLnNob3VsZFJlY29ubmVjdD0hMCxlLmNvbm5lY3Rpb25BcmdzPXthcHBfaWQ6bixlbmRwb2ludFVybDpVZShwKSxsYW5nOmgudG9VcHBlckNhc2UoKSxicmFuZDpnLnRvTG93ZXJDYXNlKCl9LGUuY29ubmVjdCgpfXJldHVybiBlLmxhbmc9aCxlLnJlcUlkPTAsZS5jb25uZWN0ZWQ9bmV3IFBlLGUuc2FuaXR5RXJyb3JzPW5ldyBvZSxlLm1pZGRsZXdhcmU9bSxlLnBlbmRpbmdSZXF1ZXN0cz17fSxlLmV4cGVjdF9yZXNwb25zZV90eXBlcz17fSxlLnN1YnNjcmlwdGlvbl9tYW5hZ2VyPW5ldyBIZShhKGUpKSxlLnJlY29ubmVjdF90aW1lb3V0PSExLGUua2VlcF9hbGl2ZV9pbnRlcnZhbD0hMSxyJiYoZS5zdG9yYWdlPW5ldyBqZShhKGUpLHIpKSxlLmNhY2hlPW5ldyBqZShlLnN0b3JhZ2U/ZS5zdG9yYWdlOmEoZSksdSksZS5jb25uZWN0aW9uSGFuZGxlcnMoKSxlfXJldHVybiBjKGYsW3trZXk6XCJjb25uZWN0aW9uSGFuZGxlcnNcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuY29ubmVjdGlvbi5vbm9wZW49dGhpcy5vcGVuSGFuZGxlci5iaW5kKHRoaXMpLHRoaXMuY29ubmVjdGlvbi5vbmNsb3NlPXRoaXMuY2xvc2VIYW5kbGVyLmJpbmQodGhpcyksdGhpcy5jb25uZWN0aW9uLm9ubWVzc2FnZT10aGlzLm1lc3NhZ2VIYW5kbGVyLmJpbmQodGhpcyksdGhpcy5jb25uZWN0aW9uLm9uZXJyb3I9dGhpcy5lcnJvckhhbmRsZXIuYmluZCh0aGlzKX19LHtrZXk6XCJjb25uZWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXtpZighdGhpcy5jb25uZWN0aW9uQXJncyl0aHJvdyBuZXcgUmUoXCJDb25uZWN0aW9uIGFyZ3VtZW50cyBhcmUgcmVxdWlyZWQgdG8gY3JlYXRlIGEgY29ubmVjdGlvbi5cIik7dGhpcy5ldmVudHMubmV4dCh7bmFtZTpcImNvbm5lY3RcIn0pO3ZhciBlPXRoaXMuY29ubmVjdGlvbkFyZ3MsdD1lLmVuZHBvaW50VXJsLHI9ZS5sYW5nLG49ZS5hcHBfaWQsaT1lLmJyYW5kO3RoaXMuY29ubmVjdGlvbj1uZXcgV2ViU29ja2V0KFwiXCIuY29uY2F0KHQudG9TdHJpbmcoKSxcIndlYnNvY2tldHMvdjM/YXBwX2lkPVwiKS5jb25jYXQobixcIiZsPVwiKS5jb25jYXQocixcIiZicmFuZD1cIikuY29uY2F0KGkpKX19LHtrZXk6XCJkaXNjb25uZWN0XCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnNob3VsZFJlY29ubmVjdD0hMSx0aGlzLmNvbm5lY3Rpb24uY2xvc2UoKX19LHtrZXk6XCJpc0Nvbm5lY3Rpb25DbG9zZWRcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiAyPT09dGhpcy5jb25uZWN0aW9uLnJlYWR5U3RhdGV8fDM9PT10aGlzLmNvbm5lY3Rpb24ucmVhZHlTdGF0ZX19LHtrZXk6XCJzZW5kQW5kR2V0U291cmNlXCIsdmFsdWU6ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcyxyPW5ldyBvZTtyZXR1cm4gZS5yZXFfaWQ9ZS5yZXFfaWR8fCsrdGhpcy5yZXFJZCx0aGlzLnBlbmRpbmdSZXF1ZXN0c1tlLnJlcV9pZF09cix0aGlzLmNvbm5lY3RlZC50aGVuKChmdW5jdGlvbigpe3QuaXNDb25uZWN0aW9uQ2xvc2VkKCl8fHQuY29ubmVjdGlvbi5zZW5kKEpTT04uc3RyaW5naWZ5KGUpKX0pKS5jYXRjaCgoZnVuY3Rpb24oZSl7cmV0dXJuIHIuZXJyb3IoZSl9KSkscn19LHtrZXk6XCJzZW5kXCIsdmFsdWU6KGk9cyhnKCkubWFyaygoZnVuY3Rpb24gZSgpe3ZhciB0LHIsbixpLHMsbyx1LGMsYT10aGlzLHA9YXJndW1lbnRzO3JldHVybiBnKCkud3JhcCgoZnVuY3Rpb24oZSl7Zm9yKDs7KXN3aXRjaChlLnByZXY9ZS5uZXh0KXtjYXNlIDA6Zm9yKHQ9cC5sZW5ndGgscj1uZXcgQXJyYXkodCksbj0wO248dDtuKyspcltuXT1wW25dO2lmKCEoaT10aGlzLmNhbGxNaWRkbGV3YXJlKFwic2VuZFdpbGxCZUNhbGxlZFwiLHthcmdzOnJ9KSkpe2UubmV4dD00O2JyZWFrfXJldHVybiBlLmFicnVwdChcInJldHVyblwiLGkpO2Nhc2UgNDppZihzPXJbMF0sbz10aGlzLmNhbGxNaWRkbGV3YXJlKFwicmVxdWVzdERhdGFUcmFuc2Zvcm1lclwiLHMpfHxzLHRoaXMuZXZlbnRzLm5leHQoe25hbWU6XCJzZW5kXCIsZGF0YTpvfSksdGhpcy5kZWxldGVGcm9tRXhwZWN0UmVzcG9uc2UobyksKHU9dGhpcy5zZW5kQW5kR2V0U291cmNlKG8pLnBpcGUodGUoKSkudG9Qcm9taXNlKCkpLnRoZW4oKGZ1bmN0aW9uKGUpe2EuY2FjaGUuc2V0KG8sZSksYS5zdG9yYWdlJiZhLnN0b3JhZ2Uuc2V0KG8sZSl9KSwoZnVuY3Rpb24oKXt9KSksIShjPXRoaXMuY2FsbE1pZGRsZXdhcmUoXCJzZW5kSXNDYWxsZWRcIix7cmVzcG9uc2VfcHJvbWlzZTp1LGFyZ3M6cn0pKSl7ZS5uZXh0PTEzO2JyZWFrfXJldHVybiBlLmFicnVwdChcInJldHVyblwiLGMpO2Nhc2UgMTM6cmV0dXJuIGUuYWJydXB0KFwicmV0dXJuXCIsdSk7Y2FzZSAxNDpjYXNlXCJlbmRcIjpyZXR1cm4gZS5zdG9wKCl9fSksZSx0aGlzKX0pKSksZnVuY3Rpb24oKXtyZXR1cm4gaS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcImNhbGxNaWRkbGV3YXJlXCIsdmFsdWU6ZnVuY3Rpb24oZSx0KXtpZihlIGluIHRoaXMubWlkZGxld2FyZSlyZXR1cm4gdGhpcy5taWRkbGV3YXJlW2VdKHQpfX0se2tleTpcInN1YnNjcmliZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuY2FsbE1pZGRsZXdhcmUoXCJyZXF1ZXN0RGF0YVRyYW5zZm9ybWVyXCIsZSl8fGU7cmV0dXJuIHRoaXMuc3Vic2NyaXB0aW9uX21hbmFnZXIuc3Vic2NyaWJlKHQpfX0se2tleTpcImZvcmdldFwiLHZhbHVlOihuPXMoZygpLm1hcmsoKGZ1bmN0aW9uIGUodCl7cmV0dXJuIGcoKS53cmFwKChmdW5jdGlvbihlKXtmb3IoOzspc3dpdGNoKGUucHJldj1lLm5leHQpe2Nhc2UgMDpyZXR1cm4gZS5hYnJ1cHQoXCJyZXR1cm5cIix0aGlzLnN1YnNjcmlwdGlvbl9tYW5hZ2VyLmZvcmdldCh0KSk7Y2FzZSAxOmNhc2VcImVuZFwiOnJldHVybiBlLnN0b3AoKX19KSxlLHRoaXMpfSkpKSxmdW5jdGlvbihlKXtyZXR1cm4gbi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcImZvcmdldEFsbFwiLHZhbHVlOihyPXMoZygpLm1hcmsoKGZ1bmN0aW9uIGUoKXt2YXIgdCxyPWFyZ3VtZW50cztyZXR1cm4gZygpLndyYXAoKGZ1bmN0aW9uKGUpe2Zvcig7Oylzd2l0Y2goZS5wcmV2PWUubmV4dCl7Y2FzZSAwOnJldHVybiBlLmFicnVwdChcInJldHVyblwiLCh0PXRoaXMuc3Vic2NyaXB0aW9uX21hbmFnZXIpLmZvcmdldEFsbC5hcHBseSh0LHIpKTtjYXNlIDE6Y2FzZVwiZW5kXCI6cmV0dXJuIGUuc3RvcCgpfX0pLGUsdGhpcyl9KSkpLGZ1bmN0aW9uKCl7cmV0dXJuIHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSl9LHtrZXk6XCJrZWVwQWxpdmVQaW5nXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnBpbmcoe3Bpbmc6MX0pLHRoaXMucmVjb25uZWN0X3RpbWVvdXQ9c2V0VGltZW91dCh0aGlzLnJlY29ubmVjdC5iaW5kKHRoaXMpLDVlMyl9fSx7a2V5OlwicG9uZ1wiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5yZWNvbm5lY3RfdGltZW91dCYmKGNsZWFyVGltZW91dCh0aGlzLnJlY29ubmVjdF90aW1lb3V0KSx0aGlzLnJlY29ubmVjdF90aW1lb3V0PSExKX19LHtrZXk6XCJvcGVuSGFuZGxlclwiLHZhbHVlOmZ1bmN0aW9uKCl7dGhpcy5ldmVudHMubmV4dCh7bmFtZTpcIm9wZW5cIn0pLHRoaXMuc2hvdWxkUmVjb25uZWN0JiYodGhpcy5rZWVwX2FsaXZlX2ludGVydmFsPXNldEludGVydmFsKHRoaXMua2VlcEFsaXZlUGluZy5iaW5kKHRoaXMpLDNlNCkpLDE9PT10aGlzLmNvbm5lY3Rpb24ucmVhZHlTdGF0ZT90aGlzLmNvbm5lY3RlZC5yZXNvbHZlKCk6c2V0VGltZW91dCh0aGlzLm9wZW5IYW5kbGVyLmJpbmQodGhpcyksNTApfX0se2tleTpcIm1lc3NhZ2VIYW5kbGVyXCIsdmFsdWU6ZnVuY3Rpb24oZSl7aWYoZS5kYXRhKXt2YXIgdD1KU09OLnBhcnNlKGUuZGF0YSk7dGhpcy5yZWNvbm5lY3RfdGltZW91dCYmXCJwb25nXCI9PT10LnBpbmcmJnRoaXMucG9uZygpLHRoaXMuZXZlbnRzLm5leHQoe25hbWU6XCJtZXNzYWdlXCIsZGF0YTp0fSk7dmFyIHI9dC5yZXFfaWQ7aWYociBpbiB0aGlzLnBlbmRpbmdSZXF1ZXN0cyl7dmFyIG49dGhpcy5leHBlY3RfcmVzcG9uc2VfdHlwZXNbdC5tc2dfdHlwZV07biYmbi5pc1BlbmRpbmcoKSYmbi5yZXNvbHZlKHQpO3ZhciBpPXQuZWNob19yZXEscz1pJiZpLnByb3Bvc2FsX29wZW5fY29udHJhY3QmJiFpLmNvbnRyYWN0X2lkO2lmKHQuZXJyb3ImJiFzKXRoaXMucGVuZGluZ1JlcXVlc3RzW3JdLmVycm9yKHQpO2Vsc2UgaWYodGhpcy5wZW5kaW5nUmVxdWVzdHNbcl0uaXNTdG9wcGVkJiZ0LnN1YnNjcmlwdGlvbil7dmFyIG89dC5zdWJzY3JpcHRpb24uaWQ7dGhpcy5mb3JnZXQobyl9ZWxzZSB0aGlzLnBlbmRpbmdSZXF1ZXN0c1tyXS5uZXh0KHQpfWVsc2UgdGhpcy5zYW5pdHlFcnJvcnMubmV4dChuZXcgeGUoXCJFeHRyYSByZXNwb25zZVwiKSl9ZWxzZSB0aGlzLnNhbml0eUVycm9ycy5uZXh0KG5ldyB4ZShcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoaWxlIHJlY2VpdmluZyB0aGUgcmVzcG9uc2UgZnJvbSBBUEkuXCIpKX19LHtrZXk6XCJjbG9zZUhhbmRsZXJcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuZXZlbnRzLm5leHQoe25hbWU6XCJjbG9zZVwifSksdGhpcy5zaG91bGRSZWNvbm5lY3QmJih0aGlzLmV2ZW50cy5uZXh0KHtuYW1lOlwicmVjb25uZWN0aW5nXCJ9KSx0aGlzLnJlY29ubmVjdCgpKX19LHtrZXk6XCJyZWNvbm5lY3RcIix2YWx1ZTpmdW5jdGlvbigpe3RoaXMuc2hvdWxkUmVjb25uZWN0JiYodGhpcy5rZWVwX2FsaXZlX2ludGVydmFsJiYoY2xlYXJJbnRlcnZhbCh0aGlzLmtlZXBfYWxpdmVfaW50ZXJ2YWwpLHRoaXMua2VlcF9hbGl2ZV9pbnRlcnZhbD0hMSksdGhpcy5wb25nKCksdGhpcy5jb25uZWN0KCksdGhpcy5jb25uZWN0aW9uSGFuZGxlcnMoKSl9fSx7a2V5OlwiZXJyb3JIYW5kbGVyXCIsdmFsdWU6ZnVuY3Rpb24oKXt0aGlzLnNhbml0eUVycm9ycy5uZXh0KG5ldyB4ZShcIlNvbWV0aGluZyB3ZW50IHdyb25nIHdoaWxlIHJlY2VpdmluZyB0aGUgcmVzcG9uc2UgZnJvbSBBUEkuXCIpKX19LHtrZXk6XCJvbkNsb3NlXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ldmVudHMucGlwZShDKChmdW5jdGlvbihlKXtyZXR1cm5cImNsb3NlXCI9PT1lLm5hbWV9KSksZ2UoKSl9fSx7a2V5Olwib25PcGVuXCIsdmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ldmVudHMucGlwZShDKChmdW5jdGlvbihlKXtyZXR1cm5cIm9wZW5cIj09PWUubmFtZX0pKSxnZSgpKX19LHtrZXk6XCJvbk1lc3NhZ2VcIix2YWx1ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLmV2ZW50cy5waXBlKEMoKGZ1bmN0aW9uKGUpe3JldHVyblwibWVzc2FnZVwiPT09ZS5uYW1lfSkpLGdlKCkpfX0se2tleTpcImV4cGVjdFJlc3BvbnNlXCIsdmFsdWU6KHQ9cyhnKCkubWFyaygoZnVuY3Rpb24gZSgpe3ZhciB0LHIsbixpPXRoaXMscz1hcmd1bWVudHM7cmV0dXJuIGcoKS53cmFwKChmdW5jdGlvbihlKXtmb3IoOzspc3dpdGNoKGUucHJldj1lLm5leHQpe2Nhc2UgMDpmb3IodD1zLmxlbmd0aCxyPW5ldyBBcnJheSh0KSxuPTA7bjx0O24rKylyW25dPXNbbl07aWYoci5mb3JFYWNoKChmdW5jdGlvbihlKXtlIGluIGkuZXhwZWN0X3Jlc3BvbnNlX3R5cGVzfHwoaS5leHBlY3RfcmVzcG9uc2VfdHlwZXNbZV09VmUoaS5jYWNoZS5nZXRCeU1zZ1R5cGUoZSkudGhlbigoZnVuY3Rpb24odCl7cmV0dXJuIXQmJmkuc3RvcmFnZT9pLnN0b3JhZ2UuZ2V0QnlNc2dUeXBlKGUpOnR9KSkpKX0pKSwxIT09ci5sZW5ndGgpe2UubmV4dD00O2JyZWFrfXJldHVybiBlLmFicnVwdChcInJldHVyblwiLHRoaXMuZXhwZWN0X3Jlc3BvbnNlX3R5cGVzW3JbMF1dKTtjYXNlIDQ6cmV0dXJuIGUuYWJydXB0KFwicmV0dXJuXCIsUHJvbWlzZS5hbGwoci5tYXAoKGZ1bmN0aW9uKGUpe3JldHVybiBpLmV4cGVjdF9yZXNwb25zZV90eXBlc1tlXX0pKSkpO2Nhc2UgNTpjYXNlXCJlbmRcIjpyZXR1cm4gZS5zdG9wKCl9fSksZSx0aGlzKX0pKSksZnVuY3Rpb24oKXtyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9KX0se2tleTpcImRlbGV0ZUZyb21FeHBlY3RSZXNwb25zZVwiLHZhbHVlOmZ1bmN0aW9uKGUpe3ZhciB0PU9iamVjdC5rZXlzKHRoaXMuZXhwZWN0X3Jlc3BvbnNlX3R5cGVzKS5maW5kKChmdW5jdGlvbih0KXtyZXR1cm4gdCBpbiBlfSkpO3RoaXMuZXhwZWN0X3Jlc3BvbnNlX3R5cGVzW3RdJiYhdGhpcy5leHBlY3RfcmVzcG9uc2VfdHlwZXNbdF0uaXNQZW5kaW5nKCkmJmRlbGV0ZSB0aGlzLmV4cGVjdF9yZXNwb25zZV90eXBlc1t0XX19XSksZn0oX2UpO2Z1bmN0aW9uIFVlKHIpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiByKXRocm93IG5ldyBSZShcIkVuZHBvaW50IG11c3QgYmUgYSBzdHJpbmcsIHBhc3NlZDogXCIuY29uY2F0KHQocikpKTt2YXIgbixpLHM7dHJ5e3ZhciBvPShpPXIubWF0Y2goLygoPzpcXHcqOlxcL1xcLykqKSguKikvKSxzPTMsZnVuY3Rpb24oZSl7aWYoQXJyYXkuaXNBcnJheShlKSlyZXR1cm4gZX0oaSl8fGZ1bmN0aW9uKGUsdCl7dmFyIHI9bnVsbD09ZT9udWxsOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBTeW1ib2wmJmVbU3ltYm9sLml0ZXJhdG9yXXx8ZVtcIkBAaXRlcmF0b3JcIl07aWYobnVsbCE9cil7dmFyIG4saSxzPVtdLG89ITAsdT0hMTt0cnl7Zm9yKHI9ci5jYWxsKGUpOyEobz0obj1yLm5leHQoKSkuZG9uZSkmJihzLnB1c2gobi52YWx1ZSksIXR8fHMubGVuZ3RoIT09dCk7bz0hMCk7fWNhdGNoKGUpe3U9ITAsaT1lfWZpbmFsbHl7dHJ5e298fG51bGw9PXIucmV0dXJufHxyLnJldHVybigpfWZpbmFsbHl7aWYodSl0aHJvdyBpfX1yZXR1cm4gc319KGkscyl8fGZ1bmN0aW9uKHQscil7aWYodCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpcmV0dXJuIGUodCxyKTt2YXIgbj1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkuc2xpY2UoOCwtMSk7cmV0dXJuXCJPYmplY3RcIj09PW4mJnQuY29uc3RydWN0b3ImJihuPXQuY29uc3RydWN0b3IubmFtZSksXCJNYXBcIj09PW58fFwiU2V0XCI9PT1uP0FycmF5LmZyb20odCk6XCJBcmd1bWVudHNcIj09PW58fC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pP2UodCxyKTp2b2lkIDB9fShpLHMpfHxmdW5jdGlvbigpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIil9KCkpLHU9KG9bMF0sb1sxXSksYz1vWzJdO249bmV3IFVSTChcIlwiLmNvbmNhdChcIndzOi8vXCI9PT11P3U6XCJ3c3M6Ly9cIikuY29uY2F0KGMpKX1jYXRjaChlKXt0aHJvdyBuZXcgUmUoXCJJbnZhbGlkIFVSTDogXCIuY29uY2F0KHIpKX1yZXR1cm4gbn1mdW5jdGlvbiBWZShlKXtyZXR1cm4gUGUud3JhcChlLnRoZW4oKGZ1bmN0aW9uKGUpe3JldHVybiBlfHxuZXcgUGV9KSkpfX0pKCksbi5kZWZhdWx0fSkoKX0pKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\n");

/***/ }),

/***/ "./Components/api-token/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Components_api_token)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ../../../node_modules/formik/node_modules/deepmerge/dist/es.js\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\n/* harmony default export */ const es = (deepmerge_1);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_freeGlobal.js\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ const _freeGlobal = (freeGlobal);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_root.js\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\n/* harmony default export */ const _root = (root);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Symbol.js\n\n\n/** Built-in value references. */\nvar _Symbol_Symbol = _root.Symbol;\n\n/* harmony default export */ const _Symbol = (_Symbol_Symbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getRawTag.js\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _getRawTag = (getRawTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_objectToString.js\n/** Used for built-in method references. */\nvar _objectToString_objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar _objectToString_nativeObjectToString = _objectToString_objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return _objectToString_nativeObjectToString.call(value);\n}\n\n/* harmony default export */ const _objectToString = (objectToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetTag.js\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar _baseGetTag_symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\n/* harmony default export */ const _baseGetTag = (baseGetTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_overArg.js\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* harmony default export */ const _overArg = (overArg);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getPrototype.js\n\n\n/** Built-in value references. */\nvar getPrototype = _overArg(Object.getPrototypeOf, Object);\n\n/* harmony default export */ const _getPrototype = (getPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObjectLike.js\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ const lodash_es_isObjectLike = (isObjectLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isPlainObject.js\n\n\n\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    isPlainObject_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar isPlainObject_hasOwnProperty = isPlainObject_objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!lodash_es_isObjectLike(value) || _baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = _getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/* harmony default export */ const lodash_es_isPlainObject = (isPlainObject);\n\n// EXTERNAL MODULE: ../../../node_modules/react-fast-compare/index.js\nvar react_fast_compare = __webpack_require__(\"../../../node_modules/react-fast-compare/index.js\");\nvar react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);\n;// CONCATENATED MODULE: ../../../node_modules/tiny-warning/dist/tiny-warning.esm.js\nvar isProduction = \"production\" === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/* harmony default export */ const tiny_warning_esm = (warning);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheClear.js\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/* harmony default export */ const _listCacheClear = (listCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/eq.js\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/* harmony default export */ const lodash_es_eq = (eq);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assocIndexOf.js\n\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (lodash_es_eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/* harmony default export */ const _assocIndexOf = (assocIndexOf);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheDelete.js\n\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/* harmony default export */ const _listCacheDelete = (listCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheGet.js\n\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/* harmony default export */ const _listCacheGet = (listCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheHas.js\n\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\n/* harmony default export */ const _listCacheHas = (listCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheSet.js\n\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n/* harmony default export */ const _listCacheSet = (listCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_ListCache.js\n\n\n\n\n\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\n/* harmony default export */ const _ListCache = (ListCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackClear.js\n\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new _ListCache;\n  this.size = 0;\n}\n\n/* harmony default export */ const _stackClear = (stackClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackDelete.js\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/* harmony default export */ const _stackDelete = (stackDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackGet.js\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/* harmony default export */ const _stackGet = (stackGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackHas.js\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/* harmony default export */ const _stackHas = (stackHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObject.js\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* harmony default export */ const lodash_es_isObject = (isObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isFunction.js\n\n\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!lodash_es_isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/* harmony default export */ const lodash_es_isFunction = (isFunction);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_coreJsData.js\n\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root[\"__core-js_shared__\"];\n\n/* harmony default export */ const _coreJsData = (coreJsData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isMasked.js\n\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/* harmony default export */ const _isMasked = (isMasked);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toSource.js\n/** Used for built-in method references. */\nvar _toSource_funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _toSource_funcToString = _toSource_funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return _toSource_funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/* harmony default export */ const _toSource = (toSource);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsNative.js\n\n\n\n\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar _baseIsNative_funcProto = Function.prototype,\n    _baseIsNative_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _baseIsNative_funcToString = _baseIsNative_funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar _baseIsNative_hasOwnProperty = _baseIsNative_objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!lodash_es_isObject(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\n/* harmony default export */ const _baseIsNative = (baseIsNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getValue.js\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/* harmony default export */ const _getValue = (getValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getNative.js\n\n\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\n/* harmony default export */ const _getNative = (getNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Map.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Map_Map = _getNative(_root, 'Map');\n\n/* harmony default export */ const _Map = (_Map_Map);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeCreate.js\n\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\n/* harmony default export */ const _nativeCreate = (nativeCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashClear.js\n\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/* harmony default export */ const _hashClear = (hashClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashDelete.js\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _hashDelete = (hashDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashGet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar _hashGet_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/* harmony default export */ const _hashGet = (hashGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashHas.js\n\n\n/** Used for built-in method references. */\nvar _hashHas_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);\n}\n\n/* harmony default export */ const _hashHas = (hashHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashSet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;\n  return this;\n}\n\n/* harmony default export */ const _hashSet = (hashSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Hash.js\n\n\n\n\n\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\n/* harmony default export */ const _Hash = (Hash);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheClear.js\n\n\n\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\n/* harmony default export */ const _mapCacheClear = (mapCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isKeyable.js\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/* harmony default export */ const _isKeyable = (isKeyable);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getMapData.js\n\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/* harmony default export */ const _getMapData = (getMapData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheDelete.js\n\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _mapCacheDelete = (mapCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheGet.js\n\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\n/* harmony default export */ const _mapCacheGet = (mapCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheHas.js\n\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\n/* harmony default export */ const _mapCacheHas = (mapCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheSet.js\n\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n/* harmony default export */ const _mapCacheSet = (mapCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_MapCache.js\n\n\n\n\n\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\n/* harmony default export */ const _MapCache = (MapCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackSet.js\n\n\n\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof _ListCache) {\n    var pairs = data.__data__;\n    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new _MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n/* harmony default export */ const _stackSet = (stackSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Stack.js\n\n\n\n\n\n\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new _ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = _stackClear;\nStack.prototype['delete'] = _stackDelete;\nStack.prototype.get = _stackGet;\nStack.prototype.has = _stackHas;\nStack.prototype.set = _stackSet;\n\n/* harmony default export */ const _Stack = (Stack);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayEach.js\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayEach = (arrayEach);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_defineProperty.js\n\n\nvar defineProperty = (function() {\n  try {\n    var func = _getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _defineProperty = (defineProperty);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignValue.js\n\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && _defineProperty) {\n    _defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/* harmony default export */ const _baseAssignValue = (baseAssignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assignValue.js\n\n\n\n/** Used for built-in method references. */\nvar _assignValue_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\n/* harmony default export */ const _assignValue = (assignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyObject.js\n\n\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      _baseAssignValue(object, key, newValue);\n    } else {\n      _assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/* harmony default export */ const _copyObject = (copyObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseTimes.js\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseTimes = (baseTimes);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsArguments.js\n\n\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return lodash_es_isObjectLike(value) && _baseGetTag(value) == argsTag;\n}\n\n/* harmony default export */ const _baseIsArguments = (baseIsArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArguments.js\n\n\n\n/** Used for built-in method references. */\nvar isArguments_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {\n  return lodash_es_isObjectLike(value) && isArguments_hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/* harmony default export */ const lodash_es_isArguments = (isArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArray.js\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/* harmony default export */ const lodash_es_isArray = (isArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubFalse.js\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/* harmony default export */ const lodash_es_stubFalse = (stubFalse);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isBuffer.js\n\n\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || lodash_es_stubFalse;\n\n/* harmony default export */ const lodash_es_isBuffer = (isBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isIndex.js\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/* harmony default export */ const _isIndex = (isIndex);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isLength.js\n/** Used as references for various `Number` constants. */\nvar isLength_MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= isLength_MAX_SAFE_INTEGER;\n}\n\n/* harmony default export */ const lodash_es_isLength = (isLength);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsTypedArray.js\n\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsTypedArray_argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    _baseIsTypedArray_funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    _baseIsTypedArray_objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[_baseIsTypedArray_objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return lodash_es_isObjectLike(value) &&\n    lodash_es_isLength(value.length) && !!typedArrayTags[_baseGetTag(value)];\n}\n\n/* harmony default export */ const _baseIsTypedArray = (baseIsTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseUnary.js\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/* harmony default export */ const _baseUnary = (baseUnary);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nodeUtil.js\n\n\n/** Detect free variable `exports`. */\nvar _nodeUtil_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _nodeUtil_freeModule = _nodeUtil_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _nodeUtil_moduleExports = _nodeUtil_freeModule && _nodeUtil_freeModule.exports === _nodeUtil_freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = _nodeUtil_moduleExports && _freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = _nodeUtil_freeModule && _nodeUtil_freeModule.require && _nodeUtil_freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _nodeUtil = (nodeUtil);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isTypedArray.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;\n\n/* harmony default export */ const lodash_es_isTypedArray = (isTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayLikeKeys.js\n\n\n\n\n\n\n\n/** Used for built-in method references. */\nvar _arrayLikeKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = lodash_es_isArray(value),\n      isArg = !isArr && lodash_es_isArguments(value),\n      isBuff = !isArr && !isArg && lodash_es_isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? _baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           _isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayLikeKeys = (arrayLikeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isPrototype.js\n/** Used for built-in method references. */\nvar _isPrototype_objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || _isPrototype_objectProto;\n\n  return value === proto;\n}\n\n/* harmony default export */ const _isPrototype = (isPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeys.js\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = _overArg(Object.keys, Object);\n\n/* harmony default export */ const _nativeKeys = (nativeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeys.js\n\n\n\n/** Used for built-in method references. */\nvar _baseKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!_isPrototype(object)) {\n    return _nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeys = (baseKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArrayLike.js\n\n\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);\n}\n\n/* harmony default export */ const lodash_es_isArrayLike = (isArrayLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keys.js\n\n\n\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);\n}\n\n/* harmony default export */ const lodash_es_keys = (keys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssign.js\n\n\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && _copyObject(source, lodash_es_keys(source), object);\n}\n\n/* harmony default export */ const _baseAssign = (baseAssign);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeysIn.js\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _nativeKeysIn = (nativeKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeysIn.js\n\n\n\n\n/** Used for built-in method references. */\nvar _baseKeysIn_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!lodash_es_isObject(object)) {\n    return _nativeKeysIn(object);\n  }\n  var isProto = _isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeysIn = (baseKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keysIn.js\n\n\n\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);\n}\n\n/* harmony default export */ const lodash_es_keysIn = (keysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignIn.js\n\n\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && _copyObject(source, lodash_es_keysIn(source), object);\n}\n\n/* harmony default export */ const _baseAssignIn = (baseAssignIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneBuffer.js\n\n\n/** Detect free variable `exports`. */\nvar _cloneBuffer_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _cloneBuffer_freeModule = _cloneBuffer_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _cloneBuffer_moduleExports = _cloneBuffer_freeModule && _cloneBuffer_freeModule.exports === _cloneBuffer_freeExports;\n\n/** Built-in value references. */\nvar _cloneBuffer_Buffer = _cloneBuffer_moduleExports ? _root.Buffer : undefined,\n    allocUnsafe = _cloneBuffer_Buffer ? _cloneBuffer_Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/* harmony default export */ const _cloneBuffer = (cloneBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyArray.js\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _copyArray = (copyArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayFilter.js\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayFilter = (arrayFilter);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubArray.js\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/* harmony default export */ const lodash_es_stubArray = (stubArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbols.js\n\n\n\n/** Used for built-in method references. */\nvar _getSymbols_objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return _arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return _getSymbols_propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/* harmony default export */ const _getSymbols = (getSymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbols.js\n\n\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return _copyObject(source, _getSymbols(source), object);\n}\n\n/* harmony default export */ const _copySymbols = (copySymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayPush.js\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayPush = (arrayPush);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbolsIn.js\n\n\n\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  var result = [];\n  while (object) {\n    _arrayPush(result, _getSymbols(object));\n    object = _getPrototype(object);\n  }\n  return result;\n};\n\n/* harmony default export */ const _getSymbolsIn = (getSymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbolsIn.js\n\n\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return _copyObject(source, _getSymbolsIn(source), object);\n}\n\n/* harmony default export */ const _copySymbolsIn = (copySymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetAllKeys.js\n\n\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));\n}\n\n/* harmony default export */ const _baseGetAllKeys = (baseGetAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeys.js\n\n\n\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);\n}\n\n/* harmony default export */ const _getAllKeys = (getAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeysIn.js\n\n\n\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);\n}\n\n/* harmony default export */ const _getAllKeysIn = (getAllKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_DataView.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar DataView = _getNative(_root, 'DataView');\n\n/* harmony default export */ const _DataView = (DataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Promise.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Promise_Promise = _getNative(_root, 'Promise');\n\n/* harmony default export */ const _Promise = (_Promise_Promise);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Set.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Set_Set = _getNative(_root, 'Set');\n\n/* harmony default export */ const _Set = (_Set_Set);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_WeakMap.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _WeakMap_WeakMap = _getNative(_root, 'WeakMap');\n\n/* harmony default export */ const _WeakMap = (_WeakMap_WeakMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getTag.js\n\n\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _getTag_mapTag = '[object Map]',\n    _getTag_objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    _getTag_setTag = '[object Set]',\n    _getTag_weakMapTag = '[object WeakMap]';\n\nvar _getTag_dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = _toSource(_DataView),\n    mapCtorString = _toSource(_Map),\n    promiseCtorString = _toSource(_Promise),\n    setCtorString = _toSource(_Set),\n    weakMapCtorString = _toSource(_WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = _baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != _getTag_dataViewTag) ||\n    (_Map && getTag(new _Map) != _getTag_mapTag) ||\n    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||\n    (_Set && getTag(new _Set) != _getTag_setTag) ||\n    (_WeakMap && getTag(new _WeakMap) != _getTag_weakMapTag)) {\n  getTag = function(value) {\n    var result = _baseGetTag(value),\n        Ctor = result == _getTag_objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? _toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return _getTag_dataViewTag;\n        case mapCtorString: return _getTag_mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return _getTag_setTag;\n        case weakMapCtorString: return _getTag_weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const _getTag = (getTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneArray.js\n/** Used for built-in method references. */\nvar _initCloneArray_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/* harmony default export */ const _initCloneArray = (initCloneArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Uint8Array.js\n\n\n/** Built-in value references. */\nvar _Uint8Array_Uint8Array = _root.Uint8Array;\n\n/* harmony default export */ const _Uint8Array = (_Uint8Array_Uint8Array);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneArrayBuffer.js\n\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));\n  return result;\n}\n\n/* harmony default export */ const _cloneArrayBuffer = (cloneArrayBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneDataView.js\n\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/* harmony default export */ const _cloneDataView = (cloneDataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneRegExp.js\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/* harmony default export */ const _cloneRegExp = (cloneRegExp);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneSymbol.js\n\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/* harmony default export */ const _cloneSymbol = (cloneSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneTypedArray.js\n\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/* harmony default export */ const _cloneTypedArray = (cloneTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneByTag.js\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _initCloneByTag_boolTag = '[object Boolean]',\n    _initCloneByTag_dateTag = '[object Date]',\n    _initCloneByTag_mapTag = '[object Map]',\n    _initCloneByTag_numberTag = '[object Number]',\n    _initCloneByTag_regexpTag = '[object RegExp]',\n    _initCloneByTag_setTag = '[object Set]',\n    _initCloneByTag_stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',\n    _initCloneByTag_dataViewTag = '[object DataView]',\n    _initCloneByTag_float32Tag = '[object Float32Array]',\n    _initCloneByTag_float64Tag = '[object Float64Array]',\n    _initCloneByTag_int8Tag = '[object Int8Array]',\n    _initCloneByTag_int16Tag = '[object Int16Array]',\n    _initCloneByTag_int32Tag = '[object Int32Array]',\n    _initCloneByTag_uint8Tag = '[object Uint8Array]',\n    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _initCloneByTag_uint16Tag = '[object Uint16Array]',\n    _initCloneByTag_uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case _initCloneByTag_arrayBufferTag:\n      return _cloneArrayBuffer(object);\n\n    case _initCloneByTag_boolTag:\n    case _initCloneByTag_dateTag:\n      return new Ctor(+object);\n\n    case _initCloneByTag_dataViewTag:\n      return _cloneDataView(object, isDeep);\n\n    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:\n    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:\n    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:\n      return _cloneTypedArray(object, isDeep);\n\n    case _initCloneByTag_mapTag:\n      return new Ctor;\n\n    case _initCloneByTag_numberTag:\n    case _initCloneByTag_stringTag:\n      return new Ctor(object);\n\n    case _initCloneByTag_regexpTag:\n      return _cloneRegExp(object);\n\n    case _initCloneByTag_setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return _cloneSymbol(object);\n  }\n}\n\n/* harmony default export */ const _initCloneByTag = (initCloneByTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseCreate.js\n\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!lodash_es_isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/* harmony default export */ const _baseCreate = (baseCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneObject.js\n\n\n\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !_isPrototype(object))\n    ? _baseCreate(_getPrototype(object))\n    : {};\n}\n\n/* harmony default export */ const _initCloneObject = (initCloneObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsMap.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsMap_mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsMap_mapTag;\n}\n\n/* harmony default export */ const _baseIsMap = (baseIsMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isMap.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsMap = _nodeUtil && _nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;\n\n/* harmony default export */ const lodash_es_isMap = (isMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsSet.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsSet_setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsSet_setTag;\n}\n\n/* harmony default export */ const _baseIsSet = (baseIsSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSet.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsSet = _nodeUtil && _nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;\n\n/* harmony default export */ const lodash_es_isSet = (isSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseClone.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar _baseClone_argsTag = '[object Arguments]',\n    _baseClone_arrayTag = '[object Array]',\n    _baseClone_boolTag = '[object Boolean]',\n    _baseClone_dateTag = '[object Date]',\n    _baseClone_errorTag = '[object Error]',\n    _baseClone_funcTag = '[object Function]',\n    _baseClone_genTag = '[object GeneratorFunction]',\n    _baseClone_mapTag = '[object Map]',\n    _baseClone_numberTag = '[object Number]',\n    _baseClone_objectTag = '[object Object]',\n    _baseClone_regexpTag = '[object RegExp]',\n    _baseClone_setTag = '[object Set]',\n    _baseClone_stringTag = '[object String]',\n    _baseClone_symbolTag = '[object Symbol]',\n    _baseClone_weakMapTag = '[object WeakMap]';\n\nvar _baseClone_arrayBufferTag = '[object ArrayBuffer]',\n    _baseClone_dataViewTag = '[object DataView]',\n    _baseClone_float32Tag = '[object Float32Array]',\n    _baseClone_float64Tag = '[object Float64Array]',\n    _baseClone_int8Tag = '[object Int8Array]',\n    _baseClone_int16Tag = '[object Int16Array]',\n    _baseClone_int32Tag = '[object Int32Array]',\n    _baseClone_uint8Tag = '[object Uint8Array]',\n    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _baseClone_uint16Tag = '[object Uint16Array]',\n    _baseClone_uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =\ncloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =\ncloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =\ncloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =\ncloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =\ncloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =\ncloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =\ncloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =\ncloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =\ncloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =\ncloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;\ncloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =\ncloneableTags[_baseClone_weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!lodash_es_isObject(value)) {\n    return value;\n  }\n  var isArr = lodash_es_isArray(value);\n  if (isArr) {\n    result = _initCloneArray(value);\n    if (!isDeep) {\n      return _copyArray(value, result);\n    }\n  } else {\n    var tag = _getTag(value),\n        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;\n\n    if (lodash_es_isBuffer(value)) {\n      return _cloneBuffer(value, isDeep);\n    }\n    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : _initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? _copySymbolsIn(value, _baseAssignIn(result, value))\n          : _copySymbols(value, _baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = _initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new _Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (lodash_es_isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (lodash_es_isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? _getAllKeysIn : _getAllKeys)\n    : (isFlat ? lodash_es_keysIn : lodash_es_keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  _arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/* harmony default export */ const _baseClone = (baseClone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/clone.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar clone_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return _baseClone(value, clone_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_clone = (clone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayMap.js\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayMap = (arrayMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSymbol.js\n\n\n\n/** `Object#toString` result references. */\nvar isSymbol_symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (lodash_es_isObjectLike(value) && _baseGetTag(value) == isSymbol_symbolTag);\n}\n\n/* harmony default export */ const lodash_es_isSymbol = (isSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/memoize.js\n\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || _MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = _MapCache;\n\n/* harmony default export */ const lodash_es_memoize = (memoize);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_memoizeCapped.js\n\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = lodash_es_memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\n/* harmony default export */ const _memoizeCapped = (memoizeCapped);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stringToPath.js\n\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = _memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/* harmony default export */ const _stringToPath = (stringToPath);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toKey.js\n\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || lodash_es_isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _toKey = (toKey);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseToString.js\n\n\n\n\n\n/** Used as references for various `Number` constants. */\nvar _baseToString_INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar _baseToString_symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolToString = _baseToString_symbolProto ? _baseToString_symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (lodash_es_isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return _arrayMap(value, baseToString) + '';\n  }\n  if (lodash_es_isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -_baseToString_INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _baseToString = (baseToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toString.js\n\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString_toString(value) {\n  return value == null ? '' : _baseToString(value);\n}\n\n/* harmony default export */ const lodash_es_toString = (toString_toString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toPath.js\n\n\n\n\n\n\n\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (lodash_es_isArray(value)) {\n    return _arrayMap(value, _toKey);\n  }\n  return lodash_es_isSymbol(value) ? [value] : _copyArray(_stringToPath(lodash_es_toString(value)));\n}\n\n/* harmony default export */ const lodash_es_toPath = (toPath);\n\n// EXTERNAL MODULE: ../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(\"../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/cloneDeep.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar cloneDeep_CLONE_DEEP_FLAG = 1,\n    cloneDeep_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_cloneDeep = (cloneDeep);\n\n;// CONCATENATED MODULE: ../../../node_modules/formik/dist/formik.esm.js\n\n\n\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar FormikContext = /*#__PURE__*/(0,external_react_.createContext)(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\nfunction useFormikContext() {\n  var formik = (0,external_react_.useContext)(FormikContext);\n  !!!formik ?  false ? 0 : tiny_warning_esm(false) : void 0;\n  return formik;\n}\n\n/** @private is the value an empty array? */\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\nvar formik_esm_isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\nvar formik_esm_isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return external_react_.Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\nvar isPromise = function isPromise(value) {\n  return formik_esm_isObject(value) && formik_esm_isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && formik_esm_isObject(value) && formik_esm_isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = lodash_es_toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  } // check if path is not in the end\n\n\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\nfunction setIn(obj, path, value) {\n  var res = lodash_es_clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = lodash_es_toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (formik_esm_isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = lodash_es_clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (formik_esm_isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (react_fast_compare_default()(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = (0,external_react_.useRef)(props.initialValues);\n  var initialErrors = (0,external_react_.useRef)(props.initialErrors || emptyErrors);\n  var initialTouched = (0,external_react_.useRef)(props.initialTouched || emptyTouched);\n  var initialStatus = (0,external_react_.useRef)(props.initialStatus);\n  var isMounted = (0,external_react_.useRef)(false);\n  var fieldRegistry = (0,external_react_.useRef)({});\n\n  if (false) {}\n\n  (0,external_react_.useEffect)(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useState = (0,external_react_.useState)(0),\n      setIteration = _React$useState[1];\n\n  var stateRef = (0,external_react_.useRef)({\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  });\n  var state = stateRef.current;\n  var dispatch = (0,external_react_.useCallback)(function (action) {\n    var prev = stateRef.current;\n    stateRef.current = formikReducer(prev, action); // force rerender\n\n    if (prev !== stateRef.current) setIteration(function (x) {\n      return x + 1;\n    });\n  }, []);\n  var runValidateHandler = (0,external_react_.useCallback)(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (false) {}\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = (0,external_react_.useCallback)(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = formik_esm_isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (false) {}\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = (0,external_react_.useCallback)(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = (0,external_react_.useCallback)(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return formik_esm_isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = (0,external_react_.useCallback)(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = es.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = formik_esm_useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  (0,external_react_.useEffect)(function () {\n    if (validateOnMount && isMounted.current === true && react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = (0,external_react_.useCallback)(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched, props.onReset]);\n  (0,external_react_.useEffect)(function () {\n    if (isMounted.current === true && !react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = formik_esm_useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && formik_esm_isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: getIn(error, name)\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = (0,external_react_.useCallback)(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = (0,external_react_.useCallback)(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = formik_esm_useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = (0,external_react_.useCallback)(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = formik_esm_useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = formik_esm_isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = (0,external_react_.useCallback)(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = formik_esm_useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = (0,external_react_.useCallback)(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && \"production\" !== \"production\") {}\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = formik_esm_useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = formik_esm_useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = (0,external_react_.useCallback)(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && \"production\" !== \"production\") {}\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = formik_esm_useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = (0,external_react_.useCallback)(function (stateOrCb) {\n    if (formik_esm_isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = (0,external_react_.useCallback)(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = (0,external_react_.useCallback)(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = formik_esm_useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = formik_esm_useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (false) { var activeElement; }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = formik_esm_useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = formik_esm_useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = (0,external_react_.useCallback)(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = (0,external_react_.useCallback)(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = (0,external_react_.useCallback)(function (nameOrOptions) {\n    var isAnObject = formik_esm_isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = (0,external_react_.useMemo)(function () {\n    return !react_fast_compare_default()(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = (0,external_react_.useMemo)(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && formik_esm_isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  (0,external_react_.useImperativeHandle)(innerRef, function () {\n    return formikbag;\n  });\n\n  if (false) {}\n\n  return (0,external_react_.createElement)(FormikProvider, {\n    value: formikbag\n  }, component ? (0,external_react_.createElement)(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? formik_esm_isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  var normalizedValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || lodash_es_isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (lodash_es_isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? es(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = es(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar formik_esm_useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? external_react_.useLayoutEffect : external_react_.useEffect;\n\nfunction formik_esm_useEventCallback(fn) {\n  var ref = (0,external_react_.useRef)(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  formik_esm_useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return (0,external_react_.useCallback)(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = formik_esm_isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (false) {}\n\n  !fieldName ?  false ? 0 : invariant(false) : void 0;\n  var fieldHelpers = useMemo(function () {\n    return getFieldHelpers(fieldName);\n  }, [getFieldHelpers, fieldName]);\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\nfunction Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\", \"className\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (false) {} // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  (0,external_react_.useEffect)(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (formik_esm_isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(component, _extends({\n        ref: innerRef\n      }, field, rest, {\n        className: className\n      }), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return (0,external_react_.createElement)(component, _extends({\n      field: field,\n      form: formik\n    }, props, {\n      className: className\n    }), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return (0,external_react_.createElement)(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest, {\n      className: className\n    }), children);\n  }\n\n  return (0,external_react_.createElement)(asElement, _extends({}, field, props, {\n    className: className\n  }), children);\n}\n\nvar Form = /*#__PURE__*/(0,external_react_.forwardRef)(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return (0,external_react_.createElement)(\"form\", _extends({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return formik_esm_isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, _extends({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, _extends({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ?  false ? 0 : invariant(false) : void 0;\n      return createElement(Comp, _extends({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n\n/**\r\n * Some array helpers!\r\n */\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar createAlterationHandler = function createAlterationHandler(alteration, defaultFunction) {\n  var fn = typeof alteration === 'function' ? alteration : defaultFunction;\n  return function (data) {\n    if (Array.isArray(data) || formik_esm_isObject(data)) {\n      var clone = copyArrayLike(data);\n      return fn(clone);\n    } // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n\n\n    return data;\n  };\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = createAlterationHandler(alterErrors, fn);\n        var updateTouched = createAlterationHandler(alterTouched, fn); // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [lodash_es_cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n        length = arr.length;\n        return arr;\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    };\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !react_fast_compare_default()(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (formik_esm_isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      } // if the array only includes undefined values we have to return an empty array\n\n\n      return formik_esm_isFunction(copy.every) ? copy.every(function (v) {\n        return v === undefined;\n      }) ? [] : copy : copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array.slice();\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? (0,external_react_.createElement)(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(external_react_.Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FieldArrayInner)));\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? formik_esm_isFunction(render) ? render(error) : null : children ? formik_esm_isFunction(children) ? children(error) : null : component ? (0,external_react_.createElement)(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(external_react_.Component);\n\nvar ErrorMessage = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(ErrorMessageImpl)));\n\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && render) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(is && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (formik_esm_isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return (0,external_react_.createElement)(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return (0,external_react_.createElement)(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return (0,external_react_.createElement)(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(external_react_.Component);\n\nvar FastField = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FastFieldInner)));\n\n\n//# sourceMappingURL=formik.esm.js.map\n\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n;// CONCATENATED MODULE: ./Components/inline-note-with-icon/inline-note-with-icon.tsx\n\n\nvar InlineNoteWithIcon = function InlineNoteWithIcon(_ref) {\n  var icon = _ref.icon,\n    message = _ref.message,\n    _ref$font_size = _ref.font_size,\n    font_size = _ref$font_size === void 0 ? 'xxxs' : _ref$font_size,\n    title = _ref.title;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-inline-note-with-icon\"\n  }, icon && /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: icon,\n    size: 16\n  })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: font_size,\n    line_height: \"s\"\n  }, title && /*#__PURE__*/external_react_default().createElement(\"strong\", null, title, \": \"), message));\n};\n/* harmony default export */ const inline_note_with_icon = (InlineNoteWithIcon);\n;// CONCATENATED MODULE: ./Components/inline-note-with-icon/index.ts\n\n\n/* harmony default export */ const Components_inline_note_with_icon = (inline_note_with_icon);\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n// EXTERNAL MODULE: ./Components/load-error-message/index.ts + 1 modules\nvar load_error_message = __webpack_require__(\"./Components/load-error-message/index.ts\");\n;// CONCATENATED MODULE: ./Components/article/article.tsx\n\n\n\n\n\nvar Article = function Article(_ref) {\n  var title = _ref.title,\n    descriptions = _ref.descriptions,\n    onClickLearnMore = _ref.onClickLearnMore,\n    className = _ref.className;\n  var has_descriptions = (descriptions === null || descriptions === void 0 ? void 0 : descriptions.length) > 0;\n  var has_single_description = (descriptions === null || descriptions === void 0 ? void 0 : descriptions.length) === 1;\n  return /*#__PURE__*/external_react_default().createElement(\"article\", {\n    className: classnames_default()('da-article', className)\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h4\",\n    color: \"prominent\",\n    line_height: \"m\",\n    size: \"xs\",\n    weight: \"bold\",\n    className: \"da-article__header\"\n  }, title), has_descriptions && /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, has_single_description ? /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    size: \"xxs\",\n    line_height: \"m\"\n  }, descriptions[0]) : /*#__PURE__*/external_react_default().createElement(\"ul\", {\n    className: \"da-article__list\"\n  }, descriptions.map(function (description, idx) {\n    return /*#__PURE__*/external_react_default().createElement(\"li\", {\n      key: idx\n    }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n      size: \"xxs\",\n      line_height: \"xs\"\n    }, 'component' in description ? description.component : description));\n  }))), onClickLearnMore && /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-article__learn-more\",\n    onClick: onClickLearnMore\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"xxs\",\n    color: \"loss-danger\",\n    line_height: \"s\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Learn more\"\n  })), /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"IcChevronRight\",\n    className: \"da-article__learn-more-icon\",\n    color: \"red\"\n  })));\n};\n/* harmony default export */ const article = (Article);\n;// CONCATENATED MODULE: ./Components/article/index.ts\n\n\n/* harmony default export */ const Components_article = (article);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-article.tsx\n\n\n\nvar ApiTokenArticle = function ApiTokenArticle() {\n  return /*#__PURE__*/external_react_default().createElement(Components_article, {\n    title: (0,translations_.localize)('API token'),\n    descriptions: [/*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n      key: 0,\n      i18n_default_text: \"To access your mobile apps and other third-party apps, you'll first need to generate an API token.\"\n    })]\n  });\n};\n/* harmony default export */ const api_token_article = (ApiTokenArticle);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-card.tsx\nfunction api_token_card_extends() { api_token_card_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return api_token_card_extends.apply(this, arguments); }\n\n\n\nvar ApiTokenCard = function ApiTokenCard(_ref) {\n  var name = _ref.name,\n    value = _ref.value,\n    display_name = _ref.display_name,\n    description = _ref.description,\n    setFieldValue = _ref.setFieldValue,\n    children = _ref.children;\n  return /*#__PURE__*/external_react_default().createElement(Field, {\n    name: name\n  }, function (_ref2) {\n    var field = _ref2.field;\n    return /*#__PURE__*/external_react_default().createElement(components_.CompositeCheckbox, api_token_card_extends({}, field, {\n      onChange: function onChange() {\n        return setFieldValue(name, !value);\n      },\n      value: value,\n      className: \"api-token__checkbox\",\n      defaultChecked: value,\n      label: display_name,\n      description: description\n    }), children);\n  });\n};\n/* harmony default export */ const api_token_card = (ApiTokenCard);\n// EXTERNAL MODULE: external \"react-dom\"\nvar external_react_dom_ = __webpack_require__(\"react-dom\");\n;// CONCATENATED MODULE: ./Components/api-token/api-token-context.ts\n\nvar ApiTokenContext = /*#__PURE__*/external_react_.createContext({});\n/* harmony default export */ const api_token_context = (ApiTokenContext);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-footer.tsx\n\n\n\n\n\nvar ApiTokenFooter = function ApiTokenFooter() {\n  var _React$useContext = external_react_default().useContext(api_token_context),\n    footer_ref = _React$useContext.footer_ref,\n    toggleOverlay = _React$useContext.toggleOverlay;\n  return /*#__PURE__*/(0,external_react_dom_.createPortal)( /*#__PURE__*/external_react_default().createElement(\"a\", {\n    className: \"link link--prominent\",\n    onClick: toggleOverlay\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    size: \"xxs\",\n    line_height: \"m\",\n    weight: \"bold\"\n  }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n    i18n_default_text: \"Learn more about API token\"\n  }))), footer_ref);\n};\n/* harmony default export */ const api_token_footer = (ApiTokenFooter);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-overlay.tsx\n\n\n\n\nvar ApiTokenOverlay = function ApiTokenOverlay() {\n  var _React$useContext = external_react_default().useContext(api_token_context),\n    overlay_ref = _React$useContext.overlay_ref,\n    toggleOverlay = _React$useContext.toggleOverlay;\n  return /*#__PURE__*/external_react_default().createElement(components_.Popup.Overlay, {\n    descriptions: [{\n      key: 'api_token_desc_1',\n      component: /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        key: 0,\n        i18n_default_text: \"To access our mobile apps and other third-party apps, you'll first need to generate an API token.\"\n      })\n    }],\n    done_text: (0,translations_.localize)('Done'),\n    overlay_ref: overlay_ref,\n    title: (0,translations_.localize)('API Token'),\n    toggleOverlay: toggleOverlay\n  });\n};\n/* harmony default export */ const api_token_overlay = (ApiTokenOverlay);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-delete-button.tsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\nvar ApiTokenDeleteButton = function ApiTokenDeleteButton(_ref) {\n  var token = _ref.token,\n    _ref$popover_alignmen = _ref.popover_alignment,\n    popover_alignment = _ref$popover_alignmen === void 0 ? 'left' : _ref$popover_alignmen;\n  var _React$useContext = external_react_default().useContext(api_token_context),\n    deleteToken = _React$useContext.deleteToken;\n  var _React$useState = external_react_default().useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    is_deleting = _React$useState2[0],\n    setIsDeleting = _React$useState2[1];\n  var _React$useState3 = external_react_default().useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    is_loading = _React$useState4[0],\n    setIsLoading = _React$useState4[1];\n  var _React$useState5 = external_react_default().useState(false),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    is_popover_open = _React$useState6[0],\n    setIsPopoverOpen = _React$useState6[1];\n  var isMounted = (0,shared_.useIsMounted)();\n  var getConfirmationBeforeDelete = function getConfirmationBeforeDelete() {\n    if ((0,shared_.isDesktop)()) setIsPopoverOpen(false);\n    setIsDeleting(true);\n  };\n  var onMouseEnterHandler = function onMouseEnterHandler() {\n    if (!is_deleting && (0,shared_.isDesktop)()) setIsPopoverOpen(true);\n  };\n  var onMouseLeaveHandler = function onMouseLeaveHandler() {\n    if (!is_deleting && (0,shared_.isDesktop)()) setIsPopoverOpen(false);\n  };\n  var handleNo = function handleNo() {\n    return setIsDeleting(false);\n  };\n  var handleYes = function handleYes() {\n    setIsLoading(true);\n    deleteToken(token.token)[\"finally\"](function () {\n      if (isMounted()) {\n        setIsLoading(false);\n        setIsDeleting(false);\n      }\n    });\n  };\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.Modal, {\n    is_open: is_deleting,\n    small: true\n  }, /*#__PURE__*/external_react_default().createElement(components_.Modal.Body, null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"h1\",\n    color: \"prominent\",\n    weight: \"bold\",\n    className: \"da-api-token__modal-title\"\n  }, (0,translations_.localize)('Delete token')), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\"\n  }, (0,translations_.localize)('Are you sure you want to delete this token?'))), /*#__PURE__*/external_react_default().createElement(components_.Modal.Footer, {\n    className: \"da-api-token__modal-footer\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"dc-dialog__button\",\n    has_effect: true,\n    text: (0,translations_.localize)('Cancel'),\n    onClick: handleNo,\n    secondary: true,\n    large: true\n  }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"dc-dialog__button\",\n    has_effect: true,\n    text: (0,translations_.localize)('Yes, delete'),\n    onClick: handleYes,\n    primary: true,\n    large: true,\n    is_loading: is_loading\n  }))), /*#__PURE__*/external_react_default().createElement(components_.Popover, {\n    alignment: popover_alignment,\n    classNameBubble: \"dc-clipboard__popover\",\n    message: (0,translations_.localize)('Delete this token'),\n    relative_render: false,\n    zIndex: \"9999\",\n    is_open: is_popover_open\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: 'IcDelete',\n    custom_color: \"var(--text-prominent)\",\n    className: \"dc-clipboard da-api-token__delete-icon\",\n    onClick: getConfirmationBeforeDelete,\n    size: 14,\n    data_testid: \"dt_token_delete_icon\",\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler\n  })));\n};\n/* harmony default export */ const api_token_delete_button = (ApiTokenDeleteButton);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table-row-cell.tsx\n\n\n\nvar ApiTokenTableRowCell = function ApiTokenTableRowCell(_ref) {\n  var className = _ref.className,\n    children = _ref.children,\n    should_bypass_text = _ref.should_bypass_text;\n  if (should_bypass_text) {\n    return /*#__PURE__*/external_react_default().createElement(\"td\", {\n      className: classnames_default()('da-api-token__table-cell', className)\n    }, children);\n  }\n  return /*#__PURE__*/external_react_default().createElement(\"td\", {\n    className: classnames_default()('da-api-token__table-cell', className)\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\"\n  }, children));\n};\n/* harmony default export */ const api_token_table_row_cell = (ApiTokenTableRowCell);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table-row-scopes-cell.tsx\n\n\nvar ApiTokenTableRowScopesCell = function ApiTokenTableRowScopesCell(_ref) {\n  var scopes = _ref.scopes;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__table-scopes-cell-block\"\n  }, scopes.map(function (scope) {\n    return /*#__PURE__*/external_react_default().createElement(\"div\", {\n      key: scope,\n      className: classnames_default()('da-api-token__table-scope-cell', {\n        'da-api-token__table-scope-cell-admin': scope.toLowerCase() === 'admin'\n      })\n    }, scope);\n  }));\n};\n/* harmony default export */ const api_token_table_row_scopes_cell = (ApiTokenTableRowScopesCell);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-clipboard.tsx\nfunction api_token_clipboard_slicedToArray(arr, i) { return api_token_clipboard_arrayWithHoles(arr) || api_token_clipboard_iterableToArrayLimit(arr, i) || api_token_clipboard_unsupportedIterableToArray(arr, i) || api_token_clipboard_nonIterableRest(); }\nfunction api_token_clipboard_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction api_token_clipboard_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return api_token_clipboard_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return api_token_clipboard_arrayLikeToArray(o, minLen); }\nfunction api_token_clipboard_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction api_token_clipboard_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction api_token_clipboard_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar WarningNoteBullet = function WarningNoteBullet(_ref) {\n  var message = _ref.message;\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__bullet-wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__bullet\"\n  }), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\"\n  }, message));\n};\nvar WarningDialogMessage = function WarningDialogMessage() {\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\"\n  }, (0,translations_.localize)('Be careful who you share this token with. Anyone with this token can perform the following actions on your account behalf')), /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__bullet-container\"\n  }, /*#__PURE__*/external_react_default().createElement(WarningNoteBullet, {\n    message: (0,translations_.localize)('Add accounts')\n  }), /*#__PURE__*/external_react_default().createElement(WarningNoteBullet, {\n    message: (0,translations_.localize)('Create or delete API tokens for trading and withdrawals')\n  }), /*#__PURE__*/external_react_default().createElement(WarningNoteBullet, {\n    message: (0,translations_.localize)('Modify account settings')\n  })));\n};\nvar ApiTokenClipboard = function ApiTokenClipboard(_ref2) {\n  var scopes = _ref2.scopes,\n    text_copy = _ref2.text_copy,\n    info_message = _ref2.info_message,\n    success_message = _ref2.success_message,\n    _ref2$popover_alignme = _ref2.popover_alignment,\n    popover_alignment = _ref2$popover_alignme === void 0 ? 'bottom' : _ref2$popover_alignme;\n  var _useCopyToClipboard = (0,components_.useCopyToClipboard)(),\n    _useCopyToClipboard2 = api_token_clipboard_slicedToArray(_useCopyToClipboard, 3),\n    is_copied = _useCopyToClipboard2[0],\n    copyToClipboard = _useCopyToClipboard2[1],\n    setIsCopied = _useCopyToClipboard2[2];\n  var _React$useState = external_react_default().useState(false),\n    _React$useState2 = api_token_clipboard_slicedToArray(_React$useState, 2),\n    is_modal_open = _React$useState2[0],\n    setIsModalOpen = _React$useState2[1];\n  var _React$useState3 = external_react_default().useState(false),\n    _React$useState4 = api_token_clipboard_slicedToArray(_React$useState3, 2),\n    is_popover_open = _React$useState4[0],\n    setIsPopoverOpen = _React$useState4[1];\n  var isMounted = (0,shared_.useIsMounted)();\n  var timeout_clipboard, timeout_clipboard_2;\n  var has_admin_scope = scopes.includes('Admin');\n  var onMouseEnterHandler = function onMouseEnterHandler() {\n    if (!is_copied) setIsPopoverOpen(true);\n  };\n  var onMouseLeaveHandler = function onMouseLeaveHandler() {\n    if (!is_copied) setIsPopoverOpen(false);\n  };\n  /* two timeouts help to prevent popup window blinking.\n  without early hiding the popup we will see shortly the description message like during hovering.\n  this bug appears when popup is handled outside like here\n  */\n  var onClick = function onClick() {\n    setIsModalOpen(false);\n    copyToClipboard(text_copy);\n    setIsPopoverOpen(true);\n    timeout_clipboard = setTimeout(function () {\n      if (isMounted()) {\n        setIsPopoverOpen(false);\n        setIsCopied(false);\n      }\n    }, 1900);\n    timeout_clipboard_2 = setTimeout(function () {\n      if (isMounted()) {\n        setIsCopied(false);\n      }\n    }, 2050);\n  };\n  var onClickHandler = function onClickHandler() {\n    if (has_admin_scope) {\n      setIsModalOpen(true);\n    } else onClick();\n  };\n  external_react_default().useEffect(function () {\n    return function () {\n      clearTimeout(timeout_clipboard);\n      clearTimeout(timeout_clipboard_2);\n    };\n  }, [timeout_clipboard, timeout_clipboard_2]);\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.Modal, {\n    is_open: is_modal_open,\n    small: true\n  }, /*#__PURE__*/external_react_default().createElement(components_.Modal.Body, null, /*#__PURE__*/external_react_default().createElement(WarningDialogMessage, null)), /*#__PURE__*/external_react_default().createElement(components_.Modal.Footer, {\n    className: \"da-api-token__modal-footer\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Button, {\n    className: \"dc-dialog__button\",\n    has_effect: true,\n    text: (0,translations_.localize)('OK'),\n    onClick: onClick,\n    primary: true,\n    large: true\n  }))), /*#__PURE__*/external_react_default().createElement(components_.Popover, {\n    alignment: popover_alignment,\n    classNameBubble: \"dc-clipboard__popover\",\n    message: is_copied ? success_message : info_message,\n    is_open: is_popover_open,\n    zIndex: \"9999\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: \"\".concat(is_copied ? 'IcCheckmarkCircle' : 'IcClipboard'),\n    custom_color: \"\".concat(is_copied ? 'var(--status-success)' : 'var(--text-prominent)'),\n    className: \"dc-clipboard\",\n    size: 14,\n    data_testid: \"\".concat(is_copied ? 'dt_token_copied_icon' : 'dt_copy_token_icon'),\n    onClick: onClickHandler,\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler\n  })));\n};\n/* harmony default export */ const api_token_clipboard = (ApiTokenClipboard);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table-row-token-cell.tsx\nfunction api_token_table_row_token_cell_slicedToArray(arr, i) { return api_token_table_row_token_cell_arrayWithHoles(arr) || api_token_table_row_token_cell_iterableToArrayLimit(arr, i) || api_token_table_row_token_cell_unsupportedIterableToArray(arr, i) || api_token_table_row_token_cell_nonIterableRest(); }\nfunction api_token_table_row_token_cell_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction api_token_table_row_token_cell_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction api_token_table_row_token_cell_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || api_token_table_row_token_cell_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction api_token_table_row_token_cell_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return api_token_table_row_token_cell_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return api_token_table_row_token_cell_arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return api_token_table_row_token_cell_arrayLikeToArray(arr); }\nfunction api_token_table_row_token_cell_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\nvar HiddenPasswordDots = function HiddenPasswordDots() {\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__pass-dot-container\"\n  }, _toConsumableArray(Array(15).keys()).map(function (el) {\n    return /*#__PURE__*/external_react_default().createElement(\"div\", {\n      key: el,\n      className: \"da-api-token__pass-dot\"\n    });\n  }));\n};\nvar ApiTokenTableRowTokenCell = function ApiTokenTableRowTokenCell(_ref) {\n  var token = _ref.token,\n    scopes = _ref.scopes;\n  var _React$useState = external_react_default().useState(false),\n    _React$useState2 = api_token_table_row_token_cell_slicedToArray(_React$useState, 2),\n    should_show_token = _React$useState2[0],\n    setShouldShowToken = _React$useState2[1];\n  var toggleTokenVisibility = function toggleTokenVisibility() {\n    setShouldShowToken(function (prev_value) {\n      return !prev_value;\n    });\n  };\n  return /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__clipboard-wrapper\"\n  }, should_show_token ? /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    as: \"p\",\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\"\n  }, token) : /*#__PURE__*/external_react_default().createElement(HiddenPasswordDots, null), /*#__PURE__*/external_react_default().createElement(api_token_clipboard, {\n    info_message: (0,translations_.localize)('Copy this token'),\n    success_message: (0,translations_.localize)('Token copied!'),\n    text_copy: token,\n    scopes: scopes\n  }), /*#__PURE__*/external_react_default().createElement(components_.Popover, {\n    alignment: \"bottom\",\n    classNameBubble: \"dc-clipboard__popover\",\n    message: should_show_token ? (0,translations_.localize)('Hide this token') : (0,translations_.localize)('Show this token')\n  }, /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n    icon: should_show_token ? 'IcPasswordEyeVisible' : 'IcPasswordEyeHide',\n    className: \"da-api-token__visibility-icon\",\n    onClick: toggleTokenVisibility,\n    width: 15,\n    custom_color: \"var(--text-prominent)\",\n    data_testid: \"dt_toggle_visibility_icon\"\n  })));\n};\n/* harmony default export */ const api_token_table_row_token_cell = (ApiTokenTableRowTokenCell);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table-row.tsx\n\n\n\n\n\nvar ApiTokenTableRow = function ApiTokenTableRow(_ref) {\n  var token = _ref.token;\n  return /*#__PURE__*/external_react_default().createElement(\"tr\", {\n    className: \"da-api-token__table-cell-row\"\n  }, /*#__PURE__*/external_react_default().createElement(api_token_table_row_cell, {\n    className: \"da-api-token__table-cell--name\"\n  }, token.display_name), /*#__PURE__*/external_react_default().createElement(api_token_table_row_cell, {\n    should_bypass_text: true\n  }, /*#__PURE__*/external_react_default().createElement(api_token_table_row_token_cell, {\n    token: token.token,\n    scopes: token.scopes\n  })), /*#__PURE__*/external_react_default().createElement(api_token_table_row_cell, {\n    should_bypass_text: true\n  }, /*#__PURE__*/external_react_default().createElement(api_token_table_row_scopes_cell, {\n    scopes: token.scopes\n  })), /*#__PURE__*/external_react_default().createElement(api_token_table_row_cell, null, token.last_used), /*#__PURE__*/external_react_default().createElement(api_token_table_row_cell, {\n    should_bypass_text: true\n  }, /*#__PURE__*/external_react_default().createElement(api_token_delete_button, {\n    token: token\n  })));\n};\n/* harmony default export */ const api_token_table_row = (ApiTokenTableRow);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table-row-header.tsx\n\n\nvar ApiTokenTableRowHeader = function ApiTokenTableRowHeader(_ref) {\n  var text = _ref.text;\n  return /*#__PURE__*/external_react_default().createElement(\"th\", {\n    className: \"da-api-token__table-header\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n    color: \"prominent \",\n    size: \"xs\",\n    line_height: \"m\",\n    weight: \"bold\"\n  }, text));\n};\n/* harmony default export */ const api_token_table_row_header = (ApiTokenTableRowHeader);\n;// CONCATENATED MODULE: ./Components/api-token/api-token-table.tsx\n\n\n\n\n\n\n\n\n\n\nvar ApiTokenTable = function ApiTokenTable() {\n  var _React$useContext = external_react_default().useContext(api_token_context),\n    api_tokens = _React$useContext.api_tokens;\n  var formatTokenScopes = function formatTokenScopes(str) {\n    var replace_filter = str.replace(/[-_]/g, ' ');\n    var sentenced_case = replace_filter[0].toUpperCase() + replace_filter.slice(1).toLowerCase();\n    return sentenced_case;\n  };\n  var getTranslatedScopes = function getTranslatedScopes(str) {\n    switch (str) {\n      case 'read':\n        return (0,translations_.localize)('Read');\n      case 'trade':\n        return (0,translations_.localize)('Trade');\n      case 'payments':\n        return (0,translations_.localize)('Payments');\n      case 'admin':\n        return (0,translations_.localize)('Admin');\n      case 'trading_information':\n        return (0,translations_.localize)('Trading information');\n      default:\n        return formatTokenScopes(str);\n    }\n  };\n  var getScopeValue = function getScopeValue(token) {\n    var _token$scopes;\n    var titled_scopes = (_token$scopes = token.scopes) === null || _token$scopes === void 0 ? void 0 : _token$scopes.map(function (scope) {\n      return getTranslatedScopes(scope);\n    });\n    var date_format = token.last_used ? (0,shared_.formatDate)(token.last_used, 'DD/MM/YYYY') : (0,translations_.localize)('Never');\n    return {\n      display_name: token.display_name,\n      scopes: titled_scopes,\n      last_used: date_format,\n      token: token.token\n    };\n  };\n  if ((0,shared_.isMobile)()) {\n    return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, api_tokens === null || api_tokens === void 0 ? void 0 : api_tokens.map(function (token_data) {\n      var token = getScopeValue(token_data);\n      return /*#__PURE__*/external_react_default().createElement(\"div\", {\n        key: token.token,\n        className: \"da-api-token__scope\"\n      }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n        className: \"da-api-token__scope-item\"\n      }, /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        as: \"h5\",\n        size: \"xxs\",\n        color: \"general\",\n        line_height: \"xs\",\n        weight: \"bold\"\n      }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Name\"\n      })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        className: \"da-api-token__scope-item--name\",\n        as: \"p\",\n        size: \"s\",\n        color: \"general\",\n        line_height: \"m\"\n      }, token.display_name))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n        className: \"da-api-token__scope-item\"\n      }, /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        as: \"h5\",\n        size: \"xxs\",\n        color: \"general\",\n        line_height: \"xs\",\n        weight: \"bold\"\n      }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Token\"\n      })), /*#__PURE__*/external_react_default().createElement(api_token_table_row_token_cell, {\n        token: token.token,\n        scopes: token.scopes\n      })), /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        as: \"h5\",\n        size: \"xxs\",\n        color: \"general\",\n        line_height: \"xs\",\n        weight: \"bold\"\n      }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Last Used\"\n      })), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        as: \"p\",\n        size: \"s\",\n        color: \"general\",\n        line_height: \"m\"\n      }, token.last_used))), /*#__PURE__*/external_react_default().createElement(\"div\", {\n        className: \"da-api-token__scope-item\"\n      }, /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(components_.Text, {\n        as: \"h5\",\n        size: \"xxs\",\n        color: \"general\",\n        line_height: \"xs\",\n        weight: \"bold\"\n      }, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n        i18n_default_text: \"Scopes\"\n      })), /*#__PURE__*/external_react_default().createElement(api_token_table_row_scopes_cell, {\n        scopes: token.scopes\n      })), /*#__PURE__*/external_react_default().createElement(\"div\", null, /*#__PURE__*/external_react_default().createElement(api_token_delete_button, {\n        token: token\n      }))));\n    }));\n  }\n  return /*#__PURE__*/external_react_default().createElement(\"table\", {\n    className: \"da-api-token__table\"\n  }, /*#__PURE__*/external_react_default().createElement(\"thead\", null, /*#__PURE__*/external_react_default().createElement(\"tr\", {\n    className: \"da-api-token__table-header-row\"\n  }, /*#__PURE__*/external_react_default().createElement(api_token_table_row_header, {\n    text: (0,translations_.localize)('Name')\n  }), /*#__PURE__*/external_react_default().createElement(api_token_table_row_header, {\n    text: (0,translations_.localize)('Token')\n  }), /*#__PURE__*/external_react_default().createElement(api_token_table_row_header, {\n    text: (0,translations_.localize)('Scopes')\n  }), /*#__PURE__*/external_react_default().createElement(api_token_table_row_header, {\n    text: (0,translations_.localize)('Last used')\n  }), /*#__PURE__*/external_react_default().createElement(\"th\", null))), /*#__PURE__*/external_react_default().createElement(\"tbody\", null, api_tokens === null || api_tokens === void 0 ? void 0 : api_tokens.map(function (api_token) {\n    return /*#__PURE__*/external_react_default().createElement(api_token_table_row, {\n      key: api_token.token,\n      token: getScopeValue(api_token)\n    });\n  })));\n};\n/* harmony default export */ const api_token_table = (ApiTokenTable);\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/assertEnvironment.js\n\n\nif (!external_react_.useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\nif (!external_mobx_.makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\");\n}\n//# sourceMappingURL=assertEnvironment.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\n\n//# sourceMappingURL=reactBatchedUpdates.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerBatching.js\n\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nfunction observerBatching(reactionScheduler) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch;\n        if (false) {}\n    }\n    (0,external_mobx_.configure)({ reactionScheduler: reactionScheduler });\n}\nvar isObserverBatched = function () {\n    if (false) {}\n    return true;\n};\n//# sourceMappingURL=observerBatching.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/printDebugValue.js\n\nfunction printDebugValue(v) {\n    return (0,external_mobx_.getDependencyTree)(v);\n}\n//# sourceMappingURL=printDebugValue.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/UniversalFinalizationRegistry.js\nvar REGISTRY_FINALIZE_AFTER = 10000;\nvar REGISTRY_SWEEP_INTERVAL = 10000;\nvar TimerBasedFinalizationRegistry = /** @class */ (function () {\n    function TimerBasedFinalizationRegistry(finalize) {\n        var _this = this;\n        Object.defineProperty(this, \"finalize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: finalize\n        });\n        Object.defineProperty(this, \"registrations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"sweepTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Bound so it can be used directly as setTimeout callback.\n        Object.defineProperty(this, \"sweep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (maxAge) {\n                if (maxAge === void 0) { maxAge = REGISTRY_FINALIZE_AFTER; }\n                // cancel timeout so we can force sweep anytime\n                clearTimeout(_this.sweepTimeout);\n                _this.sweepTimeout = undefined;\n                var now = Date.now();\n                _this.registrations.forEach(function (registration, token) {\n                    if (now - registration.registeredAt >= maxAge) {\n                        _this.finalize(registration.value);\n                        _this.registrations.delete(token);\n                    }\n                });\n                if (_this.registrations.size > 0) {\n                    _this.scheduleSweep();\n                }\n            }\n        });\n        // Bound so it can be exported directly as clearTimers test utility.\n        Object.defineProperty(this, \"finalizeAllImmediately\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function () {\n                _this.sweep(0);\n            }\n        });\n    }\n    // Token is actually required with this impl\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target, value, token) {\n            this.registrations.set(token, {\n                value: value,\n                registeredAt: Date.now()\n            });\n            this.scheduleSweep();\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (token) {\n            this.registrations.delete(token);\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"scheduleSweep\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this.sweepTimeout === undefined) {\n                this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);\n            }\n        }\n    });\n    return TimerBasedFinalizationRegistry;\n}());\n\nvar UniversalFinalizationRegistry = typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : TimerBasedFinalizationRegistry;\n//# sourceMappingURL=UniversalFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerFinalizationRegistry.js\n\nvar observerFinalizationRegistry = new UniversalFinalizationRegistry(function (adm) {\n    var _a;\n    (_a = adm.reaction) === null || _a === void 0 ? void 0 : _a.dispose();\n    adm.reaction = null;\n});\n//# sourceMappingURL=observerFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/staticRendering.js\nvar globalIsUsingStaticRendering = false;\nfunction staticRendering_enableStaticRendering(enable) {\n    globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n    return globalIsUsingStaticRendering;\n}\n//# sourceMappingURL=staticRendering.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useObserver.js\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n\nfunction observerComponentNameFor(baseComponentName) {\n    return \"observer\".concat(baseComponentName);\n}\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nvar ObjectToBeRetainedByReact = /** @class */ (function () {\n    function ObjectToBeRetainedByReact() {\n    }\n    return ObjectToBeRetainedByReact;\n}());\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact();\n}\nfunction useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (isUsingStaticRendering()) {\n        return fn();\n    }\n    var _a = __read(external_react_default().useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a[0];\n    // Force update, see #2982\n    var _b = __read(external_react_default().useState(), 2), setState = _b[1];\n    var forceUpdate = function () { return setState([]); };\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    var admRef = external_react_default().useRef(null);\n    if (!admRef.current) {\n        // First render\n        admRef.current = {\n            reaction: null,\n            mounted: false,\n            changedBeforeMount: false\n        };\n    }\n    var adm = admRef.current;\n    if (!adm.reaction) {\n        // First render or component was not committed and reaction was disposed by registry\n        adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (adm.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate();\n            }\n            else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                adm.changedBeforeMount = true;\n            }\n        });\n        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm);\n    }\n    external_react_default().useDebugValue(adm.reaction, printDebugValue);\n    external_react_default().useEffect(function () {\n        observerFinalizationRegistry.unregister(adm);\n        adm.mounted = true;\n        if (adm.reaction) {\n            if (adm.changedBeforeMount) {\n                // Got a change before mount, force an update\n                adm.changedBeforeMount = false;\n                forceUpdate();\n            }\n        }\n        else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n            // Re-create the reaction\n            adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n                // We've definitely already been mounted at this point\n                forceUpdate();\n            });\n            forceUpdate();\n        }\n        return function () {\n            adm.reaction.dispose();\n            adm.reaction = null;\n            adm.mounted = false;\n            adm.changedBeforeMount = false;\n        };\n    }, []);\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    var rendering;\n    var exception;\n    adm.reaction.track(function () {\n        try {\n            rendering = fn();\n        }\n        catch (e) {\n            exception = e;\n        }\n    });\n    if (exception) {\n        throw exception; // re-throw any exceptions caught during rendering\n    }\n    return rendering;\n}\n//# sourceMappingURL=useObserver.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/observer.js\n\n\n\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nvar ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof external_react_.forwardRef === \"function\" && (0,external_react_.forwardRef)(function (props) { return null; })[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof external_react_.memo === \"function\" && (0,external_react_.memo)(function (props) { return null; })[\"$$typeof\"];\n// n.b. base case is not used for actual typings or exported in the typing files\nfunction observer(baseComponent, \n// TODO remove in next major\noptions) {\n    var _a;\n    if (false) {}\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n    }\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent;\n    }\n    var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n    var render = baseComponent;\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true;\n        render = baseComponent[\"render\"];\n        if (typeof render !== \"function\") {\n            throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n        }\n    }\n    var observerComponent = function (props, ref) {\n        return useObserver(function () { return render(props, ref); }, baseComponentName);\n    };\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;\n        observerComponent.displayName = baseComponentName;\n    }\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if (baseComponent.contextTypes) {\n        ;\n        observerComponent.contextTypes = baseComponent.contextTypes;\n    }\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = (0,external_react_.forwardRef)(observerComponent);\n    }\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = (0,external_react_.memo)(observerComponent);\n    copyStaticProperties(baseComponent, observerComponent);\n    if (false) {}\n    return observerComponent;\n}\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nvar hoistBlackList = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n};\nfunction copyStaticProperties(base, target) {\n    Object.keys(base).forEach(function (key) {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n        }\n    });\n}\n//# sourceMappingURL=observer.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/ObserverComponent.js\n\nfunction ObserverComponent(_a) {\n    var children = _a.children, render = _a.render;\n    var component = children || render;\n    if (typeof component !== \"function\") {\n        return null;\n    }\n    return useObserver(component);\n}\nif (false) {}\nObserverComponent.displayName = \"Observer\";\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n    var extraKey = key === \"children\" ? \"render\" : \"children\";\n    var hasProp = typeof props[key] === \"function\";\n    var hasExtraProp = typeof props[extraKey] === \"function\";\n    if (hasProp && hasExtraProp) {\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n    }\n    if (hasProp || hasExtraProp) {\n        return null;\n    }\n    return new Error(\"Invalid prop `\" +\n        propFullName +\n        \"` of type `\" +\n        typeof props[key] +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`, expected `function`.\");\n}\n//# sourceMappingURL=ObserverComponent.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalObservable.js\n\n\nfunction useLocalObservable(initializer, annotations) {\n    return useState(function () { return observable(initializer(), annotations, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalObservable.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useAsObservableSource.js\nvar useAsObservableSource_read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\nfunction useAsObservableSource_useAsObservableSource(current) {\n    if (false)\n        {}\n    var _a = useAsObservableSource_read(useState(function () { return observable(current, {}, { deep: false }); }), 1), res = _a[0];\n    runInAction(function () {\n        Object.assign(res, current);\n    });\n    return res;\n}\n//# sourceMappingURL=useAsObservableSource.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalStore.js\n\n\n\n\nfunction useLocalStore(initializer, current) {\n    if (false)\n        {}\n    var source = current && useAsObservableSource(current);\n    return useState(function () { return observable(initializer(source), undefined, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalStore.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/index.js\nvar _a;\n\n\n\n\n\n\n\nobserverBatching(external_react_dom_.unstable_batchedUpdates);\n\n\n\n\n\n\nvar clearTimers = (_a = observerFinalizationRegistry.finalizeAllImmediately) !== null && _a !== void 0 ? _a : (function () { });\nfunction es_useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (false) {}\n    return useObserverOriginal(fn, baseComponentName);\n}\n\nfunction useStaticRendering(enable) {\n    if (false) {}\n    enableStaticRendering(enable);\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ../../../node_modules/lodash.merge/index.js\nvar lodash_merge = __webpack_require__(\"../../../node_modules/lodash.merge/index.js\");\n;// CONCATENATED MODULE: ../../stores/src/mockStore.ts\n\nvar mock = function mock() {\n  var common_store_error = {\n    app_routing_history: [],\n    header: '',\n    message: '',\n    type: '',\n    redirect_label: '',\n    redirect_to: '',\n    should_clear_error_on_click: false,\n    should_show_refresh: false,\n    redirectOnClick: jest.fn()\n  };\n  return {\n    is_mock: true,\n    client: {\n      account_settings: {},\n      account_type: 'virtual',\n      accounts: {},\n      active_account_landing_company: '',\n      trading_platform_available_accounts: [],\n      account_limits: {},\n      account_status: {\n        authentication: {\n          attempts: {\n            count: 1,\n            history: [{\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }],\n            latest: {\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }\n          },\n          document: {\n            status: 'verified'\n          },\n          identity: {\n            services: {\n              idv: {\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              },\n              manual: {\n                status: 'none'\n              },\n              onfido: {\n                country_code: 'IDN',\n                documents_supported: ['Driving Licence', 'National Identity Card', 'Passport', 'Residence Permit'],\n                is_country_supported: 1,\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              }\n            },\n            status: 'verified'\n          },\n          income: {\n            status: 'none'\n          },\n          needs_verification: [],\n          ownership: {\n            requests: [],\n            status: 'none'\n          }\n        },\n        currency_config: {\n          USD: {\n            is_deposit_suspended: 0,\n            is_withdrawal_suspended: 0\n          }\n        },\n        p2p_status: 'none',\n        prompt_client_to_authenticate: 0,\n        risk_classification: 'low',\n        status: ['age_verification', 'allow_document_upload', 'authenticated', 'dxtrade_password_not_set', 'financial_information_not_complete', 'idv_disallowed', 'mt5_password_not_set', 'trading_experience_not_complete']\n      },\n      balance: '',\n      can_change_fiat_currency: false,\n      clients_country: '',\n      country_standpoint: {\n        is_belgium: false,\n        is_france: false,\n        is_isle_of_man: false,\n        is_other_eu: false,\n        is_rest_of_eu: false,\n        is_united_kingdom: false\n      },\n      currency: '',\n      currencies_list: [{\n        text: '',\n        value: '',\n        has_tool_tip: false\n      }],\n      current_currency_type: '',\n      current_fiat_currency: '',\n      cfd_score: 0,\n      ctrader_accounts_list: [],\n      setCFDScore: jest.fn(),\n      getLimits: jest.fn(),\n      has_active_real_account: false,\n      has_fiat: false,\n      has_logged_out: false,\n      has_maltainvest_account: false,\n      has_restricted_mt5_account: false,\n      initialized_broadcast: false,\n      is_account_setting_loaded: false,\n      is_authorize: false,\n      is_deposit_lock: false,\n      is_dxtrade_allowed: false,\n      is_dxtrade_password_not_set: false,\n      is_eu: false,\n      is_eu_country: false,\n      has_residence: false,\n      is_financial_account: false,\n      is_financial_assessment_needed: false,\n      is_financial_information_incomplete: false,\n      is_low_risk: false,\n      is_identity_verification_needed: false,\n      is_landing_company_loaded: false,\n      is_logged_in: false,\n      is_logging_in: false,\n      is_mt5_password_not_set: false,\n      is_pending_proof_of_ownership: false,\n      is_poa_expired: false,\n      is_populating_dxtrade_account_list: false,\n      is_social_signup: false,\n      is_single_currency: false,\n      is_switching: false,\n      is_tnc_needed: false,\n      is_high_risk: false,\n      is_trading_experience_incomplete: false,\n      is_unwelcome: false,\n      is_virtual: false,\n      is_withdrawal_lock: false,\n      is_populating_account_list: false,\n      landing_company_shortcode: '',\n      local_currency_config: {\n        currency: '',\n        decimal_places: 0\n      },\n      loginid: '',\n      pre_switch_broadcast: false,\n      residence: '',\n      is_svg: false,\n      responseMt5LoginList: jest.fn(),\n      responseTradingPlatformAccountsList: jest.fn(),\n      setFinancialAndTradingAssessment: jest.fn(),\n      standpoint: {\n        financial_company: '',\n        gaming_company: '',\n        maltainvest: false,\n        svg: false,\n        iom: false,\n        malta: false\n      },\n      switchAccount: jest.fn(),\n      verification_code: {\n        payment_agent_withdraw: '',\n        payment_withdraw: '',\n        request_email: '',\n        reset_password: '',\n        signup: '',\n        system_email_change: '',\n        trading_platform_dxtrade_password_reset: '',\n        trading_platform_mt5_password_reset: ''\n      },\n      email: '',\n      setVerificationCode: jest.fn(),\n      updateAccountStatus: jest.fn(),\n      is_authentication_needed: false,\n      authentication_status: {\n        document_status: '',\n        identity_status: ''\n      },\n      mt5_login_list: [],\n      logout: jest.fn(),\n      should_allow_authentication: false,\n      active_accounts: [],\n      account_list: [],\n      available_crypto_currencies: [],\n      selectCurrency: jest.fn(),\n      setAccountStatus: jest.fn(),\n      setBalanceOtherAccounts: jest.fn(),\n      setInitialized: jest.fn(),\n      setLogout: jest.fn(),\n      setVisibilityRealityCheck: jest.fn(),\n      setP2pAdvertiserInfo: jest.fn(),\n      setPreSwitchAccount: jest.fn(),\n      social_identity_provider: '',\n      switched: false,\n      switch_broadcast: false,\n      switchEndSignal: jest.fn(),\n      is_uk: false,\n      isEligibleForMoreRealMt5: jest.fn(),\n      isEligibleForMoreDemoMt5Svg: jest.fn(),\n      updateMT5Status: jest.fn(),\n      fetchResidenceList: jest.fn(),\n      residence_list: [],\n      should_restrict_bvi_account_creation: false,\n      should_restrict_vanuatu_account_creation: false,\n      fetchAccountSettings: jest.fn(),\n      setAccountSettings: jest.fn(),\n      upgradeable_landing_companies: [],\n      is_populating_mt5_account_list: false,\n      landing_companies: {},\n      landing_company: {},\n      upgradeable_currencies: [],\n      getChangeableFields: jest.fn(),\n      isAccountOfTypeDisabled: jest.fn(),\n      is_mt5_allowed: false,\n      mt5_disabled_signup_types: {\n        real: false,\n        demo: false\n      },\n      dxtrade_disabled_signup_types: {\n        real: false,\n        demo: false\n      },\n      dxtrade_accounts_list_error: null,\n      has_account_error_in_mt5_demo_list: false,\n      has_account_error_in_mt5_real_list: false,\n      has_account_error_in_dxtrade_demo_list: false,\n      has_account_error_in_dxtrade_real_list: false,\n      website_status: {\n        dx_trade_status: {\n          all: 0,\n          demo: 0,\n          real: 0\n        },\n        mt5_status: {\n          real: [],\n          demo: []\n        }\n      },\n      is_fully_authenticated: false,\n      states_list: [],\n      fetchStatesList: jest.fn(),\n      is_crypto: jest.fn(),\n      dxtrade_accounts_list: [],\n      default_currency: 'USD',\n      resetVirtualBalance: jest.fn(),\n      has_enabled_two_fa: false,\n      setTwoFAStatus: jest.fn(),\n      has_changed_two_fa: false,\n      setTwoFAChangedStatus: jest.fn(),\n      real_account_creation_unlock_date: '',\n      has_any_real_account: false,\n      setPrevAccountType: jest.fn(),\n      prev_account_type: 'demo',\n      is_beta_chart: true,\n      setLoginInformation: jest.fn(),\n      init: jest.fn(),\n      setLoginId: jest.fn(),\n      resetLocalStorageValues: jest.fn(),\n      setIsAlreadyAttempted: jest.fn(),\n      is_already_attempted: false,\n      account_open_date: undefined\n    },\n    common: {\n      error: common_store_error,\n      current_language: 'EN',\n      isCurrentLanguage: jest.fn(),\n      is_from_derivgo: false,\n      is_socket_opened: false,\n      has_error: false,\n      platform: '',\n      routeBackInApp: jest.fn(),\n      routeTo: jest.fn(),\n      changeCurrentLanguage: jest.fn(),\n      changeSelectedLanguage: jest.fn(),\n      is_network_online: false,\n      network_status: {},\n      services_error: {},\n      server_time: new Date(),\n      setError: jest.fn(),\n      setSelectedContractType: jest.fn(),\n      setServicesError: jest.fn(),\n      showError: jest.fn(),\n      is_language_changing: false,\n      setAppstorePlatform: jest.fn(),\n      app_routing_history: [],\n      getExchangeRate: jest.fn()\n    },\n    ui: {\n      advanced_duration_unit: 't',\n      advanced_expiry_type: 'duration',\n      account_switcher_disabled_message: '',\n      app_contents_scroll_ref: {\n        current: null\n      },\n      current_focus: null,\n      duration_t: 5,\n      getDurationFromUnit: jest.fn(),\n      is_account_settings_visible: false,\n      is_advanced_duration: false,\n      is_loading: false,\n      is_cashier_visible: false,\n      is_wallet_modal_visible: false,\n      is_chart_layout_default: false,\n      is_closing_create_real_account_modal: false,\n      is_dark_mode_on: false,\n      is_language_settings_modal_on: false,\n      is_desktop: false,\n      is_app_disabled: false,\n      has_only_forward_starting_contracts: false,\n      header_extension: null,\n      is_link_expired_modal_visible: false,\n      is_mobile: false,\n      is_tablet: false,\n      is_mobile_language_menu_open: false,\n      is_positions_drawer_on: false,\n      is_reports_visible: false,\n      is_route_modal_on: false,\n      is_services_error_visible: false,\n      is_unsupported_contract_modal_visible: false,\n      disableApp: jest.fn(),\n      enableApp: jest.fn(),\n      setCurrentFocus: jest.fn(),\n      toggleAccountsDialog: jest.fn(),\n      toggleAccountSettings: jest.fn(),\n      toggleCashier: jest.fn(),\n      setDarkMode: jest.fn(),\n      setReportsTabIndex: jest.fn(),\n      has_real_account_signup_ended: false,\n      real_account_signup_target: '',\n      real_account_signup: {\n        active_modal_index: -1,\n        previous_currency: '',\n        current_currency: '',\n        success_message: '',\n        error_message: ''\n      },\n      resetRealAccountSignupParams: jest.fn(),\n      notification_messages_ui: jest.fn(),\n      openPositionsDrawer: jest.fn(),\n      openRealAccountSignup: jest.fn(),\n      onChangeUiStore: jest.fn(),\n      setChartCountdown: jest.fn(),\n      setIsWalletModalVisible: jest.fn(),\n      setHasOnlyForwardingContracts: jest.fn(),\n      setIsClosingCreateRealAccountModal: jest.fn(),\n      setMobileLanguageMenuOpen: jest.fn(),\n      setRealAccountSignupEnd: jest.fn(),\n      setPromptHandler: jest.fn(),\n      setPurchaseState: jest.fn(),\n      setAppContentsScrollRef: jest.fn(),\n      shouldNavigateAfterChooseCrypto: jest.fn(),\n      toggleLanguageSettingsModal: jest.fn(),\n      togglePositionsDrawer: jest.fn(),\n      toggleLinkExpiredModal: jest.fn(),\n      toggleServicesErrorModal: jest.fn(),\n      toggleSetCurrencyModal: jest.fn(),\n      addToast: jest.fn(),\n      removeToast: jest.fn(),\n      resetPurchaseStates: jest.fn(),\n      reports_route_tab_index: 1,\n      should_show_cancellation_warning: false,\n      toggleCancellationWarning: jest.fn(),\n      toggleUnsupportedContractModal: jest.fn(),\n      toggleReports: jest.fn(),\n      setSubSectionIndex: jest.fn(),\n      sub_section_index: 0,\n      toggleReadyToDepositModal: jest.fn(),\n      is_ready_to_deposit_modal_visible: false,\n      is_real_acc_signup_on: false,\n      is_need_real_account_for_cashier_modal_visible: false,\n      is_mt5_migration_modal_enabled: false,\n      is_mt5_migration_modal_open: false,\n      toggleNeedRealAccountForCashierModal: jest.fn(),\n      is_switch_to_deriv_account_modal_visible: false,\n      openSwitchToRealAccountModal: jest.fn(),\n      is_top_up_virtual_open: false,\n      is_top_up_virtual_in_progress: false,\n      is_top_up_virtual_success: false,\n      closeTopUpModal: jest.fn(),\n      closeSuccessTopUpModal: jest.fn(),\n      is_cfd_reset_password_modal_enabled: false,\n      setCFDPasswordResetModal: jest.fn(),\n      openDerivRealAccountNeededModal: jest.fn(),\n      populateHeaderExtensions: jest.fn(),\n      populateSettingsExtensions: jest.fn(),\n      purchase_states: [],\n      setShouldShowCooldownModal: jest.fn(),\n      populateFooterExtensions: jest.fn(),\n      openAccountNeededModal: jest.fn(),\n      is_accounts_switcher_on: false,\n      openTopUpModal: jest.fn(),\n      toggleShouldShowRealAccountsList: jest.fn(),\n      is_reset_trading_password_modal_visible: false,\n      setResetTradingPasswordModalOpen: jest.fn(),\n      setMT5MigrationModalEnabled: jest.fn(),\n      toggleMT5MigrationModal: jest.fn(),\n      vanilla_trade_type: 'VANILLALONGCALL',\n      is_chart_countdown_visible: false,\n      is_additional_kyc_info_modal_open: false,\n      simple_duration_unit: 't',\n      toggleAdditionalKycInfoModal: jest.fn(),\n      is_kyc_information_submitted_modal_open: false,\n      toggleKycInformationSubmittedModal: jest.fn()\n    },\n    traders_hub: {\n      getAccount: jest.fn(),\n      closeModal: jest.fn(),\n      combined_cfd_mt5_accounts: [],\n      available_cfd_accounts: [],\n      content_flag: '',\n      CFDs_restricted_countries: false,\n      openModal: jest.fn(),\n      selected_account: {\n        login: '',\n        account_id: ''\n      },\n      is_eu_user: false,\n      is_demo: false,\n      is_onboarding_visited: false,\n      is_first_time_visit: true,\n      setIsOnboardingVisited: jest.fn(),\n      setIsFirstTimeVisit: jest.fn(),\n      is_real: false,\n      selectRegion: jest.fn(),\n      setSelectedAccount: jest.fn(),\n      is_low_risk_cr_eu_real: false,\n      is_real_wallets_upgrade_on: false,\n      toggleWalletsUpgrade: jest.fn(),\n      show_eu_related_content: false,\n      platform_real_balance: {\n        currency: '',\n        balance: 0\n      },\n      cfd_demo_balance: {\n        currency: '',\n        balance: 0\n      },\n      platform_demo_balance: {\n        currency: '',\n        balance: 0\n      },\n      cfd_real_balance: {\n        currency: '',\n        balance: 0\n      },\n      closeAccountTransferModal: jest.fn(),\n      toggleRegulatorsCompareModal: jest.fn(),\n      financial_restricted_countries: false,\n      selected_account_type: 'real',\n      no_CR_account: false,\n      no_MF_account: false,\n      modal_data: {\n        active_modal: '',\n        data: {}\n      },\n      multipliers_account_status: '',\n      openFailedVerificationModal: jest.fn(),\n      setTogglePlatformType: jest.fn(),\n      toggleAccountTransferModal: jest.fn(),\n      selectAccountType: jest.fn(),\n      is_wallet_migration_failed: false,\n      setWalletsMigrationFailedPopup: jest.fn(),\n      selected_platform_type: '',\n      available_platforms: [],\n      selected_region: 'All',\n      getExistingAccounts: jest.fn(),\n      available_dxtrade_accounts: [],\n      toggleAccountTypeModalVisibility: jest.fn(),\n      active_modal_tab: 'Deposit',\n      setWalletModalActiveTab: jest.fn(),\n      active_modal_wallet_id: '',\n      setWalletModalActiveWalletID: jest.fn(),\n      available_ctrader_accounts: [],\n      toggleIsTourOpen: jest.fn(),\n      is_demo_low_risk: false,\n      is_mt5_notification_modal_visible: false,\n      setMT5NotificationModal: jest.fn(),\n      has_any_real_account: false,\n      startTrade: jest.fn(),\n      showTopUpModal: jest.fn()\n    },\n    notifications: {\n      addNotificationMessage: jest.fn(),\n      addNotificationMessageByKey: jest.fn(),\n      client_notifications: {},\n      is_notifications_empty: true,\n      is_notifications_visible: false,\n      filterNotificationMessages: jest.fn(),\n      notifications: [],\n      refreshNotifications: jest.fn(),\n      removeAllNotificationMessages: jest.fn(),\n      removeNotifications: jest.fn(),\n      removeNotificationByKey: jest.fn(),\n      removeNotificationMessage: jest.fn(),\n      removeNotificationMessageByKey: jest.fn(),\n      setP2POrderProps: jest.fn(),\n      setP2PRedirectTo: jest.fn(),\n      showAccountSwitchToRealNotification: jest.fn(),\n      setShouldShowPopups: jest.fn(),\n      toggleNotificationsModal: jest.fn()\n    },\n    portfolio: {\n      active_positions: [],\n      active_positions_count: 0,\n      all_positions: [],\n      barriers: [],\n      error: '',\n      getPositionById: jest.fn(),\n      is_loading: false,\n      is_accumulator: false,\n      is_multiplier: false,\n      is_turbos: false,\n      onBuyResponse: jest.fn(),\n      onHoverPosition: jest.fn(),\n      onClickCancel: jest.fn(),\n      onClickSell: jest.fn(),\n      onMount: jest.fn(),\n      onUnmount: jest.fn(),\n      open_accu_contract: null,\n      positions: [],\n      removePositionById: jest.fn(),\n      setContractType: jest.fn()\n    },\n    contract_trade: {\n      accountSwitchListener: jest.fn(),\n      accu_barriers_timeout_id: null,\n      accumulator_barriers_data: {},\n      accumulator_contract_barriers_data: {},\n      addContract: jest.fn(),\n      chart_type: '',\n      clearAccumulatorBarriersData: jest.fn(),\n      clearError: jest.fn(),\n      contracts: [],\n      error_message: '',\n      filtered_contracts: [],\n      getContractById: jest.fn(),\n      granularity: 0,\n      has_crossed_accu_barriers: false,\n      has_error: false,\n      last_contract: {},\n      markers_array: [],\n      onUnmount: jest.fn(),\n      prev_chart_type: '',\n      prev_granularity: null,\n      removeContract: jest.fn(),\n      savePreviousChartMode: jest.fn(),\n      setNewAccumulatorBarriersData: jest.fn(),\n      updateAccumulatorBarriersData: jest.fn(),\n      updateChartType: jest.fn(),\n      updateGranularity: jest.fn(),\n      updateProposal: jest.fn()\n    },\n    modules: {\n      cfd: {\n        setMT5MigrationError: jest.fn(),\n        migrated_mt5_accounts: [],\n        mt5_migration_error: '',\n        enableCFDPasswordModal: jest.fn(),\n        setJurisdictionSelectedShortcode: jest.fn(),\n        setAccountType: jest.fn(),\n        setMigratedMT5Accounts: jest.fn()\n      }\n    },\n    feature_flags: {\n      data: undefined,\n      update: jest.fn(),\n      unmount: jest.fn()\n    },\n    gtm: {\n      is_gtm_applicable: false,\n      visitorId: 'visitorId',\n      common_variables: {\n        language: 'en',\n        theme: 'dark',\n        platform: 'DBot',\n        loggedIn: false\n      },\n      accountSwitcherListener: jest.fn(),\n      pushDataLayer: jest.fn(),\n      pushTransactionData: jest.fn(),\n      eventHandler: jest.fn(),\n      setLoginFlag: jest.fn()\n    },\n    pushwoosh: {},\n    contract_replay: {\n      contract_store: {\n        contract_info: {},\n        digits_info: {},\n        display_status: '',\n        is_digit_contract: false,\n        is_ended: false\n      },\n      removeErrorMessage: jest.fn(),\n      error_message: ''\n    },\n    chart_barrier_store: {},\n    active_symbols: {\n      active_symbols: [],\n      setActiveSymbols: jest.fn()\n    }\n  };\n};\nvar mockStore = function mockStore(override) {\n  return merge(mock(), override);\n};\n/* harmony default export */ const src_mockStore = ((/* unused pure expression or super */ null && (mockStore)));\n;// CONCATENATED MODULE: ../../stores/src/storeContext.ts\n\nvar storeContext_StoreContext = /*#__PURE__*/(0,external_react_.createContext)(null);\n/* harmony default export */ const storeContext = (storeContext_StoreContext);\n// EXTERNAL MODULE: ../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\nvar dist_DerivAPIBasic = __webpack_require__(\"../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\n// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => utils_isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || utils_isPlainObject(a) && utils_isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction utils_isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\nconst defaultLogger = console;\n\n\n//# sourceMappingURL=logger.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\n\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\n\n//# sourceMappingURL=notifyManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\nclass Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\n\n//# sourceMappingURL=subscribable.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\n\n\n\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\n\n//# sourceMappingURL=focusManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\n\n\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\n\n//# sourceMappingURL=onlineManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n\n//# sourceMappingURL=retryer.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\n\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=removable.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/query.mjs\n\n\n\n\n\n\n// CLASS\nclass Query extends Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (false) {}\n\n    const abortController = getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (false) {}\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (false) {}\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\n\n//# sourceMappingURL=query.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryCache.mjs\n\n\n\n\n\n// CLASS\nclass QueryCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => matchQuery(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => matchQuery(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=queryCache.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs\n\n\n\n\n\n// CLASS\nclass Mutation extends Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || defaultLogger;\n    this.observers = [];\n    this.state = config.state || mutation_getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (false) {}\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction mutation_getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\n\n//# sourceMappingURL=mutation.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\n\n\n\n\n\n// CLASS\nclass MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\n\n//# sourceMappingURL=mutationCache.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\n\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n\n\n\n\n\n\n\n\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if (false) {}\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = functionalUpdate(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    return notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\n\n//# sourceMappingURL=queryClient.mjs.map\n\n;// CONCATENATED MODULE: ../../api/src/APIProvider.tsx\nfunction APIProvider_slicedToArray(arr, i) { return APIProvider_arrayWithHoles(arr) || APIProvider_iterableToArrayLimit(arr, i) || APIProvider_unsupportedIterableToArray(arr, i) || APIProvider_nonIterableRest(); }\nfunction APIProvider_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction APIProvider_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return APIProvider_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return APIProvider_arrayLikeToArray(o, minLen); }\nfunction APIProvider_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction APIProvider_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction APIProvider_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// @ts-expect-error `@deriv/deriv-api` is not in TypeScript, Hence we ignore the TS error.\n\n\n\nvar APIContext = /*#__PURE__*/(/* unused pure expression or super */ null && (createContext(null)));\n// This is a temporary workaround to share a single `QueryClient` instance between all the packages.\nvar getSharedQueryClientContext = function getSharedQueryClientContext() {\n  if (!window.ReactQueryClient) {\n    window.ReactQueryClient = new QueryClient({\n      logger: {\n        log: console.log,\n        // eslint-disable-line no-console\n        warn: console.warn,\n        // eslint-disable-line no-console\n        error: function error() {\n          return null;\n        }\n      }\n    });\n  }\n  return window.ReactQueryClient;\n};\n\n/**\n * Retrieves the WebSocket URL based on the current environment.\n * @returns {string} The WebSocket URL.\n */\nvar getWebSocketURL = function getWebSocketURL() {\n  var endpoint = getSocketURL();\n  var app_id = getAppId();\n  var language = localStorage.getItem('i18n_language');\n  var brand = 'deriv';\n  var wss_url = \"wss://\".concat(endpoint, \"/websockets/v3?app_id=\").concat(app_id, \"&l=\").concat(language, \"&brand=\").concat(brand);\n  return wss_url;\n};\n\n/**\n * Retrieves or initializes a WebSocket instance based on the provided URL.\n * @param {string} wss_url - The WebSocket URL.\n * @returns {WebSocket} The WebSocket instance associated with the provided URL.\n */\nvar getWebsocketInstance = function getWebsocketInstance(wss_url, onWSClose) {\n  if (!window.WSConnections) {\n    window.WSConnections = {};\n  }\n  var existingWebsocketInstance = window.WSConnections[wss_url];\n  if (!existingWebsocketInstance || !(existingWebsocketInstance instanceof WebSocket) || [2, 3].includes(existingWebsocketInstance.readyState)) {\n    window.WSConnections[wss_url] = new WebSocket(wss_url);\n    window.WSConnections[wss_url].addEventListener('close', function () {\n      if (typeof onWSClose === 'function') onWSClose();\n    });\n  }\n  return window.WSConnections[wss_url];\n};\n\n/**\n * Retrieves the active WebSocket instance.\n * @returns {WebSocket} The WebSocket instance associated with the provided URL.\n */\nvar APIProvider_getActiveWebsocket = function getActiveWebsocket() {\n  var _window, _window$WSConnections;\n  var wss_url = getWebSocketURL();\n  return (_window = window) === null || _window === void 0 ? void 0 : (_window$WSConnections = _window.WSConnections) === null || _window$WSConnections === void 0 ? void 0 : _window$WSConnections[wss_url];\n};\n\n/**\n * Initializes a DerivAPI instance for the global window. This enables a standalone connection\n * without causing race conditions with deriv-app core stores.\n * @returns {DerivAPIBasic} The initialized DerivAPI instance.\n */\nvar initializeDerivAPI = function initializeDerivAPI(onWSClose) {\n  var _window$DerivAPI, _window$DerivAPI2, _window$DerivAPI3;\n  if (!window.DerivAPI) {\n    window.DerivAPI = {};\n  }\n  var wss_url = getWebSocketURL();\n  var websocketConnection = getWebsocketInstance(wss_url, onWSClose);\n  if (!((_window$DerivAPI = window.DerivAPI) !== null && _window$DerivAPI !== void 0 && _window$DerivAPI[wss_url]) || (_window$DerivAPI2 = window.DerivAPI) !== null && _window$DerivAPI2 !== void 0 && _window$DerivAPI2[wss_url].isConnectionClosed()) {\n    window.DerivAPI[wss_url] = new DerivAPIBasic({\n      connection: websocketConnection\n    });\n  }\n  return (_window$DerivAPI3 = window.DerivAPI) === null || _window$DerivAPI3 === void 0 ? void 0 : _window$DerivAPI3[wss_url];\n};\nvar queryClient = getSharedQueryClientContext();\n\n/**\n * Determines the WS environment based on the login ID and custom server URL.\n * @param {string | null | undefined} loginid - The login ID (can be a string, null, or undefined).\n * @returns {string} Returns the WS environment: 'custom', 'real', or 'demo'.\n */\nvar getEnvironment = function getEnvironment(loginid) {\n  var customServerURL = window.localStorage.getItem('config.server_url');\n  if (customServerURL) return 'custom';\n  if (loginid && !/^(VRT|VRW)/.test(loginid)) return 'real';\n  return 'demo';\n};\nvar APIProvider_APIProvider = function APIProvider(_ref) {\n  var children = _ref.children,\n    _ref$standalone = _ref.standalone,\n    standalone = _ref$standalone === void 0 ? false : _ref$standalone;\n  var WS = useWS();\n  var _useState = useState(false),\n    _useState2 = APIProvider_slicedToArray(_useState, 2),\n    reconnect = _useState2[0],\n    setReconnect = _useState2[1];\n  var activeLoginid = window.localStorage.getItem('active_loginid');\n  var _useState3 = useState(getEnvironment(activeLoginid)),\n    _useState4 = APIProvider_slicedToArray(_useState3, 2),\n    environment = _useState4[0],\n    setEnvironment = _useState4[1];\n  var standaloneDerivAPI = useRef(standalone ? initializeDerivAPI(function () {\n    return setReconnect(true);\n  }) : null);\n  var switchEnvironment = function switchEnvironment(loginid) {\n    if (!standalone) return;\n    var currentEnvironment = getEnvironment(loginid);\n    if (currentEnvironment !== 'custom' && currentEnvironment !== environment) {\n      setEnvironment(currentEnvironment);\n    }\n  };\n  useEffect(function () {\n    var interval_id;\n    if (standalone) {\n      interval_id = setInterval(function () {\n        var _standaloneDerivAPI$c;\n        return (_standaloneDerivAPI$c = standaloneDerivAPI.current) === null || _standaloneDerivAPI$c === void 0 ? void 0 : _standaloneDerivAPI$c.send({\n          ping: 1\n        });\n      }, 10000);\n    }\n    return function () {\n      return clearInterval(interval_id);\n    };\n  }, [standalone]);\n  useEffect(function () {\n    var reconnectTimerId;\n    if (standalone || reconnect) {\n      standaloneDerivAPI.current = initializeDerivAPI(function () {\n        reconnectTimerId = setTimeout(function () {\n          return setReconnect(true);\n        }, 500);\n      });\n      setReconnect(false);\n    }\n    return function () {\n      return clearTimeout(reconnectTimerId);\n    };\n  }, [environment, reconnect, standalone]);\n  return /*#__PURE__*/React.createElement(APIContext.Provider, {\n    value: {\n      derivAPI: standalone ? standaloneDerivAPI.current : WS,\n      switchEnvironment: switchEnvironment\n    }\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient\n  }, children));\n};\nvar APIProvider_useAPIContext = function useAPIContext() {\n  var context = useContext(APIContext);\n  if (!context) {\n    throw new Error('useAPIContext must be used within APIProvider');\n  }\n  return context;\n};\n/* harmony default export */ const src_APIProvider = ((/* unused pure expression or super */ null && (APIProvider_APIProvider)));\n;// CONCATENATED MODULE: ../../api/src/useAPI.ts\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { useAPI_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAPI_defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nvar useAPI_useAPI = function useAPI() {\n  var _useAPIContext = useAPIContext(),\n    derivAPI = _useAPIContext.derivAPI;\n  var send = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, payload) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return derivAPI === null || derivAPI === void 0 ? void 0 : derivAPI.send(_objectSpread(useAPI_defineProperty({}, name, 1), payload || {}));\n            case 2:\n              response = _context.sent;\n              if (!response.error) {\n                _context.next = 5;\n                break;\n              }\n              throw response.error;\n            case 5:\n              return _context.abrupt(\"return\", response);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [derivAPI]);\n  var subscribe = useCallback(function (name, payload) {\n    var _objectSpread3;\n    return derivAPI === null || derivAPI === void 0 ? void 0 : derivAPI.subscribe(_objectSpread((_objectSpread3 = {}, useAPI_defineProperty(_objectSpread3, name, 1), useAPI_defineProperty(_objectSpread3, \"subscribe\", 1), _objectSpread3), payload || {}));\n  }, [derivAPI]);\n  return {\n    send: send,\n    subscribe: subscribe\n  };\n};\n/* harmony default export */ const src_useAPI = ((/* unused pure expression or super */ null && (useAPI_useAPI)));\n;// CONCATENATED MODULE: ../../api/src/useInfiniteQuery.ts\nfunction useInfiniteQuery_typeof(obj) { \"@babel/helpers - typeof\"; return useInfiniteQuery_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useInfiniteQuery_typeof(obj); }\nfunction useInfiniteQuery_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useInfiniteQuery_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useInfiniteQuery_ownKeys(Object(source), !0).forEach(function (key) { useInfiniteQuery_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useInfiniteQuery_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useInfiniteQuery_defineProperty(obj, key, value) { key = useInfiniteQuery_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useInfiniteQuery_toPropertyKey(arg) { var key = useInfiniteQuery_toPrimitive(arg, \"string\"); return useInfiniteQuery_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useInfiniteQuery_toPrimitive(input, hint) { if (useInfiniteQuery_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useInfiniteQuery_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nvar useInfiniteQuery_useInfiniteQuery = function useInfiniteQuery(name) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var _useAPI = useAPI(),\n    send = _useAPI.send;\n  var initial_offset = (payload === null || payload === void 0 ? void 0 : payload.offset) || 0;\n  var limit = (payload === null || payload === void 0 ? void 0 : payload.limit) || 50;\n  return _useInfiniteQuery(getQueryKeys(name, payload), function (_ref) {\n    var _ref$pageParam = _ref.pageParam,\n      pageParam = _ref$pageParam === void 0 ? 0 : _ref$pageParam;\n    return send(name, useInfiniteQuery_objectSpread(useInfiniteQuery_objectSpread({}, payload), {}, {\n      limit: limit,\n      offset: pageParam * limit + initial_offset\n    }));\n  }, useInfiniteQuery_objectSpread(useInfiniteQuery_objectSpread({}, options), {}, {\n    getNextPageParam: options !== null && options !== void 0 && options.getNextPageParam ? options.getNextPageParam : function (_lastPage, pages) {\n      return pages.length;\n    }\n  }));\n};\n/* harmony default export */ const src_useInfiniteQuery = ((/* unused pure expression or super */ null && (useInfiniteQuery_useInfiniteQuery)));\n;// CONCATENATED MODULE: ../../api/src/useMutation.ts\nfunction useMutation_typeof(obj) { \"@babel/helpers - typeof\"; return useMutation_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useMutation_typeof(obj); }\nvar _excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useMutation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useMutation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useMutation_ownKeys(Object(source), !0).forEach(function (key) { useMutation_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useMutation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useMutation_defineProperty(obj, key, value) { key = useMutation_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useMutation_toPropertyKey(arg) { var key = useMutation_toPrimitive(arg, \"string\"); return useMutation_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useMutation_toPrimitive(input, hint) { if (useMutation_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useMutation_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useMutation_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useMutation_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useMutation_useMutation = function useMutation(name, options) {\n  var _useAPI = useAPI(),\n    send = _useAPI.send;\n  var _useMutation2 = _useMutation(function (props) {\n      var prop = props === null || props === void 0 ? void 0 : props[0];\n      var payload = prop && 'payload' in prop ? prop.payload : undefined;\n      return send(name, payload);\n    }, options),\n    _mutate = _useMutation2.mutate,\n    _mutateAsync = _useMutation2.mutateAsync,\n    rest = _objectWithoutProperties(_useMutation2, _excluded);\n  var mutate = useCallback(function () {\n    for (var _len = arguments.length, payload = new Array(_len), _key = 0; _key < _len; _key++) {\n      payload[_key] = arguments[_key];\n    }\n    return _mutate(payload);\n  }, [_mutate]);\n  var mutateAsync = useCallback(function () {\n    for (var _len2 = arguments.length, payload = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      payload[_key2] = arguments[_key2];\n    }\n    return _mutateAsync(payload);\n  }, [_mutateAsync]);\n  return useMutation_objectSpread({\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const src_useMutation = ((/* unused pure expression or super */ null && (useMutation_useMutation)));\n;// CONCATENATED MODULE: ../../api/src/useQuery.ts\n\n\n\nvar useQuery_useQuery = function useQuery(name) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var _useAPI = useAPI(),\n    send = _useAPI.send;\n  return _useQuery(getQueryKeys(name, payload), function () {\n    return send(name, payload);\n  }, options);\n};\n/* harmony default export */ const src_useQuery = ((/* unused pure expression or super */ null && (useQuery_useQuery)));\n// EXTERNAL MODULE: ../../../node_modules/lodash.groupby/index.js\nvar lodash_groupby = __webpack_require__(\"../../../node_modules/lodash.groupby/index.js\");\n// EXTERNAL MODULE: ../../../node_modules/lodash.pickby/index.js\nvar lodash_pickby = __webpack_require__(\"../../../node_modules/lodash.pickby/index.js\");\n// EXTERNAL MODULE: ../../../node_modules/moment/moment.js\nvar moment_moment = __webpack_require__(\"../../../node_modules/moment/moment.js\");\n;// CONCATENATED MODULE: ../../utils/src/groupTransactionsByDay.ts\n\n\n\nvar groupTransactionsByDay = function groupTransactionsByDay(transactions) {\n  var grouped_transactions = pickBy(groupBy(transactions, function (transaction) {\n    return transaction.transaction_time ? moment(transaction.transaction_time * 1000).startOf('day').format('DD MMM YYYY') : null;\n  }), function (value, key) {\n    return key !== null;\n  });\n  return grouped_transactions;\n};\n/* harmony default export */ const src_groupTransactionsByDay = ((/* unused pure expression or super */ null && (groupTransactionsByDay)));\n;// CONCATENATED MODULE: ../../utils/src/index.ts\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../api/src/useInvalidateQuery.ts\n\n\nvar useInvalidateQuery_useInvalidateQuery = function useInvalidateQuery() {\n  var queryClient = useQueryClient();\n  var invalidate = useCallback(function (name, options) {\n    return queryClient.invalidateQueries(Array.isArray(name) ? name : [name], options);\n  }, [queryClient]);\n  return invalidate;\n};\n/* harmony default export */ const src_useInvalidateQuery = ((/* unused pure expression or super */ null && (useInvalidateQuery_useInvalidateQuery)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAuthorize.ts\nfunction useAuthorize_typeof(obj) { \"@babel/helpers - typeof\"; return useAuthorize_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAuthorize_typeof(obj); }\nvar useAuthorize_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAuthorize_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAuthorize_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAuthorize_ownKeys(Object(source), !0).forEach(function (key) { useAuthorize_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAuthorize_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAuthorize_defineProperty(obj, key, value) { key = useAuthorize_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAuthorize_toPropertyKey(arg) { var key = useAuthorize_toPrimitive(arg, \"string\"); return useAuthorize_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAuthorize_toPrimitive(input, hint) { if (useAuthorize_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAuthorize_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAuthorize_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAuthorize_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAuthorize_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/** A custom hook that authorize the user with the given token. If no token is given,\n * it will use the current token from localStorage.\n */\nvar useAuthorize_useAuthorize = function useAuthorize() {\n  var current_token = getActiveAuthTokenIDFromLocalStorage();\n  var invalidate = useInvalidateQuery();\n  var _useAPIContext = useAPIContext(),\n    switchEnvironment = _useAPIContext.switchEnvironment;\n  var _useQuery = useQuery('authorize', {\n      payload: {\n        authorize: current_token || ''\n      },\n      options: {\n        enabled: Boolean(current_token)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAuthorize_objectWithoutProperties(_useQuery, useAuthorize_excluded);\n\n  // Add additional information to the authorize response.\n  var modified_authorize = useMemo(function () {\n    return useAuthorize_objectSpread({}, data === null || data === void 0 ? void 0 : data.authorize);\n  }, [data === null || data === void 0 ? void 0 : data.authorize]);\n  var switchAccount = useCallback(function (loginid) {\n    var active_loginid = getActiveLoginIDFromLocalStorage();\n    if (active_loginid !== loginid) {\n      localStorage.setItem('active_loginid', loginid);\n      switchEnvironment(active_loginid);\n      invalidate('authorize');\n    }\n  }, [invalidate, switchEnvironment]);\n  return useAuthorize_objectSpread({\n    /** The authorize response. */\n    data: modified_authorize,\n    /** Function to switch to another account */\n    switchAccount: switchAccount\n  }, rest);\n};\n/* harmony default export */ const hooks_useAuthorize = ((/* unused pure expression or super */ null && (useAuthorize_useAuthorize)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountLimits.ts\nfunction useAccountLimits_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountLimits_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountLimits_typeof(obj); }\nvar useAccountLimits_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountLimits_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountLimits_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountLimits_ownKeys(Object(source), !0).forEach(function (key) { useAccountLimits_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountLimits_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountLimits_defineProperty(obj, key, value) { key = useAccountLimits_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountLimits_toPropertyKey(arg) { var key = useAccountLimits_toPrimitive(arg, \"string\"); return useAccountLimits_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountLimits_toPrimitive(input, hint) { if (useAccountLimits_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountLimits_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountLimits_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountLimits_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountLimits_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get account limits */\nvar useAccountLimits = function useAccountLimits() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('get_limits', {\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAccountLimits_objectWithoutProperties(_useQuery, useAccountLimits_excluded);\n  return useAccountLimits_objectSpread({\n    /** Account limits response */\n    data: data === null || data === void 0 ? void 0 : data.get_limits\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountLimits = ((/* unused pure expression or super */ null && (useAccountLimits)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useGetAccountStatus.ts\nfunction useGetAccountStatus_typeof(obj) { \"@babel/helpers - typeof\"; return useGetAccountStatus_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useGetAccountStatus_typeof(obj); }\nvar useGetAccountStatus_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useGetAccountStatus_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useGetAccountStatus_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useGetAccountStatus_ownKeys(Object(source), !0).forEach(function (key) { useGetAccountStatus_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useGetAccountStatus_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useGetAccountStatus_defineProperty(obj, key, value) { key = useGetAccountStatus_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useGetAccountStatus_toPropertyKey(arg) { var key = useGetAccountStatus_toPrimitive(arg, \"string\"); return useGetAccountStatus_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useGetAccountStatus_toPrimitive(input, hint) { if (useGetAccountStatus_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useGetAccountStatus_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useGetAccountStatus_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useGetAccountStatus_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useGetAccountStatus_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to retrieves the account status for the current user. */\nvar useGetAccountStatus_useGetAccountStatus = function useGetAccountStatus() {\n  var _useQuery = useQuery('get_account_status'),\n    get_account_status_data = _useQuery.data,\n    rest = useGetAccountStatus_objectWithoutProperties(_useQuery, useGetAccountStatus_excluded);\n\n  // Add additional information to the account status response.\n  var modified_account_status = useMemo(function () {\n    if (!(get_account_status_data !== null && get_account_status_data !== void 0 && get_account_status_data.get_account_status)) return;\n    return useGetAccountStatus_objectSpread(useGetAccountStatus_objectSpread({}, get_account_status_data.get_account_status), {}, {\n      /** Indicates whether the client should be prompted to authenticate their account. */\n      should_prompt_client_to_authenticate: Boolean(get_account_status_data.get_account_status.prompt_client_to_authenticate)\n    });\n  }, [get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.get_account_status]);\n  return useGetAccountStatus_objectSpread({\n    /** The account status response. */\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useGetAccountStatus = ((/* unused pure expression or super */ null && (useGetAccountStatus_useGetAccountStatus)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountStatus.ts\nfunction useAccountStatus_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountStatus_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountStatus_typeof(obj); }\nvar useAccountStatus_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountStatus_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountStatus_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountStatus_ownKeys(Object(source), !0).forEach(function (key) { useAccountStatus_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountStatus_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountStatus_defineProperty(obj, key, value) { key = useAccountStatus_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountStatus_toPropertyKey(arg) { var key = useAccountStatus_toPrimitive(arg, \"string\"); return useAccountStatus_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountStatus_toPrimitive(input, hint) { if (useAccountStatus_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountStatus_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountStatus_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountStatus_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountStatus_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to check the account status for the current user. */\nvar useAccountStatus = function useAccountStatus() {\n  var _useGetAccountStatus = useGetAccountStatus(),\n    get_account_status_data = _useGetAccountStatus.data,\n    rest = useAccountStatus_objectWithoutProperties(_useGetAccountStatus, useAccountStatus_excluded);\n\n  // Add additional information to the account status response.\n  var modified_account_status = useMemo(function () {\n    if (!(get_account_status_data !== null && get_account_status_data !== void 0 && get_account_status_data.status)) return;\n    var status = new Set(get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status);\n    return {\n      /** Account status. */\n      status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status,\n      /** client's address is verified by third party services. */\n      is_address_verified: status.has('address_verified'),\n      /** client is allowed to upload documents. */\n      is_allow_document_upload: status.has('allow_document_upload'),\n      /** client is age-verified. */\n      is_age_verification: status.has('age_verification'),\n      /** client is fully authenticated. */\n      is_authenticated: status.has('authenticated'),\n      /** cashier is locked. */\n      is_cashier_locked: status.has('cashier_locked'),\n      /** client has updated tax related information. */\n      is_crs_tin_information: status.has('crs_tin_information'),\n      /** deposit is not allowed. */\n      is_deposit_locked: status.has('deposit_locked'),\n      /** account is disabled. */\n      is_disabled: status.has('disabled'),\n      /** client's submitted proof-of-identity documents have expired. */\n      is_document_expired: status.has('document_expired'),\n      /** client's submitted proof-of-identity documents are expiring within a month. */\n      is_document_expiring_soon: status.has('document_expiring_soon'),\n      /** Deriv X password is not set. */\n      is_dxtrade_password_not_set: status.has('dxtrade_password_not_set'),\n      /** client should complete their financial assessment. */\n      is_financial_assessment_not_complete: status.has('financial_assessment_not_complete'),\n      /** client has not completed financial assessment. */\n      is_financial_information_not_complete: status.has('financial_information_not_complete'),\n      /** client has accepted financial risk disclosure. */\n      is_financial_risk_approval: status.has('financial_risk_approval'),\n      /** client has not set financial limits on their account. Applies to UK and Malta clients. */\n      is_max_turnover_limit_not_set: status.has('max_turnover_limit_not_set'),\n      /** MT5 password is not set. */\n      is_mt5_password_not_set: status.has('mt5_password_not_set'),\n      /** MT5 deposits allowed, but withdrawal is not allowed. */\n      is_mt5_withdrawal_locked: status.has('mt5_withdrawal_locked'),\n      /** user must approve the Affiliate's Code of Conduct Agreement. */\n      is_needs_affiliate_coc_approval: status.has('needs_affiliate_coc_approval'),\n      /** trading is disabled. */\n      is_no_trading: status.has('no_trading'),\n      /** client cannot trade or withdraw but can deposit. */\n      is_no_withdrawal_or_trading: status.has('no_withdrawal_or_trading'),\n      /** p2p is blocked for the current payment agent client. */\n      is_p2p_blocked_for_pa: status.has('p2p_blocked_for_pa'),\n      /** withdrawal through payment agent is allowed. */\n      is_pa_withdrawal_explicitly_allowed: status.has('pa_withdrawal_explicitly_allowed'),\n      /** this client must reset their password. */\n      is_password_reset_required: status.has('password_reset_required'),\n      /** this client has opted for a professional account. */\n      is_professional: status.has('professional'),\n      /** this client has requested for a professional account. */\n      is_professional_requested: status.has('professional_requested'),\n      /** this client's request for a professional account has been rejected. */\n      is_professional_rejected: status.has('professional_rejected'),\n      /** this client is using social signup. */\n      is_social_signup: status.has('social_signup'),\n      /** client has not completed the trading experience questionnaire. */\n      is_trading_experience_not_complete: status.has('trading_experience_not_complete'),\n      /** client has acknowledged UKGC funds protection notice. */\n      is_ukgc_funds_protection: status.has('ukgc_funds_protection'),\n      /** client cannot deposit or buy contracts, but can withdraw or sell contracts. */\n      is_unwelcome: status.has('unwelcome'),\n      /** deposits allowed but withdrawals are not allowed. */\n      is_withdrawal_locked: status.has('withdrawal_locked'),\n      /** this prevent a client from changing the account currency after deposit attempt. */\n      is_deposit_attempt: status.has('deposit_attempt'),\n      /** client POI documents name mismatch. */\n      is_poi_name_mismatch: status.has('poi_name_mismatch'),\n      /** the client can resubmit POA documents. */\n      is_allow_poa_resubmission: status.has('allow_poa_resubmission'),\n      /** the client can resubmit POI documents. */\n      is_allow_poi_resubmission: status.has('allow_poi_resubmission'),\n      /** the client has been sharing payment methods. */\n      is_shared_payment_method: status.has('shared_payment_method'),\n      /** client is not allowed to edit personal profile details. */\n      is_personal_details_locked: status.has('personal_details_locked'),\n      /** it block any transfer between two accounts. */\n      is_transfers_blocked: status.has('transfers_blocked'),\n      /** the DF deposit will be blocked until the client gets age verified. */\n      is_df_deposit_requires_poi: status.has('df_deposit_requires_poi'),\n      /** the client has been fully authenticated by IDV. */\n      is_authenticated_with_idv_photoid: status.has('authenticated_with_idv_photoid'),\n      /** the client used to be fully authenticated by IDV but it was taken away due to compliance criteria. */\n      is_idv_revoked: status.has('idv_revoked')\n    };\n  }, [get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status]);\n  return useAccountStatus_objectSpread({\n    /** The account status response. */\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountStatus = ((/* unused pure expression or super */ null && (useAccountStatus)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountTypes.ts\nfunction useAccountTypes_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountTypes_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountTypes_typeof(obj); }\nvar useAccountTypes_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountTypes_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountTypes_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountTypes_ownKeys(Object(source), !0).forEach(function (key) { useAccountTypes_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountTypes_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountTypes_defineProperty(obj, key, value) { key = useAccountTypes_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountTypes_toPropertyKey(arg) { var key = useAccountTypes_toPrimitive(arg, \"string\"); return useAccountTypes_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountTypes_toPrimitive(input, hint) { if (useAccountTypes_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountTypes_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountTypes_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountTypes_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountTypes_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get available account types for a specific landing company. */\nvar useAccountTypes = function useAccountTypes(landing_company) {\n  var _useQuery = useQuery('get_account_types', {\n      payload: {\n        company: landing_company\n      },\n      options: {\n        enabled: Boolean(landing_company)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAccountTypes_objectWithoutProperties(_useQuery, useAccountTypes_excluded);\n\n  // Add additional information to the account types response.\n  var modified_account_types = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.get_account_types)) return;\n    return useAccountTypes_objectSpread(useAccountTypes_objectSpread({}, data.get_account_types), {}, {\n      /** Landing company for the account types */\n      landing_company: landing_company\n    });\n  }, [data === null || data === void 0 ? void 0 : data.get_account_types, landing_company]);\n  return useAccountTypes_objectSpread({\n    /** The account types response. */\n    data: modified_account_types\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountTypes = ((/* unused pure expression or super */ null && (useAccountTypes)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useBalance.ts\nfunction useBalance_typeof(obj) { \"@babel/helpers - typeof\"; return useBalance_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useBalance_typeof(obj); }\nvar useBalance_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useBalance_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useBalance_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useBalance_ownKeys(Object(source), !0).forEach(function (key) { useBalance_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useBalance_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useBalance_defineProperty(obj, key, value) { key = useBalance_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useBalance_toPropertyKey(arg) { var key = useBalance_toPrimitive(arg, \"string\"); return useBalance_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useBalance_toPrimitive(input, hint) { if (useBalance_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useBalance_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useBalance_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useBalance_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useBalance_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that gets the balance for all the user accounts. */\nvar useBalance_useBalance = function useBalance() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('balance', {\n      payload: {\n        account: 'all'\n      },\n      options: {\n        enabled: isSuccess,\n        refetchInterval: 30000 // Refetch every 30 seconds to simulate subscription.\n      }\n    }),\n    balance_data = _useQuery.data,\n    rest = useBalance_objectWithoutProperties(_useQuery, useBalance_excluded);\n\n  // Add additional information to the balance data.\n  var modified_balance = useMemo(function () {\n    return useBalance_objectSpread({}, balance_data === null || balance_data === void 0 ? void 0 : balance_data.balance);\n  }, [balance_data === null || balance_data === void 0 ? void 0 : balance_data.balance]);\n  return useBalance_objectSpread({\n    /** The balance response. */\n    data: modified_balance\n  }, rest);\n};\n/* harmony default export */ const hooks_useBalance = ((/* unused pure expression or super */ null && (useBalance_useBalance)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCurrencyConfig.ts\nfunction useCurrencyConfig_typeof(obj) { \"@babel/helpers - typeof\"; return useCurrencyConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCurrencyConfig_typeof(obj); }\nvar useCurrencyConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCurrencyConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCurrencyConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCurrencyConfig_ownKeys(Object(source), !0).forEach(function (key) { useCurrencyConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCurrencyConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCurrencyConfig_defineProperty(obj, key, value) { key = useCurrencyConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCurrencyConfig_toPropertyKey(arg) { var key = useCurrencyConfig_toPrimitive(arg, \"string\"); return useCurrencyConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCurrencyConfig_toPrimitive(input, hint) { if (useCurrencyConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCurrencyConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCurrencyConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the currency config information from `website_status` endpoint and `crypto_config` endpoint. */\nvar useCurrencyConfig_useCurrencyConfig = function useCurrencyConfig() {\n  var _website_status_data$2, _crypto_config_data$c2;\n  var _useQuery = useQuery('website_status'),\n    website_status_data = _useQuery.data,\n    rest = useCurrencyConfig_objectWithoutProperties(_useQuery, useCurrencyConfig_excluded);\n  var _useQuery2 = useQuery('crypto_config'),\n    crypto_config_data = _useQuery2.data;\n\n  // Add additional information to the currency config.\n  var modified_currencies_config = useMemo(function () {\n    var _website_status_data$;\n    if (!(website_status_data !== null && website_status_data !== void 0 && (_website_status_data$ = website_status_data.website_status) !== null && _website_status_data$ !== void 0 && _website_status_data$.currencies_config)) return undefined;\n    var website_status_currencies_config = website_status_data.website_status.currencies_config;\n    return Object.keys(website_status_currencies_config).map(function (currency) {\n      var currency_config = website_status_currencies_config[currency];\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, currency_config), {}, {\n        /** determine if the currency is a `crypto` currency */\n        is_crypto: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'crypto',\n        /** determine if the currency is a `fiat` currency */\n        is_fiat: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'fiat',\n        /** determine if the currency is `Australian Dollar` */\n        is_AUD: currency === 'AUD',\n        /** determine if the currency is `US Dollar` */\n        is_USD: currency === 'USD',\n        /** determine if the currency is `Euro` */\n        is_EUR: currency === 'EUR',\n        /** determine if the currency is `Pound Sterling` */\n        is_GBP: currency === 'GBP',\n        /** determine if the currency is `Bitcoin` */\n        is_BTC: currency === 'BTC',\n        /** determine if the currency is `Ethereum` */\n        is_ETH: currency === 'ETH',\n        /** determine if the currency is `Litecoin` */\n        is_LTC: currency === 'LTC',\n        /** determine if the currency is `Multi-Collateral DAI` */\n        is_DAI: currency === 'DAI',\n        /** determine if the currency is `IDK` */\n        is_IDK: currency === 'IDK',\n        /** determine if the currency is `Paxos Standard` */\n        is_PAX: currency === 'PAX',\n        /** determine if the currency is `Binary Coin` */\n        is_USB: currency === 'USB',\n        /** determine if the currency is `Tether Omni` */\n        is_USDT: currency === 'UST',\n        /** determine if the currency is `True USD` */\n        is_TUSD: currency === 'TUSD',\n        /** determine if the currency is `Binance USD` */\n        is_BUSD: currency === 'BUSD',\n        /** determine if the currency is `STATIS Euro` */\n        is_EURS: currency === 'EURS',\n        /** determine if the currency is `Tether ERC20` */\n        is_eUSDT: currency === 'eUSDT',\n        /** determine if the currency is `Tether TRC20` */\n        is_tUSDT: currency === 'tUSDT',\n        /** determine if the currency is `USD Coin` */\n        is_USDC: currency === 'USDC',\n        /** determine if the currency is `USDK` */\n        is_USDK: currency === 'USDK',\n        /** Currency code */\n        code: currency,\n        /** Currency display code */\n        display_code: currency === 'UST' ? 'USDT' : currency\n      });\n    });\n  }, [website_status_data === null || website_status_data === void 0 ? void 0 : (_website_status_data$2 = website_status_data.website_status) === null || _website_status_data$2 === void 0 ? void 0 : _website_status_data$2.currencies_config]);\n\n  // Add additional information to the crypto config.\n  var modified_crypto_config = useMemo(function () {\n    return modified_currencies_config === null || modified_currencies_config === void 0 ? void 0 : modified_currencies_config.map(function (currency_config) {\n      var _crypto_config_data$c;\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, currency_config), crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c = crypto_config_data.crypto_config) === null || _crypto_config_data$c === void 0 ? void 0 : _crypto_config_data$c.currencies_config[currency_config.code]);\n    });\n  }, [crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c2 = crypto_config_data.crypto_config) === null || _crypto_config_data$c2 === void 0 ? void 0 : _crypto_config_data$c2.currencies_config, modified_currencies_config]);\n\n  // Transform the currency config array into a record object.\n  var transformed_currencies_config = useMemo(function () {\n    return modified_crypto_config === null || modified_crypto_config === void 0 ? void 0 : modified_crypto_config.reduce(function (previous, current) {\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, previous), {}, useCurrencyConfig_defineProperty({}, current.code, current));\n    }, {});\n  }, [modified_crypto_config]);\n  var getConfig = useCallback(function (currency) {\n    return transformed_currencies_config === null || transformed_currencies_config === void 0 ? void 0 : transformed_currencies_config[currency];\n  }, [transformed_currencies_config]);\n  return useCurrencyConfig_objectSpread({\n    /** Available currencies and their information */\n    data: transformed_currencies_config,\n    /** Returns the currency config object for the given currency */\n    getConfig: getConfig\n  }, rest);\n};\n/* harmony default export */ const hooks_useCurrencyConfig = ((/* unused pure expression or super */ null && (useCurrencyConfig_useCurrencyConfig)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDerivAccountsList.ts\nfunction useDerivAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useDerivAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDerivAccountsList_typeof(obj); }\nvar useDerivAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDerivAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDerivAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDerivAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useDerivAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDerivAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDerivAccountsList_defineProperty(obj, key, value) { key = useDerivAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDerivAccountsList_toPropertyKey(arg) { var key = useDerivAccountsList_toPrimitive(arg, \"string\"); return useDerivAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDerivAccountsList_toPrimitive(input, hint) { if (useDerivAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDerivAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDerivAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDerivAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDerivAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/** A custom hook that returns the list of accounts for the current user. */\nvar useDerivAccountsList_useDerivAccountsList = function useDerivAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    rest = useDerivAccountsList_objectWithoutProperties(_useAuthorize, useDerivAccountsList_excluded);\n  var _useBalance = useBalance(),\n    balance_data = _useBalance.data;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  // Add additional information to the authorize response.\n  var modified_accounts = useMemo(function () {\n    var _authorize_data$accou;\n    return (_authorize_data$accou = authorize_data.account_list) === null || _authorize_data$accou === void 0 ? void 0 : _authorize_data$accou.map(function (account) {\n      return useDerivAccountsList_objectSpread(useDerivAccountsList_objectSpread({}, account), {}, {\n        /** Creation time of the account. */\n        created_at: account.created_at ? new Date(account.created_at) : undefined,\n        /** Account's currency config information */\n        currency_config: account.currency ? getConfig(account.currency) : undefined,\n        /** Date till client has excluded him/herself from the website, only present if client is self excluded. */\n        excluded_until: account.excluded_until ? new Date(account.excluded_until) : undefined,\n        /** Indicating whether the wallet is the currently active account. */\n        is_active: account.loginid === authorize_data.loginid,\n        /** indicating whether the account is marked as disabled or not. */\n        is_disabled: Boolean(account.is_disabled),\n        /** indicating whether the account is a trading account. */\n        is_trading: account.account_category === 'trading',\n        /** indicating whether the account is a virtual-money account. */\n        is_virtual: Boolean(account.is_virtual),\n        /** indicating whether the account is a wallet account. */\n        is_wallet: account.account_category === 'wallet',\n        /** The account ID of specified account. */\n        loginid: \"\".concat(account.loginid),\n        /** The platform of the account */\n        platform: 'deriv'\n      });\n    });\n  }, [authorize_data.account_list, authorize_data.loginid, getConfig]);\n\n  // Add balance to each account\n  var modified_accounts_with_balance = useMemo(function () {\n    return modified_accounts === null || modified_accounts === void 0 ? void 0 : modified_accounts.map(function (account) {\n      var _balance_data$account, _balance_data$account2, _account$currency_con, _account$currency_con2;\n      var balance = (balance_data === null || balance_data === void 0 ? void 0 : (_balance_data$account = balance_data.accounts) === null || _balance_data$account === void 0 ? void 0 : (_balance_data$account2 = _balance_data$account[account.loginid]) === null || _balance_data$account2 === void 0 ? void 0 : _balance_data$account2.balance) || 0;\n      return useDerivAccountsList_objectSpread(useDerivAccountsList_objectSpread({}, account), {}, {\n        /** The balance of the account. */\n        balance: balance,\n        /** The balance of the account in currency format. */\n        display_balance: displayMoney(balance, ((_account$currency_con = account.currency_config) === null || _account$currency_con === void 0 ? void 0 : _account$currency_con.display_code) || 'USD', {\n          fractional_digits: (_account$currency_con2 = account.currency_config) === null || _account$currency_con2 === void 0 ? void 0 : _account$currency_con2.fractional_digits,\n          preferred_language: authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language\n        })\n      });\n    });\n  }, [balance_data === null || balance_data === void 0 ? void 0 : balance_data.accounts, modified_accounts, authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language]);\n  return useDerivAccountsList_objectSpread({\n    /** The list of accounts for the current user. */\n    data: modified_accounts_with_balance\n  }, rest);\n};\n/* harmony default export */ const hooks_useDerivAccountsList = ((/* unused pure expression or super */ null && (useDerivAccountsList_useDerivAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveAccount.ts\nfunction useActiveAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveAccount_typeof(obj); }\nvar useActiveAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveAccount_defineProperty(obj, key, value) { key = useActiveAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveAccount_toPropertyKey(arg) { var key = useActiveAccount_toPrimitive(arg, \"string\"); return useActiveAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveAccount_toPrimitive(input, hint) { if (useActiveAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the account object for the current active account. */\nvar useActiveAccount_useActiveAccount = function useActiveAccount() {\n  var _useDerivAccountsList = useDerivAccountsList(),\n    data = _useDerivAccountsList.data,\n    rest = useActiveAccount_objectWithoutProperties(_useDerivAccountsList, useActiveAccount_excluded);\n  var active_account = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (account) {\n      return account.is_active;\n    });\n  }, [data]);\n  return useActiveAccount_objectSpread({\n    /** User's current active account. */\n    data: active_account\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveAccount = ((/* unused pure expression or super */ null && (useActiveAccount_useActiveAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useWalletAccountsList.ts\nfunction useWalletAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useWalletAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useWalletAccountsList_typeof(obj); }\nvar useWalletAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useWalletAccountsList_toConsumableArray(arr) { return useWalletAccountsList_arrayWithoutHoles(arr) || useWalletAccountsList_iterableToArray(arr) || useWalletAccountsList_unsupportedIterableToArray(arr) || useWalletAccountsList_nonIterableSpread(); }\nfunction useWalletAccountsList_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useWalletAccountsList_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useWalletAccountsList_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useWalletAccountsList_arrayLikeToArray(o, minLen); }\nfunction useWalletAccountsList_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useWalletAccountsList_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useWalletAccountsList_arrayLikeToArray(arr); }\nfunction useWalletAccountsList_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useWalletAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useWalletAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useWalletAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useWalletAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useWalletAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useWalletAccountsList_defineProperty(obj, key, value) { key = useWalletAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useWalletAccountsList_toPropertyKey(arg) { var key = useWalletAccountsList_toPrimitive(arg, \"string\"); return useWalletAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useWalletAccountsList_toPrimitive(input, hint) { if (useWalletAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useWalletAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useWalletAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useWalletAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useWalletAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the list of all wallet accounts for the current user. */\nvar useWalletAccountsList_useWalletAccountsList = function useWalletAccountsList() {\n  var _useDerivAccountsList = useDerivAccountsList(),\n    account_list_data = _useDerivAccountsList.data,\n    rest = useWalletAccountsList_objectWithoutProperties(_useDerivAccountsList, useWalletAccountsList_excluded);\n\n  // Filter out non-wallet accounts.\n  var filtered_accounts = useMemo(function () {\n    return account_list_data === null || account_list_data === void 0 ? void 0 : account_list_data.filter(function (account) {\n      return account.is_wallet;\n    });\n  }, [account_list_data]);\n\n  // Add additional information to each wallet account.\n  var modified_accounts = useMemo(function () {\n    return filtered_accounts === null || filtered_accounts === void 0 ? void 0 : filtered_accounts.map(function (wallet) {\n      var _wallet$linked_to, _wallet$linked_to$fin, _wallet$landing_compa, _wallet$currency_conf;\n      var wallet_currency_type = wallet.is_virtual ? 'Demo' : wallet.currency || '';\n      var dtrade_loginid = (_wallet$linked_to = wallet.linked_to) === null || _wallet$linked_to === void 0 ? void 0 : (_wallet$linked_to$fin = _wallet$linked_to.find(function (account) {\n        return account.platform === 'dtrade';\n      })) === null || _wallet$linked_to$fin === void 0 ? void 0 : _wallet$linked_to$fin.loginid;\n      return useWalletAccountsList_objectSpread(useWalletAccountsList_objectSpread({}, wallet), {}, {\n        /** Returns the wallet's currency type. ex: `Demo`, `USD`, etc. */\n        wallet_currency_type: wallet_currency_type,\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: (_wallet$landing_compa = wallet.landing_company_name) === null || _wallet$landing_compa === void 0 ? void 0 : _wallet$landing_compa.replace('maltainvest', 'malta'),\n        /** Indicating whether the wallet is a maltainvest wallet. */\n        is_malta_wallet: wallet.landing_company_name === 'maltainvest',\n        /** The DTrade account ID of this wallet */\n        dtrade_loginid: dtrade_loginid,\n        /** Returns if the wallet is a crypto wallet. */\n        is_crypto: (_wallet$currency_conf = wallet.currency_config) === null || _wallet$currency_conf === void 0 ? void 0 : _wallet$currency_conf.is_crypto\n      });\n    });\n  }, [filtered_accounts]);\n\n  // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n  var sorted_accounts = useMemo(function () {\n    if (!modified_accounts) return;\n    return useWalletAccountsList_toConsumableArray(modified_accounts).sort(function (a, b) {\n      var _a$currency_config, _b$currency_config;\n      if (a.is_virtual !== b.is_virtual) {\n        return a.is_virtual ? 1 : -1;\n      } else if (((_a$currency_config = a.currency_config) === null || _a$currency_config === void 0 ? void 0 : _a$currency_config.is_crypto) !== ((_b$currency_config = b.currency_config) === null || _b$currency_config === void 0 ? void 0 : _b$currency_config.is_crypto)) {\n        var _a$currency_config2;\n        return (_a$currency_config2 = a.currency_config) !== null && _a$currency_config2 !== void 0 && _a$currency_config2.is_crypto ? 1 : -1;\n      }\n      return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n    });\n  }, [modified_accounts]);\n  return useWalletAccountsList_objectSpread({\n    /** The list of wallet accounts for the current user. */\n    data: sorted_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useWalletAccountsList = ((/* unused pure expression or super */ null && (useWalletAccountsList_useWalletAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveWalletAccount.ts\nfunction useActiveWalletAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveWalletAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveWalletAccount_typeof(obj); }\nvar useActiveWalletAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveWalletAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveWalletAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveWalletAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveWalletAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveWalletAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveWalletAccount_defineProperty(obj, key, value) { key = useActiveWalletAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveWalletAccount_toPropertyKey(arg) { var key = useActiveWalletAccount_toPrimitive(arg, \"string\"); return useActiveWalletAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveWalletAccount_toPrimitive(input, hint) { if (useActiveWalletAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveWalletAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveWalletAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveWalletAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveWalletAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the wallet object for the current active wallet. */\nvar useActiveWalletAccount_useActiveWalletAccount = function useActiveWalletAccount() {\n  var _useWalletAccountsLis = useWalletAccountsList(),\n    data = _useWalletAccountsLis.data,\n    rest = useActiveWalletAccount_objectWithoutProperties(_useWalletAccountsLis, useActiveWalletAccount_excluded);\n  var active_wallet = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (wallet) {\n      return wallet.is_active;\n    });\n  }, [data]);\n  return useActiveWalletAccount_objectSpread({\n    /** User's current active wallet. */\n    data: active_wallet\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveWalletAccount = ((/* unused pure expression or super */ null && (useActiveWalletAccount_useActiveWalletAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveLinkedToTradingAccount.ts\nfunction useActiveLinkedToTradingAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveLinkedToTradingAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveLinkedToTradingAccount_typeof(obj); }\nfunction useActiveLinkedToTradingAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveLinkedToTradingAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveLinkedToTradingAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveLinkedToTradingAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveLinkedToTradingAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveLinkedToTradingAccount_defineProperty(obj, key, value) { key = useActiveLinkedToTradingAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveLinkedToTradingAccount_toPropertyKey(arg) { var key = useActiveLinkedToTradingAccount_toPrimitive(arg, \"string\"); return useActiveLinkedToTradingAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveLinkedToTradingAccount_toPrimitive(input, hint) { if (useActiveLinkedToTradingAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveLinkedToTradingAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n/** A custom hook that gets the active linked trading account for the current user. */\nvar useActiveLinkedToTradingAccount = function useActiveLinkedToTradingAccount() {\n  var _wallet_account_data$, _wallet_account_data$2;\n  var _useDerivAccountsList = useDerivAccountsList(),\n    account_list_data = _useDerivAccountsList.data;\n  var _useActiveWalletAccou = useActiveWalletAccount(),\n    wallet_account_data = _useActiveWalletAccou.data;\n  var linkedDtradeLoginId = wallet_account_data === null || wallet_account_data === void 0 ? void 0 : (_wallet_account_data$ = wallet_account_data.linked_to) === null || _wallet_account_data$ === void 0 ? void 0 : (_wallet_account_data$2 = _wallet_account_data$.find(function (linked) {\n    return linked.loginid && (linked === null || linked === void 0 ? void 0 : linked.platform) === 'dtrade';\n  })) === null || _wallet_account_data$2 === void 0 ? void 0 : _wallet_account_data$2.loginid;\n  var matchingTradingAccount = account_list_data === null || account_list_data === void 0 ? void 0 : account_list_data.filter(function (account) {\n    return account.loginid === linkedDtradeLoginId;\n  })[0];\n  var modified_account = useMemo(function () {\n    if (!account_list_data || !wallet_account_data) return undefined;\n    return useActiveLinkedToTradingAccount_objectSpread({}, matchingTradingAccount);\n  }, [account_list_data, matchingTradingAccount, wallet_account_data]);\n  return {\n    /** The active linked trading account for the current user. */\n    data: modified_account\n  };\n};\n/* harmony default export */ const hooks_useActiveLinkedToTradingAccount = ((/* unused pure expression or super */ null && (useActiveLinkedToTradingAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingAccountsList.ts\nfunction useTradingAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingAccountsList_typeof(obj); }\nvar useTradingAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useTradingAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useTradingAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingAccountsList_defineProperty(obj, key, value) { key = useTradingAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingAccountsList_toPropertyKey(arg) { var key = useTradingAccountsList_toPrimitive(arg, \"string\"); return useTradingAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingAccountsList_toPrimitive(input, hint) { if (useTradingAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the list of all trading accounts for the current user. */\nvar useTradingAccountsList_useTradingAccountsList = function useTradingAccountsList() {\n  var _useDerivAccountsList = useDerivAccountsList(),\n    account_list_data = _useDerivAccountsList.data,\n    rest = useTradingAccountsList_objectWithoutProperties(_useDerivAccountsList, useTradingAccountsList_excluded);\n\n  // Filter out non-trading accounts.\n  var filtered_accounts = useMemo(function () {\n    return account_list_data === null || account_list_data === void 0 ? void 0 : account_list_data.filter(function (account) {\n      return account.is_trading;\n    });\n  }, [account_list_data]);\n\n  // Add additional information to each trading account.\n  var modified_accounts = useMemo(function () {\n    return filtered_accounts === null || filtered_accounts === void 0 ? void 0 : filtered_accounts.map(function (trading) {\n      return useTradingAccountsList_objectSpread({}, trading);\n    });\n  }, [filtered_accounts]);\n  return useTradingAccountsList_objectSpread({\n    /** The list of trading accounts for the current user. */\n    data: modified_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingAccountsList = ((/* unused pure expression or super */ null && (useTradingAccountsList_useTradingAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveTradingAccount.ts\nfunction useActiveTradingAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveTradingAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveTradingAccount_typeof(obj); }\nvar useActiveTradingAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveTradingAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveTradingAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveTradingAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveTradingAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveTradingAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveTradingAccount_defineProperty(obj, key, value) { key = useActiveTradingAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveTradingAccount_toPropertyKey(arg) { var key = useActiveTradingAccount_toPrimitive(arg, \"string\"); return useActiveTradingAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveTradingAccount_toPrimitive(input, hint) { if (useActiveTradingAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveTradingAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveTradingAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveTradingAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveTradingAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the trading object for the current active trading. */\nvar useActiveTradingAccount = function useActiveTradingAccount() {\n  var _useTradingAccountsLi = useTradingAccountsList(),\n    data = _useTradingAccountsLi.data,\n    rest = useActiveTradingAccount_objectWithoutProperties(_useTradingAccountsLi, useActiveTradingAccount_excluded);\n  var active_trading = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (trading) {\n      return trading.is_active;\n    });\n  }, [data]);\n  return useActiveTradingAccount_objectSpread({\n    /** User's current active trading. */\n    data: active_trading\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveTradingAccount = ((/* unused pure expression or super */ null && (useActiveTradingAccount)));\n;// CONCATENATED MODULE: ../../api/src/useSubscription.ts\nfunction useSubscription_slicedToArray(arr, i) { return useSubscription_arrayWithHoles(arr) || useSubscription_iterableToArrayLimit(arr, i) || useSubscription_unsupportedIterableToArray(arr, i) || useSubscription_nonIterableRest(); }\nfunction useSubscription_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useSubscription_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useSubscription_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useSubscription_arrayLikeToArray(o, minLen); }\nfunction useSubscription_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useSubscription_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useSubscription_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useSubscription_useSubscription = function useSubscription(name) {\n  var _useState = useState(false),\n    _useState2 = useSubscription_slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = useSubscription_slicedToArray(_useState3, 2),\n    isSubscribed = _useState4[0],\n    setSubscribed = _useState4[1];\n  var _useState5 = useState(),\n    _useState6 = useSubscription_slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = useState(),\n    _useState8 = useSubscription_slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  var subscriber = useRef();\n  var _useAPI = useAPI(),\n    _subscribe = _useAPI.subscribe;\n  var subscribe = useCallback(function () {\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    var prop = props === null || props === void 0 ? void 0 : props[0];\n    var payload = prop && 'payload' in prop ? prop.payload : undefined;\n    setIsLoading(true);\n    setSubscribed(true);\n    try {\n      subscriber.current = _subscribe(name, payload).subscribe(function (response) {\n        setData(response);\n        setIsLoading(false);\n      }, function (response) {\n        setError(response.error);\n        setIsLoading(false);\n      });\n    } catch (e) {\n      setError(e);\n    }\n  }, [_subscribe, name]);\n  var unsubscribe = useCallback(function () {\n    var _subscriber$current, _subscriber$current$u;\n    (_subscriber$current = subscriber.current) === null || _subscriber$current === void 0 ? void 0 : (_subscriber$current$u = _subscriber$current.unsubscribe) === null || _subscriber$current$u === void 0 ? void 0 : _subscriber$current$u.call(_subscriber$current);\n    setSubscribed(false);\n  }, []);\n  useEffect(function () {\n    return function () {\n      unsubscribe();\n    };\n  }, [unsubscribe]);\n  return {\n    subscribe: subscribe,\n    unsubscribe: unsubscribe,\n    isLoading: isLoading,\n    isSubscribed: isSubscribed,\n    error: error,\n    data: data\n  };\n};\n/* harmony default export */ const src_useSubscription = ((/* unused pure expression or super */ null && (useSubscription_useSubscription)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveWalletBalance.ts\nfunction useActiveWalletBalance_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveWalletBalance_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveWalletBalance_typeof(obj); }\nvar useActiveWalletBalance_excluded = (/* unused pure expression or super */ null && ([\"subscribe\", \"data\", \"unsubscribe\"]));\nfunction useActiveWalletBalance_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveWalletBalance_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveWalletBalance_ownKeys(Object(source), !0).forEach(function (key) { useActiveWalletBalance_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveWalletBalance_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveWalletBalance_defineProperty(obj, key, value) { key = useActiveWalletBalance_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveWalletBalance_toPropertyKey(arg) { var key = useActiveWalletBalance_toPrimitive(arg, \"string\"); return useActiveWalletBalance_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveWalletBalance_toPrimitive(input, hint) { if (useActiveWalletBalance_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveWalletBalance_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveWalletBalance_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveWalletBalance_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveWalletBalance_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/**\n * Hook to display live, subscribed balance.\n * Use when you have only one wallet on screen.\n */\nvar useActiveWalletBalance = function useActiveWalletBalance() {\n  var _balanceData$balance, _balanceData$balance2, _activeWallet$currenc;\n  var _useActiveWalletAccou = useActiveWalletAccount(),\n    activeWallet = _useActiveWalletAccou.data;\n  var _useAuthorize = useAuthorize(),\n    account = _useAuthorize.data;\n  var _useSubscription = useSubscription('balance'),\n    subscribe = _useSubscription.subscribe,\n    balanceData = _useSubscription.data,\n    unsubscribe = _useSubscription.unsubscribe,\n    rest = useActiveWalletBalance_objectWithoutProperties(_useSubscription, useActiveWalletBalance_excluded);\n  var balance = (balanceData === null || balanceData === void 0 ? void 0 : (_balanceData$balance = balanceData.balance) === null || _balanceData$balance === void 0 ? void 0 : _balanceData$balance.balance) || 0;\n  var currencyCode = (balanceData === null || balanceData === void 0 ? void 0 : (_balanceData$balance2 = balanceData.balance) === null || _balanceData$balance2 === void 0 ? void 0 : _balanceData$balance2.currency) || 'USD';\n  useEffect(function () {\n    subscribe();\n    return function () {\n      return unsubscribe();\n    };\n  }, [subscribe]);\n  var displayBalance = displayMoney(balance, currencyCode, {\n    fractional_digits: activeWallet === null || activeWallet === void 0 ? void 0 : (_activeWallet$currenc = activeWallet.currency_config) === null || _activeWallet$currenc === void 0 ? void 0 : _activeWallet$currenc.fractional_digits,\n    preferred_language: account === null || account === void 0 ? void 0 : account.preferred_language\n  });\n  return useActiveWalletBalance_objectSpread({\n    data: balanceData,\n    displayBalance: displayBalance\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveWalletBalance = ((/* unused pure expression or super */ null && (useActiveWalletBalance)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCtraderAccountsList.ts\nfunction useCtraderAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useCtraderAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCtraderAccountsList_typeof(obj); }\nvar useCtraderAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCtraderAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCtraderAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCtraderAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useCtraderAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCtraderAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCtraderAccountsList_defineProperty(obj, key, value) { key = useCtraderAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCtraderAccountsList_toPropertyKey(arg) { var key = useCtraderAccountsList_toPrimitive(arg, \"string\"); return useCtraderAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCtraderAccountsList_toPrimitive(input, hint) { if (useCtraderAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCtraderAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCtraderAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCtraderAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCtraderAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that gets the list of created cTrader accounts. */\nvar useCtraderAccountsList_useCtraderAccountsList = function useCtraderAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_accounts', {\n      payload: {\n        platform: 'ctrader'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    ctrader_accounts = _useQuery.data,\n    rest = useCtraderAccountsList_objectWithoutProperties(_useQuery, useCtraderAccountsList_excluded);\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  /** Adding neccesary properties to cTrader accounts */\n  var modified_ctrader_accounts = useMemo(function () {\n    var _ctrader_accounts$tra;\n    return ctrader_accounts === null || ctrader_accounts === void 0 ? void 0 : (_ctrader_accounts$tra = ctrader_accounts.trading_platform_accounts) === null || _ctrader_accounts$tra === void 0 ? void 0 : _ctrader_accounts$tra.map(function (account) {\n      return useCtraderAccountsList_objectSpread(useCtraderAccountsList_objectSpread({}, account), {}, {\n        /** Account's currency config information */\n        currency_config: account.currency ? getConfig(account.currency) : undefined,\n        /** The id of the cTrader account */\n        id: account.account_id,\n        /** indicating whether the account is a virtual-money account. */\n        is_virtual: account.account_type === 'demo',\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: account.landing_company_short,\n        /** The platform of the account */\n        platform: 'ctrader'\n      });\n    });\n  }, [ctrader_accounts === null || ctrader_accounts === void 0 ? void 0 : ctrader_accounts.trading_platform_accounts, getConfig]);\n  return useCtraderAccountsList_objectSpread({\n    /** List of all created cTrader accounts */\n    data: modified_ctrader_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useCtraderAccountsList = ((/* unused pure expression or super */ null && (useCtraderAccountsList_useCtraderAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDxtradeAccountsList.ts\nfunction useDxtradeAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useDxtradeAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDxtradeAccountsList_typeof(obj); }\nvar useDxtradeAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDxtradeAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDxtradeAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDxtradeAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useDxtradeAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDxtradeAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDxtradeAccountsList_defineProperty(obj, key, value) { key = useDxtradeAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDxtradeAccountsList_toPropertyKey(arg) { var key = useDxtradeAccountsList_toPrimitive(arg, \"string\"); return useDxtradeAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDxtradeAccountsList_toPrimitive(input, hint) { if (useDxtradeAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDxtradeAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDxtradeAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDxtradeAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDxtradeAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/** A custom hook that gets the list of created Deriv X accounts. */\nvar useDxtradeAccountsList_useDxtradeAccountsList = function useDxtradeAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_accounts', {\n      payload: {\n        platform: 'dxtrade'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    dxtrade_accounts = _useQuery.data,\n    rest = useDxtradeAccountsList_objectWithoutProperties(_useQuery, useDxtradeAccountsList_excluded);\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  /** Adding necessary properties to Deriv X accounts */\n  var modified_dxtrade_accounts = useMemo(function () {\n    var _dxtrade_accounts$tra;\n    return dxtrade_accounts === null || dxtrade_accounts === void 0 ? void 0 : (_dxtrade_accounts$tra = dxtrade_accounts.trading_platform_accounts) === null || _dxtrade_accounts$tra === void 0 ? void 0 : _dxtrade_accounts$tra.map(function (account) {\n      return useDxtradeAccountsList_objectSpread(useDxtradeAccountsList_objectSpread({}, account), {}, {\n        /** Account's currency config information */\n        currency_config: account.currency ? getConfig(account.currency) : undefined,\n        /** The balance of the account in currency format. */\n        display_balance: displayMoney((account === null || account === void 0 ? void 0 : account.balance) || 0, (account === null || account === void 0 ? void 0 : account.currency) || 'USD', {\n          preferred_language: authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language\n        }),\n        /** indicating whether the account is a virtual-money account. */\n        is_virtual: account.account_type === 'demo',\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: account.landing_company_short,\n        /** The platform of the account */\n        platform: 'dxtrade'\n      });\n    });\n  }, [authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language, dxtrade_accounts === null || dxtrade_accounts === void 0 ? void 0 : dxtrade_accounts.trading_platform_accounts, getConfig]);\n  return useDxtradeAccountsList_objectSpread({\n    /** List of all created Deriv X accounts */\n    data: modified_dxtrade_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useDxtradeAccountsList = ((/* unused pure expression or super */ null && (useDxtradeAccountsList_useDxtradeAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useMT5AccountsList.ts\nfunction useMT5AccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useMT5AccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useMT5AccountsList_typeof(obj); }\nvar useMT5AccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useMT5AccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useMT5AccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useMT5AccountsList_ownKeys(Object(source), !0).forEach(function (key) { useMT5AccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useMT5AccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useMT5AccountsList_defineProperty(obj, key, value) { key = useMT5AccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useMT5AccountsList_toPropertyKey(arg) { var key = useMT5AccountsList_toPrimitive(arg, \"string\"); return useMT5AccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useMT5AccountsList_toPrimitive(input, hint) { if (useMT5AccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useMT5AccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useMT5AccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useMT5AccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useMT5AccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/** A custom hook that gets the list created MT5 accounts of the user. */\nvar useMT5AccountsList_useMT5AccountsList = function useMT5AccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var _useQuery = useQuery('mt5_login_list', {\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    mt5_accounts = _useQuery.data,\n    mt5_accounts_rest = useMT5AccountsList_objectWithoutProperties(_useQuery, useMT5AccountsList_excluded);\n\n  /**\n   * @description The list of created MT5 accounts\n   */\n  var modified_mt5_accounts = useMemo(function () {\n    var _mt5_accounts$mt5_log;\n    return mt5_accounts === null || mt5_accounts === void 0 ? void 0 : (_mt5_accounts$mt5_log = mt5_accounts.mt5_login_list) === null || _mt5_accounts$mt5_log === void 0 ? void 0 : _mt5_accounts$mt5_log.map(function (account) {\n      var _account$login;\n      return useMT5AccountsList_objectSpread(useMT5AccountsList_objectSpread({}, account), {}, {\n        /** Account's currency config information */\n        currency_config: account.currency ? getConfig(account.currency) : undefined,\n        /** The formatted display login of the account */\n        display_login: (_account$login = account.login) === null || _account$login === void 0 ? void 0 : _account$login.replace(/^(MT[DR]?)/, ''),\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: account.landing_company_short,\n        /** The id of the account */\n        loginid: account.login,\n        /** The balance of the account in currency format. */\n        display_balance: displayMoney(account.balance || 0, account.currency || 'USD', {\n          preferred_language: authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language\n        }),\n        /** indicating whether the account is a virtual-money account. */\n        is_virtual: account.account_type === 'demo',\n        /** The platform of the account */\n        platform: 'mt5'\n      });\n    });\n  }, [authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language, getConfig, mt5_accounts === null || mt5_accounts === void 0 ? void 0 : mt5_accounts.mt5_login_list]);\n  return useMT5AccountsList_objectSpread({\n    /** The list of created MT5 accounts */\n    data: modified_mt5_accounts\n  }, mt5_accounts_rest);\n};\n/* harmony default export */ const hooks_useMT5AccountsList = ((/* unused pure expression or super */ null && (useMT5AccountsList_useMT5AccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCFDAccountsList.ts\n\n\n\n\n\n/** A custom hook that gets the list all created CFD accounts of the user. */\nvar useCFDAccountsList_useCFDAccountsList = function useCFDAccountsList() {\n  var _useMT5AccountsList = useMT5AccountsList(),\n    mt5_accounts = _useMT5AccountsList.data,\n    isMT5AccountsListError = _useMT5AccountsList.isError,\n    isMT5AccountsListLoading = _useMT5AccountsList.isLoading;\n  var _useDxtradeAccountsLi = useDxtradeAccountsList(),\n    dxtrade_accounts = _useDxtradeAccountsLi.data,\n    isDxtradeAccountsListError = _useDxtradeAccountsLi.isError,\n    isDxtradeAccountsListLoading = _useDxtradeAccountsLi.isLoading;\n  var _useCtraderAccountsLi = useCtraderAccountsList(),\n    ctrader_accounts = _useCtraderAccountsLi.data,\n    isCtraderAccountsListError = _useCtraderAccountsLi.isError,\n    CtraderAccountsListLoading = _useCtraderAccountsLi.isLoading;\n  var data = useMemo(function () {\n    if (!mt5_accounts || !dxtrade_accounts || !ctrader_accounts) return;\n    return {\n      mt5: mt5_accounts,\n      dxtrade: dxtrade_accounts,\n      ctrader: ctrader_accounts\n    };\n  }, [mt5_accounts, dxtrade_accounts, ctrader_accounts]);\n  var isError = isMT5AccountsListError || isDxtradeAccountsListError || isCtraderAccountsListError;\n  var isLoading = isMT5AccountsListLoading || isDxtradeAccountsListLoading || CtraderAccountsListLoading;\n  return {\n    data: data,\n    isError: isError,\n    isLoading: isLoading\n  };\n};\n/* harmony default export */ const hooks_useCFDAccountsList = ((/* unused pure expression or super */ null && (useCFDAccountsList_useCFDAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAllAccountsList.ts\nfunction useAllAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useAllAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAllAccountsList_typeof(obj); }\nfunction useAllAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAllAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAllAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useAllAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAllAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAllAccountsList_defineProperty(obj, key, value) { key = useAllAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAllAccountsList_toPropertyKey(arg) { var key = useAllAccountsList_toPrimitive(arg, \"string\"); return useAllAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAllAccountsList_toPrimitive(input, hint) { if (useAllAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAllAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n/** A custom hook to get all user accounts, including external apps accounts */\nvar useAllAccountsList = function useAllAccountsList() {\n  var _useDerivAccountsList = useDerivAccountsList(),\n    accountsList = _useDerivAccountsList.data,\n    isAccountsListError = _useDerivAccountsList.isError,\n    isAccountsListLoading = _useDerivAccountsList.isLoading;\n  var _useCFDAccountsList = useCFDAccountsList(),\n    cfdsList = _useCFDAccountsList.data,\n    isCFDAccountsListError = _useCFDAccountsList.isError,\n    isCFDAccountsListLoading = _useCFDAccountsList.isLoading;\n  var accounts = useMemo(function () {\n    return useAllAccountsList_objectSpread({\n      wallets: accountsList === null || accountsList === void 0 ? void 0 : accountsList.filter(function (account) {\n        return account.is_wallet;\n      }),\n      dtrade: accountsList === null || accountsList === void 0 ? void 0 : accountsList.filter(function (account) {\n        return account.is_trading;\n      })\n    }, cfdsList);\n  }, [accountsList, cfdsList]);\n  var isError = isAccountsListError || isCFDAccountsListError;\n  var isLoading = isAccountsListLoading || isCFDAccountsListLoading;\n  return {\n    data: accounts,\n    isError: isError,\n    isLoading: isLoading\n  };\n};\n/* harmony default export */ const hooks_useAllAccountsList = ((/* unused pure expression or super */ null && (useAllAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAvailableWallets.ts\nfunction useAvailableWallets_typeof(obj) { \"@babel/helpers - typeof\"; return useAvailableWallets_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAvailableWallets_typeof(obj); }\nvar useAvailableWallets_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAvailableWallets_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAvailableWallets_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAvailableWallets_ownKeys(Object(source), !0).forEach(function (key) { useAvailableWallets_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAvailableWallets_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAvailableWallets_defineProperty(obj, key, value) { key = useAvailableWallets_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAvailableWallets_toPropertyKey(arg) { var key = useAvailableWallets_toPrimitive(arg, \"string\"); return useAvailableWallets_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAvailableWallets_toPrimitive(input, hint) { if (useAvailableWallets_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAvailableWallets_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAvailableWallets_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAvailableWallets_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAvailableWallets_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that gets the list of available wallets. */\nvar useAvailableWallets_useAvailableWallets = function useAvailableWallets() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('available_accounts', {\n      payload: {\n        categories: ['wallet']\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAvailableWallets_objectWithoutProperties(_useQuery, useAvailableWallets_excluded);\n  var modifiedData = useMemo(function () {\n    var _data$available_accou;\n    if (!(data !== null && data !== void 0 && (_data$available_accou = data.available_accounts) !== null && _data$available_accou !== void 0 && _data$available_accou.wallets)) return;\n    return data.available_accounts.wallets;\n  }, [data]);\n  return useAvailableWallets_objectSpread({\n    /** List of available wallet accounts to create */\n    data: modifiedData\n  }, rest);\n};\n/* harmony default export */ const hooks_useAvailableWallets = ((/* unused pure expression or super */ null && (useAvailableWallets_useAvailableWallets)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAllWalletAccounts.ts\nfunction useAllWalletAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return useAllWalletAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAllWalletAccounts_typeof(obj); }\nvar useAllWalletAccounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAllWalletAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAllWalletAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAllWalletAccounts_ownKeys(Object(source), !0).forEach(function (key) { useAllWalletAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAllWalletAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAllWalletAccounts_defineProperty(obj, key, value) { key = useAllWalletAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAllWalletAccounts_toPropertyKey(arg) { var key = useAllWalletAccounts_toPrimitive(arg, \"string\"); return useAllWalletAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAllWalletAccounts_toPrimitive(input, hint) { if (useAllWalletAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAllWalletAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAllWalletAccounts_toConsumableArray(arr) { return useAllWalletAccounts_arrayWithoutHoles(arr) || useAllWalletAccounts_iterableToArray(arr) || useAllWalletAccounts_unsupportedIterableToArray(arr) || useAllWalletAccounts_nonIterableSpread(); }\nfunction useAllWalletAccounts_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useAllWalletAccounts_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useAllWalletAccounts_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useAllWalletAccounts_arrayLikeToArray(o, minLen); }\nfunction useAllWalletAccounts_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useAllWalletAccounts_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useAllWalletAccounts_arrayLikeToArray(arr); }\nfunction useAllWalletAccounts_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useAllWalletAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAllWalletAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAllWalletAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that gets the list of added and non-added wallet accounts. */\nvar useAllWalletAccounts = function useAllWalletAccounts() {\n  var _useAvailableWallets = useAvailableWallets(),\n    nonAddedWallets = _useAvailableWallets.data,\n    rest = useAllWalletAccounts_objectWithoutProperties(_useAvailableWallets, useAllWalletAccounts_excluded);\n  var _useWalletAccountsLis = useWalletAccountsList(),\n    addedWallets = _useWalletAccountsLis.data;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  /** Get all the added and non-added wallets account */\n  var modifiedWallets = useMemo(function () {\n    var nonVirtualWallets = addedWallets === null || addedWallets === void 0 ? void 0 : addedWallets.filter(function (wallet) {\n      return !wallet.is_virtual;\n    });\n\n    /** Modify added wallets list with adding `is_added` and `is_crypto` flag */\n    var modifiedAddedWallets = nonVirtualWallets === null || nonVirtualWallets === void 0 ? void 0 : nonVirtualWallets.map(function (wallet) {\n      var _getConfig;\n      return {\n        currency: wallet.currency,\n        landing_company_name: wallet.landing_company_name,\n        is_added: true,\n        is_crypto: wallet.currency ? (_getConfig = getConfig(wallet.currency)) === null || _getConfig === void 0 ? void 0 : _getConfig.is_crypto : false\n      };\n    });\n\n    /** Modify non-added wallets list with adding `is_added` and `is_crypto` flag */\n    var modifiedNonAddedWallets = nonAddedWallets === null || nonAddedWallets === void 0 ? void 0 : nonAddedWallets.map(function (wallet) {\n      return {\n        currency: wallet.currency,\n        landing_company_name: wallet.landing_company,\n        is_added: false,\n        is_crypto: wallet.account_type === 'crypto'\n      };\n    });\n    return [].concat(useAllWalletAccounts_toConsumableArray(modifiedAddedWallets || []), useAllWalletAccounts_toConsumableArray(modifiedNonAddedWallets || []));\n  }, [nonAddedWallets, addedWallets, getConfig]);\n\n  /** Function to sort wallet based on currency */\n  var sortWalletsByCurrency = useCallback(function (a, b) {\n    if (a.is_crypto !== b.is_crypto) return a.is_crypto ? 1 : -1;\n    return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n  }, []);\n\n  /** Sort the wallets by fiat, crypto, then virtual */\n  var sortedWallets = useMemo(function () {\n    if (!modifiedWallets) return;\n\n    // Sort wallets by non-added wallets then added wallets\n    modifiedWallets.sort(function (a, b) {\n      if (a.is_added !== b.is_added) return a.is_added ? 1 : -1;\n      return 0;\n    });\n\n    // Sort the added wallets alphabetically by fiat, crypto, then virtual (if any)\n    modifiedWallets.sort(function (a, b) {\n      if (!a.is_added || !b.is_added) return 0;\n      return sortWalletsByCurrency(a, b);\n    });\n\n    // Sort the non-added wallets alphabetically by fiat, crypto, then virtual (if any)\n    modifiedWallets.sort(function (a, b) {\n      if (a.is_added || b.is_added) return 0;\n      return sortWalletsByCurrency(a, b);\n    });\n    return useAllWalletAccounts_toConsumableArray(modifiedWallets);\n  }, [modifiedWallets, sortWalletsByCurrency]);\n  return useAllWalletAccounts_objectSpread({\n    /** Sorted wallets accounts */\n    data: sortedWallets\n  }, rest);\n};\n/* harmony default export */ const hooks_useAllWalletAccounts = ((/* unused pure expression or super */ null && (useAllWalletAccounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAuthentication.ts\nfunction useAuthentication_typeof(obj) { \"@babel/helpers - typeof\"; return useAuthentication_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAuthentication_typeof(obj); }\nvar useAuthentication_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAuthentication_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAuthentication_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAuthentication_ownKeys(Object(source), !0).forEach(function (key) { useAuthentication_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAuthentication_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAuthentication_defineProperty(obj, key, value) { key = useAuthentication_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAuthentication_toPropertyKey(arg) { var key = useAuthentication_toPrimitive(arg, \"string\"); return useAuthentication_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAuthentication_toPrimitive(input, hint) { if (useAuthentication_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAuthentication_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAuthentication_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAuthentication_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAuthentication_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the verification status (basically any poi, poa, poinc, poo) of the current user. */\nvar useAuthentication_useAuthentication = function useAuthentication() {\n  var _useGetAccountStatus = useGetAccountStatus(),\n    get_account_status_data = _useGetAccountStatus.data,\n    rest = useAuthentication_objectWithoutProperties(_useGetAccountStatus, useAuthentication_excluded);\n  var modified_account_status = useMemo(function () {\n    var _get_account_status_d, _get_account_status_d2, _get_account_status_d3, _get_account_status_d4, _get_account_status_d5, _get_account_status_d6, _get_account_status_d7, _get_account_status_d8, _get_account_status_d9;\n    if (!get_account_status_data) return;\n    var needs_verification = new Set((_get_account_status_d = get_account_status_data.authentication) === null || _get_account_status_d === void 0 ? void 0 : _get_account_status_d.needs_verification);\n    var account_status = new Set(get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status);\n    return useAuthentication_objectSpread(useAuthentication_objectSpread({}, get_account_status_data.authentication), {}, {\n      /** client has been authenticated with IDV photo ID feature */\n      is_authenticated_with_idv_photoid: account_status.has('is_authenticated_with_idv_photoid'),\n      /** client is required to verify their document (proof of address) */\n      is_poa_needed: needs_verification.has('document'),\n      /** client is required to verify their identity */\n      is_poi_needed: needs_verification.has('identity'),\n      /** client has been age-verified */\n      is_age_verified: account_status.has('age_verification'),\n      /** client is prevented from verifying from idv */\n      is_idv_disallowed: account_status.has('idv_disallowed'),\n      /** client IDV is revoked */\n      is_idv_revoked: account_status.has('idv_revoked'),\n      /** client is allowed to perform POI and POA (allow uploading documents) */\n      is_allow_document_upload: account_status.has('is_allow_document_upload'),\n      /** client can resubmit POI documents */\n      is_poi_resubmission_allowed: account_status.has('allow_poi_resubmission'),\n      /** client can resubmit POA documents */\n      is_poa_resubmission_allowed: account_status.has('allow_poa_resubmission'),\n      /** client's name in POI documents does not match */\n      is_poi_name_mismatch: account_status.has('poi_name_mismatch'),\n      /** client's name in POA documents does not match */\n      is_poa_address_mismatch: account_status.has('poa_address_mismatch'),\n      /** client has attempted POA before */\n      has_poa_been_attempted: (get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d2 = get_account_status_data.authentication) === null || _get_account_status_d2 === void 0 ? void 0 : (_get_account_status_d3 = _get_account_status_d2.document) === null || _get_account_status_d3 === void 0 ? void 0 : _get_account_status_d3.status) !== 'none',\n      /** client has attempted POI before */\n      has_poi_been_attempted: (get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d4 = get_account_status_data.authentication) === null || _get_account_status_d4 === void 0 ? void 0 : (_get_account_status_d5 = _get_account_status_d4.identity) === null || _get_account_status_d5 === void 0 ? void 0 : _get_account_status_d5.status) !== 'none',\n      /** client's poi verification status */\n      poi_status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d6 = get_account_status_data.authentication) === null || _get_account_status_d6 === void 0 ? void 0 : (_get_account_status_d7 = _get_account_status_d6.identity) === null || _get_account_status_d7 === void 0 ? void 0 : _get_account_status_d7.status,\n      /** client's poa verification status */\n      poa_status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d8 = get_account_status_data.authentication) === null || _get_account_status_d8 === void 0 ? void 0 : (_get_account_status_d9 = _get_account_status_d8.document) === null || _get_account_status_d9 === void 0 ? void 0 : _get_account_status_d9.status\n    });\n  }, [get_account_status_data]);\n  return useAuthentication_objectSpread({\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useAuthentication = ((/* unused pure expression or super */ null && (useAuthentication_useAuthentication)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useSettings.ts\nfunction useSettings_typeof(obj) { \"@babel/helpers - typeof\"; return useSettings_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useSettings_typeof(obj); }\nvar useSettings_excluded = (/* unused pure expression or super */ null && ([\"data\"])),\n  _excluded2 = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useSettings_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useSettings_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSettings_ownKeys(Object(source), !0).forEach(function (key) { useSettings_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSettings_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useSettings_defineProperty(obj, key, value) { key = useSettings_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useSettings_toPropertyKey(arg) { var key = useSettings_toPrimitive(arg, \"string\"); return useSettings_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useSettings_toPrimitive(input, hint) { if (useSettings_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useSettings_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useSettings_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useSettings_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useSettings_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to get and update the user settings. */\nvar useSettings_useSettings = function useSettings() {\n  var _useQuery = useQuery('get_settings'),\n    data = _useQuery.data,\n    rest = useSettings_objectWithoutProperties(_useQuery, useSettings_excluded);\n  var _useMutation = useMutation('set_settings', {\n      onSuccess: function onSuccess() {\n        return invalidate('get_settings');\n      }\n    }),\n    mutate = _useMutation.mutate,\n    mutate_rest = useSettings_objectWithoutProperties(_useMutation, _excluded2);\n  var invalidate = useInvalidateQuery();\n  var update = useCallback(function (payload) {\n    return mutate({\n      payload: payload\n    });\n  }, [mutate]);\n\n  // Add additional information to the settings response.\n  var modified_settings = useMemo(function () {\n    var _data$get_settings$ci, _data$get_settings, _data$get_settings$ac, _data$get_settings2, _data$get_settings$pl, _data$get_settings3, _data$get_settings$ta, _data$get_settings4, _data$get_settings$ta2, _data$get_settings5;\n    var citizenship = (_data$get_settings$ci = data === null || data === void 0 ? void 0 : (_data$get_settings = data.get_settings) === null || _data$get_settings === void 0 ? void 0 : _data$get_settings.citizen) !== null && _data$get_settings$ci !== void 0 ? _data$get_settings$ci : '';\n    var account = (_data$get_settings$ac = data === null || data === void 0 ? void 0 : (_data$get_settings2 = data.get_settings) === null || _data$get_settings2 === void 0 ? void 0 : _data$get_settings2.account_opening_reason) !== null && _data$get_settings$ac !== void 0 ? _data$get_settings$ac : '';\n    var placeofbirth = (_data$get_settings$pl = data === null || data === void 0 ? void 0 : (_data$get_settings3 = data.get_settings) === null || _data$get_settings3 === void 0 ? void 0 : _data$get_settings3.place_of_birth) !== null && _data$get_settings$pl !== void 0 ? _data$get_settings$pl : '';\n    var taxResidence = (_data$get_settings$ta = data === null || data === void 0 ? void 0 : (_data$get_settings4 = data.get_settings) === null || _data$get_settings4 === void 0 ? void 0 : _data$get_settings4.tax_residence) !== null && _data$get_settings$ta !== void 0 ? _data$get_settings$ta : '';\n    var taxIdentificationnumber = (_data$get_settings$ta2 = data === null || data === void 0 ? void 0 : (_data$get_settings5 = data.get_settings) === null || _data$get_settings5 === void 0 ? void 0 : _data$get_settings5.tax_identification_number) !== null && _data$get_settings$ta2 !== void 0 ? _data$get_settings$ta2 : '';\n    return useSettings_objectSpread(useSettings_objectSpread({}, data === null || data === void 0 ? void 0 : data.get_settings), {}, {\n      has_submitted_personal_details: Boolean(citizenship && account && placeofbirth && taxResidence && taxIdentificationnumber)\n    });\n  }, [data === null || data === void 0 ? void 0 : data.get_settings]);\n  return useSettings_objectSpread({\n    /** The settings response. */\n    data: modified_settings,\n    /** Function to update user settings */\n    update: update,\n    /** The mutation related information */\n    mutation: mutate_rest\n  }, rest);\n};\n/* harmony default export */ const hooks_useSettings = ((/* unused pure expression or super */ null && (useSettings_useSettings)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useLandingCompany.ts\nfunction useLandingCompany_typeof(obj) { \"@babel/helpers - typeof\"; return useLandingCompany_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useLandingCompany_typeof(obj); }\nvar useLandingCompany_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useLandingCompany_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useLandingCompany_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useLandingCompany_ownKeys(Object(source), !0).forEach(function (key) { useLandingCompany_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useLandingCompany_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useLandingCompany_defineProperty(obj, key, value) { key = useLandingCompany_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useLandingCompany_toPropertyKey(arg) { var key = useLandingCompany_toPrimitive(arg, \"string\"); return useLandingCompany_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useLandingCompany_toPrimitive(input, hint) { if (useLandingCompany_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useLandingCompany_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useLandingCompany_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useLandingCompany_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useLandingCompany_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that returns the available landing companies of the user's country. */\nvar useLandingCompany_useLandingCompany = function useLandingCompany() {\n  var _useSettings = useSettings(),\n    settings_data = _useSettings.data;\n  var _useQuery = useQuery('landing_company', {\n      payload: {\n        landing_company: (settings_data === null || settings_data === void 0 ? void 0 : settings_data.country_code) || ''\n      },\n      options: {\n        enabled: Boolean(settings_data === null || settings_data === void 0 ? void 0 : settings_data.country_code)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useLandingCompany_objectWithoutProperties(_useQuery, useLandingCompany_excluded);\n\n  // Add additional information to the landing company response.\n  var modified_landing_company = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.landing_company)) return;\n    return useLandingCompany_objectSpread({}, data.landing_company);\n  }, [data === null || data === void 0 ? void 0 : data.landing_company]);\n  return useLandingCompany_objectSpread({\n    /** The landing company response. */\n    data: modified_landing_company\n  }, rest);\n};\n/* harmony default export */ const hooks_useLandingCompany = ((/* unused pure expression or super */ null && (useLandingCompany_useLandingCompany)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccesiblePlatforms.ts\nfunction useAccesiblePlatforms_typeof(obj) { \"@babel/helpers - typeof\"; return useAccesiblePlatforms_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccesiblePlatforms_typeof(obj); }\nvar useAccesiblePlatforms_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccesiblePlatforms_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccesiblePlatforms_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccesiblePlatforms_ownKeys(Object(source), !0).forEach(function (key) { useAccesiblePlatforms_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccesiblePlatforms_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccesiblePlatforms_defineProperty(obj, key, value) { key = useAccesiblePlatforms_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccesiblePlatforms_toPropertyKey(arg) { var key = useAccesiblePlatforms_toPrimitive(arg, \"string\"); return useAccesiblePlatforms_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccesiblePlatforms_toPrimitive(input, hint) { if (useAccesiblePlatforms_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccesiblePlatforms_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccesiblePlatforms_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccesiblePlatforms_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccesiblePlatforms_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/**\n * A custom hook that provides flags to determine the accessibility status of cTrader and Dxtrade based on the current country of residence.\n */\nvar useAccesiblePlatforms = function useAccesiblePlatforms() {\n  var _useLandingCompany = useLandingCompany(),\n    landing_company = _useLandingCompany.data,\n    rest = useAccesiblePlatforms_objectWithoutProperties(_useLandingCompany, useAccesiblePlatforms_excluded);\n  var modified_accesible_platform = useMemo(function () {\n    var _landing_company$ctra, _landing_company$ctra2;\n    if (!landing_company) return;\n\n    /** check if ctrader jurisdiction is offered in the landing_company response  */\n    var is_ctrader_available = (landing_company === null || landing_company === void 0 ? void 0 : (_landing_company$ctra = landing_company.ctrader) === null || _landing_company$ctra === void 0 ? void 0 : (_landing_company$ctra2 = _landing_company$ctra.all) === null || _landing_company$ctra2 === void 0 ? void 0 : _landing_company$ctra2.standard) === 'svg';\n    /** check if dxtrade is in the landing_company response */\n    var is_dxtrade_available = landing_company === null || landing_company === void 0 ? void 0 : landing_company.dxtrade_all_company;\n    /** check if MT5 is in the landing_company response */\n    var is_mt5_available = (landing_company === null || landing_company === void 0 ? void 0 : landing_company.mt_financial_company) || (landing_company === null || landing_company === void 0 ? void 0 : landing_company.mt_gaming_company) || (landing_company === null || landing_company === void 0 ? void 0 : landing_company.mt_all_company);\n    return {\n      /** is ctrader accessible for this country of residence */\n      is_ctrader_available: !!is_ctrader_available,\n      /** is dxtrade accessible for this country of residence */\n      is_dxtrade_available: !!is_dxtrade_available,\n      /** is mt5 accessible for this country of residence */\n      is_mt5_available: !!is_mt5_available\n    };\n  }, [landing_company]);\n  return useAccesiblePlatforms_objectSpread({\n    data: modified_accesible_platform\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccesiblePlatforms = ((/* unused pure expression or super */ null && (useAccesiblePlatforms)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAvailableMT5Accounts.ts\nfunction useAvailableMT5Accounts_typeof(obj) { \"@babel/helpers - typeof\"; return useAvailableMT5Accounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAvailableMT5Accounts_typeof(obj); }\nvar useAvailableMT5Accounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAvailableMT5Accounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAvailableMT5Accounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAvailableMT5Accounts_ownKeys(Object(source), !0).forEach(function (key) { useAvailableMT5Accounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAvailableMT5Accounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAvailableMT5Accounts_defineProperty(obj, key, value) { key = useAvailableMT5Accounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAvailableMT5Accounts_toPropertyKey(arg) { var key = useAvailableMT5Accounts_toPrimitive(arg, \"string\"); return useAvailableMT5Accounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAvailableMT5Accounts_toPrimitive(input, hint) { if (useAvailableMT5Accounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAvailableMT5Accounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAvailableMT5Accounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAvailableMT5Accounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAvailableMT5Accounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar market_type_to_leverage_mapper = {\n  gaming: 500,\n  financial: 1000,\n  all: 100\n};\n\n/** A custom hook to get the list of available MT5 accounts. */\nvar useAvailableMT5Accounts_useAvailableMT5Accounts = function useAvailableMT5Accounts() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_available_accounts', {\n      payload: {\n        platform: 'mt5'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    mt5_available_accounts = _useQuery.data,\n    rest = useAvailableMT5Accounts_objectWithoutProperties(_useQuery, useAvailableMT5Accounts_excluded);\n  var modified_mt5_available_accounts = useMemo(function () {\n    var _mt5_available_accoun;\n    return mt5_available_accounts === null || mt5_available_accounts === void 0 ? void 0 : (_mt5_available_accoun = mt5_available_accounts.trading_platform_available_accounts) === null || _mt5_available_accoun === void 0 ? void 0 : _mt5_available_accoun.map(function (account) {\n      return useAvailableMT5Accounts_objectSpread(useAvailableMT5Accounts_objectSpread({}, account), {}, {\n        /** The market type for the account */\n        market_type: account.market_type === 'gaming' ? 'synthetic' : account.market_type,\n        /** The platform for the account */\n        platform: 'mt5',\n        /** Leverage for the account */\n        leverage: market_type_to_leverage_mapper[account.market_type]\n      });\n    });\n  }, [mt5_available_accounts === null || mt5_available_accounts === void 0 ? void 0 : mt5_available_accounts.trading_platform_available_accounts]);\n  return useAvailableMT5Accounts_objectSpread({\n    /** The available MT5 accounts */\n    data: modified_mt5_available_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useAvailableMT5Accounts = ((/* unused pure expression or super */ null && (useAvailableMT5Accounts_useAvailableMT5Accounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCancelCryptoTransaction.ts\nfunction useCancelCryptoTransaction_typeof(obj) { \"@babel/helpers - typeof\"; return useCancelCryptoTransaction_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCancelCryptoTransaction_typeof(obj); }\nvar useCancelCryptoTransaction_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useCancelCryptoTransaction_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCancelCryptoTransaction_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCancelCryptoTransaction_ownKeys(Object(source), !0).forEach(function (key) { useCancelCryptoTransaction_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCancelCryptoTransaction_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCancelCryptoTransaction_defineProperty(obj, key, value) { key = useCancelCryptoTransaction_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCancelCryptoTransaction_toPropertyKey(arg) { var key = useCancelCryptoTransaction_toPrimitive(arg, \"string\"); return useCancelCryptoTransaction_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCancelCryptoTransaction_toPrimitive(input, hint) { if (useCancelCryptoTransaction_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCancelCryptoTransaction_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCancelCryptoTransaction_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCancelCryptoTransaction_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCancelCryptoTransaction_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hooks for cancelling crypto transaction  */\nvar useCancelCryptoTransaction = function useCancelCryptoTransaction() {\n  var _useMutation = useMutation('cashier_withdrawal_cancel'),\n    data = _useMutation.data,\n    mutate = _useMutation.mutate,\n    rest = useCancelCryptoTransaction_objectWithoutProperties(_useMutation, useCancelCryptoTransaction_excluded);\n  return useCancelCryptoTransaction_objectSpread({\n    /** The cancel crypto transaction response */\n    data: data === null || data === void 0 ? void 0 : data.cashier_withdrawal_cancel,\n    /** Function to cancel crypto transaction */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCancelCryptoTransaction = ((/* unused pure expression or super */ null && (useCancelCryptoTransaction)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCashierFiatAddress.ts\nfunction useCashierFiatAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useCashierFiatAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCashierFiatAddress_typeof(obj); }\nvar useCashierFiatAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useCashierFiatAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCashierFiatAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCashierFiatAddress_ownKeys(Object(source), !0).forEach(function (key) { useCashierFiatAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCashierFiatAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCashierFiatAddress_defineProperty(obj, key, value) { key = useCashierFiatAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCashierFiatAddress_toPropertyKey(arg) { var key = useCashierFiatAddress_toPrimitive(arg, \"string\"); return useCashierFiatAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCashierFiatAddress_toPrimitive(input, hint) { if (useCashierFiatAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCashierFiatAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCashierFiatAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCashierFiatAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCashierFiatAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook to get the deposit and withdrawal fiat address. */\nvar useCashierFiatAddress = function useCashierFiatAddress() {\n  var _useMutation = useMutation('cashier'),\n    data = _useMutation.data,\n    _mutate = _useMutation.mutate,\n    rest = useCashierFiatAddress_objectWithoutProperties(_useMutation, useCashierFiatAddress_excluded);\n  var iframe_url = typeof (data === null || data === void 0 ? void 0 : data.cashier) === 'string' ? data === null || data === void 0 ? void 0 : data.cashier : undefined;\n  var mutate = useCallback(function (cashier, payload) {\n    return _mutate({\n      payload: useCashierFiatAddress_objectSpread({\n        cashier: cashier,\n        provider: 'doughflow'\n      }, payload)\n    });\n  }, [_mutate]);\n  return useCashierFiatAddress_objectSpread({\n    /** The deposit/withdrawal fiat iframe */\n    data: iframe_url,\n    /** Function to get deposit/withdrawal fiat address */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCashierFiatAddress = ((/* unused pure expression or super */ null && (useCashierFiatAddress)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCountryConfig.ts\nfunction useCountryConfig_typeof(obj) { \"@babel/helpers - typeof\"; return useCountryConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCountryConfig_typeof(obj); }\nvar useCountryConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCountryConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCountryConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCountryConfig_ownKeys(Object(source), !0).forEach(function (key) { useCountryConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCountryConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCountryConfig_defineProperty(obj, key, value) { key = useCountryConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCountryConfig_toPropertyKey(arg) { var key = useCountryConfig_toPrimitive(arg, \"string\"); return useCountryConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCountryConfig_toPrimitive(input, hint) { if (useCountryConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCountryConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCountryConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCountryConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCountryConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the country config information from `residence_list` endpoint. */\nvar useCountryConfig = function useCountryConfig() {\n  var _useQuery = useQuery('residence_list'),\n    residence_list_data = _useQuery.data,\n    rest = useCountryConfig_objectWithoutProperties(_useQuery, useCountryConfig_excluded);\n\n  // Add additional information to the country config.\n  var modified_residence_list = useMemo(function () {\n    var _residence_list_data$;\n    return residence_list_data === null || residence_list_data === void 0 ? void 0 : (_residence_list_data$ = residence_list_data.residence_list) === null || _residence_list_data$ === void 0 ? void 0 : _residence_list_data$.map(function (country_config) {\n      var _country_config$ident, _country_config$ident2, _country_config$ident3, _country_config$ident4, _country_config$ident5, _country_config$ident6;\n      return useCountryConfig_objectSpread(useCountryConfig_objectSpread({}, country_config), {}, {\n        /** Determine if the country is disabled */\n        is_disabled: country_config.disabled !== undefined,\n        /** 2-letter country code */\n        code: \"\".concat(country_config.value).toUpperCase(),\n        /** Country name */\n        name: \"\".concat(country_config.text),\n        /** Determine if the IDV service is supported for the country */\n        is_idv_supported: ((_country_config$ident = country_config.identity) === null || _country_config$ident === void 0 ? void 0 : (_country_config$ident2 = _country_config$ident.services) === null || _country_config$ident2 === void 0 ? void 0 : (_country_config$ident3 = _country_config$ident2.idv) === null || _country_config$ident3 === void 0 ? void 0 : _country_config$ident3.is_country_supported) === 1,\n        /** Determine if the Onfido service is supported for the country */\n        is_onfido_supported: ((_country_config$ident4 = country_config.identity) === null || _country_config$ident4 === void 0 ? void 0 : (_country_config$ident5 = _country_config$ident4.services) === null || _country_config$ident5 === void 0 ? void 0 : (_country_config$ident6 = _country_config$ident5.onfido) === null || _country_config$ident6 === void 0 ? void 0 : _country_config$ident6.is_country_supported) === 1\n      });\n    });\n  }, [residence_list_data === null || residence_list_data === void 0 ? void 0 : residence_list_data.residence_list]);\n\n  // Transform the country config array into a record object.\n  var transformed_residence_list = useMemo(function () {\n    return modified_residence_list === null || modified_residence_list === void 0 ? void 0 : modified_residence_list.reduce(function (previous, current) {\n      return useCountryConfig_objectSpread(useCountryConfig_objectSpread({}, previous), {}, useCountryConfig_defineProperty({}, current.code, current));\n    }, {});\n  }, [modified_residence_list]);\n  var getConfig = useCallback(function (currency) {\n    return transformed_residence_list === null || transformed_residence_list === void 0 ? void 0 : transformed_residence_list[currency];\n  }, [transformed_residence_list]);\n  return useCountryConfig_objectSpread({\n    /** Available countries and their information */\n    data: transformed_residence_list,\n    /** Returns the country config object for the given country code */\n    getConfig: getConfig\n  }, rest);\n};\n/* harmony default export */ const hooks_useCountryConfig = ((/* unused pure expression or super */ null && (useCountryConfig)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateMT5Account.ts\nfunction useCreateMT5Account_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateMT5Account_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateMT5Account_typeof(obj); }\nvar useCreateMT5Account_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateMT5Account_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateMT5Account_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateMT5Account_ownKeys(Object(source), !0).forEach(function (key) { useCreateMT5Account_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateMT5Account_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateMT5Account_defineProperty(obj, key, value) { key = useCreateMT5Account_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateMT5Account_toPropertyKey(arg) { var key = useCreateMT5Account_toPrimitive(arg, \"string\"); return useCreateMT5Account_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateMT5Account_toPrimitive(input, hint) { if (useCreateMT5Account_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateMT5Account_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateMT5Account_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateMT5Account_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateMT5Account_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to create MT5 accounts. */\nvar useCreateMT5Account = function useCreateMT5Account() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('mt5_new_account', {\n      onSuccess: function onSuccess() {\n        invalidate('mt5_login_list');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateMT5Account_objectWithoutProperties(_useMutation, useCreateMT5Account_excluded);\n\n  // Add additional information to the create MT5 account response.\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.mt5_new_account)) return undefined;\n    return useCreateMT5Account_objectSpread({}, data === null || data === void 0 ? void 0 : data.mt5_new_account);\n  }, [data]);\n  return useCreateMT5Account_objectSpread({\n    /** The response and the mutation of the create MT5 account API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateMT5Account = ((/* unused pure expression or super */ null && (useCreateMT5Account)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateNewRealAccount.ts\nfunction useCreateNewRealAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateNewRealAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateNewRealAccount_typeof(obj); }\nvar useCreateNewRealAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateNewRealAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateNewRealAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateNewRealAccount_ownKeys(Object(source), !0).forEach(function (key) { useCreateNewRealAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateNewRealAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateNewRealAccount_defineProperty(obj, key, value) { key = useCreateNewRealAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateNewRealAccount_toPropertyKey(arg) { var key = useCreateNewRealAccount_toPrimitive(arg, \"string\"); return useCreateNewRealAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateNewRealAccount_toPrimitive(input, hint) { if (useCreateNewRealAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateNewRealAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateNewRealAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateNewRealAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateNewRealAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that creates a new real trading account. */\nvar useCreateNewRealAccount = function useCreateNewRealAccount() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('new_account_real', {\n      onSuccess: function onSuccess() {\n        invalidate('authorize');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateNewRealAccount_objectWithoutProperties(_useMutation, useCreateNewRealAccount_excluded);\n\n  // Add additional information to the new real trading account response.\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.new_account_real)) return;\n    return useCreateNewRealAccount_objectSpread({}, data === null || data === void 0 ? void 0 : data.new_account_real);\n  }, [data]);\n  return useCreateNewRealAccount_objectSpread({\n    /** The response and the mutation of the new account real API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateNewRealAccount = ((/* unused pure expression or super */ null && (useCreateNewRealAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateOtherCFDAccount.ts\nfunction useCreateOtherCFDAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateOtherCFDAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateOtherCFDAccount_typeof(obj); }\nvar useCreateOtherCFDAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateOtherCFDAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateOtherCFDAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateOtherCFDAccount_ownKeys(Object(source), !0).forEach(function (key) { useCreateOtherCFDAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateOtherCFDAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateOtherCFDAccount_defineProperty(obj, key, value) { key = useCreateOtherCFDAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateOtherCFDAccount_toPropertyKey(arg) { var key = useCreateOtherCFDAccount_toPrimitive(arg, \"string\"); return useCreateOtherCFDAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateOtherCFDAccount_toPrimitive(input, hint) { if (useCreateOtherCFDAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateOtherCFDAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateOtherCFDAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateOtherCFDAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateOtherCFDAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to create third party CFD accounts. */\nvar useCreateOtherCFDAccount = function useCreateOtherCFDAccount() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('trading_platform_new_account', {\n      onSuccess: function onSuccess() {\n        invalidate('trading_platform_accounts');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateOtherCFDAccount_objectWithoutProperties(_useMutation, useCreateOtherCFDAccount_excluded);\n\n  // Add additional information to the create Other CFD account response.\n  var modified_data = useMemo(function () {\n    if (!data) return undefined;\n    return useCreateOtherCFDAccount_objectSpread({}, data);\n  }, [data]);\n  return useCreateOtherCFDAccount_objectSpread({\n    /** The response and the mutation of the create third party CFDs API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateOtherCFDAccount = ((/* unused pure expression or super */ null && (useCreateOtherCFDAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateWallet.ts\nfunction useCreateWallet_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateWallet_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateWallet_typeof(obj); }\nvar useCreateWallet_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useCreateWallet_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateWallet_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateWallet_ownKeys(Object(source), !0).forEach(function (key) { useCreateWallet_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateWallet_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateWallet_defineProperty(obj, key, value) { key = useCreateWallet_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateWallet_toPropertyKey(arg) { var key = useCreateWallet_toPrimitive(arg, \"string\"); return useCreateWallet_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateWallet_toPrimitive(input, hint) { if (useCreateWallet_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateWallet_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateWallet_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateWallet_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateWallet_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n/** A custom hook to create new wallet account */\nvar useCreateWallet = function useCreateWallet() {\n  var invalidate = useInvalidateQuery();\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var _useMutation = useMutation('new_account_wallet', {\n      onSuccess: function onSuccess() {\n        invalidate('authorize');\n        invalidate('available_accounts');\n      }\n    }),\n    data = _useMutation.data,\n    _mutate = _useMutation.mutate,\n    rest = useCreateWallet_objectWithoutProperties(_useMutation, useCreateWallet_excluded);\n  var mutate = function mutate(params) {\n    return _mutate({\n      payload: params\n    });\n  };\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.new_account_wallet)) return;\n    var currencyConfig = getConfig((data === null || data === void 0 ? void 0 : data.new_account_wallet.currency) || 'USD');\n    return useCreateWallet_objectSpread(useCreateWallet_objectSpread({}, data.new_account_wallet), {}, {\n      /** The balance of the account in currency format. */\n      display_balance: displayMoney(0, (currencyConfig === null || currencyConfig === void 0 ? void 0 : currencyConfig.display_code) || 'USD', {\n        fractional_digits: currencyConfig === null || currencyConfig === void 0 ? void 0 : currencyConfig.fractional_digits\n      })\n    });\n  }, [data === null || data === void 0 ? void 0 : data.new_account_wallet, getConfig]);\n  return useCreateWallet_objectSpread({\n    /** New account information */\n    data: modified_data,\n    /** A function to create new wallet */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateWallet = ((/* unused pure expression or super */ null && (useCreateWallet)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCryptoTransactions.ts\nfunction useCryptoTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return useCryptoTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCryptoTransactions_typeof(obj); }\nvar useCryptoTransactions_excluded = (/* unused pure expression or super */ null && ([\"subscribe\", \"data\"]));\nfunction useCryptoTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCryptoTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCryptoTransactions_ownKeys(Object(source), !0).forEach(function (key) { useCryptoTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCryptoTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCryptoTransactions_defineProperty(obj, key, value) { key = useCryptoTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCryptoTransactions_toPropertyKey(arg) { var key = useCryptoTransactions_toPrimitive(arg, \"string\"); return useCryptoTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCryptoTransactions_toPrimitive(input, hint) { if (useCryptoTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCryptoTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCryptoTransactions_toConsumableArray(arr) { return useCryptoTransactions_arrayWithoutHoles(arr) || useCryptoTransactions_iterableToArray(arr) || useCryptoTransactions_unsupportedIterableToArray(arr) || useCryptoTransactions_nonIterableSpread(); }\nfunction useCryptoTransactions_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCryptoTransactions_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useCryptoTransactions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useCryptoTransactions_arrayLikeToArray(arr); }\nfunction useCryptoTransactions_slicedToArray(arr, i) { return useCryptoTransactions_arrayWithHoles(arr) || useCryptoTransactions_iterableToArrayLimit(arr, i) || useCryptoTransactions_unsupportedIterableToArray(arr, i) || useCryptoTransactions_nonIterableRest(); }\nfunction useCryptoTransactions_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCryptoTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useCryptoTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCryptoTransactions_arrayLikeToArray(o, minLen); }\nfunction useCryptoTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useCryptoTransactions_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useCryptoTransactions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction useCryptoTransactions_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\nvar getFormattedConfirmations = function getFormattedConfirmations(transaction) {\n  switch (transaction.status_code) {\n    case 'CONFIRMED':\n      return 'Confirmed';\n    case 'ERROR':\n      return 'NA';\n    default:\n      return transaction.confirmations || 'Pending';\n  }\n};\nvar getStatusName = function getStatusName(status_code) {\n  switch (status_code) {\n    case 'CONFIRMED':\n    case 'SENT':\n      return 'Successful';\n    case 'ERROR':\n    case 'REJECTED':\n    case 'REVERTED':\n      return 'Unsuccessful';\n    case 'PENDING':\n    case 'PERFORMING_BLOCKCHAIN_TXN':\n    case 'PROCESSING':\n    case 'REVERTING':\n    case 'VERIFIED':\n      return 'In process';\n    case 'CANCELLED':\n      return 'Cancelled';\n    case 'LOCKED':\n      return 'In review';\n    default:\n      return '';\n  }\n};\nvar getStatusDescription = function getStatusDescription(transaction_type, status_code) {\n  switch (status_code) {\n    // deposit-specific:\n    case 'CONFIRMED':\n      return 'Your deposit is successful.';\n    case 'PENDING':\n      return \"We've received your request and are waiting for more blockchain confirmations.\";\n    // withdrawal-specific:\n    case 'CANCELLED':\n      return \"You've cancelled your withdrawal request.\";\n    case 'LOCKED':\n      return \"We're reviewing your withdrawal request. You may still cancel this transaction if you wish.\\nOnce we start processing, you won't be able to cancel.\";\n    case 'PERFORMING_BLOCKCHAIN_TXN':\n      return \"We're sending your request to the blockchain.\";\n    case 'PROCESSING':\n      return \"We're awaiting confirmation from the blockchain.\";\n    case 'REJECTED':\n    case 'REVERTED':\n      return \"Your withdrawal is unsuccessful. We've sent you an email with more information.\";\n    case 'REVERTING':\n    case 'VERIFIED':\n      return \"We're processing your withdrawal.\";\n    case 'SENT':\n      return 'Your withdrawal is successful.';\n    // both:\n    case 'ERROR':\n      return \"Your \".concat(transaction_type, \" is unsuccessful due to an error on the blockchain. Please contact \").concat(transaction_type === 'deposit' ? 'your crypto wallet service provider' : 'us via live chat', \" for more info.\");\n    default:\n      return '';\n  }\n};\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nvar useCryptoTransactions = function useCryptoTransactions() {\n  var _account$currency_con, _account$currency_con2, _data$cashier_payment2;\n  var _useSubscription = useSubscription('cashier_payments'),\n    subscribe = _useSubscription.subscribe,\n    data = _useSubscription.data,\n    rest = useCryptoTransactions_objectWithoutProperties(_useSubscription, useCryptoTransactions_excluded);\n  var _useState = useState(),\n    _useState2 = useCryptoTransactions_slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  var _useAuthorize = useAuthorize(),\n    preferred_language = _useAuthorize.data.preferred_language;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var display_code = (account === null || account === void 0 ? void 0 : (_account$currency_con = account.currency_config) === null || _account$currency_con === void 0 ? void 0 : _account$currency_con.display_code) || 'USD';\n  var fractional_digits = (account === null || account === void 0 ? void 0 : (_account$currency_con2 = account.currency_config) === null || _account$currency_con2 === void 0 ? void 0 : _account$currency_con2.fractional_digits) || 2;\n\n  // Reset transactions data\n  var resetData = useCallback(function () {\n    return setTransactions(undefined);\n  }, []);\n  useEffect(function () {\n    setTransactions(function (old_transactions) {\n      var _data$cashier_payment;\n      var new_transactions = data === null || data === void 0 ? void 0 : (_data$cashier_payment = data.cashier_payments) === null || _data$cashier_payment === void 0 ? void 0 : _data$cashier_payment.crypto;\n      if (!new_transactions) return old_transactions;\n      if (!old_transactions) return new_transactions;\n      var updated_transactions = useCryptoTransactions_toConsumableArray(old_transactions);\n\n      // For each new transaction, check if it exists in the old transactions.\n      new_transactions.forEach(function (new_transaction) {\n        // Find the index of the new transaction in the old transactions if exists.\n        var index = updated_transactions.findIndex(function (old_transaction) {\n          return old_transaction.id === new_transaction.id;\n        });\n\n        // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n        if (index === -1) {\n          updated_transactions.push(new_transaction);\n        } else {\n          updated_transactions[index] = new_transaction;\n        }\n      });\n      return updated_transactions;\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$cashier_payment2 = data.cashier_payments) === null || _data$cashier_payment2 === void 0 ? void 0 : _data$cashier_payment2.crypto]);\n\n  // Add additional information to each transaction.\n  var modified_transactions = useMemo(function () {\n    if (!transactions || !transactions.length) return undefined;\n    return transactions.map(function (transaction) {\n      return useCryptoTransactions_objectSpread(useCryptoTransactions_objectSpread({}, transaction), {}, {\n        /** Description of a transaction status */\n        description: getStatusDescription(transaction.transaction_type, transaction.status_code),\n        /** Formatted amount */\n        formatted_amount: displayMoney(transaction.amount || 0, display_code, {\n          fractional_digits: fractional_digits,\n          preferred_language: preferred_language\n        }),\n        /** Formatted transaction hash */\n        formatted_transaction_hash: transaction.transaction_hash ? getTruncatedString(transaction.transaction_hash, {\n          type: 'middle'\n        }) : 'NA',\n        /** Formatted address hash */\n        formatted_address_hash: transaction.address_hash ? getTruncatedString(transaction.address_hash, {\n          type: 'middle'\n        }) : 'NA',\n        /** Formatted confirmations status */\n        formatted_confirmations: getFormattedConfirmations(transaction),\n        /** Determine if the transaction is a deposit or not. */\n        is_deposit: transaction.transaction_type === 'deposit',\n        /** Determine if the transaction is a withdrawal or not. */\n        is_withdrawal: transaction.transaction_type === 'withdrawal',\n        /** Status name */\n        status_name: getStatusName(transaction.status_code)\n      });\n    });\n  }, [display_code, fractional_digits, preferred_language, transactions]);\n\n  // Sort transactions by submit time.\n  var sorted_transactions = useMemo(function () {\n    return modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions.sort(function (a, b) {\n      return b.submit_date - a.submit_date;\n    });\n  }, [modified_transactions]);\n  // Get the last transaction if exists.\n  var last_transaction = modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions[0];\n  return useCryptoTransactions_objectSpread({\n    /** List of user transactions sorted by submit time. */\n    data: sorted_transactions,\n    /** Returns the last transaction if exists. */\n    last_transaction: last_transaction,\n    /** Reset transactions data */\n    resetData: resetData,\n    subscribe: subscribe\n  }, rest);\n};\n/* harmony default export */ const hooks_useCryptoTransactions = ((/* unused pure expression or super */ null && (useCryptoTransactions)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCryptoWithdrawal.ts\nfunction useCryptoWithdrawal_typeof(obj) { \"@babel/helpers - typeof\"; return useCryptoWithdrawal_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCryptoWithdrawal_typeof(obj); }\nvar useCryptoWithdrawal_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useCryptoWithdrawal_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCryptoWithdrawal_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCryptoWithdrawal_ownKeys(Object(source), !0).forEach(function (key) { useCryptoWithdrawal_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCryptoWithdrawal_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCryptoWithdrawal_defineProperty(obj, key, value) { key = useCryptoWithdrawal_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCryptoWithdrawal_toPropertyKey(arg) { var key = useCryptoWithdrawal_toPrimitive(arg, \"string\"); return useCryptoWithdrawal_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCryptoWithdrawal_toPrimitive(input, hint) { if (useCryptoWithdrawal_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCryptoWithdrawal_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCryptoWithdrawal_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCryptoWithdrawal_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCryptoWithdrawal_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that used for crypto withdrawal */\nvar useCryptoWithdrawal = function useCryptoWithdrawal() {\n  var _useMutation = useMutation('cashier'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useCryptoWithdrawal_objectWithoutProperties(_useMutation, useCryptoWithdrawal_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: useCryptoWithdrawal_objectSpread({\n        cashier: 'withdraw',\n        provider: 'crypto',\n        type: 'api'\n      }, payload)\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: useCryptoWithdrawal_objectSpread({\n        cashier: 'withdraw',\n        provider: 'crypto',\n        type: 'api'\n      }, payload)\n    });\n  }, [_mutateAsync]);\n  return useCryptoWithdrawal_objectSpread({\n    /** Function to request for crypto withdrawal */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useCryptoWithdrawal = ((/* unused pure expression or super */ null && (useCryptoWithdrawal)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCtraderServiceToken.ts\nfunction useCtraderServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useCtraderServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCtraderServiceToken_typeof(obj); }\nvar useCtraderServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCtraderServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCtraderServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCtraderServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useCtraderServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCtraderServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCtraderServiceToken_defineProperty(obj, key, value) { key = useCtraderServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCtraderServiceToken_toPropertyKey(arg) { var key = useCtraderServiceToken_toPrimitive(arg, \"string\"); return useCtraderServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCtraderServiceToken_toPrimitive(input, hint) { if (useCtraderServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCtraderServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCtraderServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCtraderServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCtraderServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that get Service Token for CTrader Platform. */\nvar useCtraderServiceToken = function useCtraderServiceToken() {\n  var _ctrader_token$servic, _ctrader_token$servic2;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'ctrader',\n        server: account !== null && account !== void 0 && account.is_virtual ? 'demo' : 'real'\n      }\n    }),\n    ctrader_token = _useQuery.data,\n    rest = useCtraderServiceToken_objectWithoutProperties(_useQuery, useCtraderServiceToken_excluded);\n  return useCtraderServiceToken_objectSpread({\n    /** return the ctrader account token */\n    data: ctrader_token === null || ctrader_token === void 0 ? void 0 : (_ctrader_token$servic = ctrader_token.service_token) === null || _ctrader_token$servic === void 0 ? void 0 : (_ctrader_token$servic2 = _ctrader_token$servic.ctrader) === null || _ctrader_token$servic2 === void 0 ? void 0 : _ctrader_token$servic2.token\n  }, rest);\n};\n/* harmony default export */ const hooks_useCtraderServiceToken = ((/* unused pure expression or super */ null && (useCtraderServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDepositCryptoAddress.ts\nfunction useDepositCryptoAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useDepositCryptoAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDepositCryptoAddress_typeof(obj); }\nvar useDepositCryptoAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useDepositCryptoAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDepositCryptoAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDepositCryptoAddress_ownKeys(Object(source), !0).forEach(function (key) { useDepositCryptoAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDepositCryptoAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDepositCryptoAddress_defineProperty(obj, key, value) { key = useDepositCryptoAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDepositCryptoAddress_toPropertyKey(arg) { var key = useDepositCryptoAddress_toPrimitive(arg, \"string\"); return useDepositCryptoAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDepositCryptoAddress_toPrimitive(input, hint) { if (useDepositCryptoAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDepositCryptoAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDepositCryptoAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the deposit crypto address. */\nvar useDepositCryptoAddress = function useDepositCryptoAddress() {\n  var _data$cashier, _data$cashier$deposit;\n  var _useMutation = useMutation('cashier'),\n    data = _useMutation.data,\n    _mutate = _useMutation.mutate,\n    rest = useDepositCryptoAddress_objectWithoutProperties(_useMutation, useDepositCryptoAddress_excluded);\n  var deposit_address = typeof (data === null || data === void 0 ? void 0 : data.cashier) !== 'string' ? data === null || data === void 0 ? void 0 : (_data$cashier = data.cashier) === null || _data$cashier === void 0 ? void 0 : (_data$cashier$deposit = _data$cashier.deposit) === null || _data$cashier$deposit === void 0 ? void 0 : _data$cashier$deposit.address : undefined;\n  var mutate = useCallback(function () {\n    return _mutate({\n      payload: {\n        cashier: 'deposit',\n        provider: 'crypto',\n        type: 'api'\n      }\n    });\n  }, [_mutate]);\n  return useDepositCryptoAddress_objectSpread(useDepositCryptoAddress_objectSpread({}, rest), {}, {\n    mutate: mutate,\n    data: deposit_address\n  });\n};\n/* harmony default export */ const hooks_useDepositCryptoAddress = ((/* unused pure expression or super */ null && (useDepositCryptoAddress)));\n// EXTERNAL MODULE: ../../../node_modules/md5/md5.js\nvar md5_md5 = __webpack_require__(\"../../../node_modules/md5/md5.js\");\n;// CONCATENATED MODULE: ../../api/src/hooks/useDocumentUpload.ts\nfunction useDocumentUpload_typeof(obj) { \"@babel/helpers - typeof\"; return useDocumentUpload_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDocumentUpload_typeof(obj); }\nvar useDocumentUpload_excluded = (/* unused pure expression or super */ null && ([\"data\", \"isLoading\", \"isSuccess\", \"mutateAsync\", \"status\"]));\nfunction useDocumentUpload_regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ useDocumentUpload_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == useDocumentUpload_typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction useDocumentUpload_toConsumableArray(arr) { return useDocumentUpload_arrayWithoutHoles(arr) || useDocumentUpload_iterableToArray(arr) || useDocumentUpload_unsupportedIterableToArray(arr) || useDocumentUpload_nonIterableSpread(); }\nfunction useDocumentUpload_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useDocumentUpload_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useDocumentUpload_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useDocumentUpload_arrayLikeToArray(arr); }\nfunction useDocumentUpload_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDocumentUpload_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDocumentUpload_ownKeys(Object(source), !0).forEach(function (key) { useDocumentUpload_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDocumentUpload_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDocumentUpload_defineProperty(obj, key, value) { key = useDocumentUpload_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDocumentUpload_toPropertyKey(arg) { var key = useDocumentUpload_toPrimitive(arg, \"string\"); return useDocumentUpload_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDocumentUpload_toPrimitive(input, hint) { if (useDocumentUpload_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDocumentUpload_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDocumentUpload_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction useDocumentUpload_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { useDocumentUpload_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { useDocumentUpload_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction useDocumentUpload_slicedToArray(arr, i) { return useDocumentUpload_arrayWithHoles(arr) || useDocumentUpload_iterableToArrayLimit(arr, i) || useDocumentUpload_unsupportedIterableToArray(arr, i) || useDocumentUpload_nonIterableRest(); }\nfunction useDocumentUpload_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useDocumentUpload_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useDocumentUpload_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useDocumentUpload_arrayLikeToArray(o, minLen); }\nfunction useDocumentUpload_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useDocumentUpload_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useDocumentUpload_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction useDocumentUpload_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDocumentUpload_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDocumentUpload_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook to handle document file uploads to our backend. */\nvar useDocumentUpload = function useDocumentUpload() {\n  var _useMutation = useMutation('document_upload'),\n    data = _useMutation.data,\n    _isLoading = _useMutation.isLoading,\n    _isSuccess = _useMutation.isSuccess,\n    mutateAsync = _useMutation.mutateAsync,\n    status = _useMutation.status,\n    rest = useDocumentUpload_objectWithoutProperties(_useMutation, useDocumentUpload_excluded);\n  var _useState = useState(false),\n    _useState2 = useDocumentUpload_slicedToArray(_useState, 2),\n    isDocumentUploaded = _useState2[0],\n    setIsDocumentUploaded = _useState2[1];\n  var activeWebSocket = getActiveWebsocket();\n  var isLoading = _isLoading || !isDocumentUploaded && status === 'success';\n  var isSuccess = _isSuccess && isDocumentUploaded;\n  var upload = useCallback( /*#__PURE__*/function () {\n    var _ref = useDocumentUpload_asyncToGenerator( /*#__PURE__*/useDocumentUpload_regeneratorRuntime().mark(function _callee2(payload) {\n      var file, fileBlob, modifiedFile, fileBuffer, checksum, updatedPayload;\n      return useDocumentUpload_regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (payload !== null && payload !== void 0 && payload.file) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", Promise.reject(new Error('No file selected')));\n            case 2:\n              file = payload.file;\n              delete payload.file;\n              _context2.next = 6;\n              return compressImageFile(file);\n            case 6:\n              fileBlob = _context2.sent;\n              _context2.next = 9;\n              return readFile(fileBlob);\n            case 9:\n              modifiedFile = _context2.sent;\n              // @ts-expect-error type mismatch\n              fileBuffer = new Uint8Array(modifiedFile.buffer);\n              checksum = md5(Array.from(fileBuffer));\n              updatedPayload = useDocumentUpload_objectSpread(useDocumentUpload_objectSpread({}, payload), {}, {\n                document_format: file.type.split('/')[1].toLocaleUpperCase(),\n                expected_checksum: checksum,\n                file_size: fileBuffer.length,\n                passthrough: {\n                  document_upload: true\n                }\n              });\n              setIsDocumentUploaded(false);\n              _context2.next = 16;\n              return mutateAsync({\n                payload: updatedPayload\n              }).then( /*#__PURE__*/function () {\n                var _ref2 = useDocumentUpload_asyncToGenerator( /*#__PURE__*/useDocumentUpload_regeneratorRuntime().mark(function _callee(res) {\n                  var _res$document_upload, _res$document_upload2;\n                  var chunks, id, type;\n                  return useDocumentUpload_regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          chunks = generateChunks(fileBuffer, {});\n                          id = numToUint8Array((res === null || res === void 0 ? void 0 : (_res$document_upload = res.document_upload) === null || _res$document_upload === void 0 ? void 0 : _res$document_upload.upload_id) || 0);\n                          type = numToUint8Array((res === null || res === void 0 ? void 0 : (_res$document_upload2 = res.document_upload) === null || _res$document_upload2 === void 0 ? void 0 : _res$document_upload2.call_type) || 0);\n                          chunks.forEach(function (chunk) {\n                            var size = numToUint8Array(chunk.length);\n                            var payload = new Uint8Array([].concat(useDocumentUpload_toConsumableArray(type), useDocumentUpload_toConsumableArray(id), useDocumentUpload_toConsumableArray(size), useDocumentUpload_toConsumableArray(chunk)));\n                            activeWebSocket === null || activeWebSocket === void 0 ? void 0 : activeWebSocket.send(payload);\n                          });\n                          setIsDocumentUploaded(true);\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function (_x3) {\n                  return _ref2.apply(this, arguments);\n                };\n              }());\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [activeWebSocket, mutateAsync]);\n  var modified_response = useMemo(function () {\n    return useDocumentUpload_objectSpread({}, data === null || data === void 0 ? void 0 : data.document_upload);\n  }, [data === null || data === void 0 ? void 0 : data.document_upload]);\n  return useDocumentUpload_objectSpread({\n    /** The upload response */\n    data: modified_response,\n    /** Function to upload the document */\n    upload: upload,\n    /** Mutation status */\n    status: status,\n    /** Whether the mutation is loading */\n    isLoading: isLoading,\n    /** Whether the mutation is successful */\n    isSuccess: isSuccess\n  }, rest);\n};\n/* harmony default export */ const hooks_useDocumentUpload = ((/* unused pure expression or super */ null && (useDocumentUpload)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDxtradeServiceToken.ts\nfunction useDxtradeServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useDxtradeServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDxtradeServiceToken_typeof(obj); }\nvar useDxtradeServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDxtradeServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDxtradeServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDxtradeServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useDxtradeServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDxtradeServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDxtradeServiceToken_defineProperty(obj, key, value) { key = useDxtradeServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDxtradeServiceToken_toPropertyKey(arg) { var key = useDxtradeServiceToken_toPrimitive(arg, \"string\"); return useDxtradeServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDxtradeServiceToken_toPrimitive(input, hint) { if (useDxtradeServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDxtradeServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDxtradeServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDxtradeServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDxtradeServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that get Service Token for Deriv X Platform. */\nvar useDxtradeServiceToken = function useDxtradeServiceToken() {\n  var _dxtrade_token$servic, _dxtrade_token$servic2;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'dxtrade',\n        server: account !== null && account !== void 0 && account.is_virtual ? 'demo' : 'real'\n      }\n    }),\n    dxtrade_token = _useQuery.data,\n    rest = useDxtradeServiceToken_objectWithoutProperties(_useQuery, useDxtradeServiceToken_excluded);\n  return useDxtradeServiceToken_objectSpread({\n    /** return the Deriv X account token */\n    data: dxtrade_token === null || dxtrade_token === void 0 ? void 0 : (_dxtrade_token$servic = dxtrade_token.service_token) === null || _dxtrade_token$servic === void 0 ? void 0 : (_dxtrade_token$servic2 = _dxtrade_token$servic.dxtrade) === null || _dxtrade_token$servic2 === void 0 ? void 0 : _dxtrade_token$servic2.token\n  }, rest);\n};\n/* harmony default export */ const hooks_useDxtradeServiceToken = ((/* unused pure expression or super */ null && (useDxtradeServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDynamicLeverage.ts\nfunction useDynamicLeverage_typeof(obj) { \"@babel/helpers - typeof\"; return useDynamicLeverage_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDynamicLeverage_typeof(obj); }\nvar useDynamicLeverage_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDynamicLeverage_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDynamicLeverage_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDynamicLeverage_ownKeys(Object(source), !0).forEach(function (key) { useDynamicLeverage_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDynamicLeverage_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDynamicLeverage_defineProperty(obj, key, value) { key = useDynamicLeverage_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDynamicLeverage_toPropertyKey(arg) { var key = useDynamicLeverage_toPrimitive(arg, \"string\"); return useDynamicLeverage_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDynamicLeverage_toPrimitive(input, hint) { if (useDynamicLeverage_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDynamicLeverage_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDynamicLeverage_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDynamicLeverage_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDynamicLeverage_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets dynamic leverage values. */\nvar useDynamicLeverage = function useDynamicLeverage(platform) {\n  var _useQuery = useQuery('trading_platform_leverage', {\n      payload: {\n        platform: platform\n      }\n    }),\n    data = _useQuery.data,\n    rest = useDynamicLeverage_objectWithoutProperties(_useQuery, useDynamicLeverage_excluded);\n\n  // Add additional information to the dynamic leverage response.\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.trading_platform_leverage)) return;\n    return useDynamicLeverage_objectSpread({}, data === null || data === void 0 ? void 0 : data.trading_platform_leverage);\n  }, [data]);\n  return useDynamicLeverage_objectSpread({\n    data: modified_data === null || modified_data === void 0 ? void 0 : modified_data.leverage\n  }, rest);\n};\n/* harmony default export */ const hooks_useDynamicLeverage = ((/* unused pure expression or super */ null && (useDynamicLeverage)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useExchangeRate.ts\nfunction useExchangeRate_typeof(obj) { \"@babel/helpers - typeof\"; return useExchangeRate_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useExchangeRate_typeof(obj); }\nvar useExchangeRate_excluded = (/* unused pure expression or super */ null && ([\"data\", \"subscribe\"]));\nfunction useExchangeRate_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useExchangeRate_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useExchangeRate_ownKeys(Object(source), !0).forEach(function (key) { useExchangeRate_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useExchangeRate_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useExchangeRate_defineProperty(obj, key, value) { key = useExchangeRate_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useExchangeRate_toPropertyKey(arg) { var key = useExchangeRate_toPrimitive(arg, \"string\"); return useExchangeRate_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useExchangeRate_toPrimitive(input, hint) { if (useExchangeRate_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useExchangeRate_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useExchangeRate_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useExchangeRate_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useExchangeRate_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that gets exchange rates from base currency to target currency */\nvar useExchangeRate = function useExchangeRate() {\n  var _useSubscription = useSubscription('exchange_rates'),\n    data = _useSubscription.data,\n    _subscribe = _useSubscription.subscribe,\n    rest = useExchangeRate_objectWithoutProperties(_useSubscription, useExchangeRate_excluded);\n  var subscribe = useCallback(function (payload) {\n    _subscribe({\n      payload: payload\n    });\n  }, [_subscribe]);\n  return useExchangeRate_objectSpread({\n    /** The exchange rates response */\n    data: data === null || data === void 0 ? void 0 : data.exchange_rates,\n    /** Function to subscribe to exchange rates */\n    subscribe: subscribe\n  }, rest);\n};\n/* harmony default export */ const hooks_useExchangeRate = ((/* unused pure expression or super */ null && (useExchangeRate)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useIdentityDocumentVerificationAdd.ts\nfunction useIdentityDocumentVerificationAdd_typeof(obj) { \"@babel/helpers - typeof\"; return useIdentityDocumentVerificationAdd_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useIdentityDocumentVerificationAdd_typeof(obj); }\nvar useIdentityDocumentVerificationAdd_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useIdentityDocumentVerificationAdd_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useIdentityDocumentVerificationAdd_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useIdentityDocumentVerificationAdd_ownKeys(Object(source), !0).forEach(function (key) { useIdentityDocumentVerificationAdd_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useIdentityDocumentVerificationAdd_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useIdentityDocumentVerificationAdd_defineProperty(obj, key, value) { key = useIdentityDocumentVerificationAdd_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useIdentityDocumentVerificationAdd_toPropertyKey(arg) { var key = useIdentityDocumentVerificationAdd_toPrimitive(arg, \"string\"); return useIdentityDocumentVerificationAdd_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useIdentityDocumentVerificationAdd_toPrimitive(input, hint) { if (useIdentityDocumentVerificationAdd_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useIdentityDocumentVerificationAdd_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useIdentityDocumentVerificationAdd_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useIdentityDocumentVerificationAdd_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useIdentityDocumentVerificationAdd_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook to submit IDV details for POI verification.\n *\n * Use cases:\n * - To submit IDV verification for verification flow in Wallets.\n */\nvar useIdentityDocumentVerificationAdd = function useIdentityDocumentVerificationAdd() {\n  var _useMutation = useMutation('identity_verification_document_add'),\n    _mutate = _useMutation.mutate,\n    rest = useIdentityDocumentVerificationAdd_objectWithoutProperties(_useMutation, useIdentityDocumentVerificationAdd_excluded);\n  var submitIDVDocuments = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useIdentityDocumentVerificationAdd_objectSpread({\n    /** Call this function upon IDV submission.\n     *\n     * @param payload - The payload to pass in which these fields are required:\n     * - document_number: The document number passed in by the user\n     * - document_type: The type of document in which the document_number is based on. Examples are either drivers_license, passport, ssnit, etc depending on the issuing country.\n     *                  These document types can often be retrieved from the `useResidenceList` hook\n     * - issuing_country: The country in which the documents are issued and supported.\n     */\n    submitIDVDocuments: submitIDVDocuments,\n    /** The original mutate function returned by useMutation */\n    _mutate: _mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useIdentityDocumentVerificationAdd = ((/* unused pure expression or super */ null && (useIdentityDocumentVerificationAdd)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useResidenceList.ts\nfunction useResidenceList_typeof(obj) { \"@babel/helpers - typeof\"; return useResidenceList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useResidenceList_typeof(obj); }\nvar useResidenceList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useResidenceList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useResidenceList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useResidenceList_ownKeys(Object(source), !0).forEach(function (key) { useResidenceList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useResidenceList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useResidenceList_defineProperty(obj, key, value) { key = useResidenceList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useResidenceList_toPropertyKey(arg) { var key = useResidenceList_toPrimitive(arg, \"string\"); return useResidenceList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useResidenceList_toPrimitive(input, hint) { if (useResidenceList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useResidenceList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useResidenceList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useResidenceList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useResidenceList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the residence list. */\nvar useResidenceList_useResidenceList = function useResidenceList() {\n  var _useQuery = useQuery('residence_list'),\n    data = _useQuery.data,\n    residence_list_rest = useResidenceList_objectWithoutProperties(_useQuery, useResidenceList_excluded);\n\n  /** Modify the residence list data. */\n  var modified_residence_list = useMemo(function () {\n    if (!data || !data.residence_list) return [];\n    return data.residence_list.map(function (residence) {\n      return useResidenceList_objectSpread({}, residence);\n    });\n  }, [data]);\n  return useResidenceList_objectSpread({\n    /** The residence list */\n    data: modified_residence_list\n  }, residence_list_rest);\n};\n/* harmony default export */ const hooks_useResidenceList = ((/* unused pure expression or super */ null && (useResidenceList_useResidenceList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/usePOI.ts\nfunction usePOI_typeof(obj) { \"@babel/helpers - typeof\"; return usePOI_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePOI_typeof(obj); }\nvar usePOI_excluded = (/* unused pure expression or super */ null && ([\"data\", \"isSuccess\"]));\nfunction usePOI_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePOI_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePOI_ownKeys(Object(source), !0).forEach(function (key) { usePOI_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePOI_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePOI_defineProperty(obj, key, value) { key = usePOI_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePOI_toPropertyKey(arg) { var key = usePOI_toPrimitive(arg, \"string\"); return usePOI_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePOI_toPrimitive(input, hint) { if (usePOI_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePOI_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePOI_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePOI_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePOI_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook to get the proof of identity verification info of the current user. */\nvar usePOI_usePOI = function usePOI() {\n  var _authentication_data$2, _authentication_data$4, _authentication_data$6;\n  var _useAuthentication = useAuthentication(),\n    authentication_data = _useAuthentication.data,\n    isAuthenticationSuccess = _useAuthentication.isSuccess,\n    rest = usePOI_objectWithoutProperties(_useAuthentication, usePOI_excluded);\n  var _useResidenceList = useResidenceList(),\n    residence_list_data = _useResidenceList.data,\n    isResidenceListSuccess = _useResidenceList.isSuccess;\n  var _useSettings = useSettings(),\n    get_settings_data = _useSettings.data,\n    isGetSettingsSuccess = _useSettings.isSuccess;\n  var previous_service = useMemo(function () {\n    var _authentication_data$;\n    var latest_poi_attempt = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$ = authentication_data.attempts) === null || _authentication_data$ === void 0 ? void 0 : _authentication_data$.latest;\n    return latest_poi_attempt === null || latest_poi_attempt === void 0 ? void 0 : latest_poi_attempt.service;\n  }, [authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$2 = authentication_data.attempts) === null || _authentication_data$2 === void 0 ? void 0 : _authentication_data$2.latest]);\n\n  /**\n   * @description Get the previous POI attempts details (if any)\n   */\n  var previous_poi = useMemo(function () {\n    var _authentication_data$3;\n    if (!previous_service) {\n      return null;\n    }\n    var services = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$3 = authentication_data.identity) === null || _authentication_data$3 === void 0 ? void 0 : _authentication_data$3.services;\n    if (services && services.manual) {\n      return {\n        service: previous_service,\n        status: services.manual.status\n      };\n    }\n    var current_service = services === null || services === void 0 ? void 0 : services[previous_service];\n    return {\n      service: previous_service,\n      status: current_service === null || current_service === void 0 ? void 0 : current_service.status,\n      reported_properties: current_service === null || current_service === void 0 ? void 0 : current_service.reported_properties,\n      last_rejected: current_service === null || current_service === void 0 ? void 0 : current_service.last_rejected,\n      submissions_left: (current_service === null || current_service === void 0 ? void 0 : current_service.submissions_left) || 0\n    };\n  }, [previous_service, authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$4 = authentication_data.identity) === null || _authentication_data$4 === void 0 ? void 0 : _authentication_data$4.services]);\n\n  /**\n   * @description Get the current step based on a few checks. Returns configuration for document validation as well.\n   */\n  var current_poi = useMemo(function () {\n    var _matching_residence_d, _matching_residence_d2, _matching_residence_d3, _matching_residence_d4, _matching_residence_d5, _matching_residence_d6, _authentication_data$5, _services$idv$submiss, _services$idv, _services$onfido$subm, _services$onfido, _services$manual;\n    var user_country_code = (get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.citizen) || (get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.country_code);\n    var matching_residence_data = residence_list_data === null || residence_list_data === void 0 ? void 0 : residence_list_data.find(function (r) {\n      return r.value === user_country_code;\n    });\n    var is_idv_supported = matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d = matching_residence_data.identity) === null || _matching_residence_d === void 0 ? void 0 : (_matching_residence_d2 = _matching_residence_d.services) === null || _matching_residence_d2 === void 0 ? void 0 : (_matching_residence_d3 = _matching_residence_d2.idv) === null || _matching_residence_d3 === void 0 ? void 0 : _matching_residence_d3.is_country_supported;\n    var is_onfido_supported = matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d4 = matching_residence_data.identity) === null || _matching_residence_d4 === void 0 ? void 0 : (_matching_residence_d5 = _matching_residence_d4.services) === null || _matching_residence_d5 === void 0 ? void 0 : (_matching_residence_d6 = _matching_residence_d5.onfido) === null || _matching_residence_d6 === void 0 ? void 0 : _matching_residence_d6.is_country_supported;\n    var services = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$5 = authentication_data.identity) === null || _authentication_data$5 === void 0 ? void 0 : _authentication_data$5.services;\n    var idv_submission_left = (_services$idv$submiss = services === null || services === void 0 ? void 0 : (_services$idv = services.idv) === null || _services$idv === void 0 ? void 0 : _services$idv.submissions_left) !== null && _services$idv$submiss !== void 0 ? _services$idv$submiss : 0;\n    var onfido_submission_left = (_services$onfido$subm = services === null || services === void 0 ? void 0 : (_services$onfido = services.onfido) === null || _services$onfido === void 0 ? void 0 : _services$onfido.submissions_left) !== null && _services$onfido$subm !== void 0 ? _services$onfido$subm : 0;\n    if (is_idv_supported && idv_submission_left && !(authentication_data !== null && authentication_data !== void 0 && authentication_data.is_idv_disallowed)) {\n      var _services$idv2, _matching_residence_d7, _matching_residence_d8, _matching_residence_d9;\n      return {\n        country_code: user_country_code,\n        service: 'idv',\n        status: services === null || services === void 0 ? void 0 : (_services$idv2 = services.idv) === null || _services$idv2 === void 0 ? void 0 : _services$idv2.status,\n        submission_left: idv_submission_left,\n        document_supported: matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d7 = matching_residence_data.identity) === null || _matching_residence_d7 === void 0 ? void 0 : (_matching_residence_d8 = _matching_residence_d7.services) === null || _matching_residence_d8 === void 0 ? void 0 : (_matching_residence_d9 = _matching_residence_d8.idv) === null || _matching_residence_d9 === void 0 ? void 0 : _matching_residence_d9.documents_supported\n      };\n    } else if (is_onfido_supported && onfido_submission_left) {\n      var _services$onfido2, _matching_residence_d10, _matching_residence_d11, _matching_residence_d12;\n      return {\n        country_code: user_country_code,\n        service: 'onfido',\n        status: services === null || services === void 0 ? void 0 : (_services$onfido2 = services.onfido) === null || _services$onfido2 === void 0 ? void 0 : _services$onfido2.status,\n        submission_left: onfido_submission_left,\n        document_supported: matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d10 = matching_residence_data.identity) === null || _matching_residence_d10 === void 0 ? void 0 : (_matching_residence_d11 = _matching_residence_d10.services) === null || _matching_residence_d11 === void 0 ? void 0 : (_matching_residence_d12 = _matching_residence_d11.onfido) === null || _matching_residence_d12 === void 0 ? void 0 : _matching_residence_d12.documents_supported\n      };\n    }\n    return {\n      country_code: user_country_code,\n      service: 'manual',\n      status: services === null || services === void 0 ? void 0 : (_services$manual = services.manual) === null || _services$manual === void 0 ? void 0 : _services$manual.status\n    };\n  }, [get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.citizen, get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.country_code, residence_list_data, authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$6 = authentication_data.identity) === null || _authentication_data$6 === void 0 ? void 0 : _authentication_data$6.services, authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.is_idv_disallowed]);\n  var modified_verification_data = useMemo(function () {\n    var _authentication_data$7, _authentication_data$8, _authentication_data$9, _authentication_data$10, _authentication_data$11;\n    if (!authentication_data) return;\n    return usePOI_objectSpread(usePOI_objectSpread({}, authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.identity), {}, {\n      previous: previous_poi,\n      current: current_poi,\n      is_pending: (authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$7 = authentication_data.identity) === null || _authentication_data$7 === void 0 ? void 0 : _authentication_data$7.status) === 'pending',\n      is_rejected: (authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$8 = authentication_data.identity) === null || _authentication_data$8 === void 0 ? void 0 : _authentication_data$8.status) === 'rejected',\n      is_expired: (authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$9 = authentication_data.identity) === null || _authentication_data$9 === void 0 ? void 0 : _authentication_data$9.status) === 'expired',\n      is_suspected: (authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$10 = authentication_data.identity) === null || _authentication_data$10 === void 0 ? void 0 : _authentication_data$10.status) === 'suspected',\n      is_verified: (authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$11 = authentication_data.identity) === null || _authentication_data$11 === void 0 ? void 0 : _authentication_data$11.status) === 'verified'\n    });\n  }, [authentication_data, current_poi, previous_poi]);\n  return usePOI_objectSpread({\n    data: modified_verification_data,\n    isSuccess: isAuthenticationSuccess && isGetSettingsSuccess && isResidenceListSuccess\n  }, rest);\n};\n/* harmony default export */ const hooks_usePOI = ((/* unused pure expression or super */ null && (usePOI_usePOI)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useJurisdictionStatus.ts\n\n\n\n/**\n * Hook that calculates/checks the verification status for a landing company/jurisdiction.\n *\n * Some jurisdictions such as Labuan requires checks for other statuses such as `is_authenticated_with_idv_photoid` status from `get_account_status` endpoint.\n * This hook verifies these checks internally and returns the appropriate verification status for a landing company/jurisdiction.\n *\n * Use cases:\n * - To show the verification badge for a MT5 account with a certain landing company/jurisdiction\n *\n *\n * @param jurisdiction - the jurisdiction/landing company, i.e. 'svg', 'bvi', 'labuan', 'vanuatu'\n * @param mt5_account_status - the status of the MT5 account, usually retrieved from MT5 accounts list item\n * @returns The following statuses:\n * - `is_failed`: The verification status for the landing company/jurisdiction has currently failed either due to expiration, rejection, suspicion status or other factors\n * - `is_pending`: The verification status for the landing company/jurisdiction is currently pending verification\n * - `is_not_applicable`: The landing company/jurisdiction is not applicable for verification. This status is only applied for `SVG` landing company/jurisdiction\n */\nvar useJurisdictionStatus = function useJurisdictionStatus(jurisdiction, mt5_account_status) {\n  var _useAuthentication = useAuthentication(),\n    authenticationStatus = _useAuthentication.data,\n    isSuccessAuthenticationStatus = _useAuthentication.isSuccess;\n  var _usePOI = usePOI(),\n    poiStatus = _usePOI.data;\n  var isSuccess = useMemo(function () {\n    var _poiStatus$current;\n    return isSuccessAuthenticationStatus && (poiStatus === null || poiStatus === void 0 ? void 0 : (_poiStatus$current = poiStatus.current) === null || _poiStatus$current === void 0 ? void 0 : _poiStatus$current.service);\n  }, [isSuccessAuthenticationStatus, poiStatus]);\n  var verification_status = useMemo(function () {\n    var isPOIServiceStatus = function isPOIServiceStatus() {\n      var _poiStatus$current2, _poiStatus$services;\n      var current_service = poiStatus === null || poiStatus === void 0 ? void 0 : (_poiStatus$current2 = poiStatus.current) === null || _poiStatus$current2 === void 0 ? void 0 : _poiStatus$current2.service;\n      var service = poiStatus === null || poiStatus === void 0 ? void 0 : (_poiStatus$services = poiStatus.services) === null || _poiStatus$services === void 0 ? void 0 : _poiStatus$services[current_service];\n      if (service !== null && service !== void 0 && service.status) {\n        for (var _len = arguments.length, statuses = new Array(_len), _key = 0; _key < _len; _key++) {\n          statuses[_key] = arguments[_key];\n        }\n        return statuses.includes(service.status);\n      }\n    };\n    var pendingStatuses = ['poa_pending', 'verification_pending'];\n    var isStatusPending = pendingStatuses.includes(mt5_account_status !== null && mt5_account_status !== void 0 ? mt5_account_status : '');\n    var status = {\n      is_failed: false,\n      is_not_applicable: false,\n      is_pending: false\n    };\n    switch (jurisdiction) {\n      case 'bvi':\n        if (isPOIServiceStatus('expired', 'rejected', 'suspected') || authenticationStatus !== null && authenticationStatus !== void 0 && authenticationStatus.is_idv_revoked || mt5_account_status === 'proof_failed') {\n          status.is_failed = true;\n        } else if (isPOIServiceStatus('pending') || isStatusPending) {\n          status.is_pending = true;\n        }\n        break;\n      case 'labuan':\n        if (isPOIServiceStatus('expired', 'rejected', 'suspected') || authenticationStatus !== null && authenticationStatus !== void 0 && authenticationStatus.is_idv_revoked || // NOTE: BE plans to rename this to `authenticated_with_idv`\n        authenticationStatus !== null && authenticationStatus !== void 0 && authenticationStatus.is_authenticated_with_idv_photoid || mt5_account_status === 'proof_failed') {\n          status.is_failed = true;\n        } else if (isPOIServiceStatus('pending') || isStatusPending) {\n          status.is_pending = true;\n        }\n        break;\n      case 'svg':\n        status.is_not_applicable = true;\n        break;\n      default:\n        // for other jurisdictions, MT5 account status already checks for POA status in BE\n        if (mt5_account_status === 'proof_failed') {\n          status.is_failed = true;\n        } else if (isStatusPending) {\n          status.is_pending = true;\n        }\n    }\n    return status;\n  }, [jurisdiction, poiStatus, authenticationStatus === null || authenticationStatus === void 0 ? void 0 : authenticationStatus.is_idv_revoked, authenticationStatus === null || authenticationStatus === void 0 ? void 0 : authenticationStatus.is_authenticated_with_idv_photoid, mt5_account_status]);\n  return {\n    data: verification_status,\n    /** checks if the hook has completed verification checks for the landing company/jurisdiction */\n    isSuccess: isSuccess\n  };\n};\n/* harmony default export */ const hooks_useJurisdictionStatus = ((/* unused pure expression or super */ null && (useJurisdictionStatus)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useMT5Deposit.ts\nfunction useMT5Deposit_typeof(obj) { \"@babel/helpers - typeof\"; return useMT5Deposit_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useMT5Deposit_typeof(obj); }\nvar useMT5Deposit_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useMT5Deposit_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useMT5Deposit_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useMT5Deposit_ownKeys(Object(source), !0).forEach(function (key) { useMT5Deposit_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useMT5Deposit_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useMT5Deposit_defineProperty(obj, key, value) { key = useMT5Deposit_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useMT5Deposit_toPropertyKey(arg) { var key = useMT5Deposit_toPrimitive(arg, \"string\"); return useMT5Deposit_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useMT5Deposit_toPrimitive(input, hint) { if (useMT5Deposit_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useMT5Deposit_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useMT5Deposit_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useMT5Deposit_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useMT5Deposit_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook for top-up of MT5 Accounts */\nvar useMT5Deposit = function useMT5Deposit() {\n  var _useMutation = useMutation('mt5_deposit'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useMT5Deposit_objectWithoutProperties(_useMutation, useMT5Deposit_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: payload\n    });\n  }, [_mutateAsync]);\n  return useMT5Deposit_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useMT5Deposit = ((/* unused pure expression or super */ null && (useMT5Deposit)));\n;// CONCATENATED MODULE: ../../api/src/constants/countries.ts\nvar countries_ALPHA_2_TO_ALPHA_3 = {\n  AF: 'AFG',\n  AX: 'ALA',\n  AL: 'ALB',\n  DZ: 'DZA',\n  AS: 'ASM',\n  AD: 'AND',\n  AO: 'AGO',\n  AI: 'AIA',\n  AQ: 'ATA',\n  AG: 'ATG',\n  AR: 'ARG',\n  AM: 'ARM',\n  AW: 'ABW',\n  AU: 'AUS',\n  AT: 'AUT',\n  AZ: 'AZE',\n  BS: 'BHS',\n  BH: 'BHR',\n  BD: 'BGD',\n  BB: 'BRB',\n  BY: 'BLR',\n  BE: 'BEL',\n  BZ: 'BLZ',\n  BJ: 'BEN',\n  BM: 'BMU',\n  BT: 'BTN',\n  BO: 'BOL',\n  BQ: 'BES',\n  BA: 'BIH',\n  BW: 'BWA',\n  BV: 'BVT',\n  BR: 'BRA',\n  VG: 'VGB',\n  IO: 'IOT',\n  BN: 'BRN',\n  BG: 'BGR',\n  BF: 'BFA',\n  BI: 'BDI',\n  KH: 'KHM',\n  CM: 'CMR',\n  CA: 'CAN',\n  CV: 'CPV',\n  KY: 'CYM',\n  CF: 'CAF',\n  TD: 'TCD',\n  CL: 'CHL',\n  CN: 'CHN',\n  HK: 'HKG',\n  MO: 'MAC',\n  CX: 'CXR',\n  CC: 'CCK',\n  CO: 'COL',\n  KM: 'COM',\n  CG: 'COG',\n  CD: 'COD',\n  CK: 'COK',\n  CR: 'CRI',\n  CI: 'CIV',\n  HR: 'HRV',\n  CU: 'CUB',\n  CW: 'CUW',\n  CY: 'CYP',\n  CZ: 'CZE',\n  DK: 'DNK',\n  DJ: 'DJI',\n  DM: 'DMA',\n  DO: 'DOM',\n  EC: 'ECU',\n  EG: 'EGY',\n  SV: 'SLV',\n  GQ: 'GNQ',\n  ER: 'ERI',\n  EE: 'EST',\n  ET: 'ETH',\n  FK: 'FLK',\n  FO: 'FRO',\n  FJ: 'FJI',\n  FI: 'FIN',\n  FR: 'FRA',\n  GF: 'GUF',\n  PF: 'PYF',\n  TF: 'ATF',\n  GA: 'GAB',\n  GM: 'GMB',\n  GE: 'GEO',\n  DE: 'DEU',\n  GH: 'GHA',\n  GI: 'GIB',\n  GR: 'GRC',\n  GL: 'GRL',\n  GD: 'GRD',\n  GP: 'GLP',\n  GU: 'GUM',\n  GT: 'GTM',\n  GG: 'GGY',\n  GN: 'GIN',\n  GW: 'GNB',\n  GY: 'GUY',\n  HT: 'HTI',\n  HM: 'HMD',\n  VA: 'VAT',\n  HN: 'HND',\n  HU: 'HUN',\n  IS: 'ISL',\n  IN: 'IND',\n  ID: 'IDN',\n  IR: 'IRN',\n  IQ: 'IRQ',\n  IE: 'IRL',\n  IM: 'IMN',\n  IL: 'ISR',\n  IT: 'ITA',\n  JM: 'JAM',\n  JP: 'JPN',\n  JE: 'JEY',\n  JO: 'JOR',\n  KZ: 'KAZ',\n  KE: 'KEN',\n  KI: 'KIR',\n  KP: 'PRK',\n  KR: 'KOR',\n  KW: 'KWT',\n  KG: 'KGZ',\n  LA: 'LAO',\n  LV: 'LVA',\n  LB: 'LBN',\n  LS: 'LSO',\n  LR: 'LBR',\n  LY: 'LBY',\n  LI: 'LIE',\n  LT: 'LTU',\n  LU: 'LUX',\n  MK: 'MKD',\n  MG: 'MDG',\n  MW: 'MWI',\n  MY: 'MYS',\n  MV: 'MDV',\n  ML: 'MLI',\n  MT: 'MLT',\n  MH: 'MHL',\n  MQ: 'MTQ',\n  MR: 'MRT',\n  MU: 'MUS',\n  YT: 'MYT',\n  MX: 'MEX',\n  FM: 'FSM',\n  MD: 'MDA',\n  MC: 'MCO',\n  MN: 'MNG',\n  ME: 'MNE',\n  MS: 'MSR',\n  MA: 'MAR',\n  MZ: 'MOZ',\n  MM: 'MMR',\n  NA: 'NAM',\n  NR: 'NRU',\n  NP: 'NPL',\n  NL: 'NLD',\n  AN: 'ANT',\n  NC: 'NCL',\n  NZ: 'NZL',\n  NI: 'NIC',\n  NE: 'NER',\n  NG: 'NGA',\n  NU: 'NIU',\n  NF: 'NFK',\n  MP: 'MNP',\n  NO: 'NOR',\n  OM: 'OMN',\n  PK: 'PAK',\n  PW: 'PLW',\n  PS: 'PSE',\n  PA: 'PAN',\n  PG: 'PNG',\n  PY: 'PRY',\n  PE: 'PER',\n  PH: 'PHL',\n  PN: 'PCN',\n  PL: 'POL',\n  PT: 'PRT',\n  PR: 'PRI',\n  QA: 'QAT',\n  RE: 'REU',\n  RO: 'ROU',\n  RU: 'RUS',\n  RW: 'RWA',\n  BL: 'BLM',\n  SH: 'SHN',\n  KN: 'KNA',\n  LC: 'LCA',\n  MF: 'MAF',\n  PM: 'SPM',\n  VC: 'VCT',\n  WS: 'WSM',\n  SM: 'SMR',\n  ST: 'STP',\n  SA: 'SAU',\n  SN: 'SEN',\n  RS: 'SRB',\n  SC: 'SYC',\n  SL: 'SLE',\n  SG: 'SGP',\n  SX: 'SXM',\n  SK: 'SVK',\n  SI: 'SVN',\n  SB: 'SLB',\n  SO: 'SOM',\n  ZA: 'ZAF',\n  GS: 'SGS',\n  SS: 'SSD',\n  ES: 'ESP',\n  LK: 'LKA',\n  SD: 'SDN',\n  SR: 'SUR',\n  SJ: 'SJM',\n  SZ: 'SWZ',\n  SE: 'SWE',\n  CH: 'CHE',\n  SY: 'SYR',\n  TW: 'TWN',\n  TJ: 'TJK',\n  TZ: 'TZA',\n  TH: 'THA',\n  TL: 'TLS',\n  TG: 'TGO',\n  TK: 'TKL',\n  TO: 'TON',\n  TT: 'TTO',\n  TN: 'TUN',\n  TR: 'TUR',\n  TM: 'TKM',\n  TC: 'TCA',\n  TV: 'TUV',\n  UG: 'UGA',\n  UA: 'UKR',\n  AE: 'ARE',\n  GB: 'GBR',\n  US: 'USA',\n  UM: 'UMI',\n  UY: 'URY',\n  UZ: 'UZB',\n  VU: 'VUT',\n  VE: 'VEN',\n  VN: 'VNM',\n  VI: 'VIR',\n  WF: 'WLF',\n  EH: 'ESH',\n  YE: 'YEM',\n  ZM: 'ZMB',\n  ZW: 'ZWE',\n  XK: 'XKX'\n};\nvar countries_ALPHA_3_TO_ALPHA_2 = {\n  AFG: 'AF',\n  ALA: 'AX',\n  ALB: 'AL',\n  DZA: 'DZ',\n  ASM: 'AS',\n  AND: 'AD',\n  AGO: 'AO',\n  AIA: 'AI',\n  ATA: 'AQ',\n  ATG: 'AG',\n  ARG: 'AR',\n  ARM: 'AM',\n  ABW: 'AW',\n  AUS: 'AU',\n  AUT: 'AT',\n  AZE: 'AZ',\n  BHS: 'BS',\n  BHR: 'BH',\n  BGD: 'BD',\n  BRB: 'BB',\n  BLR: 'BY',\n  BEL: 'BE',\n  BLZ: 'BZ',\n  BEN: 'BJ',\n  BMU: 'BM',\n  BTN: 'BT',\n  BOL: 'BO',\n  BES: 'BQ',\n  BIH: 'BA',\n  BWA: 'BW',\n  BVT: 'BV',\n  BRA: 'BR',\n  VGB: 'VG',\n  IOT: 'IO',\n  BRN: 'BN',\n  BGR: 'BG',\n  BFA: 'BF',\n  BDI: 'BI',\n  KHM: 'KH',\n  CMR: 'CM',\n  CAN: 'CA',\n  CPV: 'CV',\n  CYM: 'KY',\n  CAF: 'CF',\n  TCD: 'TD',\n  CHL: 'CL',\n  CHN: 'CN',\n  HKG: 'HK',\n  MAC: 'MO',\n  CXR: 'CX',\n  CCK: 'CC',\n  COL: 'CO',\n  COM: 'KM',\n  COG: 'CG',\n  COD: 'CD',\n  COK: 'CK',\n  CRI: 'CR',\n  CIV: 'CI',\n  HRV: 'HR',\n  CUB: 'CU',\n  CUW: 'CW',\n  CYP: 'CY',\n  CZE: 'CZ',\n  DNK: 'DK',\n  DJI: 'DJ',\n  DMA: 'DM',\n  DOM: 'DO',\n  ECU: 'EC',\n  EGY: 'EG',\n  SLV: 'SV',\n  GNQ: 'GQ',\n  ERI: 'ER',\n  EST: 'EE',\n  ETH: 'ET',\n  FLK: 'FK',\n  FRO: 'FO',\n  FJI: 'FJ',\n  FIN: 'FI',\n  FRA: 'FR',\n  GUF: 'GF',\n  PYF: 'PF',\n  ATF: 'TF',\n  GAB: 'GA',\n  GMB: 'GM',\n  GEO: 'GE',\n  DEU: 'DE',\n  GHA: 'GH',\n  GIB: 'GI',\n  GRC: 'GR',\n  GRL: 'GL',\n  GRD: 'GD',\n  GLP: 'GP',\n  GUM: 'GU',\n  GTM: 'GT',\n  GGY: 'GG',\n  GIN: 'GN',\n  GNB: 'GW',\n  GUY: 'GY',\n  HTI: 'HT',\n  HMD: 'HM',\n  VAT: 'VA',\n  HND: 'HN',\n  HUN: 'HU',\n  ISL: 'IS',\n  IND: 'IN',\n  IDN: 'ID',\n  IRN: 'IR',\n  IRQ: 'IQ',\n  IRL: 'IE',\n  IMN: 'IM',\n  ISR: 'IL',\n  ITA: 'IT',\n  JAM: 'JM',\n  JPN: 'JP',\n  JEY: 'JE',\n  JOR: 'JO',\n  KAZ: 'KZ',\n  KEN: 'KE',\n  KIR: 'KI',\n  PRK: 'KP',\n  KOR: 'KR',\n  KWT: 'KW',\n  KGZ: 'KG',\n  LAO: 'LA',\n  LVA: 'LV',\n  LBN: 'LB',\n  LSO: 'LS',\n  LBR: 'LR',\n  LBY: 'LY',\n  LIE: 'LI',\n  LTU: 'LT',\n  LUX: 'LU',\n  MKD: 'MK',\n  MDG: 'MG',\n  MWI: 'MW',\n  MYS: 'MY',\n  MDV: 'MV',\n  MLI: 'ML',\n  MLT: 'MT',\n  MHL: 'MH',\n  MTQ: 'MQ',\n  MRT: 'MR',\n  MUS: 'MU',\n  MYT: 'YT',\n  MEX: 'MX',\n  FSM: 'FM',\n  MDA: 'MD',\n  MCO: 'MC',\n  MNG: 'MN',\n  MNE: 'ME',\n  MSR: 'MS',\n  MAR: 'MA',\n  MOZ: 'MZ',\n  MMR: 'MM',\n  NAM: 'NA',\n  NRU: 'NR',\n  NPL: 'NP',\n  NLD: 'NL',\n  ANT: 'AN',\n  NCL: 'NC',\n  NZL: 'NZ',\n  NIC: 'NI',\n  NER: 'NE',\n  NGA: 'NG',\n  NIU: 'NU',\n  NFK: 'NF',\n  MNP: 'MP',\n  NOR: 'NO',\n  OMN: 'OM',\n  PAK: 'PK',\n  PLW: 'PW',\n  PSE: 'PS',\n  PAN: 'PA',\n  PNG: 'PG',\n  PRY: 'PY',\n  PER: 'PE',\n  PHL: 'PH',\n  PCN: 'PN',\n  POL: 'PL',\n  PRT: 'PT',\n  PRI: 'PR',\n  QAT: 'QA',\n  REU: 'RE',\n  ROU: 'RO',\n  RUS: 'RU',\n  RWA: 'RW',\n  BLM: 'BL',\n  SHN: 'SH',\n  KNA: 'KN',\n  LCA: 'LC',\n  MAF: 'MF',\n  SPM: 'PM',\n  VCT: 'VC',\n  WSM: 'WS',\n  SMR: 'SM',\n  STP: 'ST',\n  SAU: 'SA',\n  SEN: 'SN',\n  SRB: 'RS',\n  SYC: 'SC',\n  SLE: 'SL',\n  SGP: 'SG',\n  SXM: 'SX',\n  SVK: 'SK',\n  SVN: 'SI',\n  SLB: 'SB',\n  SOM: 'SO',\n  ZAF: 'ZA',\n  SGS: 'GS',\n  SSD: 'SS',\n  ESP: 'ES',\n  LKA: 'LK',\n  SDN: 'SD',\n  SUR: 'SR',\n  SJM: 'SJ',\n  SWZ: 'SZ',\n  SWE: 'SE',\n  CHE: 'CH',\n  SYR: 'SY',\n  TWN: 'TW',\n  TJK: 'TJ',\n  TZA: 'TZ',\n  THA: 'TH',\n  TLS: 'TL',\n  TGO: 'TG',\n  TKL: 'TK',\n  TON: 'TO',\n  TTO: 'TT',\n  TUN: 'TN',\n  TUR: 'TR',\n  TKM: 'TM',\n  TCA: 'TC',\n  TUV: 'TV',\n  UGA: 'UG',\n  UKR: 'UA',\n  ARE: 'AE',\n  GBR: 'GB',\n  USA: 'US',\n  UMI: 'UM',\n  URY: 'UY',\n  UZB: 'UZ',\n  VUT: 'VU',\n  VEN: 'VE',\n  VNM: 'VN',\n  VIR: 'VI',\n  WLF: 'WF',\n  ESH: 'EH',\n  YEM: 'YE',\n  ZMB: 'ZM',\n  ZWE: 'ZW',\n  XKX: 'XK'\n};\n;// CONCATENATED MODULE: ../../api/src/constants/onfido.ts\nvar ROOT_CLASS = 'manual-poi-details';\nvar DOCUMENT_TYPES = {\n  NATIONAL_IDENTITY_CARD: 'national_identity_card',\n  NIMC_SLIP: 'nimc_slip',\n  PASSPORT: 'passport',\n  DRIVING_LICENCE: 'driving_licence',\n  BIRTH_CERTIFICATE: 'birth_certificate',\n  SELFIE_WITH_ID: 'selfie_with_id',\n  OTHER: 'other'\n};\nvar PAGE_TYPE = {\n  FRONT: 'front',\n  BACK: 'back',\n  PHOTO: 'photo'\n};\nvar SELFIE_DOCUMENT = {\n  document_type: DOCUMENT_TYPES.SELFIE_WITH_ID,\n  pageType: PAGE_TYPE.PHOTO,\n  name: 'selfie_with_id',\n  icon: 'IcSelfie',\n  info: 'Upload your selfie.'\n};\nvar date_field = {\n  name: 'expiry_date',\n  label: 'Expiry date',\n  type: 'date',\n  required: true\n};\nvar onfido_ONFIDO_PHRASES = {\n  country_select: {\n    alert_dropdown: {\n      country_not_found: 'Country not found'\n    },\n    alert: {\n      another_doc: 'Documents from that country are not currently supported — <fallback>try another document type</fallback>'\n    },\n    button_primary: 'Submit document',\n    search: {\n      accessibility: 'Select country',\n      input_placeholder: 'e.g. United States',\n      label: 'Search for country'\n    },\n    title: 'Select issuing country'\n  },\n  cross_device_checklist: {\n    button_primary: 'Submit verification',\n    info: 'Tips',\n    list_item_doc_multiple: 'Documents uploaded',\n    list_item_doc_one: 'Document uploaded',\n    list_item_selfie: 'Selfie uploaded',\n    subtitle: \"We're now ready to verify your identity\",\n    title: \"Great, that's everything we need\"\n  },\n  cross_device_error_desktop: {\n    subtitle: 'The link only works on mobile devices',\n    title: \"Something's gone wrong\"\n  },\n  cross_device_error_restart: {\n    subtitle: \"You'll need to restart your verification on your computer\",\n    title: \"Something's gone wrong\"\n  },\n  cross_device_intro: {\n    button_primary: 'Get secure link',\n    list_accessibility: 'Steps required to continue verification on your mobile',\n    list_item_finish: 'Check back here to finish the submission',\n    list_item_open_link: 'Open the link and complete the tasks',\n    list_item_send_phone: 'Send a secure link to your phone',\n    subtitle: \"Here's how to do it:\",\n    title: 'Continue on your phone'\n  },\n  cross_device_return: {\n    body: 'Your computer may take a few seconds to update',\n    subtitle: 'You can now return to your computer to continue',\n    title: 'Uploads successful'\n  },\n  doc_confirmation: {\n    alert: {\n      blur_detail: 'Make sure everything is clear',\n      blur_title: 'Blurry photo detected',\n      crop_detail: 'Make sure full document is visible',\n      crop_title: 'Cut-off image detected',\n      glare_detail: 'Move away from direct light',\n      glare_title: 'Glare detected',\n      no_doc_detail: 'Make sure all of the document is in the photo',\n      no_doc_title: 'No document detected'\n    },\n    body_id: 'Make sure your card details are clear to read, with no blur or glare',\n    body_image_medium: 'It’ll take longer to verify you if we can’t read it',\n    body_image_poor: 'To smoothly verify you, we need a better photo',\n    body_license: 'Make sure your license details are clear to read, with no blur or glare',\n    body_passport: 'Make sure your passport details are clear to read, with no blur or glare',\n    body_permit: 'Make sure your permit details are clear to read, with no blur or glare',\n    body_tax_letter: 'Make sure details are clear to read, with no blur or glare',\n    button_close: 'Close',\n    button_primary_redo: 'Redo',\n    button_primary_upload: 'Confirm',\n    button_primary_upload_anyway: 'Upload anyway',\n    button_secondary_redo: 'Redo',\n    button_zoom: 'Enlarge image',\n    image_accessibility: 'Photo of your document',\n    title: 'Check your image'\n  },\n  doc_select: {\n    button_id: 'Identity card',\n    button_id_detail: 'Front and back',\n    button_license: \"Driver's license\",\n    button_license_detail: 'Front and back',\n    button_passport: 'Passport',\n    button_passport_detail: 'Face photo page',\n    button_permit: 'Residence permit',\n    button_permit_detail: 'Front and back',\n    extra_no_mobile: 'Sorry, no mobile phone bills',\n    list_accessibility: 'Documents you can use to verify your identity',\n    subtitle: 'It must be an official photo ID',\n    subtitle_poa: 'These are the documents most likely to show your current home address',\n    title: 'Choose document',\n    title_poa: 'Select a %{country} document'\n  },\n  doc_submit: {\n    button_link_upload: 'or upload photo – no scans or photocopies',\n    button_primary: 'Continue on phone',\n    subtitle: 'Take a photo with your phone',\n    title_id_back: 'Submit identity card (back)',\n    title_id_front: 'Submit identity card (front)',\n    title_license_back: 'Submit license (back)',\n    title_license_front: 'Submit license (front)',\n    title_passport: 'Submit passport photo page',\n    title_permit_back: 'Submit residence permit (back)',\n    title_permit_front: 'Submit residence permit (front)'\n  },\n  error_unsupported_browser: {\n    subtitle_android: 'Restart the process on the latest version of Google Chrome',\n    subtitle_ios: 'Restart the process on the latest version of Safari',\n    title_android: 'Unsupported browser',\n    title_ios: 'Unsupported browser'\n  },\n  generic: {\n    accessibility: {\n      close_sdk_screen: 'Close identity verification screen',\n      dismiss_alert: 'Dismiss alert'\n    },\n    back: 'back',\n    close: 'close',\n    errors: {\n      interrupted_flow_error: {\n        instruction: 'Restart process on a different device',\n        message: 'Camera not detected'\n      },\n      invalid_size: {\n        instruction: 'Must be under 10MB.',\n        message: 'File size exceeded.'\n      },\n      invalid_type: {\n        instruction: 'Try using another file type.',\n        message: 'File not uploaded.'\n      },\n      lazy_loading: {\n        message: 'An error occurred while loading the component'\n      },\n      multiple_faces: {\n        instruction: 'Only your face can be in the selfie',\n        message: 'Multiple faces found'\n      },\n      no_face: {\n        instruction: 'Your face is needed in the selfie',\n        message: 'No face found'\n      },\n      request_error: {\n        instruction: 'Please try again',\n        message: 'Connection lost'\n      },\n      sms_failed: {\n        instruction: 'Copy the link to your phone',\n        message: \"Something's gone wrong\"\n      },\n      sms_overuse: {\n        instruction: 'Copy the link to your phone',\n        message: 'Too many failed attempts'\n      },\n      unsupported_file: {\n        instruction: 'Try using a JPG or PNG file',\n        message: 'File type not supported'\n      }\n    },\n    lazy_load_placeholder: 'Loading...',\n    loading: 'Loading'\n  },\n  get_link: {\n    alert_wrong_number: 'Check that your number is correct',\n    button_copied: 'Copied',\n    button_copy: 'Copy',\n    button_submit: 'Send link',\n    info_qr_how: 'How to scan a QR code',\n    info_qr_how_list_item_camera: 'Point your phone’s camera at the QR code',\n    info_qr_how_list_item_download: 'If it doesn’t work, download a QR code scanner from Google Play or the App Store',\n    link_divider: 'or',\n    link_qr: 'Scan QR code',\n    link_sms: 'Get link via SMS',\n    link_url: 'Copy link',\n    loader_sending: 'Sending',\n    number_field_input_placeholder: 'Enter mobile number',\n    number_field_label: 'Enter your mobile number:',\n    subtitle_qr: 'Scan the QR code with your phone',\n    subtitle_sms: 'Send this one-time link to your phone',\n    subtitle_url: 'Open the link on your mobile',\n    title: 'Get your secure link',\n    url_field_label: 'Copy the link to your mobile browser'\n  },\n  linked_computer: {\n    button_primary: 'Continue',\n    info: 'Make sure§',\n    list_item_desktop_open: '2. Your desktop window stays open',\n    list_item_sent_by_you: '1. This link was sent by you',\n    subtitle: 'Continue with the verification',\n    title: 'Linked to your computer'\n  },\n  mobilePhrases: {\n    photo_upload: {\n      body_id_back: 'Take a photo of the back of your card',\n      body_id_front: 'Take a photo of the front of your card',\n      body_license_back: 'Take a photo of the back of your license',\n      body_license_front: 'Take a photo of the front of your license',\n      body_passport: 'Take a photo of your passport photo page',\n      body_selfie: 'Take a selfie showing your face'\n    },\n    selfie_capture: {\n      alert: {\n        camera_inactive: {\n          detail: 'Take a photo using the <fallback>basic camera mode</fallback> instead'\n        },\n        camera_not_working: {\n          detail: 'Take a photo using the <fallback>basic camera mode</fallback> instead'\n        }\n      }\n    },\n    upload_guide: {\n      button_primary: 'Take a photo',\n      title: 'Passport photo page'\n    }\n  },\n  outro: {\n    body: 'Thank you',\n    title: 'Verification complete'\n  },\n  permission_recovery: {\n    button_primary: 'Refresh',\n    info: 'Recovery',\n    list_header_cam: 'Follow these steps to recover camera access:',\n    list_item_action_cam: 'Refresh this page to restart the identity verification process',\n    list_item_how_to_cam: 'Grant access to your camera from your browser settings',\n    subtitle_cam: 'Recover camera access to continue face verification',\n    title_cam: 'Camera access is denied'\n  },\n  permission: {\n    body_cam: 'We cannot verify you without using your camera',\n    button_primary_cam: 'Enable camera',\n    subtitle_cam: 'When prompted, you must enable camera access to continue',\n    title_cam: 'Allow camera access'\n  },\n  photo_upload: {\n    body_bank_statement: 'Provide the whole document page for best results',\n    body_benefits_letter: 'Provide the whole document page for best results',\n    body_bill: 'Provide the whole document page for best results',\n    body_government_letter: 'Provide the whole document page for best results',\n    body_id_back: 'Upload back of card from your computer',\n    body_id_front: 'Upload front of card from your computer',\n    body_license_back: 'Upload back of license from your computer',\n    body_license_front: 'Upload front of license from your computer',\n    body_passport: 'Upload passport photo page from your computer',\n    body_selfie: 'Upload a selfie from your computer',\n    body_tax_letter: 'Provide the whole document page for best results',\n    button_take_photo: 'Take photo',\n    button_upload: 'Upload',\n    title_selfie: 'Selfie'\n  },\n  selfie_capture: {\n    alert: {\n      camera_inactive: {\n        detail: 'Check that it is connected and functional. You can also <fallback>continue verification on your phone</fallback>',\n        detail_no_fallback: 'Make sure your device has a working camera',\n        title: 'Camera not working?'\n      },\n      camera_not_working: {\n        detail: 'It may be disconnected. <fallback>Try using your phone instead</fallback>.',\n        detail_no_fallback: \"Make sure your device's camera works\",\n        title: 'Camera not working'\n      },\n      timeout: {\n        detail: \"Remember to press stop when you're done. <fallback>Redo video actions</fallback>\",\n        title: 'Looks like you took too long'\n      }\n    },\n    button_accessibility: 'Take a photo',\n    frame_accessibility: 'View from camera',\n    title: 'Take a selfie'\n  },\n  selfie_confirmation: {\n    image_accessibility: 'Photo of your face',\n    subtitle: 'Make sure your selfie clearly shows your face',\n    title: 'Check selfie'\n  },\n  selfie_intro: {\n    button_primary: 'Continue',\n    list_accessibility: 'Tips to take a good selfie',\n    list_item_face_forward: 'Face forward and make sure your eyes are clearly visible',\n    list_item_no_glasses: 'Remove your glasses, if necessary',\n    subtitle: \"We'll compare it with your document\",\n    title: 'Take a selfie'\n  },\n  sms_sent: {\n    info: 'Tips',\n    info_link_expire: 'Your link will expire in one hour',\n    info_link_window: 'Keep this window open while using your mobile',\n    link: 'Resend link',\n    subtitle: \"We've sent a secure link to %{number}\",\n    subtitle_minutes: 'It may take a few minutes to arrive',\n    title: 'Check your mobile'\n  },\n  switch_phone: {\n    info: 'Tips',\n    info_link_expire: 'Your mobile link will expire in one hour',\n    info_link_refresh: \"Don't refresh this page\",\n    info_link_window: 'Keep this window open while using your mobile',\n    link: 'Cancel',\n    subtitle: \"Once you've finished we'll take you to the next step\",\n    title: 'Connected to your mobile'\n  },\n  upload_guide: {\n    button_primary: 'Upload photo',\n    image_detail_blur_alt: 'Example of a blurry document',\n    image_detail_blur_label: 'All details must be clear — nothing blurry',\n    image_detail_cutoff_alt: 'Example of a cut-off document',\n    image_detail_cutoff_label: 'Show all details — including the bottom 2 lines',\n    image_detail_glare_alt: 'Example of a document with glare',\n    image_detail_glare_label: 'Move away from direct light — no glare',\n    image_detail_good_alt: 'Document example',\n    image_detail_good_label: 'The photo should clearly show your document',\n    subtitle: 'Scans and photocopies are not accepted',\n    title: 'Upload passport photo page'\n  }\n};\n;// CONCATENATED MODULE: ../../api/src/constants/index.ts\n\n\n;// CONCATENATED MODULE: ../../api/src/hooks/useOnfidoServiceToken.ts\nfunction useOnfidoServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useOnfidoServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useOnfidoServiceToken_typeof(obj); }\nvar useOnfidoServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useOnfidoServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useOnfidoServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useOnfidoServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useOnfidoServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useOnfidoServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useOnfidoServiceToken_defineProperty(obj, key, value) { key = useOnfidoServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useOnfidoServiceToken_toPropertyKey(arg) { var key = useOnfidoServiceToken_toPrimitive(arg, \"string\"); return useOnfidoServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useOnfidoServiceToken_toPrimitive(input, hint) { if (useOnfidoServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useOnfidoServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useOnfidoServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useOnfidoServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useOnfidoServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n// TODO: Merge service token hooks into a single service token hook call\n/** A custom hook that get Service Token for Onfido. */\nvar useOnfidoServiceToken_useOnfidoServiceToken = function useOnfidoServiceToken() {\n  var _settings$country_cod, _onfido_token_data$se;\n  var _useSettings = useSettings(),\n    settings = _useSettings.data,\n    isSuccess = _useSettings.isSuccess;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'onfido',\n        country: settings !== null && settings !== void 0 && settings.country_code ? (settings === null || settings === void 0 ? void 0 : (_settings$country_cod = settings.country_code) === null || _settings$country_cod === void 0 ? void 0 : _settings$country_cod.length) >= 3 ? ALPHA_3_TO_ALPHA_2[settings === null || settings === void 0 ? void 0 : settings.country_code] : settings === null || settings === void 0 ? void 0 : settings.country_code : ''\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    onfido_token_data = _useQuery.data,\n    rest = useOnfidoServiceToken_objectWithoutProperties(_useQuery, useOnfidoServiceToken_excluded);\n  return useOnfidoServiceToken_objectSpread({\n    /** return the onfido account token */\n    data: useOnfidoServiceToken_objectSpread({}, onfido_token_data === null || onfido_token_data === void 0 ? void 0 : (_onfido_token_data$se = onfido_token_data.service_token) === null || _onfido_token_data$se === void 0 ? void 0 : _onfido_token_data$se.onfido)\n  }, rest);\n};\n/* harmony default export */ const hooks_useOnfidoServiceToken = ((/* unused pure expression or super */ null && (useOnfidoServiceToken_useOnfidoServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useOnfidoNotificationEvent.ts\nfunction useOnfidoNotificationEvent_typeof(obj) { \"@babel/helpers - typeof\"; return useOnfidoNotificationEvent_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useOnfidoNotificationEvent_typeof(obj); }\nvar useOnfidoNotificationEvent_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useOnfidoNotificationEvent_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useOnfidoNotificationEvent_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useOnfidoNotificationEvent_ownKeys(Object(source), !0).forEach(function (key) { useOnfidoNotificationEvent_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useOnfidoNotificationEvent_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useOnfidoNotificationEvent_defineProperty(obj, key, value) { key = useOnfidoNotificationEvent_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useOnfidoNotificationEvent_toPropertyKey(arg) { var key = useOnfidoNotificationEvent_toPrimitive(arg, \"string\"); return useOnfidoNotificationEvent_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useOnfidoNotificationEvent_toPrimitive(input, hint) { if (useOnfidoNotificationEvent_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useOnfidoNotificationEvent_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useOnfidoNotificationEvent_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useOnfidoNotificationEvent_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useOnfidoNotificationEvent_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to send notification event to backend about Onfido successful documents uploaded */\nvar useOnfidoNotificationEvent_useOnfidoNotificationEvent = function useOnfidoNotificationEvent() {\n  var _useMutation = useMutation('notification_event'),\n    _mutate = _useMutation.mutate,\n    rest = useOnfidoNotificationEvent_objectWithoutProperties(_useMutation, useOnfidoNotificationEvent_excluded);\n  var mutate = useCallback(function (documentIds) {\n    return _mutate({\n      payload: {\n        category: 'authentication',\n        event: 'poi_documents_uploaded',\n        args: {\n          documents: documentIds\n        }\n      }\n    });\n  }, [_mutate]);\n  return useOnfidoNotificationEvent_objectSpread({\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useOnfidoNotificationEvent = ((/* unused pure expression or super */ null && (useOnfidoNotificationEvent_useOnfidoNotificationEvent)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useOnfido.ts\nfunction useOnfido_typeof(obj) { \"@babel/helpers - typeof\"; return useOnfido_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useOnfido_typeof(obj); }\nfunction useOnfido_regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ useOnfido_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == useOnfido_typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction useOnfido_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction useOnfido_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { useOnfido_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { useOnfido_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction useOnfido_slicedToArray(arr, i) { return useOnfido_arrayWithHoles(arr) || useOnfido_iterableToArrayLimit(arr, i) || useOnfido_unsupportedIterableToArray(arr, i) || useOnfido_nonIterableRest(); }\nfunction useOnfido_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useOnfido_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useOnfido_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useOnfido_arrayLikeToArray(o, minLen); }\nfunction useOnfido_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useOnfido_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useOnfido_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n/** A custom hook to initialize Onfido SDK.\n * To initialize Onfido, ensure that an empty container is present.\n * Call the hook and use `onfidoContainerId` to mark the empty container where the Onfido UI is to be mounted.\n * For example:\n * ```\n * const { data: { onfidoContainerId } } = useOnfido()\n * ...\n * return (\n *    <>\n *       ...\n *       <div id={onfidoContainerId}></div>\n *       ...\n *    </>\n * )\n * ```\n */\nvar useOnfido = function useOnfido() {\n  // used to check that we only initialize and load the onfido script once\n  var _useState = useState(false),\n    _useState2 = useOnfido_slicedToArray(_useState, 2),\n    isOnfidoLoaded = _useState2[0],\n    setIsOnfidoLoaded = _useState2[1];\n  // use to check that we do not re-attempt to reload the onfido script while its still loading\n  var _useState3 = useState(false),\n    _useState4 = useOnfido_slicedToArray(_useState3, 2),\n    isOnfidoLoading = _useState4[0],\n    setIsOnfidoLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = useOnfido_slicedToArray(_useState5, 2),\n    hasSubmitted = _useState6[0],\n    setHasSubmitted = _useState6[1];\n\n  /**\n   * A reference to the Onfido SDK\n   */\n  var onfidoRef = useRef(null);\n  /**\n   * A generated ID which should be assigned to a container where the Onfido UI is to be mounted.\n   * For example:\n   * ```\n   * const { data: { onfidoContainerId } } = useOnfido()\n   * ...\n   * return (\n   *    <>\n   *       ...\n   *       <div id={onfidoContainerId}></div>\n   *       ...\n   *    </>\n   * )\n   * ```\n   */\n  var onfidoContainerId = useMemo(function () {\n    return uuidv4();\n  }, []);\n\n  // settings for retrieving country code\n  var _useSettings = useSettings(),\n    settings = _useSettings.data;\n  // residence list for retrieving supported documents for onfido for the user's country\n  var _useResidenceList = useResidenceList(),\n    residenceList = _useResidenceList.data;\n  // onfido service token to be passed in Onfido SDK\n  var _useOnfidoServiceToke = useOnfidoServiceToken(),\n    token = _useOnfidoServiceToke.data.token;\n  // notification event for onfido once user submits documents\n  var _useOnfidoNotificatio = useOnfidoNotificationEvent(),\n    submitDocuments = _useOnfidoNotificatio.mutate;\n  var countryCode = useMemo(function () {\n    return (settings === null || settings === void 0 ? void 0 : settings.country_code) || '';\n  }, [settings === null || settings === void 0 ? void 0 : settings.country_code]);\n  var supportedDocuments = useMemo(function () {\n    if (countryCode && residenceList.length) {\n      var _residenceList$find, _residenceList$find$i, _residenceList$find$i2;\n      var onfidoResidence = (_residenceList$find = residenceList.find(function (residence) {\n        return (residence === null || residence === void 0 ? void 0 : residence.value) === countryCode;\n      })) === null || _residenceList$find === void 0 ? void 0 : (_residenceList$find$i = _residenceList$find.identity) === null || _residenceList$find$i === void 0 ? void 0 : (_residenceList$find$i2 = _residenceList$find$i.services) === null || _residenceList$find$i2 === void 0 ? void 0 : _residenceList$find$i2.onfido;\n      if (onfidoResidence && onfidoResidence.is_country_supported) {\n        return Object.keys(onfidoResidence.documents_supported || {}).map(function (document) {\n          var _onfidoResidence$docu;\n          return (_onfidoResidence$docu = onfidoResidence.documents_supported) === null || _onfidoResidence$docu === void 0 ? void 0 : _onfidoResidence$docu[document].display_name;\n        });\n      }\n    }\n    return [];\n  }, [residenceList, countryCode]);\n  var onComplete = useCallback(function (data) {\n    var document_ids = Object.keys(data).map(function (key) {\n      var _data;\n      return ((_data = data[key]) === null || _data === void 0 ? void 0 : _data.id) || '';\n    });\n    submitDocuments(document_ids);\n    setHasSubmitted(true);\n  }, [submitDocuments]);\n  var loadOnfidoSdkScript = function loadOnfidoSdkScript() {\n    var onfidoScriptNode = document.getElementById('onfido_sdk');\n    // check if the onfido sdk script has been loaded, and if its still loading the onfido script, don't re-attempt to load the script again\n    if (!onfidoScriptNode || !isOnfidoLoading) {\n      setIsOnfidoLoading(true);\n      var scriptNode = document.createElement('script');\n      var linkNode = document.createElement('link');\n      scriptNode.id = 'onfido_sdk';\n      scriptNode.src = 'https://assets.onfido.com/web-sdk-releases/latest/onfido.min.js';\n      linkNode.href = 'https://assets.onfido.com/web-sdk-releases/latest/style.css';\n      linkNode.rel = 'stylesheet';\n      document.body.appendChild(scriptNode);\n      document.body.appendChild(linkNode);\n      scriptNode.addEventListener('load', function () {\n        setIsOnfidoLoading(false);\n        setIsOnfidoLoaded(true);\n        initOnfido();\n      });\n    } else {\n      initOnfido();\n    }\n  };\n  var initOnfido = /*#__PURE__*/function () {\n    var _ref = useOnfido_asyncToGenerator( /*#__PURE__*/useOnfido_regeneratorRuntime().mark(function _callee() {\n      var _window$localStorage$;\n      var i18NLanguage, onfidoCountryCode;\n      return useOnfido_regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i18NLanguage = ((_window$localStorage$ = window.localStorage.getItem('i18n_language')) === null || _window$localStorage$ === void 0 ? void 0 : _window$localStorage$.toLowerCase()) || 'en';\n              onfidoCountryCode = countryCode.length !== 3 ? ALPHA_2_TO_ALPHA_3[countryCode.toUpperCase()] : settings === null || settings === void 0 ? void 0 : settings.country_code;\n              _context.next = 4;\n              return window.Onfido.init({\n                containerId: onfidoContainerId,\n                language: {\n                  locale: i18NLanguage,\n                  phrases: ONFIDO_PHRASES,\n                  mobilePhrases: ONFIDO_PHRASES\n                },\n                token: token,\n                useModal: false,\n                useMemoryHistory: true,\n                onComplete: onComplete,\n                steps: [{\n                  type: 'document',\n                  options: {\n                    documentTypes: {\n                      passport: supportedDocuments.some(function (doc) {\n                        return /Passport/g.test(doc || '');\n                      }),\n                      driving_licence: supportedDocuments.some(function (doc) {\n                        return /Driving Licence/g.test(doc || '');\n                      }) ? {\n                        country: onfidoCountryCode\n                      } : false,\n                      national_identity_card: supportedDocuments.some(function (doc) {\n                        return /National Identity Card/g.test(doc || '');\n                      }) ? {\n                        country: onfidoCountryCode\n                      } : false\n                    },\n                    hideCountrySelection: true\n                  }\n                }, 'face']\n              });\n            case 4:\n              onfidoRef.current = _context.sent;\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function initOnfido() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    if (token && supportedDocuments.length && !isOnfidoLoaded && countryCode) {\n      loadOnfidoSdkScript();\n    }\n  }, [token, supportedDocuments, countryCode]);\n  return {\n    data: {\n      onfidoRef: onfidoRef,\n      onfidoContainerId: onfidoContainerId,\n      hasSubmitted: hasSubmitted\n    }\n  };\n};\n/* harmony default export */ const hooks_useOnfido = ((/* unused pure expression or super */ null && (useOnfido)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useOtherCFDPlatformsDeposit.ts\nfunction useOtherCFDPlatformsDeposit_typeof(obj) { \"@babel/helpers - typeof\"; return useOtherCFDPlatformsDeposit_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useOtherCFDPlatformsDeposit_typeof(obj); }\nvar useOtherCFDPlatformsDeposit_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useOtherCFDPlatformsDeposit_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useOtherCFDPlatformsDeposit_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useOtherCFDPlatformsDeposit_ownKeys(Object(source), !0).forEach(function (key) { useOtherCFDPlatformsDeposit_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useOtherCFDPlatformsDeposit_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useOtherCFDPlatformsDeposit_defineProperty(obj, key, value) { key = useOtherCFDPlatformsDeposit_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useOtherCFDPlatformsDeposit_toPropertyKey(arg) { var key = useOtherCFDPlatformsDeposit_toPrimitive(arg, \"string\"); return useOtherCFDPlatformsDeposit_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useOtherCFDPlatformsDeposit_toPrimitive(input, hint) { if (useOtherCFDPlatformsDeposit_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useOtherCFDPlatformsDeposit_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useOtherCFDPlatformsDeposit_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useOtherCFDPlatformsDeposit_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useOtherCFDPlatformsDeposit_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook for top-up of Other CFD Accounts */\nvar useOtherCFDPlatformsDeposit = function useOtherCFDPlatformsDeposit() {\n  var _useMutation = useMutation('trading_platform_deposit'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useOtherCFDPlatformsDeposit_objectWithoutProperties(_useMutation, useOtherCFDPlatformsDeposit_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: payload\n    });\n  }, [_mutateAsync]);\n  return useOtherCFDPlatformsDeposit_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useOtherCFDPlatformsDeposit = ((/* unused pure expression or super */ null && (useOtherCFDPlatformsDeposit)));\n;// CONCATENATED MODULE: ../../api/src/hooks/usePOA.ts\nfunction usePOA_typeof(obj) { \"@babel/helpers - typeof\"; return usePOA_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePOA_typeof(obj); }\nvar usePOA_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePOA_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePOA_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePOA_ownKeys(Object(source), !0).forEach(function (key) { usePOA_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePOA_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePOA_defineProperty(obj, key, value) { key = usePOA_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePOA_toPropertyKey(arg) { var key = usePOA_toPrimitive(arg, \"string\"); return usePOA_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePOA_toPrimitive(input, hint) { if (usePOA_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePOA_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePOA_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePOA_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePOA_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the proof of address (poa) verification info of the current user  */\nvar usePOA = function usePOA() {\n  var _useAuthentication = useAuthentication(),\n    authentication_data = _useAuthentication.data,\n    rest = usePOA_objectWithoutProperties(_useAuthentication, usePOA_excluded);\n  var modified_authentication_data = useMemo(function () {\n    if (!(authentication_data !== null && authentication_data !== void 0 && authentication_data.document)) return;\n    return usePOA_objectSpread(usePOA_objectSpread({}, authentication_data.document), {}, {\n      has_attempted_poa: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) !== 'none',\n      is_pending: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) === 'pending',\n      is_rejected: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) === 'rejected',\n      is_expired: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) === 'expired',\n      is_suspected: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) === 'suspected',\n      is_verified: (authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) === 'verified',\n      is_need_submission: !['pending', 'verified'].includes((authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.document.status) || '')\n    });\n  }, [authentication_data]);\n  return usePOA_objectSpread({\n    data: modified_authentication_data\n  }, rest);\n};\n/* harmony default export */ const hooks_usePOA = ((/* unused pure expression or super */ null && (usePOA)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useSortedMT5Accounts.ts\nfunction useSortedMT5Accounts_typeof(obj) { \"@babel/helpers - typeof\"; return useSortedMT5Accounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useSortedMT5Accounts_typeof(obj); }\nvar useSortedMT5Accounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useSortedMT5Accounts_toConsumableArray(arr) { return useSortedMT5Accounts_arrayWithoutHoles(arr) || useSortedMT5Accounts_iterableToArray(arr) || useSortedMT5Accounts_unsupportedIterableToArray(arr) || useSortedMT5Accounts_nonIterableSpread(); }\nfunction useSortedMT5Accounts_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useSortedMT5Accounts_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useSortedMT5Accounts_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useSortedMT5Accounts_arrayLikeToArray(o, minLen); }\nfunction useSortedMT5Accounts_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useSortedMT5Accounts_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useSortedMT5Accounts_arrayLikeToArray(arr); }\nfunction useSortedMT5Accounts_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useSortedMT5Accounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useSortedMT5Accounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSortedMT5Accounts_ownKeys(Object(source), !0).forEach(function (key) { useSortedMT5Accounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSortedMT5Accounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useSortedMT5Accounts_defineProperty(obj, key, value) { key = useSortedMT5Accounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useSortedMT5Accounts_toPropertyKey(arg) { var key = useSortedMT5Accounts_toPrimitive(arg, \"string\"); return useSortedMT5Accounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useSortedMT5Accounts_toPrimitive(input, hint) { if (useSortedMT5Accounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useSortedMT5Accounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useSortedMT5Accounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useSortedMT5Accounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useSortedMT5Accounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to get the sorted added and non-added MT5 accounts. */\nvar useSortedMT5Accounts = function useSortedMT5Accounts() {\n  var _useAvailableMT5Accou = useAvailableMT5Accounts(),\n    all_available_mt5_accounts = _useAvailableMT5Accou.data;\n  var _useMT5AccountsList = useMT5AccountsList(),\n    mt5_accounts = _useMT5AccountsList.data,\n    rest = useSortedMT5Accounts_objectWithoutProperties(_useMT5AccountsList, useSortedMT5Accounts_excluded);\n  var modified_data = useMemo(function () {\n    if (!all_available_mt5_accounts || !mt5_accounts) return;\n    return all_available_mt5_accounts === null || all_available_mt5_accounts === void 0 ? void 0 : all_available_mt5_accounts.map(function (available_account) {\n      var created_account = mt5_accounts === null || mt5_accounts === void 0 ? void 0 : mt5_accounts.find(function (account) {\n        return available_account.market_type === account.market_type && available_account.shortcode === account.landing_company_short;\n      });\n      if (created_account) return useSortedMT5Accounts_objectSpread(useSortedMT5Accounts_objectSpread({}, created_account), {}, {\n        /** Determine if the account is added or not */\n        is_added: true\n      });\n      return useSortedMT5Accounts_objectSpread(useSortedMT5Accounts_objectSpread({}, available_account), {}, {\n        /** Determine if the account is added or not */\n        is_added: false\n      });\n    });\n  }, [all_available_mt5_accounts, mt5_accounts]);\n\n  // // Reduce out the added and non added accounts to make sure only one of each market_type is shown for not added\n  var filtered_data = useMemo(function () {\n    if (!modified_data) return;\n    var added_accounts = modified_data.filter(function (account) {\n      return account.is_added;\n    });\n    var non_added_accounts = modified_data.filter(function (account) {\n      return !account.is_added;\n    });\n    var filtered_non_added_accounts = non_added_accounts.reduce(function (acc, account) {\n      var existing_account = acc.find(function (acc_account) {\n        return acc_account.market_type === account.market_type;\n      });\n      var added_account = added_accounts.find(function (acc_account) {\n        return acc_account.market_type === account.market_type;\n      });\n      if (existing_account || added_account) return acc;\n      return [].concat(useSortedMT5Accounts_toConsumableArray(acc), [account]);\n    }, []);\n    return [].concat(useSortedMT5Accounts_toConsumableArray(added_accounts), useSortedMT5Accounts_toConsumableArray(filtered_non_added_accounts));\n  }, [modified_data]);\n\n  // Sort the data by market_type to make sure the order is 'synthetic', 'financial', 'all'\n  var sorted_data = useMemo(function () {\n    var market_type_order = ['synthetic', 'financial', 'all'];\n    if (!filtered_data) return;\n    var sorted_data = market_type_order.reduce(function (acc, market_type) {\n      var accounts = filtered_data.filter(function (account) {\n        return account.market_type === market_type;\n      });\n      if (!accounts.length) return acc;\n      return [].concat(useSortedMT5Accounts_toConsumableArray(acc), useSortedMT5Accounts_toConsumableArray(accounts));\n    }, []);\n    return sorted_data;\n  }, [filtered_data]);\n  var areAllAccountsCreated = (sorted_data === null || sorted_data === void 0 ? void 0 : sorted_data.length) === (all_available_mt5_accounts === null || all_available_mt5_accounts === void 0 ? void 0 : all_available_mt5_accounts.length);\n  return useSortedMT5Accounts_objectSpread({\n    data: sorted_data,\n    /** Determine if all the accounts are created */\n    areAllAccountsCreated: areAllAccountsCreated\n  }, rest);\n};\n/* harmony default export */ const hooks_useSortedMT5Accounts = ((/* unused pure expression or super */ null && (useSortedMT5Accounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useStatesList.ts\nfunction useStatesList_typeof(obj) { \"@babel/helpers - typeof\"; return useStatesList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useStatesList_typeof(obj); }\nvar useStatesList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useStatesList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useStatesList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useStatesList_ownKeys(Object(source), !0).forEach(function (key) { useStatesList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useStatesList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useStatesList_defineProperty(obj, key, value) { key = useStatesList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useStatesList_toPropertyKey(arg) { var key = useStatesList_toPrimitive(arg, \"string\"); return useStatesList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useStatesList_toPrimitive(input, hint) { if (useStatesList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useStatesList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useStatesList_toConsumableArray(arr) { return useStatesList_arrayWithoutHoles(arr) || useStatesList_iterableToArray(arr) || useStatesList_unsupportedIterableToArray(arr) || useStatesList_nonIterableSpread(); }\nfunction useStatesList_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useStatesList_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useStatesList_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useStatesList_arrayLikeToArray(o, minLen); }\nfunction useStatesList_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useStatesList_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useStatesList_arrayLikeToArray(arr); }\nfunction useStatesList_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useStatesList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useStatesList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useStatesList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar useStatesList = function useStatesList(country) {\n  var _useQuery = useQuery('states_list', {\n      // @ts-expect-error The `states_list` type from `@deriv/api-types` is not correct.\n      // The type should be `string`, but it's an alias to string type.\n      payload: {\n        states_list: country\n      }\n    }),\n    data = _useQuery.data,\n    rest = useStatesList_objectWithoutProperties(_useQuery, useStatesList_excluded);\n  var modified_states_list = useMemo(function () {\n    return useStatesList_toConsumableArray((data === null || data === void 0 ? void 0 : data.states_list) || []);\n  }, [data === null || data === void 0 ? void 0 : data.states_list]);\n  return useStatesList_objectSpread({\n    /** The states list for the given country. */\n    data: modified_states_list\n  }, rest);\n};\n/* harmony default export */ const hooks_useStatesList = ((/* unused pure expression or super */ null && (useStatesList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformInvestorPasswordChange.ts\nfunction useTradingPlatformInvestorPasswordChange_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformInvestorPasswordChange_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformInvestorPasswordChange_typeof(obj); }\nvar useTradingPlatformInvestorPasswordChange_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useTradingPlatformInvestorPasswordChange_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformInvestorPasswordChange_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformInvestorPasswordChange_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformInvestorPasswordChange_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformInvestorPasswordChange_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformInvestorPasswordChange_defineProperty(obj, key, value) { key = useTradingPlatformInvestorPasswordChange_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformInvestorPasswordChange_toPropertyKey(arg) { var key = useTradingPlatformInvestorPasswordChange_toPrimitive(arg, \"string\"); return useTradingPlatformInvestorPasswordChange_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformInvestorPasswordChange_toPrimitive(input, hint) { if (useTradingPlatformInvestorPasswordChange_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformInvestorPasswordChange_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformInvestorPasswordChange_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformInvestorPasswordChange_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformInvestorPasswordChange_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that change the Trading Platform Investor Password. */\nvar useTradingPlatformInvestorPasswordChange = function useTradingPlatformInvestorPasswordChange() {\n  var _useMutation = useMutation('trading_platform_investor_password_change'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useTradingPlatformInvestorPasswordChange_objectWithoutProperties(_useMutation, useTradingPlatformInvestorPasswordChange_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: payload\n    });\n  }, [_mutateAsync]);\n  return useTradingPlatformInvestorPasswordChange_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformInvestorPasswordChange = ((/* unused pure expression or super */ null && (useTradingPlatformInvestorPasswordChange)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformInvestorPasswordReset.ts\nfunction useTradingPlatformInvestorPasswordReset_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformInvestorPasswordReset_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformInvestorPasswordReset_typeof(obj); }\nvar useTradingPlatformInvestorPasswordReset_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useTradingPlatformInvestorPasswordReset_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformInvestorPasswordReset_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformInvestorPasswordReset_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformInvestorPasswordReset_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformInvestorPasswordReset_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformInvestorPasswordReset_defineProperty(obj, key, value) { key = useTradingPlatformInvestorPasswordReset_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformInvestorPasswordReset_toPropertyKey(arg) { var key = useTradingPlatformInvestorPasswordReset_toPrimitive(arg, \"string\"); return useTradingPlatformInvestorPasswordReset_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformInvestorPasswordReset_toPrimitive(input, hint) { if (useTradingPlatformInvestorPasswordReset_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformInvestorPasswordReset_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformInvestorPasswordReset_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformInvestorPasswordReset_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformInvestorPasswordReset_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that reset the Trading Platform Investor Password. */\nvar useTradingPlatformInvestorPasswordReset = function useTradingPlatformInvestorPasswordReset() {\n  var _useMutation = useMutation('trading_platform_investor_password_reset'),\n    _mutate = _useMutation.mutate,\n    rest = useTradingPlatformInvestorPasswordReset_objectWithoutProperties(_useMutation, useTradingPlatformInvestorPasswordReset_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useTradingPlatformInvestorPasswordReset_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformInvestorPasswordReset = ((/* unused pure expression or super */ null && (useTradingPlatformInvestorPasswordReset)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformPasswordChange.ts\nfunction useTradingPlatformPasswordChange_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformPasswordChange_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformPasswordChange_typeof(obj); }\nvar useTradingPlatformPasswordChange_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useTradingPlatformPasswordChange_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformPasswordChange_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformPasswordChange_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformPasswordChange_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformPasswordChange_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformPasswordChange_defineProperty(obj, key, value) { key = useTradingPlatformPasswordChange_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformPasswordChange_toPropertyKey(arg) { var key = useTradingPlatformPasswordChange_toPrimitive(arg, \"string\"); return useTradingPlatformPasswordChange_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformPasswordChange_toPrimitive(input, hint) { if (useTradingPlatformPasswordChange_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformPasswordChange_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformPasswordChange_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformPasswordChange_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformPasswordChange_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that change the Trading Platform Password. */\nvar useTradingPlatformPasswordChange = function useTradingPlatformPasswordChange() {\n  var _useMutation = useMutation('trading_platform_password_change'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useTradingPlatformPasswordChange_objectWithoutProperties(_useMutation, useTradingPlatformPasswordChange_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: payload\n    });\n  }, [_mutateAsync]);\n  return useTradingPlatformPasswordChange_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformPasswordChange = ((/* unused pure expression or super */ null && (useTradingPlatformPasswordChange)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTransactions.ts\nfunction useTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return useTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTransactions_typeof(obj); }\nvar useTransactions_excluded = (/* unused pure expression or super */ null && ([\"data\", \"fetchNextPage\", \"remove\"]));\nfunction useTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTransactions_ownKeys(Object(source), !0).forEach(function (key) { useTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTransactions_defineProperty(obj, key, value) { key = useTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTransactions_toPropertyKey(arg) { var key = useTransactions_toPrimitive(arg, \"string\"); return useTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTransactions_toPrimitive(input, hint) { if (useTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTransactions_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTransactions_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTransactions_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction useTransactions_slicedToArray(arr, i) { return useTransactions_arrayWithHoles(arr) || useTransactions_iterableToArrayLimit(arr, i) || useTransactions_unsupportedIterableToArray(arr, i) || useTransactions_nonIterableRest(); }\nfunction useTransactions_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useTransactions_arrayLikeToArray(o, minLen); }\nfunction useTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useTransactions_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useTransactions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n/** A custom hook to get the summary of account transactions */\nvar useTransactions = function useTransactions() {\n  var _account$currency_con, _account$currency_con2;\n  var _useAuthorize = useAuthorize(),\n    preferred_language = _useAuthorize.data.preferred_language,\n    isFetching = _useAuthorize.isFetching,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var display_code = (account === null || account === void 0 ? void 0 : (_account$currency_con = account.currency_config) === null || _account$currency_con === void 0 ? void 0 : _account$currency_con.display_code) || 'USD';\n  var fractional_digits = (account === null || account === void 0 ? void 0 : (_account$currency_con2 = account.currency_config) === null || _account$currency_con2 === void 0 ? void 0 : _account$currency_con2.fractional_digits) || 2;\n  var _useState = useState(),\n    _useState2 = useTransactions_slicedToArray(_useState, 2),\n    filter = _useState2[0],\n    setFilter = _useState2[1];\n  var _useInfiniteQuery = useInfiniteQuery('statement', {\n      options: {\n        enabled: !isFetching && isSuccess,\n        getNextPageParam: function getNextPageParam(lastPage, pages) {\n          var _lastPage$statement;\n          if (!(lastPage !== null && lastPage !== void 0 && (_lastPage$statement = lastPage.statement) !== null && _lastPage$statement !== void 0 && _lastPage$statement.count)) return;\n          return pages.length;\n        }\n      },\n      payload: {\n        action_type: filter,\n        // TODO: remove this once backend adds `to` and `from` for Deriv X transfers\n        description: 1\n      }\n    }),\n    data = _useInfiniteQuery.data,\n    fetchNextPage = _useInfiniteQuery.fetchNextPage,\n    remove = _useInfiniteQuery.remove,\n    rest = useTransactions_objectWithoutProperties(_useInfiniteQuery, useTransactions_excluded);\n  var invalidate = useInvalidateQuery();\n  useEffect(function () {\n    invalidate('statement');\n  }, [filter, invalidate]);\n  useEffect(function () {\n    return function () {\n      remove();\n    };\n  }, [remove]);\n\n  // Flatten the data array.\n  var flatten_data = useMemo(function () {\n    var _data$pages, _data$pages2;\n    if (!(data !== null && data !== void 0 && (_data$pages = data.pages) !== null && _data$pages !== void 0 && _data$pages.length)) return;\n    return data === null || data === void 0 ? void 0 : (_data$pages2 = data.pages) === null || _data$pages2 === void 0 ? void 0 : _data$pages2.flatMap(function (page) {\n      var _page$statement;\n      return page === null || page === void 0 ? void 0 : (_page$statement = page.statement) === null || _page$statement === void 0 ? void 0 : _page$statement.transactions;\n    });\n  }, [data === null || data === void 0 ? void 0 : data.pages]);\n\n  // Modify the data.\n  var modified_data = useMemo(function () {\n    if (!(flatten_data !== null && flatten_data !== void 0 && flatten_data.length)) return;\n    return flatten_data === null || flatten_data === void 0 ? void 0 : flatten_data.map(function (transaction) {\n      return useTransactions_objectSpread(useTransactions_objectSpread({}, transaction), {}, {\n        /** The transaction amount in currency format. */\n        display_amount: displayMoney((transaction === null || transaction === void 0 ? void 0 : transaction.amount) || 0, display_code, {\n          fractional_digits: fractional_digits,\n          preferred_language: preferred_language\n        }),\n        /** The balance of account after the transaction in currency format. */\n        display_balance_after: displayMoney((transaction === null || transaction === void 0 ? void 0 : transaction.balance_after) || 0, display_code, {\n          fractional_digits: fractional_digits,\n          preferred_language: preferred_language\n        })\n      });\n    });\n  }, [flatten_data, preferred_language, fractional_digits, display_code]);\n  return useTransactions_objectSpread({\n    /** List of account transactions */\n    data: modified_data,\n    /** Fetch the next page of transactions */\n    fetchNextPage: fetchNextPage,\n    /** Filter the transactions by type */\n    setFilter: setFilter\n  }, rest);\n};\n/* harmony default export */ const hooks_useTransactions = ((/* unused pure expression or super */ null && (useTransactions)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTransferBetweenAccounts.ts\nfunction useTransferBetweenAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return useTransferBetweenAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTransferBetweenAccounts_typeof(obj); }\nvar useTransferBetweenAccounts_excluded = (/* unused pure expression or super */ null && ([\"mutate\", \"mutateAsync\"]));\nfunction useTransferBetweenAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTransferBetweenAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTransferBetweenAccounts_ownKeys(Object(source), !0).forEach(function (key) { useTransferBetweenAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTransferBetweenAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTransferBetweenAccounts_defineProperty(obj, key, value) { key = useTransferBetweenAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTransferBetweenAccounts_toPropertyKey(arg) { var key = useTransferBetweenAccounts_toPrimitive(arg, \"string\"); return useTransferBetweenAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTransferBetweenAccounts_toPrimitive(input, hint) { if (useTransferBetweenAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTransferBetweenAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTransferBetweenAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook used to transfer money between client accounts */\nvar useTransferBetweenAccounts = function useTransferBetweenAccounts() {\n  var _useMutation = useMutation('transfer_between_accounts'),\n    _mutate = _useMutation.mutate,\n    _mutateAsync = _useMutation.mutateAsync,\n    rest = useTransferBetweenAccounts_objectWithoutProperties(_useMutation, useTransferBetweenAccounts_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  var mutateAsync = useCallback(function (payload) {\n    return _mutateAsync({\n      payload: payload\n    });\n  }, [_mutateAsync]);\n  return useTransferBetweenAccounts_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate,\n    mutateAsync: mutateAsync\n  }, rest);\n};\n/* harmony default export */ const hooks_useTransferBetweenAccounts = ((/* unused pure expression or super */ null && (useTransferBetweenAccounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useVerifyEmail.ts\nfunction useVerifyEmail_typeof(obj) { \"@babel/helpers - typeof\"; return useVerifyEmail_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useVerifyEmail_typeof(obj); }\nvar useVerifyEmail_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useVerifyEmail_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useVerifyEmail_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useVerifyEmail_ownKeys(Object(source), !0).forEach(function (key) { useVerifyEmail_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useVerifyEmail_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useVerifyEmail_defineProperty(obj, key, value) { key = useVerifyEmail_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useVerifyEmail_toPropertyKey(arg) { var key = useVerifyEmail_toPrimitive(arg, \"string\"); return useVerifyEmail_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useVerifyEmail_toPrimitive(input, hint) { if (useVerifyEmail_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useVerifyEmail_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useVerifyEmail_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useVerifyEmail_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useVerifyEmail_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook for verifying email address */\nvar useVerifyEmail = function useVerifyEmail() {\n  var _useMutation = useMutation('verify_email'),\n    _mutate = _useMutation.mutate,\n    rest = useVerifyEmail_objectWithoutProperties(_useMutation, useVerifyEmail_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useVerifyEmail_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useVerifyEmail = ((/* unused pure expression or super */ null && (useVerifyEmail)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useWalletMigration.ts\n\n\n\n\n\n\n/** A custom hook to get the status of wallet_migration API and to start/reset the migration process */\nvar useWalletMigration = function useWalletMigration() {\n  var _data$wallet_migratio;\n  var invalidate = useInvalidateQuery();\n\n  /** Make a request to wallet_migration API and onSuccess it will invalidate the cached data  */\n  var _useMutation = useMutation('wallet_migration', {\n      onSuccess: function onSuccess() {\n        return invalidate('wallet_migration');\n      }\n    }),\n    mutate = _useMutation.mutate;\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n\n  /** Fetch the wallet_migration API and refetch it every second if the status is in_progress */\n  var _useQuery = useQuery('wallet_migration', {\n      payload: {\n        wallet_migration: 'state'\n      },\n      options: {\n        refetchInterval: function refetchInterval(response) {\n          var _response$wallet_migr;\n          return (response === null || response === void 0 ? void 0 : (_response$wallet_migr = response.wallet_migration) === null || _response$wallet_migr === void 0 ? void 0 : _response$wallet_migr.state) === 'in_progress' ? 500 : false;\n        },\n        enabled: isSuccess\n      }\n    }),\n    data = _useQuery.data;\n  var startMigration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'start'\n      }\n    });\n  }, [mutate]);\n  var resetMigration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'reset'\n      }\n    });\n  }, [mutate]);\n  var state = data === null || data === void 0 ? void 0 : (_data$wallet_migratio = data.wallet_migration) === null || _data$wallet_migratio === void 0 ? void 0 : _data$wallet_migratio.state;\n  return {\n    /** The status of the wallet_migration API */\n    state: state,\n    /** A boolean to check if the status is not_eligible */\n    is_ineligible: state === 'ineligible',\n    /** A boolean to check if the status is eligible */\n    is_eligible: state === 'eligible',\n    /** A boolean to check if the status is in_progress */\n    is_in_progress: state === 'in_progress',\n    /** A boolean to check if the status is completed */\n    is_migrated: state === 'migrated',\n    /** A boolean to check if the status is failed */\n    is_failed: state === 'failed',\n    /** Sends a request to wallet_migration API to start the migration process */\n    startMigration: startMigration,\n    /** Sends a request to wallet_migration API to reset the migration process */\n    resetMigration: resetMigration\n  };\n};\n/* harmony default export */ const hooks_useWalletMigration = ((/* unused pure expression or super */ null && (useWalletMigration)));\n;// CONCATENATED MODULE: ../../api/src/hooks/index.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../api/src/usePaginatedFetch.ts\nfunction usePaginatedFetch_typeof(obj) { \"@babel/helpers - typeof\"; return usePaginatedFetch_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaginatedFetch_typeof(obj); }\nvar usePaginatedFetch_excluded = (/* unused pure expression or super */ null && ([\"remove\"]));\nfunction usePaginatedFetch_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaginatedFetch_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaginatedFetch_ownKeys(Object(source), !0).forEach(function (key) { usePaginatedFetch_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaginatedFetch_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaginatedFetch_defineProperty(obj, key, value) { key = usePaginatedFetch_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaginatedFetch_toPropertyKey(arg) { var key = usePaginatedFetch_toPrimitive(arg, \"string\"); return usePaginatedFetch_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaginatedFetch_toPrimitive(input, hint) { if (usePaginatedFetch_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaginatedFetch_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaginatedFetch_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaginatedFetch_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaginatedFetch_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction usePaginatedFetch_slicedToArray(arr, i) { return usePaginatedFetch_arrayWithHoles(arr) || usePaginatedFetch_iterableToArrayLimit(arr, i) || usePaginatedFetch_unsupportedIterableToArray(arr, i) || usePaginatedFetch_nonIterableRest(); }\nfunction usePaginatedFetch_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction usePaginatedFetch_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return usePaginatedFetch_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return usePaginatedFetch_arrayLikeToArray(o, minLen); }\nfunction usePaginatedFetch_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction usePaginatedFetch_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction usePaginatedFetch_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar usePaginatedFetch = function usePaginatedFetch(name) {\n  var _payload$payload, _payload$payload2;\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var limit = (payload === null || payload === void 0 ? void 0 : (_payload$payload = payload.payload) === null || _payload$payload === void 0 ? void 0 : _payload$payload.limit) || 10;\n  var _useState = useState((payload === null || payload === void 0 ? void 0 : (_payload$payload2 = payload.payload) === null || _payload$payload2 === void 0 ? void 0 : _payload$payload2.offset) || 0),\n    _useState2 = usePaginatedFetch_slicedToArray(_useState, 2),\n    offset = _useState2[0],\n    setOffset = _useState2[1];\n\n  // @ts-expect-error It's safe to ignore the TS error here since the\n  // exact type of the payload is not determined at this point.\n  var _useQuery = useQuery(name, {\n      payload: usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, payload), {}, {\n        offset: offset,\n        limit: limit\n      }),\n      options: usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, options), {}, {\n        keepPreviousData: !!offset\n      })\n    }),\n    remove = _useQuery.remove,\n    rest = usePaginatedFetch_objectWithoutProperties(_useQuery, usePaginatedFetch_excluded);\n  var loadMore = useCallback(function () {\n    return setOffset(function (prev) {\n      return prev + limit;\n    });\n  }, [limit]);\n  var reset = useCallback(function () {\n    remove();\n    setOffset(0);\n  }, [remove]);\n  return usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, rest), {}, {\n    remove: remove,\n    loadMore: loadMore,\n    reset: reset\n  });\n};\n/* harmony default export */ const src_usePaginatedFetch = ((/* unused pure expression or super */ null && (usePaginatedFetch)));\n;// CONCATENATED MODULE: ../../api/src/index.ts\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStoreMap.js\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar PersistStoreMap_PersistStoreMap = new Map();\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/clearPersistedStore.js\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar clearPersistedStore = function (target) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.clearPersistedStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/configurePersistable.js\nvar mpsConfig = {};\nvar mpsReactionOptions = {};\nvar configurePersistable = function (config, reactionOptions) {\n    if (reactionOptions === void 0) { reactionOptions = {}; }\n    mpsConfig = config;\n    mpsReactionOptions = reactionOptions;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/getPersistedStore.js\nvar getPersistedStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar getPersistedStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar getPersistedStore = function (target) { return getPersistedStore_awaiter(void 0, void 0, void 0, function () {\n    var _a, _b;\n    return getPersistedStore_generator(this, function (_c) {\n        return [2 /*return*/, (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.getPersistedStore()) !== null && _b !== void 0 ? _b : null];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/hydrateStore.js\nvar hydrateStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar hydrateStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar hydrateStore = function (target) { return hydrateStore_awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return hydrateStore_generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.hydrateStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isHydrated.js\n\nvar isHydrated = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isHydrated) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isPersisting.js\n\nvar isPersisting = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isPersisting) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/utils.js\nvar buildExpireTimestamp = function (milliseconds) {\n    return new Date().getTime() + milliseconds;\n};\nvar hasTimestampExpired = function (milliseconds) {\n    var dateTimeNow = new Date().getTime();\n    var dateTimeExpiration = new Date(milliseconds).getTime();\n    return dateTimeExpiration <= dateTimeNow;\n};\nvar isDefined = function (t) { return t != null; };\n/**\n * Check if the data is an object.\n */\nvar utils_isObject = function (data) {\n    return Boolean(data) && Array.isArray(data) === false && typeof data === 'object';\n};\n/**\n * Check the data is an object with properties.\n */\nvar isObjectWithProperties = function (data) {\n    return utils_isObject(data) && Object.keys(data).length > 0;\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nvar utils_isFunction = function (functionToCheck) {\n    return functionToCheck && functionToCheck instanceof Function;\n};\nvar isStorageControllerLike = function (value) {\n    // \"typeof Storage\" fixes issue with React Native\n    if (typeof Storage !== 'undefined' && value instanceof Storage) {\n        return true;\n    }\n    return [\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('getItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('removeItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('setItem'),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.getItem),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.removeItem),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.setItem),\n    ].every(Boolean);\n};\nvar isBrowser = typeof window !== 'undefined';\nvar isNotProductionBuild = \"production\" !== 'production';\nvar invalidStorageAdaptorWarningIf = function (storageAdaptor, storageName) {\n    if (isBrowser && isNotProductionBuild && !isStorageControllerLike(storageAdaptor)) {\n        console.warn(\"mobx-persist-store: \".concat(storageName, \" does not have a valid storage adaptor.\\n\\n* Make sure the storage controller has 'getItem', 'setItem' and 'removeItem' methods.\\\"\"));\n    }\n};\nvar duplicatedStoreWarningIf = function (hasPersistedStoreAlready, storageName) {\n    if (isBrowser && isNotProductionBuild && hasPersistedStoreAlready) {\n        console.warn(\"mobx-persist-store: 'makePersistable' was called was called with the same storage name \\\"\".concat(storageName, \"\\\".\\n\\n * Make sure you call \\\"stopPersisting\\\" before recreating \\\"\").concat(storageName, \"\\\" to avoid memory leaks. \\n * Or double check you did not have two stores with the same name.\"));\n    }\n};\nvar computedPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is computed and will not persist.\"));\n    }\n};\nvar actionPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is an action and will not persist.\"));\n    }\n};\nvar consoleDebug = function (isDebugMode, message, content) {\n    if (content === void 0) { content = ''; }\n    if (isDebugMode && isBrowser && isNotProductionBuild) {\n        console.info(\"%c mobx-persist-store: (Debug Mode) \".concat(message, \" \"), 'background: #4B8CC5; color: black; display: block;', content);\n    }\n};\nvar isArrayForMap = function (value) {\n    if (Array.isArray(value)) {\n        return value.every(function (v) { return Array.isArray(v); });\n    }\n    return false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/StorageAdapter.js\nvar StorageAdapter_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar StorageAdapter_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar StorageAdapter = /** @class */ (function () {\n    function StorageAdapter(options) {\n        this.options = options;\n    }\n    StorageAdapter.prototype.setItem = function (key, item) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, _c, stringify, _d, debugMode, data, content;\n            return StorageAdapter_generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _b = this.options, _c = _b.stringify, stringify = _c === void 0 ? true : _c, _d = _b.debugMode, debugMode = _d === void 0 ? false : _d;\n                        data = this.options.expireIn\n                            ? Object.assign({}, item, {\n                                __mps__: {\n                                    expireInTimestamp: buildExpireTimestamp(this.options.expireIn),\n                                },\n                            })\n                            : item;\n                        content = stringify ? JSON.stringify(data) : data;\n                        consoleDebug(debugMode, \"\".concat(key, \" - setItem:\"), content);\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.setItem(key, content))];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.getItem = function (key) {\n        var _a, _b;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _c, _d, removeOnExpiration, _e, debugMode, storageData, parsedData, hasExpired;\n            return StorageAdapter_generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _c = this.options, _d = _c.removeOnExpiration, removeOnExpiration = _d === void 0 ? true : _d, _e = _c.debugMode, debugMode = _e === void 0 ? false : _e;\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.getItem(key))];\n                    case 1:\n                        storageData = _f.sent();\n                        try {\n                            parsedData = JSON.parse(storageData) || {};\n                        }\n                        catch (error) {\n                            parsedData = storageData || {};\n                        }\n                        hasExpired = hasTimestampExpired((_b = parsedData.__mps__) === null || _b === void 0 ? void 0 : _b.expireInTimestamp);\n                        consoleDebug(debugMode, \"\".concat(key, \" - hasExpired\"), hasExpired);\n                        if (!(hasExpired && removeOnExpiration)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.removeItem(key)];\n                    case 2:\n                        _f.sent();\n                        _f.label = 3;\n                    case 3:\n                        parsedData = hasExpired ? {} : parsedData;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (getItem):\"), parsedData);\n                        return [2 /*return*/, parsedData];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.removeItem = function (key) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, debugMode;\n            return StorageAdapter_generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = this.options.debugMode, debugMode = _b === void 0 ? false : _b;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (removeItem): storage was removed\"));\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.removeItem(key))];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StorageAdapter;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/serializableProperty.js\n\n\nvar isSerializableProperty = function (obj) {\n    var keys = ['key', 'serialize', 'deserialize'];\n    if (!utils_isObject(obj)) {\n        consoleDebug(!!mpsConfig.debugMode, 'passed value is not an object', { obj: obj });\n        return false;\n    }\n    return keys.every(function (key) {\n        if (obj.hasOwnProperty(key) && typeof key !== 'undefined') {\n            return true;\n        }\n        ;\n        consoleDebug(!!mpsConfig.debugMode, \"\".concat(key, \" not found in SerializableProperty\"), { key: key, obj: obj });\n        return false;\n    });\n};\nvar makeSerializableProperties = function (properties) {\n    return properties.reduce(function (acc, curr) {\n        if (typeof curr === 'string') {\n            acc.push({\n                key: curr,\n                serialize: function (value) { return value; },\n                deserialize: function (value) { return value; }\n            });\n            return acc;\n        }\n        if (isSerializableProperty(curr)) {\n            acc.push(curr);\n            return acc;\n        }\n        return acc;\n    }, []);\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStore.js\nvar PersistStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PersistStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\nvar PersistStore = /** @class */ (function () {\n    function PersistStore(target, options, reactionOptions) {\n        if (reactionOptions === void 0) { reactionOptions = {}; }\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n        this.debugMode = false;\n        this.isHydrated = false;\n        this.isPersisting = false;\n        this.storageName = '';\n        this.target = target;\n        this.storageName = options.name;\n        this.properties = makeSerializableProperties(options.properties);\n        this.reactionOptions = Object.assign({ fireImmediately: true }, mpsReactionOptions, reactionOptions);\n        this.debugMode = (_b = (_a = options.debugMode) !== null && _a !== void 0 ? _a : mpsConfig.debugMode) !== null && _b !== void 0 ? _b : false;\n        this.storageAdapter = new StorageAdapter({\n            expireIn: (_c = options.expireIn) !== null && _c !== void 0 ? _c : mpsConfig.expireIn,\n            removeOnExpiration: (_e = (_d = options.removeOnExpiration) !== null && _d !== void 0 ? _d : mpsConfig.removeOnExpiration) !== null && _e !== void 0 ? _e : true,\n            stringify: (_g = (_f = options.stringify) !== null && _f !== void 0 ? _f : mpsConfig.stringify) !== null && _g !== void 0 ? _g : true,\n            storage: options.storage ? options.storage : mpsConfig.storage,\n            debugMode: this.debugMode,\n        });\n        (0,external_mobx_.makeObservable)(this, {\n            clearPersistedStore: external_mobx_.action,\n            hydrateStore: external_mobx_.action,\n            isHydrated: external_mobx_.observable,\n            isPersisting: external_mobx_.observable,\n            pausePersisting: external_mobx_.action,\n            startPersisting: external_mobx_.action,\n            stopPersisting: external_mobx_.action,\n        }, { autoBind: true, deep: false });\n        invalidStorageAdaptorWarningIf(this.storageAdapter.options.storage, this.storageName);\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (makePersistable)\"), {\n            properties: this.properties,\n            storageAdapter: this.storageAdapter,\n            reactionOptions: this.reactionOptions,\n        });\n    }\n    PersistStore.prototype.init = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hydrateStore()];\n                    case 1:\n                        _a.sent();\n                        this.startPersisting();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.hydrateStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            var isBeingWatched, data_1, target_1;\n            var _this = this;\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isBeingWatched = Boolean(this.cancelWatch);\n                        if (this.isPersisting) {\n                            this.pausePersisting();\n                        }\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = false;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - (hydrateStore) isHydrated:\"), _this.isHydrated);\n                        });\n                        if (!(this.storageAdapter && this.target)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.getItem(this.storageName)];\n                    case 1:\n                        data_1 = _a.sent();\n                        target_1 = this.target;\n                        if (data_1) {\n                            (0,external_mobx_.runInAction)(function () {\n                                _this.properties.forEach(function (property) {\n                                    var allowPropertyHydration = [\n                                        target_1.hasOwnProperty(property.key),\n                                        typeof data_1[property.key] !== 'undefined',\n                                    ].every(Boolean);\n                                    if (allowPropertyHydration) {\n                                        var propertyData = data_1[property.key];\n                                        if (target_1[property.key] instanceof external_mobx_.ObservableMap && isArrayForMap(propertyData)) {\n                                            target_1[property.key] = property.deserialize(new Map(propertyData));\n                                        }\n                                        else {\n                                            target_1[property.key] = property.deserialize(propertyData);\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = true;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - isHydrated:\"), _this.isHydrated);\n                        });\n                        if (isBeingWatched) {\n                            this.startPersisting();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.startPersisting = function () {\n        var _this = this;\n        if (!this.storageAdapter || !this.target || this.cancelWatch) {\n            return;\n        }\n        // Reassigning so TypeScript doesn't complain (Object is possibly 'null') about and this.target within reaction\n        var target = this.target;\n        this.cancelWatch = (0,external_mobx_.reaction)(function () {\n            var propertiesToWatch = {};\n            _this.properties.forEach(function (property) {\n                var isComputedProperty = (0,external_mobx_.isComputedProp)(target, property.key);\n                var isActionProperty = (0,external_mobx_.isAction)(target[property.key]);\n                computedPersistWarningIf(isComputedProperty, String(property.key));\n                actionPersistWarningIf(isActionProperty, String(property.key));\n                if (!isComputedProperty && !isActionProperty) {\n                    var propertyData = property.serialize(target[property.key]);\n                    if (propertyData instanceof external_mobx_.ObservableMap) {\n                        var mapArray_1 = [];\n                        propertyData.forEach(function (v, k) {\n                            mapArray_1.push([k, (0,external_mobx_.toJS)(v)]);\n                        });\n                        propertyData = mapArray_1;\n                    }\n                    propertiesToWatch[property.key] = (0,external_mobx_.toJS)(propertyData);\n                }\n            });\n            return propertiesToWatch;\n        }, function (dataToSave) { return PersistStore_awaiter(_this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.setItem(this.storageName, dataToSave)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); }, this.reactionOptions);\n        this.isPersisting = true;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (startPersisting) isPersisting:\"), this.isPersisting);\n    };\n    PersistStore.prototype.pausePersisting = function () {\n        this.isPersisting = false;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - pausePersisting (isPersisting):\"), this.isPersisting);\n        if (this.cancelWatch) {\n            this.cancelWatch();\n            this.cancelWatch = null;\n        }\n    };\n    PersistStore.prototype.stopPersisting = function () {\n        this.pausePersisting();\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (stopPersisting)\"));\n        PersistStoreMap_PersistStoreMap[\"delete\"](this.target);\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n    };\n    PersistStore.prototype.clearPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (clearPersistedStore)\"));\n                        return [4 /*yield*/, this.storageAdapter.removeItem(this.storageName)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.getPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                if (this.storageAdapter) {\n                    consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (getPersistedStore)\"));\n                    // @ts-ignore\n                    return [2 /*return*/, this.storageAdapter.getItem(this.storageName)];\n                }\n                return [2 /*return*/, null];\n            });\n        });\n    };\n    return PersistStore;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/makePersistable.js\nvar makePersistable_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar makePersistable_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar makePersistable = function (target, storageOptions, reactionOptions) { return makePersistable_awaiter(void 0, void 0, void 0, function () {\n    var mobxPersistStore, hasPersistedStoreAlready;\n    return makePersistable_generator(this, function (_a) {\n        mobxPersistStore = new PersistStore(target, storageOptions, reactionOptions);\n        hasPersistedStoreAlready = Array.from(PersistStoreMap_PersistStoreMap.values())\n            .map(function (item) { return item.storageName; })\n            .includes(mobxPersistStore.storageName);\n        duplicatedStoreWarningIf(hasPersistedStoreAlready, mobxPersistStore.storageName);\n        PersistStoreMap_PersistStoreMap.set(target, mobxPersistStore);\n        return [2 /*return*/, mobxPersistStore.init()];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/pausePersisting.js\n\nvar pausePersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.pausePersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/startPersisting.js\n\nvar startPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.startPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/stopPersisting.js\n\nvar stopPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap_PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.stopPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../stores/src/stores/BaseStore.ts\nfunction BaseStore_typeof(obj) { \"@babel/helpers - typeof\"; return BaseStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, BaseStore_typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, BaseStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction BaseStore_toPropertyKey(arg) { var key = BaseStore_toPrimitive(arg, \"string\"); return BaseStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction BaseStore_toPrimitive(input, hint) { if (BaseStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (BaseStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar BaseStore = /*#__PURE__*/function () {\n  function BaseStore(name, onHydrationDone) {\n    _classCallCheck(this, BaseStore);\n    this.data = undefined;\n    (0,external_mobx_.makeObservable)(this, {\n      data: external_mobx_.observable,\n      update: external_mobx_.action.bound,\n      unmount: external_mobx_.action.bound\n    });\n    makePersistable(this, {\n      name: name,\n      properties: ['data'],\n      storage: window.localStorage\n    }).then(function () {\n      return onHydrationDone === null || onHydrationDone === void 0 ? void 0 : onHydrationDone();\n    });\n  }\n  _createClass(BaseStore, [{\n    key: \"update\",\n    value: function update(data) {\n      this.data = data instanceof Function ? data(this.data) : data;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      stopPersisting(this);\n    }\n  }]);\n  return BaseStore;\n}();\n\n;// CONCATENATED MODULE: ../../stores/src/stores/FeatureFlagsStore.ts\nfunction FeatureFlagsStore_typeof(obj) { \"@babel/helpers - typeof\"; return FeatureFlagsStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, FeatureFlagsStore_typeof(obj); }\nfunction FeatureFlagsStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, FeatureFlagsStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction FeatureFlagsStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) FeatureFlagsStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) FeatureFlagsStore_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction FeatureFlagsStore_toPropertyKey(arg) { var key = FeatureFlagsStore_toPrimitive(arg, \"string\"); return FeatureFlagsStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction FeatureFlagsStore_toPrimitive(input, hint) { if (FeatureFlagsStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (FeatureFlagsStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction FeatureFlagsStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (FeatureFlagsStore_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return FeatureFlagsStore_assertThisInitialized(self); }\nfunction FeatureFlagsStore_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar FLAGS = {\n  wallet: false,\n  next_wallet: false,\n  sharkfin: false\n};\nvar FeatureFlagsStore_FeatureFlagsStore = /*#__PURE__*/function (_BaseStore) {\n  _inherits(FeatureFlagsStore, _BaseStore);\n  var _super = _createSuper(FeatureFlagsStore);\n  function FeatureFlagsStore() {\n    var _this;\n    FeatureFlagsStore_classCallCheck(this, FeatureFlagsStore);\n    _this = _super.call(this, 'FeatureFlagsStore', function () {\n      // Set the default values for the first time.\n      if (!_this.data) _this.update(FLAGS);\n\n      // Update the store data if a new flag was added or removed.\n      if (_this.data && Object.keys(_this.data).length !== Object.keys(FLAGS).length) {\n        _this.update(function (old) {\n          var data = FLAGS;\n          Object.keys(FLAGS).forEach(function (flag) {\n            // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n            if (old[flag] !== undefined) data[flag] = old[flag];\n          });\n          return data;\n        });\n      }\n    });\n    _this.data = FLAGS;\n    return _this;\n  }\n  return FeatureFlagsStore_createClass(FeatureFlagsStore);\n}(BaseStore);\n\n;// CONCATENATED MODULE: ../../stores/src/stores/index.ts\n\n;// CONCATENATED MODULE: ../../stores/src/storeProvider.tsx\nfunction storeProvider_typeof(obj) { \"@babel/helpers - typeof\"; return storeProvider_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, storeProvider_typeof(obj); }\nfunction storeProvider_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction storeProvider_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? storeProvider_ownKeys(Object(source), !0).forEach(function (key) { storeProvider_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : storeProvider_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction storeProvider_defineProperty(obj, key, value) { key = storeProvider_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction storeProvider_toPropertyKey(arg) { var key = storeProvider_toPrimitive(arg, \"string\"); return storeProvider_typeof(key) === \"symbol\" ? key : String(key); }\nfunction storeProvider_toPrimitive(input, hint) { if (storeProvider_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (storeProvider_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children,\n    store = _ref.store;\n  var memoizedValue = useMemo(function () {\n    // If the store is mocked for testing purposes, then return the mocked value.\n    if ('is_mock' in store && store.is_mock) return store;\n\n    // Otherwise, instantiate store and return it.\n    return storeProvider_objectSpread(storeProvider_objectSpread({}, store), {}, {\n      feature_flags: new FeatureFlagsStore()\n    });\n  }, [store]);\n  useEffect(function () {\n    return function () {\n      Object.values(memoizedValue).forEach(function (value) {\n        if (storeProvider_typeof(value) === 'object' && 'unmount' in value) value.unmount();\n      });\n    };\n  }, [memoizedValue]);\n  return /*#__PURE__*/React.createElement(APIProvider, null, /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: memoizedValue\n  }, children));\n};\n/* harmony default export */ const storeProvider = ((/* unused pure expression or super */ null && (StoreProvider)));\n;// CONCATENATED MODULE: ../../stores/src/useStore.ts\n\n\nvar useStore = function useStore() {\n  var store = (0,external_react_.useContext)(storeContext);\n  if (!store) {\n    throw new Error('useStore must be used within StoreProvider');\n  }\n  return store;\n};\n/* harmony default export */ const src_useStore = (useStore);\n;// CONCATENATED MODULE: ../../stores/src/stores/ExchangeRatesContext.tsx\n\nvar ExchangeRatesContext_ExchangeRatesContext = /*#__PURE__*/(/* unused pure expression or super */ null && (createContext(null)));\n/* harmony default export */ const stores_ExchangeRatesContext = ((/* unused pure expression or super */ null && (ExchangeRatesContext_ExchangeRatesContext)));\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useBoolean/useBoolean.js\n\nfunction useBoolean_useBoolean(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const setTrue = useCallback(() => setValue(true), []);\n    const setFalse = useCallback(() => setValue(false), []);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return { value, setValue, setTrue, setFalse, toggle };\n}\n/* harmony default export */ const esm_useBoolean_useBoolean = ((/* unused pure expression or super */ null && (useBoolean_useBoolean)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useClickAnyWhere/useClickAnyWhere.js\n\nfunction useClickAnyWhere(handler) {\n    useEventListener('click', event => {\n        handler(event);\n    });\n}\n/* harmony default export */ const useClickAnyWhere_useClickAnyWhere = ((/* unused pure expression or super */ null && (useClickAnyWhere)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js\nvar useCopyToClipboard_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = (text) => useCopyToClipboard_awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    });\n    return [copiedText, copy];\n}\n/* harmony default export */ const useCopyToClipboard_useCopyToClipboard = ((/* unused pure expression or super */ null && (useCopyToClipboard)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useCountdown/useCountdown.js\n\n\nfunction useCountdown(countdownOption) {\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOption) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOption.seconds;\n        intervalMs = countdownOption.interval;\n        isIncrement = countdownOption.isIncrement;\n    }\n    else {\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOption);\n    }\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\n/* harmony default export */ const useCountdown_useCountdown = ((/* unused pure expression or super */ null && (useCountdown)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useCounter/useCounter.js\n\nfunction useCounter_useCounter(initialValue) {\n    const [count, setCount] = useState(initialValue || 0);\n    const increment = () => setCount(x => x + 1);\n    const decrement = () => setCount(x => x - 1);\n    const reset = () => setCount(initialValue || 0);\n    return {\n        count,\n        increment,\n        decrement,\n        reset,\n        setCount,\n    };\n}\n/* harmony default export */ const esm_useCounter_useCounter = ((/* unused pure expression or super */ null && (useCounter_useCounter)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useDarkMode/useDarkMode.js\n\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useDarkMode(defaultValue) {\n    var _a;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [isDarkMode, setDarkMode] = useLocalStorage('usehooks-ts-dark-mode', (_a = defaultValue !== null && defaultValue !== void 0 ? defaultValue : isDarkOS) !== null && _a !== void 0 ? _a : false);\n    useUpdateEffect(() => {\n        setDarkMode(isDarkOS);\n    }, [isDarkOS]);\n    return {\n        isDarkMode,\n        toggle: () => setDarkMode(prev => !prev),\n        enable: () => setDarkMode(true),\n        disable: () => setDarkMode(false),\n    };\n}\n/* harmony default export */ const useDarkMode_useDarkMode = ((/* unused pure expression or super */ null && (useDarkMode)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useDebounce/useDebounce.js\n\nfunction useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => setDebouncedValue(value), delay || 500);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n}\n/* harmony default export */ const useDebounce_useDebounce = ((/* unused pure expression or super */ null && (useDebounce)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useDocumentTitle/useDocumentTitle.js\n\nfunction useDocumentTitle(title) {\n    useIsomorphicLayoutEffect(() => {\n        window.document.title = title;\n    }, [title]);\n}\n/* harmony default export */ const useDocumentTitle_useDocumentTitle = ((/* unused pure expression or super */ null && (useDocumentTitle)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useEffectOnce/useEffectOnce.js\n\nfunction useEffectOnce(effect) {\n    useEffect(effect, []);\n}\n/* harmony default export */ const useEffectOnce_useEffectOnce = ((/* unused pure expression or super */ null && (useEffectOnce)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useElementSize/useElementSize.js\n\n\nfunction useElementSize() {\n    const [ref, setRef] = useState(null);\n    const [size, setSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = useCallback(() => {\n        setSize({\n            width: (ref === null || ref === void 0 ? void 0 : ref.offsetWidth) || 0,\n            height: (ref === null || ref === void 0 ? void 0 : ref.offsetHeight) || 0,\n        });\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    return [setRef, size];\n}\n/* harmony default export */ const useElementSize_useElementSize = ((/* unused pure expression or super */ null && (useElementSize)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useEventCallback/useEventCallback.js\n\n\nfunction useEventCallback_useEventCallback(fn) {\n    const ref = useRef(() => {\n        throw new Error('Cannot call an event handler while rendering.');\n    });\n    useIsomorphicLayoutEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return useCallback((...args) => ref.current(...args), [ref]);\n}\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useEventListener/useEventListener.js\n\n\nfunction useEventListener_useEventListener(eventName, handler, element, options) {\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return;\n        const listener = event => savedHandler.current(event);\n        targetElement.addEventListener(eventName, listener, options);\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\n/* harmony default export */ const esm_useEventListener_useEventListener = ((/* unused pure expression or super */ null && (useEventListener_useEventListener)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useFetch/useFetch.js\nvar useFetch_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction useFetch(url, options) {\n    const cache = useRef({});\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => useFetch_awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        return () => {\n            cancelRequest.current = true;\n        };\n    }, [url]);\n    return state;\n}\n/* harmony default export */ const useFetch_useFetch = ((/* unused pure expression or super */ null && (useFetch)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useHover/useHover.js\n\n\nfunction useHover(elementRef) {\n    const [value, setValue] = useState(false);\n    const handleMouseEnter = () => setValue(true);\n    const handleMouseLeave = () => setValue(false);\n    useEventListener('mouseenter', handleMouseEnter, elementRef);\n    useEventListener('mouseleave', handleMouseLeave, elementRef);\n    return value;\n}\n/* harmony default export */ const useHover_useHover = ((/* unused pure expression or super */ null && (useHover)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useImageOnLoad/useImageOnLoad.js\n\nfunction useImageOnLoad() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    const handleImageOnLoad = () => {\n        setIsLoaded(true);\n    };\n    const css = {\n        thumbnail: {\n            visibility: isLoaded ? 'hidden' : 'visible',\n            filter: 'blur(8px)',\n            transition: 'visibility 0ms ease-out 500ms',\n        },\n        fullSize: {\n            opacity: isLoaded ? 1 : 0,\n            transition: 'opacity 500ms ease-in 0ms',\n        },\n    };\n    return { handleImageOnLoad, css };\n}\n/* harmony default export */ const useImageOnLoad_useImageOnLoad = ((/* unused pure expression or super */ null && (useImageOnLoad)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useIntersectionObserver/useIntersectionObserver.js\n\nfunction useIntersectionObserver(elementRef, { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible = false, }) {\n    const [entry, setEntry] = useState();\n    const frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;\n    const updateEntry = ([entry]) => {\n        setEntry(entry);\n    };\n    useEffect(() => {\n        const node = elementRef === null || elementRef === void 0 ? void 0 : elementRef.current;\n        const hasIOSupport = !!window.IntersectionObserver;\n        if (!hasIOSupport || frozen || !node)\n            return;\n        const observerParams = { threshold, root, rootMargin };\n        const observer = new IntersectionObserver(updateEntry, observerParams);\n        observer.observe(node);\n        return () => observer.disconnect();\n    }, [elementRef === null || elementRef === void 0 ? void 0 : elementRef.current, JSON.stringify(threshold), root, rootMargin, frozen]);\n    return entry;\n}\n/* harmony default export */ const useIntersectionObserver_useIntersectionObserver = ((/* unused pure expression or super */ null && (useIntersectionObserver)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useInterval/useInterval.js\n\n\nfunction useInterval_useInterval(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setInterval(() => savedCallback.current(), delay);\n        return () => clearInterval(id);\n    }, [delay]);\n}\n/* harmony default export */ const esm_useInterval_useInterval = ((/* unused pure expression or super */ null && (useInterval_useInterval)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useIsClient/useIsClient.js\n\nfunction useIsClient() {\n    const [isClient, setClient] = useState(false);\n    useEffect(() => {\n        setClient(true);\n    }, []);\n    return isClient;\n}\n/* harmony default export */ const useIsClient_useIsClient = ((/* unused pure expression or super */ null && (useIsClient)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useIsFirstRender/useIsFirstRender.js\n\nfunction useIsFirstRender_useIsFirstRender() {\n    const isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n/* harmony default export */ const esm_useIsFirstRender_useIsFirstRender = ((/* unused pure expression or super */ null && (useIsFirstRender_useIsFirstRender)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useIsMounted/useIsMounted.js\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return useCallback(() => isMounted.current, []);\n}\n/* harmony default export */ const useIsMounted_useIsMounted = ((/* unused pure expression or super */ null && (useIsMounted)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js\n\nconst useIsomorphicLayoutEffect_useIsomorphicLayoutEffect = typeof window !== 'undefined' ? external_react_.useLayoutEffect : external_react_.useEffect;\n/* harmony default export */ const esm_useIsomorphicLayoutEffect_useIsomorphicLayoutEffect = ((/* unused pure expression or super */ null && (useIsomorphicLayoutEffect_useIsomorphicLayoutEffect)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useLocalStorage/useLocalStorage.js\n\n\nfunction useLocalStorage_useLocalStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window === 'undefined') {\n            console.warn(`Tried setting localStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.localStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('local-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting localStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\n/* harmony default export */ const esm_useLocalStorage_useLocalStorage = ((/* unused pure expression or super */ null && (useLocalStorage_useLocalStorage)));\nfunction parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useLockedBody/useLockedBody.js\n\n\nfunction useLockedBody(initialLocked = false, rootId = '___gatsby') {\n    const [locked, setLocked] = useState(initialLocked);\n    useIsomorphicLayoutEffect(() => {\n        if (!locked) {\n            return;\n        }\n        const originalOverflow = document.body.style.overflow;\n        const originalPaddingRight = document.body.style.paddingRight;\n        document.body.style.overflow = 'hidden';\n        const root = document.getElementById(rootId);\n        const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n        if (scrollBarWidth) {\n            document.body.style.paddingRight = `${scrollBarWidth}px`;\n        }\n        return () => {\n            document.body.style.overflow = originalOverflow;\n            if (scrollBarWidth) {\n                document.body.style.paddingRight = originalPaddingRight;\n            }\n        };\n    }, [locked]);\n    useEffect(() => {\n        if (locked !== initialLocked) {\n            setLocked(initialLocked);\n        }\n    }, [initialLocked]);\n    return [locked, setLocked];\n}\n/* harmony default export */ const useLockedBody_useLockedBody = ((/* unused pure expression or super */ null && (useLockedBody)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useMap/useMap.js\n\nfunction useMap(initialState = new Map()) {\n    const [map, setMap] = useState(new Map(initialState));\n    const actions = {\n        set: useCallback((key, value) => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: useCallback(entries => {\n            setMap(() => new Map(entries));\n        }, []),\n        remove: useCallback(key => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: useCallback(() => {\n            setMap(() => new Map());\n        }, []),\n    };\n    return [map, actions];\n}\n/* harmony default export */ const useMap_useMap = ((/* unused pure expression or super */ null && (useMap)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js\n\nfunction useMediaQuery_useMediaQuery(query) {\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return false;\n    };\n    const [matches, setMatches] = useState(getMatches(query));\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        handleChange();\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\n/* harmony default export */ const esm_useMediaQuery_useMediaQuery = ((/* unused pure expression or super */ null && (useMediaQuery_useMediaQuery)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useOnClickOutside/useOnClickOutside.js\n\nfunction useOnClickOutside(ref, handler, mouseEvent = 'mousedown') {\n    useEventListener(mouseEvent, event => {\n        const el = ref === null || ref === void 0 ? void 0 : ref.current;\n        if (!el || el.contains(event.target)) {\n            return;\n        }\n        handler(event);\n    });\n}\n/* harmony default export */ const useOnClickOutside_useOnClickOutside = ((/* unused pure expression or super */ null && (useOnClickOutside)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useReadLocalStorage/useReadLocalStorage.js\n\n\nfunction useReadLocalStorage(key) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return null;\n        }\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(item) : null;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return null;\n        }\n    }, [key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('local-storage', handleStorageChange);\n    return storedValue;\n}\n/* harmony default export */ const useReadLocalStorage_useReadLocalStorage = ((/* unused pure expression or super */ null && (useReadLocalStorage)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useScreen/useScreen.js\n\n\nfunction useScreen() {\n    const getScreen = () => {\n        if (typeof window !== 'undefined' && window.screen) {\n            return window.screen;\n        }\n        return undefined;\n    };\n    const [screen, setScreen] = useState(getScreen());\n    function handleSize() {\n        setScreen(getScreen());\n    }\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return screen;\n}\n/* harmony default export */ const useScreen_useScreen = ((/* unused pure expression or super */ null && (useScreen)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useScript/useScript.js\n\nconst cachedScriptStatuses = {};\nfunction getScriptNode(src) {\n    const node = document.querySelector(`script[src=\"${src}\"]`);\n    const status = node === null || node === void 0 ? void 0 : node.getAttribute('data-status');\n    return {\n        node,\n        status,\n    };\n}\nfunction useScript(src, options) {\n    const [status, setStatus] = useState(() => {\n        var _a;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return 'idle';\n        }\n        if (typeof window === 'undefined') {\n            return 'loading';\n        }\n        return (_a = cachedScriptStatuses[src]) !== null && _a !== void 0 ? _a : 'loading';\n    });\n    useEffect(() => {\n        var _a, _b;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return;\n        }\n        const cachedScriptStatus = cachedScriptStatuses[src];\n        if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n            setStatus(cachedScriptStatus);\n            return;\n        }\n        const script = getScriptNode(src);\n        let scriptNode = script.node;\n        if (!scriptNode) {\n            scriptNode = document.createElement('script');\n            scriptNode.src = src;\n            scriptNode.async = true;\n            scriptNode.setAttribute('data-status', 'loading');\n            document.body.appendChild(scriptNode);\n            const setAttributeFromEvent = (event) => {\n                const scriptStatus = event.type === 'load' ? 'ready' : 'error';\n                scriptNode === null || scriptNode === void 0 ? void 0 : scriptNode.setAttribute('data-status', scriptStatus);\n            };\n            scriptNode.addEventListener('load', setAttributeFromEvent);\n            scriptNode.addEventListener('error', setAttributeFromEvent);\n        }\n        else {\n            setStatus((_b = (_a = script.status) !== null && _a !== void 0 ? _a : cachedScriptStatus) !== null && _b !== void 0 ? _b : 'loading');\n        }\n        const setStateFromEvent = (event) => {\n            const newStatus = event.type === 'load' ? 'ready' : 'error';\n            setStatus(newStatus);\n            cachedScriptStatuses[src] = newStatus;\n        };\n        scriptNode.addEventListener('load', setStateFromEvent);\n        scriptNode.addEventListener('error', setStateFromEvent);\n        return () => {\n            if (scriptNode) {\n                scriptNode.removeEventListener('load', setStateFromEvent);\n                scriptNode.removeEventListener('error', setStateFromEvent);\n            }\n            if (scriptNode && (options === null || options === void 0 ? void 0 : options.removeOnUnmount)) {\n                scriptNode.remove();\n            }\n        };\n    }, [src, options === null || options === void 0 ? void 0 : options.shouldPreventLoad, options === null || options === void 0 ? void 0 : options.removeOnUnmount]);\n    return status;\n}\n/* harmony default export */ const useScript_useScript = ((/* unused pure expression or super */ null && (useScript)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useSessionStorage/useSessionStorage.js\n\n\nfunction useSessionStorage(key, initialValue) {\n    const readValue = useCallback(() => {\n        if (typeof window === 'undefined') {\n            return initialValue;\n        }\n        try {\n            const item = window.sessionStorage.getItem(key);\n            return item ? useSessionStorage_parseJSON(item) : initialValue;\n        }\n        catch (error) {\n            console.warn(`Error reading sessionStorage key “${key}”:`, error);\n            return initialValue;\n        }\n    }, [initialValue, key]);\n    const [storedValue, setStoredValue] = useState(readValue);\n    const setValue = useEventCallback(value => {\n        if (typeof window == 'undefined') {\n            console.warn(`Tried setting sessionStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            const newValue = value instanceof Function ? value(storedValue) : value;\n            window.sessionStorage.setItem(key, JSON.stringify(newValue));\n            setStoredValue(newValue);\n            window.dispatchEvent(new Event('session-storage'));\n        }\n        catch (error) {\n            console.warn(`Error setting sessionStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n    }, []);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    useEventListener('storage', handleStorageChange);\n    useEventListener('session-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\n/* harmony default export */ const useSessionStorage_useSessionStorage = ((/* unused pure expression or super */ null && (useSessionStorage)));\nfunction useSessionStorage_parseJSON(value) {\n    try {\n        return value === 'undefined' ? undefined : JSON.parse(value !== null && value !== void 0 ? value : '');\n    }\n    catch (_a) {\n        console.log('parsing error on', { value });\n        return undefined;\n    }\n}\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useStep/useStep.js\n\nfunction useStep(maxStep) {\n    const [currentStep, setCurrentStep] = useState(1);\n    const canGoToNextStep = useMemo(() => currentStep + 1 <= maxStep, [currentStep, maxStep]);\n    const canGoToPrevStep = useMemo(() => currentStep - 1 >= 1, [currentStep]);\n    const setStep = useCallback(step => {\n        const newStep = step instanceof Function ? step(currentStep) : step;\n        if (newStep >= 1 && newStep <= maxStep) {\n            setCurrentStep(newStep);\n            return;\n        }\n        throw new Error('Step not valid');\n    }, [maxStep, currentStep]);\n    const goToNextStep = useCallback(() => {\n        if (canGoToNextStep) {\n            setCurrentStep(step => step + 1);\n        }\n    }, [canGoToNextStep]);\n    const goToPrevStep = useCallback(() => {\n        if (canGoToPrevStep) {\n            setCurrentStep(step => step - 1);\n        }\n    }, [canGoToPrevStep]);\n    const reset = useCallback(() => {\n        setCurrentStep(1);\n    }, []);\n    return [\n        currentStep,\n        {\n            goToNextStep,\n            goToPrevStep,\n            canGoToNextStep,\n            canGoToPrevStep,\n            setStep,\n            reset,\n        },\n    ];\n}\n/* harmony default export */ const useStep_useStep = ((/* unused pure expression or super */ null && (useStep)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useTernaryDarkMode/useTernaryDarkMode.js\n\n\nconst useTernaryDarkMode_COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nfunction useTernaryDarkMode() {\n    const isDarkOS = useMediaQuery(useTernaryDarkMode_COLOR_SCHEME_QUERY);\n    const [ternaryDarkMode, setTernaryDarkMode] = useLocalStorage('usehooks-ts-ternary-dark-mode', 'system');\n    const [isDarkMode, setDarkMode] = useState(isDarkOS);\n    useUpdateEffect(() => {\n        if (ternaryDarkMode === 'system') {\n            setDarkMode(isDarkOS);\n        }\n    }, [isDarkOS]);\n    useEffect(() => {\n        switch (ternaryDarkMode) {\n            case 'light':\n                setDarkMode(false);\n                break;\n            case 'system':\n                setDarkMode(isDarkOS);\n                break;\n            case 'dark':\n                setDarkMode(true);\n                break;\n        }\n    }, [ternaryDarkMode, isDarkOS]);\n    function toggleTernaryDarkMode() {\n        const toggleDict = {\n            light: 'system',\n            system: 'dark',\n            dark: 'light',\n        };\n        setTernaryDarkMode(prevMode => toggleDict[prevMode]);\n    }\n    return {\n        isDarkMode,\n        ternaryDarkMode,\n        setTernaryDarkMode,\n        toggleTernaryDarkMode,\n    };\n}\n/* harmony default export */ const useTernaryDarkMode_useTernaryDarkMode = ((/* unused pure expression or super */ null && (useTernaryDarkMode)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useTimeout/useTimeout.js\n\n\nfunction useTimeout(callback, delay) {\n    const savedCallback = useRef(callback);\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    useEffect(() => {\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setTimeout(() => savedCallback.current(), delay);\n        return () => clearTimeout(id);\n    }, [delay]);\n}\n/* harmony default export */ const useTimeout_useTimeout = ((/* unused pure expression or super */ null && (useTimeout)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useToggle/useToggle.js\n\nfunction useToggle(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const toggle = useCallback(() => setValue(x => !x), []);\n    return [value, toggle, setValue];\n}\n/* harmony default export */ const useToggle_useToggle = ((/* unused pure expression or super */ null && (useToggle)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useUpdateEffect/useUpdateEffect.js\n\n\nfunction useUpdateEffect_useUpdateEffect(effect, deps) {\n    const isFirst = useIsFirstRender();\n    useEffect(() => {\n        if (!isFirst) {\n            return effect();\n        }\n    }, deps);\n}\n/* harmony default export */ const esm_useUpdateEffect_useUpdateEffect = ((/* unused pure expression or super */ null && (useUpdateEffect_useUpdateEffect)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/useWindowSize/useWindowSize.js\n\n\nfunction useWindowSize() {\n    const [windowSize, setWindowSize] = useState({\n        width: 0,\n        height: 0,\n    });\n    const handleSize = () => {\n        setWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    };\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return windowSize;\n}\n/* harmony default export */ const useWindowSize_useWindowSize = ((/* unused pure expression or super */ null && (useWindowSize)));\n\n;// CONCATENATED MODULE: ../../../node_modules/usehooks-ts/dist/esm/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../stores/src/providers/ExchangeRatesProvider.tsx\nfunction ExchangeRatesProvider_typeof(obj) { \"@babel/helpers - typeof\"; return ExchangeRatesProvider_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, ExchangeRatesProvider_typeof(obj); }\nvar ExchangeRatesProvider_excluded = (/* unused pure expression or super */ null && ([\"subscribe\", \"data\"]));\nfunction ExchangeRatesProvider_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction ExchangeRatesProvider_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ExchangeRatesProvider_ownKeys(Object(source), !0).forEach(function (key) { ExchangeRatesProvider_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ExchangeRatesProvider_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction ExchangeRatesProvider_defineProperty(obj, key, value) { key = ExchangeRatesProvider_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction ExchangeRatesProvider_toPropertyKey(arg) { var key = ExchangeRatesProvider_toPrimitive(arg, \"string\"); return ExchangeRatesProvider_typeof(key) === \"symbol\" ? key : String(key); }\nfunction ExchangeRatesProvider_toPrimitive(input, hint) { if (ExchangeRatesProvider_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (ExchangeRatesProvider_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction ExchangeRatesProvider_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ExchangeRatesProvider_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction ExchangeRatesProvider_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction ExchangeRatesProvider_slicedToArray(arr, i) { return ExchangeRatesProvider_arrayWithHoles(arr) || ExchangeRatesProvider_iterableToArrayLimit(arr, i) || ExchangeRatesProvider_unsupportedIterableToArray(arr, i) || ExchangeRatesProvider_nonIterableRest(); }\nfunction ExchangeRatesProvider_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction ExchangeRatesProvider_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return ExchangeRatesProvider_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ExchangeRatesProvider_arrayLikeToArray(o, minLen); }\nfunction ExchangeRatesProvider_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction ExchangeRatesProvider_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction ExchangeRatesProvider_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar ExchangeRatesProvider = function ExchangeRatesProvider(_ref) {\n  var children = _ref.children;\n  var _useLocalStorage = useLocalStorage('exchange_rates', {}),\n    _useLocalStorage2 = ExchangeRatesProvider_slicedToArray(_useLocalStorage, 2),\n    exchange_rates = _useLocalStorage2[0],\n    setExchangeRates = _useLocalStorage2[1];\n  var _useSubscription = useSubscription('exchange_rates'),\n    subscribe = _useSubscription.subscribe,\n    data = _useSubscription.data,\n    rest = ExchangeRatesProvider_objectWithoutProperties(_useSubscription, ExchangeRatesProvider_excluded);\n  var handleSubscription = function handleSubscription(base_currency, target_currency) {\n    if (base_currency === '' || target_currency === '' || base_currency === target_currency) return;\n    subscribe({\n      payload: {\n        base_currency: base_currency,\n        target_currency: target_currency\n      }\n    });\n  };\n  React.useEffect(function () {\n    if (data) {\n      setExchangeRates(function (prev_rates) {\n        var _data$exchange_rates, _data$exchange_rates2;\n        var base_currency = (data === null || data === void 0 ? void 0 : (_data$exchange_rates = data.exchange_rates) === null || _data$exchange_rates === void 0 ? void 0 : _data$exchange_rates.base_currency) || 'USD';\n        var new_rates = ExchangeRatesProvider_objectSpread(ExchangeRatesProvider_objectSpread({}, prev_rates), {}, ExchangeRatesProvider_defineProperty({}, base_currency, ExchangeRatesProvider_objectSpread(ExchangeRatesProvider_objectSpread({}, prev_rates[base_currency]), data === null || data === void 0 ? void 0 : (_data$exchange_rates2 = data.exchange_rates) === null || _data$exchange_rates2 === void 0 ? void 0 : _data$exchange_rates2.rates)));\n        return new_rates;\n      });\n    }\n  }, [data, setExchangeRates]);\n  return /*#__PURE__*/React.createElement(ExchangeRatesContext.Provider, {\n    value: {\n      handleSubscription: handleSubscription,\n      exchange_rates: exchange_rates,\n      rest: rest\n    }\n  }, children);\n};\n/* harmony default export */ const providers_ExchangeRatesProvider = ((/* unused pure expression or super */ null && (ExchangeRatesProvider)));\n;// CONCATENATED MODULE: ../../stores/src/index.ts\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ./Components/api-token/api-token.tsx\nfunction api_token_typeof(obj) { \"@babel/helpers - typeof\"; return api_token_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, api_token_typeof(obj); }\nfunction api_token_extends() { api_token_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return api_token_extends.apply(this, arguments); }\nfunction api_token_regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ api_token_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == api_token_typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction api_token_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction api_token_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { api_token_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { api_token_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction api_token_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction api_token_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? api_token_ownKeys(Object(source), !0).forEach(function (key) { api_token_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : api_token_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction api_token_defineProperty(obj, key, value) { key = api_token_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction api_token_toPropertyKey(arg) { var key = api_token_toPrimitive(arg, \"string\"); return api_token_typeof(key) === \"symbol\" ? key : String(key); }\nfunction api_token_toPrimitive(input, hint) { if (api_token_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (api_token_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction api_token_slicedToArray(arr, i) { return api_token_arrayWithHoles(arr) || api_token_iterableToArrayLimit(arr, i) || api_token_unsupportedIterableToArray(arr, i) || api_token_nonIterableRest(); }\nfunction api_token_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction api_token_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return api_token_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return api_token_arrayLikeToArray(o, minLen); }\nfunction api_token_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction api_token_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction api_token_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar MIN_TOKEN = 2;\nvar MAX_TOKEN = 32;\nvar ApiToken = function ApiToken(_ref) {\n  var footer_ref = _ref.footer_ref,\n    is_app_settings = _ref.is_app_settings,\n    overlay_ref = _ref.overlay_ref,\n    setIsOverlayShown = _ref.setIsOverlayShown;\n  var _useStore = src_useStore(),\n    client = _useStore.client;\n  var is_switching = client.is_switching;\n  var isMounted = (0,shared_.useIsMounted)();\n  var prev_is_switching = external_react_default().useRef(is_switching);\n  var _React$useReducer = external_react_default().useReducer(function (prev_state, value) {\n      return api_token_objectSpread(api_token_objectSpread({}, prev_state), value);\n    }, {\n      api_tokens: [],\n      is_loading: true,\n      is_success: false,\n      is_overlay_shown: false,\n      error_message: '',\n      show_delete: false,\n      dispose_token: '',\n      is_delete_loading: false,\n      is_delete_success: false\n    }),\n    _React$useReducer2 = api_token_slicedToArray(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    setState = _React$useReducer2[1];\n  external_react_default().useEffect(function () {\n    getApiTokens();\n    return function () {\n      return setState({\n        dispose_token: ''\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  external_react_default().useEffect(function () {\n    if (prev_is_switching.current !== is_switching) {\n      prev_is_switching.current = is_switching;\n      getApiTokens();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [is_switching]);\n  external_react_default().useEffect(function () {\n    if (typeof setIsOverlayShown === 'function') {\n      setIsOverlayShown(state.is_overlay_shown);\n    }\n  }, [state.is_overlay_shown, setIsOverlayShown]);\n  var initial_form = {\n    token_name: '',\n    read: false,\n    trade: false,\n    payments: false,\n    trading_information: false,\n    admin: false\n  };\n  var toggleOverlay = function toggleOverlay() {\n    return setState({\n      is_overlay_shown: !state.is_overlay_shown\n    });\n  };\n  var validateFields = function validateFields(values) {\n    var _values$token_name;\n    var errors = {};\n    var token_name = values === null || values === void 0 ? void 0 : (_values$token_name = values.token_name) === null || _values$token_name === void 0 ? void 0 : _values$token_name.trim();\n    if (!token_name) {\n      errors.token_name = (0,translations_.localize)('Please enter a token name.');\n    } else if (!/^[A-Za-z0-9\\s_]+$/g.test(token_name)) {\n      errors.token_name = (0,translations_.localize)('Only letters, numbers, and underscores are allowed.');\n    } else if (token_name.length < MIN_TOKEN) {\n      errors.token_name = (0,translations_.localize)('Length of token name must be between {{MIN_TOKEN}} and {{MAX_TOKEN}} characters.', {\n        MIN_TOKEN: MIN_TOKEN,\n        MAX_TOKEN: MAX_TOKEN\n      });\n    } else if (token_name.length > MAX_TOKEN) {\n      errors.token_name = (0,translations_.localize)('Maximum {{MAX_TOKEN}} characters.', {\n        MAX_TOKEN: MAX_TOKEN\n      });\n    }\n    return errors;\n  };\n  var selectedTokenScope = function selectedTokenScope(values) {\n    return Object.keys(values).filter(function (item) {\n      return item !== 'token_name' && values[item];\n    });\n  };\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = api_token_asyncToGenerator( /*#__PURE__*/api_token_regeneratorRuntime().mark(function _callee(values, _ref2) {\n      var setSubmitting, setFieldError, resetForm, token_response;\n      return api_token_regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting, setFieldError = _ref2.setFieldError, resetForm = _ref2.resetForm;\n              _context.next = 3;\n              return shared_.WS.apiToken({\n                api_token: 1,\n                new_token: values.token_name,\n                new_token_scopes: selectedTokenScope(values)\n              });\n            case 3:\n              token_response = _context.sent;\n              if (token_response.error) {\n                setFieldError('token_name', token_response.error.message);\n              } else if (isMounted()) {\n                setState({\n                  is_success: true,\n                  api_tokens: (0,shared_.getPropertyValue)(token_response, ['api_token', 'tokens'])\n                });\n                setTimeout(function () {\n                  if (isMounted()) setState({\n                    is_success: false\n                  });\n                }, 500);\n              }\n              resetForm();\n              setSubmitting(false);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function handleSubmit(_x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var populateTokenResponse = function populateTokenResponse(response) {\n    if (!isMounted()) return;\n    if (response.error) {\n      setState({\n        is_loading: false,\n        error_message: (0,shared_.getPropertyValue)(response, ['error', 'message'])\n      });\n    } else {\n      setState({\n        is_loading: false,\n        api_tokens: (0,shared_.getPropertyValue)(response, ['api_token', 'tokens'])\n      });\n    }\n  };\n  var getApiTokens = /*#__PURE__*/function () {\n    var _ref4 = api_token_asyncToGenerator( /*#__PURE__*/api_token_regeneratorRuntime().mark(function _callee2() {\n      var token_response;\n      return api_token_regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setState({\n                is_loading: true\n              });\n              _context2.next = 3;\n              return shared_.WS.authorized.apiToken({\n                api_token: 1\n              });\n            case 3:\n              token_response = _context2.sent;\n              populateTokenResponse(token_response);\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function getApiTokens() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var deleteToken = /*#__PURE__*/function () {\n    var _ref5 = api_token_asyncToGenerator( /*#__PURE__*/api_token_regeneratorRuntime().mark(function _callee3(token) {\n      var token_response;\n      return api_token_regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              setState({\n                is_delete_loading: true\n              });\n              _context3.next = 3;\n              return shared_.WS.authorized.apiToken({\n                api_token: 1,\n                delete_token: token\n              });\n            case 3:\n              token_response = _context3.sent;\n              populateTokenResponse(token_response);\n              if (isMounted()) setState({\n                is_delete_loading: false,\n                is_delete_success: true\n              });\n              setTimeout(function () {\n                if (isMounted()) setState({\n                  is_delete_success: false\n                });\n              }, 500);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return function deleteToken(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var api_tokens = state.api_tokens,\n    is_loading = state.is_loading,\n    is_success = state.is_success,\n    error_message = state.error_message,\n    is_overlay_shown = state.is_overlay_shown;\n  if (is_loading || is_switching) {\n    return /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n      is_fullscreen: false,\n      className: \"account__initial-loader\"\n    });\n  }\n  if (error_message) {\n    return /*#__PURE__*/external_react_default().createElement(load_error_message[\"default\"], {\n      error_message: error_message\n    });\n  }\n  var context_value = {\n    api_tokens: api_tokens,\n    toggleOverlay: toggleOverlay,\n    deleteToken: deleteToken,\n    footer_ref: footer_ref,\n    overlay_ref: overlay_ref\n  };\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(api_token_context.Provider, {\n    value: context_value\n  }, /*#__PURE__*/external_react_default().createElement(\"section\", {\n    className: classnames_default()('da-api-token', {\n      'da-api-token--app-settings': is_app_settings\n    })\n  }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n    className: \"da-api-token__wrapper\"\n  }, /*#__PURE__*/external_react_default().createElement(components_.ThemedScrollbars, {\n    className: \"da-api-token__scrollbars\",\n    is_bypassed: (0,shared_.isMobile)()\n  }, !is_app_settings && (0,shared_.isMobile)() && /*#__PURE__*/external_react_default().createElement(api_token_article, null), /*#__PURE__*/external_react_default().createElement(Formik, {\n    initialValues: initial_form,\n    onSubmit: handleSubmit,\n    validate: validateFields\n  }, function (_ref6) {\n    var values = _ref6.values,\n      errors = _ref6.errors,\n      isValid = _ref6.isValid,\n      dirty = _ref6.dirty,\n      touched = _ref6.touched,\n      handleChange = _ref6.handleChange,\n      handleBlur = _ref6.handleBlur,\n      isSubmitting = _ref6.isSubmitting,\n      setFieldValue = _ref6.setFieldValue,\n      setFieldTouched = _ref6.setFieldTouched;\n    return /*#__PURE__*/external_react_default().createElement(Form, {\n      noValidate: true\n    }, /*#__PURE__*/external_react_default().createElement(components_.Timeline, {\n      className: \"da-api-token__timeline\",\n      line_height: \"xxxl\"\n    }, /*#__PURE__*/external_react_default().createElement(components_.Timeline.Item, {\n      item_title: (0,translations_.localize)('Select scopes based on the access you need.')\n    }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: \"da-api-token__checkbox-wrapper\"\n    }, /*#__PURE__*/external_react_default().createElement(api_token_card, {\n      name: \"read\",\n      value: values.read,\n      setFieldValue: setFieldValue,\n      display_name: (0,translations_.localize)('Read'),\n      description: (0,translations_.localize)('This scope will allow third-party apps to view your account activity, settings, limits, balance sheets, trade purchase history, and more.')\n    }), /*#__PURE__*/external_react_default().createElement(api_token_card, {\n      name: \"trade\",\n      value: values.trade,\n      display_name: (0,translations_.localize)('Trade'),\n      setFieldValue: setFieldValue,\n      description: (0,translations_.localize)('This scope will allow third-party apps to buy and sell contracts for you, renew your expired purchases, and top up your demo accounts.')\n    }), /*#__PURE__*/external_react_default().createElement(api_token_card, {\n      name: \"payments\",\n      value: values.payments,\n      display_name: (0,translations_.localize)('Payments'),\n      setFieldValue: setFieldValue,\n      description: (0,translations_.localize)('This scope will allow third-party apps to withdraw to payment agents and make inter-account transfers for you.')\n    }), /*#__PURE__*/external_react_default().createElement(api_token_card, {\n      name: \"trading_information\",\n      value: values.trading_information,\n      display_name: (0,translations_.localize)('Trading information'),\n      setFieldValue: setFieldValue,\n      description: (0,translations_.localize)('This scope will allow third-party apps to view your trading history.')\n    }), /*#__PURE__*/external_react_default().createElement(api_token_card, {\n      name: \"admin\",\n      value: values.admin,\n      display_name: (0,translations_.localize)('Admin'),\n      setFieldValue: setFieldValue,\n      description: (0,translations_.localize)('This scope will allow third-party apps to open accounts for you, manage your settings and token usage, and more. ')\n    }, /*#__PURE__*/external_react_default().createElement(Components_inline_note_with_icon, {\n      icon: \"IcAlertWarning\",\n      message: (0,translations_.localize)('To avoid loss of funds, do not share tokens with the Admin scope with unauthorised parties.'),\n      title: (0,translations_.localize)('Note')\n    })))), /*#__PURE__*/external_react_default().createElement(components_.Timeline.Item, {\n      item_title: (0,translations_.localize)(\"Name your token and click on 'Create' to generate your token.\")\n    }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n      className: \"da-api-token__input-group\"\n    }, /*#__PURE__*/external_react_default().createElement(Field, {\n      name: \"token_name\"\n    }, function (_ref7) {\n      var field = _ref7.field;\n      return /*#__PURE__*/external_react_default().createElement(components_.Input, api_token_extends({}, field, {\n        \"data-lpignore\": \"true\",\n        type: \"text\",\n        className: \"da-api-token__input dc-input__input-group\",\n        label: (0,translations_.localize)('Token name'),\n        value: values.token_name,\n        onChange: function onChange(e) {\n          setFieldTouched('token_name', true);\n          handleChange(e);\n        },\n        onBlur: handleBlur,\n        hint: (0,translations_.localize)('Length of token name must be between 2 and 32 characters.'),\n        required: true,\n        error: touched.token_name && errors.token_name\n      }));\n    }), /*#__PURE__*/external_react_default().createElement(components_.Button, {\n      className: classnames_default()('dc-btn__button-group', 'da-api-token__button', {\n        'da-api-token__button--success': is_success\n      }),\n      type: \"submit\",\n      is_disabled: !dirty || isSubmitting || !isValid || !selectedTokenScope(values).length,\n      has_effect: true,\n      is_loading: isSubmitting,\n      is_submit_success: is_success,\n      text: (0,translations_.localize)('Create'),\n      primary: true,\n      large: true\n    }))), /*#__PURE__*/external_react_default().createElement(components_.Timeline.Item, {\n      item_title: (0,translations_.localize)('Copy and paste the token into the app.')\n    }, /*#__PURE__*/external_react_default().createElement(api_token_table, null))));\n  })), !is_app_settings && (0,shared_.isDesktop)() && /*#__PURE__*/external_react_default().createElement(api_token_article, null))), footer_ref && /*#__PURE__*/external_react_default().createElement(api_token_footer, null), overlay_ref && is_overlay_shown && /*#__PURE__*/external_react_default().createElement(api_token_overlay, null)));\n};\n/* harmony default export */ const api_token = (observer(ApiToken));\n;// CONCATENATED MODULE: ./Components/api-token/index.ts\n\n/* harmony default export */ const Components_api_token = (api_token);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2FwaS10b2tlbi9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeEZBO0FBQ0E7QUFDQTtBQUNBOzs7QUNIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzdDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUM3REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNaQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2xDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDYkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDakJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3JCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMvQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN6QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDM0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDN0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDMUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDL0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNsQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDN0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN6REE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNmQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzVFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcktBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzVCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeEVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3pCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUM1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ3A5REE7QUFDQTtBQVNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBTUE7QUFFQTs7QUMxQkE7QUFDQTtBQUVBOzs7Ozs7OztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFjQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBTUE7QUFBQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBR0E7QUFPQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBRUE7O0FDMURBO0FBQ0E7QUFFQTs7QUNIQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFHQTs7O0FDaEJBO0FBQ0E7QUFDQTtBQVVBO0FBT0E7QUFMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUdBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUtBO0FBR0E7QUFFQTs7OztBQ3pDQTtBQUdBO0FBRUE7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFLQTtBQUVBOztBQ3BCQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7OztBQzlCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFLQTtBQUVBOztBQ2xHQTtBQUNBO0FBQ0E7QUFPQTtBQUlBO0FBRkE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBRUE7O0FDM0JBO0FBQ0E7QUFNQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFJQTtBQUVBOzs7Ozs7OztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTtBQWVBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBR0E7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFLQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFHQTtBQU1BO0FBSkE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUlBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUtBO0FBRUE7Ozs7Ozs7Ozs7OztBQ3hJQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBR0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFFQTs7QUMxREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU9BO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBR0E7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUdBOztBQzNCQTtBQUNBO0FBTUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUdBOztBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBTUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUdBO0FBQUE7QUFLQTtBQUdBO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFLQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFFQTs7OztBQzlIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDNUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDUEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzdIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQzVGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3BDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUM1QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7Ozs7QUM5QkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBRUE7O0FDcG5CQTtBQUdBO0FBRUE7Ozs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMvVEE7QUFDQTtBQUNBO0FBQ0E7OztBQ0hBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbEdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDMUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDNUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3RLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlIQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcFFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDNUZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FDbldBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBTUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7QUNuTEE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURBO0FBU0E7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBSUE7QUFHQTtBQUFBO0FBVUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7O0FDckRBO0FBWUE7QUFDQTtBQUVBO0FBR0E7QUFEQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFFQTtBQUdBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQzNDQTtBQUNBO0FBQ0E7QUFVQTtBQUNBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBUkE7QUFDQTtBQUNBO0FBUUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOztBQ25DQTtBQVNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7OztBQ3pCQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBRUE7QUFLQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBRUE7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1BBO0FBQ0E7QUFLQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBSUE7QUFDQTtBQUVBOzs7Ozs7Ozs7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSEE7QUFBQTs7QUFLQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQzNDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDZkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDM0JBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUM1R0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUhBO0FBQUE7O0FBS0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUM1QkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTkE7QUFBQTs7QUFRQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUN6QkE7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ25HQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFBQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUNwRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUNmQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDekRBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7O0FDZkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7O0FDMUJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7O0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ3pCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7OztBQ2ZBO0FBQ0E7QUFTQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7O0FDakVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ3JDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFIQTtBQUFBO0FBSUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDeENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFIQTtBQUFBO0FBSUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQzNDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUZBO0FBQUE7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOztBQy9DQTtBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7QUM3Q0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7Ozs7Ozs7Ozs7O0FDbkNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQUFBO0FBU0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM3QkE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBOztBQUlBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDN0VBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7Ozs7QUN0REE7QUFDQTtBQUNBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDNUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFIQTtBQUFBOztBQUtBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDMUJBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUN0Q0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFIQTtBQUFBO0FBS0E7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUVBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDNUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDZkE7QUFDQTtBQVdBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDaENBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTtBQUNBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ2xEQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBQUE7O0FBTUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUMzQkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQUFBOztBQU1BO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDM0JBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFBQTs7QUFNQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFSQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBb0JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUVBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBR0E7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDbE1BO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUMvQkE7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRkE7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUNqQkE7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUE7QUFFQTtBQUNBO0FBQUE7QUFFQTtBQUVBOzs7Ozs7QUNuQkE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFJQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ25GQTtBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFGQTtBQUFBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ2pCQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRkE7QUFBQTs7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUN0QkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQzNCQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUN2Q0E7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ3hCQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVFBO0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOztBQ3pHQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUhBO0FBQUE7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTs7Ozs7Ozs7Ozs7QUMzR0E7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDeGZBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDN1ZBOzs7Ozs7Ozs7Ozs7QUNBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFaQTtBQUFBO0FBY0E7QUFDQTtBQUNBO0FBRUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQy9CQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBSUE7QUFDQTtBQUFBO0FBR0E7QUFFQTs7O0FDMUJBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQURBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFBQTtBQUNBO0FBR0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQW5DQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBb0NBO0FBekNBO0FBQUE7QUFBQTtBQTJDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBOzs7Ozs7Ozs7OztBQy9LQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUNwQkE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM1QkE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFHQTtBQUVBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUM3RUE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFKQTtBQUFBO0FBTUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ3ZCQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUMxQkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBOzs7Ozs7Ozs7OztBQ3BCQTtBQUNBO0FBT0E7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUN2QkE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBZEE7QUFBQTtBQUFBO0FBQUE7QUFnQkE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7Ozs7Ozs7Ozs7QUN2RkE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7Ozs7Ozs7Ozs7O0FDdEJBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBR0E7QUFFQTs7QUNsQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7O0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFOQTtBQVFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7O0FDbERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDM0RBO0FBU0E7QUFFQTtBQUdBO0FBQUE7QUFEQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBSEE7QUFBQTtBQUtBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUVBOztBQzVDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNSQTtBQUNBOzs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeEVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNySEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDaFBBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQ2JBO0FBQ0E7QUFBQTtBQUtBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBR0E7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUdBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7QUN4QkE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQUE7Ozs7Ozs7Ozs7O0FFOUJBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFFQTtBQUFBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBRUE7QUFBQTtBQUdBO0FBRUE7O0FDakNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBOztBQ2JBO0FBWUE7QUFFQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDeERBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDWEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ05BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDcEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNoRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDbkJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDZkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNSQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDVEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNYQTtBQUNBO0FBQ0E7OztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUM5QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzNCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDOUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ25CQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3BFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3JEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3RDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNOQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNWQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNuQkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDekVBO0FBQ0E7QUFDQTtBQUNBO0FBUUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUE7QUFFQTs7QUNqREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQ0pBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBMkJBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhCQTtBQUFBO0FBa0JBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFKQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFyQkE7QUFBQTtBQUFBO0FBdUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUpBO0FBQUE7QUFBQTtBQU1BO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFaQTtBQUFBO0FBQUE7QUFjQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUFBO0FBQ0E7QUFBQTtBQUFBO0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUVBO0FBQUE7QUFFQTtBQUFBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFDQTtBQUdBO0FBQUE7QUFNQTtBQUVBO0FBRUE7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBSUE7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBS0E7QUFBQTtBQUtBO0FBWUE7QUFFQTs7QUN0V0E7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9mb3JtaWsvbm9kZV9tb2R1bGVzL2RlZXBtZXJnZS9kaXN0L2VzLmpzP2RjOWQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fZnJlZUdsb2JhbC5qcz82YzY3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3Jvb3QuanM/MGIwYiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TeW1ib2wuanM/YTQ0MyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanM/Yzc2NSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vYmplY3RUb1N0cmluZy5qcz81YmVhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VHZXRUYWcuanM/ZGJlYSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19vdmVyQXJnLmpzP2QzMjMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fZ2V0UHJvdG90eXBlLmpzP2U5YTYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc09iamVjdExpa2UuanM/OTZlYiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzUGxhaW5PYmplY3QuanM/ZWEwYSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdGlueS13YXJuaW5nL2Rpc3QvdGlueS13YXJuaW5nLmVzbS5qcz9lZTM3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2xpc3RDYWNoZUNsZWFyLmpzP2I4ODEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9lcS5qcz85NTY1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Fzc29jSW5kZXhPZi5qcz8wY2QxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2xpc3RDYWNoZURlbGV0ZS5qcz80ZDY3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2xpc3RDYWNoZUdldC5qcz9mZmZjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2xpc3RDYWNoZUhhcy5qcz8zZDdiIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2xpc3RDYWNoZVNldC5qcz85NDhjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX0xpc3RDYWNoZS5qcz84NzgwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3N0YWNrQ2xlYXIuanM/NTZhMCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19zdGFja0RlbGV0ZS5qcz9iZDU3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3N0YWNrR2V0LmpzPzU0ZWMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fc3RhY2tIYXMuanM/YTc0OCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzT2JqZWN0LmpzPzdkMzgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0Z1bmN0aW9uLmpzP2JjZDMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fY29yZUpzRGF0YS5qcz9iMDUzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2lzTWFza2VkLmpzP2UxZjgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fdG9Tb3VyY2UuanM/YzQ4OCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlSXNOYXRpdmUuanM/NjU1ZCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRWYWx1ZS5qcz9kOGNhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldE5hdGl2ZS5qcz8zMjFhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX01hcC5qcz8xNzY2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX25hdGl2ZUNyZWF0ZS5qcz85NjAxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2hhc2hDbGVhci5qcz9jNTlhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2hhc2hEZWxldGUuanM/M2Y4NyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19oYXNoR2V0LmpzP2I3NzciLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9faGFzaEhhcy5qcz9iMWRhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2hhc2hTZXQuanM/NDg5NyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19IYXNoLmpzP2M1YmYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fbWFwQ2FjaGVDbGVhci5qcz9hZDZhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2lzS2V5YWJsZS5qcz9jNDFkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldE1hcERhdGEuanM/NjQ2OCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19tYXBDYWNoZURlbGV0ZS5qcz81NjkwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX21hcENhY2hlR2V0LmpzPzFhY2YiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fbWFwQ2FjaGVIYXMuanM/YmEyMSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19tYXBDYWNoZVNldC5qcz9hY2M0Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX01hcENhY2hlLmpzP2E0YzAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fc3RhY2tTZXQuanM/MjZlZCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TdGFjay5qcz80N2I2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2FycmF5RWFjaC5qcz83M2VlIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2RlZmluZVByb3BlcnR5LmpzPzJlYjMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUFzc2lnblZhbHVlLmpzPzcwZDkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYXNzaWduVmFsdWUuanM/MzE2MSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19jb3B5T2JqZWN0LmpzPzFjYWEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZVRpbWVzLmpzPzc0ZDMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUlzQXJndW1lbnRzLmpzPzY4NTkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0FyZ3VtZW50cy5qcz8wN2FlIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNBcnJheS5qcz8wMDM5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvc3R1YkZhbHNlLmpzPzlhZmYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc0J1ZmZlci5qcz83YTE3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2lzSW5kZXguanM/MDRlMSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzTGVuZ3RoLmpzPzUzOTAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUlzVHlwZWRBcnJheS5qcz8xYjU4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VVbmFyeS5qcz9jNjE4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX25vZGVVdGlsLmpzP2Y3MDQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc1R5cGVkQXJyYXkuanM/ZDZlNCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19hcnJheUxpa2VLZXlzLmpzPzFmNDYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9faXNQcm90b3R5cGUuanM/NmIwZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19uYXRpdmVLZXlzLmpzPzk1ZmIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUtleXMuanM/OWQxMSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzQXJyYXlMaWtlLmpzPzNmMTYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9rZXlzLmpzP2E1MzMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUFzc2lnbi5qcz82NDgyIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX25hdGl2ZUtleXNJbi5qcz82YTQ5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VLZXlzSW4uanM/NzA0OSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2tleXNJbi5qcz9iNTMxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VBc3NpZ25Jbi5qcz8wMzdiIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Nsb25lQnVmZmVyLmpzPzM0ODAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fY29weUFycmF5LmpzPzUxOTEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYXJyYXlGaWx0ZXIuanM/YTM4MCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL3N0dWJBcnJheS5qcz84Yzk3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldFN5bWJvbHMuanM/ZDQ3MyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19jb3B5U3ltYm9scy5qcz9iMGVjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2FycmF5UHVzaC5qcz80N2E2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldFN5bWJvbHNJbi5qcz9iNjA5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2NvcHlTeW1ib2xzSW4uanM/MzcxMiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlR2V0QWxsS2V5cy5qcz82NzAwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2dldEFsbEtleXMuanM/MjVjNyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRBbGxLZXlzSW4uanM/NjQ5NSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19EYXRhVmlldy5qcz8wMWEyIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX1Byb21pc2UuanM/YzJlYyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19TZXQuanM/MjFkZCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19XZWFrTWFwLmpzPzliMzgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fZ2V0VGFnLmpzPzNmM2UiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9faW5pdENsb25lQXJyYXkuanM/MzMwYiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19VaW50OEFycmF5LmpzP2UxZDkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fY2xvbmVBcnJheUJ1ZmZlci5qcz9lYmMxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Nsb25lRGF0YVZpZXcuanM/ZWE5MSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19jbG9uZVJlZ0V4cC5qcz8xMjkzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Nsb25lU3ltYm9sLmpzPzU3NmQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fY2xvbmVUeXBlZEFycmF5LmpzPzZkZjciLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9faW5pdENsb25lQnlUYWcuanM/ZGM4YSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlQ3JlYXRlLmpzP2I0OWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9faW5pdENsb25lT2JqZWN0LmpzP2YzNmMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUlzTWFwLmpzPzExMTIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc01hcC5qcz9iNjQzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX2Jhc2VJc1NldC5qcz8wMzBhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvaXNTZXQuanM/YTM3YyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19iYXNlQ2xvbmUuanM/ZDA4ZiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2Nsb25lLmpzPzc0YTEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYXJyYXlNYXAuanM/ZDc3YiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL2lzU3ltYm9sLmpzPzY1ZjMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9tZW1vaXplLmpzP2UxOTAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fbWVtb2l6ZUNhcHBlZC5qcz8yMWM1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3N0cmluZ1RvUGF0aC5qcz9mNjhjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX3RvS2V5LmpzPzU4NzAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZVRvU3RyaW5nLmpzPzIwNWMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy90b1N0cmluZy5qcz82ODk4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvdG9QYXRoLmpzPzM1MmUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9jbG9uZURlZXAuanM/Y2EyNCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvZm9ybWlrL2Rpc3QvZm9ybWlrLmVzbS5qcz84NzI3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9pbmxpbmUtbm90ZS13aXRoLWljb24vaW5saW5lLW5vdGUtd2l0aC1pY29uLnRzeD9iNzIwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9pbmxpbmUtbm90ZS13aXRoLWljb24vaW5kZXgudHM/ODczYSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXJ0aWNsZS9hcnRpY2xlLnRzeD9hZDRjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9hcnRpY2xlL2luZGV4LnRzP2MxMzkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2FwaS10b2tlbi9hcGktdG9rZW4tYXJ0aWNsZS50c3g/NWYyYiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2FwaS10b2tlbi1jYXJkLnRzeD8xZDUwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9hcGktdG9rZW4vYXBpLXRva2VuLWNvbnRleHQudHM/N2JhZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2FwaS10b2tlbi1mb290ZXIudHN4Pzk1NDYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2FwaS10b2tlbi9hcGktdG9rZW4tb3ZlcmxheS50c3g/ZGRmZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2FwaS10b2tlbi1kZWxldGUtYnV0dG9uLnRzeD84YzIzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9hcGktdG9rZW4vYXBpLXRva2VuLXRhYmxlLXJvdy1jZWxsLnRzeD84NGI1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9hcGktdG9rZW4vYXBpLXRva2VuLXRhYmxlLXJvdy1zY29wZXMtY2VsbC50c3g/OGQzZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2FwaS10b2tlbi1jbGlwYm9hcmQudHN4PzBkNWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2FwaS10b2tlbi9hcGktdG9rZW4tdGFibGUtcm93LXRva2VuLWNlbGwudHN4P2JjZTIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2FwaS10b2tlbi9hcGktdG9rZW4tdGFibGUtcm93LnRzeD8zYTAxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9hcGktdG9rZW4vYXBpLXRva2VuLXRhYmxlLXJvdy1oZWFkZXIudHN4PzYxMDUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2FwaS10b2tlbi9hcGktdG9rZW4tdGFibGUudHN4P2Q1ZDAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcmVhY3QtbGl0ZS9lcy91dGlscy9hc3NlcnRFbnZpcm9ubWVudC5qcz84YTMyIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvdXRpbHMvcmVhY3RCYXRjaGVkVXBkYXRlcy5qcz82MmU1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvdXRpbHMvb2JzZXJ2ZXJCYXRjaGluZy5qcz9lZThhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvdXRpbHMvcHJpbnREZWJ1Z1ZhbHVlLmpzPzYzYjYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcmVhY3QtbGl0ZS9lcy91dGlscy9Vbml2ZXJzYWxGaW5hbGl6YXRpb25SZWdpc3RyeS5qcz85ZDlkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvdXRpbHMvb2JzZXJ2ZXJGaW5hbGl6YXRpb25SZWdpc3RyeS5qcz8wZmUwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvc3RhdGljUmVuZGVyaW5nLmpzPzg5ZjciLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcmVhY3QtbGl0ZS9lcy91c2VPYnNlcnZlci5qcz83MWM4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvb2JzZXJ2ZXIuanM/YTgyYiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1yZWFjdC1saXRlL2VzL09ic2VydmVyQ29tcG9uZW50LmpzPzY3MmUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcmVhY3QtbGl0ZS9lcy91c2VMb2NhbE9ic2VydmFibGUuanM/NDUyYSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1yZWFjdC1saXRlL2VzL3VzZUFzT2JzZXJ2YWJsZVNvdXJjZS5qcz8yYzczIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvdXNlTG9jYWxTdG9yZS5qcz85NjE0Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXJlYWN0LWxpdGUvZXMvaW5kZXguanM/YjI4MiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9zdG9yZXMvc3JjL21vY2tTdG9yZS50cz9mYjJhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVDb250ZXh0LnRzPzQ1ZDciLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi91dGlscy5tanM/NzMyMCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2xvZ2dlci5tanM/MmE2NCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL25vdGlmeU1hbmFnZXIubWpzPzFkNzgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9zdWJzY3JpYmFibGUubWpzP2NlYjAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9mb2N1c01hbmFnZXIubWpzPzVlNDgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL2xpYi9vbmxpbmVNYW5hZ2VyLm1qcz81MmRiIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvcmV0cnllci5tanM/YmM5OSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3JlbW92YWJsZS5tanM/Y2U3ZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5Lm1qcz82MjUzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvcXVlcnlDYWNoZS5tanM/Zjk0ZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL211dGF0aW9uLm1qcz80MWQxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9saWIvbXV0YXRpb25DYWNoZS5tanM/ZjY4NiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL2luZmluaXRlUXVlcnlCZWhhdmlvci5tanM/M2U3ZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbGliL3F1ZXJ5Q2xpZW50Lm1qcz82MTE5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvQVBJUHJvdmlkZXIudHN4P2EzMzYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy91c2VBUEkudHM/NzQyNCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL3VzZUluZmluaXRlUXVlcnkudHM/OGU1MyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL3VzZU11dGF0aW9uLnRzPzk4Y2IiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy91c2VRdWVyeS50cz9iNDE1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3V0aWxzL3NyYy9ncm91cFRyYW5zYWN0aW9uc0J5RGF5LnRzPzA5YmQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vdXRpbHMvc3JjL2luZGV4LnRzPzAzOGQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy91c2VJbnZhbGlkYXRlUXVlcnkudHM/YjU5OSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUF1dGhvcml6ZS50cz9jMDEwIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWNjb3VudExpbWl0cy50cz8zZjNjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlR2V0QWNjb3VudFN0YXR1cy50cz9kNTNmIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWNjb3VudFN0YXR1cy50cz9kMjM1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWNjb3VudFR5cGVzLnRzP2U1ZGEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VCYWxhbmNlLnRzP2M0YWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDdXJyZW5jeUNvbmZpZy50cz9mNjg1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlRGVyaXZBY2NvdW50c0xpc3QudHM/NDZiMCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUFjdGl2ZUFjY291bnQudHM/NDA0YiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZVdhbGxldEFjY291bnRzTGlzdC50cz85NTFlIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWN0aXZlV2FsbGV0QWNjb3VudC50cz8yMmEzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWN0aXZlTGlua2VkVG9UcmFkaW5nQWNjb3VudC50cz84Y2I5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlVHJhZGluZ0FjY291bnRzTGlzdC50cz9kYWMzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWN0aXZlVHJhZGluZ0FjY291bnQudHM/M2VmNyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL3VzZVN1YnNjcmlwdGlvbi50cz9mMjQ4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWN0aXZlV2FsbGV0QmFsYW5jZS50cz9hNTg1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQ3RyYWRlckFjY291bnRzTGlzdC50cz81NjExIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlRHh0cmFkZUFjY291bnRzTGlzdC50cz9lOTBhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlTVQ1QWNjb3VudHNMaXN0LnRzP2I3NGMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDRkRBY2NvdW50c0xpc3QudHM/YzRjNyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUFsbEFjY291bnRzTGlzdC50cz9jOTg5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQXZhaWxhYmxlV2FsbGV0cy50cz8yMWY0Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQWxsV2FsbGV0QWNjb3VudHMudHM/ZDVmZiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUF1dGhlbnRpY2F0aW9uLnRzP2RhNDYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VTZXR0aW5ncy50cz8xNDgzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlTGFuZGluZ0NvbXBhbnkudHM/ZjhkOSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUFjY2VzaWJsZVBsYXRmb3Jtcy50cz9lOWVjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQXZhaWxhYmxlTVQ1QWNjb3VudHMudHM/NzY5NiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUNhbmNlbENyeXB0b1RyYW5zYWN0aW9uLnRzP2UyMDIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDYXNoaWVyRmlhdEFkZHJlc3MudHM/YzIyYSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUNvdW50cnlDb25maWcudHM/ZjZlNCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUNyZWF0ZU1UNUFjY291bnQudHM/YWM2ZiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUNyZWF0ZU5ld1JlYWxBY2NvdW50LnRzPzFlYzEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDcmVhdGVPdGhlckNGREFjY291bnQudHM/MmRkMiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUNyZWF0ZVdhbGxldC50cz8wNzU2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlQ3J5cHRvVHJhbnNhY3Rpb25zLnRzPzA1OTgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDcnlwdG9XaXRoZHJhd2FsLnRzPzM4ODgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VDdHJhZGVyU2VydmljZVRva2VuLnRzP2MzZjEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VEZXBvc2l0Q3J5cHRvQWRkcmVzcy50cz9hZDczIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlRG9jdW1lbnRVcGxvYWQudHM/YjA5YiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUR4dHJhZGVTZXJ2aWNlVG9rZW4udHM/NGE2ZCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUR5bmFtaWNMZXZlcmFnZS50cz85OWY2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlRXhjaGFuZ2VSYXRlLnRzP2M0NWIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VJZGVudGl0eURvY3VtZW50VmVyaWZpY2F0aW9uQWRkLnRzP2QyNjciLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VSZXNpZGVuY2VMaXN0LnRzPzM4MDQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VQT0kudHM/NGVlZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZUp1cmlzZGljdGlvblN0YXR1cy50cz81Mzg3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlTVQ1RGVwb3NpdC50cz9mOTNhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvY29uc3RhbnRzL2NvdW50cmllcy50cz8zMWI3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvY29uc3RhbnRzL29uZmlkby50cz81OTY3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvY29uc3RhbnRzL2luZGV4LnRzPzY3ZDMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VPbmZpZG9TZXJ2aWNlVG9rZW4udHM/MzU5NSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZU9uZmlkb05vdGlmaWNhdGlvbkV2ZW50LnRzPzczZDQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VPbmZpZG8udHM/OTg3OSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZU90aGVyQ0ZEUGxhdGZvcm1zRGVwb3NpdC50cz82ZWZiIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlUE9BLnRzPzA2NWUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VTb3J0ZWRNVDVBY2NvdW50cy50cz85ZTVjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlU3RhdGVzTGlzdC50cz8zYjIyIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZENoYW5nZS50cz9lYjA4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZFJlc2V0LnRzPzc2YTQiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VUcmFkaW5nUGxhdGZvcm1QYXNzd29yZENoYW5nZS50cz8xMDdmIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlVHJhbnNhY3Rpb25zLnRzPzk1Y2MiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9ob29rcy91c2VUcmFuc2ZlckJldHdlZW5BY2NvdW50cy50cz9iZTcxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvdXNlVmVyaWZ5RW1haWwudHM/OThjZCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL2hvb2tzL3VzZVdhbGxldE1pZ3JhdGlvbi50cz9mNWVkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL2FwaS9zcmMvaG9va3MvaW5kZXgudHM/NmE4NyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9hcGkvc3JjL3VzZVBhZ2luYXRlZEZldGNoLnRzPzk4OTEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vYXBpL3NyYy9pbmRleC50cz8yMTQ1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvUGVyc2lzdFN0b3JlTWFwLmpzPzk2MTkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS9jbGVhclBlcnNpc3RlZFN0b3JlLmpzPzkyZjUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS9jb25maWd1cmVQZXJzaXN0YWJsZS5qcz85NzNkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvZ2V0UGVyc2lzdGVkU3RvcmUuanM/MzdmYyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1wZXJzaXN0LXN0b3JlL2xpYi9lc201L2h5ZHJhdGVTdG9yZS5qcz8yMDk2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvaXNIeWRyYXRlZC5qcz9lNzJmIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvaXNQZXJzaXN0aW5nLmpzP2ZiMzIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS91dGlscy5qcz9hMThjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvU3RvcmFnZUFkYXB0ZXIuanM/OThlYyIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1wZXJzaXN0LXN0b3JlL2xpYi9lc201L3NlcmlhbGl6YWJsZVByb3BlcnR5LmpzP2RhMjIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS9QZXJzaXN0U3RvcmUuanM/NmNkNSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1wZXJzaXN0LXN0b3JlL2xpYi9lc201L21ha2VQZXJzaXN0YWJsZS5qcz81MzJkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tb2J4LXBlcnNpc3Qtc3RvcmUvbGliL2VzbTUvcGF1c2VQZXJzaXN0aW5nLmpzPzg2NjAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS9zdGFydFBlcnNpc3RpbmcuanM/NDliNSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvbW9ieC1wZXJzaXN0LXN0b3JlL2xpYi9lc201L3N0b3BQZXJzaXN0aW5nLmpzP2Y5YTUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21vYngtcGVyc2lzdC1zdG9yZS9saWIvZXNtNS9pbmRleC5qcz8xYTE5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVzL0Jhc2VTdG9yZS50cz83Zjc5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVzL0ZlYXR1cmVGbGFnc1N0b3JlLnRzP2JjNzMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vc3RvcmVzL3NyYy9zdG9yZXMvaW5kZXgudHM/OTU4NSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi9zdG9yZXMvc3JjL3N0b3JlUHJvdmlkZXIudHN4PzM2ODMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vc3RvcmVzL3NyYy91c2VTdG9yZS50cz9mMDdlIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3N0b3Jlcy9zcmMvc3RvcmVzL0V4Y2hhbmdlUmF0ZXNDb250ZXh0LnRzeD9hOWNjIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VCb29sZWFuL3VzZUJvb2xlYW4uanM/NjFhMSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlQ2xpY2tBbnlXaGVyZS91c2VDbGlja0FueVdoZXJlLmpzPzdiMzMiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUNvcHlUb0NsaXBib2FyZC91c2VDb3B5VG9DbGlwYm9hcmQuanM/YTE1NiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlQ291bnRkb3duL3VzZUNvdW50ZG93bi5qcz9hYjc2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VDb3VudGVyL3VzZUNvdW50ZXIuanM/OGNjOCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlRGFya01vZGUvdXNlRGFya01vZGUuanM/Njg5MSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlRGVib3VuY2UvdXNlRGVib3VuY2UuanM/YTVhMSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlRG9jdW1lbnRUaXRsZS91c2VEb2N1bWVudFRpdGxlLmpzP2I0M2QiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUVmZmVjdE9uY2UvdXNlRWZmZWN0T25jZS5qcz80NWE2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VFbGVtZW50U2l6ZS91c2VFbGVtZW50U2l6ZS5qcz85ZTNhIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VFdmVudENhbGxiYWNrL3VzZUV2ZW50Q2FsbGJhY2suanM/NTNiMCIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlRXZlbnRMaXN0ZW5lci91c2VFdmVudExpc3RlbmVyLmpzPzUxYmUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUZldGNoL3VzZUZldGNoLmpzPzc5MWUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUhvdmVyL3VzZUhvdmVyLmpzP2NiZWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUltYWdlT25Mb2FkL3VzZUltYWdlT25Mb2FkLmpzPzI0OWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUludGVyc2VjdGlvbk9ic2VydmVyL3VzZUludGVyc2VjdGlvbk9ic2VydmVyLmpzPzg3MTUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUludGVydmFsL3VzZUludGVydmFsLmpzP2EzNTAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUlzQ2xpZW50L3VzZUlzQ2xpZW50LmpzPzc4ZTgiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUlzRmlyc3RSZW5kZXIvdXNlSXNGaXJzdFJlbmRlci5qcz82OTI4Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VJc01vdW50ZWQvdXNlSXNNb3VudGVkLmpzPzcwYWYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdC5qcz9jNzk2Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VMb2NhbFN0b3JhZ2UvdXNlTG9jYWxTdG9yYWdlLmpzPzE0MDYiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZUxvY2tlZEJvZHkvdXNlTG9ja2VkQm9keS5qcz80ZGYxIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VNYXAvdXNlTWFwLmpzPzJkNWEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZU1lZGlhUXVlcnkvdXNlTWVkaWFRdWVyeS5qcz8wZTViIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VPbkNsaWNrT3V0c2lkZS91c2VPbkNsaWNrT3V0c2lkZS5qcz80NWY5Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VSZWFkTG9jYWxTdG9yYWdlL3VzZVJlYWRMb2NhbFN0b3JhZ2UuanM/NjkyMiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlU2NyZWVuL3VzZVNjcmVlbi5qcz85NjMzIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VTY3JpcHQvdXNlU2NyaXB0LmpzP2QyYTkiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZVNlc3Npb25TdG9yYWdlL3VzZVNlc3Npb25TdG9yYWdlLmpzP2IyMjAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZVN0ZXAvdXNlU3RlcC5qcz8xZTI3Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VUZXJuYXJ5RGFya01vZGUvdXNlVGVybmFyeURhcmtNb2RlLmpzPzMzZGUiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZVRpbWVvdXQvdXNlVGltZW91dC5qcz8xNjk1Iiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Vob29rcy10cy9kaXN0L2VzbS91c2VUb2dnbGUvdXNlVG9nZ2xlLmpzPzliZGIiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL3VzZVVwZGF0ZUVmZmVjdC91c2VVcGRhdGVFZmZlY3QuanM/NGI1ZSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlaG9va3MtdHMvZGlzdC9lc20vdXNlV2luZG93U2l6ZS91c2VXaW5kb3dTaXplLmpzPzUzOTAiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZWhvb2tzLXRzL2Rpc3QvZXNtL2luZGV4LmpzPzViMTEiLCJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vc3RvcmVzL3NyYy9wcm92aWRlcnMvRXhjaGFuZ2VSYXRlc1Byb3ZpZGVyLnRzeD8zNDViIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uL3N0b3Jlcy9zcmMvaW5kZXgudHM/ZDYxZiIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2FwaS10b2tlbi50c3g/MGQ4NSIsIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uL0NvbXBvbmVudHMvYXBpLXRva2VuL2luZGV4LnRzPzdkOWMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGlzTWVyZ2VhYmxlT2JqZWN0ID0gZnVuY3Rpb24gaXNNZXJnZWFibGVPYmplY3QodmFsdWUpIHtcblx0cmV0dXJuIGlzTm9uTnVsbE9iamVjdCh2YWx1ZSlcblx0XHQmJiAhaXNTcGVjaWFsKHZhbHVlKVxufTtcblxuZnVuY3Rpb24gaXNOb25OdWxsT2JqZWN0KHZhbHVlKSB7XG5cdHJldHVybiAhIXZhbHVlICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCdcbn1cblxuZnVuY3Rpb24gaXNTcGVjaWFsKHZhbHVlKSB7XG5cdHZhciBzdHJpbmdWYWx1ZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG5cblx0cmV0dXJuIHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBSZWdFeHBdJ1xuXHRcdHx8IHN0cmluZ1ZhbHVlID09PSAnW29iamVjdCBEYXRlXSdcblx0XHR8fCBpc1JlYWN0RWxlbWVudCh2YWx1ZSlcbn1cblxuLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWFjdC9ibG9iL2I1YWM5NjNmYjc5MWQxMjk4ZTdmMzk2MjM2MzgzYmM5NTVmOTE2YzEvc3JjL2lzb21vcnBoaWMvY2xhc3NpYy9lbGVtZW50L1JlYWN0RWxlbWVudC5qcyNMMjEtTDI1XG52YXIgY2FuVXNlU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJiBTeW1ib2wuZm9yO1xudmFyIFJFQUNUX0VMRU1FTlRfVFlQRSA9IGNhblVzZVN5bWJvbCA/IFN5bWJvbC5mb3IoJ3JlYWN0LmVsZW1lbnQnKSA6IDB4ZWFjNztcblxuZnVuY3Rpb24gaXNSZWFjdEVsZW1lbnQodmFsdWUpIHtcblx0cmV0dXJuIHZhbHVlLiQkdHlwZW9mID09PSBSRUFDVF9FTEVNRU5UX1RZUEVcbn1cblxuZnVuY3Rpb24gZW1wdHlUYXJnZXQodmFsKSB7XG5cdHJldHVybiBBcnJheS5pc0FycmF5KHZhbCkgPyBbXSA6IHt9XG59XG5cbmZ1bmN0aW9uIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHZhbHVlLCBvcHRpb25zKSB7XG5cdHJldHVybiAob3B0aW9ucy5jbG9uZSAhPT0gZmFsc2UgJiYgb3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCh2YWx1ZSkpXG5cdFx0PyBkZWVwbWVyZ2UoZW1wdHlUYXJnZXQodmFsdWUpLCB2YWx1ZSwgb3B0aW9ucylcblx0XHQ6IHZhbHVlXG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRBcnJheU1lcmdlKHRhcmdldCwgc291cmNlLCBvcHRpb25zKSB7XG5cdHJldHVybiB0YXJnZXQuY29uY2F0KHNvdXJjZSkubWFwKGZ1bmN0aW9uKGVsZW1lbnQpIHtcblx0XHRyZXR1cm4gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQoZWxlbWVudCwgb3B0aW9ucylcblx0fSlcbn1cblxuZnVuY3Rpb24gbWVyZ2VPYmplY3QodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcblx0dmFyIGRlc3RpbmF0aW9uID0ge307XG5cdGlmIChvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0KHRhcmdldCkpIHtcblx0XHRPYmplY3Qua2V5cyh0YXJnZXQpLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7XG5cdFx0XHRkZXN0aW5hdGlvbltrZXldID0gY2xvbmVVbmxlc3NPdGhlcndpc2VTcGVjaWZpZWQodGFyZ2V0W2tleV0sIG9wdGlvbnMpO1xuXHRcdH0pO1xuXHR9XG5cdE9iamVjdC5rZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbihrZXkpIHtcblx0XHRpZiAoIW9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3Qoc291cmNlW2tleV0pIHx8ICF0YXJnZXRba2V5XSkge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHNvdXJjZVtrZXldLCBvcHRpb25zKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGVzdGluYXRpb25ba2V5XSA9IGRlZXBtZXJnZSh0YXJnZXRba2V5XSwgc291cmNlW2tleV0sIG9wdGlvbnMpO1xuXHRcdH1cblx0fSk7XG5cdHJldHVybiBkZXN0aW5hdGlvblxufVxuXG5mdW5jdGlvbiBkZWVwbWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cdG9wdGlvbnMuYXJyYXlNZXJnZSA9IG9wdGlvbnMuYXJyYXlNZXJnZSB8fCBkZWZhdWx0QXJyYXlNZXJnZTtcblx0b3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdCA9IG9wdGlvbnMuaXNNZXJnZWFibGVPYmplY3QgfHwgaXNNZXJnZWFibGVPYmplY3Q7XG5cblx0dmFyIHNvdXJjZUlzQXJyYXkgPSBBcnJheS5pc0FycmF5KHNvdXJjZSk7XG5cdHZhciB0YXJnZXRJc0FycmF5ID0gQXJyYXkuaXNBcnJheSh0YXJnZXQpO1xuXHR2YXIgc291cmNlQW5kVGFyZ2V0VHlwZXNNYXRjaCA9IHNvdXJjZUlzQXJyYXkgPT09IHRhcmdldElzQXJyYXk7XG5cblx0aWYgKCFzb3VyY2VBbmRUYXJnZXRUeXBlc01hdGNoKSB7XG5cdFx0cmV0dXJuIGNsb25lVW5sZXNzT3RoZXJ3aXNlU3BlY2lmaWVkKHNvdXJjZSwgb3B0aW9ucylcblx0fSBlbHNlIGlmIChzb3VyY2VJc0FycmF5KSB7XG5cdFx0cmV0dXJuIG9wdGlvbnMuYXJyYXlNZXJnZSh0YXJnZXQsIHNvdXJjZSwgb3B0aW9ucylcblx0fSBlbHNlIHtcblx0XHRyZXR1cm4gbWVyZ2VPYmplY3QodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpXG5cdH1cbn1cblxuZGVlcG1lcmdlLmFsbCA9IGZ1bmN0aW9uIGRlZXBtZXJnZUFsbChhcnJheSwgb3B0aW9ucykge1xuXHRpZiAoIUFycmF5LmlzQXJyYXkoYXJyYXkpKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdmaXJzdCBhcmd1bWVudCBzaG91bGQgYmUgYW4gYXJyYXknKVxuXHR9XG5cblx0cmV0dXJuIGFycmF5LnJlZHVjZShmdW5jdGlvbihwcmV2LCBuZXh0KSB7XG5cdFx0cmV0dXJuIGRlZXBtZXJnZShwcmV2LCBuZXh0LCBvcHRpb25zKVxuXHR9LCB7fSlcbn07XG5cbnZhciBkZWVwbWVyZ2VfMSA9IGRlZXBtZXJnZTtcblxuZXhwb3J0IGRlZmF1bHQgZGVlcG1lcmdlXzE7XG4iLCIvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG5leHBvcnQgZGVmYXVsdCBmcmVlR2xvYmFsO1xuIiwiaW1wb3J0IGZyZWVHbG9iYWwgZnJvbSAnLi9fZnJlZUdsb2JhbC5qcyc7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgc2VsZmAuICovXG52YXIgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSAnb2JqZWN0JyAmJiBzZWxmICYmIHNlbGYuT2JqZWN0ID09PSBPYmplY3QgJiYgc2VsZjtcblxuLyoqIFVzZWQgYXMgYSByZWZlcmVuY2UgdG8gdGhlIGdsb2JhbCBvYmplY3QuICovXG52YXIgcm9vdCA9IGZyZWVHbG9iYWwgfHwgZnJlZVNlbGYgfHwgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblxuZXhwb3J0IGRlZmF1bHQgcm9vdDtcbiIsImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuZXhwb3J0IGRlZmF1bHQgU3ltYm9sO1xuIiwiaW1wb3J0IFN5bWJvbCBmcm9tICcuL19TeW1ib2wuanMnO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlR2V0VGFnYCB3aGljaCBpZ25vcmVzIGBTeW1ib2wudG9TdHJpbmdUYWdgIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSByYXcgYHRvU3RyaW5nVGFnYC5cbiAqL1xuZnVuY3Rpb24gZ2V0UmF3VGFnKHZhbHVlKSB7XG4gIHZhciBpc093biA9IGhhc093blByb3BlcnR5LmNhbGwodmFsdWUsIHN5bVRvU3RyaW5nVGFnKSxcbiAgICAgIHRhZyA9IHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcblxuICB0cnkge1xuICAgIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSA9IHVuZGVmaW5lZDtcbiAgICB2YXIgdW5tYXNrZWQgPSB0cnVlO1xuICB9IGNhdGNoIChlKSB7fVxuXG4gIHZhciByZXN1bHQgPSBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgaWYgKHVubWFza2VkKSB7XG4gICAgaWYgKGlzT3duKSB7XG4gICAgICB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ10gPSB0YWc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ107XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFJhd1RhZztcbiIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBvYmplY3RUb1N0cmluZztcbiIsImltcG9ydCBTeW1ib2wgZnJvbSAnLi9fU3ltYm9sLmpzJztcbmltcG9ydCBnZXRSYXdUYWcgZnJvbSAnLi9fZ2V0UmF3VGFnLmpzJztcbmltcG9ydCBvYmplY3RUb1N0cmluZyBmcm9tICcuL19vYmplY3RUb1N0cmluZy5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBudWxsVGFnID0gJ1tvYmplY3QgTnVsbF0nLFxuICAgIHVuZGVmaW5lZFRhZyA9ICdbb2JqZWN0IFVuZGVmaW5lZF0nO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0VGFnYCB3aXRob3V0IGZhbGxiYWNrcyBmb3IgYnVnZ3kgZW52aXJvbm1lbnRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICByZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZFRhZyA6IG51bGxUYWc7XG4gIH1cbiAgcmV0dXJuIChzeW1Ub1N0cmluZ1RhZyAmJiBzeW1Ub1N0cmluZ1RhZyBpbiBPYmplY3QodmFsdWUpKVxuICAgID8gZ2V0UmF3VGFnKHZhbHVlKVxuICAgIDogb2JqZWN0VG9TdHJpbmcodmFsdWUpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlR2V0VGFnO1xuIiwiLyoqXG4gKiBDcmVhdGVzIGEgdW5hcnkgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGBmdW5jYCB3aXRoIGl0cyBhcmd1bWVudCB0cmFuc2Zvcm1lZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gd3JhcC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHRyYW5zZm9ybSBUaGUgYXJndW1lbnQgdHJhbnNmb3JtLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG92ZXJBcmcoZnVuYywgdHJhbnNmb3JtKSB7XG4gIHJldHVybiBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4gZnVuYyh0cmFuc2Zvcm0oYXJnKSk7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG92ZXJBcmc7XG4iLCJpbXBvcnQgb3ZlckFyZyBmcm9tICcuL19vdmVyQXJnLmpzJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgZ2V0UHJvdG90eXBlID0gb3ZlckFyZyhPYmplY3QuZ2V0UHJvdG90eXBlT2YsIE9iamVjdCk7XG5cbmV4cG9ydCBkZWZhdWx0IGdldFByb3RvdHlwZTtcbiIsIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UuIEEgdmFsdWUgaXMgb2JqZWN0LWxpa2UgaWYgaXQncyBub3QgYG51bGxgXG4gKiBhbmQgaGFzIGEgYHR5cGVvZmAgcmVzdWx0IG9mIFwib2JqZWN0XCIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgb2JqZWN0LWxpa2UsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc09iamVjdExpa2Uoe30pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoXy5ub29wKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc09iamVjdExpa2UobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09ICdvYmplY3QnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc09iamVjdExpa2U7XG4iLCJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBnZXRQcm90b3R5cGUgZnJvbSAnLi9fZ2V0UHJvdG90eXBlLmpzJztcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0VGFnID0gJ1tvYmplY3QgT2JqZWN0XSc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBpbmZlciB0aGUgYE9iamVjdGAgY29uc3RydWN0b3IuICovXG52YXIgb2JqZWN0Q3RvclN0cmluZyA9IGZ1bmNUb1N0cmluZy5jYWxsKE9iamVjdCk7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwbGFpbiBvYmplY3QsIHRoYXQgaXMsIGFuIG9iamVjdCBjcmVhdGVkIGJ5IHRoZVxuICogYE9iamVjdGAgY29uc3RydWN0b3Igb3Igb25lIHdpdGggYSBgW1tQcm90b3R5cGVdXWAgb2YgYG51bGxgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC44LjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcGxhaW4gb2JqZWN0LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqIH1cbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QobmV3IEZvbyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdChbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoeyAneCc6IDAsICd5JzogMCB9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzUGxhaW5PYmplY3QoT2JqZWN0LmNyZWF0ZShudWxsKSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpIHx8IGJhc2VHZXRUYWcodmFsdWUpICE9IG9iamVjdFRhZykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgcHJvdG8gPSBnZXRQcm90b3R5cGUodmFsdWUpO1xuICBpZiAocHJvdG8gPT09IG51bGwpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuICB2YXIgQ3RvciA9IGhhc093blByb3BlcnR5LmNhbGwocHJvdG8sICdjb25zdHJ1Y3RvcicpICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuICByZXR1cm4gdHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yIGluc3RhbmNlb2YgQ3RvciAmJlxuICAgIGZ1bmNUb1N0cmluZy5jYWxsKEN0b3IpID09IG9iamVjdEN0b3JTdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzUGxhaW5PYmplY3Q7XG4iLCJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcbmZ1bmN0aW9uIHdhcm5pbmcoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gIGlmICghaXNQcm9kdWN0aW9uKSB7XG4gICAgaWYgKGNvbmRpdGlvbikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHZhciB0ZXh0ID0gXCJXYXJuaW5nOiBcIiArIG1lc3NhZ2U7XG5cbiAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBjb25zb2xlLndhcm4odGV4dCk7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHRocm93IEVycm9yKHRleHQpO1xuICAgIH0gY2F0Y2ggKHgpIHt9XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgd2FybmluZztcbiIsIi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbGlzdCBjYWNoZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBbXTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbGlzdENhY2hlQ2xlYXI7XG4iLCIvKipcbiAqIFBlcmZvcm1zIGFcbiAqIFtgU2FtZVZhbHVlWmVyb2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXNhbWV2YWx1ZXplcm8pXG4gKiBjb21wYXJpc29uIGJldHdlZW4gdHdvIHZhbHVlcyB0byBkZXRlcm1pbmUgaWYgdGhleSBhcmUgZXF1aXZhbGVudC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7Kn0gb3RoZXIgVGhlIG90aGVyIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIHZhbHVlcyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2EnOiAxIH07XG4gKlxuICogXy5lcShvYmplY3QsIG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcShvYmplY3QsIG90aGVyKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcSgnYScsICdhJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5lcSgnYScsIE9iamVjdCgnYScpKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5lcShOYU4sIE5hTik7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGVxKHZhbHVlLCBvdGhlcikge1xuICByZXR1cm4gdmFsdWUgPT09IG90aGVyIHx8ICh2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXE7XG4iLCJpbXBvcnQgZXEgZnJvbSAnLi9lcS5qcyc7XG5cbi8qKlxuICogR2V0cyB0aGUgaW5kZXggYXQgd2hpY2ggdGhlIGBrZXlgIGlzIGZvdW5kIGluIGBhcnJheWAgb2Yga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7Kn0ga2V5IFRoZSBrZXkgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgdGhlIGluZGV4IG9mIHRoZSBtYXRjaGVkIHZhbHVlLCBlbHNlIGAtMWAuXG4gKi9cbmZ1bmN0aW9uIGFzc29jSW5kZXhPZihhcnJheSwga2V5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIGlmIChlcShhcnJheVtsZW5ndGhdWzBdLCBrZXkpKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzc29jSW5kZXhPZjtcbiIsImltcG9ydCBhc3NvY0luZGV4T2YgZnJvbSAnLi9fYXNzb2NJbmRleE9mLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlO1xuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBsaXN0IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVEZWxldGUoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXyxcbiAgICAgIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG5cbiAgaWYgKGluZGV4IDwgMCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICB2YXIgbGFzdEluZGV4ID0gZGF0YS5sZW5ndGggLSAxO1xuICBpZiAoaW5kZXggPT0gbGFzdEluZGV4KSB7XG4gICAgZGF0YS5wb3AoKTtcbiAgfSBlbHNlIHtcbiAgICBzcGxpY2UuY2FsbChkYXRhLCBpbmRleCwgMSk7XG4gIH1cbiAgLS10aGlzLnNpemU7XG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgZGVmYXVsdCBsaXN0Q2FjaGVEZWxldGU7XG4iLCJpbXBvcnQgYXNzb2NJbmRleE9mIGZyb20gJy4vX2Fzc29jSW5kZXhPZi5qcyc7XG5cbi8qKlxuICogR2V0cyB0aGUgbGlzdCBjYWNoZSB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUdldChrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkIDogZGF0YVtpbmRleF1bMV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RDYWNoZUdldDtcbiIsImltcG9ydCBhc3NvY0luZGV4T2YgZnJvbSAnLi9fYXNzb2NJbmRleE9mLmpzJztcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGxpc3RDYWNoZUhhcztcbiIsImltcG9ydCBhc3NvY0luZGV4T2YgZnJvbSAnLi9fYXNzb2NJbmRleE9mLmpzJztcblxuLyoqXG4gKiBTZXRzIHRoZSBsaXN0IGNhY2hlIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBsaXN0IGNhY2hlIGluc3RhbmNlLlxuICovXG5mdW5jdGlvbiBsaXN0Q2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICArK3RoaXMuc2l6ZTtcbiAgICBkYXRhLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSBlbHNlIHtcbiAgICBkYXRhW2luZGV4XVsxXSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiB0aGlzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBsaXN0Q2FjaGVTZXQ7XG4iLCJpbXBvcnQgbGlzdENhY2hlQ2xlYXIgZnJvbSAnLi9fbGlzdENhY2hlQ2xlYXIuanMnO1xuaW1wb3J0IGxpc3RDYWNoZURlbGV0ZSBmcm9tICcuL19saXN0Q2FjaGVEZWxldGUuanMnO1xuaW1wb3J0IGxpc3RDYWNoZUdldCBmcm9tICcuL19saXN0Q2FjaGVHZXQuanMnO1xuaW1wb3J0IGxpc3RDYWNoZUhhcyBmcm9tICcuL19saXN0Q2FjaGVIYXMuanMnO1xuaW1wb3J0IGxpc3RDYWNoZVNldCBmcm9tICcuL19saXN0Q2FjaGVTZXQuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBMaXN0Q2FjaGVgLlxuTGlzdENhY2hlLnByb3RvdHlwZS5jbGVhciA9IGxpc3RDYWNoZUNsZWFyO1xuTGlzdENhY2hlLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBsaXN0Q2FjaGVEZWxldGU7XG5MaXN0Q2FjaGUucHJvdG90eXBlLmdldCA9IGxpc3RDYWNoZUdldDtcbkxpc3RDYWNoZS5wcm90b3R5cGUuaGFzID0gbGlzdENhY2hlSGFzO1xuTGlzdENhY2hlLnByb3RvdHlwZS5zZXQgPSBsaXN0Q2FjaGVTZXQ7XG5cbmV4cG9ydCBkZWZhdWx0IExpc3RDYWNoZTtcbiIsImltcG9ydCBMaXN0Q2FjaGUgZnJvbSAnLi9fTGlzdENhY2hlLmpzJztcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBTdGFja1xuICovXG5mdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmV3IExpc3RDYWNoZTtcbiAgdGhpcy5zaXplID0gMDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RhY2tDbGVhcjtcbiIsIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIHN0YWNrLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrRGVsZXRlKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICByZXN1bHQgPSBkYXRhWydkZWxldGUnXShrZXkpO1xuXG4gIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RhY2tEZWxldGU7XG4iLCIvKipcbiAqIEdldHMgdGhlIHN0YWNrIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBzdGFja0dldChrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uZ2V0KGtleSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0YWNrR2V0O1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYSBzdGFjayB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrSGFzKGtleSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMoa2V5KTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3RhY2tIYXM7XG4iLCIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNPYmplY3Q7XG4iLCJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFzeW5jVGFnID0gJ1tvYmplY3QgQXN5bmNGdW5jdGlvbl0nLFxuICAgIGZ1bmNUYWcgPSAnW29iamVjdCBGdW5jdGlvbl0nLFxuICAgIGdlblRhZyA9ICdbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXScsXG4gICAgcHJveHlUYWcgPSAnW29iamVjdCBQcm94eV0nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDkgd2hpY2ggcmV0dXJucyAnb2JqZWN0JyBmb3IgdHlwZWQgYXJyYXlzIGFuZCBvdGhlciBjb25zdHJ1Y3RvcnMuXG4gIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWcgfHwgdGFnID09IGFzeW5jVGFnIHx8IHRhZyA9PSBwcm94eVRhZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNGdW5jdGlvbjtcbiIsImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgb3ZlcnJlYWNoaW5nIGNvcmUtanMgc2hpbXMuICovXG52YXIgY29yZUpzRGF0YSA9IHJvb3RbJ19fY29yZS1qc19zaGFyZWRfXyddO1xuXG5leHBvcnQgZGVmYXVsdCBjb3JlSnNEYXRhO1xuIiwiaW1wb3J0IGNvcmVKc0RhdGEgZnJvbSAnLi9fY29yZUpzRGF0YS5qcyc7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtZXRob2RzIG1hc3F1ZXJhZGluZyBhcyBuYXRpdmUuICovXG52YXIgbWFza1NyY0tleSA9IChmdW5jdGlvbigpIHtcbiAgdmFyIHVpZCA9IC9bXi5dKyQvLmV4ZWMoY29yZUpzRGF0YSAmJiBjb3JlSnNEYXRhLmtleXMgJiYgY29yZUpzRGF0YS5rZXlzLklFX1BST1RPIHx8ICcnKTtcbiAgcmV0dXJuIHVpZCA/ICgnU3ltYm9sKHNyYylfMS4nICsgdWlkKSA6ICcnO1xufSgpKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzTWFza2VkO1xuIiwiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gcmVzb2x2ZSB0aGUgZGVjb21waWxlZCBzb3VyY2Ugb2YgZnVuY3Rpb25zLiAqL1xudmFyIGZ1bmNUb1N0cmluZyA9IGZ1bmNQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG5leHBvcnQgZGVmYXVsdCB0b1NvdXJjZTtcbiIsImltcG9ydCBpc0Z1bmN0aW9uIGZyb20gJy4vaXNGdW5jdGlvbi5qcyc7XG5pbXBvcnQgaXNNYXNrZWQgZnJvbSAnLi9faXNNYXNrZWQuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4vaXNPYmplY3QuanMnO1xuaW1wb3J0IHRvU291cmNlIGZyb20gJy4vX3RvU291cmNlLmpzJztcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGhvc3QgY29uc3RydWN0b3JzIChTYWZhcmkpLiAqL1xudmFyIHJlSXNIb3N0Q3RvciA9IC9eXFxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXFxdJC87XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBmdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGUsXG4gICAgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKiogVXNlZCB0byBkZXRlY3QgaWYgYSBtZXRob2QgaXMgbmF0aXZlLiAqL1xudmFyIHJlSXNOYXRpdmUgPSBSZWdFeHAoJ14nICtcbiAgZnVuY1RvU3RyaW5nLmNhbGwoaGFzT3duUHJvcGVydHkpLnJlcGxhY2UocmVSZWdFeHBDaGFyLCAnXFxcXCQmJylcbiAgLnJlcGxhY2UoL2hhc093blByb3BlcnR5fChmdW5jdGlvbikuKj8oPz1cXFxcXFwoKXwgZm9yIC4rPyg/PVxcXFxcXF0pL2csICckMS4qPycpICsgJyQnXG4pO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTmF0aXZlYCB3aXRob3V0IGJhZCBzaGltIGNoZWNrcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG5hdGl2ZSBmdW5jdGlvbixcbiAqICBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc05hdGl2ZSh2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0KHZhbHVlKSB8fCBpc01hc2tlZCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHBhdHRlcm4gPSBpc0Z1bmN0aW9uKHZhbHVlKSA/IHJlSXNOYXRpdmUgOiByZUlzSG9zdEN0b3I7XG4gIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUlzTmF0aXZlO1xuIiwiLyoqXG4gKiBHZXRzIHRoZSB2YWx1ZSBhdCBga2V5YCBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3RdIFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBwcm9wZXJ0eSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gZ2V0VmFsdWUob2JqZWN0LCBrZXkpIHtcbiAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkIDogb2JqZWN0W2tleV07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFZhbHVlO1xuIiwiaW1wb3J0IGJhc2VJc05hdGl2ZSBmcm9tICcuL19iYXNlSXNOYXRpdmUuanMnO1xuaW1wb3J0IGdldFZhbHVlIGZyb20gJy4vX2dldFZhbHVlLmpzJztcblxuLyoqXG4gKiBHZXRzIHRoZSBuYXRpdmUgZnVuY3Rpb24gYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgbWV0aG9kIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBmdW5jdGlvbiBpZiBpdCdzIG5hdGl2ZSwgZWxzZSBgdW5kZWZpbmVkYC5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gIHZhciB2YWx1ZSA9IGdldFZhbHVlKG9iamVjdCwga2V5KTtcbiAgcmV0dXJuIGJhc2VJc05hdGl2ZSh2YWx1ZSkgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZ2V0TmF0aXZlO1xuIiwiaW1wb3J0IGdldE5hdGl2ZSBmcm9tICcuL19nZXROYXRpdmUuanMnO1xuaW1wb3J0IHJvb3QgZnJvbSAnLi9fcm9vdC5qcyc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpO1xuXG5leHBvcnQgZGVmYXVsdCBNYXA7XG4iLCJpbXBvcnQgZ2V0TmF0aXZlIGZyb20gJy4vX2dldE5hdGl2ZS5qcyc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBuYXRpdmVDcmVhdGUgPSBnZXROYXRpdmUoT2JqZWN0LCAnY3JlYXRlJyk7XG5cbmV4cG9ydCBkZWZhdWx0IG5hdGl2ZUNyZWF0ZTtcbiIsImltcG9ydCBuYXRpdmVDcmVhdGUgZnJvbSAnLi9fbmF0aXZlQ3JlYXRlLmpzJztcblxuLyoqXG4gKiBSZW1vdmVzIGFsbCBrZXktdmFsdWUgZW50cmllcyBmcm9tIHRoZSBoYXNoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIEhhc2hcbiAqL1xuZnVuY3Rpb24gaGFzaENsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gbmF0aXZlQ3JlYXRlID8gbmF0aXZlQ3JlYXRlKG51bGwpIDoge307XG4gIHRoaXMuc2l6ZSA9IDA7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhhc2hDbGVhcjtcbiIsIi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7T2JqZWN0fSBoYXNoIFRoZSBoYXNoIHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoRGVsZXRlKGtleSkge1xuICB2YXIgcmVzdWx0ID0gdGhpcy5oYXMoa2V5KSAmJiBkZWxldGUgdGhpcy5fX2RhdGFfX1trZXldO1xuICB0aGlzLnNpemUgLT0gcmVzdWx0ID8gMSA6IDA7XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGhhc2hEZWxldGU7XG4iLCJpbXBvcnQgbmF0aXZlQ3JlYXRlIGZyb20gJy4vX25hdGl2ZUNyZWF0ZS5qcyc7XG5cbi8qKiBVc2VkIHRvIHN0YW5kLWluIGZvciBgdW5kZWZpbmVkYCBoYXNoIHZhbHVlcy4gKi9cbnZhciBIQVNIX1VOREVGSU5FRCA9ICdfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBHZXRzIHRoZSBoYXNoIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGhhc2hHZXQoa2V5KSB7XG4gIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXztcbiAgaWYgKG5hdGl2ZUNyZWF0ZSkge1xuICAgIHZhciByZXN1bHQgPSBkYXRhW2tleV07XG4gICAgcmV0dXJuIHJlc3VsdCA9PT0gSEFTSF9VTkRFRklORUQgPyB1bmRlZmluZWQgOiByZXN1bHQ7XG4gIH1cbiAgcmV0dXJuIGhhc093blByb3BlcnR5LmNhbGwoZGF0YSwga2V5KSA/IGRhdGFba2V5XSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaGFzaEdldDtcbiIsImltcG9ydCBuYXRpdmVDcmVhdGUgZnJvbSAnLi9fbmF0aXZlQ3JlYXRlLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSBoYXNoIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgZW50cnkgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW4gZW50cnkgZm9yIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNoSGFzKGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHJldHVybiBuYXRpdmVDcmVhdGUgPyAoZGF0YVtrZXldICE9PSB1bmRlZmluZWQpIDogaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBoYXNoSGFzO1xuIiwiaW1wb3J0IG5hdGl2ZUNyZWF0ZSBmcm9tICcuL19uYXRpdmVDcmVhdGUuanMnO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIHRoaXMuc2l6ZSArPSB0aGlzLmhhcyhrZXkpID8gMCA6IDE7XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaGFzaFNldDtcbiIsImltcG9ydCBoYXNoQ2xlYXIgZnJvbSAnLi9faGFzaENsZWFyLmpzJztcbmltcG9ydCBoYXNoRGVsZXRlIGZyb20gJy4vX2hhc2hEZWxldGUuanMnO1xuaW1wb3J0IGhhc2hHZXQgZnJvbSAnLi9faGFzaEdldC5qcyc7XG5pbXBvcnQgaGFzaEhhcyBmcm9tICcuL19oYXNoSGFzLmpzJztcbmltcG9ydCBoYXNoU2V0IGZyb20gJy4vX2hhc2hTZXQuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoYXNoIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gSGFzaChlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBIYXNoYC5cbkhhc2gucHJvdG90eXBlLmNsZWFyID0gaGFzaENsZWFyO1xuSGFzaC5wcm90b3R5cGVbJ2RlbGV0ZSddID0gaGFzaERlbGV0ZTtcbkhhc2gucHJvdG90eXBlLmdldCA9IGhhc2hHZXQ7XG5IYXNoLnByb3RvdHlwZS5oYXMgPSBoYXNoSGFzO1xuSGFzaC5wcm90b3R5cGUuc2V0ID0gaGFzaFNldDtcblxuZXhwb3J0IGRlZmF1bHQgSGFzaDtcbiIsImltcG9ydCBIYXNoIGZyb20gJy4vX0hhc2guanMnO1xuaW1wb3J0IExpc3RDYWNoZSBmcm9tICcuL19MaXN0Q2FjaGUuanMnO1xuaW1wb3J0IE1hcCBmcm9tICcuL19NYXAuanMnO1xuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgY2xlYXJcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICovXG5mdW5jdGlvbiBtYXBDYWNoZUNsZWFyKCkge1xuICB0aGlzLnNpemUgPSAwO1xuICB0aGlzLl9fZGF0YV9fID0ge1xuICAgICdoYXNoJzogbmV3IEhhc2gsXG4gICAgJ21hcCc6IG5ldyAoTWFwIHx8IExpc3RDYWNoZSksXG4gICAgJ3N0cmluZyc6IG5ldyBIYXNoXG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1hcENhY2hlQ2xlYXI7XG4iLCIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHN1aXRhYmxlIGZvciB1c2UgYXMgdW5pcXVlIG9iamVjdCBrZXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXlhYmxlKHZhbHVlKSB7XG4gIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICByZXR1cm4gKHR5cGUgPT0gJ3N0cmluZycgfHwgdHlwZSA9PSAnbnVtYmVyJyB8fCB0eXBlID09ICdzeW1ib2wnIHx8IHR5cGUgPT0gJ2Jvb2xlYW4nKVxuICAgID8gKHZhbHVlICE9PSAnX19wcm90b19fJylcbiAgICA6ICh2YWx1ZSA9PT0gbnVsbCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzS2V5YWJsZTtcbiIsImltcG9ydCBpc0tleWFibGUgZnJvbSAnLi9faXNLZXlhYmxlLmpzJztcblxuLyoqXG4gKiBHZXRzIHRoZSBkYXRhIGZvciBgbWFwYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG1hcCBUaGUgbWFwIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUgcmVmZXJlbmNlIGtleS5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBtYXAgZGF0YS5cbiAqL1xuZnVuY3Rpb24gZ2V0TWFwRGF0YShtYXAsIGtleSkge1xuICB2YXIgZGF0YSA9IG1hcC5fX2RhdGFfXztcbiAgcmV0dXJuIGlzS2V5YWJsZShrZXkpXG4gICAgPyBkYXRhW3R5cGVvZiBrZXkgPT0gJ3N0cmluZycgPyAnc3RyaW5nJyA6ICdoYXNoJ11cbiAgICA6IGRhdGEubWFwO1xufVxuXG5leHBvcnQgZGVmYXVsdCBnZXRNYXBEYXRhO1xuIiwiaW1wb3J0IGdldE1hcERhdGEgZnJvbSAnLi9fZ2V0TWFwRGF0YS5qcyc7XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIG1hcC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgTWFwQ2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBtYXBDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIHJlc3VsdCA9IGdldE1hcERhdGEodGhpcywga2V5KVsnZGVsZXRlJ10oa2V5KTtcbiAgdGhpcy5zaXplIC09IHJlc3VsdCA/IDEgOiAwO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtYXBDYWNoZURlbGV0ZTtcbiIsImltcG9ydCBnZXRNYXBEYXRhIGZyb20gJy4vX2dldE1hcERhdGEuanMnO1xuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1hcENhY2hlR2V0O1xuIiwiaW1wb3J0IGdldE1hcERhdGEgZnJvbSAnLi9fZ2V0TWFwRGF0YS5qcyc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbWFwIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuaGFzKGtleSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IG1hcENhY2hlSGFzO1xuIiwiaW1wb3J0IGdldE1hcERhdGEgZnJvbSAnLi9fZ2V0TWFwRGF0YS5qcyc7XG5cbi8qKlxuICogU2V0cyB0aGUgbWFwIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG1hcCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IGdldE1hcERhdGEodGhpcywga2V5KSxcbiAgICAgIHNpemUgPSBkYXRhLnNpemU7XG5cbiAgZGF0YS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHRoaXMuc2l6ZSArPSBkYXRhLnNpemUgPT0gc2l6ZSA/IDAgOiAxO1xuICByZXR1cm4gdGhpcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWFwQ2FjaGVTZXQ7XG4iLCJpbXBvcnQgbWFwQ2FjaGVDbGVhciBmcm9tICcuL19tYXBDYWNoZUNsZWFyLmpzJztcbmltcG9ydCBtYXBDYWNoZURlbGV0ZSBmcm9tICcuL19tYXBDYWNoZURlbGV0ZS5qcyc7XG5pbXBvcnQgbWFwQ2FjaGVHZXQgZnJvbSAnLi9fbWFwQ2FjaGVHZXQuanMnO1xuaW1wb3J0IG1hcENhY2hlSGFzIGZyb20gJy4vX21hcENhY2hlSGFzLmpzJztcbmltcG9ydCBtYXBDYWNoZVNldCBmcm9tICcuL19tYXBDYWNoZVNldC5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIG1hcCBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBNYXBDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBNYXBDYWNoZWAuXG5NYXBDYWNoZS5wcm90b3R5cGUuY2xlYXIgPSBtYXBDYWNoZUNsZWFyO1xuTWFwQ2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IG1hcENhY2hlRGVsZXRlO1xuTWFwQ2FjaGUucHJvdG90eXBlLmdldCA9IG1hcENhY2hlR2V0O1xuTWFwQ2FjaGUucHJvdG90eXBlLmhhcyA9IG1hcENhY2hlSGFzO1xuTWFwQ2FjaGUucHJvdG90eXBlLnNldCA9IG1hcENhY2hlU2V0O1xuXG5leHBvcnQgZGVmYXVsdCBNYXBDYWNoZTtcbiIsImltcG9ydCBMaXN0Q2FjaGUgZnJvbSAnLi9fTGlzdENhY2hlLmpzJztcbmltcG9ydCBNYXAgZnJvbSAnLi9fTWFwLmpzJztcbmltcG9ydCBNYXBDYWNoZSBmcm9tICcuL19NYXBDYWNoZS5qcyc7XG5cbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xudmFyIExBUkdFX0FSUkFZX1NJWkUgPSAyMDA7XG5cbi8qKlxuICogU2V0cyB0aGUgc3RhY2sgYGtleWAgdG8gYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgc2V0XG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgc3RhY2sgY2FjaGUgaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAoZGF0YSBpbnN0YW5jZW9mIExpc3RDYWNoZSkge1xuICAgIHZhciBwYWlycyA9IGRhdGEuX19kYXRhX187XG4gICAgaWYgKCFNYXAgfHwgKHBhaXJzLmxlbmd0aCA8IExBUkdFX0FSUkFZX1NJWkUgLSAxKSkge1xuICAgICAgcGFpcnMucHVzaChba2V5LCB2YWx1ZV0pO1xuICAgICAgdGhpcy5zaXplID0gKytkYXRhLnNpemU7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGUocGFpcnMpO1xuICB9XG4gIGRhdGEuc2V0KGtleSwgdmFsdWUpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG4gIHJldHVybiB0aGlzO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdGFja1NldDtcbiIsImltcG9ydCBMaXN0Q2FjaGUgZnJvbSAnLi9fTGlzdENhY2hlLmpzJztcbmltcG9ydCBzdGFja0NsZWFyIGZyb20gJy4vX3N0YWNrQ2xlYXIuanMnO1xuaW1wb3J0IHN0YWNrRGVsZXRlIGZyb20gJy4vX3N0YWNrRGVsZXRlLmpzJztcbmltcG9ydCBzdGFja0dldCBmcm9tICcuL19zdGFja0dldC5qcyc7XG5pbXBvcnQgc3RhY2tIYXMgZnJvbSAnLi9fc3RhY2tIYXMuanMnO1xuaW1wb3J0IHN0YWNrU2V0IGZyb20gJy4vX3N0YWNrU2V0LmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgc3RhY2sgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIGtleS12YWx1ZSBwYWlycy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU3RhY2soZW50cmllcykge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKGVudHJpZXMpO1xuICB0aGlzLnNpemUgPSBkYXRhLnNpemU7XG59XG5cbi8vIEFkZCBtZXRob2RzIHRvIGBTdGFja2AuXG5TdGFjay5wcm90b3R5cGUuY2xlYXIgPSBzdGFja0NsZWFyO1xuU3RhY2sucHJvdG90eXBlWydkZWxldGUnXSA9IHN0YWNrRGVsZXRlO1xuU3RhY2sucHJvdG90eXBlLmdldCA9IHN0YWNrR2V0O1xuU3RhY2sucHJvdG90eXBlLmhhcyA9IHN0YWNrSGFzO1xuU3RhY2sucHJvdG90eXBlLnNldCA9IHN0YWNrU2V0O1xuXG5leHBvcnQgZGVmYXVsdCBTdGFjaztcbiIsIi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLmZvckVhY2hgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvclxuICogaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyBgYXJyYXlgLlxuICovXG5mdW5jdGlvbiBhcnJheUVhY2goYXJyYXksIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBpZiAoaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpID09PSBmYWxzZSkge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBhcnJheTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXJyYXlFYWNoO1xuIiwiaW1wb3J0IGdldE5hdGl2ZSBmcm9tICcuL19nZXROYXRpdmUuanMnO1xuXG52YXIgZGVmaW5lUHJvcGVydHkgPSAoZnVuY3Rpb24oKSB7XG4gIHRyeSB7XG4gICAgdmFyIGZ1bmMgPSBnZXROYXRpdmUoT2JqZWN0LCAnZGVmaW5lUHJvcGVydHknKTtcbiAgICBmdW5jKHt9LCAnJywge30pO1xuICAgIHJldHVybiBmdW5jO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lUHJvcGVydHk7XG4iLCJpbXBvcnQgZGVmaW5lUHJvcGVydHkgZnJvbSAnLi9fZGVmaW5lUHJvcGVydHkuanMnO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBhc3NpZ25WYWx1ZWAgYW5kIGBhc3NpZ25NZXJnZVZhbHVlYCB3aXRob3V0XG4gKiB2YWx1ZSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBtb2RpZnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHByb3BlcnR5IHRvIGFzc2lnbi5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGFzc2lnbi5cbiAqL1xuZnVuY3Rpb24gYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBpZiAoa2V5ID09ICdfX3Byb3RvX18nICYmIGRlZmluZVByb3BlcnR5KSB7XG4gICAgZGVmaW5lUHJvcGVydHkob2JqZWN0LCBrZXksIHtcbiAgICAgICdjb25maWd1cmFibGUnOiB0cnVlLFxuICAgICAgJ2VudW1lcmFibGUnOiB0cnVlLFxuICAgICAgJ3ZhbHVlJzogdmFsdWUsXG4gICAgICAnd3JpdGFibGUnOiB0cnVlXG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlQXNzaWduVmFsdWU7XG4iLCJpbXBvcnQgYmFzZUFzc2lnblZhbHVlIGZyb20gJy4vX2Jhc2VBc3NpZ25WYWx1ZS5qcyc7XG5pbXBvcnQgZXEgZnJvbSAnLi9lcS5qcyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogQXNzaWducyBgdmFsdWVgIHRvIGBrZXlgIG9mIGBvYmplY3RgIGlmIHRoZSBleGlzdGluZyB2YWx1ZSBpcyBub3QgZXF1aXZhbGVudFxuICogdXNpbmcgW2BTYW1lVmFsdWVaZXJvYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtc2FtZXZhbHVlemVybylcbiAqIGZvciBlcXVhbGl0eSBjb21wYXJpc29ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIG1vZGlmeS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gYXNzaWduLlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gYXNzaWduLlxuICovXG5mdW5jdGlvbiBhc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV07XG4gIGlmICghKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmIGVxKG9ialZhbHVlLCB2YWx1ZSkpIHx8XG4gICAgICAodmFsdWUgPT09IHVuZGVmaW5lZCAmJiAhKGtleSBpbiBvYmplY3QpKSkge1xuICAgIGJhc2VBc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFzc2lnblZhbHVlO1xuIiwiaW1wb3J0IGFzc2lnblZhbHVlIGZyb20gJy4vX2Fzc2lnblZhbHVlLmpzJztcbmltcG9ydCBiYXNlQXNzaWduVmFsdWUgZnJvbSAnLi9fYmFzZUFzc2lnblZhbHVlLmpzJztcblxuLyoqXG4gKiBDb3BpZXMgcHJvcGVydGllcyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgcHJvcGVydGllcyBmcm9tLlxuICogQHBhcmFtIHtBcnJheX0gcHJvcHMgVGhlIHByb3BlcnR5IGlkZW50aWZpZXJzIHRvIGNvcHkuXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdD17fV0gVGhlIG9iamVjdCB0byBjb3B5IHByb3BlcnRpZXMgdG8uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY3VzdG9taXplcl0gVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb3BpZWQgdmFsdWVzLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weU9iamVjdChzb3VyY2UsIHByb3BzLCBvYmplY3QsIGN1c3RvbWl6ZXIpIHtcbiAgdmFyIGlzTmV3ID0gIW9iamVjdDtcbiAgb2JqZWN0IHx8IChvYmplY3QgPSB7fSk7XG5cbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIga2V5ID0gcHJvcHNbaW5kZXhdO1xuXG4gICAgdmFyIG5ld1ZhbHVlID0gY3VzdG9taXplclxuICAgICAgPyBjdXN0b21pemVyKG9iamVjdFtrZXldLCBzb3VyY2Vba2V5XSwga2V5LCBvYmplY3QsIHNvdXJjZSlcbiAgICAgIDogdW5kZWZpbmVkO1xuXG4gICAgaWYgKG5ld1ZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgIG5ld1ZhbHVlID0gc291cmNlW2tleV07XG4gICAgfVxuICAgIGlmIChpc05ldykge1xuICAgICAgYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgfVxuICB9XG4gIHJldHVybiBvYmplY3Q7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvcHlPYmplY3Q7XG4iLCIvKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHNcbiAqIG9yIG1heCBhcnJheSBsZW5ndGggY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGludm9rZSBgaXRlcmF0ZWVgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRpbWVzKG4sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlVGltZXM7XG4iLCJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgYXJnc1RhZyA9ICdbb2JqZWN0IEFyZ3VtZW50c10nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzQXJndW1lbnRzYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0FyZ3VtZW50cyh2YWx1ZSkge1xuICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBhcmdzVGFnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlSXNBcmd1bWVudHM7XG4iLCJpbXBvcnQgYmFzZUlzQXJndW1lbnRzIGZyb20gJy4vX2Jhc2VJc0FyZ3VtZW50cy5qcyc7XG5pbXBvcnQgaXNPYmplY3RMaWtlIGZyb20gJy4vaXNPYmplY3RMaWtlLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgcHJvcGVydHlJc0VudW1lcmFibGUgPSBvYmplY3RQcm90by5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYW4gYGFyZ3VtZW50c2Agb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGBhcmd1bWVudHNgIG9iamVjdCxcbiAqICBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoZnVuY3Rpb24oKSB7IHJldHVybiBhcmd1bWVudHM7IH0oKSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FyZ3VtZW50cyhbMSwgMiwgM10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJndW1lbnRzID0gYmFzZUlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID8gYmFzZUlzQXJndW1lbnRzIDogZnVuY3Rpb24odmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgIXByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodmFsdWUsICdjYWxsZWUnKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGlzQXJndW1lbnRzO1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGFuIGBBcnJheWAgb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNBcnJheShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcnJheShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5KF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG52YXIgaXNBcnJheSA9IEFycmF5LmlzQXJyYXk7XG5cbmV4cG9ydCBkZWZhdWx0IGlzQXJyYXk7XG4iLCIvKipcbiAqIFRoaXMgbWV0aG9kIHJldHVybnMgYGZhbHNlYC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMTMuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udGltZXMoMiwgXy5zdHViRmFsc2UpO1xuICogLy8gPT4gW2ZhbHNlLCBmYWxzZV1cbiAqL1xuZnVuY3Rpb24gc3R1YkZhbHNlKCkge1xuICByZXR1cm4gZmFsc2U7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0dWJGYWxzZTtcbiIsImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuaW1wb3J0IHN0dWJGYWxzZSBmcm9tICcuL3N0dWJGYWxzZS5qcyc7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgZXhwb3J0c2AuICovXG52YXIgZnJlZUV4cG9ydHMgPSB0eXBlb2YgZXhwb3J0cyA9PSAnb2JqZWN0JyAmJiBleHBvcnRzICYmICFleHBvcnRzLm5vZGVUeXBlICYmIGV4cG9ydHM7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgbW9kdWxlYC4gKi9cbnZhciBmcmVlTW9kdWxlID0gZnJlZUV4cG9ydHMgJiYgdHlwZW9mIG1vZHVsZSA9PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYgIW1vZHVsZS5ub2RlVHlwZSAmJiBtb2R1bGU7XG5cbi8qKiBEZXRlY3QgdGhlIHBvcHVsYXIgQ29tbW9uSlMgZXh0ZW5zaW9uIGBtb2R1bGUuZXhwb3J0c2AuICovXG52YXIgbW9kdWxlRXhwb3J0cyA9IGZyZWVNb2R1bGUgJiYgZnJlZU1vZHVsZS5leHBvcnRzID09PSBmcmVlRXhwb3J0cztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgQnVmZmVyID0gbW9kdWxlRXhwb3J0cyA/IHJvb3QuQnVmZmVyIDogdW5kZWZpbmVkO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlSXNCdWZmZXIgPSBCdWZmZXIgPyBCdWZmZXIuaXNCdWZmZXIgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjMuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBidWZmZXIsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc0J1ZmZlcihuZXcgQnVmZmVyKDIpKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQnVmZmVyKG5ldyBVaW50OEFycmF5KDIpKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc0J1ZmZlciA9IG5hdGl2ZUlzQnVmZmVyIHx8IHN0dWJGYWxzZTtcblxuZXhwb3J0IGRlZmF1bHQgaXNCdWZmZXI7XG4iLCIvKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IHVuc2lnbmVkIGludGVnZXIgdmFsdWVzLiAqL1xudmFyIHJlSXNVaW50ID0gL14oPzowfFsxLTldXFxkKikkLztcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgaW5kZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHBhcmFtIHtudW1iZXJ9IFtsZW5ndGg9TUFYX1NBRkVfSU5URUdFUl0gVGhlIHVwcGVyIGJvdW5kcyBvZiBhIHZhbGlkIGluZGV4LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBpbmRleCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0luZGV4KHZhbHVlLCBsZW5ndGgpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcblxuICByZXR1cm4gISFsZW5ndGggJiZcbiAgICAodHlwZSA9PSAnbnVtYmVyJyB8fFxuICAgICAgKHR5cGUgIT0gJ3N5bWJvbCcgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpKSAmJlxuICAgICAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzSW5kZXg7XG4iLCIvKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGFycmF5LWxpa2UgbGVuZ3RoLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uXG4gKiBbYFRvTGVuZ3RoYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtdG9sZW5ndGgpLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgbGVuZ3RoLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNMZW5ndGgoMyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0xlbmd0aChOdW1iZXIuTUlOX1ZBTFVFKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0xlbmd0aChJbmZpbml0eSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoJzMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzTGVuZ3RoKHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gJ251bWJlcicgJiZcbiAgICB2YWx1ZSA+IC0xICYmIHZhbHVlICUgMSA9PSAwICYmIHZhbHVlIDw9IE1BWF9TQUZFX0lOVEVHRVI7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzTGVuZ3RoO1xuIiwiaW1wb3J0IGJhc2VHZXRUYWcgZnJvbSAnLi9fYmFzZUdldFRhZy5qcyc7XG5pbXBvcnQgaXNMZW5ndGggZnJvbSAnLi9pc0xlbmd0aC5qcyc7XG5pbXBvcnQgaXNPYmplY3RMaWtlIGZyb20gJy4vaXNPYmplY3RMaWtlLmpzJztcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLFxuICAgIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJyxcbiAgICBmbG9hdDMyVGFnID0gJ1tvYmplY3QgRmxvYXQzMkFycmF5XScsXG4gICAgZmxvYXQ2NFRhZyA9ICdbb2JqZWN0IEZsb2F0NjRBcnJheV0nLFxuICAgIGludDhUYWcgPSAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICBpbnQxNlRhZyA9ICdbb2JqZWN0IEludDE2QXJyYXldJyxcbiAgICBpbnQzMlRhZyA9ICdbb2JqZWN0IEludDMyQXJyYXldJyxcbiAgICB1aW50OFRhZyA9ICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICB1aW50OENsYW1wZWRUYWcgPSAnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxuICAgIHVpbnQxNlRhZyA9ICdbb2JqZWN0IFVpbnQxNkFycmF5XScsXG4gICAgdWludDMyVGFnID0gJ1tvYmplY3QgVWludDMyQXJyYXldJztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgb2YgdHlwZWQgYXJyYXlzLiAqL1xudmFyIHR5cGVkQXJyYXlUYWdzID0ge307XG50eXBlZEFycmF5VGFnc1tmbG9hdDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Zsb2F0NjRUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW2ludDMyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQ4VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50OENsYW1wZWRUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDE2VGFnXSA9XG50eXBlZEFycmF5VGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbnR5cGVkQXJyYXlUYWdzW2FyZ3NUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddID1cbnR5cGVkQXJyYXlUYWdzW2FycmF5QnVmZmVyVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Jvb2xUYWddID1cbnR5cGVkQXJyYXlUYWdzW2RhdGFWaWV3VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2RhdGVUYWddID1cbnR5cGVkQXJyYXlUYWdzW2Vycm9yVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddID1cbnR5cGVkQXJyYXlUYWdzW21hcFRhZ10gPSB0eXBlZEFycmF5VGFnc1tudW1iZXJUYWddID1cbnR5cGVkQXJyYXlUYWdzW29iamVjdFRhZ10gPSB0eXBlZEFycmF5VGFnc1tyZWdleHBUYWddID1cbnR5cGVkQXJyYXlUYWdzW3NldFRhZ10gPSB0eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddID1cbnR5cGVkQXJyYXlUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNUeXBlZEFycmF5YCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHR5cGVkIGFycmF5LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc1R5cGVkQXJyYXkodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiZcbiAgICBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICEhdHlwZWRBcnJheVRhZ3NbYmFzZUdldFRhZyh2YWx1ZSldO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlSXNUeXBlZEFycmF5O1xuIiwiLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy51bmFyeWAgd2l0aG91dCBzdXBwb3J0IGZvciBzdG9yaW5nIG1ldGFkYXRhLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBjYXAgYXJndW1lbnRzIGZvci5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IGNhcHBlZCBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZVVuYXJ5KGZ1bmMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlVW5hcnk7XG4iLCJpbXBvcnQgZnJlZUdsb2JhbCBmcm9tICcuL19mcmVlR2xvYmFsLmpzJztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBleHBvcnRzYC4gKi9cbnZhciBmcmVlRXhwb3J0cyA9IHR5cGVvZiBleHBvcnRzID09ICdvYmplY3QnICYmIGV4cG9ydHMgJiYgIWV4cG9ydHMubm9kZVR5cGUgJiYgZXhwb3J0cztcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBtb2R1bGVgLiAqL1xudmFyIGZyZWVNb2R1bGUgPSBmcmVlRXhwb3J0cyAmJiB0eXBlb2YgbW9kdWxlID09ICdvYmplY3QnICYmIG1vZHVsZSAmJiAhbW9kdWxlLm5vZGVUeXBlICYmIG1vZHVsZTtcblxuLyoqIERldGVjdCB0aGUgcG9wdWxhciBDb21tb25KUyBleHRlbnNpb24gYG1vZHVsZS5leHBvcnRzYC4gKi9cbnZhciBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHByb2Nlc3NgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzO1xuXG4vKiogVXNlZCB0byBhY2Nlc3MgZmFzdGVyIE5vZGUuanMgaGVscGVycy4gKi9cbnZhciBub2RlVXRpbCA9IChmdW5jdGlvbigpIHtcbiAgdHJ5IHtcbiAgICAvLyBVc2UgYHV0aWwudHlwZXNgIGZvciBOb2RlLmpzIDEwKy5cbiAgICB2YXIgdHlwZXMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUucmVxdWlyZSAmJiBmcmVlTW9kdWxlLnJlcXVpcmUoJ3V0aWwnKS50eXBlcztcblxuICAgIGlmICh0eXBlcykge1xuICAgICAgcmV0dXJuIHR5cGVzO1xuICAgIH1cblxuICAgIC8vIExlZ2FjeSBgcHJvY2Vzcy5iaW5kaW5nKCd1dGlsJylgIGZvciBOb2RlLmpzIDwgMTAuXG4gICAgcmV0dXJuIGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZygndXRpbCcpO1xuICB9IGNhdGNoIChlKSB7fVxufSgpKTtcblxuZXhwb3J0IGRlZmF1bHQgbm9kZVV0aWw7XG4iLCJpbXBvcnQgYmFzZUlzVHlwZWRBcnJheSBmcm9tICcuL19iYXNlSXNUeXBlZEFycmF5LmpzJztcbmltcG9ydCBiYXNlVW5hcnkgZnJvbSAnLi9fYmFzZVVuYXJ5LmpzJztcbmltcG9ydCBub2RlVXRpbCBmcm9tICcuL19ub2RlVXRpbC5qcyc7XG5cbi8qIE5vZGUuanMgaGVscGVyIHJlZmVyZW5jZXMuICovXG52YXIgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzVHlwZWRBcnJheTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBjbGFzc2lmaWVkIGFzIGEgdHlwZWQgYXJyYXkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAzLjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzVHlwZWRBcnJheShuZXcgVWludDhBcnJheSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkoW10pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzVHlwZWRBcnJheSA9IG5vZGVJc1R5cGVkQXJyYXkgPyBiYXNlVW5hcnkobm9kZUlzVHlwZWRBcnJheSkgOiBiYXNlSXNUeXBlZEFycmF5O1xuXG5leHBvcnQgZGVmYXVsdCBpc1R5cGVkQXJyYXk7XG4iLCJpbXBvcnQgYmFzZVRpbWVzIGZyb20gJy4vX2Jhc2VUaW1lcy5qcyc7XG5pbXBvcnQgaXNBcmd1bWVudHMgZnJvbSAnLi9pc0FyZ3VtZW50cy5qcyc7XG5pbXBvcnQgaXNBcnJheSBmcm9tICcuL2lzQXJyYXkuanMnO1xuaW1wb3J0IGlzQnVmZmVyIGZyb20gJy4vaXNCdWZmZXIuanMnO1xuaW1wb3J0IGlzSW5kZXggZnJvbSAnLi9faXNJbmRleC5qcyc7XG5pbXBvcnQgaXNUeXBlZEFycmF5IGZyb20gJy4vaXNUeXBlZEFycmF5LmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpLFxuICAgICAgaXNBcmcgPSAhaXNBcnIgJiYgaXNBcmd1bWVudHModmFsdWUpLFxuICAgICAgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksXG4gICAgICBpc1R5cGUgPSAhaXNBcnIgJiYgIWlzQXJnICYmICFpc0J1ZmYgJiYgaXNUeXBlZEFycmF5KHZhbHVlKSxcbiAgICAgIHNraXBJbmRleGVzID0gaXNBcnIgfHwgaXNBcmcgfHwgaXNCdWZmIHx8IGlzVHlwZSxcbiAgICAgIHJlc3VsdCA9IHNraXBJbmRleGVzID8gYmFzZVRpbWVzKHZhbHVlLmxlbmd0aCwgU3RyaW5nKSA6IFtdLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChcbiAgICAgICAgICAgLy8gU2FmYXJpIDkgaGFzIGVudW1lcmFibGUgYGFyZ3VtZW50cy5sZW5ndGhgIGluIHN0cmljdCBtb2RlLlxuICAgICAgICAgICBrZXkgPT0gJ2xlbmd0aCcgfHxcbiAgICAgICAgICAgLy8gTm9kZS5qcyAwLjEwIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIGJ1ZmZlcnMuXG4gICAgICAgICAgIChpc0J1ZmYgJiYgKGtleSA9PSAnb2Zmc2V0JyB8fCBrZXkgPT0gJ3BhcmVudCcpKSB8fFxuICAgICAgICAgICAvLyBQaGFudG9tSlMgMiBoYXMgZW51bWVyYWJsZSBub24taW5kZXggcHJvcGVydGllcyBvbiB0eXBlZCBhcnJheXMuXG4gICAgICAgICAgIChpc1R5cGUgJiYgKGtleSA9PSAnYnVmZmVyJyB8fCBrZXkgPT0gJ2J5dGVMZW5ndGgnIHx8IGtleSA9PSAnYnl0ZU9mZnNldCcpKSB8fFxuICAgICAgICAgICAvLyBTa2lwIGluZGV4IHByb3BlcnRpZXMuXG4gICAgICAgICAgIGlzSW5kZXgoa2V5LCBsZW5ndGgpXG4gICAgICAgICkpKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcnJheUxpa2VLZXlzO1xuIiwiLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBsaWtlbHkgYSBwcm90b3R5cGUgb2JqZWN0LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgcHJvdG90eXBlLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGlzUHJvdG90eXBlKHZhbHVlKSB7XG4gIHZhciBDdG9yID0gdmFsdWUgJiYgdmFsdWUuY29uc3RydWN0b3IsXG4gICAgICBwcm90byA9ICh0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmIEN0b3IucHJvdG90eXBlKSB8fCBvYmplY3RQcm90bztcblxuICByZXR1cm4gdmFsdWUgPT09IHByb3RvO1xufVxuXG5leHBvcnQgZGVmYXVsdCBpc1Byb3RvdHlwZTtcbiIsImltcG9ydCBvdmVyQXJnIGZyb20gJy4vX292ZXJBcmcuanMnO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlS2V5cyA9IG92ZXJBcmcoT2JqZWN0LmtleXMsIE9iamVjdCk7XG5cbmV4cG9ydCBkZWZhdWx0IG5hdGl2ZUtleXM7XG4iLCJpbXBvcnQgaXNQcm90b3R5cGUgZnJvbSAnLi9faXNQcm90b3R5cGUuanMnO1xuaW1wb3J0IG5hdGl2ZUtleXMgZnJvbSAnLi9fbmF0aXZlS2V5cy5qcyc7XG5cbi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8ua2V5c2Agd2hpY2ggZG9lc24ndCB0cmVhdCBzcGFyc2UgYXJyYXlzIGFzIGRlbnNlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICovXG5mdW5jdGlvbiBiYXNlS2V5cyhvYmplY3QpIHtcbiAgaWYgKCFpc1Byb3RvdHlwZShvYmplY3QpKSB7XG4gICAgcmV0dXJuIG5hdGl2ZUtleXMob2JqZWN0KTtcbiAgfVxuICB2YXIgcmVzdWx0ID0gW107XG4gIGZvciAodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSkge1xuICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSAmJiBrZXkgIT0gJ2NvbnN0cnVjdG9yJykge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUtleXM7XG4iLCJpbXBvcnQgaXNGdW5jdGlvbiBmcm9tICcuL2lzRnVuY3Rpb24uanMnO1xuaW1wb3J0IGlzTGVuZ3RoIGZyb20gJy4vaXNMZW5ndGguanMnO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UuIEEgdmFsdWUgaXMgY29uc2lkZXJlZCBhcnJheS1saWtlIGlmIGl0J3NcbiAqIG5vdCBhIGZ1bmN0aW9uIGFuZCBoYXMgYSBgdmFsdWUubGVuZ3RoYCB0aGF0J3MgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3JcbiAqIGVxdWFsIHRvIGAwYCBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUmAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKCdhYmMnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICFpc0Z1bmN0aW9uKHZhbHVlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNBcnJheUxpa2U7XG4iLCJpbXBvcnQgYXJyYXlMaWtlS2V5cyBmcm9tICcuL19hcnJheUxpa2VLZXlzLmpzJztcbmltcG9ydCBiYXNlS2V5cyBmcm9tICcuL19iYXNlS2V5cy5qcyc7XG5pbXBvcnQgaXNBcnJheUxpa2UgZnJvbSAnLi9pc0FycmF5TGlrZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgcHJvcGVydHkgbmFtZXMgb2YgYG9iamVjdGAuXG4gKlxuICogKipOb3RlOioqIE5vbi1vYmplY3QgdmFsdWVzIGFyZSBjb2VyY2VkIHRvIG9iamVjdHMuIFNlZSB0aGVcbiAqIFtFUyBzcGVjXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3Qua2V5cylcbiAqIGZvciBtb3JlIGRldGFpbHMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IE9iamVjdFxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogICB0aGlzLmIgPSAyO1xuICogfVxuICpcbiAqIEZvby5wcm90b3R5cGUuYyA9IDM7XG4gKlxuICogXy5rZXlzKG5ldyBGb28pO1xuICogLy8gPT4gWydhJywgJ2InXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICpcbiAqIF8ua2V5cygnaGknKTtcbiAqIC8vID0+IFsnMCcsICcxJ11cbiAqL1xuZnVuY3Rpb24ga2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCkgOiBiYXNlS2V5cyhvYmplY3QpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBrZXlzO1xuIiwiaW1wb3J0IGNvcHlPYmplY3QgZnJvbSAnLi9fY29weU9iamVjdC5qcyc7XG5pbXBvcnQga2V5cyBmcm9tICcuL2tleXMuanMnO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmFzc2lnbmAgd2l0aG91dCBzdXBwb3J0IGZvciBtdWx0aXBsZSBzb3VyY2VzXG4gKiBvciBgY3VzdG9taXplcmAgZnVuY3Rpb25zLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBkZXN0aW5hdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0ge09iamVjdH0gc291cmNlIFRoZSBzb3VyY2Ugb2JqZWN0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUFzc2lnbihvYmplY3QsIHNvdXJjZSkge1xuICByZXR1cm4gb2JqZWN0ICYmIGNvcHlPYmplY3Qoc291cmNlLCBrZXlzKHNvdXJjZSksIG9iamVjdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VBc3NpZ247XG4iLCIvKipcbiAqIFRoaXMgZnVuY3Rpb24gaXMgbGlrZVxuICogW2BPYmplY3Qua2V5c2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5rZXlzKVxuICogZXhjZXB0IHRoYXQgaXQgaW5jbHVkZXMgaW5oZXJpdGVkIGVudW1lcmFibGUgcHJvcGVydGllcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gbmF0aXZlS2V5c0luKG9iamVjdCkge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIGlmIChvYmplY3QgIT0gbnVsbCkge1xuICAgIGZvciAodmFyIGtleSBpbiBPYmplY3Qob2JqZWN0KSkge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbmF0aXZlS2V5c0luO1xuIiwiaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4vaXNPYmplY3QuanMnO1xuaW1wb3J0IGlzUHJvdG90eXBlIGZyb20gJy4vX2lzUHJvdG90eXBlLmpzJztcbmltcG9ydCBuYXRpdmVLZXlzSW4gZnJvbSAnLi9fbmF0aXZlS2V5c0luLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5rZXlzSW5gIHdoaWNoIGRvZXNuJ3QgdHJlYXQgc3BhcnNlIGFycmF5cyBhcyBkZW5zZS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYmFzZUtleXNJbihvYmplY3QpIHtcbiAgaWYgKCFpc09iamVjdChvYmplY3QpKSB7XG4gICAgcmV0dXJuIG5hdGl2ZUtleXNJbihvYmplY3QpO1xuICB9XG4gIHZhciBpc1Byb3RvID0gaXNQcm90b3R5cGUob2JqZWN0KSxcbiAgICAgIHJlc3VsdCA9IFtdO1xuXG4gIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcbiAgICBpZiAoIShrZXkgPT0gJ2NvbnN0cnVjdG9yJyAmJiAoaXNQcm90byB8fCAhaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSkpKSkge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUtleXNJbjtcbiIsImltcG9ydCBhcnJheUxpa2VLZXlzIGZyb20gJy4vX2FycmF5TGlrZUtleXMuanMnO1xuaW1wb3J0IGJhc2VLZXlzSW4gZnJvbSAnLi9fYmFzZUtleXNJbi5qcyc7XG5pbXBvcnQgaXNBcnJheUxpa2UgZnJvbSAnLi9pc0FycmF5TGlrZS5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGFuZCBpbmhlcml0ZWQgZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBvZiBgb2JqZWN0YC5cbiAqXG4gKiAqKk5vdGU6KiogTm9uLW9iamVjdCB2YWx1ZXMgYXJlIGNvZXJjZWQgdG8gb2JqZWN0cy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuMC4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzLlxuICogQGV4YW1wbGVcbiAqXG4gKiBmdW5jdGlvbiBGb28oKSB7XG4gKiAgIHRoaXMuYSA9IDE7XG4gKiAgIHRoaXMuYiA9IDI7XG4gKiB9XG4gKlxuICogRm9vLnByb3RvdHlwZS5jID0gMztcbiAqXG4gKiBfLmtleXNJbihuZXcgRm9vKTtcbiAqIC8vID0+IFsnYScsICdiJywgJ2MnXSAoaXRlcmF0aW9uIG9yZGVyIGlzIG5vdCBndWFyYW50ZWVkKVxuICovXG5mdW5jdGlvbiBrZXlzSW4ob2JqZWN0KSB7XG4gIHJldHVybiBpc0FycmF5TGlrZShvYmplY3QpID8gYXJyYXlMaWtlS2V5cyhvYmplY3QsIHRydWUpIDogYmFzZUtleXNJbihvYmplY3QpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBrZXlzSW47XG4iLCJpbXBvcnQgY29weU9iamVjdCBmcm9tICcuL19jb3B5T2JqZWN0LmpzJztcbmltcG9ydCBrZXlzSW4gZnJvbSAnLi9rZXlzSW4uanMnO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmFzc2lnbkluYCB3aXRob3V0IHN1cHBvcnQgZm9yIG11bHRpcGxlIHNvdXJjZXNcbiAqIG9yIGBjdXN0b21pemVyYCBmdW5jdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIGRlc3RpbmF0aW9uIG9iamVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIHNvdXJjZSBvYmplY3QuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIGBvYmplY3RgLlxuICovXG5mdW5jdGlvbiBiYXNlQXNzaWduSW4ob2JqZWN0LCBzb3VyY2UpIHtcbiAgcmV0dXJuIG9iamVjdCAmJiBjb3B5T2JqZWN0KHNvdXJjZSwga2V5c0luKHNvdXJjZSksIG9iamVjdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VBc3NpZ25JbjtcbiIsImltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyByb290LkJ1ZmZlciA6IHVuZGVmaW5lZCxcbiAgICBhbGxvY1Vuc2FmZSA9IEJ1ZmZlciA/IEJ1ZmZlci5hbGxvY1Vuc2FmZSA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgIGBidWZmZXJgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0J1ZmZlcn0gYnVmZmVyIFRoZSBidWZmZXIgdG8gY2xvbmUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpc0RlZXBdIFNwZWNpZnkgYSBkZWVwIGNsb25lLlxuICogQHJldHVybnMge0J1ZmZlcn0gUmV0dXJucyB0aGUgY2xvbmVkIGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gY2xvbmVCdWZmZXIoYnVmZmVyLCBpc0RlZXApIHtcbiAgaWYgKGlzRGVlcCkge1xuICAgIHJldHVybiBidWZmZXIuc2xpY2UoKTtcbiAgfVxuICB2YXIgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aCxcbiAgICAgIHJlc3VsdCA9IGFsbG9jVW5zYWZlID8gYWxsb2NVbnNhZmUobGVuZ3RoKSA6IG5ldyBidWZmZXIuY29uc3RydWN0b3IobGVuZ3RoKTtcblxuICBidWZmZXIuY29weShyZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZUJ1ZmZlcjtcbiIsIi8qKlxuICogQ29waWVzIHRoZSB2YWx1ZXMgb2YgYHNvdXJjZWAgdG8gYGFycmF5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gc291cmNlIFRoZSBhcnJheSB0byBjb3B5IHZhbHVlcyBmcm9tLlxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5PVtdXSBUaGUgYXJyYXkgdG8gY29weSB2YWx1ZXMgdG8uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgYGFycmF5YC5cbiAqL1xuZnVuY3Rpb24gY29weUFycmF5KHNvdXJjZSwgYXJyYXkpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBzb3VyY2UubGVuZ3RoO1xuXG4gIGFycmF5IHx8IChhcnJheSA9IEFycmF5KGxlbmd0aCkpO1xuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGFycmF5W2luZGV4XSA9IHNvdXJjZVtpbmRleF07XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb3B5QXJyYXk7XG4iLCIvKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgXy5maWx0ZXJgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvclxuICogaXRlcmF0ZWUgc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBmaWx0ZXJlZCBhcnJheS5cbiAqL1xuZnVuY3Rpb24gYXJyYXlGaWx0ZXIoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoLFxuICAgICAgcmVzSW5kZXggPSAwLFxuICAgICAgcmVzdWx0ID0gW107XG5cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgaWYgKHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGFycmF5KSkge1xuICAgICAgcmVzdWx0W3Jlc0luZGV4KytdID0gdmFsdWU7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGFycmF5RmlsdGVyO1xuIiwiLyoqXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIGEgbmV3IGVtcHR5IGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4xMy4wXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgZW1wdHkgYXJyYXkuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBhcnJheXMgPSBfLnRpbWVzKDIsIF8uc3R1YkFycmF5KTtcbiAqXG4gKiBjb25zb2xlLmxvZyhhcnJheXMpO1xuICogLy8gPT4gW1tdLCBbXV1cbiAqXG4gKiBjb25zb2xlLmxvZyhhcnJheXNbMF0gPT09IGFycmF5c1sxXSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBzdHViQXJyYXkoKSB7XG4gIHJldHVybiBbXTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc3R1YkFycmF5O1xuIiwiaW1wb3J0IGFycmF5RmlsdGVyIGZyb20gJy4vX2FycmF5RmlsdGVyLmpzJztcbmltcG9ydCBzdHViQXJyYXkgZnJvbSAnLi9zdHViQXJyYXkuanMnO1xuXG4vKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlR2V0U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGVudW1lcmFibGUgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBzeW1ib2xzLlxuICovXG52YXIgZ2V0U3ltYm9scyA9ICFuYXRpdmVHZXRTeW1ib2xzID8gc3R1YkFycmF5IDogZnVuY3Rpb24ob2JqZWN0KSB7XG4gIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgIHJldHVybiBbXTtcbiAgfVxuICBvYmplY3QgPSBPYmplY3Qob2JqZWN0KTtcbiAgcmV0dXJuIGFycmF5RmlsdGVyKG5hdGl2ZUdldFN5bWJvbHMob2JqZWN0KSwgZnVuY3Rpb24oc3ltYm9sKSB7XG4gICAgcmV0dXJuIHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCBzeW1ib2wpO1xuICB9KTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGdldFN5bWJvbHM7XG4iLCJpbXBvcnQgY29weU9iamVjdCBmcm9tICcuL19jb3B5T2JqZWN0LmpzJztcbmltcG9ydCBnZXRTeW1ib2xzIGZyb20gJy4vX2dldFN5bWJvbHMuanMnO1xuXG4vKipcbiAqIENvcGllcyBvd24gc3ltYm9scyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyBmcm9tLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3Q9e31dIFRoZSBvYmplY3QgdG8gY29weSBzeW1ib2xzIHRvLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weVN5bWJvbHMoc291cmNlLCBvYmplY3QpIHtcbiAgcmV0dXJuIGNvcHlPYmplY3Qoc291cmNlLCBnZXRTeW1ib2xzKHNvdXJjZSksIG9iamVjdCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNvcHlTeW1ib2xzO1xuIiwiLyoqXG4gKiBBcHBlbmRzIHRoZSBlbGVtZW50cyBvZiBgdmFsdWVzYCB0byBgYXJyYXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fSBhcnJheSBUaGUgYXJyYXkgdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtBcnJheX0gdmFsdWVzIFRoZSB2YWx1ZXMgdG8gYXBwZW5kLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGFycmF5UHVzaChhcnJheSwgdmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzLmxlbmd0aCxcbiAgICAgIG9mZnNldCA9IGFycmF5Lmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGFycmF5W29mZnNldCArIGluZGV4XSA9IHZhbHVlc1tpbmRleF07XG4gIH1cbiAgcmV0dXJuIGFycmF5O1xufVxuXG5leHBvcnQgZGVmYXVsdCBhcnJheVB1c2g7XG4iLCJpbXBvcnQgYXJyYXlQdXNoIGZyb20gJy4vX2FycmF5UHVzaC5qcyc7XG5pbXBvcnQgZ2V0UHJvdG90eXBlIGZyb20gJy4vX2dldFByb3RvdHlwZS5qcyc7XG5pbXBvcnQgZ2V0U3ltYm9scyBmcm9tICcuL19nZXRTeW1ib2xzLmpzJztcbmltcG9ydCBzdHViQXJyYXkgZnJvbSAnLi9zdHViQXJyYXkuanMnO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlR2V0U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiB0aGUgb3duIGFuZCBpbmhlcml0ZWQgZW51bWVyYWJsZSBzeW1ib2xzIG9mIGBvYmplY3RgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHN5bWJvbHMuXG4gKi9cbnZhciBnZXRTeW1ib2xzSW4gPSAhbmF0aXZlR2V0U3ltYm9scyA/IHN0dWJBcnJheSA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHdoaWxlIChvYmplY3QpIHtcbiAgICBhcnJheVB1c2gocmVzdWx0LCBnZXRTeW1ib2xzKG9iamVjdCkpO1xuICAgIG9iamVjdCA9IGdldFByb3RvdHlwZShvYmplY3QpO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBnZXRTeW1ib2xzSW47XG4iLCJpbXBvcnQgY29weU9iamVjdCBmcm9tICcuL19jb3B5T2JqZWN0LmpzJztcbmltcG9ydCBnZXRTeW1ib2xzSW4gZnJvbSAnLi9fZ2V0U3ltYm9sc0luLmpzJztcblxuLyoqXG4gKiBDb3BpZXMgb3duIGFuZCBpbmhlcml0ZWQgc3ltYm9scyBvZiBgc291cmNlYCB0byBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHNvdXJjZSBUaGUgb2JqZWN0IHRvIGNvcHkgc3ltYm9scyBmcm9tLlxuICogQHBhcmFtIHtPYmplY3R9IFtvYmplY3Q9e31dIFRoZSBvYmplY3QgdG8gY29weSBzeW1ib2xzIHRvLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gY29weVN5bWJvbHNJbihzb3VyY2UsIG9iamVjdCkge1xuICByZXR1cm4gY29weU9iamVjdChzb3VyY2UsIGdldFN5bWJvbHNJbihzb3VyY2UpLCBvYmplY3QpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjb3B5U3ltYm9sc0luO1xuIiwiaW1wb3J0IGFycmF5UHVzaCBmcm9tICcuL19hcnJheVB1c2guanMnO1xuaW1wb3J0IGlzQXJyYXkgZnJvbSAnLi9pc0FycmF5LmpzJztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgZ2V0QWxsS2V5c2AgYW5kIGBnZXRBbGxLZXlzSW5gIHdoaWNoIHVzZXNcbiAqIGBrZXlzRnVuY2AgYW5kIGBzeW1ib2xzRnVuY2AgdG8gZ2V0IHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZFxuICogc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtGdW5jdGlvbn0ga2V5c0Z1bmMgVGhlIGZ1bmN0aW9uIHRvIGdldCB0aGUga2V5cyBvZiBgb2JqZWN0YC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IHN5bWJvbHNGdW5jIFRoZSBmdW5jdGlvbiB0byBnZXQgdGhlIHN5bWJvbHMgb2YgYG9iamVjdGAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIGFycmF5IG9mIHByb3BlcnR5IG5hbWVzIGFuZCBzeW1ib2xzLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXNGdW5jLCBzeW1ib2xzRnVuYykge1xuICB2YXIgcmVzdWx0ID0ga2V5c0Z1bmMob2JqZWN0KTtcbiAgcmV0dXJuIGlzQXJyYXkob2JqZWN0KSA/IHJlc3VsdCA6IGFycmF5UHVzaChyZXN1bHQsIHN5bWJvbHNGdW5jKG9iamVjdCkpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlR2V0QWxsS2V5cztcbiIsImltcG9ydCBiYXNlR2V0QWxsS2V5cyBmcm9tICcuL19iYXNlR2V0QWxsS2V5cy5qcyc7XG5pbXBvcnQgZ2V0U3ltYm9scyBmcm9tICcuL19nZXRTeW1ib2xzLmpzJztcbmltcG9ydCBrZXlzIGZyb20gJy4va2V5cy5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gZW51bWVyYWJsZSBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gZ2V0QWxsS2V5cyhvYmplY3QpIHtcbiAgcmV0dXJuIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5cywgZ2V0U3ltYm9scyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldEFsbEtleXM7XG4iLCJpbXBvcnQgYmFzZUdldEFsbEtleXMgZnJvbSAnLi9fYmFzZUdldEFsbEtleXMuanMnO1xuaW1wb3J0IGdldFN5bWJvbHNJbiBmcm9tICcuL19nZXRTeW1ib2xzSW4uanMnO1xuaW1wb3J0IGtleXNJbiBmcm9tICcuL2tleXNJbi5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBhcnJheSBvZiBvd24gYW5kIGluaGVyaXRlZCBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIGFuZFxuICogc3ltYm9scyBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcyBhbmQgc3ltYm9scy5cbiAqL1xuZnVuY3Rpb24gZ2V0QWxsS2V5c0luKG9iamVjdCkge1xuICByZXR1cm4gYmFzZUdldEFsbEtleXMob2JqZWN0LCBrZXlzSW4sIGdldFN5bWJvbHNJbik7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldEFsbEtleXNJbjtcbiIsImltcG9ydCBnZXROYXRpdmUgZnJvbSAnLi9fZ2V0TmF0aXZlLmpzJztcbmltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgRGF0YVZpZXcgPSBnZXROYXRpdmUocm9vdCwgJ0RhdGFWaWV3Jyk7XG5cbmV4cG9ydCBkZWZhdWx0IERhdGFWaWV3O1xuIiwiaW1wb3J0IGdldE5hdGl2ZSBmcm9tICcuL19nZXROYXRpdmUuanMnO1xuaW1wb3J0IHJvb3QgZnJvbSAnLi9fcm9vdC5qcyc7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBQcm9taXNlID0gZ2V0TmF0aXZlKHJvb3QsICdQcm9taXNlJyk7XG5cbmV4cG9ydCBkZWZhdWx0IFByb21pc2U7XG4iLCJpbXBvcnQgZ2V0TmF0aXZlIGZyb20gJy4vX2dldE5hdGl2ZS5qcyc7XG5pbXBvcnQgcm9vdCBmcm9tICcuL19yb290LmpzJztcblxuLyogQnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMgdGhhdCBhcmUgdmVyaWZpZWQgdG8gYmUgbmF0aXZlLiAqL1xudmFyIFNldCA9IGdldE5hdGl2ZShyb290LCAnU2V0Jyk7XG5cbmV4cG9ydCBkZWZhdWx0IFNldDtcbiIsImltcG9ydCBnZXROYXRpdmUgZnJvbSAnLi9fZ2V0TmF0aXZlLmpzJztcbmltcG9ydCByb290IGZyb20gJy4vX3Jvb3QuanMnO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyB0aGF0IGFyZSB2ZXJpZmllZCB0byBiZSBuYXRpdmUuICovXG52YXIgV2Vha01hcCA9IGdldE5hdGl2ZShyb290LCAnV2Vha01hcCcpO1xuXG5leHBvcnQgZGVmYXVsdCBXZWFrTWFwO1xuIiwiaW1wb3J0IERhdGFWaWV3IGZyb20gJy4vX0RhdGFWaWV3LmpzJztcbmltcG9ydCBNYXAgZnJvbSAnLi9fTWFwLmpzJztcbmltcG9ydCBQcm9taXNlIGZyb20gJy4vX1Byb21pc2UuanMnO1xuaW1wb3J0IFNldCBmcm9tICcuL19TZXQuanMnO1xuaW1wb3J0IFdlYWtNYXAgZnJvbSAnLi9fV2Vha01hcC5qcyc7XG5pbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCB0b1NvdXJjZSBmcm9tICcuL190b1NvdXJjZS5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICBwcm9taXNlVGFnID0gJ1tvYmplY3QgUHJvbWlzZV0nLFxuICAgIHNldFRhZyA9ICdbb2JqZWN0IFNldF0nLFxuICAgIHdlYWtNYXBUYWcgPSAnW29iamVjdCBXZWFrTWFwXSc7XG5cbnZhciBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XSc7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtYXBzLCBzZXRzLCBhbmQgd2Vha21hcHMuICovXG52YXIgZGF0YVZpZXdDdG9yU3RyaW5nID0gdG9Tb3VyY2UoRGF0YVZpZXcpLFxuICAgIG1hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShNYXApLFxuICAgIHByb21pc2VDdG9yU3RyaW5nID0gdG9Tb3VyY2UoUHJvbWlzZSksXG4gICAgc2V0Q3RvclN0cmluZyA9IHRvU291cmNlKFNldCksXG4gICAgd2Vha01hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShXZWFrTWFwKTtcblxuLyoqXG4gKiBHZXRzIHRoZSBgdG9TdHJpbmdUYWdgIG9mIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgYHRvU3RyaW5nVGFnYC5cbiAqL1xudmFyIGdldFRhZyA9IGJhc2VHZXRUYWc7XG5cbi8vIEZhbGxiYWNrIGZvciBkYXRhIHZpZXdzLCBtYXBzLCBzZXRzLCBhbmQgd2VhayBtYXBzIGluIElFIDExIGFuZCBwcm9taXNlcyBpbiBOb2RlLmpzIDwgNi5cbmlmICgoRGF0YVZpZXcgJiYgZ2V0VGFnKG5ldyBEYXRhVmlldyhuZXcgQXJyYXlCdWZmZXIoMSkpKSAhPSBkYXRhVmlld1RhZykgfHxcbiAgICAoTWFwICYmIGdldFRhZyhuZXcgTWFwKSAhPSBtYXBUYWcpIHx8XG4gICAgKFByb21pc2UgJiYgZ2V0VGFnKFByb21pc2UucmVzb2x2ZSgpKSAhPSBwcm9taXNlVGFnKSB8fFxuICAgIChTZXQgJiYgZ2V0VGFnKG5ldyBTZXQpICE9IHNldFRhZykgfHxcbiAgICAoV2Vha01hcCAmJiBnZXRUYWcobmV3IFdlYWtNYXApICE9IHdlYWtNYXBUYWcpKSB7XG4gIGdldFRhZyA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgdmFyIHJlc3VsdCA9IGJhc2VHZXRUYWcodmFsdWUpLFxuICAgICAgICBDdG9yID0gcmVzdWx0ID09IG9iamVjdFRhZyA/IHZhbHVlLmNvbnN0cnVjdG9yIDogdW5kZWZpbmVkLFxuICAgICAgICBjdG9yU3RyaW5nID0gQ3RvciA/IHRvU291cmNlKEN0b3IpIDogJyc7XG5cbiAgICBpZiAoY3RvclN0cmluZykge1xuICAgICAgc3dpdGNoIChjdG9yU3RyaW5nKSB7XG4gICAgICAgIGNhc2UgZGF0YVZpZXdDdG9yU3RyaW5nOiByZXR1cm4gZGF0YVZpZXdUYWc7XG4gICAgICAgIGNhc2UgbWFwQ3RvclN0cmluZzogcmV0dXJuIG1hcFRhZztcbiAgICAgICAgY2FzZSBwcm9taXNlQ3RvclN0cmluZzogcmV0dXJuIHByb21pc2VUYWc7XG4gICAgICAgIGNhc2Ugc2V0Q3RvclN0cmluZzogcmV0dXJuIHNldFRhZztcbiAgICAgICAgY2FzZSB3ZWFrTWFwQ3RvclN0cmluZzogcmV0dXJuIHdlYWtNYXBUYWc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbmV4cG9ydCBkZWZhdWx0IGdldFRhZztcbiIsIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKlxuICogSW5pdGlhbGl6ZXMgYW4gYXJyYXkgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgaW5pdGlhbGl6ZWQgY2xvbmUuXG4gKi9cbmZ1bmN0aW9uIGluaXRDbG9uZUFycmF5KGFycmF5KSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGgsXG4gICAgICByZXN1bHQgPSBuZXcgYXJyYXkuY29uc3RydWN0b3IobGVuZ3RoKTtcblxuICAvLyBBZGQgcHJvcGVydGllcyBhc3NpZ25lZCBieSBgUmVnRXhwI2V4ZWNgLlxuICBpZiAobGVuZ3RoICYmIHR5cGVvZiBhcnJheVswXSA9PSAnc3RyaW5nJyAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGFycmF5LCAnaW5kZXgnKSkge1xuICAgIHJlc3VsdC5pbmRleCA9IGFycmF5LmluZGV4O1xuICAgIHJlc3VsdC5pbnB1dCA9IGFycmF5LmlucHV0O1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGluaXRDbG9uZUFycmF5O1xuIiwiaW1wb3J0IHJvb3QgZnJvbSAnLi9fcm9vdC5qcyc7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIFVpbnQ4QXJyYXkgPSByb290LlVpbnQ4QXJyYXk7XG5cbmV4cG9ydCBkZWZhdWx0IFVpbnQ4QXJyYXk7XG4iLCJpbXBvcnQgVWludDhBcnJheSBmcm9tICcuL19VaW50OEFycmF5LmpzJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYGFycmF5QnVmZmVyYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheUJ1ZmZlcn0gYXJyYXlCdWZmZXIgVGhlIGFycmF5IGJ1ZmZlciB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtBcnJheUJ1ZmZlcn0gUmV0dXJucyB0aGUgY2xvbmVkIGFycmF5IGJ1ZmZlci5cbiAqL1xuZnVuY3Rpb24gY2xvbmVBcnJheUJ1ZmZlcihhcnJheUJ1ZmZlcikge1xuICB2YXIgcmVzdWx0ID0gbmV3IGFycmF5QnVmZmVyLmNvbnN0cnVjdG9yKGFycmF5QnVmZmVyLmJ5dGVMZW5ndGgpO1xuICBuZXcgVWludDhBcnJheShyZXN1bHQpLnNldChuZXcgVWludDhBcnJheShhcnJheUJ1ZmZlcikpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZUFycmF5QnVmZmVyO1xuIiwiaW1wb3J0IGNsb25lQXJyYXlCdWZmZXIgZnJvbSAnLi9fY2xvbmVBcnJheUJ1ZmZlci5qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIGBkYXRhVmlld2AuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBkYXRhVmlldyBUaGUgZGF0YSB2aWV3IHRvIGNsb25lLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCBkYXRhIHZpZXcuXG4gKi9cbmZ1bmN0aW9uIGNsb25lRGF0YVZpZXcoZGF0YVZpZXcsIGlzRGVlcCkge1xuICB2YXIgYnVmZmVyID0gaXNEZWVwID8gY2xvbmVBcnJheUJ1ZmZlcihkYXRhVmlldy5idWZmZXIpIDogZGF0YVZpZXcuYnVmZmVyO1xuICByZXR1cm4gbmV3IGRhdGFWaWV3LmNvbnN0cnVjdG9yKGJ1ZmZlciwgZGF0YVZpZXcuYnl0ZU9mZnNldCwgZGF0YVZpZXcuYnl0ZUxlbmd0aCk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsb25lRGF0YVZpZXc7XG4iLCIvKiogVXNlZCB0byBtYXRjaCBgUmVnRXhwYCBmbGFncyBmcm9tIHRoZWlyIGNvZXJjZWQgc3RyaW5nIHZhbHVlcy4gKi9cbnZhciByZUZsYWdzID0gL1xcdyokLztcblxuLyoqXG4gKiBDcmVhdGVzIGEgY2xvbmUgb2YgYHJlZ2V4cGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSByZWdleHAgVGhlIHJlZ2V4cCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNsb25lZCByZWdleHAuXG4gKi9cbmZ1bmN0aW9uIGNsb25lUmVnRXhwKHJlZ2V4cCkge1xuICB2YXIgcmVzdWx0ID0gbmV3IHJlZ2V4cC5jb25zdHJ1Y3RvcihyZWdleHAuc291cmNlLCByZUZsYWdzLmV4ZWMocmVnZXhwKSk7XG4gIHJlc3VsdC5sYXN0SW5kZXggPSByZWdleHAubGFzdEluZGV4O1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZVJlZ0V4cDtcbiIsImltcG9ydCBTeW1ib2wgZnJvbSAnLi9fU3ltYm9sLmpzJztcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFZhbHVlT2YgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnZhbHVlT2YgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNsb25lIG9mIHRoZSBgc3ltYm9sYCBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzeW1ib2wgVGhlIHN5bWJvbCBvYmplY3QgdG8gY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgc3ltYm9sIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gY2xvbmVTeW1ib2woc3ltYm9sKSB7XG4gIHJldHVybiBzeW1ib2xWYWx1ZU9mID8gT2JqZWN0KHN5bWJvbFZhbHVlT2YuY2FsbChzeW1ib2wpKSA6IHt9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZVN5bWJvbDtcbiIsImltcG9ydCBjbG9uZUFycmF5QnVmZmVyIGZyb20gJy4vX2Nsb25lQXJyYXlCdWZmZXIuanMnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjbG9uZSBvZiBgdHlwZWRBcnJheWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSB0eXBlZEFycmF5IFRoZSB0eXBlZCBhcnJheSB0byBjbG9uZS5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2lzRGVlcF0gU3BlY2lmeSBhIGRlZXAgY2xvbmUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjbG9uZWQgdHlwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh0eXBlZEFycmF5LCBpc0RlZXApIHtcbiAgdmFyIGJ1ZmZlciA9IGlzRGVlcCA/IGNsb25lQXJyYXlCdWZmZXIodHlwZWRBcnJheS5idWZmZXIpIDogdHlwZWRBcnJheS5idWZmZXI7XG4gIHJldHVybiBuZXcgdHlwZWRBcnJheS5jb25zdHJ1Y3RvcihidWZmZXIsIHR5cGVkQXJyYXkuYnl0ZU9mZnNldCwgdHlwZWRBcnJheS5sZW5ndGgpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZVR5cGVkQXJyYXk7XG4iLCJpbXBvcnQgY2xvbmVBcnJheUJ1ZmZlciBmcm9tICcuL19jbG9uZUFycmF5QnVmZmVyLmpzJztcbmltcG9ydCBjbG9uZURhdGFWaWV3IGZyb20gJy4vX2Nsb25lRGF0YVZpZXcuanMnO1xuaW1wb3J0IGNsb25lUmVnRXhwIGZyb20gJy4vX2Nsb25lUmVnRXhwLmpzJztcbmltcG9ydCBjbG9uZVN5bWJvbCBmcm9tICcuL19jbG9uZVN5bWJvbC5qcyc7XG5pbXBvcnQgY2xvbmVUeXBlZEFycmF5IGZyb20gJy4vX2Nsb25lVHlwZWRBcnJheS5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBib29sVGFnID0gJ1tvYmplY3QgQm9vbGVhbl0nLFxuICAgIGRhdGVUYWcgPSAnW29iamVjdCBEYXRlXScsXG4gICAgbWFwVGFnID0gJ1tvYmplY3QgTWFwXScsXG4gICAgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbnZhciBhcnJheUJ1ZmZlclRhZyA9ICdbb2JqZWN0IEFycmF5QnVmZmVyXScsXG4gICAgZGF0YVZpZXdUYWcgPSAnW29iamVjdCBEYXRhVmlld10nLFxuICAgIGZsb2F0MzJUYWcgPSAnW29iamVjdCBGbG9hdDMyQXJyYXldJyxcbiAgICBmbG9hdDY0VGFnID0gJ1tvYmplY3QgRmxvYXQ2NEFycmF5XScsXG4gICAgaW50OFRhZyA9ICdbb2JqZWN0IEludDhBcnJheV0nLFxuICAgIGludDE2VGFnID0gJ1tvYmplY3QgSW50MTZBcnJheV0nLFxuICAgIGludDMyVGFnID0gJ1tvYmplY3QgSW50MzJBcnJheV0nLFxuICAgIHVpbnQ4VGFnID0gJ1tvYmplY3QgVWludDhBcnJheV0nLFxuICAgIHVpbnQ4Q2xhbXBlZFRhZyA9ICdbb2JqZWN0IFVpbnQ4Q2xhbXBlZEFycmF5XScsXG4gICAgdWludDE2VGFnID0gJ1tvYmplY3QgVWludDE2QXJyYXldJyxcbiAgICB1aW50MzJUYWcgPSAnW29iamVjdCBVaW50MzJBcnJheV0nO1xuXG4vKipcbiAqIEluaXRpYWxpemVzIGFuIG9iamVjdCBjbG9uZSBiYXNlZCBvbiBpdHMgYHRvU3RyaW5nVGFnYC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBmdW5jdGlvbiBvbmx5IHN1cHBvcnRzIGNsb25pbmcgdmFsdWVzIHdpdGggdGFncyBvZlxuICogYEJvb2xlYW5gLCBgRGF0ZWAsIGBFcnJvcmAsIGBNYXBgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIGBTZXRgLCBvciBgU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNsb25lLlxuICogQHBhcmFtIHtzdHJpbmd9IHRhZyBUaGUgYHRvU3RyaW5nVGFnYCBvZiB0aGUgb2JqZWN0IHRvIGNsb25lLlxuICogQHBhcmFtIHtib29sZWFufSBbaXNEZWVwXSBTcGVjaWZ5IGEgZGVlcCBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxuICovXG5mdW5jdGlvbiBpbml0Q2xvbmVCeVRhZyhvYmplY3QsIHRhZywgaXNEZWVwKSB7XG4gIHZhciBDdG9yID0gb2JqZWN0LmNvbnN0cnVjdG9yO1xuICBzd2l0Y2ggKHRhZykge1xuICAgIGNhc2UgYXJyYXlCdWZmZXJUYWc6XG4gICAgICByZXR1cm4gY2xvbmVBcnJheUJ1ZmZlcihvYmplY3QpO1xuXG4gICAgY2FzZSBib29sVGFnOlxuICAgIGNhc2UgZGF0ZVRhZzpcbiAgICAgIHJldHVybiBuZXcgQ3Rvcigrb2JqZWN0KTtcblxuICAgIGNhc2UgZGF0YVZpZXdUYWc6XG4gICAgICByZXR1cm4gY2xvbmVEYXRhVmlldyhvYmplY3QsIGlzRGVlcCk7XG5cbiAgICBjYXNlIGZsb2F0MzJUYWc6IGNhc2UgZmxvYXQ2NFRhZzpcbiAgICBjYXNlIGludDhUYWc6IGNhc2UgaW50MTZUYWc6IGNhc2UgaW50MzJUYWc6XG4gICAgY2FzZSB1aW50OFRhZzogY2FzZSB1aW50OENsYW1wZWRUYWc6IGNhc2UgdWludDE2VGFnOiBjYXNlIHVpbnQzMlRhZzpcbiAgICAgIHJldHVybiBjbG9uZVR5cGVkQXJyYXkob2JqZWN0LCBpc0RlZXApO1xuXG4gICAgY2FzZSBtYXBUYWc6XG4gICAgICByZXR1cm4gbmV3IEN0b3I7XG5cbiAgICBjYXNlIG51bWJlclRhZzpcbiAgICBjYXNlIHN0cmluZ1RhZzpcbiAgICAgIHJldHVybiBuZXcgQ3RvcihvYmplY3QpO1xuXG4gICAgY2FzZSByZWdleHBUYWc6XG4gICAgICByZXR1cm4gY2xvbmVSZWdFeHAob2JqZWN0KTtcblxuICAgIGNhc2Ugc2V0VGFnOlxuICAgICAgcmV0dXJuIG5ldyBDdG9yO1xuXG4gICAgY2FzZSBzeW1ib2xUYWc6XG4gICAgICByZXR1cm4gY2xvbmVTeW1ib2wob2JqZWN0KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBpbml0Q2xvbmVCeVRhZztcbiIsImltcG9ydCBpc09iamVjdCBmcm9tICcuL2lzT2JqZWN0LmpzJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0Q3JlYXRlID0gT2JqZWN0LmNyZWF0ZTtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5jcmVhdGVgIHdpdGhvdXQgc3VwcG9ydCBmb3IgYXNzaWduaW5nXG4gKiBwcm9wZXJ0aWVzIHRvIHRoZSBjcmVhdGVkIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IHByb3RvIFRoZSBvYmplY3QgdG8gaW5oZXJpdCBmcm9tLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbmV3IG9iamVjdC5cbiAqL1xudmFyIGJhc2VDcmVhdGUgPSAoZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIG9iamVjdCgpIHt9XG4gIHJldHVybiBmdW5jdGlvbihwcm90bykge1xuICAgIGlmICghaXNPYmplY3QocHJvdG8pKSB7XG4gICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGlmIChvYmplY3RDcmVhdGUpIHtcbiAgICAgIHJldHVybiBvYmplY3RDcmVhdGUocHJvdG8pO1xuICAgIH1cbiAgICBvYmplY3QucHJvdG90eXBlID0gcHJvdG87XG4gICAgdmFyIHJlc3VsdCA9IG5ldyBvYmplY3Q7XG4gICAgb2JqZWN0LnByb3RvdHlwZSA9IHVuZGVmaW5lZDtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xufSgpKTtcblxuZXhwb3J0IGRlZmF1bHQgYmFzZUNyZWF0ZTtcbiIsImltcG9ydCBiYXNlQ3JlYXRlIGZyb20gJy4vX2Jhc2VDcmVhdGUuanMnO1xuaW1wb3J0IGdldFByb3RvdHlwZSBmcm9tICcuL19nZXRQcm90b3R5cGUuanMnO1xuaW1wb3J0IGlzUHJvdG90eXBlIGZyb20gJy4vX2lzUHJvdG90eXBlLmpzJztcblxuLyoqXG4gKiBJbml0aWFsaXplcyBhbiBvYmplY3QgY2xvbmUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjbG9uZS5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGluaXRpYWxpemVkIGNsb25lLlxuICovXG5mdW5jdGlvbiBpbml0Q2xvbmVPYmplY3Qob2JqZWN0KSB7XG4gIHJldHVybiAodHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PSAnZnVuY3Rpb24nICYmICFpc1Byb3RvdHlwZShvYmplY3QpKVxuICAgID8gYmFzZUNyZWF0ZShnZXRQcm90b3R5cGUob2JqZWN0KSlcbiAgICA6IHt9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBpbml0Q2xvbmVPYmplY3Q7XG4iLCJpbXBvcnQgZ2V0VGFnIGZyb20gJy4vX2dldFRhZy5qcyc7XG5pbXBvcnQgaXNPYmplY3RMaWtlIGZyb20gJy4vaXNPYmplY3RMaWtlLmpzJztcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzTWFwYCB3aXRob3V0IE5vZGUuanMgb3B0aW1pemF0aW9ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG1hcCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNNYXAodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgZ2V0VGFnKHZhbHVlKSA9PSBtYXBUYWc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGJhc2VJc01hcDtcbiIsImltcG9ydCBiYXNlSXNNYXAgZnJvbSAnLi9fYmFzZUlzTWFwLmpzJztcbmltcG9ydCBiYXNlVW5hcnkgZnJvbSAnLi9fYmFzZVVuYXJ5LmpzJztcbmltcG9ydCBub2RlVXRpbCBmcm9tICcuL19ub2RlVXRpbC5qcyc7XG5cbi8qIE5vZGUuanMgaGVscGVyIHJlZmVyZW5jZXMuICovXG52YXIgbm9kZUlzTWFwID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNNYXA7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBNYXBgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMy4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG1hcCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTWFwKG5ldyBNYXApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNNYXAobmV3IFdlYWtNYXApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzTWFwID0gbm9kZUlzTWFwID8gYmFzZVVuYXJ5KG5vZGVJc01hcCkgOiBiYXNlSXNNYXA7XG5cbmV4cG9ydCBkZWZhdWx0IGlzTWFwO1xuIiwiaW1wb3J0IGdldFRhZyBmcm9tICcuL19nZXRUYWcuanMnO1xuaW1wb3J0IGlzT2JqZWN0TGlrZSBmcm9tICcuL2lzT2JqZWN0TGlrZS5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBzZXRUYWcgPSAnW29iamVjdCBTZXRdJztcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc1NldGAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzZXQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUlzU2V0KHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGdldFRhZyh2YWx1ZSkgPT0gc2V0VGFnO1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlSXNTZXQ7XG4iLCJpbXBvcnQgYmFzZUlzU2V0IGZyb20gJy4vX2Jhc2VJc1NldC5qcyc7XG5pbXBvcnQgYmFzZVVuYXJ5IGZyb20gJy4vX2Jhc2VVbmFyeS5qcyc7XG5pbXBvcnQgbm9kZVV0aWwgZnJvbSAnLi9fbm9kZVV0aWwuanMnO1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xudmFyIG5vZGVJc1NldCA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzU2V0O1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgU2V0YCBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjMuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzZXQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1NldChuZXcgU2V0KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzU2V0KG5ldyBXZWFrU2V0KTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc1NldCA9IG5vZGVJc1NldCA/IGJhc2VVbmFyeShub2RlSXNTZXQpIDogYmFzZUlzU2V0O1xuXG5leHBvcnQgZGVmYXVsdCBpc1NldDtcbiIsImltcG9ydCBTdGFjayBmcm9tICcuL19TdGFjay5qcyc7XG5pbXBvcnQgYXJyYXlFYWNoIGZyb20gJy4vX2FycmF5RWFjaC5qcyc7XG5pbXBvcnQgYXNzaWduVmFsdWUgZnJvbSAnLi9fYXNzaWduVmFsdWUuanMnO1xuaW1wb3J0IGJhc2VBc3NpZ24gZnJvbSAnLi9fYmFzZUFzc2lnbi5qcyc7XG5pbXBvcnQgYmFzZUFzc2lnbkluIGZyb20gJy4vX2Jhc2VBc3NpZ25Jbi5qcyc7XG5pbXBvcnQgY2xvbmVCdWZmZXIgZnJvbSAnLi9fY2xvbmVCdWZmZXIuanMnO1xuaW1wb3J0IGNvcHlBcnJheSBmcm9tICcuL19jb3B5QXJyYXkuanMnO1xuaW1wb3J0IGNvcHlTeW1ib2xzIGZyb20gJy4vX2NvcHlTeW1ib2xzLmpzJztcbmltcG9ydCBjb3B5U3ltYm9sc0luIGZyb20gJy4vX2NvcHlTeW1ib2xzSW4uanMnO1xuaW1wb3J0IGdldEFsbEtleXMgZnJvbSAnLi9fZ2V0QWxsS2V5cy5qcyc7XG5pbXBvcnQgZ2V0QWxsS2V5c0luIGZyb20gJy4vX2dldEFsbEtleXNJbi5qcyc7XG5pbXBvcnQgZ2V0VGFnIGZyb20gJy4vX2dldFRhZy5qcyc7XG5pbXBvcnQgaW5pdENsb25lQXJyYXkgZnJvbSAnLi9faW5pdENsb25lQXJyYXkuanMnO1xuaW1wb3J0IGluaXRDbG9uZUJ5VGFnIGZyb20gJy4vX2luaXRDbG9uZUJ5VGFnLmpzJztcbmltcG9ydCBpbml0Q2xvbmVPYmplY3QgZnJvbSAnLi9faW5pdENsb25lT2JqZWN0LmpzJztcbmltcG9ydCBpc0FycmF5IGZyb20gJy4vaXNBcnJheS5qcyc7XG5pbXBvcnQgaXNCdWZmZXIgZnJvbSAnLi9pc0J1ZmZlci5qcyc7XG5pbXBvcnQgaXNNYXAgZnJvbSAnLi9pc01hcC5qcyc7XG5pbXBvcnQgaXNPYmplY3QgZnJvbSAnLi9pc09iamVjdC5qcyc7XG5pbXBvcnQgaXNTZXQgZnJvbSAnLi9pc1NldC5qcyc7XG5pbXBvcnQga2V5cyBmcm9tICcuL2tleXMuanMnO1xuaW1wb3J0IGtleXNJbiBmcm9tICcuL2tleXNJbi5qcyc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIGNsb25pbmcuICovXG52YXIgQ0xPTkVfREVFUF9GTEFHID0gMSxcbiAgICBDTE9ORV9GTEFUX0ZMQUcgPSAyLFxuICAgIENMT05FX1NZTUJPTFNfRkxBRyA9IDQ7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBhcmdzVGFnID0gJ1tvYmplY3QgQXJndW1lbnRzXScsXG4gICAgYXJyYXlUYWcgPSAnW29iamVjdCBBcnJheV0nLFxuICAgIGJvb2xUYWcgPSAnW29iamVjdCBCb29sZWFuXScsXG4gICAgZGF0ZVRhZyA9ICdbb2JqZWN0IERhdGVdJyxcbiAgICBlcnJvclRhZyA9ICdbb2JqZWN0IEVycm9yXScsXG4gICAgZnVuY1RhZyA9ICdbb2JqZWN0IEZ1bmN0aW9uXScsXG4gICAgZ2VuVGFnID0gJ1tvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dJyxcbiAgICBtYXBUYWcgPSAnW29iamVjdCBNYXBdJyxcbiAgICBudW1iZXJUYWcgPSAnW29iamVjdCBOdW1iZXJdJyxcbiAgICBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJyxcbiAgICByZWdleHBUYWcgPSAnW29iamVjdCBSZWdFeHBdJyxcbiAgICBzZXRUYWcgPSAnW29iamVjdCBTZXRdJyxcbiAgICBzdHJpbmdUYWcgPSAnW29iamVjdCBTdHJpbmddJyxcbiAgICBzeW1ib2xUYWcgPSAnW29iamVjdCBTeW1ib2xdJyxcbiAgICB3ZWFrTWFwVGFnID0gJ1tvYmplY3QgV2Vha01hcF0nO1xuXG52YXIgYXJyYXlCdWZmZXJUYWcgPSAnW29iamVjdCBBcnJheUJ1ZmZlcl0nLFxuICAgIGRhdGFWaWV3VGFnID0gJ1tvYmplY3QgRGF0YVZpZXddJyxcbiAgICBmbG9hdDMyVGFnID0gJ1tvYmplY3QgRmxvYXQzMkFycmF5XScsXG4gICAgZmxvYXQ2NFRhZyA9ICdbb2JqZWN0IEZsb2F0NjRBcnJheV0nLFxuICAgIGludDhUYWcgPSAnW29iamVjdCBJbnQ4QXJyYXldJyxcbiAgICBpbnQxNlRhZyA9ICdbb2JqZWN0IEludDE2QXJyYXldJyxcbiAgICBpbnQzMlRhZyA9ICdbb2JqZWN0IEludDMyQXJyYXldJyxcbiAgICB1aW50OFRhZyA9ICdbb2JqZWN0IFVpbnQ4QXJyYXldJyxcbiAgICB1aW50OENsYW1wZWRUYWcgPSAnW29iamVjdCBVaW50OENsYW1wZWRBcnJheV0nLFxuICAgIHVpbnQxNlRhZyA9ICdbb2JqZWN0IFVpbnQxNkFycmF5XScsXG4gICAgdWludDMyVGFnID0gJ1tvYmplY3QgVWludDMyQXJyYXldJztcblxuLyoqIFVzZWQgdG8gaWRlbnRpZnkgYHRvU3RyaW5nVGFnYCB2YWx1ZXMgc3VwcG9ydGVkIGJ5IGBfLmNsb25lYC4gKi9cbnZhciBjbG9uZWFibGVUYWdzID0ge307XG5jbG9uZWFibGVUYWdzW2FyZ3NUYWddID0gY2xvbmVhYmxlVGFnc1thcnJheVRhZ10gPVxuY2xvbmVhYmxlVGFnc1thcnJheUJ1ZmZlclRhZ10gPSBjbG9uZWFibGVUYWdzW2RhdGFWaWV3VGFnXSA9XG5jbG9uZWFibGVUYWdzW2Jvb2xUYWddID0gY2xvbmVhYmxlVGFnc1tkYXRlVGFnXSA9XG5jbG9uZWFibGVUYWdzW2Zsb2F0MzJUYWddID0gY2xvbmVhYmxlVGFnc1tmbG9hdDY0VGFnXSA9XG5jbG9uZWFibGVUYWdzW2ludDhUYWddID0gY2xvbmVhYmxlVGFnc1tpbnQxNlRhZ10gPVxuY2xvbmVhYmxlVGFnc1tpbnQzMlRhZ10gPSBjbG9uZWFibGVUYWdzW21hcFRhZ10gPVxuY2xvbmVhYmxlVGFnc1tudW1iZXJUYWddID0gY2xvbmVhYmxlVGFnc1tvYmplY3RUYWddID1cbmNsb25lYWJsZVRhZ3NbcmVnZXhwVGFnXSA9IGNsb25lYWJsZVRhZ3Nbc2V0VGFnXSA9XG5jbG9uZWFibGVUYWdzW3N0cmluZ1RhZ10gPSBjbG9uZWFibGVUYWdzW3N5bWJvbFRhZ10gPVxuY2xvbmVhYmxlVGFnc1t1aW50OFRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPVxuY2xvbmVhYmxlVGFnc1t1aW50MTZUYWddID0gY2xvbmVhYmxlVGFnc1t1aW50MzJUYWddID0gdHJ1ZTtcbmNsb25lYWJsZVRhZ3NbZXJyb3JUYWddID0gY2xvbmVhYmxlVGFnc1tmdW5jVGFnXSA9XG5jbG9uZWFibGVUYWdzW3dlYWtNYXBUYWddID0gZmFsc2U7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uY2xvbmVgIGFuZCBgXy5jbG9uZURlZXBgIHdoaWNoIHRyYWNrc1xuICogdHJhdmVyc2VkIG9iamVjdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLlxuICogQHBhcmFtIHtib29sZWFufSBiaXRtYXNrIFRoZSBiaXRtYXNrIGZsYWdzLlxuICogIDEgLSBEZWVwIGNsb25lXG4gKiAgMiAtIEZsYXR0ZW4gaW5oZXJpdGVkIHByb3BlcnRpZXNcbiAqICA0IC0gQ2xvbmUgc3ltYm9sc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY2xvbmluZy5cbiAqIEBwYXJhbSB7c3RyaW5nfSBba2V5XSBUaGUga2V5IG9mIGB2YWx1ZWAuXG4gKiBAcGFyYW0ge09iamVjdH0gW29iamVjdF0gVGhlIHBhcmVudCBvYmplY3Qgb2YgYHZhbHVlYC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgb2JqZWN0cyBhbmQgdGhlaXIgY2xvbmUgY291bnRlcnBhcnRzLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUNsb25lKHZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBrZXksIG9iamVjdCwgc3RhY2spIHtcbiAgdmFyIHJlc3VsdCxcbiAgICAgIGlzRGVlcCA9IGJpdG1hc2sgJiBDTE9ORV9ERUVQX0ZMQUcsXG4gICAgICBpc0ZsYXQgPSBiaXRtYXNrICYgQ0xPTkVfRkxBVF9GTEFHLFxuICAgICAgaXNGdWxsID0gYml0bWFzayAmIENMT05FX1NZTUJPTFNfRkxBRztcblxuICBpZiAoY3VzdG9taXplcikge1xuICAgIHJlc3VsdCA9IG9iamVjdCA/IGN1c3RvbWl6ZXIodmFsdWUsIGtleSwgb2JqZWN0LCBzdGFjaykgOiBjdXN0b21pemVyKHZhbHVlKTtcbiAgfVxuICBpZiAocmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG4gIGlmICghaXNPYmplY3QodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpO1xuICBpZiAoaXNBcnIpIHtcbiAgICByZXN1bHQgPSBpbml0Q2xvbmVBcnJheSh2YWx1ZSk7XG4gICAgaWYgKCFpc0RlZXApIHtcbiAgICAgIHJldHVybiBjb3B5QXJyYXkodmFsdWUsIHJlc3VsdCk7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHZhciB0YWcgPSBnZXRUYWcodmFsdWUpLFxuICAgICAgICBpc0Z1bmMgPSB0YWcgPT0gZnVuY1RhZyB8fCB0YWcgPT0gZ2VuVGFnO1xuXG4gICAgaWYgKGlzQnVmZmVyKHZhbHVlKSkge1xuICAgICAgcmV0dXJuIGNsb25lQnVmZmVyKHZhbHVlLCBpc0RlZXApO1xuICAgIH1cbiAgICBpZiAodGFnID09IG9iamVjdFRhZyB8fCB0YWcgPT0gYXJnc1RhZyB8fCAoaXNGdW5jICYmICFvYmplY3QpKSB7XG4gICAgICByZXN1bHQgPSAoaXNGbGF0IHx8IGlzRnVuYykgPyB7fSA6IGluaXRDbG9uZU9iamVjdCh2YWx1ZSk7XG4gICAgICBpZiAoIWlzRGVlcCkge1xuICAgICAgICByZXR1cm4gaXNGbGF0XG4gICAgICAgICAgPyBjb3B5U3ltYm9sc0luKHZhbHVlLCBiYXNlQXNzaWduSW4ocmVzdWx0LCB2YWx1ZSkpXG4gICAgICAgICAgOiBjb3B5U3ltYm9scyh2YWx1ZSwgYmFzZUFzc2lnbihyZXN1bHQsIHZhbHVlKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICghY2xvbmVhYmxlVGFnc1t0YWddKSB7XG4gICAgICAgIHJldHVybiBvYmplY3QgPyB2YWx1ZSA6IHt9O1xuICAgICAgfVxuICAgICAgcmVzdWx0ID0gaW5pdENsb25lQnlUYWcodmFsdWUsIHRhZywgaXNEZWVwKTtcbiAgICB9XG4gIH1cbiAgLy8gQ2hlY2sgZm9yIGNpcmN1bGFyIHJlZmVyZW5jZXMgYW5kIHJldHVybiBpdHMgY29ycmVzcG9uZGluZyBjbG9uZS5cbiAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQodmFsdWUpO1xuICBpZiAoc3RhY2tlZCkge1xuICAgIHJldHVybiBzdGFja2VkO1xuICB9XG4gIHN0YWNrLnNldCh2YWx1ZSwgcmVzdWx0KTtcblxuICBpZiAoaXNTZXQodmFsdWUpKSB7XG4gICAgdmFsdWUuZm9yRWFjaChmdW5jdGlvbihzdWJWYWx1ZSkge1xuICAgICAgcmVzdWx0LmFkZChiYXNlQ2xvbmUoc3ViVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN1YlZhbHVlLCB2YWx1ZSwgc3RhY2spKTtcbiAgICB9KTtcbiAgfSBlbHNlIGlmIChpc01hcCh2YWx1ZSkpIHtcbiAgICB2YWx1ZS5mb3JFYWNoKGZ1bmN0aW9uKHN1YlZhbHVlLCBrZXkpIHtcbiAgICAgIHJlc3VsdC5zZXQoa2V5LCBiYXNlQ2xvbmUoc3ViVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGtleSwgdmFsdWUsIHN0YWNrKSk7XG4gICAgfSk7XG4gIH1cblxuICB2YXIga2V5c0Z1bmMgPSBpc0Z1bGxcbiAgICA/IChpc0ZsYXQgPyBnZXRBbGxLZXlzSW4gOiBnZXRBbGxLZXlzKVxuICAgIDogKGlzRmxhdCA/IGtleXNJbiA6IGtleXMpO1xuXG4gIHZhciBwcm9wcyA9IGlzQXJyID8gdW5kZWZpbmVkIDoga2V5c0Z1bmModmFsdWUpO1xuICBhcnJheUVhY2gocHJvcHMgfHwgdmFsdWUsIGZ1bmN0aW9uKHN1YlZhbHVlLCBrZXkpIHtcbiAgICBpZiAocHJvcHMpIHtcbiAgICAgIGtleSA9IHN1YlZhbHVlO1xuICAgICAgc3ViVmFsdWUgPSB2YWx1ZVtrZXldO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBwb3B1bGF0ZSBjbG9uZSAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGFzc2lnblZhbHVlKHJlc3VsdCwga2V5LCBiYXNlQ2xvbmUoc3ViVmFsdWUsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGtleSwgdmFsdWUsIHN0YWNrKSk7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBiYXNlQ2xvbmU7XG4iLCJpbXBvcnQgYmFzZUNsb25lIGZyb20gJy4vX2Jhc2VDbG9uZS5qcyc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIGNsb25pbmcuICovXG52YXIgQ0xPTkVfU1lNQk9MU19GTEFHID0gNDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgc2hhbGxvdyBjbG9uZSBvZiBgdmFsdWVgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIG1ldGhvZCBpcyBsb29zZWx5IGJhc2VkIG9uIHRoZVxuICogW3N0cnVjdHVyZWQgY2xvbmUgYWxnb3JpdGhtXShodHRwczovL21kbi5pby9TdHJ1Y3R1cmVkX2Nsb25lX2FsZ29yaXRobSlcbiAqIGFuZCBzdXBwb3J0cyBjbG9uaW5nIGFycmF5cywgYXJyYXkgYnVmZmVycywgYm9vbGVhbnMsIGRhdGUgb2JqZWN0cywgbWFwcyxcbiAqIG51bWJlcnMsIGBPYmplY3RgIG9iamVjdHMsIHJlZ2V4ZXMsIHNldHMsIHN0cmluZ3MsIHN5bWJvbHMsIGFuZCB0eXBlZFxuICogYXJyYXlzLiBUaGUgb3duIGVudW1lcmFibGUgcHJvcGVydGllcyBvZiBgYXJndW1lbnRzYCBvYmplY3RzIGFyZSBjbG9uZWRcbiAqIGFzIHBsYWluIG9iamVjdHMuIEFuIGVtcHR5IG9iamVjdCBpcyByZXR1cm5lZCBmb3IgdW5jbG9uZWFibGUgdmFsdWVzIHN1Y2hcbiAqIGFzIGVycm9yIG9iamVjdHMsIGZ1bmN0aW9ucywgRE9NIG5vZGVzLCBhbmQgV2Vha01hcHMuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNsb25lLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGNsb25lZCB2YWx1ZS5cbiAqIEBzZWUgXy5jbG9uZURlZXBcbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdHMgPSBbeyAnYSc6IDEgfSwgeyAnYic6IDIgfV07XG4gKlxuICogdmFyIHNoYWxsb3cgPSBfLmNsb25lKG9iamVjdHMpO1xuICogY29uc29sZS5sb2coc2hhbGxvd1swXSA9PT0gb2JqZWN0c1swXSk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGNsb25lKHZhbHVlKSB7XG4gIHJldHVybiBiYXNlQ2xvbmUodmFsdWUsIENMT05FX1NZTUJPTFNfRkxBRyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGNsb25lO1xuIiwiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8ubWFwYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3IgaXRlcmF0ZWVcbiAqIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIG5ldyBtYXBwZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFycmF5TWFwKGFycmF5LCBpdGVyYXRlZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHJlc3VsdFtpbmRleF0gPSBpdGVyYXRlZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYXJyYXlNYXA7XG4iLCJpbXBvcnQgYmFzZUdldFRhZyBmcm9tICcuL19iYXNlR2V0VGFnLmpzJztcbmltcG9ydCBpc09iamVjdExpa2UgZnJvbSAnLi9pc09iamVjdExpa2UuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzU3ltYm9sO1xuIiwiaW1wb3J0IE1hcENhY2hlIGZyb20gJy4vX01hcENhY2hlLmpzJztcblxuLyoqIEVycm9yIG1lc3NhZ2UgY29uc3RhbnRzLiAqL1xudmFyIEZVTkNfRVJST1JfVEVYVCA9ICdFeHBlY3RlZCBhIGZ1bmN0aW9uJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCBtZW1vaXplcyB0aGUgcmVzdWx0IG9mIGBmdW5jYC4gSWYgYHJlc29sdmVyYCBpc1xuICogcHJvdmlkZWQsIGl0IGRldGVybWluZXMgdGhlIGNhY2hlIGtleSBmb3Igc3RvcmluZyB0aGUgcmVzdWx0IGJhc2VkIG9uIHRoZVxuICogYXJndW1lbnRzIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbi4gQnkgZGVmYXVsdCwgdGhlIGZpcnN0IGFyZ3VtZW50XG4gKiBwcm92aWRlZCB0byB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24gaXMgdXNlZCBhcyB0aGUgbWFwIGNhY2hlIGtleS4gVGhlIGBmdW5jYFxuICogaXMgaW52b2tlZCB3aXRoIHRoZSBgdGhpc2AgYmluZGluZyBvZiB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKlxuICogKipOb3RlOioqIFRoZSBjYWNoZSBpcyBleHBvc2VkIGFzIHRoZSBgY2FjaGVgIHByb3BlcnR5IG9uIHRoZSBtZW1vaXplZFxuICogZnVuY3Rpb24uIEl0cyBjcmVhdGlvbiBtYXkgYmUgY3VzdG9taXplZCBieSByZXBsYWNpbmcgdGhlIGBfLm1lbW9pemUuQ2FjaGVgXG4gKiBjb25zdHJ1Y3RvciB3aXRoIG9uZSB3aG9zZSBpbnN0YW5jZXMgaW1wbGVtZW50IHRoZVxuICogW2BNYXBgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1wcm9wZXJ0aWVzLW9mLXRoZS1tYXAtcHJvdG90eXBlLW9iamVjdClcbiAqIG1ldGhvZCBpbnRlcmZhY2Ugb2YgYGNsZWFyYCwgYGRlbGV0ZWAsIGBnZXRgLCBgaGFzYCwgYW5kIGBzZXRgLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBGdW5jdGlvblxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW3Jlc29sdmVyXSBUaGUgZnVuY3Rpb24gdG8gcmVzb2x2ZSB0aGUgY2FjaGUga2V5LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSB7ICdhJzogMSwgJ2InOiAyIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdjJzogMywgJ2QnOiA0IH07XG4gKlxuICogdmFyIHZhbHVlcyA9IF8ubWVtb2l6ZShfLnZhbHVlcyk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsxLCAyXVxuICpcbiAqIHZhbHVlcyhvdGhlcik7XG4gKiAvLyA9PiBbMywgNF1cbiAqXG4gKiBvYmplY3QuYSA9IDI7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsxLCAyXVxuICpcbiAqIC8vIE1vZGlmeSB0aGUgcmVzdWx0IGNhY2hlLlxuICogdmFsdWVzLmNhY2hlLnNldChvYmplY3QsIFsnYScsICdiJ10pO1xuICogdmFsdWVzKG9iamVjdCk7XG4gKiAvLyA9PiBbJ2EnLCAnYiddXG4gKlxuICogLy8gUmVwbGFjZSBgXy5tZW1vaXplLkNhY2hlYC5cbiAqIF8ubWVtb2l6ZS5DYWNoZSA9IFdlYWtNYXA7XG4gKi9cbmZ1bmN0aW9uIG1lbW9pemUoZnVuYywgcmVzb2x2ZXIpIHtcbiAgaWYgKHR5cGVvZiBmdW5jICE9ICdmdW5jdGlvbicgfHwgKHJlc29sdmVyICE9IG51bGwgJiYgdHlwZW9mIHJlc29sdmVyICE9ICdmdW5jdGlvbicpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHZhciBtZW1vaXplZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICBrZXkgPSByZXNvbHZlciA/IHJlc29sdmVyLmFwcGx5KHRoaXMsIGFyZ3MpIDogYXJnc1swXSxcbiAgICAgICAgY2FjaGUgPSBtZW1vaXplZC5jYWNoZTtcblxuICAgIGlmIChjYWNoZS5oYXMoa2V5KSkge1xuICAgICAgcmV0dXJuIGNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICBtZW1vaXplZC5jYWNoZSA9IGNhY2hlLnNldChrZXksIHJlc3VsdCkgfHwgY2FjaGU7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgbWVtb2l6ZWQuY2FjaGUgPSBuZXcgKG1lbW9pemUuQ2FjaGUgfHwgTWFwQ2FjaGUpO1xuICByZXR1cm4gbWVtb2l6ZWQ7XG59XG5cbi8vIEV4cG9zZSBgTWFwQ2FjaGVgLlxubWVtb2l6ZS5DYWNoZSA9IE1hcENhY2hlO1xuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0IG1lbW9pemUgZnJvbSAnLi9tZW1vaXplLmpzJztcblxuLyoqIFVzZWQgYXMgdGhlIG1heGltdW0gbWVtb2l6ZSBjYWNoZSBzaXplLiAqL1xudmFyIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDA7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLm1lbW9pemVgIHdoaWNoIGNsZWFycyB0aGUgbWVtb2l6ZWQgZnVuY3Rpb24nc1xuICogY2FjaGUgd2hlbiBpdCBleGNlZWRzIGBNQVhfTUVNT0laRV9TSVpFYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gaGF2ZSBpdHMgb3V0cHV0IG1lbW9pemVkLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgbWVtb2l6ZWQgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1lbW9pemVDYXBwZWQoZnVuYykge1xuICB2YXIgcmVzdWx0ID0gbWVtb2l6ZShmdW5jLCBmdW5jdGlvbihrZXkpIHtcbiAgICBpZiAoY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSkge1xuICAgICAgY2FjaGUuY2xlYXIoKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbiAgfSk7XG5cbiAgdmFyIGNhY2hlID0gcmVzdWx0LmNhY2hlO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplQ2FwcGVkO1xuIiwiaW1wb3J0IG1lbW9pemVDYXBwZWQgZnJvbSAnLi9fbWVtb2l6ZUNhcHBlZC5qcyc7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZVByb3BOYW1lID0gL1teLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCQpKS9nO1xuXG4vKiogVXNlZCB0byBtYXRjaCBiYWNrc2xhc2hlcyBpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZUVzY2FwZUNoYXIgPSAvXFxcXChcXFxcKT8vZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgc3RyaW5nYCB0byBhIHByb3BlcnR5IHBhdGggYXJyYXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICovXG52YXIgc3RyaW5nVG9QYXRoID0gbWVtb2l6ZUNhcHBlZChmdW5jdGlvbihzdHJpbmcpIHtcbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBpZiAoc3RyaW5nLmNoYXJDb2RlQXQoMCkgPT09IDQ2IC8qIC4gKi8pIHtcbiAgICByZXN1bHQucHVzaCgnJyk7XG4gIH1cbiAgc3RyaW5nLnJlcGxhY2UocmVQcm9wTmFtZSwgZnVuY3Rpb24obWF0Y2gsIG51bWJlciwgcXVvdGUsIHN1YlN0cmluZykge1xuICAgIHJlc3VsdC5wdXNoKHF1b3RlID8gc3ViU3RyaW5nLnJlcGxhY2UocmVFc2NhcGVDaGFyLCAnJDEnKSA6IChudW1iZXIgfHwgbWF0Y2gpKTtcbiAgfSk7XG4gIHJldHVybiByZXN1bHQ7XG59KTtcblxuZXhwb3J0IGRlZmF1bHQgc3RyaW5nVG9QYXRoO1xuIiwiaW1wb3J0IGlzU3ltYm9sIGZyb20gJy4vaXNTeW1ib2wuanMnO1xuXG4vKiogVXNlZCBhcyByZWZlcmVuY2VzIGZvciB2YXJpb3VzIGBOdW1iZXJgIGNvbnN0YW50cy4gKi9cbnZhciBJTkZJTklUWSA9IDEgLyAwO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcga2V5IGlmIGl0J3Mgbm90IGEgc3RyaW5nIG9yIHN5bWJvbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtzdHJpbmd8c3ltYm9sfSBSZXR1cm5zIHRoZSBrZXkuXG4gKi9cbmZ1bmN0aW9uIHRvS2V5KHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdG9LZXk7XG4iLCJpbXBvcnQgU3ltYm9sIGZyb20gJy4vX1N5bWJvbC5qcyc7XG5pbXBvcnQgYXJyYXlNYXAgZnJvbSAnLi9fYXJyYXlNYXAuanMnO1xuaW1wb3J0IGlzQXJyYXkgZnJvbSAnLi9pc0FycmF5LmpzJztcbmltcG9ydCBpc1N5bWJvbCBmcm9tICcuL2lzU3ltYm9sLmpzJztcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMDtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFRvU3RyaW5nID0gc3ltYm9sUHJvdG8gPyBzeW1ib2xQcm90by50b1N0cmluZyA6IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2hcbiAqIHZhbHVlcyB0byBlbXB0eSBzdHJpbmdzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBiYXNlVG9TdHJpbmcodmFsdWUpIHtcbiAgLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAvLyBSZWN1cnNpdmVseSBjb252ZXJ0IHZhbHVlcyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIHJldHVybiBhcnJheU1hcCh2YWx1ZSwgYmFzZVRvU3RyaW5nKSArICcnO1xuICB9XG4gIGlmIChpc1N5bWJvbCh2YWx1ZSkpIHtcbiAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6ICcnO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZVRvU3RyaW5nO1xuIiwiaW1wb3J0IGJhc2VUb1N0cmluZyBmcm9tICcuL19iYXNlVG9TdHJpbmcuanMnO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcuIEFuIGVtcHR5IHN0cmluZyBpcyByZXR1cm5lZCBmb3IgYG51bGxgXG4gKiBhbmQgYHVuZGVmaW5lZGAgdmFsdWVzLiBUaGUgc2lnbiBvZiBgLTBgIGlzIHByZXNlcnZlZC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9TdHJpbmcobnVsbCk7XG4gKiAvLyA9PiAnJ1xuICpcbiAqIF8udG9TdHJpbmcoLTApO1xuICogLy8gPT4gJy0wJ1xuICpcbiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTtcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRvU3RyaW5nO1xuIiwiaW1wb3J0IGFycmF5TWFwIGZyb20gJy4vX2FycmF5TWFwLmpzJztcbmltcG9ydCBjb3B5QXJyYXkgZnJvbSAnLi9fY29weUFycmF5LmpzJztcbmltcG9ydCBpc0FycmF5IGZyb20gJy4vaXNBcnJheS5qcyc7XG5pbXBvcnQgaXNTeW1ib2wgZnJvbSAnLi9pc1N5bWJvbC5qcyc7XG5pbXBvcnQgc3RyaW5nVG9QYXRoIGZyb20gJy4vX3N0cmluZ1RvUGF0aC5qcyc7XG5pbXBvcnQgdG9LZXkgZnJvbSAnLi9fdG9LZXkuanMnO1xuaW1wb3J0IHRvU3RyaW5nIGZyb20gJy4vdG9TdHJpbmcuanMnO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBVdGlsXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBuZXcgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogXy50b1BhdGgoJ2EuYi5jJyk7XG4gKiAvLyA9PiBbJ2EnLCAnYicsICdjJ11cbiAqXG4gKiBfLnRvUGF0aCgnYVswXS5iLmMnKTtcbiAqIC8vID0+IFsnYScsICcwJywgJ2InLCAnYyddXG4gKi9cbmZ1bmN0aW9uIHRvUGF0aCh2YWx1ZSkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gYXJyYXlNYXAodmFsdWUsIHRvS2V5KTtcbiAgfVxuICByZXR1cm4gaXNTeW1ib2wodmFsdWUpID8gW3ZhbHVlXSA6IGNvcHlBcnJheShzdHJpbmdUb1BhdGgodG9TdHJpbmcodmFsdWUpKSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHRvUGF0aDtcbiIsImltcG9ydCBiYXNlQ2xvbmUgZnJvbSAnLi9fYmFzZUNsb25lLmpzJztcblxuLyoqIFVzZWQgdG8gY29tcG9zZSBiaXRtYXNrcyBmb3IgY2xvbmluZy4gKi9cbnZhciBDTE9ORV9ERUVQX0ZMQUcgPSAxLFxuICAgIENMT05FX1NZTUJPTFNfRkxBRyA9IDQ7XG5cbi8qKlxuICogVGhpcyBtZXRob2QgaXMgbGlrZSBgXy5jbG9uZWAgZXhjZXB0IHRoYXQgaXQgcmVjdXJzaXZlbHkgY2xvbmVzIGB2YWx1ZWAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAxLjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHJlY3Vyc2l2ZWx5IGNsb25lLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGRlZXAgY2xvbmVkIHZhbHVlLlxuICogQHNlZSBfLmNsb25lXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3RzID0gW3sgJ2EnOiAxIH0sIHsgJ2InOiAyIH1dO1xuICpcbiAqIHZhciBkZWVwID0gXy5jbG9uZURlZXAob2JqZWN0cyk7XG4gKiBjb25zb2xlLmxvZyhkZWVwWzBdID09PSBvYmplY3RzWzBdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGNsb25lRGVlcCh2YWx1ZSkge1xuICByZXR1cm4gYmFzZUNsb25lKHZhbHVlLCBDTE9ORV9ERUVQX0ZMQUcgfCBDTE9ORV9TWU1CT0xTX0ZMQUcpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbG9uZURlZXA7XG4iLCJpbXBvcnQgZGVlcG1lcmdlIGZyb20gJ2RlZXBtZXJnZSc7XG5pbXBvcnQgaXNQbGFpbk9iamVjdCBmcm9tICdsb2Rhc2gtZXMvaXNQbGFpbk9iamVjdCc7XG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0LCB1c2VDb250ZXh0LCBDaGlsZHJlbiwgdXNlUmVmLCB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VDYWxsYmFjaywgdXNlTWVtbywgdXNlSW1wZXJhdGl2ZUhhbmRsZSwgY3JlYXRlRWxlbWVudCwgdXNlTGF5b3V0RWZmZWN0LCBmb3J3YXJkUmVmLCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaXNFcXVhbCBmcm9tICdyZWFjdC1mYXN0LWNvbXBhcmUnO1xuaW1wb3J0IGludmFyaWFudCBmcm9tICd0aW55LXdhcm5pbmcnO1xuaW1wb3J0IGNsb25lIGZyb20gJ2xvZGFzaC1lcy9jbG9uZSc7XG5pbXBvcnQgdG9QYXRoIGZyb20gJ2xvZGFzaC1lcy90b1BhdGgnO1xuaW1wb3J0IGhvaXN0Tm9uUmVhY3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBjbG9uZURlZXAgZnJvbSAnbG9kYXNoLWVzL2Nsb25lRGVlcCc7XG5cbmZ1bmN0aW9uIF9leHRlbmRzKCkge1xuICBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldO1xuXG4gICAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7XG4gICAgICAgICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0YXJnZXQ7XG4gIH07XG5cbiAgcmV0dXJuIF9leHRlbmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG59XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2Uoc291cmNlLCBleGNsdWRlZCkge1xuICBpZiAoc291cmNlID09IG51bGwpIHJldHVybiB7fTtcbiAgdmFyIHRhcmdldCA9IHt9O1xuICB2YXIgc291cmNlS2V5cyA9IE9iamVjdC5rZXlzKHNvdXJjZSk7XG4gIHZhciBrZXksIGk7XG5cbiAgZm9yIChpID0gMDsgaSA8IHNvdXJjZUtleXMubGVuZ3RoOyBpKyspIHtcbiAgICBrZXkgPSBzb3VyY2VLZXlzW2ldO1xuICAgIGlmIChleGNsdWRlZC5pbmRleE9mKGtleSkgPj0gMCkgY29udGludWU7XG4gICAgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTtcbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59XG5cbmZ1bmN0aW9uIF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoc2VsZikge1xuICBpZiAoc2VsZiA9PT0gdm9pZCAwKSB7XG4gICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKFwidGhpcyBoYXNuJ3QgYmVlbiBpbml0aWFsaXNlZCAtIHN1cGVyKCkgaGFzbid0IGJlZW4gY2FsbGVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIHNlbGY7XG59XG5cbnZhciBGb3JtaWtDb250ZXh0ID0gLyojX19QVVJFX18qL2NyZWF0ZUNvbnRleHQodW5kZWZpbmVkKTtcbkZvcm1pa0NvbnRleHQuZGlzcGxheU5hbWUgPSAnRm9ybWlrQ29udGV4dCc7XG52YXIgRm9ybWlrUHJvdmlkZXIgPSBGb3JtaWtDb250ZXh0LlByb3ZpZGVyO1xudmFyIEZvcm1pa0NvbnN1bWVyID0gRm9ybWlrQ29udGV4dC5Db25zdW1lcjtcbmZ1bmN0aW9uIHVzZUZvcm1pa0NvbnRleHQoKSB7XG4gIHZhciBmb3JtaWsgPSB1c2VDb250ZXh0KEZvcm1pa0NvbnRleHQpO1xuICAhISFmb3JtaWsgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiRm9ybWlrIGNvbnRleHQgaXMgdW5kZWZpbmVkLCBwbGVhc2UgdmVyaWZ5IHlvdSBhcmUgY2FsbGluZyB1c2VGb3JtaWtDb250ZXh0KCkgYXMgY2hpbGQgb2YgYSA8Rm9ybWlrPiBjb21wb25lbnQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgcmV0dXJuIGZvcm1paztcbn1cblxuLyoqIEBwcml2YXRlIGlzIHRoZSB2YWx1ZSBhbiBlbXB0eSBhcnJheT8gKi9cblxudmFyIGlzRW1wdHlBcnJheSA9IGZ1bmN0aW9uIGlzRW1wdHlBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWx1ZSkgJiYgdmFsdWUubGVuZ3RoID09PSAwO1xufTtcbi8qKiBAcHJpdmF0ZSBpcyB0aGUgZ2l2ZW4gb2JqZWN0IGEgRnVuY3Rpb24/ICovXG5cbnZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gaXNGdW5jdGlvbihvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmogPT09ICdmdW5jdGlvbic7XG59O1xuLyoqIEBwcml2YXRlIGlzIHRoZSBnaXZlbiBvYmplY3QgYW4gT2JqZWN0PyAqL1xuXG52YXIgaXNPYmplY3QgPSBmdW5jdGlvbiBpc09iamVjdChvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gbnVsbCAmJiB0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jztcbn07XG4vKiogQHByaXZhdGUgaXMgdGhlIGdpdmVuIG9iamVjdCBhbiBpbnRlZ2VyPyAqL1xuXG52YXIgaXNJbnRlZ2VyID0gZnVuY3Rpb24gaXNJbnRlZ2VyKG9iaikge1xuICByZXR1cm4gU3RyaW5nKE1hdGguZmxvb3IoTnVtYmVyKG9iaikpKSA9PT0gb2JqO1xufTtcbi8qKiBAcHJpdmF0ZSBpcyB0aGUgZ2l2ZW4gb2JqZWN0IGEgc3RyaW5nPyAqL1xuXG52YXIgaXNTdHJpbmcgPSBmdW5jdGlvbiBpc1N0cmluZyhvYmopIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmopID09PSAnW29iamVjdCBTdHJpbmddJztcbn07XG4vKiogQHByaXZhdGUgaXMgdGhlIGdpdmVuIG9iamVjdCBhIE5hTj8gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcblxudmFyIGlzTmFOJDEgPSBmdW5jdGlvbiBpc05hTihvYmopIHtcbiAgcmV0dXJuIG9iaiAhPT0gb2JqO1xufTtcbi8qKiBAcHJpdmF0ZSBEb2VzIGEgUmVhY3QgY29tcG9uZW50IGhhdmUgZXhhY3RseSAwIGNoaWxkcmVuPyAqL1xuXG52YXIgaXNFbXB0eUNoaWxkcmVuID0gZnVuY3Rpb24gaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBDaGlsZHJlbi5jb3VudChjaGlsZHJlbikgPT09IDA7XG59O1xuLyoqIEBwcml2YXRlIGlzIHRoZSBnaXZlbiBvYmplY3QvdmFsdWUgYSBwcm9taXNlPyAqL1xuXG52YXIgaXNQcm9taXNlID0gZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdCh2YWx1ZSkgJiYgaXNGdW5jdGlvbih2YWx1ZS50aGVuKTtcbn07XG4vKiogQHByaXZhdGUgaXMgdGhlIGdpdmVuIG9iamVjdC92YWx1ZSBhIHR5cGUgb2Ygc3ludGhldGljIGV2ZW50PyAqL1xuXG52YXIgaXNJbnB1dEV2ZW50ID0gZnVuY3Rpb24gaXNJbnB1dEV2ZW50KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAmJiBpc09iamVjdCh2YWx1ZSkgJiYgaXNPYmplY3QodmFsdWUudGFyZ2V0KTtcbn07XG4vKipcclxuICogU2FtZSBhcyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGJ1dCB3cmFwcyBpbiBhIHRyeS1jYXRjaCBibG9jay4gSW4gSUUgaXQgaXNcclxuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cclxuICpcclxuICogVGhlIGFjdGl2ZUVsZW1lbnQgd2lsbCBiZSBudWxsIG9ubHkgaWYgdGhlIGRvY3VtZW50IG9yIGRvY3VtZW50IGJvZHkgaXMgbm90XHJcbiAqIHlldCBkZWZpbmVkLlxyXG4gKlxyXG4gKiBAcGFyYW0gez9Eb2N1bWVudH0gZG9jIERlZmF1bHRzIHRvIGN1cnJlbnQgZG9jdW1lbnQuXHJcbiAqIEByZXR1cm4ge0VsZW1lbnQgfCBudWxsfVxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9mYmpzL2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2ZianMvc3JjL2NvcmUvZG9tL2dldEFjdGl2ZUVsZW1lbnQuanNcclxuICovXG5cbmZ1bmN0aW9uIGdldEFjdGl2ZUVsZW1lbnQoZG9jKSB7XG4gIGRvYyA9IGRvYyB8fCAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJyA/IGRvY3VtZW50IDogdW5kZWZpbmVkKTtcblxuICBpZiAodHlwZW9mIGRvYyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG4vKipcclxuICogRGVlcGx5IGdldCBhIHZhbHVlIGZyb20gYW4gb2JqZWN0IHZpYSBpdHMgcGF0aC5cclxuICovXG5cbmZ1bmN0aW9uIGdldEluKG9iaiwga2V5LCBkZWYsIHApIHtcbiAgaWYgKHAgPT09IHZvaWQgMCkge1xuICAgIHAgPSAwO1xuICB9XG5cbiAgdmFyIHBhdGggPSB0b1BhdGgoa2V5KTtcblxuICB3aGlsZSAob2JqICYmIHAgPCBwYXRoLmxlbmd0aCkge1xuICAgIG9iaiA9IG9ialtwYXRoW3ArK11dO1xuICB9IC8vIGNoZWNrIGlmIHBhdGggaXMgbm90IGluIHRoZSBlbmRcblxuXG4gIGlmIChwICE9PSBwYXRoLmxlbmd0aCAmJiAhb2JqKSB7XG4gICAgcmV0dXJuIGRlZjtcbiAgfVxuXG4gIHJldHVybiBvYmogPT09IHVuZGVmaW5lZCA/IGRlZiA6IG9iajtcbn1cbi8qKlxyXG4gKiBEZWVwbHkgc2V0IGEgdmFsdWUgZnJvbSBpbiBvYmplY3QgdmlhIGl0J3MgcGF0aC4gSWYgdGhlIHZhbHVlIGF0IGBwYXRoYFxyXG4gKiBoYXMgY2hhbmdlZCwgcmV0dXJuIGEgc2hhbGxvdyBjb3B5IG9mIG9iaiB3aXRoIGB2YWx1ZWAgc2V0IGF0IGBwYXRoYC5cclxuICogSWYgYHZhbHVlYCBoYXMgbm90IGNoYW5nZWQsIHJldHVybiB0aGUgb3JpZ2luYWwgYG9iamAuXHJcbiAqXHJcbiAqIEV4aXN0aW5nIG9iamVjdHMgLyBhcnJheXMgYWxvbmcgYHBhdGhgIGFyZSBhbHNvIHNoYWxsb3cgY29waWVkLiBTaWJsaW5nXHJcbiAqIG9iamVjdHMgYWxvbmcgcGF0aCByZXRhaW4gdGhlIHNhbWUgaW50ZXJuYWwganMgcmVmZXJlbmNlLiBTaW5jZSBuZXdcclxuICogb2JqZWN0cyAvIGFycmF5cyBhcmUgb25seSBjcmVhdGVkIGFsb25nIGBwYXRoYCwgd2UgY2FuIHRlc3QgaWYgYW55dGhpbmdcclxuICogY2hhbmdlZCBpbiBhIG5lc3RlZCBzdHJ1Y3R1cmUgYnkgY29tcGFyaW5nIHRoZSBvYmplY3QncyByZWZlcmVuY2UgaW5cclxuICogdGhlIG9sZCBhbmQgbmV3IG9iamVjdCwgc2ltaWxhciB0byBob3cgcnVzc2lhbiBkb2xsIGNhY2hlIGludmFsaWRhdGlvblxyXG4gKiB3b3Jrcy5cclxuICpcclxuICogSW4gZWFybGllciB2ZXJzaW9ucyBvZiB0aGlzIGZ1bmN0aW9uLCB3aGljaCB1c2VkIGNsb25lRGVlcCwgdGhlcmUgd2VyZVxyXG4gKiBpc3N1ZXMgd2hlcmVieSBzZXR0aW5ncyBhIG5lc3RlZCB2YWx1ZSB3b3VsZCBtdXRhdGUgdGhlIHBhcmVudFxyXG4gKiBpbnN0ZWFkIG9mIGNyZWF0aW5nIGEgbmV3IG9iamVjdC4gYGNsb25lYCBhdm9pZHMgdGhhdCBidWcgbWFraW5nIGFcclxuICogc2hhbGxvdyBjb3B5IG9mIHRoZSBvYmplY3RzIGFsb25nIHRoZSB1cGRhdGUgcGF0aFxyXG4gKiBzbyBubyBvYmplY3QgaXMgbXV0YXRlZCBpbiBwbGFjZS5cclxuICpcclxuICogQmVmb3JlIGNoYW5naW5nIHRoaXMgZnVuY3Rpb24sIHBsZWFzZSByZWFkIHRocm91Z2ggdGhlIGZvbGxvd2luZ1xyXG4gKiBkaXNjdXNzaW9ucy5cclxuICpcclxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vZGV2ZWxvcGl0L2xpbmtzdGF0ZVxyXG4gKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9qYXJlZHBhbG1lci9mb3JtaWsvcHVsbC8xMjNcclxuICovXG5cbmZ1bmN0aW9uIHNldEluKG9iaiwgcGF0aCwgdmFsdWUpIHtcbiAgdmFyIHJlcyA9IGNsb25lKG9iaik7IC8vIHRoaXMga2VlcHMgaW5oZXJpdGFuY2Ugd2hlbiBvYmogaXMgYSBjbGFzc1xuXG4gIHZhciByZXNWYWwgPSByZXM7XG4gIHZhciBpID0gMDtcbiAgdmFyIHBhdGhBcnJheSA9IHRvUGF0aChwYXRoKTtcblxuICBmb3IgKDsgaSA8IHBhdGhBcnJheS5sZW5ndGggLSAxOyBpKyspIHtcbiAgICB2YXIgY3VycmVudFBhdGggPSBwYXRoQXJyYXlbaV07XG4gICAgdmFyIGN1cnJlbnRPYmogPSBnZXRJbihvYmosIHBhdGhBcnJheS5zbGljZSgwLCBpICsgMSkpO1xuXG4gICAgaWYgKGN1cnJlbnRPYmogJiYgKGlzT2JqZWN0KGN1cnJlbnRPYmopIHx8IEFycmF5LmlzQXJyYXkoY3VycmVudE9iaikpKSB7XG4gICAgICByZXNWYWwgPSByZXNWYWxbY3VycmVudFBhdGhdID0gY2xvbmUoY3VycmVudE9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBuZXh0UGF0aCA9IHBhdGhBcnJheVtpICsgMV07XG4gICAgICByZXNWYWwgPSByZXNWYWxbY3VycmVudFBhdGhdID0gaXNJbnRlZ2VyKG5leHRQYXRoKSAmJiBOdW1iZXIobmV4dFBhdGgpID49IDAgPyBbXSA6IHt9O1xuICAgIH1cbiAgfSAvLyBSZXR1cm4gb3JpZ2luYWwgb2JqZWN0IGlmIG5ldyB2YWx1ZSBpcyB0aGUgc2FtZSBhcyBjdXJyZW50XG5cblxuICBpZiAoKGkgPT09IDAgPyBvYmogOiByZXNWYWwpW3BhdGhBcnJheVtpXV0gPT09IHZhbHVlKSB7XG4gICAgcmV0dXJuIG9iajtcbiAgfVxuXG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZGVsZXRlIHJlc1ZhbFtwYXRoQXJyYXlbaV1dO1xuICB9IGVsc2Uge1xuICAgIHJlc1ZhbFtwYXRoQXJyYXlbaV1dID0gdmFsdWU7XG4gIH0gLy8gSWYgdGhlIHBhdGggYXJyYXkgaGFzIGEgc2luZ2xlIGVsZW1lbnQsIHRoZSBsb29wIGRpZCBub3QgcnVuLlxuICAvLyBEZWxldGluZyBvbiBgcmVzVmFsYCBoYWQgbm8gZWZmZWN0IGluIHRoaXMgc2NlbmFyaW8sIHNvIHdlIGRlbGV0ZSBvbiB0aGUgcmVzdWx0IGluc3RlYWQuXG5cblxuICBpZiAoaSA9PT0gMCAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgZGVsZXRlIHJlc1twYXRoQXJyYXlbaV1dO1xuICB9XG5cbiAgcmV0dXJuIHJlcztcbn1cbi8qKlxyXG4gKiBSZWN1cnNpdmVseSBhIHNldCB0aGUgc2FtZSB2YWx1ZSBmb3IgYWxsIGtleXMgYW5kIGFycmF5cyBuZXN0ZWQgb2JqZWN0LCBjbG9uaW5nXHJcbiAqIEBwYXJhbSBvYmplY3RcclxuICogQHBhcmFtIHZhbHVlXHJcbiAqIEBwYXJhbSB2aXNpdGVkXHJcbiAqIEBwYXJhbSByZXNwb25zZVxyXG4gKi9cblxuZnVuY3Rpb24gc2V0TmVzdGVkT2JqZWN0VmFsdWVzKG9iamVjdCwgdmFsdWUsIHZpc2l0ZWQsIHJlc3BvbnNlKSB7XG4gIGlmICh2aXNpdGVkID09PSB2b2lkIDApIHtcbiAgICB2aXNpdGVkID0gbmV3IFdlYWtNYXAoKTtcbiAgfVxuXG4gIGlmIChyZXNwb25zZSA9PT0gdm9pZCAwKSB7XG4gICAgcmVzcG9uc2UgPSB7fTtcbiAgfVxuXG4gIGZvciAodmFyIF9pID0gMCwgX09iamVjdCRrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgX2kgPCBfT2JqZWN0JGtleXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgdmFyIGsgPSBfT2JqZWN0JGtleXNbX2ldO1xuICAgIHZhciB2YWwgPSBvYmplY3Rba107XG5cbiAgICBpZiAoaXNPYmplY3QodmFsKSkge1xuICAgICAgaWYgKCF2aXNpdGVkLmdldCh2YWwpKSB7XG4gICAgICAgIHZpc2l0ZWQuc2V0KHZhbCwgdHJ1ZSk7IC8vIEluIG9yZGVyIHRvIGtlZXAgYXJyYXkgdmFsdWVzIGNvbnNpc3RlbnQgZm9yIGJvdGggZG90IHBhdGggIGFuZFxuICAgICAgICAvLyBicmFja2V0IHN5bnRheCwgd2UgbmVlZCB0byBjaGVjayBpZiB0aGlzIGlzIGFuIGFycmF5IHNvIHRoYXRcbiAgICAgICAgLy8gdGhpcyB3aWxsIG91dHB1dCAgeyBmcmllbmRzOiBbdHJ1ZV0gfSBhbmQgbm90IHsgZnJpZW5kczogeyBcIjBcIjogdHJ1ZSB9IH1cblxuICAgICAgICByZXNwb25zZVtrXSA9IEFycmF5LmlzQXJyYXkodmFsKSA/IFtdIDoge307XG4gICAgICAgIHNldE5lc3RlZE9iamVjdFZhbHVlcyh2YWwsIHZhbHVlLCB2aXNpdGVkLCByZXNwb25zZVtrXSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlc3BvbnNlW2tdID0gdmFsdWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3BvbnNlO1xufVxuXG5mdW5jdGlvbiBmb3JtaWtSZWR1Y2VyKHN0YXRlLCBtc2cpIHtcbiAgc3dpdGNoIChtc2cudHlwZSkge1xuICAgIGNhc2UgJ1NFVF9WQUxVRVMnOlxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdGF0ZSwge1xuICAgICAgICB2YWx1ZXM6IG1zZy5wYXlsb2FkXG4gICAgICB9KTtcblxuICAgIGNhc2UgJ1NFVF9UT1VDSEVEJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgdG91Y2hlZDogbXNnLnBheWxvYWRcbiAgICAgIH0pO1xuXG4gICAgY2FzZSAnU0VUX0VSUk9SUyc6XG4gICAgICBpZiAoaXNFcXVhbChzdGF0ZS5lcnJvcnMsIG1zZy5wYXlsb2FkKSkge1xuICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgZXJyb3JzOiBtc2cucGF5bG9hZFxuICAgICAgfSk7XG5cbiAgICBjYXNlICdTRVRfU1RBVFVTJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgc3RhdHVzOiBtc2cucGF5bG9hZFxuICAgICAgfSk7XG5cbiAgICBjYXNlICdTRVRfSVNTVUJNSVRUSU5HJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgaXNTdWJtaXR0aW5nOiBtc2cucGF5bG9hZFxuICAgICAgfSk7XG5cbiAgICBjYXNlICdTRVRfSVNWQUxJREFUSU5HJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgaXNWYWxpZGF0aW5nOiBtc2cucGF5bG9hZFxuICAgICAgfSk7XG5cbiAgICBjYXNlICdTRVRfRklFTERfVkFMVUUnOlxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdGF0ZSwge1xuICAgICAgICB2YWx1ZXM6IHNldEluKHN0YXRlLnZhbHVlcywgbXNnLnBheWxvYWQuZmllbGQsIG1zZy5wYXlsb2FkLnZhbHVlKVxuICAgICAgfSk7XG5cbiAgICBjYXNlICdTRVRfRklFTERfVE9VQ0hFRCc6XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHN0YXRlLCB7XG4gICAgICAgIHRvdWNoZWQ6IHNldEluKHN0YXRlLnRvdWNoZWQsIG1zZy5wYXlsb2FkLmZpZWxkLCBtc2cucGF5bG9hZC52YWx1ZSlcbiAgICAgIH0pO1xuXG4gICAgY2FzZSAnU0VUX0ZJRUxEX0VSUk9SJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgZXJyb3JzOiBzZXRJbihzdGF0ZS5lcnJvcnMsIG1zZy5wYXlsb2FkLmZpZWxkLCBtc2cucGF5bG9hZC52YWx1ZSlcbiAgICAgIH0pO1xuXG4gICAgY2FzZSAnUkVTRVRfRk9STSc6XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHN0YXRlLCBtc2cucGF5bG9hZCk7XG5cbiAgICBjYXNlICdTRVRfRk9STUlLX1NUQVRFJzpcbiAgICAgIHJldHVybiBtc2cucGF5bG9hZChzdGF0ZSk7XG5cbiAgICBjYXNlICdTVUJNSVRfQVRURU1QVCc6XG4gICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHN0YXRlLCB7XG4gICAgICAgIHRvdWNoZWQ6IHNldE5lc3RlZE9iamVjdFZhbHVlcyhzdGF0ZS52YWx1ZXMsIHRydWUpLFxuICAgICAgICBpc1N1Ym1pdHRpbmc6IHRydWUsXG4gICAgICAgIHN1Ym1pdENvdW50OiBzdGF0ZS5zdWJtaXRDb3VudCArIDFcbiAgICAgIH0pO1xuXG4gICAgY2FzZSAnU1VCTUlUX0ZBSUxVUkUnOlxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdGF0ZSwge1xuICAgICAgICBpc1N1Ym1pdHRpbmc6IGZhbHNlXG4gICAgICB9KTtcblxuICAgIGNhc2UgJ1NVQk1JVF9TVUNDRVNTJzpcbiAgICAgIHJldHVybiBfZXh0ZW5kcyh7fSwgc3RhdGUsIHtcbiAgICAgICAgaXNTdWJtaXR0aW5nOiBmYWxzZVxuICAgICAgfSk7XG5cbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHN0YXRlO1xuICB9XG59IC8vIEluaXRpYWwgZW1wdHkgc3RhdGVzIC8vIG9iamVjdHNcblxuXG52YXIgZW1wdHlFcnJvcnMgPSB7fTtcbnZhciBlbXB0eVRvdWNoZWQgPSB7fTtcbmZ1bmN0aW9uIHVzZUZvcm1payhfcmVmKSB7XG4gIHZhciBfcmVmJHZhbGlkYXRlT25DaGFuZ2UgPSBfcmVmLnZhbGlkYXRlT25DaGFuZ2UsXG4gICAgICB2YWxpZGF0ZU9uQ2hhbmdlID0gX3JlZiR2YWxpZGF0ZU9uQ2hhbmdlID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR2YWxpZGF0ZU9uQ2hhbmdlLFxuICAgICAgX3JlZiR2YWxpZGF0ZU9uQmx1ciA9IF9yZWYudmFsaWRhdGVPbkJsdXIsXG4gICAgICB2YWxpZGF0ZU9uQmx1ciA9IF9yZWYkdmFsaWRhdGVPbkJsdXIgPT09IHZvaWQgMCA/IHRydWUgOiBfcmVmJHZhbGlkYXRlT25CbHVyLFxuICAgICAgX3JlZiR2YWxpZGF0ZU9uTW91bnQgPSBfcmVmLnZhbGlkYXRlT25Nb3VudCxcbiAgICAgIHZhbGlkYXRlT25Nb3VudCA9IF9yZWYkdmFsaWRhdGVPbk1vdW50ID09PSB2b2lkIDAgPyBmYWxzZSA6IF9yZWYkdmFsaWRhdGVPbk1vdW50LFxuICAgICAgaXNJbml0aWFsVmFsaWQgPSBfcmVmLmlzSW5pdGlhbFZhbGlkLFxuICAgICAgX3JlZiRlbmFibGVSZWluaXRpYWxpID0gX3JlZi5lbmFibGVSZWluaXRpYWxpemUsXG4gICAgICBlbmFibGVSZWluaXRpYWxpemUgPSBfcmVmJGVuYWJsZVJlaW5pdGlhbGkgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRlbmFibGVSZWluaXRpYWxpLFxuICAgICAgb25TdWJtaXQgPSBfcmVmLm9uU3VibWl0LFxuICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcInZhbGlkYXRlT25DaGFuZ2VcIiwgXCJ2YWxpZGF0ZU9uQmx1clwiLCBcInZhbGlkYXRlT25Nb3VudFwiLCBcImlzSW5pdGlhbFZhbGlkXCIsIFwiZW5hYmxlUmVpbml0aWFsaXplXCIsIFwib25TdWJtaXRcIl0pO1xuXG4gIHZhciBwcm9wcyA9IF9leHRlbmRzKHtcbiAgICB2YWxpZGF0ZU9uQ2hhbmdlOiB2YWxpZGF0ZU9uQ2hhbmdlLFxuICAgIHZhbGlkYXRlT25CbHVyOiB2YWxpZGF0ZU9uQmx1cixcbiAgICB2YWxpZGF0ZU9uTW91bnQ6IHZhbGlkYXRlT25Nb3VudCxcbiAgICBvblN1Ym1pdDogb25TdWJtaXRcbiAgfSwgcmVzdCk7XG5cbiAgdmFyIGluaXRpYWxWYWx1ZXMgPSB1c2VSZWYocHJvcHMuaW5pdGlhbFZhbHVlcyk7XG4gIHZhciBpbml0aWFsRXJyb3JzID0gdXNlUmVmKHByb3BzLmluaXRpYWxFcnJvcnMgfHwgZW1wdHlFcnJvcnMpO1xuICB2YXIgaW5pdGlhbFRvdWNoZWQgPSB1c2VSZWYocHJvcHMuaW5pdGlhbFRvdWNoZWQgfHwgZW1wdHlUb3VjaGVkKTtcbiAgdmFyIGluaXRpYWxTdGF0dXMgPSB1c2VSZWYocHJvcHMuaW5pdGlhbFN0YXR1cyk7XG4gIHZhciBpc01vdW50ZWQgPSB1c2VSZWYoZmFsc2UpO1xuICB2YXIgZmllbGRSZWdpc3RyeSA9IHVzZVJlZih7fSk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9ydWxlcy1vZi1ob29rc1xuICAgIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgICAhKHR5cGVvZiBpc0luaXRpYWxWYWxpZCA9PT0gJ3VuZGVmaW5lZCcpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnaXNJbml0aWFsVmFsaWQgaGFzIGJlZW4gZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGZ1dHVyZSB2ZXJzaW9ucyBvZiBGb3JtaWsuIFBsZWFzZSB1c2UgaW5pdGlhbEVycm9ycyBvciB2YWxpZGF0ZU9uTW91bnQgaW5zdGVhZC4nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgIH0sIFtdKTtcbiAgfVxuXG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaXNNb3VudGVkLmN1cnJlbnQgPSB0cnVlO1xuICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICBpc01vdW50ZWQuY3VycmVudCA9IGZhbHNlO1xuICAgIH07XG4gIH0sIFtdKTtcblxuICB2YXIgX1JlYWN0JHVzZVN0YXRlID0gdXNlU3RhdGUoMCksXG4gICAgICBzZXRJdGVyYXRpb24gPSBfUmVhY3QkdXNlU3RhdGVbMV07XG5cbiAgdmFyIHN0YXRlUmVmID0gdXNlUmVmKHtcbiAgICB2YWx1ZXM6IHByb3BzLmluaXRpYWxWYWx1ZXMsXG4gICAgZXJyb3JzOiBwcm9wcy5pbml0aWFsRXJyb3JzIHx8IGVtcHR5RXJyb3JzLFxuICAgIHRvdWNoZWQ6IHByb3BzLmluaXRpYWxUb3VjaGVkIHx8IGVtcHR5VG91Y2hlZCxcbiAgICBzdGF0dXM6IHByb3BzLmluaXRpYWxTdGF0dXMsXG4gICAgaXNTdWJtaXR0aW5nOiBmYWxzZSxcbiAgICBpc1ZhbGlkYXRpbmc6IGZhbHNlLFxuICAgIHN1Ym1pdENvdW50OiAwXG4gIH0pO1xuICB2YXIgc3RhdGUgPSBzdGF0ZVJlZi5jdXJyZW50O1xuICB2YXIgZGlzcGF0Y2ggPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoYWN0aW9uKSB7XG4gICAgdmFyIHByZXYgPSBzdGF0ZVJlZi5jdXJyZW50O1xuICAgIHN0YXRlUmVmLmN1cnJlbnQgPSBmb3JtaWtSZWR1Y2VyKHByZXYsIGFjdGlvbik7IC8vIGZvcmNlIHJlcmVuZGVyXG5cbiAgICBpZiAocHJldiAhPT0gc3RhdGVSZWYuY3VycmVudCkgc2V0SXRlcmF0aW9uKGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4geCArIDE7XG4gICAgfSk7XG4gIH0sIFtdKTtcbiAgdmFyIHJ1blZhbGlkYXRlSGFuZGxlciA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uICh2YWx1ZXMsIGZpZWxkKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHZhciBtYXliZVByb21pc2VkRXJyb3JzID0gcHJvcHMudmFsaWRhdGUodmFsdWVzLCBmaWVsZCk7XG5cbiAgICAgIGlmIChtYXliZVByb21pc2VkRXJyb3JzID09IG51bGwpIHtcbiAgICAgICAgLy8gdXNlIGxvb3NlIG51bGwgY2hlY2sgaGVyZSBvbiBwdXJwb3NlXG4gICAgICAgIHJlc29sdmUoZW1wdHlFcnJvcnMpO1xuICAgICAgfSBlbHNlIGlmIChpc1Byb21pc2UobWF5YmVQcm9taXNlZEVycm9ycykpIHtcbiAgICAgICAgbWF5YmVQcm9taXNlZEVycm9ycy50aGVuKGZ1bmN0aW9uIChlcnJvcnMpIHtcbiAgICAgICAgICByZXNvbHZlKGVycm9ycyB8fCBlbXB0eUVycm9ycyk7XG4gICAgICAgIH0sIGZ1bmN0aW9uIChhY3R1YWxFeGNlcHRpb24pIHtcbiAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZzogQW4gdW5oYW5kbGVkIGVycm9yIHdhcyBjYXVnaHQgZHVyaW5nIHZhbGlkYXRpb24gaW4gPEZvcm1payB2YWxpZGF0ZSAvPlwiLCBhY3R1YWxFeGNlcHRpb24pO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJlamVjdChhY3R1YWxFeGNlcHRpb24pO1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJlc29sdmUobWF5YmVQcm9taXNlZEVycm9ycyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0sIFtwcm9wcy52YWxpZGF0ZV0pO1xuICAvKipcclxuICAgKiBSdW4gdmFsaWRhdGlvbiBhZ2FpbnN0IGEgWXVwIHNjaGVtYSBhbmQgb3B0aW9uYWxseSBydW4gYSBmdW5jdGlvbiBpZiBzdWNjZXNzZnVsXHJcbiAgICovXG5cbiAgdmFyIHJ1blZhbGlkYXRpb25TY2hlbWEgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAodmFsdWVzLCBmaWVsZCkge1xuICAgIHZhciB2YWxpZGF0aW9uU2NoZW1hID0gcHJvcHMudmFsaWRhdGlvblNjaGVtYTtcbiAgICB2YXIgc2NoZW1hID0gaXNGdW5jdGlvbih2YWxpZGF0aW9uU2NoZW1hKSA/IHZhbGlkYXRpb25TY2hlbWEoZmllbGQpIDogdmFsaWRhdGlvblNjaGVtYTtcbiAgICB2YXIgcHJvbWlzZSA9IGZpZWxkICYmIHNjaGVtYS52YWxpZGF0ZUF0ID8gc2NoZW1hLnZhbGlkYXRlQXQoZmllbGQsIHZhbHVlcykgOiB2YWxpZGF0ZVl1cFNjaGVtYSh2YWx1ZXMsIHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgIHByb21pc2UudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJlc29sdmUoZW1wdHlFcnJvcnMpO1xuICAgICAgfSwgZnVuY3Rpb24gKGVycikge1xuICAgICAgICAvLyBZdXAgd2lsbCB0aHJvdyBhIHZhbGlkYXRpb24gZXJyb3IgaWYgdmFsaWRhdGlvbiBmYWlscy4gV2UgY2F0Y2ggdGhvc2UgYW5kXG4gICAgICAgIC8vIHJlc29sdmUgdGhlbSBpbnRvIEZvcm1payBlcnJvcnMuIFdlIGNhbiBzbmlmZiBpZiBzb21ldGhpbmcgaXMgYSBZdXAgZXJyb3JcbiAgICAgICAgLy8gYnkgY2hlY2tpbmcgZXJyb3IubmFtZS5cbiAgICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZW5zZS95dXAjdmFsaWRhdGlvbmVycm9yZXJyb3JzLXN0cmluZy0tYXJyYXlzdHJpbmctdmFsdWUtYW55LXBhdGgtc3RyaW5nXG4gICAgICAgIGlmIChlcnIubmFtZSA9PT0gJ1ZhbGlkYXRpb25FcnJvcicpIHtcbiAgICAgICAgICByZXNvbHZlKHl1cFRvRm9ybUVycm9ycyhlcnIpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBXZSB0aHJvdyBhbnkgb3RoZXIgZXJyb3JzXG4gICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihcIldhcm5pbmc6IEFuIHVuaGFuZGxlZCBlcnJvciB3YXMgY2F1Z2h0IGR1cmluZyB2YWxpZGF0aW9uIGluIDxGb3JtaWsgdmFsaWRhdGlvblNjaGVtYSAvPlwiLCBlcnIpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSwgW3Byb3BzLnZhbGlkYXRpb25TY2hlbWFdKTtcbiAgdmFyIHJ1blNpbmdsZUZpZWxkTGV2ZWxWYWxpZGF0aW9uID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKGZpZWxkLCB2YWx1ZSkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xuICAgICAgcmV0dXJuIHJlc29sdmUoZmllbGRSZWdpc3RyeS5jdXJyZW50W2ZpZWxkXS52YWxpZGF0ZSh2YWx1ZSkpO1xuICAgIH0pO1xuICB9LCBbXSk7XG4gIHZhciBydW5GaWVsZExldmVsVmFsaWRhdGlvbnMgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAodmFsdWVzKSB7XG4gICAgdmFyIGZpZWxkS2V5c1dpdGhWYWxpZGF0aW9uID0gT2JqZWN0LmtleXMoZmllbGRSZWdpc3RyeS5jdXJyZW50KS5maWx0ZXIoZnVuY3Rpb24gKGYpIHtcbiAgICAgIHJldHVybiBpc0Z1bmN0aW9uKGZpZWxkUmVnaXN0cnkuY3VycmVudFtmXS52YWxpZGF0ZSk7XG4gICAgfSk7IC8vIENvbnN0cnVjdCBhbiBhcnJheSB3aXRoIGFsbCBvZiB0aGUgZmllbGQgdmFsaWRhdGlvbiBmdW5jdGlvbnNcblxuICAgIHZhciBmaWVsZFZhbGlkYXRpb25zID0gZmllbGRLZXlzV2l0aFZhbGlkYXRpb24ubGVuZ3RoID4gMCA/IGZpZWxkS2V5c1dpdGhWYWxpZGF0aW9uLm1hcChmdW5jdGlvbiAoZikge1xuICAgICAgcmV0dXJuIHJ1blNpbmdsZUZpZWxkTGV2ZWxWYWxpZGF0aW9uKGYsIGdldEluKHZhbHVlcywgZikpO1xuICAgIH0pIDogW1Byb21pc2UucmVzb2x2ZSgnRE9fTk9UX0RFTEVURV9ZT1VfV0lMTF9CRV9GSVJFRCcpXTsgLy8gdXNlIHNwZWNpYWwgY2FzZSA7KVxuXG4gICAgcmV0dXJuIFByb21pc2UuYWxsKGZpZWxkVmFsaWRhdGlvbnMpLnRoZW4oZnVuY3Rpb24gKGZpZWxkRXJyb3JzTGlzdCkge1xuICAgICAgcmV0dXJuIGZpZWxkRXJyb3JzTGlzdC5yZWR1Y2UoZnVuY3Rpb24gKHByZXYsIGN1cnIsIGluZGV4KSB7XG4gICAgICAgIGlmIChjdXJyID09PSAnRE9fTk9UX0RFTEVURV9ZT1VfV0lMTF9CRV9GSVJFRCcpIHtcbiAgICAgICAgICByZXR1cm4gcHJldjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjdXJyKSB7XG4gICAgICAgICAgcHJldiA9IHNldEluKHByZXYsIGZpZWxkS2V5c1dpdGhWYWxpZGF0aW9uW2luZGV4XSwgY3Vycik7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcHJldjtcbiAgICAgIH0sIHt9KTtcbiAgICB9KTtcbiAgfSwgW3J1blNpbmdsZUZpZWxkTGV2ZWxWYWxpZGF0aW9uXSk7IC8vIFJ1biBhbGwgdmFsaWRhdGlvbnMgYW5kIHJldHVybiB0aGUgcmVzdWx0XG5cbiAgdmFyIHJ1bkFsbFZhbGlkYXRpb25zID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKHZhbHVlcykge1xuICAgIHJldHVybiBQcm9taXNlLmFsbChbcnVuRmllbGRMZXZlbFZhbGlkYXRpb25zKHZhbHVlcyksIHByb3BzLnZhbGlkYXRpb25TY2hlbWEgPyBydW5WYWxpZGF0aW9uU2NoZW1hKHZhbHVlcykgOiB7fSwgcHJvcHMudmFsaWRhdGUgPyBydW5WYWxpZGF0ZUhhbmRsZXIodmFsdWVzKSA6IHt9XSkudGhlbihmdW5jdGlvbiAoX3JlZjIpIHtcbiAgICAgIHZhciBmaWVsZEVycm9ycyA9IF9yZWYyWzBdLFxuICAgICAgICAgIHNjaGVtYUVycm9ycyA9IF9yZWYyWzFdLFxuICAgICAgICAgIHZhbGlkYXRlRXJyb3JzID0gX3JlZjJbMl07XG4gICAgICB2YXIgY29tYmluZWRFcnJvcnMgPSBkZWVwbWVyZ2UuYWxsKFtmaWVsZEVycm9ycywgc2NoZW1hRXJyb3JzLCB2YWxpZGF0ZUVycm9yc10sIHtcbiAgICAgICAgYXJyYXlNZXJnZTogYXJyYXlNZXJnZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gY29tYmluZWRFcnJvcnM7XG4gICAgfSk7XG4gIH0sIFtwcm9wcy52YWxpZGF0ZSwgcHJvcHMudmFsaWRhdGlvblNjaGVtYSwgcnVuRmllbGRMZXZlbFZhbGlkYXRpb25zLCBydW5WYWxpZGF0ZUhhbmRsZXIsIHJ1blZhbGlkYXRpb25TY2hlbWFdKTsgLy8gUnVuIGFsbCB2YWxpZGF0aW9ucyBtZXRob2RzIGFuZCB1cGRhdGUgc3RhdGUgYWNjb3JkaW5nbHlcblxuICB2YXIgdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eSA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKHZhbHVlcykge1xuICAgIGlmICh2YWx1ZXMgPT09IHZvaWQgMCkge1xuICAgICAgdmFsdWVzID0gc3RhdGUudmFsdWVzO1xuICAgIH1cblxuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6ICdTRVRfSVNWQUxJREFUSU5HJyxcbiAgICAgIHBheWxvYWQ6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gcnVuQWxsVmFsaWRhdGlvbnModmFsdWVzKS50aGVuKGZ1bmN0aW9uIChjb21iaW5lZEVycm9ycykge1xuICAgICAgaWYgKCEhaXNNb3VudGVkLmN1cnJlbnQpIHtcbiAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdTRVRfSVNWQUxJREFUSU5HJyxcbiAgICAgICAgICBwYXlsb2FkOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdTRVRfRVJST1JTJyxcbiAgICAgICAgICBwYXlsb2FkOiBjb21iaW5lZEVycm9yc1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbWJpbmVkRXJyb3JzO1xuICAgIH0pO1xuICB9KTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodmFsaWRhdGVPbk1vdW50ICYmIGlzTW91bnRlZC5jdXJyZW50ID09PSB0cnVlICYmIGlzRXF1YWwoaW5pdGlhbFZhbHVlcy5jdXJyZW50LCBwcm9wcy5pbml0aWFsVmFsdWVzKSkge1xuICAgICAgdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eShpbml0aWFsVmFsdWVzLmN1cnJlbnQpO1xuICAgIH1cbiAgfSwgW3ZhbGlkYXRlT25Nb3VudCwgdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eV0pO1xuICB2YXIgcmVzZXRGb3JtID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKG5leHRTdGF0ZSkge1xuICAgIHZhciB2YWx1ZXMgPSBuZXh0U3RhdGUgJiYgbmV4dFN0YXRlLnZhbHVlcyA/IG5leHRTdGF0ZS52YWx1ZXMgOiBpbml0aWFsVmFsdWVzLmN1cnJlbnQ7XG4gICAgdmFyIGVycm9ycyA9IG5leHRTdGF0ZSAmJiBuZXh0U3RhdGUuZXJyb3JzID8gbmV4dFN0YXRlLmVycm9ycyA6IGluaXRpYWxFcnJvcnMuY3VycmVudCA/IGluaXRpYWxFcnJvcnMuY3VycmVudCA6IHByb3BzLmluaXRpYWxFcnJvcnMgfHwge307XG4gICAgdmFyIHRvdWNoZWQgPSBuZXh0U3RhdGUgJiYgbmV4dFN0YXRlLnRvdWNoZWQgPyBuZXh0U3RhdGUudG91Y2hlZCA6IGluaXRpYWxUb3VjaGVkLmN1cnJlbnQgPyBpbml0aWFsVG91Y2hlZC5jdXJyZW50IDogcHJvcHMuaW5pdGlhbFRvdWNoZWQgfHwge307XG4gICAgdmFyIHN0YXR1cyA9IG5leHRTdGF0ZSAmJiBuZXh0U3RhdGUuc3RhdHVzID8gbmV4dFN0YXRlLnN0YXR1cyA6IGluaXRpYWxTdGF0dXMuY3VycmVudCA/IGluaXRpYWxTdGF0dXMuY3VycmVudCA6IHByb3BzLmluaXRpYWxTdGF0dXM7XG4gICAgaW5pdGlhbFZhbHVlcy5jdXJyZW50ID0gdmFsdWVzO1xuICAgIGluaXRpYWxFcnJvcnMuY3VycmVudCA9IGVycm9ycztcbiAgICBpbml0aWFsVG91Y2hlZC5jdXJyZW50ID0gdG91Y2hlZDtcbiAgICBpbml0aWFsU3RhdHVzLmN1cnJlbnQgPSBzdGF0dXM7XG5cbiAgICB2YXIgZGlzcGF0Y2hGbiA9IGZ1bmN0aW9uIGRpc3BhdGNoRm4oKSB7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6ICdSRVNFVF9GT1JNJyxcbiAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgIGlzU3VibWl0dGluZzogISFuZXh0U3RhdGUgJiYgISFuZXh0U3RhdGUuaXNTdWJtaXR0aW5nLFxuICAgICAgICAgIGVycm9yczogZXJyb3JzLFxuICAgICAgICAgIHRvdWNoZWQ6IHRvdWNoZWQsXG4gICAgICAgICAgc3RhdHVzOiBzdGF0dXMsXG4gICAgICAgICAgdmFsdWVzOiB2YWx1ZXMsXG4gICAgICAgICAgaXNWYWxpZGF0aW5nOiAhIW5leHRTdGF0ZSAmJiAhIW5leHRTdGF0ZS5pc1ZhbGlkYXRpbmcsXG4gICAgICAgICAgc3VibWl0Q291bnQ6ICEhbmV4dFN0YXRlICYmICEhbmV4dFN0YXRlLnN1Ym1pdENvdW50ICYmIHR5cGVvZiBuZXh0U3RhdGUuc3VibWl0Q291bnQgPT09ICdudW1iZXInID8gbmV4dFN0YXRlLnN1Ym1pdENvdW50IDogMFxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9O1xuXG4gICAgaWYgKHByb3BzLm9uUmVzZXQpIHtcbiAgICAgIHZhciBtYXliZVByb21pc2VkT25SZXNldCA9IHByb3BzLm9uUmVzZXQoc3RhdGUudmFsdWVzLCBpbXBlcmF0aXZlTWV0aG9kcyk7XG5cbiAgICAgIGlmIChpc1Byb21pc2UobWF5YmVQcm9taXNlZE9uUmVzZXQpKSB7XG4gICAgICAgIG1heWJlUHJvbWlzZWRPblJlc2V0LnRoZW4oZGlzcGF0Y2hGbik7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXNwYXRjaEZuKCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGRpc3BhdGNoRm4oKTtcbiAgICB9XG4gIH0sIFtwcm9wcy5pbml0aWFsRXJyb3JzLCBwcm9wcy5pbml0aWFsU3RhdHVzLCBwcm9wcy5pbml0aWFsVG91Y2hlZCwgcHJvcHMub25SZXNldF0pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChpc01vdW50ZWQuY3VycmVudCA9PT0gdHJ1ZSAmJiAhaXNFcXVhbChpbml0aWFsVmFsdWVzLmN1cnJlbnQsIHByb3BzLmluaXRpYWxWYWx1ZXMpKSB7XG4gICAgICBpZiAoZW5hYmxlUmVpbml0aWFsaXplKSB7XG4gICAgICAgIGluaXRpYWxWYWx1ZXMuY3VycmVudCA9IHByb3BzLmluaXRpYWxWYWx1ZXM7XG4gICAgICAgIHJlc2V0Rm9ybSgpO1xuXG4gICAgICAgIGlmICh2YWxpZGF0ZU9uTW91bnQpIHtcbiAgICAgICAgICB2YWxpZGF0ZUZvcm1XaXRoSGlnaFByaW9yaXR5KGluaXRpYWxWYWx1ZXMuY3VycmVudCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0sIFtlbmFibGVSZWluaXRpYWxpemUsIHByb3BzLmluaXRpYWxWYWx1ZXMsIHJlc2V0Rm9ybSwgdmFsaWRhdGVPbk1vdW50LCB2YWxpZGF0ZUZvcm1XaXRoSGlnaFByaW9yaXR5XSk7XG4gIHVzZUVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgaWYgKGVuYWJsZVJlaW5pdGlhbGl6ZSAmJiBpc01vdW50ZWQuY3VycmVudCA9PT0gdHJ1ZSAmJiAhaXNFcXVhbChpbml0aWFsRXJyb3JzLmN1cnJlbnQsIHByb3BzLmluaXRpYWxFcnJvcnMpKSB7XG4gICAgICBpbml0aWFsRXJyb3JzLmN1cnJlbnQgPSBwcm9wcy5pbml0aWFsRXJyb3JzIHx8IGVtcHR5RXJyb3JzO1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU0VUX0VSUk9SUycsXG4gICAgICAgIHBheWxvYWQ6IHByb3BzLmluaXRpYWxFcnJvcnMgfHwgZW1wdHlFcnJvcnNcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2VuYWJsZVJlaW5pdGlhbGl6ZSwgcHJvcHMuaW5pdGlhbEVycm9yc10pO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChlbmFibGVSZWluaXRpYWxpemUgJiYgaXNNb3VudGVkLmN1cnJlbnQgPT09IHRydWUgJiYgIWlzRXF1YWwoaW5pdGlhbFRvdWNoZWQuY3VycmVudCwgcHJvcHMuaW5pdGlhbFRvdWNoZWQpKSB7XG4gICAgICBpbml0aWFsVG91Y2hlZC5jdXJyZW50ID0gcHJvcHMuaW5pdGlhbFRvdWNoZWQgfHwgZW1wdHlUb3VjaGVkO1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU0VUX1RPVUNIRUQnLFxuICAgICAgICBwYXlsb2FkOiBwcm9wcy5pbml0aWFsVG91Y2hlZCB8fCBlbXB0eVRvdWNoZWRcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwgW2VuYWJsZVJlaW5pdGlhbGl6ZSwgcHJvcHMuaW5pdGlhbFRvdWNoZWRdKTtcbiAgdXNlRWZmZWN0KGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoZW5hYmxlUmVpbml0aWFsaXplICYmIGlzTW91bnRlZC5jdXJyZW50ID09PSB0cnVlICYmICFpc0VxdWFsKGluaXRpYWxTdGF0dXMuY3VycmVudCwgcHJvcHMuaW5pdGlhbFN0YXR1cykpIHtcbiAgICAgIGluaXRpYWxTdGF0dXMuY3VycmVudCA9IHByb3BzLmluaXRpYWxTdGF0dXM7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6ICdTRVRfU1RBVFVTJyxcbiAgICAgICAgcGF5bG9hZDogcHJvcHMuaW5pdGlhbFN0YXR1c1xuICAgICAgfSk7XG4gICAgfVxuICB9LCBbZW5hYmxlUmVpbml0aWFsaXplLCBwcm9wcy5pbml0aWFsU3RhdHVzLCBwcm9wcy5pbml0aWFsVG91Y2hlZF0pO1xuICB2YXIgdmFsaWRhdGVGaWVsZCA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKG5hbWUpIHtcbiAgICAvLyBUaGlzIHdpbGwgZWZmaWNpZW50bHkgdmFsaWRhdGUgYSBzaW5nbGUgZmllbGQgYnkgYXZvaWRpbmcgc3RhdGVcbiAgICAvLyBjaGFuZ2VzIGlmIHRoZSB2YWxpZGF0aW9uIGZ1bmN0aW9uIGlzIHN5bmNocm9ub3VzLiBJdCdzIGRpZmZlcmVudCBmcm9tXG4gICAgLy8gd2hhdCBpcyBjYWxsZWQgd2hlbiB1c2luZyB2YWxpZGF0ZUZvcm0uXG4gICAgaWYgKGZpZWxkUmVnaXN0cnkuY3VycmVudFtuYW1lXSAmJiBpc0Z1bmN0aW9uKGZpZWxkUmVnaXN0cnkuY3VycmVudFtuYW1lXS52YWxpZGF0ZSkpIHtcbiAgICAgIHZhciB2YWx1ZSA9IGdldEluKHN0YXRlLnZhbHVlcywgbmFtZSk7XG4gICAgICB2YXIgbWF5YmVQcm9taXNlID0gZmllbGRSZWdpc3RyeS5jdXJyZW50W25hbWVdLnZhbGlkYXRlKHZhbHVlKTtcblxuICAgICAgaWYgKGlzUHJvbWlzZShtYXliZVByb21pc2UpKSB7XG4gICAgICAgIC8vIE9ubHkgZmxpcCBpc1ZhbGlkYXRpbmcgaWYgdGhlIGZ1bmN0aW9uIGlzIGFzeW5jLlxuICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ1NFVF9JU1ZBTElEQVRJTkcnLFxuICAgICAgICAgIHBheWxvYWQ6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBtYXliZVByb21pc2UudGhlbihmdW5jdGlvbiAoeCkge1xuICAgICAgICAgIHJldHVybiB4O1xuICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdTRVRfRklFTERfRVJST1InLFxuICAgICAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgICAgICBmaWVsZDogbmFtZSxcbiAgICAgICAgICAgICAgdmFsdWU6IGVycm9yXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ1NFVF9JU1ZBTElEQVRJTkcnLFxuICAgICAgICAgICAgcGF5bG9hZDogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ1NFVF9GSUVMRF9FUlJPUicsXG4gICAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgICAgZmllbGQ6IG5hbWUsXG4gICAgICAgICAgICB2YWx1ZTogbWF5YmVQcm9taXNlXG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShtYXliZVByb21pc2UpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAocHJvcHMudmFsaWRhdGlvblNjaGVtYSkge1xuICAgICAgZGlzcGF0Y2goe1xuICAgICAgICB0eXBlOiAnU0VUX0lTVkFMSURBVElORycsXG4gICAgICAgIHBheWxvYWQ6IHRydWVcbiAgICAgIH0pO1xuICAgICAgcmV0dXJuIHJ1blZhbGlkYXRpb25TY2hlbWEoc3RhdGUudmFsdWVzLCBuYW1lKS50aGVuKGZ1bmN0aW9uICh4KSB7XG4gICAgICAgIHJldHVybiB4O1xuICAgICAgfSkudGhlbihmdW5jdGlvbiAoZXJyb3IpIHtcbiAgICAgICAgZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdTRVRfRklFTERfRVJST1InLFxuICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgIGZpZWxkOiBuYW1lLFxuICAgICAgICAgICAgdmFsdWU6IGdldEluKGVycm9yLCBuYW1lKVxuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiAnU0VUX0lTVkFMSURBVElORycsXG4gICAgICAgICAgcGF5bG9hZDogZmFsc2VcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH0pO1xuICB2YXIgcmVnaXN0ZXJGaWVsZCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChuYW1lLCBfcmVmMykge1xuICAgIHZhciB2YWxpZGF0ZSA9IF9yZWYzLnZhbGlkYXRlO1xuICAgIGZpZWxkUmVnaXN0cnkuY3VycmVudFtuYW1lXSA9IHtcbiAgICAgIHZhbGlkYXRlOiB2YWxpZGF0ZVxuICAgIH07XG4gIH0sIFtdKTtcbiAgdmFyIHVucmVnaXN0ZXJGaWVsZCA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgZGVsZXRlIGZpZWxkUmVnaXN0cnkuY3VycmVudFtuYW1lXTtcbiAgfSwgW10pO1xuICB2YXIgc2V0VG91Y2hlZCA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKHRvdWNoZWQsIHNob3VsZFZhbGlkYXRlKSB7XG4gICAgZGlzcGF0Y2goe1xuICAgICAgdHlwZTogJ1NFVF9UT1VDSEVEJyxcbiAgICAgIHBheWxvYWQ6IHRvdWNoZWRcbiAgICB9KTtcbiAgICB2YXIgd2lsbFZhbGlkYXRlID0gc2hvdWxkVmFsaWRhdGUgPT09IHVuZGVmaW5lZCA/IHZhbGlkYXRlT25CbHVyIDogc2hvdWxkVmFsaWRhdGU7XG4gICAgcmV0dXJuIHdpbGxWYWxpZGF0ZSA/IHZhbGlkYXRlRm9ybVdpdGhIaWdoUHJpb3JpdHkoc3RhdGUudmFsdWVzKSA6IFByb21pc2UucmVzb2x2ZSgpO1xuICB9KTtcbiAgdmFyIHNldEVycm9ycyA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChlcnJvcnMpIHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiAnU0VUX0VSUk9SUycsXG4gICAgICBwYXlsb2FkOiBlcnJvcnNcbiAgICB9KTtcbiAgfSwgW10pO1xuICB2YXIgc2V0VmFsdWVzID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAodmFsdWVzLCBzaG91bGRWYWxpZGF0ZSkge1xuICAgIHZhciByZXNvbHZlZFZhbHVlcyA9IGlzRnVuY3Rpb24odmFsdWVzKSA/IHZhbHVlcyhzdGF0ZS52YWx1ZXMpIDogdmFsdWVzO1xuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6ICdTRVRfVkFMVUVTJyxcbiAgICAgIHBheWxvYWQ6IHJlc29sdmVkVmFsdWVzXG4gICAgfSk7XG4gICAgdmFyIHdpbGxWYWxpZGF0ZSA9IHNob3VsZFZhbGlkYXRlID09PSB1bmRlZmluZWQgPyB2YWxpZGF0ZU9uQ2hhbmdlIDogc2hvdWxkVmFsaWRhdGU7XG4gICAgcmV0dXJuIHdpbGxWYWxpZGF0ZSA/IHZhbGlkYXRlRm9ybVdpdGhIaWdoUHJpb3JpdHkocmVzb2x2ZWRWYWx1ZXMpIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH0pO1xuICB2YXIgc2V0RmllbGRFcnJvciA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChmaWVsZCwgdmFsdWUpIHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiAnU0VUX0ZJRUxEX0VSUk9SJyxcbiAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgZmllbGQ6IGZpZWxkLFxuICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgIH1cbiAgICB9KTtcbiAgfSwgW10pO1xuICB2YXIgc2V0RmllbGRWYWx1ZSA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKGZpZWxkLCB2YWx1ZSwgc2hvdWxkVmFsaWRhdGUpIHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiAnU0VUX0ZJRUxEX1ZBTFVFJyxcbiAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgZmllbGQ6IGZpZWxkLFxuICAgICAgICB2YWx1ZTogdmFsdWVcbiAgICAgIH1cbiAgICB9KTtcbiAgICB2YXIgd2lsbFZhbGlkYXRlID0gc2hvdWxkVmFsaWRhdGUgPT09IHVuZGVmaW5lZCA/IHZhbGlkYXRlT25DaGFuZ2UgOiBzaG91bGRWYWxpZGF0ZTtcbiAgICByZXR1cm4gd2lsbFZhbGlkYXRlID8gdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eShzZXRJbihzdGF0ZS52YWx1ZXMsIGZpZWxkLCB2YWx1ZSkpIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH0pO1xuICB2YXIgZXhlY3V0ZUNoYW5nZSA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChldmVudE9yVGV4dFZhbHVlLCBtYXliZVBhdGgpIHtcbiAgICAvLyBCeSBkZWZhdWx0LCBhc3N1bWUgdGhhdCB0aGUgZmlyc3QgYXJndW1lbnQgaXMgYSBzdHJpbmcuIFRoaXMgYWxsb3dzIHVzIHRvIHVzZVxuICAgIC8vIGhhbmRsZUNoYW5nZSB3aXRoIFJlYWN0IE5hdGl2ZSBhbmQgUmVhY3QgTmF0aXZlIFdlYidzIG9uQ2hhbmdlVGV4dCBwcm9wIHdoaWNoXG4gICAgLy8gcHJvdmlkZXMganVzdCB0aGUgdmFsdWUgb2YgdGhlIGlucHV0LlxuICAgIHZhciBmaWVsZCA9IG1heWJlUGF0aDtcbiAgICB2YXIgdmFsID0gZXZlbnRPclRleHRWYWx1ZTtcbiAgICB2YXIgcGFyc2VkOyAvLyBJZiB0aGUgZmlyc3QgYXJndW1lbnQgaXMgbm90IGEgc3RyaW5nIHRob3VnaCwgaXQgaGFzIHRvIGJlIGEgc3ludGhldGljIFJlYWN0IEV2ZW50IChvciBhIGZha2Ugb25lKSxcbiAgICAvLyBzbyB3ZSBoYW5kbGUgbGlrZSB3ZSB3b3VsZCBhIG5vcm1hbCBIVE1MIGNoYW5nZSBldmVudC5cblxuICAgIGlmICghaXNTdHJpbmcoZXZlbnRPclRleHRWYWx1ZSkpIHtcbiAgICAgIC8vIElmIHdlIGNhbiwgcGVyc2lzdCB0aGUgZXZlbnRcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2V2ZW50cy5odG1sI2V2ZW50LXBvb2xpbmdcbiAgICAgIGlmIChldmVudE9yVGV4dFZhbHVlLnBlcnNpc3QpIHtcbiAgICAgICAgZXZlbnRPclRleHRWYWx1ZS5wZXJzaXN0KCk7XG4gICAgICB9XG5cbiAgICAgIHZhciB0YXJnZXQgPSBldmVudE9yVGV4dFZhbHVlLnRhcmdldCA/IGV2ZW50T3JUZXh0VmFsdWUudGFyZ2V0IDogZXZlbnRPclRleHRWYWx1ZS5jdXJyZW50VGFyZ2V0O1xuICAgICAgdmFyIHR5cGUgPSB0YXJnZXQudHlwZSxcbiAgICAgICAgICBuYW1lID0gdGFyZ2V0Lm5hbWUsXG4gICAgICAgICAgaWQgPSB0YXJnZXQuaWQsXG4gICAgICAgICAgdmFsdWUgPSB0YXJnZXQudmFsdWUsXG4gICAgICAgICAgY2hlY2tlZCA9IHRhcmdldC5jaGVja2VkLFxuICAgICAgICAgIG91dGVySFRNTCA9IHRhcmdldC5vdXRlckhUTUwsXG4gICAgICAgICAgb3B0aW9ucyA9IHRhcmdldC5vcHRpb25zLFxuICAgICAgICAgIG11bHRpcGxlID0gdGFyZ2V0Lm11bHRpcGxlO1xuICAgICAgZmllbGQgPSBtYXliZVBhdGggPyBtYXliZVBhdGggOiBuYW1lID8gbmFtZSA6IGlkO1xuXG4gICAgICBpZiAoIWZpZWxkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgICB3YXJuQWJvdXRNaXNzaW5nSWRlbnRpZmllcih7XG4gICAgICAgICAgaHRtbENvbnRlbnQ6IG91dGVySFRNTCxcbiAgICAgICAgICBkb2N1bWVudGF0aW9uQW5jaG9yTGluazogJ2hhbmRsZWNoYW5nZS1lLXJlYWN0Y2hhbmdlZXZlbnRhbnktLXZvaWQnLFxuICAgICAgICAgIGhhbmRsZXJOYW1lOiAnaGFuZGxlQ2hhbmdlJ1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdmFsID0gL251bWJlcnxyYW5nZS8udGVzdCh0eXBlKSA/IChwYXJzZWQgPSBwYXJzZUZsb2F0KHZhbHVlKSwgaXNOYU4ocGFyc2VkKSA/ICcnIDogcGFyc2VkKSA6IC9jaGVja2JveC8udGVzdCh0eXBlKSAvLyBjaGVja2JveGVzXG4gICAgICA/IGdldFZhbHVlRm9yQ2hlY2tib3goZ2V0SW4oc3RhdGUudmFsdWVzLCBmaWVsZCksIGNoZWNrZWQsIHZhbHVlKSA6IG9wdGlvbnMgJiYgbXVsdGlwbGUgLy8gPHNlbGVjdCBtdWx0aXBsZT5cbiAgICAgID8gZ2V0U2VsZWN0ZWRWYWx1ZXMob3B0aW9ucykgOiB2YWx1ZTtcbiAgICB9XG5cbiAgICBpZiAoZmllbGQpIHtcbiAgICAgIC8vIFNldCBmb3JtIGZpZWxkcyBieSBuYW1lXG4gICAgICBzZXRGaWVsZFZhbHVlKGZpZWxkLCB2YWwpO1xuICAgIH1cbiAgfSwgW3NldEZpZWxkVmFsdWUsIHN0YXRlLnZhbHVlc10pO1xuICB2YXIgaGFuZGxlQ2hhbmdlID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAoZXZlbnRPclBhdGgpIHtcbiAgICBpZiAoaXNTdHJpbmcoZXZlbnRPclBhdGgpKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHJldHVybiBleGVjdXRlQ2hhbmdlKGV2ZW50LCBldmVudE9yUGF0aCk7XG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBleGVjdXRlQ2hhbmdlKGV2ZW50T3JQYXRoKTtcbiAgICB9XG4gIH0pO1xuICB2YXIgc2V0RmllbGRUb3VjaGVkID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAoZmllbGQsIHRvdWNoZWQsIHNob3VsZFZhbGlkYXRlKSB7XG4gICAgaWYgKHRvdWNoZWQgPT09IHZvaWQgMCkge1xuICAgICAgdG91Y2hlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgZGlzcGF0Y2goe1xuICAgICAgdHlwZTogJ1NFVF9GSUVMRF9UT1VDSEVEJyxcbiAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgZmllbGQ6IGZpZWxkLFxuICAgICAgICB2YWx1ZTogdG91Y2hlZFxuICAgICAgfVxuICAgIH0pO1xuICAgIHZhciB3aWxsVmFsaWRhdGUgPSBzaG91bGRWYWxpZGF0ZSA9PT0gdW5kZWZpbmVkID8gdmFsaWRhdGVPbkJsdXIgOiBzaG91bGRWYWxpZGF0ZTtcbiAgICByZXR1cm4gd2lsbFZhbGlkYXRlID8gdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eShzdGF0ZS52YWx1ZXMpIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH0pO1xuICB2YXIgZXhlY3V0ZUJsdXIgPSB1c2VDYWxsYmFjayhmdW5jdGlvbiAoZSwgcGF0aCkge1xuICAgIGlmIChlLnBlcnNpc3QpIHtcbiAgICAgIGUucGVyc2lzdCgpO1xuICAgIH1cblxuICAgIHZhciBfZSR0YXJnZXQgPSBlLnRhcmdldCxcbiAgICAgICAgbmFtZSA9IF9lJHRhcmdldC5uYW1lLFxuICAgICAgICBpZCA9IF9lJHRhcmdldC5pZCxcbiAgICAgICAgb3V0ZXJIVE1MID0gX2UkdGFyZ2V0Lm91dGVySFRNTDtcbiAgICB2YXIgZmllbGQgPSBwYXRoID8gcGF0aCA6IG5hbWUgPyBuYW1lIDogaWQ7XG5cbiAgICBpZiAoIWZpZWxkICYmIHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgd2FybkFib3V0TWlzc2luZ0lkZW50aWZpZXIoe1xuICAgICAgICBodG1sQ29udGVudDogb3V0ZXJIVE1MLFxuICAgICAgICBkb2N1bWVudGF0aW9uQW5jaG9yTGluazogJ2hhbmRsZWJsdXItZS1hbnktLXZvaWQnLFxuICAgICAgICBoYW5kbGVyTmFtZTogJ2hhbmRsZUJsdXInXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBzZXRGaWVsZFRvdWNoZWQoZmllbGQsIHRydWUpO1xuICB9LCBbc2V0RmllbGRUb3VjaGVkXSk7XG4gIHZhciBoYW5kbGVCbHVyID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAoZXZlbnRPclN0cmluZykge1xuICAgIGlmIChpc1N0cmluZyhldmVudE9yU3RyaW5nKSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICByZXR1cm4gZXhlY3V0ZUJsdXIoZXZlbnQsIGV2ZW50T3JTdHJpbmcpO1xuICAgICAgfTtcbiAgICB9IGVsc2Uge1xuICAgICAgZXhlY3V0ZUJsdXIoZXZlbnRPclN0cmluZyk7XG4gICAgfVxuICB9KTtcbiAgdmFyIHNldEZvcm1pa1N0YXRlID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKHN0YXRlT3JDYikge1xuICAgIGlmIChpc0Z1bmN0aW9uKHN0YXRlT3JDYikpIHtcbiAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogJ1NFVF9GT1JNSUtfU1RBVEUnLFxuICAgICAgICBwYXlsb2FkOiBzdGF0ZU9yQ2JcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBkaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6ICdTRVRfRk9STUlLX1NUQVRFJyxcbiAgICAgICAgcGF5bG9hZDogZnVuY3Rpb24gcGF5bG9hZCgpIHtcbiAgICAgICAgICByZXR1cm4gc3RhdGVPckNiO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtdKTtcbiAgdmFyIHNldFN0YXR1cyA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChzdGF0dXMpIHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiAnU0VUX1NUQVRVUycsXG4gICAgICBwYXlsb2FkOiBzdGF0dXNcbiAgICB9KTtcbiAgfSwgW10pO1xuICB2YXIgc2V0U3VibWl0dGluZyA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChpc1N1Ym1pdHRpbmcpIHtcbiAgICBkaXNwYXRjaCh7XG4gICAgICB0eXBlOiAnU0VUX0lTU1VCTUlUVElORycsXG4gICAgICBwYXlsb2FkOiBpc1N1Ym1pdHRpbmdcbiAgICB9KTtcbiAgfSwgW10pO1xuICB2YXIgc3VibWl0Rm9ybSA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKCkge1xuICAgIGRpc3BhdGNoKHtcbiAgICAgIHR5cGU6ICdTVUJNSVRfQVRURU1QVCdcbiAgICB9KTtcbiAgICByZXR1cm4gdmFsaWRhdGVGb3JtV2l0aEhpZ2hQcmlvcml0eSgpLnRoZW4oZnVuY3Rpb24gKGNvbWJpbmVkRXJyb3JzKSB7XG4gICAgICAvLyBJbiBjYXNlIGFuIGVycm9yIHdhcyB0aHJvd24gYW5kIHBhc3NlZCB0byB0aGUgcmVzb2x2ZWQgUHJvbWlzZSxcbiAgICAgIC8vIGBjb21iaW5lZEVycm9yc2AgY2FuIGJlIGFuIGluc3RhbmNlIG9mIGFuIEVycm9yLiBXZSBuZWVkIHRvIGNoZWNrXG4gICAgICAvLyB0aGF0IGFuZCBhYm9ydCB0aGUgc3VibWl0LlxuICAgICAgLy8gSWYgd2UgZG9uJ3QgZG8gdGhhdCwgY2FsbGluZyBgT2JqZWN0LmtleXMobmV3IEVycm9yKCkpYCB5aWVsZHMgYW5cbiAgICAgIC8vIGVtcHR5IGFycmF5LCB3aGljaCBjYXVzZXMgdGhlIHZhbGlkYXRpb24gdG8gcGFzcyBhbmQgdGhlIGZvcm1cbiAgICAgIC8vIHRvIGJlIHN1Ym1pdHRlZC5cbiAgICAgIHZhciBpc0luc3RhbmNlT2ZFcnJvciA9IGNvbWJpbmVkRXJyb3JzIGluc3RhbmNlb2YgRXJyb3I7XG4gICAgICB2YXIgaXNBY3R1YWxseVZhbGlkID0gIWlzSW5zdGFuY2VPZkVycm9yICYmIE9iamVjdC5rZXlzKGNvbWJpbmVkRXJyb3JzKS5sZW5ndGggPT09IDA7XG5cbiAgICAgIGlmIChpc0FjdHVhbGx5VmFsaWQpIHtcbiAgICAgICAgLy8gUHJvY2VlZCB3aXRoIHN1Ym1pdC4uLlxuICAgICAgICAvL1xuICAgICAgICAvLyBUbyByZXNwZWN0IHN5bmMgc3VibWl0IGZucywgd2UgY2FuJ3Qgc2ltcGx5IHdyYXAgZXhlY3V0ZVN1Ym1pdCBpbiBhIHByb21pc2UgYW5kXG4gICAgICAgIC8vIF9hbHdheXNfIGRpc3BhdGNoIFNVQk1JVF9TVUNDRVNTIGJlY2F1c2UgaXNTdWJtaXR0aW5nIHdvdWxkIHRoZW4gYWx3YXlzIGJlIGZhbHNlLlxuICAgICAgICAvLyBUaGlzIHdvdWxkIGJlIGZpbmUgaW4gc2ltcGxlIGNhc2VzLCBidXQgbWFrZSBpdCBpbXBvc3NpYmxlIHRvIGRpc2FibGUgc3VibWl0XG4gICAgICAgIC8vIGJ1dHRvbnMgd2hlcmUgcGVvcGxlIHVzZSBjYWxsYmFja3Mgb3IgcHJvbWlzZXMgYXMgc2lkZSBlZmZlY3RzICh3aGljaCBpcyBiYXNpY2FsbHlcbiAgICAgICAgLy8gYWxsIG9mIHYxIEZvcm1payBjb2RlKS4gSW5zdGVhZCwgcmVjYWxsIHRoYXQgd2UgYXJlIGluc2lkZSBvZiBhIHByb21pc2UgY2hhaW4gYWxyZWFkeSxcbiAgICAgICAgLy8gIHNvIHdlIGNhbiB0cnkvY2F0Y2ggZXhlY3V0ZVN1Ym1pdCgpLCBpZiBpdCByZXR1cm5zIHVuZGVmaW5lZCwgdGhlbiBqdXN0IGJhaWwuXG4gICAgICAgIC8vIElmIHRoZXJlIGFyZSBlcnJvcnMsIHRocm93IGVtLiBPdGhlcndpc2UsIHdyYXAgZXhlY3V0ZVN1Ym1pdCBpbiBhIHByb21pc2UgYW5kIGhhbmRsZVxuICAgICAgICAvLyBjbGVhbnVwIG9mIGlzU3VibWl0dGluZyBvbiBiZWhhbGYgb2YgdGhlIGNvbnN1bWVyLlxuICAgICAgICB2YXIgcHJvbWlzZU9yVW5kZWZpbmVkO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcHJvbWlzZU9yVW5kZWZpbmVkID0gZXhlY3V0ZVN1Ym1pdCgpOyAvLyBCYWlsIGlmIGl0J3Mgc3luYywgY29uc3VtZXIgaXMgcmVzcG9uc2libGUgZm9yIGNsZWFuaW5nIHVwXG4gICAgICAgICAgLy8gdmlhIHNldFN1Ym1pdHRpbmcoZmFsc2UpXG5cbiAgICAgICAgICBpZiAocHJvbWlzZU9yVW5kZWZpbmVkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHByb21pc2VPclVuZGVmaW5lZCkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgaWYgKCEhaXNNb3VudGVkLmN1cnJlbnQpIHtcbiAgICAgICAgICAgIGRpc3BhdGNoKHtcbiAgICAgICAgICAgICAgdHlwZTogJ1NVQk1JVF9TVUNDRVNTJ1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSlbXCJjYXRjaFwiXShmdW5jdGlvbiAoX2Vycm9ycykge1xuICAgICAgICAgIGlmICghIWlzTW91bnRlZC5jdXJyZW50KSB7XG4gICAgICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgICAgIHR5cGU6ICdTVUJNSVRfRkFJTFVSRSdcbiAgICAgICAgICAgIH0pOyAvLyBUaGlzIGlzIGEgbGVnaXQgZXJyb3IgcmVqZWN0ZWQgYnkgdGhlIG9uU3VibWl0IGZuXG4gICAgICAgICAgICAvLyBzbyB3ZSBkb24ndCB3YW50IHRvIGJyZWFrIHRoZSBwcm9taXNlIGNoYWluXG5cbiAgICAgICAgICAgIHRocm93IF9lcnJvcnM7XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSBpZiAoISFpc01vdW50ZWQuY3VycmVudCkge1xuICAgICAgICAvLyBeXl4gTWFrZSBzdXJlIEZvcm1payBpcyBzdGlsbCBtb3VudGVkIGJlZm9yZSB1cGRhdGluZyBzdGF0ZVxuICAgICAgICBkaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ1NVQk1JVF9GQUlMVVJFJ1xuICAgICAgICB9KTsgLy8gdGhyb3cgY29tYmluZWRFcnJvcnM7XG5cbiAgICAgICAgaWYgKGlzSW5zdGFuY2VPZkVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgY29tYmluZWRFcnJvcnM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH0pO1xuICB9KTtcbiAgdmFyIGhhbmRsZVN1Ym1pdCA9IHVzZUV2ZW50Q2FsbGJhY2soZnVuY3Rpb24gKGUpIHtcbiAgICBpZiAoZSAmJiBlLnByZXZlbnREZWZhdWx0ICYmIGlzRnVuY3Rpb24oZS5wcmV2ZW50RGVmYXVsdCkpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG5cbiAgICBpZiAoZSAmJiBlLnN0b3BQcm9wYWdhdGlvbiAmJiBpc0Z1bmN0aW9uKGUuc3RvcFByb3BhZ2F0aW9uKSkge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9IC8vIFdhcm4gaWYgZm9ybSBzdWJtaXNzaW9uIGlzIHRyaWdnZXJlZCBieSBhIDxidXR0b24+IHdpdGhvdXQgYVxuICAgIC8vIHNwZWNpZmllZCBgdHlwZWAgYXR0cmlidXRlIGR1cmluZyBkZXZlbG9wbWVudC4gVGhpcyBtaXRpZ2F0ZXNcbiAgICAvLyBhIGNvbW1vbiBnb3RjaGEgaW4gZm9ybXMgd2l0aCBib3RoIHJlc2V0IGFuZCBzdWJtaXQgYnV0dG9ucyxcbiAgICAvLyB3aGVyZSB0aGUgZGV2IGZvcmdldHMgdG8gYWRkIHR5cGU9XCJidXR0b25cIiB0byB0aGUgcmVzZXQgYnV0dG9uLlxuXG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiICYmIHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFNhZmVseSBnZXQgdGhlIGFjdGl2ZSBlbGVtZW50ICh3b3JrcyB3aXRoIElFKVxuICAgICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBnZXRBY3RpdmVFbGVtZW50KCk7XG5cbiAgICAgIGlmIChhY3RpdmVFbGVtZW50ICE9PSBudWxsICYmIGFjdGl2ZUVsZW1lbnQgaW5zdGFuY2VvZiBIVE1MQnV0dG9uRWxlbWVudCkge1xuICAgICAgICAhKGFjdGl2ZUVsZW1lbnQuYXR0cmlidXRlcyAmJiBhY3RpdmVFbGVtZW50LmF0dHJpYnV0ZXMuZ2V0TmFtZWRJdGVtKCd0eXBlJykpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnWW91IHN1Ym1pdHRlZCBhIEZvcm1payBmb3JtIHVzaW5nIGEgYnV0dG9uIHdpdGggYW4gdW5zcGVjaWZpZWQgYHR5cGVgIGF0dHJpYnV0ZS4gIE1vc3QgYnJvd3NlcnMgZGVmYXVsdCBidXR0b24gZWxlbWVudHMgdG8gYHR5cGU9XCJzdWJtaXRcImAuIElmIHRoaXMgaXMgbm90IGEgc3VibWl0IGJ1dHRvbiwgcGxlYXNlIGFkZCBgdHlwZT1cImJ1dHRvblwiYC4nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgICB9XG4gICAgfVxuXG4gICAgc3VibWl0Rm9ybSgpW1wiY2F0Y2hcIl0oZnVuY3Rpb24gKHJlYXNvbikge1xuICAgICAgY29uc29sZS53YXJuKFwiV2FybmluZzogQW4gdW5oYW5kbGVkIGVycm9yIHdhcyBjYXVnaHQgZnJvbSBzdWJtaXRGb3JtKClcIiwgcmVhc29uKTtcbiAgICB9KTtcbiAgfSk7XG4gIHZhciBpbXBlcmF0aXZlTWV0aG9kcyA9IHtcbiAgICByZXNldEZvcm06IHJlc2V0Rm9ybSxcbiAgICB2YWxpZGF0ZUZvcm06IHZhbGlkYXRlRm9ybVdpdGhIaWdoUHJpb3JpdHksXG4gICAgdmFsaWRhdGVGaWVsZDogdmFsaWRhdGVGaWVsZCxcbiAgICBzZXRFcnJvcnM6IHNldEVycm9ycyxcbiAgICBzZXRGaWVsZEVycm9yOiBzZXRGaWVsZEVycm9yLFxuICAgIHNldEZpZWxkVG91Y2hlZDogc2V0RmllbGRUb3VjaGVkLFxuICAgIHNldEZpZWxkVmFsdWU6IHNldEZpZWxkVmFsdWUsXG4gICAgc2V0U3RhdHVzOiBzZXRTdGF0dXMsXG4gICAgc2V0U3VibWl0dGluZzogc2V0U3VibWl0dGluZyxcbiAgICBzZXRUb3VjaGVkOiBzZXRUb3VjaGVkLFxuICAgIHNldFZhbHVlczogc2V0VmFsdWVzLFxuICAgIHNldEZvcm1pa1N0YXRlOiBzZXRGb3JtaWtTdGF0ZSxcbiAgICBzdWJtaXRGb3JtOiBzdWJtaXRGb3JtXG4gIH07XG4gIHZhciBleGVjdXRlU3VibWl0ID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIG9uU3VibWl0KHN0YXRlLnZhbHVlcywgaW1wZXJhdGl2ZU1ldGhvZHMpO1xuICB9KTtcbiAgdmFyIGhhbmRsZVJlc2V0ID0gdXNlRXZlbnRDYWxsYmFjayhmdW5jdGlvbiAoZSkge1xuICAgIGlmIChlICYmIGUucHJldmVudERlZmF1bHQgJiYgaXNGdW5jdGlvbihlLnByZXZlbnREZWZhdWx0KSkge1xuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cblxuICAgIGlmIChlICYmIGUuc3RvcFByb3BhZ2F0aW9uICYmIGlzRnVuY3Rpb24oZS5zdG9wUHJvcGFnYXRpb24pKSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cblxuICAgIHJlc2V0Rm9ybSgpO1xuICB9KTtcbiAgdmFyIGdldEZpZWxkTWV0YSA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbHVlOiBnZXRJbihzdGF0ZS52YWx1ZXMsIG5hbWUpLFxuICAgICAgZXJyb3I6IGdldEluKHN0YXRlLmVycm9ycywgbmFtZSksXG4gICAgICB0b3VjaGVkOiAhIWdldEluKHN0YXRlLnRvdWNoZWQsIG5hbWUpLFxuICAgICAgaW5pdGlhbFZhbHVlOiBnZXRJbihpbml0aWFsVmFsdWVzLmN1cnJlbnQsIG5hbWUpLFxuICAgICAgaW5pdGlhbFRvdWNoZWQ6ICEhZ2V0SW4oaW5pdGlhbFRvdWNoZWQuY3VycmVudCwgbmFtZSksXG4gICAgICBpbml0aWFsRXJyb3I6IGdldEluKGluaXRpYWxFcnJvcnMuY3VycmVudCwgbmFtZSlcbiAgICB9O1xuICB9LCBbc3RhdGUuZXJyb3JzLCBzdGF0ZS50b3VjaGVkLCBzdGF0ZS52YWx1ZXNdKTtcbiAgdmFyIGdldEZpZWxkSGVscGVycyA9IHVzZUNhbGxiYWNrKGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHNldFZhbHVlOiBmdW5jdGlvbiBzZXRWYWx1ZSh2YWx1ZSwgc2hvdWxkVmFsaWRhdGUpIHtcbiAgICAgICAgcmV0dXJuIHNldEZpZWxkVmFsdWUobmFtZSwgdmFsdWUsIHNob3VsZFZhbGlkYXRlKTtcbiAgICAgIH0sXG4gICAgICBzZXRUb3VjaGVkOiBmdW5jdGlvbiBzZXRUb3VjaGVkKHZhbHVlLCBzaG91bGRWYWxpZGF0ZSkge1xuICAgICAgICByZXR1cm4gc2V0RmllbGRUb3VjaGVkKG5hbWUsIHZhbHVlLCBzaG91bGRWYWxpZGF0ZSk7XG4gICAgICB9LFxuICAgICAgc2V0RXJyb3I6IGZ1bmN0aW9uIHNldEVycm9yKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiBzZXRGaWVsZEVycm9yKG5hbWUsIHZhbHVlKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbc2V0RmllbGRWYWx1ZSwgc2V0RmllbGRUb3VjaGVkLCBzZXRGaWVsZEVycm9yXSk7XG4gIHZhciBnZXRGaWVsZFByb3BzID0gdXNlQ2FsbGJhY2soZnVuY3Rpb24gKG5hbWVPck9wdGlvbnMpIHtcbiAgICB2YXIgaXNBbk9iamVjdCA9IGlzT2JqZWN0KG5hbWVPck9wdGlvbnMpO1xuICAgIHZhciBuYW1lID0gaXNBbk9iamVjdCA/IG5hbWVPck9wdGlvbnMubmFtZSA6IG5hbWVPck9wdGlvbnM7XG4gICAgdmFyIHZhbHVlU3RhdGUgPSBnZXRJbihzdGF0ZS52YWx1ZXMsIG5hbWUpO1xuICAgIHZhciBmaWVsZCA9IHtcbiAgICAgIG5hbWU6IG5hbWUsXG4gICAgICB2YWx1ZTogdmFsdWVTdGF0ZSxcbiAgICAgIG9uQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgICBvbkJsdXI6IGhhbmRsZUJsdXJcbiAgICB9O1xuXG4gICAgaWYgKGlzQW5PYmplY3QpIHtcbiAgICAgIHZhciB0eXBlID0gbmFtZU9yT3B0aW9ucy50eXBlLFxuICAgICAgICAgIHZhbHVlUHJvcCA9IG5hbWVPck9wdGlvbnMudmFsdWUsXG4gICAgICAgICAgaXMgPSBuYW1lT3JPcHRpb25zLmFzLFxuICAgICAgICAgIG11bHRpcGxlID0gbmFtZU9yT3B0aW9ucy5tdWx0aXBsZTtcblxuICAgICAgaWYgKHR5cGUgPT09ICdjaGVja2JveCcpIHtcbiAgICAgICAgaWYgKHZhbHVlUHJvcCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgZmllbGQuY2hlY2tlZCA9ICEhdmFsdWVTdGF0ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBmaWVsZC5jaGVja2VkID0gISEoQXJyYXkuaXNBcnJheSh2YWx1ZVN0YXRlKSAmJiB+dmFsdWVTdGF0ZS5pbmRleE9mKHZhbHVlUHJvcCkpO1xuICAgICAgICAgIGZpZWxkLnZhbHVlID0gdmFsdWVQcm9wO1xuICAgICAgICB9XG4gICAgICB9IGVsc2UgaWYgKHR5cGUgPT09ICdyYWRpbycpIHtcbiAgICAgICAgZmllbGQuY2hlY2tlZCA9IHZhbHVlU3RhdGUgPT09IHZhbHVlUHJvcDtcbiAgICAgICAgZmllbGQudmFsdWUgPSB2YWx1ZVByb3A7XG4gICAgICB9IGVsc2UgaWYgKGlzID09PSAnc2VsZWN0JyAmJiBtdWx0aXBsZSkge1xuICAgICAgICBmaWVsZC52YWx1ZSA9IGZpZWxkLnZhbHVlIHx8IFtdO1xuICAgICAgICBmaWVsZC5tdWx0aXBsZSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpZWxkO1xuICB9LCBbaGFuZGxlQmx1ciwgaGFuZGxlQ2hhbmdlLCBzdGF0ZS52YWx1ZXNdKTtcbiAgdmFyIGRpcnR5ID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuICFpc0VxdWFsKGluaXRpYWxWYWx1ZXMuY3VycmVudCwgc3RhdGUudmFsdWVzKTtcbiAgfSwgW2luaXRpYWxWYWx1ZXMuY3VycmVudCwgc3RhdGUudmFsdWVzXSk7XG4gIHZhciBpc1ZhbGlkID0gdXNlTWVtbyhmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpc0luaXRpYWxWYWxpZCAhPT0gJ3VuZGVmaW5lZCcgPyBkaXJ0eSA/IHN0YXRlLmVycm9ycyAmJiBPYmplY3Qua2V5cyhzdGF0ZS5lcnJvcnMpLmxlbmd0aCA9PT0gMCA6IGlzSW5pdGlhbFZhbGlkICE9PSBmYWxzZSAmJiBpc0Z1bmN0aW9uKGlzSW5pdGlhbFZhbGlkKSA/IGlzSW5pdGlhbFZhbGlkKHByb3BzKSA6IGlzSW5pdGlhbFZhbGlkIDogc3RhdGUuZXJyb3JzICYmIE9iamVjdC5rZXlzKHN0YXRlLmVycm9ycykubGVuZ3RoID09PSAwO1xuICB9LCBbaXNJbml0aWFsVmFsaWQsIGRpcnR5LCBzdGF0ZS5lcnJvcnMsIHByb3BzXSk7XG5cbiAgdmFyIGN0eCA9IF9leHRlbmRzKHt9LCBzdGF0ZSwge1xuICAgIGluaXRpYWxWYWx1ZXM6IGluaXRpYWxWYWx1ZXMuY3VycmVudCxcbiAgICBpbml0aWFsRXJyb3JzOiBpbml0aWFsRXJyb3JzLmN1cnJlbnQsXG4gICAgaW5pdGlhbFRvdWNoZWQ6IGluaXRpYWxUb3VjaGVkLmN1cnJlbnQsXG4gICAgaW5pdGlhbFN0YXR1czogaW5pdGlhbFN0YXR1cy5jdXJyZW50LFxuICAgIGhhbmRsZUJsdXI6IGhhbmRsZUJsdXIsXG4gICAgaGFuZGxlQ2hhbmdlOiBoYW5kbGVDaGFuZ2UsXG4gICAgaGFuZGxlUmVzZXQ6IGhhbmRsZVJlc2V0LFxuICAgIGhhbmRsZVN1Ym1pdDogaGFuZGxlU3VibWl0LFxuICAgIHJlc2V0Rm9ybTogcmVzZXRGb3JtLFxuICAgIHNldEVycm9yczogc2V0RXJyb3JzLFxuICAgIHNldEZvcm1pa1N0YXRlOiBzZXRGb3JtaWtTdGF0ZSxcbiAgICBzZXRGaWVsZFRvdWNoZWQ6IHNldEZpZWxkVG91Y2hlZCxcbiAgICBzZXRGaWVsZFZhbHVlOiBzZXRGaWVsZFZhbHVlLFxuICAgIHNldEZpZWxkRXJyb3I6IHNldEZpZWxkRXJyb3IsXG4gICAgc2V0U3RhdHVzOiBzZXRTdGF0dXMsXG4gICAgc2V0U3VibWl0dGluZzogc2V0U3VibWl0dGluZyxcbiAgICBzZXRUb3VjaGVkOiBzZXRUb3VjaGVkLFxuICAgIHNldFZhbHVlczogc2V0VmFsdWVzLFxuICAgIHN1Ym1pdEZvcm06IHN1Ym1pdEZvcm0sXG4gICAgdmFsaWRhdGVGb3JtOiB2YWxpZGF0ZUZvcm1XaXRoSGlnaFByaW9yaXR5LFxuICAgIHZhbGlkYXRlRmllbGQ6IHZhbGlkYXRlRmllbGQsXG4gICAgaXNWYWxpZDogaXNWYWxpZCxcbiAgICBkaXJ0eTogZGlydHksXG4gICAgdW5yZWdpc3RlckZpZWxkOiB1bnJlZ2lzdGVyRmllbGQsXG4gICAgcmVnaXN0ZXJGaWVsZDogcmVnaXN0ZXJGaWVsZCxcbiAgICBnZXRGaWVsZFByb3BzOiBnZXRGaWVsZFByb3BzLFxuICAgIGdldEZpZWxkTWV0YTogZ2V0RmllbGRNZXRhLFxuICAgIGdldEZpZWxkSGVscGVyczogZ2V0RmllbGRIZWxwZXJzLFxuICAgIHZhbGlkYXRlT25CbHVyOiB2YWxpZGF0ZU9uQmx1cixcbiAgICB2YWxpZGF0ZU9uQ2hhbmdlOiB2YWxpZGF0ZU9uQ2hhbmdlLFxuICAgIHZhbGlkYXRlT25Nb3VudDogdmFsaWRhdGVPbk1vdW50XG4gIH0pO1xuXG4gIHJldHVybiBjdHg7XG59XG5mdW5jdGlvbiBGb3JtaWsocHJvcHMpIHtcbiAgdmFyIGZvcm1pa2JhZyA9IHVzZUZvcm1payhwcm9wcyk7XG4gIHZhciBjb21wb25lbnQgPSBwcm9wcy5jb21wb25lbnQsXG4gICAgICBjaGlsZHJlbiA9IHByb3BzLmNoaWxkcmVuLFxuICAgICAgcmVuZGVyID0gcHJvcHMucmVuZGVyLFxuICAgICAgaW5uZXJSZWYgPSBwcm9wcy5pbm5lclJlZjsgLy8gVGhpcyBhbGxvd3MgZm9sa3MgdG8gcGFzcyBhIHJlZiB0byA8Rm9ybWlrIC8+XG5cbiAgdXNlSW1wZXJhdGl2ZUhhbmRsZShpbm5lclJlZiwgZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiBmb3JtaWtiYWc7XG4gIH0pO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgISFwcm9wcy5yZW5kZXIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiPEZvcm1payByZW5kZXI+IGhhcyBiZWVuIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiBmdXR1cmUgdmVyc2lvbnMgb2YgRm9ybWlrLiBQbGVhc2UgdXNlIGEgY2hpbGQgY2FsbGJhY2sgZnVuY3Rpb24gaW5zdGVhZC4gVG8gZ2V0IHJpZCBvZiB0aGlzIHdhcm5pbmcsIHJlcGxhY2UgPEZvcm1payByZW5kZXI9eyhwcm9wcykgPT4gLi4ufSAvPiB3aXRoIDxGb3JtaWs+eyhwcm9wcykgPT4gLi4ufTwvRm9ybWlrPlwiKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgIH0sIFtdKTtcbiAgfVxuXG4gIHJldHVybiBjcmVhdGVFbGVtZW50KEZvcm1pa1Byb3ZpZGVyLCB7XG4gICAgdmFsdWU6IGZvcm1pa2JhZ1xuICB9LCBjb21wb25lbnQgPyBjcmVhdGVFbGVtZW50KGNvbXBvbmVudCwgZm9ybWlrYmFnKSA6IHJlbmRlciA/IHJlbmRlcihmb3JtaWtiYWcpIDogY2hpbGRyZW4gLy8gY2hpbGRyZW4gY29tZSBsYXN0LCBhbHdheXMgY2FsbGVkXG4gID8gaXNGdW5jdGlvbihjaGlsZHJlbikgPyBjaGlsZHJlbihmb3JtaWtiYWcpIDogIWlzRW1wdHlDaGlsZHJlbihjaGlsZHJlbikgPyBDaGlsZHJlbi5vbmx5KGNoaWxkcmVuKSA6IG51bGwgOiBudWxsKTtcbn1cblxuZnVuY3Rpb24gd2FybkFib3V0TWlzc2luZ0lkZW50aWZpZXIoX3JlZjQpIHtcbiAgdmFyIGh0bWxDb250ZW50ID0gX3JlZjQuaHRtbENvbnRlbnQsXG4gICAgICBkb2N1bWVudGF0aW9uQW5jaG9yTGluayA9IF9yZWY0LmRvY3VtZW50YXRpb25BbmNob3JMaW5rLFxuICAgICAgaGFuZGxlck5hbWUgPSBfcmVmNC5oYW5kbGVyTmFtZTtcbiAgY29uc29sZS53YXJuKFwiV2FybmluZzogRm9ybWlrIGNhbGxlZCBgXCIgKyBoYW5kbGVyTmFtZSArIFwiYCwgYnV0IHlvdSBmb3Jnb3QgdG8gcGFzcyBhbiBgaWRgIG9yIGBuYW1lYCBhdHRyaWJ1dGUgdG8geW91ciBpbnB1dDpcXG4gICAgXCIgKyBodG1sQ29udGVudCArIFwiXFxuICAgIEZvcm1payBjYW5ub3QgZGV0ZXJtaW5lIHdoaWNoIHZhbHVlIHRvIHVwZGF0ZS4gRm9yIG1vcmUgaW5mbyBzZWUgaHR0cHM6Ly9mb3JtaWsub3JnL2RvY3MvYXBpL2Zvcm1payNcIiArIGRvY3VtZW50YXRpb25BbmNob3JMaW5rICsgXCJcXG4gIFwiKTtcbn1cbi8qKlxyXG4gKiBUcmFuc2Zvcm0gWXVwIFZhbGlkYXRpb25FcnJvciB0byBhIG1vcmUgdXNhYmxlIG9iamVjdFxyXG4gKi9cblxuXG5mdW5jdGlvbiB5dXBUb0Zvcm1FcnJvcnMoeXVwRXJyb3IpIHtcbiAgdmFyIGVycm9ycyA9IHt9O1xuXG4gIGlmICh5dXBFcnJvci5pbm5lcikge1xuICAgIGlmICh5dXBFcnJvci5pbm5lci5sZW5ndGggPT09IDApIHtcbiAgICAgIHJldHVybiBzZXRJbihlcnJvcnMsIHl1cEVycm9yLnBhdGgsIHl1cEVycm9yLm1lc3NhZ2UpO1xuICAgIH1cblxuICAgIGZvciAodmFyIF9pdGVyYXRvciA9IHl1cEVycm9yLmlubmVyLCBfaXNBcnJheSA9IEFycmF5LmlzQXJyYXkoX2l0ZXJhdG9yKSwgX2kgPSAwLCBfaXRlcmF0b3IgPSBfaXNBcnJheSA/IF9pdGVyYXRvciA6IF9pdGVyYXRvcltTeW1ib2wuaXRlcmF0b3JdKCk7Oykge1xuICAgICAgdmFyIF9yZWY1O1xuXG4gICAgICBpZiAoX2lzQXJyYXkpIHtcbiAgICAgICAgaWYgKF9pID49IF9pdGVyYXRvci5sZW5ndGgpIGJyZWFrO1xuICAgICAgICBfcmVmNSA9IF9pdGVyYXRvcltfaSsrXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9pID0gX2l0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgaWYgKF9pLmRvbmUpIGJyZWFrO1xuICAgICAgICBfcmVmNSA9IF9pLnZhbHVlO1xuICAgICAgfVxuXG4gICAgICB2YXIgZXJyID0gX3JlZjU7XG5cbiAgICAgIGlmICghZ2V0SW4oZXJyb3JzLCBlcnIucGF0aCkpIHtcbiAgICAgICAgZXJyb3JzID0gc2V0SW4oZXJyb3JzLCBlcnIucGF0aCwgZXJyLm1lc3NhZ2UpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiBlcnJvcnM7XG59XG4vKipcclxuICogVmFsaWRhdGUgYSB5dXAgc2NoZW1hLlxyXG4gKi9cblxuZnVuY3Rpb24gdmFsaWRhdGVZdXBTY2hlbWEodmFsdWVzLCBzY2hlbWEsIHN5bmMsIGNvbnRleHQpIHtcbiAgaWYgKHN5bmMgPT09IHZvaWQgMCkge1xuICAgIHN5bmMgPSBmYWxzZTtcbiAgfVxuXG4gIHZhciBub3JtYWxpemVkVmFsdWVzID0gcHJlcGFyZURhdGFGb3JWYWxpZGF0aW9uKHZhbHVlcyk7XG4gIHJldHVybiBzY2hlbWFbc3luYyA/ICd2YWxpZGF0ZVN5bmMnIDogJ3ZhbGlkYXRlJ10obm9ybWFsaXplZFZhbHVlcywge1xuICAgIGFib3J0RWFybHk6IGZhbHNlLFxuICAgIGNvbnRleHQ6IGNvbnRleHQgfHwgbm9ybWFsaXplZFZhbHVlc1xuICB9KTtcbn1cbi8qKlxyXG4gKiBSZWN1cnNpdmVseSBwcmVwYXJlIHZhbHVlcy5cclxuICovXG5cbmZ1bmN0aW9uIHByZXBhcmVEYXRhRm9yVmFsaWRhdGlvbih2YWx1ZXMpIHtcbiAgdmFyIGRhdGEgPSBBcnJheS5pc0FycmF5KHZhbHVlcykgPyBbXSA6IHt9O1xuXG4gIGZvciAodmFyIGsgaW4gdmFsdWVzKSB7XG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZXMsIGspKSB7XG4gICAgICB2YXIga2V5ID0gU3RyaW5nKGspO1xuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZXNba2V5XSkgPT09IHRydWUpIHtcbiAgICAgICAgZGF0YVtrZXldID0gdmFsdWVzW2tleV0ubWFwKGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSA9PT0gdHJ1ZSB8fCBpc1BsYWluT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHByZXBhcmVEYXRhRm9yVmFsaWRhdGlvbih2YWx1ZSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSAhPT0gJycgPyB2YWx1ZSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChpc1BsYWluT2JqZWN0KHZhbHVlc1trZXldKSkge1xuICAgICAgICBkYXRhW2tleV0gPSBwcmVwYXJlRGF0YUZvclZhbGlkYXRpb24odmFsdWVzW2tleV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGF0YVtrZXldID0gdmFsdWVzW2tleV0gIT09ICcnID8gdmFsdWVzW2tleV0gOiB1bmRlZmluZWQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59XG4vKipcclxuICogZGVlcG1lcmdlIGFycmF5IG1lcmdpbmcgYWxnb3JpdGhtXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9LeWxlQU1hdGhld3MvZGVlcG1lcmdlI2NvbWJpbmUtYXJyYXlcclxuICovXG5cbmZ1bmN0aW9uIGFycmF5TWVyZ2UodGFyZ2V0LCBzb3VyY2UsIG9wdGlvbnMpIHtcbiAgdmFyIGRlc3RpbmF0aW9uID0gdGFyZ2V0LnNsaWNlKCk7XG4gIHNvdXJjZS5mb3JFYWNoKGZ1bmN0aW9uIG1lcmdlKGUsIGkpIHtcbiAgICBpZiAodHlwZW9mIGRlc3RpbmF0aW9uW2ldID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdmFyIGNsb25lUmVxdWVzdGVkID0gb3B0aW9ucy5jbG9uZSAhPT0gZmFsc2U7XG4gICAgICB2YXIgc2hvdWxkQ2xvbmUgPSBjbG9uZVJlcXVlc3RlZCAmJiBvcHRpb25zLmlzTWVyZ2VhYmxlT2JqZWN0KGUpO1xuICAgICAgZGVzdGluYXRpb25baV0gPSBzaG91bGRDbG9uZSA/IGRlZXBtZXJnZShBcnJheS5pc0FycmF5KGUpID8gW10gOiB7fSwgZSwgb3B0aW9ucykgOiBlO1xuICAgIH0gZWxzZSBpZiAob3B0aW9ucy5pc01lcmdlYWJsZU9iamVjdChlKSkge1xuICAgICAgZGVzdGluYXRpb25baV0gPSBkZWVwbWVyZ2UodGFyZ2V0W2ldLCBlLCBvcHRpb25zKTtcbiAgICB9IGVsc2UgaWYgKHRhcmdldC5pbmRleE9mKGUpID09PSAtMSkge1xuICAgICAgZGVzdGluYXRpb24ucHVzaChlKTtcbiAgICB9XG4gIH0pO1xuICByZXR1cm4gZGVzdGluYXRpb247XG59XG4vKiogUmV0dXJuIG11bHRpIHNlbGVjdCB2YWx1ZXMgYmFzZWQgb24gYW4gYXJyYXkgb2Ygb3B0aW9ucyAqL1xuXG5cbmZ1bmN0aW9uIGdldFNlbGVjdGVkVmFsdWVzKG9wdGlvbnMpIHtcbiAgcmV0dXJuIEFycmF5LmZyb20ob3B0aW9ucykuZmlsdGVyKGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBlbC5zZWxlY3RlZDtcbiAgfSkubWFwKGZ1bmN0aW9uIChlbCkge1xuICAgIHJldHVybiBlbC52YWx1ZTtcbiAgfSk7XG59XG4vKiogUmV0dXJuIHRoZSBuZXh0IHZhbHVlIGZvciBhIGNoZWNrYm94ICovXG5cblxuZnVuY3Rpb24gZ2V0VmFsdWVGb3JDaGVja2JveChjdXJyZW50VmFsdWUsIGNoZWNrZWQsIHZhbHVlUHJvcCkge1xuICAvLyBJZiB0aGUgY3VycmVudCB2YWx1ZSB3YXMgYSBib29sZWFuLCByZXR1cm4gYSBib29sZWFuXG4gIGlmICh0eXBlb2YgY3VycmVudFZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICByZXR1cm4gQm9vbGVhbihjaGVja2VkKTtcbiAgfSAvLyBJZiB0aGUgY3VycmVudFZhbHVlIHdhcyBub3QgYSBib29sZWFuIHdlIHdhbnQgdG8gcmV0dXJuIGFuIGFycmF5XG5cblxuICB2YXIgY3VycmVudEFycmF5T2ZWYWx1ZXMgPSBbXTtcbiAgdmFyIGlzVmFsdWVJbkFycmF5ID0gZmFsc2U7XG4gIHZhciBpbmRleCA9IC0xO1xuXG4gIGlmICghQXJyYXkuaXNBcnJheShjdXJyZW50VmFsdWUpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxuICAgIGlmICghdmFsdWVQcm9wIHx8IHZhbHVlUHJvcCA9PSAndHJ1ZScgfHwgdmFsdWVQcm9wID09ICdmYWxzZScpIHtcbiAgICAgIHJldHVybiBCb29sZWFuKGNoZWNrZWQpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICAvLyBJZiB0aGUgY3VycmVudCB2YWx1ZSBpcyBhbHJlYWR5IGFuIGFycmF5LCB1c2UgaXRcbiAgICBjdXJyZW50QXJyYXlPZlZhbHVlcyA9IGN1cnJlbnRWYWx1ZTtcbiAgICBpbmRleCA9IGN1cnJlbnRWYWx1ZS5pbmRleE9mKHZhbHVlUHJvcCk7XG4gICAgaXNWYWx1ZUluQXJyYXkgPSBpbmRleCA+PSAwO1xuICB9IC8vIElmIHRoZSBjaGVja2JveCB3YXMgY2hlY2tlZCBhbmQgdGhlIHZhbHVlIGlzIG5vdCBhbHJlYWR5IHByZXNlbnQgaW4gdGhlIGFyYXkgd2Ugd2FudCB0byBhZGQgdGhlIG5ldyB2YWx1ZSB0byB0aGUgYXJyYXkgb2YgdmFsdWVzXG5cblxuICBpZiAoY2hlY2tlZCAmJiB2YWx1ZVByb3AgJiYgIWlzVmFsdWVJbkFycmF5KSB7XG4gICAgcmV0dXJuIGN1cnJlbnRBcnJheU9mVmFsdWVzLmNvbmNhdCh2YWx1ZVByb3ApO1xuICB9IC8vIElmIHRoZSBjaGVja2JveCB3YXMgdW5jaGVja2VkIGFuZCB0aGUgdmFsdWUgaXMgbm90IGluIHRoZSBhcnJheSwgc2ltcGx5IHJldHVybiB0aGUgYWxyZWFkeSBleGlzdGluZyBhcnJheSBvZiB2YWx1ZXNcblxuXG4gIGlmICghaXNWYWx1ZUluQXJyYXkpIHtcbiAgICByZXR1cm4gY3VycmVudEFycmF5T2ZWYWx1ZXM7XG4gIH0gLy8gSWYgdGhlIGNoZWNrYm94IHdhcyB1bmNoZWNrZWQgYW5kIHRoZSB2YWx1ZSBpcyBpbiB0aGUgYXJyYXksIHJlbW92ZSB0aGUgdmFsdWUgYW5kIHJldHVybiB0aGUgYXJyYXlcblxuXG4gIHJldHVybiBjdXJyZW50QXJyYXlPZlZhbHVlcy5zbGljZSgwLCBpbmRleCkuY29uY2F0KGN1cnJlbnRBcnJheU9mVmFsdWVzLnNsaWNlKGluZGV4ICsgMSkpO1xufSAvLyBSZWFjdCBjdXJyZW50bHkgdGhyb3dzIGEgd2FybmluZyB3aGVuIHVzaW5nIHVzZUxheW91dEVmZmVjdCBvbiB0aGUgc2VydmVyLlxuLy8gVG8gZ2V0IGFyb3VuZCBpdCwgd2UgY2FuIGNvbmRpdGlvbmFsbHkgdXNlRWZmZWN0IG9uIHRoZSBzZXJ2ZXIgKG5vLW9wKSBhbmRcbi8vIHVzZUxheW91dEVmZmVjdCBpbiB0aGUgYnJvd3Nlci5cbi8vIEBzZWUgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZ2FlYXJvbi9lN2Q5N2NkZjM4YTI5MDc5MjRlYTEyZTRlYmRmM2M4NVxuXG5cbnZhciB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0ID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50ICE9PSAndW5kZWZpbmVkJyA/IHVzZUxheW91dEVmZmVjdCA6IHVzZUVmZmVjdDtcblxuZnVuY3Rpb24gdXNlRXZlbnRDYWxsYmFjayhmbikge1xuICB2YXIgcmVmID0gdXNlUmVmKGZuKTsgLy8gd2UgY29weSBhIHJlZiB0byB0aGUgY2FsbGJhY2sgc2NvcGVkIHRvIHRoZSBjdXJyZW50IHN0YXRlL3Byb3BzIG9uIGVhY2ggcmVuZGVyXG5cbiAgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdChmdW5jdGlvbiAoKSB7XG4gICAgcmVmLmN1cnJlbnQgPSBmbjtcbiAgfSk7XG4gIHJldHVybiB1c2VDYWxsYmFjayhmdW5jdGlvbiAoKSB7XG4gICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICBhcmdzW19rZXldID0gYXJndW1lbnRzW19rZXldO1xuICAgIH1cblxuICAgIHJldHVybiByZWYuY3VycmVudC5hcHBseSh2b2lkIDAsIGFyZ3MpO1xuICB9LCBbXSk7XG59XG5cbmZ1bmN0aW9uIHVzZUZpZWxkKHByb3BzT3JGaWVsZE5hbWUpIHtcbiAgdmFyIGZvcm1payA9IHVzZUZvcm1pa0NvbnRleHQoKTtcbiAgdmFyIGdldEZpZWxkUHJvcHMgPSBmb3JtaWsuZ2V0RmllbGRQcm9wcyxcbiAgICAgIGdldEZpZWxkTWV0YSA9IGZvcm1pay5nZXRGaWVsZE1ldGEsXG4gICAgICBnZXRGaWVsZEhlbHBlcnMgPSBmb3JtaWsuZ2V0RmllbGRIZWxwZXJzLFxuICAgICAgcmVnaXN0ZXJGaWVsZCA9IGZvcm1pay5yZWdpc3RlckZpZWxkLFxuICAgICAgdW5yZWdpc3RlckZpZWxkID0gZm9ybWlrLnVucmVnaXN0ZXJGaWVsZDtcbiAgdmFyIGlzQW5PYmplY3QgPSBpc09iamVjdChwcm9wc09yRmllbGROYW1lKTsgLy8gTm9ybWFsaXplIHByb3BzT3JGaWVsZE5hbWUgdG8gRmllbGRIb29rQ29uZmlnPFZhbD5cblxuICB2YXIgcHJvcHMgPSBpc0FuT2JqZWN0ID8gcHJvcHNPckZpZWxkTmFtZSA6IHtcbiAgICBuYW1lOiBwcm9wc09yRmllbGROYW1lXG4gIH07XG4gIHZhciBmaWVsZE5hbWUgPSBwcm9wcy5uYW1lLFxuICAgICAgdmFsaWRhdGVGbiA9IHByb3BzLnZhbGlkYXRlO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIGlmIChmaWVsZE5hbWUpIHtcbiAgICAgIHJlZ2lzdGVyRmllbGQoZmllbGROYW1lLCB7XG4gICAgICAgIHZhbGlkYXRlOiB2YWxpZGF0ZUZuXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKGZpZWxkTmFtZSkge1xuICAgICAgICB1bnJlZ2lzdGVyRmllbGQoZmllbGROYW1lKTtcbiAgICAgIH1cbiAgICB9O1xuICB9LCBbcmVnaXN0ZXJGaWVsZCwgdW5yZWdpc3RlckZpZWxkLCBmaWVsZE5hbWUsIHZhbGlkYXRlRm5dKTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgIWZvcm1payA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ3VzZUZpZWxkKCkgLyA8RmllbGQgLz4gbXVzdCBiZSB1c2VkIHVuZGVybmVhdGggYSA8Rm9ybWlrPiBjb21wb25lbnQgb3Igd2l0aEZvcm1paygpIGhpZ2hlciBvcmRlciBjb21wb25lbnQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIH1cblxuICAhZmllbGROYW1lID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnSW52YWxpZCBmaWVsZCBuYW1lLiBFaXRoZXIgcGFzcyBgdXNlRmllbGRgIGEgc3RyaW5nIG9yIGFuIG9iamVjdCBjb250YWluaW5nIGEgYG5hbWVgIGtleS4nKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gIHZhciBmaWVsZEhlbHBlcnMgPSB1c2VNZW1vKGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZ2V0RmllbGRIZWxwZXJzKGZpZWxkTmFtZSk7XG4gIH0sIFtnZXRGaWVsZEhlbHBlcnMsIGZpZWxkTmFtZV0pO1xuICByZXR1cm4gW2dldEZpZWxkUHJvcHMocHJvcHMpLCBnZXRGaWVsZE1ldGEoZmllbGROYW1lKSwgZmllbGRIZWxwZXJzXTtcbn1cbmZ1bmN0aW9uIEZpZWxkKF9yZWYpIHtcbiAgdmFyIHZhbGlkYXRlID0gX3JlZi52YWxpZGF0ZSxcbiAgICAgIG5hbWUgPSBfcmVmLm5hbWUsXG4gICAgICByZW5kZXIgPSBfcmVmLnJlbmRlcixcbiAgICAgIGNoaWxkcmVuID0gX3JlZi5jaGlsZHJlbixcbiAgICAgIGlzID0gX3JlZi5hcyxcbiAgICAgIGNvbXBvbmVudCA9IF9yZWYuY29tcG9uZW50LFxuICAgICAgY2xhc3NOYW1lID0gX3JlZi5jbGFzc05hbWUsXG4gICAgICBwcm9wcyA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF9yZWYsIFtcInZhbGlkYXRlXCIsIFwibmFtZVwiLCBcInJlbmRlclwiLCBcImNoaWxkcmVuXCIsIFwiYXNcIiwgXCJjb21wb25lbnRcIiwgXCJjbGFzc05hbWVcIl0pO1xuXG4gIHZhciBfdXNlRm9ybWlrQ29udGV4dCA9IHVzZUZvcm1pa0NvbnRleHQoKSxcbiAgICAgIGZvcm1payA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF91c2VGb3JtaWtDb250ZXh0LCBbXCJ2YWxpZGF0ZVwiLCBcInZhbGlkYXRpb25TY2hlbWFcIl0pO1xuXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcmVhY3QtaG9va3MvcnVsZXMtb2YtaG9va3NcbiAgICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgISFyZW5kZXIgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsIFwiPEZpZWxkIHJlbmRlcj4gaGFzIGJlZW4gZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGZ1dHVyZSB2ZXJzaW9ucyBvZiBGb3JtaWsuIFBsZWFzZSB1c2UgYSBjaGlsZCBjYWxsYmFjayBmdW5jdGlvbiBpbnN0ZWFkLiBUbyBnZXQgcmlkIG9mIHRoaXMgd2FybmluZywgcmVwbGFjZSA8RmllbGQgbmFtZT1cXFwiXCIgKyBuYW1lICsgXCJcXFwiIHJlbmRlcj17KHtmaWVsZCwgZm9ybX0pID0+IC4uLn0gLz4gd2l0aCA8RmllbGQgbmFtZT1cXFwiXCIgKyBuYW1lICsgXCJcXFwiPnsoe2ZpZWxkLCBmb3JtLCBtZXRhfSkgPT4gLi4ufTwvRmllbGQ+XCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgICEhKGlzICYmIGNoaWxkcmVuICYmIGlzRnVuY3Rpb24oY2hpbGRyZW4pKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ1lvdSBzaG91bGQgbm90IHVzZSA8RmllbGQgYXM+IGFuZCA8RmllbGQgY2hpbGRyZW4+IGFzIGEgZnVuY3Rpb24gaW4gdGhlIHNhbWUgPEZpZWxkPiBjb21wb25lbnQ7IDxGaWVsZCBhcz4gd2lsbCBiZSBpZ25vcmVkLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgICEhKGNvbXBvbmVudCAmJiBjaGlsZHJlbiAmJiBpc0Z1bmN0aW9uKGNoaWxkcmVuKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdZb3Ugc2hvdWxkIG5vdCB1c2UgPEZpZWxkIGNvbXBvbmVudD4gYW5kIDxGaWVsZCBjaGlsZHJlbj4gYXMgYSBmdW5jdGlvbiBpbiB0aGUgc2FtZSA8RmllbGQ+IGNvbXBvbmVudDsgPEZpZWxkIGNvbXBvbmVudD4gd2lsbCBiZSBpZ25vcmVkLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAgICEhKHJlbmRlciAmJiBjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdZb3Ugc2hvdWxkIG5vdCB1c2UgPEZpZWxkIHJlbmRlcj4gYW5kIDxGaWVsZCBjaGlsZHJlbj4gaW4gdGhlIHNhbWUgPEZpZWxkPiBjb21wb25lbnQ7IDxGaWVsZCBjaGlsZHJlbj4gd2lsbCBiZSBpZ25vcmVkJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgICB9LCBbXSk7XG4gIH0gLy8gUmVnaXN0ZXIgZmllbGQgYW5kIGZpZWxkLWxldmVsIHZhbGlkYXRpb24gd2l0aCBwYXJlbnQgPEZvcm1paz5cblxuXG4gIHZhciByZWdpc3RlckZpZWxkID0gZm9ybWlrLnJlZ2lzdGVyRmllbGQsXG4gICAgICB1bnJlZ2lzdGVyRmllbGQgPSBmb3JtaWsudW5yZWdpc3RlckZpZWxkO1xuICB1c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgIHJlZ2lzdGVyRmllbGQobmFtZSwge1xuICAgICAgdmFsaWRhdGU6IHZhbGlkYXRlXG4gICAgfSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIHVucmVnaXN0ZXJGaWVsZChuYW1lKTtcbiAgICB9O1xuICB9LCBbcmVnaXN0ZXJGaWVsZCwgdW5yZWdpc3RlckZpZWxkLCBuYW1lLCB2YWxpZGF0ZV0pO1xuICB2YXIgZmllbGQgPSBmb3JtaWsuZ2V0RmllbGRQcm9wcyhfZXh0ZW5kcyh7XG4gICAgbmFtZTogbmFtZVxuICB9LCBwcm9wcykpO1xuICB2YXIgbWV0YSA9IGZvcm1pay5nZXRGaWVsZE1ldGEobmFtZSk7XG4gIHZhciBsZWdhY3lCYWcgPSB7XG4gICAgZmllbGQ6IGZpZWxkLFxuICAgIGZvcm06IGZvcm1pa1xuICB9O1xuXG4gIGlmIChyZW5kZXIpIHtcbiAgICByZXR1cm4gcmVuZGVyKF9leHRlbmRzKHt9LCBsZWdhY3lCYWcsIHtcbiAgICAgIG1ldGE6IG1ldGFcbiAgICB9KSk7XG4gIH1cblxuICBpZiAoaXNGdW5jdGlvbihjaGlsZHJlbikpIHtcbiAgICByZXR1cm4gY2hpbGRyZW4oX2V4dGVuZHMoe30sIGxlZ2FjeUJhZywge1xuICAgICAgbWV0YTogbWV0YVxuICAgIH0pKTtcbiAgfVxuXG4gIGlmIChjb21wb25lbnQpIHtcbiAgICAvLyBUaGlzIGJlaGF2aW9yIGlzIGJhY2t3YXJkcyBjb21wYXQgd2l0aCBlYXJsaWVyIEZvcm1payAwLjkgdG8gMS54XG4gICAgaWYgKHR5cGVvZiBjb21wb25lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YXIgaW5uZXJSZWYgPSBwcm9wcy5pbm5lclJlZixcbiAgICAgICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcImlubmVyUmVmXCJdKTtcblxuICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgICAgIHJlZjogaW5uZXJSZWZcbiAgICAgIH0sIGZpZWxkLCByZXN0LCB7XG4gICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lXG4gICAgICB9KSwgY2hpbGRyZW4pO1xuICAgIH0gLy8gV2UgZG9uJ3QgcGFzcyBgbWV0YWAgZm9yIGJhY2t3YXJkcyBjb21wYXRcblxuXG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgICBmaWVsZDogZmllbGQsXG4gICAgICBmb3JtOiBmb3JtaWtcbiAgICB9LCBwcm9wcywge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVcbiAgICB9KSwgY2hpbGRyZW4pO1xuICB9IC8vIGRlZmF1bHQgdG8gaW5wdXQgaGVyZSBzbyB3ZSBjYW4gY2hlY2sgZm9yIGJvdGggYGFzYCBhbmQgYGNoaWxkcmVuYCBhYm92ZVxuXG5cbiAgdmFyIGFzRWxlbWVudCA9IGlzIHx8ICdpbnB1dCc7XG5cbiAgaWYgKHR5cGVvZiBhc0VsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgdmFyIF9pbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgICBfcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJpbm5lclJlZlwiXSk7XG5cbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChhc0VsZW1lbnQsIF9leHRlbmRzKHtcbiAgICAgIHJlZjogX2lubmVyUmVmXG4gICAgfSwgZmllbGQsIF9yZXN0LCB7XG4gICAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVxuICAgIH0pLCBjaGlsZHJlbik7XG4gIH1cblxuICByZXR1cm4gY3JlYXRlRWxlbWVudChhc0VsZW1lbnQsIF9leHRlbmRzKHt9LCBmaWVsZCwgcHJvcHMsIHtcbiAgICBjbGFzc05hbWU6IGNsYXNzTmFtZVxuICB9KSwgY2hpbGRyZW4pO1xufVxuXG52YXIgRm9ybSA9IC8qI19fUFVSRV9fKi9mb3J3YXJkUmVmKGZ1bmN0aW9uIChwcm9wcywgcmVmKSB7XG4gIC8vIGlPUyBuZWVkcyBhbiBcImFjdGlvblwiIGF0dHJpYnV0ZSBmb3IgbmljZSBpbnB1dDogaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9hLzM5NDg1MTYyLzQwNjcyNVxuICAvLyBXZSBkZWZhdWx0IHRoZSBhY3Rpb24gdG8gXCIjXCIgaW4gY2FzZSB0aGUgcHJldmVudERlZmF1bHQgZmFpbHMgKGp1c3QgdXBkYXRlcyB0aGUgVVJMIGhhc2gpXG4gIHZhciBhY3Rpb24gPSBwcm9wcy5hY3Rpb24sXG4gICAgICByZXN0ID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UocHJvcHMsIFtcImFjdGlvblwiXSk7XG5cbiAgdmFyIF9hY3Rpb24gPSBhY3Rpb24gIT0gbnVsbCA/IGFjdGlvbiA6ICcjJztcblxuICB2YXIgX3VzZUZvcm1pa0NvbnRleHQgPSB1c2VGb3JtaWtDb250ZXh0KCksXG4gICAgICBoYW5kbGVSZXNldCA9IF91c2VGb3JtaWtDb250ZXh0LmhhbmRsZVJlc2V0LFxuICAgICAgaGFuZGxlU3VibWl0ID0gX3VzZUZvcm1pa0NvbnRleHQuaGFuZGxlU3VibWl0O1xuXG4gIHJldHVybiBjcmVhdGVFbGVtZW50KFwiZm9ybVwiLCBfZXh0ZW5kcyh7XG4gICAgb25TdWJtaXQ6IGhhbmRsZVN1Ym1pdCxcbiAgICByZWY6IHJlZixcbiAgICBvblJlc2V0OiBoYW5kbGVSZXNldCxcbiAgICBhY3Rpb246IF9hY3Rpb25cbiAgfSwgcmVzdCkpO1xufSk7XG5Gb3JtLmRpc3BsYXlOYW1lID0gJ0Zvcm0nO1xuXG4vKipcclxuICogQSBwdWJsaWMgaGlnaGVyLW9yZGVyIGNvbXBvbmVudCB0byBhY2Nlc3MgdGhlIGltcGVyYXRpdmUgQVBJXHJcbiAqL1xuXG5mdW5jdGlvbiB3aXRoRm9ybWlrKF9yZWYpIHtcbiAgdmFyIF9yZWYkbWFwUHJvcHNUb1ZhbHVlcyA9IF9yZWYubWFwUHJvcHNUb1ZhbHVlcyxcbiAgICAgIG1hcFByb3BzVG9WYWx1ZXMgPSBfcmVmJG1hcFByb3BzVG9WYWx1ZXMgPT09IHZvaWQgMCA/IGZ1bmN0aW9uICh2YW5pbGxhUHJvcHMpIHtcbiAgICB2YXIgdmFsID0ge307XG5cbiAgICBmb3IgKHZhciBrIGluIHZhbmlsbGFQcm9wcykge1xuICAgICAgaWYgKHZhbmlsbGFQcm9wcy5oYXNPd25Qcm9wZXJ0eShrKSAmJiB0eXBlb2YgdmFuaWxsYVByb3BzW2tdICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIC8vIEB0b2RvIFR5cGVTY3JpcHQgZml4XG4gICAgICAgIHZhbFtrXSA9IHZhbmlsbGFQcm9wc1trXTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gdmFsO1xuICB9IDogX3JlZiRtYXBQcm9wc1RvVmFsdWVzLFxuICAgICAgY29uZmlnID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZiwgW1wibWFwUHJvcHNUb1ZhbHVlc1wiXSk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNyZWF0ZUZvcm1payhDb21wb25lbnQkMSkge1xuICAgIHZhciBjb21wb25lbnREaXNwbGF5TmFtZSA9IENvbXBvbmVudCQxLmRpc3BsYXlOYW1lIHx8IENvbXBvbmVudCQxLm5hbWUgfHwgQ29tcG9uZW50JDEuY29uc3RydWN0b3IgJiYgQ29tcG9uZW50JDEuY29uc3RydWN0b3IubmFtZSB8fCAnQ29tcG9uZW50JztcbiAgICAvKipcclxuICAgICAqIFdlIG5lZWQgdG8gdXNlIGNsb3N1cmVzIGhlcmUgZm9yIHRvIHByb3ZpZGUgdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgcHJvcHMgdG9cclxuICAgICAqIHRoZSByZXNwZWN0aXZlIHdpdGhGb3JtaWsgY29uZmlnIG1ldGhvZHMuXHJcbiAgICAgKi9cblxuICAgIHZhciBDID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gICAgICBfaW5oZXJpdHNMb29zZShDLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICAgICAgZnVuY3Rpb24gQygpIHtcbiAgICAgICAgdmFyIF90aGlzO1xuXG4gICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4pLCBfa2V5ID0gMDsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgIH1cblxuICAgICAgICBfdGhpcyA9IF9SZWFjdCRDb21wb25lbnQuY2FsbC5hcHBseShfUmVhY3QkQ29tcG9uZW50LCBbdGhpc10uY29uY2F0KGFyZ3MpKSB8fCB0aGlzO1xuXG4gICAgICAgIF90aGlzLnZhbGlkYXRlID0gZnVuY3Rpb24gKHZhbHVlcykge1xuICAgICAgICAgIHJldHVybiBjb25maWcudmFsaWRhdGUodmFsdWVzLCBfdGhpcy5wcm9wcyk7XG4gICAgICAgIH07XG5cbiAgICAgICAgX3RoaXMudmFsaWRhdGlvblNjaGVtYSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICByZXR1cm4gaXNGdW5jdGlvbihjb25maWcudmFsaWRhdGlvblNjaGVtYSkgPyBjb25maWcudmFsaWRhdGlvblNjaGVtYShfdGhpcy5wcm9wcykgOiBjb25maWcudmFsaWRhdGlvblNjaGVtYTtcbiAgICAgICAgfTtcblxuICAgICAgICBfdGhpcy5oYW5kbGVTdWJtaXQgPSBmdW5jdGlvbiAodmFsdWVzLCBhY3Rpb25zKSB7XG4gICAgICAgICAgcmV0dXJuIGNvbmZpZy5oYW5kbGVTdWJtaXQodmFsdWVzLCBfZXh0ZW5kcyh7fSwgYWN0aW9ucywge1xuICAgICAgICAgICAgcHJvcHM6IF90aGlzLnByb3BzXG4gICAgICAgICAgfSkpO1xuICAgICAgICB9O1xuXG4gICAgICAgIF90aGlzLnJlbmRlckZvcm1Db21wb25lbnQgPSBmdW5jdGlvbiAoZm9ybWlrUHJvcHMpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlRWxlbWVudChDb21wb25lbnQkMSwgX2V4dGVuZHMoe30sIF90aGlzLnByb3BzLCBmb3JtaWtQcm9wcykpO1xuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBfdGhpcztcbiAgICAgIH1cblxuICAgICAgdmFyIF9wcm90byA9IEMucHJvdG90eXBlO1xuXG4gICAgICBfcHJvdG8ucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiY2hpbGRyZW5cIl0pO1xuXG4gICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KEZvcm1paywgX2V4dGVuZHMoe30sIHByb3BzLCBjb25maWcsIHtcbiAgICAgICAgICB2YWxpZGF0ZTogY29uZmlnLnZhbGlkYXRlICYmIHRoaXMudmFsaWRhdGUsXG4gICAgICAgICAgdmFsaWRhdGlvblNjaGVtYTogY29uZmlnLnZhbGlkYXRpb25TY2hlbWEgJiYgdGhpcy52YWxpZGF0aW9uU2NoZW1hLFxuICAgICAgICAgIGluaXRpYWxWYWx1ZXM6IG1hcFByb3BzVG9WYWx1ZXModGhpcy5wcm9wcyksXG4gICAgICAgICAgaW5pdGlhbFN0YXR1czogY29uZmlnLm1hcFByb3BzVG9TdGF0dXMgJiYgY29uZmlnLm1hcFByb3BzVG9TdGF0dXModGhpcy5wcm9wcyksXG4gICAgICAgICAgaW5pdGlhbEVycm9yczogY29uZmlnLm1hcFByb3BzVG9FcnJvcnMgJiYgY29uZmlnLm1hcFByb3BzVG9FcnJvcnModGhpcy5wcm9wcyksXG4gICAgICAgICAgaW5pdGlhbFRvdWNoZWQ6IGNvbmZpZy5tYXBQcm9wc1RvVG91Y2hlZCAmJiBjb25maWcubWFwUHJvcHNUb1RvdWNoZWQodGhpcy5wcm9wcyksXG4gICAgICAgICAgb25TdWJtaXQ6IHRoaXMuaGFuZGxlU3VibWl0LFxuICAgICAgICAgIGNoaWxkcmVuOiB0aGlzLnJlbmRlckZvcm1Db21wb25lbnRcbiAgICAgICAgfSkpO1xuICAgICAgfTtcblxuICAgICAgcmV0dXJuIEM7XG4gICAgfShDb21wb25lbnQpO1xuXG4gICAgQy5kaXNwbGF5TmFtZSA9IFwiV2l0aEZvcm1payhcIiArIGNvbXBvbmVudERpc3BsYXlOYW1lICsgXCIpXCI7XG4gICAgcmV0dXJuIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKEMsIENvbXBvbmVudCQxIC8vIGNhc3QgdHlwZSB0byBDb21wb25lbnRDbGFzcyAoZXZlbiBpZiBTRkMpXG4gICAgKTtcbiAgfTtcbn1cblxuLyoqXHJcbiAqIENvbm5lY3QgYW55IGNvbXBvbmVudCB0byBGb3JtaWsgY29udGV4dCwgYW5kIGluamVjdCBhcyBhIHByb3AgY2FsbGVkIGBmb3JtaWtgO1xyXG4gKiBAcGFyYW0gQ29tcCBSZWFjdCBDb21wb25lbnRcclxuICovXG5cbmZ1bmN0aW9uIGNvbm5lY3QoQ29tcCkge1xuICB2YXIgQyA9IGZ1bmN0aW9uIEMocHJvcHMpIHtcbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChGb3JtaWtDb25zdW1lciwgbnVsbCwgZnVuY3Rpb24gKGZvcm1paykge1xuICAgICAgISEhZm9ybWlrID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCBcIkZvcm1payBjb250ZXh0IGlzIHVuZGVmaW5lZCwgcGxlYXNlIHZlcmlmeSB5b3UgYXJlIHJlbmRlcmluZyA8Rm9ybT4sIDxGaWVsZD4sIDxGYXN0RmllbGQ+LCA8RmllbGRBcnJheT4sIG9yIHlvdXIgY3VzdG9tIGNvbnRleHQtdXNpbmcgY29tcG9uZW50IGFzIGEgY2hpbGQgb2YgYSA8Rm9ybWlrPiBjb21wb25lbnQuIENvbXBvbmVudCBuYW1lOiBcIiArIENvbXAubmFtZSkgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoQ29tcCwgX2V4dGVuZHMoe30sIHByb3BzLCB7XG4gICAgICAgIGZvcm1pazogZm9ybWlrXG4gICAgICB9KSk7XG4gICAgfSk7XG4gIH07XG5cbiAgdmFyIGNvbXBvbmVudERpc3BsYXlOYW1lID0gQ29tcC5kaXNwbGF5TmFtZSB8fCBDb21wLm5hbWUgfHwgQ29tcC5jb25zdHJ1Y3RvciAmJiBDb21wLmNvbnN0cnVjdG9yLm5hbWUgfHwgJ0NvbXBvbmVudCc7IC8vIEFzc2lnbiBDb21wIHRvIEMuV3JhcHBlZENvbXBvbmVudCBzbyB3ZSBjYW4gYWNjZXNzIHRoZSBpbm5lciBjb21wb25lbnQgaW4gdGVzdHNcbiAgLy8gRm9yIGV4YW1wbGUsIDxGaWVsZC5XcmFwcGVkQ29tcG9uZW50IC8+IGdldHMgdXMgPEZpZWxkSW5uZXIvPlxuXG4gIEMuV3JhcHBlZENvbXBvbmVudCA9IENvbXA7XG4gIEMuZGlzcGxheU5hbWUgPSBcIkZvcm1pa0Nvbm5lY3QoXCIgKyBjb21wb25lbnREaXNwbGF5TmFtZSArIFwiKVwiO1xuICByZXR1cm4gaG9pc3ROb25SZWFjdFN0YXRpY3MoQywgQ29tcCAvLyBjYXN0IHR5cGUgdG8gQ29tcG9uZW50Q2xhc3MgKGV2ZW4gaWYgU0ZDKVxuICApO1xufVxuXG4vKipcclxuICogU29tZSBhcnJheSBoZWxwZXJzIVxyXG4gKi9cblxudmFyIG1vdmUgPSBmdW5jdGlvbiBtb3ZlKGFycmF5LCBmcm9tLCB0bykge1xuICB2YXIgY29weSA9IGNvcHlBcnJheUxpa2UoYXJyYXkpO1xuICB2YXIgdmFsdWUgPSBjb3B5W2Zyb21dO1xuICBjb3B5LnNwbGljZShmcm9tLCAxKTtcbiAgY29weS5zcGxpY2UodG8sIDAsIHZhbHVlKTtcbiAgcmV0dXJuIGNvcHk7XG59O1xudmFyIHN3YXAgPSBmdW5jdGlvbiBzd2FwKGFycmF5TGlrZSwgaW5kZXhBLCBpbmRleEIpIHtcbiAgdmFyIGNvcHkgPSBjb3B5QXJyYXlMaWtlKGFycmF5TGlrZSk7XG4gIHZhciBhID0gY29weVtpbmRleEFdO1xuICBjb3B5W2luZGV4QV0gPSBjb3B5W2luZGV4Ql07XG4gIGNvcHlbaW5kZXhCXSA9IGE7XG4gIHJldHVybiBjb3B5O1xufTtcbnZhciBpbnNlcnQgPSBmdW5jdGlvbiBpbnNlcnQoYXJyYXlMaWtlLCBpbmRleCwgdmFsdWUpIHtcbiAgdmFyIGNvcHkgPSBjb3B5QXJyYXlMaWtlKGFycmF5TGlrZSk7XG4gIGNvcHkuc3BsaWNlKGluZGV4LCAwLCB2YWx1ZSk7XG4gIHJldHVybiBjb3B5O1xufTtcbnZhciByZXBsYWNlID0gZnVuY3Rpb24gcmVwbGFjZShhcnJheUxpa2UsIGluZGV4LCB2YWx1ZSkge1xuICB2YXIgY29weSA9IGNvcHlBcnJheUxpa2UoYXJyYXlMaWtlKTtcbiAgY29weVtpbmRleF0gPSB2YWx1ZTtcbiAgcmV0dXJuIGNvcHk7XG59O1xuXG52YXIgY29weUFycmF5TGlrZSA9IGZ1bmN0aW9uIGNvcHlBcnJheUxpa2UoYXJyYXlMaWtlKSB7XG4gIGlmICghYXJyYXlMaWtlKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJyYXlMaWtlKSkge1xuICAgIHJldHVybiBbXS5jb25jYXQoYXJyYXlMaWtlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgbWF4SW5kZXggPSBPYmplY3Qua2V5cyhhcnJheUxpa2UpLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gcGFyc2VJbnQoa2V5KTtcbiAgICB9KS5yZWR1Y2UoZnVuY3Rpb24gKG1heCwgZWwpIHtcbiAgICAgIHJldHVybiBlbCA+IG1heCA/IGVsIDogbWF4O1xuICAgIH0sIDApO1xuICAgIHJldHVybiBBcnJheS5mcm9tKF9leHRlbmRzKHt9LCBhcnJheUxpa2UsIHtcbiAgICAgIGxlbmd0aDogbWF4SW5kZXggKyAxXG4gICAgfSkpO1xuICB9XG59O1xuXG52YXIgY3JlYXRlQWx0ZXJhdGlvbkhhbmRsZXIgPSBmdW5jdGlvbiBjcmVhdGVBbHRlcmF0aW9uSGFuZGxlcihhbHRlcmF0aW9uLCBkZWZhdWx0RnVuY3Rpb24pIHtcbiAgdmFyIGZuID0gdHlwZW9mIGFsdGVyYXRpb24gPT09ICdmdW5jdGlvbicgPyBhbHRlcmF0aW9uIDogZGVmYXVsdEZ1bmN0aW9uO1xuICByZXR1cm4gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSB8fCBpc09iamVjdChkYXRhKSkge1xuICAgICAgdmFyIGNsb25lID0gY29weUFycmF5TGlrZShkYXRhKTtcbiAgICAgIHJldHVybiBmbihjbG9uZSk7XG4gICAgfSAvLyBUaGlzIGNhbiBiZSBhc3N1bWVkIHRvIGJlIGEgcHJpbWl0aXZlLCB3aGljaFxuICAgIC8vIGlzIGEgY2FzZSBmb3IgdG9wIGxldmVsIHZhbGlkYXRpb24gZXJyb3JzXG5cblxuICAgIHJldHVybiBkYXRhO1xuICB9O1xufTtcblxudmFyIEZpZWxkQXJyYXlJbm5lciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShGaWVsZEFycmF5SW5uZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEZpZWxkQXJyYXlJbm5lcihwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF90aGlzID0gX1JlYWN0JENvbXBvbmVudC5jYWxsKHRoaXMsIHByb3BzKSB8fCB0aGlzOyAvLyBXZSBuZWVkIFR5cGVTY3JpcHQgZ2VuZXJpY3Mgb24gdGhlc2UsIHNvIHdlJ2xsIGJpbmQgdGhlbSBpbiB0aGUgY29uc3RydWN0b3JcbiAgICAvLyBAdG9kbyBGaXggVFMgMy4yLjFcblxuICAgIF90aGlzLnVwZGF0ZUFycmF5RmllbGQgPSBmdW5jdGlvbiAoZm4sIGFsdGVyVG91Y2hlZCwgYWx0ZXJFcnJvcnMpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IF90aGlzLnByb3BzLFxuICAgICAgICAgIG5hbWUgPSBfdGhpcyRwcm9wcy5uYW1lLFxuICAgICAgICAgIHNldEZvcm1pa1N0YXRlID0gX3RoaXMkcHJvcHMuZm9ybWlrLnNldEZvcm1pa1N0YXRlO1xuICAgICAgc2V0Rm9ybWlrU3RhdGUoZnVuY3Rpb24gKHByZXZTdGF0ZSkge1xuICAgICAgICB2YXIgdXBkYXRlRXJyb3JzID0gY3JlYXRlQWx0ZXJhdGlvbkhhbmRsZXIoYWx0ZXJFcnJvcnMsIGZuKTtcbiAgICAgICAgdmFyIHVwZGF0ZVRvdWNoZWQgPSBjcmVhdGVBbHRlcmF0aW9uSGFuZGxlcihhbHRlclRvdWNoZWQsIGZuKTsgLy8gdmFsdWVzIGZuIHNob3VsZCBiZSBleGVjdXRlZCBiZWZvcmUgdXBkYXRlRXJyb3JzIGFuZCB1cGRhdGVUb3VjaGVkLFxuICAgICAgICAvLyBvdGhlcndpc2UgaXQgY2F1c2VzIGFuIGVycm9yIHdpdGggdW5zaGlmdC5cblxuICAgICAgICB2YXIgdmFsdWVzID0gc2V0SW4ocHJldlN0YXRlLnZhbHVlcywgbmFtZSwgZm4oZ2V0SW4ocHJldlN0YXRlLnZhbHVlcywgbmFtZSkpKTtcbiAgICAgICAgdmFyIGZpZWxkRXJyb3IgPSBhbHRlckVycm9ycyA/IHVwZGF0ZUVycm9ycyhnZXRJbihwcmV2U3RhdGUuZXJyb3JzLCBuYW1lKSkgOiB1bmRlZmluZWQ7XG4gICAgICAgIHZhciBmaWVsZFRvdWNoZWQgPSBhbHRlclRvdWNoZWQgPyB1cGRhdGVUb3VjaGVkKGdldEluKHByZXZTdGF0ZS50b3VjaGVkLCBuYW1lKSkgOiB1bmRlZmluZWQ7XG5cbiAgICAgICAgaWYgKGlzRW1wdHlBcnJheShmaWVsZEVycm9yKSkge1xuICAgICAgICAgIGZpZWxkRXJyb3IgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXNFbXB0eUFycmF5KGZpZWxkVG91Y2hlZCkpIHtcbiAgICAgICAgICBmaWVsZFRvdWNoZWQgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gX2V4dGVuZHMoe30sIHByZXZTdGF0ZSwge1xuICAgICAgICAgIHZhbHVlczogdmFsdWVzLFxuICAgICAgICAgIGVycm9yczogYWx0ZXJFcnJvcnMgPyBzZXRJbihwcmV2U3RhdGUuZXJyb3JzLCBuYW1lLCBmaWVsZEVycm9yKSA6IHByZXZTdGF0ZS5lcnJvcnMsXG4gICAgICAgICAgdG91Y2hlZDogYWx0ZXJUb3VjaGVkID8gc2V0SW4ocHJldlN0YXRlLnRvdWNoZWQsIG5hbWUsIGZpZWxkVG91Y2hlZCkgOiBwcmV2U3RhdGUudG91Y2hlZFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5wdXNoID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gX3RoaXMudXBkYXRlQXJyYXlGaWVsZChmdW5jdGlvbiAoYXJyYXlMaWtlKSB7XG4gICAgICAgIHJldHVybiBbXS5jb25jYXQoY29weUFycmF5TGlrZShhcnJheUxpa2UpLCBbY2xvbmVEZWVwKHZhbHVlKV0pO1xuICAgICAgfSwgZmFsc2UsIGZhbHNlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUHVzaCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLnB1c2godmFsdWUpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgX3RoaXMuc3dhcCA9IGZ1bmN0aW9uIChpbmRleEEsIGluZGV4Qikge1xuICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZUFycmF5RmllbGQoZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHJldHVybiBzd2FwKGFycmF5LCBpbmRleEEsIGluZGV4Qik7XG4gICAgICB9LCB0cnVlLCB0cnVlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlU3dhcCA9IGZ1bmN0aW9uIChpbmRleEEsIGluZGV4Qikge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLnN3YXAoaW5kZXhBLCBpbmRleEIpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgX3RoaXMubW92ZSA9IGZ1bmN0aW9uIChmcm9tLCB0bykge1xuICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZUFycmF5RmllbGQoZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHJldHVybiBtb3ZlKGFycmF5LCBmcm9tLCB0byk7XG4gICAgICB9LCB0cnVlLCB0cnVlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlTW92ZSA9IGZ1bmN0aW9uIChmcm9tLCB0bykge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLm1vdmUoZnJvbSwgdG8pO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaW5zZXJ0ID0gZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZUFycmF5RmllbGQoZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHJldHVybiBpbnNlcnQoYXJyYXksIGluZGV4LCB2YWx1ZSk7XG4gICAgICB9LCBmdW5jdGlvbiAoYXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGluc2VydChhcnJheSwgaW5kZXgsIG51bGwpO1xuICAgICAgfSwgZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHJldHVybiBpbnNlcnQoYXJyYXksIGluZGV4LCBudWxsKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdGhpcy5oYW5kbGVJbnNlcnQgPSBmdW5jdGlvbiAoaW5kZXgsIHZhbHVlKSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMuaW5zZXJ0KGluZGV4LCB2YWx1ZSk7XG4gICAgICB9O1xuICAgIH07XG5cbiAgICBfdGhpcy5yZXBsYWNlID0gZnVuY3Rpb24gKGluZGV4LCB2YWx1ZSkge1xuICAgICAgcmV0dXJuIF90aGlzLnVwZGF0ZUFycmF5RmllbGQoZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHJldHVybiByZXBsYWNlKGFycmF5LCBpbmRleCwgdmFsdWUpO1xuICAgICAgfSwgZmFsc2UsIGZhbHNlKTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVwbGFjZSA9IGZ1bmN0aW9uIChpbmRleCwgdmFsdWUpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5yZXBsYWNlKGluZGV4LCB2YWx1ZSk7XG4gICAgICB9O1xuICAgIH07XG5cbiAgICBfdGhpcy51bnNoaWZ0ID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICB2YXIgbGVuZ3RoID0gLTE7XG5cbiAgICAgIF90aGlzLnVwZGF0ZUFycmF5RmllbGQoZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICAgIHZhciBhcnIgPSBhcnJheSA/IFt2YWx1ZV0uY29uY2F0KGFycmF5KSA6IFt2YWx1ZV07XG4gICAgICAgIGxlbmd0aCA9IGFyci5sZW5ndGg7XG4gICAgICAgIHJldHVybiBhcnI7XG4gICAgICB9LCBmdW5jdGlvbiAoYXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5ID8gW251bGxdLmNvbmNhdChhcnJheSkgOiBbbnVsbF07XG4gICAgICB9LCBmdW5jdGlvbiAoYXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5ID8gW251bGxdLmNvbmNhdChhcnJheSkgOiBbbnVsbF07XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlVW5zaGlmdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF90aGlzLnVuc2hpZnQodmFsdWUpO1xuICAgICAgfTtcbiAgICB9O1xuXG4gICAgX3RoaXMuaGFuZGxlUmVtb3ZlID0gZnVuY3Rpb24gKGluZGV4KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gX3RoaXMucmVtb3ZlKGluZGV4KTtcbiAgICAgIH07XG4gICAgfTtcblxuICAgIF90aGlzLmhhbmRsZVBvcCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfdGhpcy5wb3AoKTtcbiAgICAgIH07XG4gICAgfTtcblxuICAgIF90aGlzLnJlbW92ZSA9IF90aGlzLnJlbW92ZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5wb3AgPSBfdGhpcy5wb3AuYmluZChfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSk7XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IEZpZWxkQXJyYXlJbm5lci5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy52YWxpZGF0ZU9uQ2hhbmdlICYmIHRoaXMucHJvcHMuZm9ybWlrLnZhbGlkYXRlT25DaGFuZ2UgJiYgIWlzRXF1YWwoZ2V0SW4ocHJldlByb3BzLmZvcm1pay52YWx1ZXMsIHByZXZQcm9wcy5uYW1lKSwgZ2V0SW4odGhpcy5wcm9wcy5mb3JtaWsudmFsdWVzLCB0aGlzLnByb3BzLm5hbWUpKSkge1xuICAgICAgdGhpcy5wcm9wcy5mb3JtaWsudmFsaWRhdGVGb3JtKHRoaXMucHJvcHMuZm9ybWlrLnZhbHVlcyk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoaW5kZXgpIHtcbiAgICAvLyBXZSBuZWVkIHRvIG1ha2Ugc3VyZSB3ZSBhbHNvIHJlbW92ZSByZWxldmFudCBwaWVjZXMgb2YgYHRvdWNoZWRgIGFuZCBgZXJyb3JzYFxuICAgIHZhciByZXN1bHQ7XG4gICAgdGhpcy51cGRhdGVBcnJheUZpZWxkKCAvLyBzbyB0aGlzIGdldHMgY2FsbCAzIHRpbWVzXG4gICAgZnVuY3Rpb24gKGFycmF5KSB7XG4gICAgICB2YXIgY29weSA9IGFycmF5ID8gY29weUFycmF5TGlrZShhcnJheSkgOiBbXTtcblxuICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgcmVzdWx0ID0gY29weVtpbmRleF07XG4gICAgICB9XG5cbiAgICAgIGlmIChpc0Z1bmN0aW9uKGNvcHkuc3BsaWNlKSkge1xuICAgICAgICBjb3B5LnNwbGljZShpbmRleCwgMSk7XG4gICAgICB9IC8vIGlmIHRoZSBhcnJheSBvbmx5IGluY2x1ZGVzIHVuZGVmaW5lZCB2YWx1ZXMgd2UgaGF2ZSB0byByZXR1cm4gYW4gZW1wdHkgYXJyYXlcblxuXG4gICAgICByZXR1cm4gaXNGdW5jdGlvbihjb3B5LmV2ZXJ5KSA/IGNvcHkuZXZlcnkoZnVuY3Rpb24gKHYpIHtcbiAgICAgICAgcmV0dXJuIHYgPT09IHVuZGVmaW5lZDtcbiAgICAgIH0pID8gW10gOiBjb3B5IDogY29weTtcbiAgICB9LCB0cnVlLCB0cnVlKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIF9wcm90by5wb3AgPSBmdW5jdGlvbiBwb3AoKSB7XG4gICAgLy8gUmVtb3ZlIHJlbGV2YW50IHBpZWNlcyBvZiBgdG91Y2hlZGAgYW5kIGBlcnJvcnNgIHRvbyFcbiAgICB2YXIgcmVzdWx0O1xuICAgIHRoaXMudXBkYXRlQXJyYXlGaWVsZCggLy8gc28gdGhpcyBnZXRzIGNhbGwgMyB0aW1lc1xuICAgIGZ1bmN0aW9uIChhcnJheSkge1xuICAgICAgdmFyIHRtcCA9IGFycmF5LnNsaWNlKCk7XG5cbiAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgIHJlc3VsdCA9IHRtcCAmJiB0bXAucG9wICYmIHRtcC5wb3AoKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRtcDtcbiAgICB9LCB0cnVlLCB0cnVlKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIGFycmF5SGVscGVycyA9IHtcbiAgICAgIHB1c2g6IHRoaXMucHVzaCxcbiAgICAgIHBvcDogdGhpcy5wb3AsXG4gICAgICBzd2FwOiB0aGlzLnN3YXAsXG4gICAgICBtb3ZlOiB0aGlzLm1vdmUsXG4gICAgICBpbnNlcnQ6IHRoaXMuaW5zZXJ0LFxuICAgICAgcmVwbGFjZTogdGhpcy5yZXBsYWNlLFxuICAgICAgdW5zaGlmdDogdGhpcy51bnNoaWZ0LFxuICAgICAgcmVtb3ZlOiB0aGlzLnJlbW92ZSxcbiAgICAgIGhhbmRsZVB1c2g6IHRoaXMuaGFuZGxlUHVzaCxcbiAgICAgIGhhbmRsZVBvcDogdGhpcy5oYW5kbGVQb3AsXG4gICAgICBoYW5kbGVTd2FwOiB0aGlzLmhhbmRsZVN3YXAsXG4gICAgICBoYW5kbGVNb3ZlOiB0aGlzLmhhbmRsZU1vdmUsXG4gICAgICBoYW5kbGVJbnNlcnQ6IHRoaXMuaGFuZGxlSW5zZXJ0LFxuICAgICAgaGFuZGxlUmVwbGFjZTogdGhpcy5oYW5kbGVSZXBsYWNlLFxuICAgICAgaGFuZGxlVW5zaGlmdDogdGhpcy5oYW5kbGVVbnNoaWZ0LFxuICAgICAgaGFuZGxlUmVtb3ZlOiB0aGlzLmhhbmRsZVJlbW92ZVxuICAgIH07XG5cbiAgICB2YXIgX3RoaXMkcHJvcHMyID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMyLmNvbXBvbmVudCxcbiAgICAgICAgcmVuZGVyID0gX3RoaXMkcHJvcHMyLnJlbmRlcixcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wczIuY2hpbGRyZW4sXG4gICAgICAgIG5hbWUgPSBfdGhpcyRwcm9wczIubmFtZSxcbiAgICAgICAgX3RoaXMkcHJvcHMyJGZvcm1payA9IF90aGlzJHByb3BzMi5mb3JtaWssXG4gICAgICAgIHJlc3RPZkZvcm1payA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKF90aGlzJHByb3BzMiRmb3JtaWssIFtcInZhbGlkYXRlXCIsIFwidmFsaWRhdGlvblNjaGVtYVwiXSk7XG5cbiAgICB2YXIgcHJvcHMgPSBfZXh0ZW5kcyh7fSwgYXJyYXlIZWxwZXJzLCB7XG4gICAgICBmb3JtOiByZXN0T2ZGb3JtaWssXG4gICAgICBuYW1lOiBuYW1lXG4gICAgfSk7XG5cbiAgICByZXR1cm4gY29tcG9uZW50ID8gY3JlYXRlRWxlbWVudChjb21wb25lbnQsIHByb3BzKSA6IHJlbmRlciA/IHJlbmRlcihwcm9wcykgOiBjaGlsZHJlbiAvLyBjaGlsZHJlbiBjb21lIGxhc3QsIGFsd2F5cyBjYWxsZWRcbiAgICA/IHR5cGVvZiBjaGlsZHJlbiA9PT0gJ2Z1bmN0aW9uJyA/IGNoaWxkcmVuKHByb3BzKSA6ICFpc0VtcHR5Q2hpbGRyZW4oY2hpbGRyZW4pID8gQ2hpbGRyZW4ub25seShjaGlsZHJlbikgOiBudWxsIDogbnVsbDtcbiAgfTtcblxuICByZXR1cm4gRmllbGRBcnJheUlubmVyO1xufShDb21wb25lbnQpO1xuXG5GaWVsZEFycmF5SW5uZXIuZGVmYXVsdFByb3BzID0ge1xuICB2YWxpZGF0ZU9uQ2hhbmdlOiB0cnVlXG59O1xudmFyIEZpZWxkQXJyYXkgPSAvKiNfX1BVUkVfXyovY29ubmVjdChGaWVsZEFycmF5SW5uZXIpO1xuXG52YXIgRXJyb3JNZXNzYWdlSW1wbCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHNMb29zZShFcnJvck1lc3NhZ2VJbXBsLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBFcnJvck1lc3NhZ2VJbXBsKCkge1xuICAgIHJldHVybiBfUmVhY3QkQ29tcG9uZW50LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgfVxuXG4gIHZhciBfcHJvdG8gPSBFcnJvck1lc3NhZ2VJbXBsLnByb3RvdHlwZTtcblxuICBfcHJvdG8uc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gZnVuY3Rpb24gc2hvdWxkQ29tcG9uZW50VXBkYXRlKHByb3BzKSB7XG4gICAgaWYgKGdldEluKHRoaXMucHJvcHMuZm9ybWlrLmVycm9ycywgdGhpcy5wcm9wcy5uYW1lKSAhPT0gZ2V0SW4ocHJvcHMuZm9ybWlrLmVycm9ycywgdGhpcy5wcm9wcy5uYW1lKSB8fCBnZXRJbih0aGlzLnByb3BzLmZvcm1pay50b3VjaGVkLCB0aGlzLnByb3BzLm5hbWUpICE9PSBnZXRJbihwcm9wcy5mb3JtaWsudG91Y2hlZCwgdGhpcy5wcm9wcy5uYW1lKSB8fCBPYmplY3Qua2V5cyh0aGlzLnByb3BzKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKHByb3BzKS5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICBmb3JtaWsgPSBfdGhpcyRwcm9wcy5mb3JtaWssXG4gICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcixcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgbmFtZSA9IF90aGlzJHByb3BzLm5hbWUsXG4gICAgICAgIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShfdGhpcyRwcm9wcywgW1wiY29tcG9uZW50XCIsIFwiZm9ybWlrXCIsIFwicmVuZGVyXCIsIFwiY2hpbGRyZW5cIiwgXCJuYW1lXCJdKTtcblxuICAgIHZhciB0b3VjaCA9IGdldEluKGZvcm1pay50b3VjaGVkLCBuYW1lKTtcbiAgICB2YXIgZXJyb3IgPSBnZXRJbihmb3JtaWsuZXJyb3JzLCBuYW1lKTtcbiAgICByZXR1cm4gISF0b3VjaCAmJiAhIWVycm9yID8gcmVuZGVyID8gaXNGdW5jdGlvbihyZW5kZXIpID8gcmVuZGVyKGVycm9yKSA6IG51bGwgOiBjaGlsZHJlbiA/IGlzRnVuY3Rpb24oY2hpbGRyZW4pID8gY2hpbGRyZW4oZXJyb3IpIDogbnVsbCA6IGNvbXBvbmVudCA/IGNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCByZXN0LCBlcnJvcikgOiBlcnJvciA6IG51bGw7XG4gIH07XG5cbiAgcmV0dXJuIEVycm9yTWVzc2FnZUltcGw7XG59KENvbXBvbmVudCk7XG5cbnZhciBFcnJvck1lc3NhZ2UgPSAvKiNfX1BVUkVfXyovY29ubmVjdChFcnJvck1lc3NhZ2VJbXBsKTtcblxuLyoqXHJcbiAqIEN1c3RvbSBGaWVsZCBjb21wb25lbnQgZm9yIHF1aWNrbHkgaG9va2luZyBpbnRvIEZvcm1pa1xyXG4gKiBjb250ZXh0IGFuZCB3aXJpbmcgdXAgZm9ybXMuXHJcbiAqL1xuXG52YXIgRmFzdEZpZWxkSW5uZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzTG9vc2UoRmFzdEZpZWxkSW5uZXIsIF9SZWFjdCRDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEZhc3RGaWVsZElubmVyKHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX3RoaXMgPSBfUmVhY3QkQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMpIHx8IHRoaXM7XG4gICAgdmFyIHJlbmRlciA9IHByb3BzLnJlbmRlcixcbiAgICAgICAgY2hpbGRyZW4gPSBwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gcHJvcHMuY29tcG9uZW50LFxuICAgICAgICBpcyA9IHByb3BzLmFzLFxuICAgICAgICBuYW1lID0gcHJvcHMubmFtZTtcbiAgICAhIXJlbmRlciA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgXCI8RmFzdEZpZWxkIHJlbmRlcj4gaGFzIGJlZW4gZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBhIGNoaWxkIGNhbGxiYWNrIGZ1bmN0aW9uIGluc3RlYWQ6IDxGYXN0RmllbGQgbmFtZT17XCIgKyBuYW1lICsgXCJ9Pntwcm9wcyA9PiAuLi59PC9GYXN0RmllbGQ+IGluc3RlYWQuXCIpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAhIShjb21wb25lbnQgJiYgcmVuZGVyKSA/IHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIiA/IGludmFyaWFudChmYWxzZSwgJ1lvdSBzaG91bGQgbm90IHVzZSA8RmFzdEZpZWxkIGNvbXBvbmVudD4gYW5kIDxGYXN0RmllbGQgcmVuZGVyPiBpbiB0aGUgc2FtZSA8RmFzdEZpZWxkPiBjb21wb25lbnQ7IDxGYXN0RmllbGQgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWQnKSA6IGludmFyaWFudChmYWxzZSkgOiB2b2lkIDA7XG4gICAgISEoaXMgJiYgY2hpbGRyZW4gJiYgaXNGdW5jdGlvbihjaGlsZHJlbikpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnWW91IHNob3VsZCBub3QgdXNlIDxGYXN0RmllbGQgYXM+IGFuZCA8RmFzdEZpZWxkIGNoaWxkcmVuPiBhcyBhIGZ1bmN0aW9uIGluIHRoZSBzYW1lIDxGYXN0RmllbGQ+IGNvbXBvbmVudDsgPEZhc3RGaWVsZCBhcz4gd2lsbCBiZSBpZ25vcmVkLicpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICAhIShjb21wb25lbnQgJiYgY2hpbGRyZW4gJiYgaXNGdW5jdGlvbihjaGlsZHJlbikpID8gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiID8gaW52YXJpYW50KGZhbHNlLCAnWW91IHNob3VsZCBub3QgdXNlIDxGYXN0RmllbGQgY29tcG9uZW50PiBhbmQgPEZhc3RGaWVsZCBjaGlsZHJlbj4gYXMgYSBmdW5jdGlvbiBpbiB0aGUgc2FtZSA8RmFzdEZpZWxkPiBjb21wb25lbnQ7IDxGYXN0RmllbGQgY29tcG9uZW50PiB3aWxsIGJlIGlnbm9yZWQuJykgOiBpbnZhcmlhbnQoZmFsc2UpIDogdm9pZCAwO1xuICAgICEhKHJlbmRlciAmJiBjaGlsZHJlbiAmJiAhaXNFbXB0eUNoaWxkcmVuKGNoaWxkcmVuKSkgPyBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgPyBpbnZhcmlhbnQoZmFsc2UsICdZb3Ugc2hvdWxkIG5vdCB1c2UgPEZhc3RGaWVsZCByZW5kZXI+IGFuZCA8RmFzdEZpZWxkIGNoaWxkcmVuPiBpbiB0aGUgc2FtZSA8RmFzdEZpZWxkPiBjb21wb25lbnQ7IDxGYXN0RmllbGQgY2hpbGRyZW4+IHdpbGwgYmUgaWdub3JlZCcpIDogaW52YXJpYW50KGZhbHNlKSA6IHZvaWQgMDtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gRmFzdEZpZWxkSW5uZXIucHJvdG90eXBlO1xuXG4gIF9wcm90by5zaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUocHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5zaG91bGRVcGRhdGUpIHtcbiAgICAgIHJldHVybiB0aGlzLnByb3BzLnNob3VsZFVwZGF0ZShwcm9wcywgdGhpcy5wcm9wcyk7XG4gICAgfSBlbHNlIGlmIChwcm9wcy5uYW1lICE9PSB0aGlzLnByb3BzLm5hbWUgfHwgZ2V0SW4ocHJvcHMuZm9ybWlrLnZhbHVlcywgdGhpcy5wcm9wcy5uYW1lKSAhPT0gZ2V0SW4odGhpcy5wcm9wcy5mb3JtaWsudmFsdWVzLCB0aGlzLnByb3BzLm5hbWUpIHx8IGdldEluKHByb3BzLmZvcm1pay5lcnJvcnMsIHRoaXMucHJvcHMubmFtZSkgIT09IGdldEluKHRoaXMucHJvcHMuZm9ybWlrLmVycm9ycywgdGhpcy5wcm9wcy5uYW1lKSB8fCBnZXRJbihwcm9wcy5mb3JtaWsudG91Y2hlZCwgdGhpcy5wcm9wcy5uYW1lKSAhPT0gZ2V0SW4odGhpcy5wcm9wcy5mb3JtaWsudG91Y2hlZCwgdGhpcy5wcm9wcy5uYW1lKSB8fCBPYmplY3Qua2V5cyh0aGlzLnByb3BzKS5sZW5ndGggIT09IE9iamVjdC5rZXlzKHByb3BzKS5sZW5ndGggfHwgcHJvcHMuZm9ybWlrLmlzU3VibWl0dGluZyAhPT0gdGhpcy5wcm9wcy5mb3JtaWsuaXNTdWJtaXR0aW5nKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfTtcblxuICBfcHJvdG8uY29tcG9uZW50RGlkTW91bnQgPSBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAvLyBSZWdpc3RlciB0aGUgRmllbGQgd2l0aCB0aGUgcGFyZW50IEZvcm1pay4gUGFyZW50IHdpbGwgY3ljbGUgdGhyb3VnaFxuICAgIC8vIHJlZ2lzdGVyZWQgRmllbGQncyB2YWxpZGF0ZSBmbnMgcmlnaHQgcHJpb3IgdG8gc3VibWl0XG4gICAgdGhpcy5wcm9wcy5mb3JtaWsucmVnaXN0ZXJGaWVsZCh0aGlzLnByb3BzLm5hbWUsIHtcbiAgICAgIHZhbGlkYXRlOiB0aGlzLnByb3BzLnZhbGlkYXRlXG4gICAgfSk7XG4gIH07XG5cbiAgX3Byb3RvLmNvbXBvbmVudERpZFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHMpIHtcbiAgICBpZiAodGhpcy5wcm9wcy5uYW1lICE9PSBwcmV2UHJvcHMubmFtZSkge1xuICAgICAgdGhpcy5wcm9wcy5mb3JtaWsudW5yZWdpc3RlckZpZWxkKHByZXZQcm9wcy5uYW1lKTtcbiAgICAgIHRoaXMucHJvcHMuZm9ybWlrLnJlZ2lzdGVyRmllbGQodGhpcy5wcm9wcy5uYW1lLCB7XG4gICAgICAgIHZhbGlkYXRlOiB0aGlzLnByb3BzLnZhbGlkYXRlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wcm9wcy52YWxpZGF0ZSAhPT0gcHJldlByb3BzLnZhbGlkYXRlKSB7XG4gICAgICB0aGlzLnByb3BzLmZvcm1pay5yZWdpc3RlckZpZWxkKHRoaXMucHJvcHMubmFtZSwge1xuICAgICAgICB2YWxpZGF0ZTogdGhpcy5wcm9wcy52YWxpZGF0ZVxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuXG4gIF9wcm90by5jb21wb25lbnRXaWxsVW5tb3VudCA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgIHRoaXMucHJvcHMuZm9ybWlrLnVucmVnaXN0ZXJGaWVsZCh0aGlzLnByb3BzLm5hbWUpO1xuICB9O1xuXG4gIF9wcm90by5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgdmFyIF90aGlzJHByb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgbmFtZSA9IF90aGlzJHByb3BzLm5hbWUsXG4gICAgICAgIHJlbmRlciA9IF90aGlzJHByb3BzLnJlbmRlcixcbiAgICAgICAgaXMgPSBfdGhpcyRwcm9wcy5hcyxcbiAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbixcbiAgICAgICAgY29tcG9uZW50ID0gX3RoaXMkcHJvcHMuY29tcG9uZW50LFxuICAgICAgICBmb3JtaWsgPSBfdGhpcyRwcm9wcy5mb3JtaWssXG4gICAgICAgIHByb3BzID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3RoaXMkcHJvcHMsIFtcInZhbGlkYXRlXCIsIFwibmFtZVwiLCBcInJlbmRlclwiLCBcImFzXCIsIFwiY2hpbGRyZW5cIiwgXCJjb21wb25lbnRcIiwgXCJzaG91bGRVcGRhdGVcIiwgXCJmb3JtaWtcIl0pO1xuXG4gICAgdmFyIHJlc3RPZkZvcm1payA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKGZvcm1paywgW1widmFsaWRhdGVcIiwgXCJ2YWxpZGF0aW9uU2NoZW1hXCJdKTtcblxuICAgIHZhciBmaWVsZCA9IGZvcm1pay5nZXRGaWVsZFByb3BzKF9leHRlbmRzKHtcbiAgICAgIG5hbWU6IG5hbWVcbiAgICB9LCBwcm9wcykpO1xuICAgIHZhciBtZXRhID0ge1xuICAgICAgdmFsdWU6IGdldEluKGZvcm1pay52YWx1ZXMsIG5hbWUpLFxuICAgICAgZXJyb3I6IGdldEluKGZvcm1pay5lcnJvcnMsIG5hbWUpLFxuICAgICAgdG91Y2hlZDogISFnZXRJbihmb3JtaWsudG91Y2hlZCwgbmFtZSksXG4gICAgICBpbml0aWFsVmFsdWU6IGdldEluKGZvcm1pay5pbml0aWFsVmFsdWVzLCBuYW1lKSxcbiAgICAgIGluaXRpYWxUb3VjaGVkOiAhIWdldEluKGZvcm1pay5pbml0aWFsVG91Y2hlZCwgbmFtZSksXG4gICAgICBpbml0aWFsRXJyb3I6IGdldEluKGZvcm1pay5pbml0aWFsRXJyb3JzLCBuYW1lKVxuICAgIH07XG4gICAgdmFyIGJhZyA9IHtcbiAgICAgIGZpZWxkOiBmaWVsZCxcbiAgICAgIG1ldGE6IG1ldGEsXG4gICAgICBmb3JtOiByZXN0T2ZGb3JtaWtcbiAgICB9O1xuXG4gICAgaWYgKHJlbmRlcikge1xuICAgICAgcmV0dXJuIHJlbmRlcihiYWcpO1xuICAgIH1cblxuICAgIGlmIChpc0Z1bmN0aW9uKGNoaWxkcmVuKSkge1xuICAgICAgcmV0dXJuIGNoaWxkcmVuKGJhZyk7XG4gICAgfVxuXG4gICAgaWYgKGNvbXBvbmVudCkge1xuICAgICAgLy8gVGhpcyBiZWhhdmlvciBpcyBiYWNrd2FyZHMgY29tcGF0IHdpdGggZWFybGllciBGb3JtaWsgMC45IHRvIDEueFxuICAgICAgaWYgKHR5cGVvZiBjb21wb25lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHZhciBpbm5lclJlZiA9IHByb3BzLmlubmVyUmVmLFxuICAgICAgICAgICAgcmVzdCA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlKHByb3BzLCBbXCJpbm5lclJlZlwiXSk7XG5cbiAgICAgICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoY29tcG9uZW50LCBfZXh0ZW5kcyh7XG4gICAgICAgICAgcmVmOiBpbm5lclJlZlxuICAgICAgICB9LCBmaWVsZCwgcmVzdCksIGNoaWxkcmVuKTtcbiAgICAgIH0gLy8gV2UgZG9uJ3QgcGFzcyBgbWV0YWAgZm9yIGJhY2t3YXJkcyBjb21wYXRcblxuXG4gICAgICByZXR1cm4gY3JlYXRlRWxlbWVudChjb21wb25lbnQsIF9leHRlbmRzKHtcbiAgICAgICAgZmllbGQ6IGZpZWxkLFxuICAgICAgICBmb3JtOiBmb3JtaWtcbiAgICAgIH0sIHByb3BzKSwgY2hpbGRyZW4pO1xuICAgIH0gLy8gZGVmYXVsdCB0byBpbnB1dCBoZXJlIHNvIHdlIGNhbiBjaGVjayBmb3IgYm90aCBgYXNgIGFuZCBgY2hpbGRyZW5gIGFib3ZlXG5cblxuICAgIHZhciBhc0VsZW1lbnQgPSBpcyB8fCAnaW5wdXQnO1xuXG4gICAgaWYgKHR5cGVvZiBhc0VsZW1lbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICB2YXIgX2lubmVyUmVmID0gcHJvcHMuaW5uZXJSZWYsXG4gICAgICAgICAgX3Jlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZShwcm9wcywgW1wiaW5uZXJSZWZcIl0pO1xuXG4gICAgICByZXR1cm4gY3JlYXRlRWxlbWVudChhc0VsZW1lbnQsIF9leHRlbmRzKHtcbiAgICAgICAgcmVmOiBfaW5uZXJSZWZcbiAgICAgIH0sIGZpZWxkLCBfcmVzdCksIGNoaWxkcmVuKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3JlYXRlRWxlbWVudChhc0VsZW1lbnQsIF9leHRlbmRzKHt9LCBmaWVsZCwgcHJvcHMpLCBjaGlsZHJlbik7XG4gIH07XG5cbiAgcmV0dXJuIEZhc3RGaWVsZElubmVyO1xufShDb21wb25lbnQpO1xuXG52YXIgRmFzdEZpZWxkID0gLyojX19QVVJFX18qL2Nvbm5lY3QoRmFzdEZpZWxkSW5uZXIpO1xuXG5leHBvcnQgeyBFcnJvck1lc3NhZ2UsIEZhc3RGaWVsZCwgRmllbGQsIEZpZWxkQXJyYXksIEZvcm0sIEZvcm1paywgRm9ybWlrQ29uc3VtZXIsIEZvcm1pa0NvbnRleHQsIEZvcm1pa1Byb3ZpZGVyLCBjb25uZWN0LCBnZXRBY3RpdmVFbGVtZW50LCBnZXRJbiwgaW5zZXJ0LCBpc0VtcHR5QXJyYXksIGlzRW1wdHlDaGlsZHJlbiwgaXNGdW5jdGlvbiwgaXNJbnB1dEV2ZW50LCBpc0ludGVnZXIsIGlzTmFOJDEgYXMgaXNOYU4sIGlzT2JqZWN0LCBpc1Byb21pc2UsIGlzU3RyaW5nLCBtb3ZlLCBwcmVwYXJlRGF0YUZvclZhbGlkYXRpb24sIHJlcGxhY2UsIHNldEluLCBzZXROZXN0ZWRPYmplY3RWYWx1ZXMsIHN3YXAsIHVzZUZpZWxkLCB1c2VGb3JtaWssIHVzZUZvcm1pa0NvbnRleHQsIHZhbGlkYXRlWXVwU2NoZW1hLCB3aXRoRm9ybWlrLCB5dXBUb0Zvcm1FcnJvcnMgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvcm1pay5lc20uanMubWFwXG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSWNvbiwgVGV4dCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcblxudHlwZSBUSW5saW5lTm90ZVdpdGhJY29uRXh0ZW5kID0ge1xuICAgIGljb24/OiBzdHJpbmc7XG4gICAgZm9udF9zaXplPzogc3RyaW5nO1xuICAgIG1lc3NhZ2U6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgICB0aXRsZT86IHN0cmluZztcbn07XG5cbmNvbnN0IElubGluZU5vdGVXaXRoSWNvbiA9ICh7IGljb24sIG1lc3NhZ2UsIGZvbnRfc2l6ZSA9ICd4eHhzJywgdGl0bGUgfTogVElubGluZU5vdGVXaXRoSWNvbkV4dGVuZCkgPT4ge1xuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYS1pbmxpbmUtbm90ZS13aXRoLWljb24nPlxuICAgICAgICAgICAge2ljb24gJiYgKFxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxJY29uIGljb249e2ljb259IHNpemU9ezE2fSAvPlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDxUZXh0IGFzPSdwJyBzaXplPXtmb250X3NpemV9IGxpbmVfaGVpZ2h0PSdzJz5cbiAgICAgICAgICAgICAgICB7dGl0bGUgJiYgPHN0cm9uZz57dGl0bGV9OiA8L3N0cm9uZz59XG4gICAgICAgICAgICAgICAge21lc3NhZ2V9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvZGl2PlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBJbmxpbmVOb3RlV2l0aEljb247XG4iLCJpbXBvcnQgSW5saW5lTm90ZVdpdGhJY29uIGZyb20gJy4vaW5saW5lLW5vdGUtd2l0aC1pY29uJztcbmltcG9ydCAnLi9pbmxpbmUtbm90ZS13aXRoLWljb24uc2Nzcyc7XG5cbmV4cG9ydCBkZWZhdWx0IElubGluZU5vdGVXaXRoSWNvbjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBJY29uLCBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCAnLi9hcnRpY2xlLnNjc3MnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5cbnR5cGUgVERlc2NyaXB0aW9uc0l0ZW0gPSB7XG4gICAga2V5OiBzdHJpbmc7XG4gICAgY29tcG9uZW50OiBSZWFjdC5SZWFjdEVsZW1lbnQ7XG59O1xuXG5leHBvcnQgdHlwZSBUQXJ0aWNsZSA9IHtcbiAgICB0aXRsZTogSlNYLkVsZW1lbnQgfCBzdHJpbmc7XG4gICAgZGVzY3JpcHRpb25zOiBBcnJheTxURGVzY3JpcHRpb25zSXRlbSB8IFJlYWN0LlJlYWN0RWxlbWVudD47XG4gICAgb25DbGlja0xlYXJuTW9yZT86ICgpID0+IHZvaWQ7XG4gICAgY2xhc3NOYW1lPzogc3RyaW5nO1xufTtcblxuY29uc3QgQXJ0aWNsZSA9ICh7IHRpdGxlLCBkZXNjcmlwdGlvbnMsIG9uQ2xpY2tMZWFybk1vcmUsIGNsYXNzTmFtZSB9OiBUQXJ0aWNsZSkgPT4ge1xuICAgIGNvbnN0IGhhc19kZXNjcmlwdGlvbnM6IGJvb2xlYW4gPSBkZXNjcmlwdGlvbnM/Lmxlbmd0aCA+IDA7XG4gICAgY29uc3QgaGFzX3NpbmdsZV9kZXNjcmlwdGlvbjogYm9vbGVhbiA9IGRlc2NyaXB0aW9ucz8ubGVuZ3RoID09PSAxO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGFydGljbGUgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYS1hcnRpY2xlJywgY2xhc3NOYW1lKX0+XG4gICAgICAgICAgICA8VGV4dCBhcz0naDQnIGNvbG9yPSdwcm9taW5lbnQnIGxpbmVfaGVpZ2h0PSdtJyBzaXplPSd4cycgd2VpZ2h0PSdib2xkJyBjbGFzc05hbWU9J2RhLWFydGljbGVfX2hlYWRlcic+XG4gICAgICAgICAgICAgICAge3RpdGxlfVxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAge2hhc19kZXNjcmlwdGlvbnMgJiYgKFxuICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cbiAgICAgICAgICAgICAgICAgICAge2hhc19zaW5nbGVfZGVzY3JpcHRpb24gPyAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0ncCcgc2l6ZT0neHhzJyBsaW5lX2hlaWdodD0nbSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2Rlc2NyaXB0aW9uc1swXX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9J2RhLWFydGljbGVfX2xpc3QnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtkZXNjcmlwdGlvbnMubWFwKChkZXNjcmlwdGlvbiwgaWR4KSA9PiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBrZXk9e2lkeH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBzaXplPSd4eHMnIGxpbmVfaGVpZ2h0PSd4cyc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeydjb21wb25lbnQnIGluIGRlc2NyaXB0aW9uID8gZGVzY3JpcHRpb24uY29tcG9uZW50IDogZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge29uQ2xpY2tMZWFybk1vcmUgJiYgKFxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYS1hcnRpY2xlX19sZWFybi1tb3JlJyBvbkNsaWNrPXtvbkNsaWNrTGVhcm5Nb3JlfT5cbiAgICAgICAgICAgICAgICAgICAgPFRleHQgc2l6ZT0neHhzJyBjb2xvcj0nbG9zcy1kYW5nZXInIGxpbmVfaGVpZ2h0PSdzJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTGVhcm4gbW9yZScgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICA8SWNvbiBpY29uPSdJY0NoZXZyb25SaWdodCcgY2xhc3NOYW1lPSdkYS1hcnRpY2xlX19sZWFybi1tb3JlLWljb24nIGNvbG9yPSdyZWQnIC8+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICA8L2FydGljbGU+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFydGljbGU7XG4iLCJpbXBvcnQgQWNjb3VudEFydGljbGUgZnJvbSAnLi9hcnRpY2xlJztcbmltcG9ydCAnLi9hcnRpY2xlLnNjc3MnO1xuXG5leHBvcnQgZGVmYXVsdCBBY2NvdW50QXJ0aWNsZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBsb2NhbGl6ZSwgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBBY2NvdW50QXJ0aWNsZSBmcm9tICdDb21wb25lbnRzL2FydGljbGUnO1xuXG5jb25zdCBBcGlUb2tlbkFydGljbGUgPSAoKSA9PiAoXG4gICAgPEFjY291bnRBcnRpY2xlXG4gICAgICAgIHRpdGxlPXtsb2NhbGl6ZSgnQVBJIHRva2VuJyl9XG4gICAgICAgIGRlc2NyaXB0aW9ucz17W1xuICAgICAgICAgICAgPExvY2FsaXplXG4gICAgICAgICAgICAgICAga2V5PXswfVxuICAgICAgICAgICAgICAgIGkxOG5fZGVmYXVsdF90ZXh0PVwiVG8gYWNjZXNzIHlvdXIgbW9iaWxlIGFwcHMgYW5kIG90aGVyIHRoaXJkLXBhcnR5IGFwcHMsIHlvdSdsbCBmaXJzdCBuZWVkIHRvIGdlbmVyYXRlIGFuIEFQSSB0b2tlbi5cIlxuICAgICAgICAgICAgLz4sXG4gICAgICAgIF19XG4gICAgLz5cbik7XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuQXJ0aWNsZTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBGaWVsZCwgRmllbGRQcm9wcyB9IGZyb20gJ2Zvcm1payc7XG5pbXBvcnQgeyBDb21wb3NpdGVDaGVja2JveCB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcblxudHlwZSBUQXBpVG9rZW5DYXJkID0ge1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgZGlzcGxheV9uYW1lOiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xuICAgIHZhbHVlOiBib29sZWFuO1xuICAgIHNldEZpZWxkVmFsdWU6IChuYW1lOiBzdHJpbmcsIHZhbHVlOiBib29sZWFuKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQXBpVG9rZW5DYXJkID0gKHtcbiAgICBuYW1lLFxuICAgIHZhbHVlLFxuICAgIGRpc3BsYXlfbmFtZSxcbiAgICBkZXNjcmlwdGlvbixcbiAgICBzZXRGaWVsZFZhbHVlLFxuICAgIGNoaWxkcmVuLFxufTogUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48VEFwaVRva2VuQ2FyZD4pID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8RmllbGQgbmFtZT17bmFtZX0+XG4gICAgICAgICAgICB7KHsgZmllbGQgfTogRmllbGRQcm9wczxzdHJpbmcgfCBib29sZWFuPikgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgIDxDb21wb3NpdGVDaGVja2JveFxuICAgICAgICAgICAgICAgICAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eygpID0+IHNldEZpZWxkVmFsdWUobmFtZSwgIXZhbHVlKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nYXBpLXRva2VuX19jaGVja2JveCdcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlZmF1bHRDaGVja2VkPXt2YWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsPXtkaXNwbGF5X25hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbj17ZGVzY3JpcHRpb259XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtjaGlsZHJlbn1cbiAgICAgICAgICAgICAgICAgICAgPC9Db21wb3NpdGVDaGVja2JveD5cbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfX1cbiAgICAgICAgPC9GaWVsZD5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5DYXJkO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVEFwaUNvbnRleHQgfSBmcm9tICdUeXBlcyc7XG5cbmNvbnN0IEFwaVRva2VuQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQ8VEFwaUNvbnRleHQ+KHt9KTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5Db250ZXh0O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNyZWF0ZVBvcnRhbCB9IGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgTG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBBcGlUb2tlbkNvbnRleHQgZnJvbSAnLi9hcGktdG9rZW4tY29udGV4dCc7XG5pbXBvcnQgeyBUQXBpQ29udGV4dCB9IGZyb20gJ1R5cGVzJztcblxuY29uc3QgQXBpVG9rZW5Gb290ZXIgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBmb290ZXJfcmVmLCB0b2dnbGVPdmVybGF5IH0gPSBSZWFjdC51c2VDb250ZXh0PFRBcGlDb250ZXh0PihBcGlUb2tlbkNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGNyZWF0ZVBvcnRhbChcbiAgICAgICAgPGEgY2xhc3NOYW1lPSdsaW5rIGxpbmstLXByb21pbmVudCcgb25DbGljaz17dG9nZ2xlT3ZlcmxheX0+XG4gICAgICAgICAgICA8VGV4dCBzaXplPSd4eHMnIGxpbmVfaGVpZ2h0PSdtJyB3ZWlnaHQ9J2JvbGQnPlxuICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTGVhcm4gbW9yZSBhYm91dCBBUEkgdG9rZW4nIC8+XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvYT4sXG4gICAgICAgIGZvb3Rlcl9yZWZcbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5Gb290ZXI7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUG9wdXAgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBMb2NhbGl6ZSwgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBBcGlUb2tlbkNvbnRleHQgZnJvbSAnLi9hcGktdG9rZW4tY29udGV4dCc7XG5pbXBvcnQgeyBUQXBpQ29udGV4dCB9IGZyb20gJ1R5cGVzJztcblxuY29uc3QgQXBpVG9rZW5PdmVybGF5ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgb3ZlcmxheV9yZWYsIHRvZ2dsZU92ZXJsYXkgfSA9IFJlYWN0LnVzZUNvbnRleHQ8VEFwaUNvbnRleHQ+KEFwaVRva2VuQ29udGV4dCk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8UG9wdXAuT3ZlcmxheVxuICAgICAgICAgICAgZGVzY3JpcHRpb25zPXtbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBrZXk6ICdhcGlfdG9rZW5fZGVzY18xJyxcbiAgICAgICAgICAgICAgICAgICAgY29tcG9uZW50OiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk9ezB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaTE4bl9kZWZhdWx0X3RleHQ9XCJUbyBhY2Nlc3Mgb3VyIG1vYmlsZSBhcHBzIGFuZCBvdGhlciB0aGlyZC1wYXJ0eSBhcHBzLCB5b3UnbGwgZmlyc3QgbmVlZCB0byBnZW5lcmF0ZSBhbiBBUEkgdG9rZW4uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF19XG4gICAgICAgICAgICBkb25lX3RleHQ9e2xvY2FsaXplKCdEb25lJyl9XG4gICAgICAgICAgICBvdmVybGF5X3JlZj17b3ZlcmxheV9yZWZ9XG4gICAgICAgICAgICB0aXRsZT17bG9jYWxpemUoJ0FQSSBUb2tlbicpfVxuICAgICAgICAgICAgdG9nZ2xlT3ZlcmxheT17dG9nZ2xlT3ZlcmxheX1cbiAgICAgICAgLz5cbiAgICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5PdmVybGF5O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEJ1dHRvbiwgSWNvbiwgTW9kYWwsIFRleHQsIFBvcG92ZXIgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBpc0Rlc2t0b3AsIHVzZUlzTW91bnRlZCB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCBBcGlUb2tlbkNvbnRleHQgZnJvbSAnLi9hcGktdG9rZW4tY29udGV4dCc7XG5pbXBvcnQgeyBUUG9wb3ZlckFsaWdubWVudCwgVFRva2VuLCBUQXBpQ29udGV4dCB9IGZyb20gJ1R5cGVzJztcblxudHlwZSBUQXBpVG9rZW5EZWxldGVCdXR0b24gPSB7XG4gICAgcG9wb3Zlcl9hbGlnbm1lbnQ/OiBUUG9wb3ZlckFsaWdubWVudDtcbiAgICB0b2tlbjogVFRva2VuO1xufTtcblxuY29uc3QgQXBpVG9rZW5EZWxldGVCdXR0b24gPSAoeyB0b2tlbiwgcG9wb3Zlcl9hbGlnbm1lbnQgPSAnbGVmdCcgfTogVEFwaVRva2VuRGVsZXRlQnV0dG9uKSA9PiB7XG4gICAgY29uc3QgeyBkZWxldGVUb2tlbiB9ID0gUmVhY3QudXNlQ29udGV4dDxUQXBpQ29udGV4dD4oQXBpVG9rZW5Db250ZXh0KTtcbiAgICBjb25zdCBbaXNfZGVsZXRpbmcsIHNldElzRGVsZXRpbmddID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtpc19sb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtpc19wb3BvdmVyX29wZW4sIHNldElzUG9wb3Zlck9wZW5dID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IGlzTW91bnRlZCA9IHVzZUlzTW91bnRlZCgpO1xuXG4gICAgY29uc3QgZ2V0Q29uZmlybWF0aW9uQmVmb3JlRGVsZXRlID0gKCkgPT4ge1xuICAgICAgICBpZiAoaXNEZXNrdG9wKCkpIHNldElzUG9wb3Zlck9wZW4oZmFsc2UpO1xuICAgICAgICBzZXRJc0RlbGV0aW5nKHRydWUpO1xuICAgIH07XG5cbiAgICBjb25zdCBvbk1vdXNlRW50ZXJIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICBpZiAoIWlzX2RlbGV0aW5nICYmIGlzRGVza3RvcCgpKSBzZXRJc1BvcG92ZXJPcGVuKHRydWUpO1xuICAgIH07XG5cbiAgICBjb25zdCBvbk1vdXNlTGVhdmVIYW5kbGVyID0gKCkgPT4ge1xuICAgICAgICBpZiAoIWlzX2RlbGV0aW5nICYmIGlzRGVza3RvcCgpKSBzZXRJc1BvcG92ZXJPcGVuKGZhbHNlKTtcbiAgICB9O1xuXG4gICAgY29uc3QgaGFuZGxlTm8gPSAoKSA9PiBzZXRJc0RlbGV0aW5nKGZhbHNlKTtcblxuICAgIGNvbnN0IGhhbmRsZVllcyA9ICgpID0+IHtcbiAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgICBkZWxldGVUb2tlbih0b2tlbi50b2tlbikuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNNb3VudGVkKCkpIHtcbiAgICAgICAgICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgIHNldElzRGVsZXRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgPE1vZGFsIGlzX29wZW49e2lzX2RlbGV0aW5nfSBzbWFsbD5cbiAgICAgICAgICAgICAgICA8TW9kYWwuQm9keT5cbiAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9J2gxJyBjb2xvcj0ncHJvbWluZW50JyB3ZWlnaHQ9J2JvbGQnIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX19tb2RhbC10aXRsZSc+XG4gICAgICAgICAgICAgICAgICAgICAgICB7bG9jYWxpemUoJ0RlbGV0ZSB0b2tlbicpfVxuICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdwJyBjb2xvcj0ncHJvbWluZW50ICcgc2l6ZT0neHMnIGxpbmVfaGVpZ2h0PSdtJz5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtsb2NhbGl6ZSgnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIHRva2VuPycpfVxuICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgPC9Nb2RhbC5Cb2R5PlxuICAgICAgICAgICAgICAgIDxNb2RhbC5Gb290ZXIgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX21vZGFsLWZvb3Rlcic+XG4gICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nZGMtZGlhbG9nX19idXR0b24nXG4gICAgICAgICAgICAgICAgICAgICAgICBoYXNfZWZmZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0PXtsb2NhbGl6ZSgnQ2FuY2VsJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVOb31cbiAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZGFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdkYy1kaWFsb2dfX2J1dHRvbidcbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc19lZmZlY3RcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e2xvY2FsaXplKCdZZXMsIGRlbGV0ZScpfVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlWWVzfVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzX2xvYWRpbmc9e2lzX2xvYWRpbmd9XG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9Nb2RhbC5Gb290ZXI+XG4gICAgICAgICAgICA8L01vZGFsPlxuICAgICAgICAgICAgPFBvcG92ZXJcbiAgICAgICAgICAgICAgICBhbGlnbm1lbnQ9e3BvcG92ZXJfYWxpZ25tZW50fVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZUJ1YmJsZT0nZGMtY2xpcGJvYXJkX19wb3BvdmVyJ1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U9e2xvY2FsaXplKCdEZWxldGUgdGhpcyB0b2tlbicpfVxuICAgICAgICAgICAgICAgIHJlbGF0aXZlX3JlbmRlcj17ZmFsc2V9XG4gICAgICAgICAgICAgICAgekluZGV4PSc5OTk5J1xuICAgICAgICAgICAgICAgIGlzX29wZW49e2lzX3BvcG92ZXJfb3Blbn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8SWNvblxuICAgICAgICAgICAgICAgICAgICBpY29uPXsnSWNEZWxldGUnfVxuICAgICAgICAgICAgICAgICAgICBjdXN0b21fY29sb3I9J3ZhcigtLXRleHQtcHJvbWluZW50KSdcbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdkYy1jbGlwYm9hcmQgZGEtYXBpLXRva2VuX19kZWxldGUtaWNvbidcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17Z2V0Q29uZmlybWF0aW9uQmVmb3JlRGVsZXRlfVxuICAgICAgICAgICAgICAgICAgICBzaXplPXsxNH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YV90ZXN0aWQ9J2R0X3Rva2VuX2RlbGV0ZV9pY29uJ1xuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlRW50ZXI9e29uTW91c2VFbnRlckhhbmRsZXJ9XG4gICAgICAgICAgICAgICAgICAgIG9uTW91c2VMZWF2ZT17b25Nb3VzZUxlYXZlSGFuZGxlcn1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9Qb3BvdmVyPlxuICAgICAgICA8L1JlYWN0LkZyYWdtZW50PlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBBcGlUb2tlbkRlbGV0ZUJ1dHRvbjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IFRleHQgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5cbnR5cGUgVEFwaVRva2VuVGFibGVSb3dDZWxsID0ge1xuICAgIGNsYXNzTmFtZT86IHN0cmluZztcbiAgICBzaG91bGRfYnlwYXNzX3RleHQ6IGJvb2xlYW47XG59O1xuXG5jb25zdCBBcGlUb2tlblRhYmxlUm93Q2VsbCA9ICh7XG4gICAgY2xhc3NOYW1lLFxuICAgIGNoaWxkcmVuLFxuICAgIHNob3VsZF9ieXBhc3NfdGV4dCxcbn06IFJlYWN0LlByb3BzV2l0aENoaWxkcmVuPFBhcnRpYWw8VEFwaVRva2VuVGFibGVSb3dDZWxsPj4pID0+IHtcbiAgICBpZiAoc2hvdWxkX2J5cGFzc190ZXh0KSB7XG4gICAgICAgIHJldHVybiA8dGQgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYS1hcGktdG9rZW5fX3RhYmxlLWNlbGwnLCBjbGFzc05hbWUpfT57Y2hpbGRyZW59PC90ZD47XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHRkIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnZGEtYXBpLXRva2VuX190YWJsZS1jZWxsJywgY2xhc3NOYW1lKX0+XG4gICAgICAgICAgICA8VGV4dCBjb2xvcj0ncHJvbWluZW50ICcgc2l6ZT0neHMnIGxpbmVfaGVpZ2h0PSdtJz5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgIDwvdGQ+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuVGFibGVSb3dDZWxsO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuXG50eXBlIFRBcGlUb2tlblRhYmxlUm93U2NvcGVzQ2VsbCA9IHtcbiAgICBzY29wZXM6IHN0cmluZ1tdO1xufTtcblxuY29uc3QgQXBpVG9rZW5UYWJsZVJvd1Njb3Blc0NlbGwgPSAoeyBzY29wZXMgfTogVEFwaVRva2VuVGFibGVSb3dTY29wZXNDZWxsKSA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fdGFibGUtc2NvcGVzLWNlbGwtYmxvY2snPlxuICAgICAgICAgICAge3Njb3Blcy5tYXAoc2NvcGUgPT4gKFxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAga2V5PXtzY29wZX1cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYS1hcGktdG9rZW5fX3RhYmxlLXNjb3BlLWNlbGwnLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnZGEtYXBpLXRva2VuX190YWJsZS1zY29wZS1jZWxsLWFkbWluJzogc2NvcGUudG9Mb3dlckNhc2UoKSA9PT0gJ2FkbWluJyxcbiAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7c2NvcGV9XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuVGFibGVSb3dTY29wZXNDZWxsO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUlzTW91bnRlZCB9IGZyb20gJ0BkZXJpdi9zaGFyZWQnO1xuaW1wb3J0IHsgQnV0dG9uLCBJY29uLCBNb2RhbCwgVGV4dCwgUG9wb3ZlciwgdXNlQ29weVRvQ2xpcGJvYXJkIH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgbG9jYWxpemUgfSBmcm9tICdAZGVyaXYvdHJhbnNsYXRpb25zJztcbmltcG9ydCB7IFRQb3BvdmVyQWxpZ25tZW50IH0gZnJvbSAnVHlwZXMnO1xuXG50eXBlIFRBcGlUb2tlbkNsaXBib2FyZCA9IHtcbiAgICBzY29wZXM6IHN0cmluZ1tdO1xuICAgIHRleHRfY29weTogc3RyaW5nO1xuICAgIGluZm9fbWVzc2FnZTogc3RyaW5nO1xuICAgIHN1Y2Nlc3NfbWVzc2FnZTogc3RyaW5nO1xuICAgIHBvcG92ZXJfYWxpZ25tZW50PzogVFBvcG92ZXJBbGlnbm1lbnQ7XG59O1xuXG50eXBlIFRXYXJuaW5nTm90ZUJ1bGxldCA9IHtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG59O1xuXG5jb25zdCBXYXJuaW5nTm90ZUJ1bGxldCA9ICh7IG1lc3NhZ2UgfTogVFdhcm5pbmdOb3RlQnVsbGV0KSA9PiAoXG4gICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fYnVsbGV0LXdyYXBwZXInPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX19idWxsZXQnIC8+XG4gICAgICAgIDxUZXh0IGFzPSdwJyBjb2xvcj0ncHJvbWluZW50ICcgc2l6ZT0neHMnIGxpbmVfaGVpZ2h0PSdtJz5cbiAgICAgICAgICAgIHttZXNzYWdlfVxuICAgICAgICA8L1RleHQ+XG4gICAgPC9kaXY+XG4pO1xuXG5jb25zdCBXYXJuaW5nRGlhbG9nTWVzc2FnZSA9ICgpID0+IChcbiAgICA8UmVhY3QuRnJhZ21lbnQ+XG4gICAgICAgIDxUZXh0IGFzPSdwJyBjb2xvcj0ncHJvbWluZW50ICcgc2l6ZT0neHMnIGxpbmVfaGVpZ2h0PSdtJz5cbiAgICAgICAgICAgIHtsb2NhbGl6ZShcbiAgICAgICAgICAgICAgICAnQmUgY2FyZWZ1bCB3aG8geW91IHNoYXJlIHRoaXMgdG9rZW4gd2l0aC4gQW55b25lIHdpdGggdGhpcyB0b2tlbiBjYW4gcGVyZm9ybSB0aGUgZm9sbG93aW5nIGFjdGlvbnMgb24geW91ciBhY2NvdW50IGJlaGFsZidcbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvVGV4dD5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fYnVsbGV0LWNvbnRhaW5lcic+XG4gICAgICAgICAgICA8V2FybmluZ05vdGVCdWxsZXQgbWVzc2FnZT17bG9jYWxpemUoJ0FkZCBhY2NvdW50cycpfSAvPlxuICAgICAgICAgICAgPFdhcm5pbmdOb3RlQnVsbGV0IG1lc3NhZ2U9e2xvY2FsaXplKCdDcmVhdGUgb3IgZGVsZXRlIEFQSSB0b2tlbnMgZm9yIHRyYWRpbmcgYW5kIHdpdGhkcmF3YWxzJyl9IC8+XG4gICAgICAgICAgICA8V2FybmluZ05vdGVCdWxsZXQgbWVzc2FnZT17bG9jYWxpemUoJ01vZGlmeSBhY2NvdW50IHNldHRpbmdzJyl9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4pO1xuXG5jb25zdCBBcGlUb2tlbkNsaXBib2FyZCA9ICh7XG4gICAgc2NvcGVzLFxuICAgIHRleHRfY29weSxcbiAgICBpbmZvX21lc3NhZ2UsXG4gICAgc3VjY2Vzc19tZXNzYWdlLFxuICAgIHBvcG92ZXJfYWxpZ25tZW50ID0gJ2JvdHRvbScsXG59OiBUQXBpVG9rZW5DbGlwYm9hcmQpID0+IHtcbiAgICBjb25zdCBbaXNfY29waWVkLCBjb3B5VG9DbGlwYm9hcmQsIHNldElzQ29waWVkXSA9IHVzZUNvcHlUb0NsaXBib2FyZCgpO1xuICAgIGNvbnN0IFtpc19tb2RhbF9vcGVuLCBzZXRJc01vZGFsT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgW2lzX3BvcG92ZXJfb3Blbiwgc2V0SXNQb3BvdmVyT3Blbl0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gICAgY29uc3QgaXNNb3VudGVkID0gdXNlSXNNb3VudGVkKCk7XG4gICAgbGV0IHRpbWVvdXRfY2xpcGJvYXJkOiBOb2RlSlMuVGltZW91dCB8IHVuZGVmaW5lZCwgdGltZW91dF9jbGlwYm9hcmRfMjogTm9kZUpTLlRpbWVvdXQgfCB1bmRlZmluZWQ7XG4gICAgY29uc3QgaGFzX2FkbWluX3Njb3BlID0gc2NvcGVzLmluY2x1ZGVzKCdBZG1pbicpO1xuXG4gICAgY29uc3Qgb25Nb3VzZUVudGVySGFuZGxlciA9ICgpID0+IHtcbiAgICAgICAgaWYgKCFpc19jb3BpZWQpIHNldElzUG9wb3Zlck9wZW4odHJ1ZSk7XG4gICAgfTtcblxuICAgIGNvbnN0IG9uTW91c2VMZWF2ZUhhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmICghaXNfY29waWVkKSBzZXRJc1BvcG92ZXJPcGVuKGZhbHNlKTtcbiAgICB9O1xuICAgIC8qIHR3byB0aW1lb3V0cyBoZWxwIHRvIHByZXZlbnQgcG9wdXAgd2luZG93IGJsaW5raW5nLlxuICAgIHdpdGhvdXQgZWFybHkgaGlkaW5nIHRoZSBwb3B1cCB3ZSB3aWxsIHNlZSBzaG9ydGx5IHRoZSBkZXNjcmlwdGlvbiBtZXNzYWdlIGxpa2UgZHVyaW5nIGhvdmVyaW5nLlxuICAgIHRoaXMgYnVnIGFwcGVhcnMgd2hlbiBwb3B1cCBpcyBoYW5kbGVkIG91dHNpZGUgbGlrZSBoZXJlXG4gICAgKi9cbiAgICBjb25zdCBvbkNsaWNrID0gKCkgPT4ge1xuICAgICAgICBzZXRJc01vZGFsT3BlbihmYWxzZSk7XG4gICAgICAgIGNvcHlUb0NsaXBib2FyZCh0ZXh0X2NvcHkpO1xuICAgICAgICBzZXRJc1BvcG92ZXJPcGVuKHRydWUpO1xuICAgICAgICB0aW1lb3V0X2NsaXBib2FyZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlzTW91bnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgc2V0SXNQb3BvdmVyT3BlbihmYWxzZSk7XG4gICAgICAgICAgICAgICAgc2V0SXNDb3BpZWQoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAxOTAwKTtcbiAgICAgICAgdGltZW91dF9jbGlwYm9hcmRfMiA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgaWYgKGlzTW91bnRlZCgpKSB7XG4gICAgICAgICAgICAgICAgc2V0SXNDb3BpZWQoZmFsc2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAyMDUwKTtcbiAgICB9O1xuXG4gICAgY29uc3Qgb25DbGlja0hhbmRsZXIgPSAoKSA9PiB7XG4gICAgICAgIGlmIChoYXNfYWRtaW5fc2NvcGUpIHtcbiAgICAgICAgICAgIHNldElzTW9kYWxPcGVuKHRydWUpO1xuICAgICAgICB9IGVsc2Ugb25DbGljaygpO1xuICAgIH07XG5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRfY2xpcGJvYXJkKTtcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0X2NsaXBib2FyZF8yKTtcbiAgICAgICAgfTtcbiAgICB9LCBbdGltZW91dF9jbGlwYm9hcmQsIHRpbWVvdXRfY2xpcGJvYXJkXzJdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8TW9kYWwgaXNfb3Blbj17aXNfbW9kYWxfb3Blbn0gc21hbGw+XG4gICAgICAgICAgICAgICAgPE1vZGFsLkJvZHk+XG4gICAgICAgICAgICAgICAgICAgIDxXYXJuaW5nRGlhbG9nTWVzc2FnZSAvPlxuICAgICAgICAgICAgICAgIDwvTW9kYWwuQm9keT5cbiAgICAgICAgICAgICAgICA8TW9kYWwuRm9vdGVyIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX19tb2RhbC1mb290ZXInPlxuICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9J2RjLWRpYWxvZ19fYnV0dG9uJ1xuICAgICAgICAgICAgICAgICAgICAgICAgaGFzX2VmZmVjdFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dD17bG9jYWxpemUoJ09LJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrfVxuICAgICAgICAgICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VcbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8L01vZGFsLkZvb3Rlcj5cbiAgICAgICAgICAgIDwvTW9kYWw+XG4gICAgICAgICAgICA8UG9wb3ZlclxuICAgICAgICAgICAgICAgIGFsaWdubWVudD17cG9wb3Zlcl9hbGlnbm1lbnR9XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lQnViYmxlPSdkYy1jbGlwYm9hcmRfX3BvcG92ZXInXG4gICAgICAgICAgICAgICAgbWVzc2FnZT17aXNfY29waWVkID8gc3VjY2Vzc19tZXNzYWdlIDogaW5mb19tZXNzYWdlfVxuICAgICAgICAgICAgICAgIGlzX29wZW49e2lzX3BvcG92ZXJfb3Blbn1cbiAgICAgICAgICAgICAgICB6SW5kZXg9Jzk5OTknXG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPEljb25cbiAgICAgICAgICAgICAgICAgICAgaWNvbj17YCR7aXNfY29waWVkID8gJ0ljQ2hlY2ttYXJrQ2lyY2xlJyA6ICdJY0NsaXBib2FyZCd9YH1cbiAgICAgICAgICAgICAgICAgICAgY3VzdG9tX2NvbG9yPXtgJHtpc19jb3BpZWQgPyAndmFyKC0tc3RhdHVzLXN1Y2Nlc3MpJyA6ICd2YXIoLS10ZXh0LXByb21pbmVudCknfWB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nZGMtY2xpcGJvYXJkJ1xuICAgICAgICAgICAgICAgICAgICBzaXplPXsxNH1cbiAgICAgICAgICAgICAgICAgICAgZGF0YV90ZXN0aWQ9e2Ake2lzX2NvcGllZCA/ICdkdF90b2tlbl9jb3BpZWRfaWNvbicgOiAnZHRfY29weV90b2tlbl9pY29uJ31gfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtvbkNsaWNrSGFuZGxlcn1cbiAgICAgICAgICAgICAgICAgICAgb25Nb3VzZUVudGVyPXtvbk1vdXNlRW50ZXJIYW5kbGVyfVxuICAgICAgICAgICAgICAgICAgICBvbk1vdXNlTGVhdmU9e29uTW91c2VMZWF2ZUhhbmRsZXJ9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvUG9wb3Zlcj5cbiAgICAgICAgPC8+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuQ2xpcGJvYXJkO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IEljb24sIFRleHQsIFBvcG92ZXIgfSBmcm9tICdAZGVyaXYvY29tcG9uZW50cyc7XG5pbXBvcnQgeyBsb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuaW1wb3J0IEFwaVRva2VuQ2xpcGJvYXJkIGZyb20gJy4vYXBpLXRva2VuLWNsaXBib2FyZCc7XG5cbnR5cGUgVEFwaVRva2VuVGFibGVSb3dUb2tlbkNlbGwgPSB7XG4gICAgdG9rZW46IHN0cmluZztcbiAgICBzY29wZXM6IHN0cmluZ1tdO1xufTtcblxuY29uc3QgSGlkZGVuUGFzc3dvcmREb3RzID0gKCkgPT4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3Bhc3MtZG90LWNvbnRhaW5lcic+XG4gICAgICAgIHtbLi4uQXJyYXkoMTUpLmtleXMoKV0ubWFwKGVsID0+IChcbiAgICAgICAgICAgIDxkaXYga2V5PXtlbH0gY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3Bhc3MtZG90JyAvPlxuICAgICAgICApKX1cbiAgICA8L2Rpdj5cbik7XG5cbmNvbnN0IEFwaVRva2VuVGFibGVSb3dUb2tlbkNlbGwgPSAoeyB0b2tlbiwgc2NvcGVzIH06IFRBcGlUb2tlblRhYmxlUm93VG9rZW5DZWxsKSA9PiB7XG4gICAgY29uc3QgW3Nob3VsZF9zaG93X3Rva2VuLCBzZXRTaG91bGRTaG93VG9rZW5dID0gUmVhY3QudXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgY29uc3QgdG9nZ2xlVG9rZW5WaXNpYmlsaXR5ID0gKCkgPT4ge1xuICAgICAgICBzZXRTaG91bGRTaG93VG9rZW4ocHJldl92YWx1ZSA9PiAhcHJldl92YWx1ZSk7XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX2NsaXBib2FyZC13cmFwcGVyJz5cbiAgICAgICAgICAgIHtzaG91bGRfc2hvd190b2tlbiA/IChcbiAgICAgICAgICAgICAgICA8VGV4dCBhcz0ncCcgY29sb3I9J3Byb21pbmVudCAnIHNpemU9J3hzJyBsaW5lX2hlaWdodD0nbSc+XG4gICAgICAgICAgICAgICAgICAgIHt0b2tlbn1cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxIaWRkZW5QYXNzd29yZERvdHMgLz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgICA8QXBpVG9rZW5DbGlwYm9hcmRcbiAgICAgICAgICAgICAgICBpbmZvX21lc3NhZ2U9e2xvY2FsaXplKCdDb3B5IHRoaXMgdG9rZW4nKX1cbiAgICAgICAgICAgICAgICBzdWNjZXNzX21lc3NhZ2U9e2xvY2FsaXplKCdUb2tlbiBjb3BpZWQhJyl9XG4gICAgICAgICAgICAgICAgdGV4dF9jb3B5PXt0b2tlbn1cbiAgICAgICAgICAgICAgICBzY29wZXM9e3Njb3Blc31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8UG9wb3ZlclxuICAgICAgICAgICAgICAgIGFsaWdubWVudD0nYm90dG9tJ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZUJ1YmJsZT0nZGMtY2xpcGJvYXJkX19wb3BvdmVyJ1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U9e3Nob3VsZF9zaG93X3Rva2VuID8gbG9jYWxpemUoJ0hpZGUgdGhpcyB0b2tlbicpIDogbG9jYWxpemUoJ1Nob3cgdGhpcyB0b2tlbicpfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxJY29uXG4gICAgICAgICAgICAgICAgICAgIGljb249e3Nob3VsZF9zaG93X3Rva2VuID8gJ0ljUGFzc3dvcmRFeWVWaXNpYmxlJyA6ICdJY1Bhc3N3b3JkRXllSGlkZSd9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX192aXNpYmlsaXR5LWljb24nXG4gICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZVRva2VuVmlzaWJpbGl0eX1cbiAgICAgICAgICAgICAgICAgICAgd2lkdGg9ezE1fVxuICAgICAgICAgICAgICAgICAgICBjdXN0b21fY29sb3I9J3ZhcigtLXRleHQtcHJvbWluZW50KSdcbiAgICAgICAgICAgICAgICAgICAgZGF0YV90ZXN0aWQ9J2R0X3RvZ2dsZV92aXNpYmlsaXR5X2ljb24nXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvUG9wb3Zlcj5cbiAgICAgICAgPC9kaXY+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuVGFibGVSb3dUb2tlbkNlbGw7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFwaVRva2VuRGVsZXRlQnV0dG9uIGZyb20gJy4vYXBpLXRva2VuLWRlbGV0ZS1idXR0b24nO1xuaW1wb3J0IEFwaVRva2VuVGFibGVSb3dDZWxsIGZyb20gJy4vYXBpLXRva2VuLXRhYmxlLXJvdy1jZWxsJztcbmltcG9ydCBBcGlUb2tlblRhYmxlUm93U2NvcGVzQ2VsbCBmcm9tICcuL2FwaS10b2tlbi10YWJsZS1yb3ctc2NvcGVzLWNlbGwnO1xuaW1wb3J0IEFwaVRva2VuVGFibGVSb3dUb2tlbkNlbGwgZnJvbSAnLi9hcGktdG9rZW4tdGFibGUtcm93LXRva2VuLWNlbGwnO1xuaW1wb3J0IHsgVFRva2VuIH0gZnJvbSAnVHlwZXMnO1xuXG50eXBlIFRBcGlUb2tlblRhYmxlUm93ID0ge1xuICAgIHRva2VuOiBUVG9rZW47XG59O1xuXG5jb25zdCBBcGlUb2tlblRhYmxlUm93ID0gKHsgdG9rZW4gfTogVEFwaVRva2VuVGFibGVSb3cpID0+IChcbiAgICA8dHIgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3RhYmxlLWNlbGwtcm93Jz5cbiAgICAgICAgPEFwaVRva2VuVGFibGVSb3dDZWxsIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX190YWJsZS1jZWxsLS1uYW1lJz57dG9rZW4uZGlzcGxheV9uYW1lfTwvQXBpVG9rZW5UYWJsZVJvd0NlbGw+XG4gICAgICAgIDxBcGlUb2tlblRhYmxlUm93Q2VsbCBzaG91bGRfYnlwYXNzX3RleHQ+XG4gICAgICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd1Rva2VuQ2VsbCB0b2tlbj17dG9rZW4udG9rZW59IHNjb3Blcz17dG9rZW4uc2NvcGVzfSAvPlxuICAgICAgICA8L0FwaVRva2VuVGFibGVSb3dDZWxsPlxuICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0NlbGwgc2hvdWxkX2J5cGFzc190ZXh0PlxuICAgICAgICAgICAgPEFwaVRva2VuVGFibGVSb3dTY29wZXNDZWxsIHNjb3Blcz17dG9rZW4uc2NvcGVzfSAvPlxuICAgICAgICA8L0FwaVRva2VuVGFibGVSb3dDZWxsPlxuICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0NlbGw+e3Rva2VuLmxhc3RfdXNlZH08L0FwaVRva2VuVGFibGVSb3dDZWxsPlxuICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0NlbGwgc2hvdWxkX2J5cGFzc190ZXh0PlxuICAgICAgICAgICAgPEFwaVRva2VuRGVsZXRlQnV0dG9uIHRva2VuPXt0b2tlbn0gLz5cbiAgICAgICAgPC9BcGlUb2tlblRhYmxlUm93Q2VsbD5cbiAgICA8L3RyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5UYWJsZVJvdztcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuXG50eXBlIFRBcGlUb2tlblRhYmxlUm93SGVhZGVyID0ge1xuICAgIHRleHQ6IHN0cmluZztcbn07XG5cbmNvbnN0IEFwaVRva2VuVGFibGVSb3dIZWFkZXIgPSAoeyB0ZXh0IH06IFRBcGlUb2tlblRhYmxlUm93SGVhZGVyKSA9PiAoXG4gICAgPHRoIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX190YWJsZS1oZWFkZXInPlxuICAgICAgICA8VGV4dCBjb2xvcj0ncHJvbWluZW50ICcgc2l6ZT0neHMnIGxpbmVfaGVpZ2h0PSdtJyB3ZWlnaHQ9J2JvbGQnPlxuICAgICAgICAgICAge3RleHR9XG4gICAgICAgIDwvVGV4dD5cbiAgICA8L3RoPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgQXBpVG9rZW5UYWJsZVJvd0hlYWRlcjtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgaXNNb2JpbGUsIGZvcm1hdERhdGUgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IExvY2FsaXplLCBsb2NhbGl6ZSB9IGZyb20gJ0BkZXJpdi90cmFuc2xhdGlvbnMnO1xuaW1wb3J0IEFwaVRva2VuQ29udGV4dCBmcm9tICcuL2FwaS10b2tlbi1jb250ZXh0JztcbmltcG9ydCBBcGlUb2tlbkRlbGV0ZUJ1dHRvbiBmcm9tICcuL2FwaS10b2tlbi1kZWxldGUtYnV0dG9uJztcbmltcG9ydCBBcGlUb2tlblRhYmxlQm9keVJvdyBmcm9tICcuL2FwaS10b2tlbi10YWJsZS1yb3cnO1xuaW1wb3J0IEFwaVRva2VuVGFibGVSb3dIZWFkZXIgZnJvbSAnLi9hcGktdG9rZW4tdGFibGUtcm93LWhlYWRlcic7XG5pbXBvcnQgQXBpVG9rZW5UYWJsZVJvd1Njb3Blc0NlbGwgZnJvbSAnLi9hcGktdG9rZW4tdGFibGUtcm93LXNjb3Blcy1jZWxsJztcbmltcG9ydCBBcGlUb2tlblRhYmxlUm93VG9rZW5DZWxsIGZyb20gJy4vYXBpLXRva2VuLXRhYmxlLXJvdy10b2tlbi1jZWxsJztcbmltcG9ydCB7IFRBcGlDb250ZXh0LCBUVG9rZW4gfSBmcm9tICdUeXBlcyc7XG5cbmNvbnN0IEFwaVRva2VuVGFibGUgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBhcGlfdG9rZW5zIH0gPSBSZWFjdC51c2VDb250ZXh0PFRBcGlDb250ZXh0PihBcGlUb2tlbkNvbnRleHQpO1xuXG4gICAgY29uc3QgZm9ybWF0VG9rZW5TY29wZXMgPSAoc3RyOiBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc3QgcmVwbGFjZV9maWx0ZXIgPSBzdHIucmVwbGFjZSgvWy1fXS9nLCAnICcpO1xuICAgICAgICBjb25zdCBzZW50ZW5jZWRfY2FzZSA9IHJlcGxhY2VfZmlsdGVyWzBdLnRvVXBwZXJDYXNlKCkgKyByZXBsYWNlX2ZpbHRlci5zbGljZSgxKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICByZXR1cm4gc2VudGVuY2VkX2Nhc2U7XG4gICAgfTtcblxuICAgIGNvbnN0IGdldFRyYW5zbGF0ZWRTY29wZXMgPSAoc3RyOiBzdHJpbmcpID0+IHtcbiAgICAgICAgc3dpdGNoIChzdHIpIHtcbiAgICAgICAgICAgIGNhc2UgJ3JlYWQnOlxuICAgICAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZSgnUmVhZCcpO1xuICAgICAgICAgICAgY2FzZSAndHJhZGUnOlxuICAgICAgICAgICAgICAgIHJldHVybiBsb2NhbGl6ZSgnVHJhZGUnKTtcbiAgICAgICAgICAgIGNhc2UgJ3BheW1lbnRzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gbG9jYWxpemUoJ1BheW1lbnRzJyk7XG4gICAgICAgICAgICBjYXNlICdhZG1pbic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplKCdBZG1pbicpO1xuICAgICAgICAgICAgY2FzZSAndHJhZGluZ19pbmZvcm1hdGlvbic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsaXplKCdUcmFkaW5nIGluZm9ybWF0aW9uJyk7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHJldHVybiBmb3JtYXRUb2tlblNjb3BlcyhzdHIpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGdldFNjb3BlVmFsdWUgPSAodG9rZW46IFRUb2tlbikgPT4ge1xuICAgICAgICBjb25zdCB0aXRsZWRfc2NvcGVzID0gdG9rZW4uc2NvcGVzPy5tYXAoKHNjb3BlOiBzdHJpbmcpID0+IGdldFRyYW5zbGF0ZWRTY29wZXMoc2NvcGUpKTtcbiAgICAgICAgY29uc3QgZGF0ZV9mb3JtYXQgPSB0b2tlbi5sYXN0X3VzZWQgPyBmb3JtYXREYXRlKHRva2VuLmxhc3RfdXNlZCwgJ0REL01NL1lZWVknKSA6IGxvY2FsaXplKCdOZXZlcicpO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkaXNwbGF5X25hbWU6IHRva2VuLmRpc3BsYXlfbmFtZSxcbiAgICAgICAgICAgIHNjb3BlczogdGl0bGVkX3Njb3BlcyxcbiAgICAgICAgICAgIGxhc3RfdXNlZDogZGF0ZV9mb3JtYXQsXG4gICAgICAgICAgICB0b2tlbjogdG9rZW4udG9rZW4sXG4gICAgICAgIH07XG4gICAgfTtcbiAgICBpZiAoaXNNb2JpbGUoKSkge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgICAgIHthcGlfdG9rZW5zPy5tYXAoKHRva2VuX2RhdGE6IFRUb2tlbikgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0b2tlbjogVFRva2VuID0gZ2V0U2NvcGVWYWx1ZSh0b2tlbl9kYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYga2V5PXt0b2tlbi50b2tlbn0gY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3Njb3BlJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX19zY29wZS1pdGVtJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdoNScgc2l6ZT0neHhzJyBjb2xvcj0nZ2VuZXJhbCcgbGluZV9oZWlnaHQ9J3hzJyB3ZWlnaHQ9J2JvbGQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTmFtZScgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3Njb3BlLWl0ZW0tLW5hbWUnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT0ncydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcj0nZ2VuZXJhbCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lX2hlaWdodD0nbSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dG9rZW4uZGlzcGxheV9uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX19zY29wZS1pdGVtJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdoNScgc2l6ZT0neHhzJyBjb2xvcj0nZ2VuZXJhbCcgbGluZV9oZWlnaHQ9J3hzJyB3ZWlnaHQ9J2JvbGQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nVG9rZW4nIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd1Rva2VuQ2VsbCB0b2tlbj17dG9rZW4udG9rZW59IHNjb3Blcz17dG9rZW4uc2NvcGVzfSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUZXh0IGFzPSdoNScgc2l6ZT0neHhzJyBjb2xvcj0nZ2VuZXJhbCcgbGluZV9oZWlnaHQ9J3hzJyB3ZWlnaHQ9J2JvbGQnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxMb2NhbGl6ZSBpMThuX2RlZmF1bHRfdGV4dD0nTGFzdCBVc2VkJyAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRleHQgYXM9J3AnIHNpemU9J3MnIGNvbG9yPSdnZW5lcmFsJyBsaW5lX2hlaWdodD0nbSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Rva2VuLmxhc3RfdXNlZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fc2NvcGUtaXRlbSc+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGV4dCBhcz0naDUnIHNpemU9J3h4cycgY29sb3I9J2dlbmVyYWwnIGxpbmVfaGVpZ2h0PSd4cycgd2VpZ2h0PSdib2xkJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8TG9jYWxpemUgaTE4bl9kZWZhdWx0X3RleHQ9J1Njb3BlcycgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBcGlUb2tlblRhYmxlUm93U2NvcGVzQ2VsbCBzY29wZXM9e3Rva2VuLnNjb3Blc30gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QXBpVG9rZW5EZWxldGVCdXR0b24gdG9rZW49e3Rva2VufSAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9SZWFjdC5GcmFnbWVudD5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8dGFibGUgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3RhYmxlJz5cbiAgICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgICA8dHIgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX3RhYmxlLWhlYWRlci1yb3cnPlxuICAgICAgICAgICAgICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0hlYWRlciB0ZXh0PXtsb2NhbGl6ZSgnTmFtZScpfSAvPlxuICAgICAgICAgICAgICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0hlYWRlciB0ZXh0PXtsb2NhbGl6ZSgnVG9rZW4nKX0gLz5cbiAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuVGFibGVSb3dIZWFkZXIgdGV4dD17bG9jYWxpemUoJ1Njb3BlcycpfSAvPlxuICAgICAgICAgICAgICAgICAgICA8QXBpVG9rZW5UYWJsZVJvd0hlYWRlciB0ZXh0PXtsb2NhbGl6ZSgnTGFzdCB1c2VkJyl9IC8+XG4gICAgICAgICAgICAgICAgICAgIDx0aCAvPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICA8L3RoZWFkPlxuICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgIHthcGlfdG9rZW5zPy5tYXAoKGFwaV90b2tlbjogVFRva2VuKSA9PiAoXG4gICAgICAgICAgICAgICAgICAgIDxBcGlUb2tlblRhYmxlQm9keVJvdyBrZXk9e2FwaV90b2tlbi50b2tlbn0gdG9rZW49e2dldFNjb3BlVmFsdWUoYXBpX3Rva2VuKX0gLz5cbiAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvdGJvZHk+XG4gICAgICAgIDwvdGFibGU+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuVGFibGU7XG4iLCJpbXBvcnQgeyBtYWtlT2JzZXJ2YWJsZSB9IGZyb20gXCJtb2J4XCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaWYgKCF1c2VTdGF0ZSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIm1vYngtcmVhY3QtbGl0ZSByZXF1aXJlcyBSZWFjdCB3aXRoIEhvb2tzIHN1cHBvcnRcIik7XG59XG5pZiAoIW1ha2VPYnNlcnZhYmxlKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwibW9ieC1yZWFjdC1saXRlQDMgcmVxdWlyZXMgbW9ieCBhdCBsZWFzdCB2ZXJzaW9uIDYgdG8gYmUgYXZhaWxhYmxlXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNzZXJ0RW52aXJvbm1lbnQuanMubWFwIiwiZXhwb3J0IHsgdW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMgfSBmcm9tIFwicmVhY3QtZG9tXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWFjdEJhdGNoZWRVcGRhdGVzLmpzLm1hcCIsImltcG9ydCB7IGNvbmZpZ3VyZSB9IGZyb20gXCJtb2J4XCI7XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE5vb3BCYXRjaChjYWxsYmFjaykge1xuICAgIGNhbGxiYWNrKCk7XG59XG5leHBvcnQgZnVuY3Rpb24gb2JzZXJ2ZXJCYXRjaGluZyhyZWFjdGlvblNjaGVkdWxlcikge1xuICAgIGlmICghcmVhY3Rpb25TY2hlZHVsZXIpIHtcbiAgICAgICAgcmVhY3Rpb25TY2hlZHVsZXIgPSBkZWZhdWx0Tm9vcEJhdGNoO1xuICAgICAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oXCJbTW9iWF0gRmFpbGVkIHRvIGdldCB1bnN0YWJsZV9iYXRjaGVkIHVwZGF0ZXMgZnJvbSByZWFjdC1kb20gLyByZWFjdC1uYXRpdmVcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uZmlndXJlKHsgcmVhY3Rpb25TY2hlZHVsZXI6IHJlYWN0aW9uU2NoZWR1bGVyIH0pO1xufVxuZXhwb3J0IHZhciBpc09ic2VydmVyQmF0Y2hlZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIltNb2JYXSBEZXByZWNhdGVkXCIpO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYnNlcnZlckJhdGNoaW5nLmpzLm1hcCIsImltcG9ydCB7IGdldERlcGVuZGVuY3lUcmVlIH0gZnJvbSBcIm1vYnhcIjtcbmV4cG9ydCBmdW5jdGlvbiBwcmludERlYnVnVmFsdWUodikge1xuICAgIHJldHVybiBnZXREZXBlbmRlbmN5VHJlZSh2KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByaW50RGVidWdWYWx1ZS5qcy5tYXAiLCJleHBvcnQgdmFyIFJFR0lTVFJZX0ZJTkFMSVpFX0FGVEVSID0gMTAwMDA7XG5leHBvcnQgdmFyIFJFR0lTVFJZX1NXRUVQX0lOVEVSVkFMID0gMTAwMDA7XG52YXIgVGltZXJCYXNlZEZpbmFsaXphdGlvblJlZ2lzdHJ5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFRpbWVyQmFzZWRGaW5hbGl6YXRpb25SZWdpc3RyeShmaW5hbGl6ZSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJmaW5hbGl6ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogZmluYWxpemVcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInJlZ2lzdHJhdGlvbnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IG5ldyBNYXAoKVxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwic3dlZXBUaW1lb3V0XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIEJvdW5kIHNvIGl0IGNhbiBiZSB1c2VkIGRpcmVjdGx5IGFzIHNldFRpbWVvdXQgY2FsbGJhY2suXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInN3ZWVwXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiAobWF4QWdlKSB7XG4gICAgICAgICAgICAgICAgaWYgKG1heEFnZSA9PT0gdm9pZCAwKSB7IG1heEFnZSA9IFJFR0lTVFJZX0ZJTkFMSVpFX0FGVEVSOyB9XG4gICAgICAgICAgICAgICAgLy8gY2FuY2VsIHRpbWVvdXQgc28gd2UgY2FuIGZvcmNlIHN3ZWVwIGFueXRpbWVcbiAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQoX3RoaXMuc3dlZXBUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICBfdGhpcy5zd2VlcFRpbWVvdXQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgdmFyIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMucmVnaXN0cmF0aW9ucy5mb3JFYWNoKGZ1bmN0aW9uIChyZWdpc3RyYXRpb24sIHRva2VuKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub3cgLSByZWdpc3RyYXRpb24ucmVnaXN0ZXJlZEF0ID49IG1heEFnZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuZmluYWxpemUocmVnaXN0cmF0aW9uLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnJlZ2lzdHJhdGlvbnMuZGVsZXRlKHRva2VuKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmIChfdGhpcy5yZWdpc3RyYXRpb25zLnNpemUgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLnNjaGVkdWxlU3dlZXAoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBCb3VuZCBzbyBpdCBjYW4gYmUgZXhwb3J0ZWQgZGlyZWN0bHkgYXMgY2xlYXJUaW1lcnMgdGVzdCB1dGlsaXR5LlxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJmaW5hbGl6ZUFsbEltbWVkaWF0ZWx5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuc3dlZXAoMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvLyBUb2tlbiBpcyBhY3R1YWxseSByZXF1aXJlZCB3aXRoIHRoaXMgaW1wbFxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUaW1lckJhc2VkRmluYWxpemF0aW9uUmVnaXN0cnkucHJvdG90eXBlLCBcInJlZ2lzdGVyXCIsIHtcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBmdW5jdGlvbiAodGFyZ2V0LCB2YWx1ZSwgdG9rZW4pIHtcbiAgICAgICAgICAgIHRoaXMucmVnaXN0cmF0aW9ucy5zZXQodG9rZW4sIHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICAgICAgcmVnaXN0ZXJlZEF0OiBEYXRlLm5vdygpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuc2NoZWR1bGVTd2VlcCgpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFRpbWVyQmFzZWRGaW5hbGl6YXRpb25SZWdpc3RyeS5wcm90b3R5cGUsIFwidW5yZWdpc3RlclwiLCB7XG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICB2YWx1ZTogZnVuY3Rpb24gKHRva2VuKSB7XG4gICAgICAgICAgICB0aGlzLnJlZ2lzdHJhdGlvbnMuZGVsZXRlKHRva2VuKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUaW1lckJhc2VkRmluYWxpemF0aW9uUmVnaXN0cnkucHJvdG90eXBlLCBcInNjaGVkdWxlU3dlZXBcIiwge1xuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnN3ZWVwVGltZW91dCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zd2VlcFRpbWVvdXQgPSBzZXRUaW1lb3V0KHRoaXMuc3dlZXAsIFJFR0lTVFJZX1NXRUVQX0lOVEVSVkFMKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBUaW1lckJhc2VkRmluYWxpemF0aW9uUmVnaXN0cnk7XG59KCkpO1xuZXhwb3J0IHsgVGltZXJCYXNlZEZpbmFsaXphdGlvblJlZ2lzdHJ5IH07XG5leHBvcnQgdmFyIFVuaXZlcnNhbEZpbmFsaXphdGlvblJlZ2lzdHJ5ID0gdHlwZW9mIEZpbmFsaXphdGlvblJlZ2lzdHJ5ICE9PSBcInVuZGVmaW5lZFwiXG4gICAgPyBGaW5hbGl6YXRpb25SZWdpc3RyeVxuICAgIDogVGltZXJCYXNlZEZpbmFsaXphdGlvblJlZ2lzdHJ5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9VW5pdmVyc2FsRmluYWxpemF0aW9uUmVnaXN0cnkuanMubWFwIiwiaW1wb3J0IHsgVW5pdmVyc2FsRmluYWxpemF0aW9uUmVnaXN0cnkgfSBmcm9tIFwiLi9Vbml2ZXJzYWxGaW5hbGl6YXRpb25SZWdpc3RyeVwiO1xuZXhwb3J0IHZhciBvYnNlcnZlckZpbmFsaXphdGlvblJlZ2lzdHJ5ID0gbmV3IFVuaXZlcnNhbEZpbmFsaXphdGlvblJlZ2lzdHJ5KGZ1bmN0aW9uIChhZG0pIHtcbiAgICB2YXIgX2E7XG4gICAgKF9hID0gYWRtLnJlYWN0aW9uKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzcG9zZSgpO1xuICAgIGFkbS5yZWFjdGlvbiA9IG51bGw7XG59KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmVyRmluYWxpemF0aW9uUmVnaXN0cnkuanMubWFwIiwidmFyIGdsb2JhbElzVXNpbmdTdGF0aWNSZW5kZXJpbmcgPSBmYWxzZTtcbmV4cG9ydCBmdW5jdGlvbiBlbmFibGVTdGF0aWNSZW5kZXJpbmcoZW5hYmxlKSB7XG4gICAgZ2xvYmFsSXNVc2luZ1N0YXRpY1JlbmRlcmluZyA9IGVuYWJsZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1VzaW5nU3RhdGljUmVuZGVyaW5nKCkge1xuICAgIHJldHVybiBnbG9iYWxJc1VzaW5nU3RhdGljUmVuZGVyaW5nO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RhdGljUmVuZGVyaW5nLmpzLm1hcCIsInZhciBfX3JlYWQgPSAodGhpcyAmJiB0aGlzLl9fcmVhZCkgfHwgZnVuY3Rpb24gKG8sIG4pIHtcbiAgICB2YXIgbSA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl07XG4gICAgaWYgKCFtKSByZXR1cm4gbztcbiAgICB2YXIgaSA9IG0uY2FsbChvKSwgciwgYXIgPSBbXSwgZTtcbiAgICB0cnkge1xuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7IGUgPSB7IGVycm9yOiBlcnJvciB9OyB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAociAmJiAhci5kb25lICYmIChtID0gaVtcInJldHVyblwiXSkpIG0uY2FsbChpKTtcbiAgICAgICAgfVxuICAgICAgICBmaW5hbGx5IHsgaWYgKGUpIHRocm93IGUuZXJyb3I7IH1cbiAgICB9XG4gICAgcmV0dXJuIGFyO1xufTtcbmltcG9ydCB7IFJlYWN0aW9uIH0gZnJvbSBcIm1vYnhcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHByaW50RGVidWdWYWx1ZSB9IGZyb20gXCIuL3V0aWxzL3ByaW50RGVidWdWYWx1ZVwiO1xuaW1wb3J0IHsgb2JzZXJ2ZXJGaW5hbGl6YXRpb25SZWdpc3RyeSB9IGZyb20gXCIuL3V0aWxzL29ic2VydmVyRmluYWxpemF0aW9uUmVnaXN0cnlcIjtcbmltcG9ydCB7IGlzVXNpbmdTdGF0aWNSZW5kZXJpbmcgfSBmcm9tIFwiLi9zdGF0aWNSZW5kZXJpbmdcIjtcbmZ1bmN0aW9uIG9ic2VydmVyQ29tcG9uZW50TmFtZUZvcihiYXNlQ29tcG9uZW50TmFtZSkge1xuICAgIHJldHVybiBcIm9ic2VydmVyXCIuY29uY2F0KGJhc2VDb21wb25lbnROYW1lKTtcbn1cbi8qKlxuICogV2UgdXNlIGNsYXNzIHRvIG1ha2UgaXQgZWFzaWVyIHRvIGRldGVjdCBpbiBoZWFwIHNuYXBzaG90cyBieSBuYW1lXG4gKi9cbnZhciBPYmplY3RUb0JlUmV0YWluZWRCeVJlYWN0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9iamVjdFRvQmVSZXRhaW5lZEJ5UmVhY3QoKSB7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3RUb0JlUmV0YWluZWRCeVJlYWN0O1xufSgpKTtcbmZ1bmN0aW9uIG9iamVjdFRvQmVSZXRhaW5lZEJ5UmVhY3RGYWN0b3J5KCkge1xuICAgIHJldHVybiBuZXcgT2JqZWN0VG9CZVJldGFpbmVkQnlSZWFjdCgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHVzZU9ic2VydmVyKGZuLCBiYXNlQ29tcG9uZW50TmFtZSkge1xuICAgIGlmIChiYXNlQ29tcG9uZW50TmFtZSA9PT0gdm9pZCAwKSB7IGJhc2VDb21wb25lbnROYW1lID0gXCJvYnNlcnZlZFwiOyB9XG4gICAgaWYgKGlzVXNpbmdTdGF0aWNSZW5kZXJpbmcoKSkge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICB9XG4gICAgdmFyIF9hID0gX19yZWFkKFJlYWN0LnVzZVN0YXRlKG9iamVjdFRvQmVSZXRhaW5lZEJ5UmVhY3RGYWN0b3J5KSwgMSksIG9iamVjdFJldGFpbmVkQnlSZWFjdCA9IF9hWzBdO1xuICAgIC8vIEZvcmNlIHVwZGF0ZSwgc2VlICMyOTgyXG4gICAgdmFyIF9iID0gX19yZWFkKFJlYWN0LnVzZVN0YXRlKCksIDIpLCBzZXRTdGF0ZSA9IF9iWzFdO1xuICAgIHZhciBmb3JjZVVwZGF0ZSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNldFN0YXRlKFtdKTsgfTtcbiAgICAvLyBTdHJpY3RNb2RlL0NvbmN1cnJlbnRNb2RlL1N1c3BlbnNlIG1heSBtZWFuIHRoYXQgb3VyIGNvbXBvbmVudCBpc1xuICAgIC8vIHJlbmRlcmVkIGFuZCBhYmFuZG9uZWQgbXVsdGlwbGUgdGltZXMsIHNvIHdlIG5lZWQgdG8gdHJhY2sgbGVha2VkXG4gICAgLy8gUmVhY3Rpb25zLlxuICAgIHZhciBhZG1SZWYgPSBSZWFjdC51c2VSZWYobnVsbCk7XG4gICAgaWYgKCFhZG1SZWYuY3VycmVudCkge1xuICAgICAgICAvLyBGaXJzdCByZW5kZXJcbiAgICAgICAgYWRtUmVmLmN1cnJlbnQgPSB7XG4gICAgICAgICAgICByZWFjdGlvbjogbnVsbCxcbiAgICAgICAgICAgIG1vdW50ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgY2hhbmdlZEJlZm9yZU1vdW50OiBmYWxzZVxuICAgICAgICB9O1xuICAgIH1cbiAgICB2YXIgYWRtID0gYWRtUmVmLmN1cnJlbnQ7XG4gICAgaWYgKCFhZG0ucmVhY3Rpb24pIHtcbiAgICAgICAgLy8gRmlyc3QgcmVuZGVyIG9yIGNvbXBvbmVudCB3YXMgbm90IGNvbW1pdHRlZCBhbmQgcmVhY3Rpb24gd2FzIGRpc3Bvc2VkIGJ5IHJlZ2lzdHJ5XG4gICAgICAgIGFkbS5yZWFjdGlvbiA9IG5ldyBSZWFjdGlvbihvYnNlcnZlckNvbXBvbmVudE5hbWVGb3IoYmFzZUNvbXBvbmVudE5hbWUpLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAvLyBPYnNlcnZhYmxlIGhhcyBjaGFuZ2VkLCBtZWFuaW5nIHdlIHdhbnQgdG8gcmUtcmVuZGVyXG4gICAgICAgICAgICAvLyBCVVQgaWYgd2UncmUgYSBjb21wb25lbnQgdGhhdCBoYXNuJ3QgeWV0IGdvdCB0byB0aGUgdXNlRWZmZWN0KClcbiAgICAgICAgICAgIC8vIHN0YWdlLCB3ZSBtaWdodCBiZSBhIGNvbXBvbmVudCB0aGF0IF9zdGFydGVkXyB0byByZW5kZXIsIGJ1dFxuICAgICAgICAgICAgLy8gZ290IGRyb3BwZWQsIGFuZCB3ZSBkb24ndCB3YW50IHRvIG1ha2Ugc3RhdGUgY2hhbmdlcyB0aGVuLlxuICAgICAgICAgICAgLy8gKEl0IHRyaWdnZXJzIHdhcm5pbmdzIGluIFN0cmljdE1vZGUsIGZvciBhIHN0YXJ0LilcbiAgICAgICAgICAgIGlmIChhZG0ubW91bnRlZCkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGhhdmUgcmVhY2hlZCB1c2VFZmZlY3QoKSwgc28gd2UncmUgbW91bnRlZCwgYW5kIGNhbiB0cmlnZ2VyIGFuIHVwZGF0ZVxuICAgICAgICAgICAgICAgIGZvcmNlVXBkYXRlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBXZSBoYXZlbid0IHlldCByZWFjaGVkIHVzZUVmZmVjdCgpLCBzbyB3ZSdsbCBuZWVkIHRvIHRyaWdnZXIgYSByZS1yZW5kZXJcbiAgICAgICAgICAgICAgICAvLyB3aGVuIChhbmQgaWYpIHVzZUVmZmVjdCgpIGFycml2ZXMuXG4gICAgICAgICAgICAgICAgYWRtLmNoYW5nZWRCZWZvcmVNb3VudCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBvYnNlcnZlckZpbmFsaXphdGlvblJlZ2lzdHJ5LnJlZ2lzdGVyKG9iamVjdFJldGFpbmVkQnlSZWFjdCwgYWRtLCBhZG0pO1xuICAgIH1cbiAgICBSZWFjdC51c2VEZWJ1Z1ZhbHVlKGFkbS5yZWFjdGlvbiwgcHJpbnREZWJ1Z1ZhbHVlKTtcbiAgICBSZWFjdC51c2VFZmZlY3QoZnVuY3Rpb24gKCkge1xuICAgICAgICBvYnNlcnZlckZpbmFsaXphdGlvblJlZ2lzdHJ5LnVucmVnaXN0ZXIoYWRtKTtcbiAgICAgICAgYWRtLm1vdW50ZWQgPSB0cnVlO1xuICAgICAgICBpZiAoYWRtLnJlYWN0aW9uKSB7XG4gICAgICAgICAgICBpZiAoYWRtLmNoYW5nZWRCZWZvcmVNb3VudCkge1xuICAgICAgICAgICAgICAgIC8vIEdvdCBhIGNoYW5nZSBiZWZvcmUgbW91bnQsIGZvcmNlIGFuIHVwZGF0ZVxuICAgICAgICAgICAgICAgIGFkbS5jaGFuZ2VkQmVmb3JlTW91bnQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgLy8gVGhlIHJlYWN0aW9uIHdlIHNldCB1cCBpbiBvdXIgcmVuZGVyIGhhcyBiZWVuIGRpc3Bvc2VkLlxuICAgICAgICAgICAgLy8gVGhpcyBjYW4gYmUgZHVlIHRvIGJhZCB0aW1pbmdzIG9mIHJlbmRlcmluZ3MsIGUuZy4gb3VyXG4gICAgICAgICAgICAvLyBjb21wb25lbnQgd2FzIHBhdXNlZCBmb3IgYSBfdmVyeV8gbG9uZyB0aW1lLCBhbmQgb3VyXG4gICAgICAgICAgICAvLyByZWFjdGlvbiBnb3QgY2xlYW5lZCB1cFxuICAgICAgICAgICAgLy8gUmUtY3JlYXRlIHRoZSByZWFjdGlvblxuICAgICAgICAgICAgYWRtLnJlYWN0aW9uID0gbmV3IFJlYWN0aW9uKG9ic2VydmVyQ29tcG9uZW50TmFtZUZvcihiYXNlQ29tcG9uZW50TmFtZSksIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAvLyBXZSd2ZSBkZWZpbml0ZWx5IGFscmVhZHkgYmVlbiBtb3VudGVkIGF0IHRoaXMgcG9pbnRcbiAgICAgICAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBmb3JjZVVwZGF0ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBhZG0ucmVhY3Rpb24uZGlzcG9zZSgpO1xuICAgICAgICAgICAgYWRtLnJlYWN0aW9uID0gbnVsbDtcbiAgICAgICAgICAgIGFkbS5tb3VudGVkID0gZmFsc2U7XG4gICAgICAgICAgICBhZG0uY2hhbmdlZEJlZm9yZU1vdW50ID0gZmFsc2U7XG4gICAgICAgIH07XG4gICAgfSwgW10pO1xuICAgIC8vIHJlbmRlciB0aGUgb3JpZ2luYWwgY29tcG9uZW50LCBidXQgaGF2ZSB0aGVcbiAgICAvLyByZWFjdGlvbiB0cmFjayB0aGUgb2JzZXJ2YWJsZXMsIHNvIHRoYXQgcmVuZGVyaW5nXG4gICAgLy8gY2FuIGJlIGludmFsaWRhdGVkIChzZWUgYWJvdmUpIG9uY2UgYSBkZXBlbmRlbmN5IGNoYW5nZXNcbiAgICB2YXIgcmVuZGVyaW5nO1xuICAgIHZhciBleGNlcHRpb247XG4gICAgYWRtLnJlYWN0aW9uLnRyYWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlbmRlcmluZyA9IGZuKCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIGV4Y2VwdGlvbiA9IGU7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoZXhjZXB0aW9uKSB7XG4gICAgICAgIHRocm93IGV4Y2VwdGlvbjsgLy8gcmUtdGhyb3cgYW55IGV4Y2VwdGlvbnMgY2F1Z2h0IGR1cmluZyByZW5kZXJpbmdcbiAgICB9XG4gICAgcmV0dXJuIHJlbmRlcmluZztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZU9ic2VydmVyLmpzLm1hcCIsImltcG9ydCB7IGZvcndhcmRSZWYsIG1lbW8gfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGlzVXNpbmdTdGF0aWNSZW5kZXJpbmcgfSBmcm9tIFwiLi9zdGF0aWNSZW5kZXJpbmdcIjtcbmltcG9ydCB7IHVzZU9ic2VydmVyIH0gZnJvbSBcIi4vdXNlT2JzZXJ2ZXJcIjtcbnZhciB3YXJuT2JzZXJ2ZXJPcHRpb25zRGVwcmVjYXRlZCA9IHRydWU7XG52YXIgaGFzU3ltYm9sID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIFN5bWJvbC5mb3I7XG4vLyBVc2luZyByZWFjdC1pcyBoYWQgc29tZSBpc3N1ZXMgKGFuZCBvcGVyYXRlcyBvbiBlbGVtZW50cywgbm90IG9uIHR5cGVzKSwgc2VlICM2MDggLyAjNjA5XG52YXIgUmVhY3RGb3J3YXJkUmVmU3ltYm9sID0gaGFzU3ltYm9sXG4gICAgPyBTeW1ib2wuZm9yKFwicmVhY3QuZm9yd2FyZF9yZWZcIilcbiAgICA6IHR5cGVvZiBmb3J3YXJkUmVmID09PSBcImZ1bmN0aW9uXCIgJiYgZm9yd2FyZFJlZihmdW5jdGlvbiAocHJvcHMpIHsgcmV0dXJuIG51bGw7IH0pW1wiJCR0eXBlb2ZcIl07XG52YXIgUmVhY3RNZW1vU3ltYm9sID0gaGFzU3ltYm9sXG4gICAgPyBTeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKVxuICAgIDogdHlwZW9mIG1lbW8gPT09IFwiZnVuY3Rpb25cIiAmJiBtZW1vKGZ1bmN0aW9uIChwcm9wcykgeyByZXR1cm4gbnVsbDsgfSlbXCIkJHR5cGVvZlwiXTtcbi8vIG4uYi4gYmFzZSBjYXNlIGlzIG5vdCB1c2VkIGZvciBhY3R1YWwgdHlwaW5ncyBvciBleHBvcnRlZCBpbiB0aGUgdHlwaW5nIGZpbGVzXG5leHBvcnQgZnVuY3Rpb24gb2JzZXJ2ZXIoYmFzZUNvbXBvbmVudCwgXG4vLyBUT0RPIHJlbW92ZSBpbiBuZXh0IG1ham9yXG5vcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIgJiYgd2Fybk9ic2VydmVyT3B0aW9uc0RlcHJlY2F0ZWQgJiYgb3B0aW9ucykge1xuICAgICAgICB3YXJuT2JzZXJ2ZXJPcHRpb25zRGVwcmVjYXRlZCA9IGZhbHNlO1xuICAgICAgICBjb25zb2xlLndhcm4oXCJbbW9ieC1yZWFjdC1saXRlXSBgb2JzZXJ2ZXIoZm4sIHsgZm9yd2FyZFJlZjogdHJ1ZSB9KWAgaXMgZGVwcmVjYXRlZCwgdXNlIGBvYnNlcnZlcihSZWFjdC5mb3J3YXJkUmVmKGZuKSlgXCIpO1xuICAgIH1cbiAgICBpZiAoUmVhY3RNZW1vU3ltYm9sICYmIGJhc2VDb21wb25lbnRbXCIkJHR5cGVvZlwiXSA9PT0gUmVhY3RNZW1vU3ltYm9sKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIlttb2J4LXJlYWN0LWxpdGVdIFlvdSBhcmUgdHJ5aW5nIHRvIHVzZSBgb2JzZXJ2ZXJgIG9uIGEgZnVuY3Rpb24gY29tcG9uZW50IHdyYXBwZWQgaW4gZWl0aGVyIGFub3RoZXIgYG9ic2VydmVyYCBvciBgUmVhY3QubWVtb2AuIFRoZSBvYnNlcnZlciBhbHJlYWR5IGFwcGxpZXMgJ1JlYWN0Lm1lbW8nIGZvciB5b3UuXCIpO1xuICAgIH1cbiAgICAvLyBUaGUgd29ya2luZyBvZiBvYnNlcnZlciBpcyBleHBsYWluZWQgc3RlcCBieSBzdGVwIGluIHRoaXMgdGFsazogaHR0cHM6Ly93d3cueW91dHViZS5jb20vd2F0Y2g/dj1jUEY0aUJlZG9GMCZmZWF0dXJlPXlvdXR1LmJlJnQ9MTMwN1xuICAgIGlmIChpc1VzaW5nU3RhdGljUmVuZGVyaW5nKCkpIHtcbiAgICAgICAgcmV0dXJuIGJhc2VDb21wb25lbnQ7XG4gICAgfVxuICAgIHZhciB1c2VGb3J3YXJkUmVmID0gKF9hID0gb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmZvcndhcmRSZWYpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGZhbHNlO1xuICAgIHZhciByZW5kZXIgPSBiYXNlQ29tcG9uZW50O1xuICAgIHZhciBiYXNlQ29tcG9uZW50TmFtZSA9IGJhc2VDb21wb25lbnQuZGlzcGxheU5hbWUgfHwgYmFzZUNvbXBvbmVudC5uYW1lO1xuICAgIC8vIElmIGFscmVhZHkgd3JhcHBlZCB3aXRoIGZvcndhcmRSZWYsIHVud3JhcCxcbiAgICAvLyBzbyB3ZSBjYW4gcGF0Y2ggcmVuZGVyIGFuZCBhcHBseSBtZW1vXG4gICAgaWYgKFJlYWN0Rm9yd2FyZFJlZlN5bWJvbCAmJiBiYXNlQ29tcG9uZW50W1wiJCR0eXBlb2ZcIl0gPT09IFJlYWN0Rm9yd2FyZFJlZlN5bWJvbCkge1xuICAgICAgICB1c2VGb3J3YXJkUmVmID0gdHJ1ZTtcbiAgICAgICAgcmVuZGVyID0gYmFzZUNvbXBvbmVudFtcInJlbmRlclwiXTtcbiAgICAgICAgaWYgKHR5cGVvZiByZW5kZXIgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiW21vYngtcmVhY3QtbGl0ZV0gYHJlbmRlcmAgcHJvcGVydHkgb2YgRm9yd2FyZFJlZiB3YXMgbm90IGEgZnVuY3Rpb25cIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdmFyIG9ic2VydmVyQ29tcG9uZW50ID0gZnVuY3Rpb24gKHByb3BzLCByZWYpIHtcbiAgICAgICAgcmV0dXJuIHVzZU9ic2VydmVyKGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlbmRlcihwcm9wcywgcmVmKTsgfSwgYmFzZUNvbXBvbmVudE5hbWUpO1xuICAgIH07XG4gICAgLy8gRG9uJ3Qgc2V0IGBkaXNwbGF5TmFtZWAgZm9yIGFub255bW91cyBjb21wb25lbnRzLFxuICAgIC8vIHNvIHRoZSBgZGlzcGxheU5hbWVgIGNhbiBiZSBjdXN0b21pemVkIGJ5IHVzZXIsIHNlZSAjMzE5Mi5cbiAgICBpZiAoYmFzZUNvbXBvbmVudE5hbWUgIT09IFwiXCIpIHtcbiAgICAgICAgO1xuICAgICAgICBvYnNlcnZlckNvbXBvbmVudC5kaXNwbGF5TmFtZSA9IGJhc2VDb21wb25lbnROYW1lO1xuICAgIH1cbiAgICAvLyBTdXBwb3J0IGxlZ2FjeSBjb250ZXh0OiBgY29udGV4dFR5cGVzYCBtdXN0IGJlIGFwcGxpZWQgYmVmb3JlIGBtZW1vYFxuICAgIGlmIChiYXNlQ29tcG9uZW50LmNvbnRleHRUeXBlcykge1xuICAgICAgICA7XG4gICAgICAgIG9ic2VydmVyQ29tcG9uZW50LmNvbnRleHRUeXBlcyA9IGJhc2VDb21wb25lbnQuY29udGV4dFR5cGVzO1xuICAgIH1cbiAgICBpZiAodXNlRm9yd2FyZFJlZikge1xuICAgICAgICAvLyBgZm9yd2FyZFJlZmAgbXVzdCBiZSBhcHBsaWVkIHByaW9yIGBtZW1vYFxuICAgICAgICAvLyBgZm9yd2FyZFJlZihvYnNlcnZlcihjbXApKWAgdGhyb3dzOlxuICAgICAgICAvLyBcImZvcndhcmRSZWYgcmVxdWlyZXMgYSByZW5kZXIgZnVuY3Rpb24gYnV0IHJlY2VpdmVkIGEgYG1lbW9gIGNvbXBvbmVudC4gSW5zdGVhZCBvZiBmb3J3YXJkUmVmKG1lbW8oLi4uKSksIHVzZSBtZW1vKGZvcndhcmRSZWYoLi4uKSlcIlxuICAgICAgICBvYnNlcnZlckNvbXBvbmVudCA9IGZvcndhcmRSZWYob2JzZXJ2ZXJDb21wb25lbnQpO1xuICAgIH1cbiAgICAvLyBtZW1vOyB3ZSBhcmUgbm90IGludGVyZXN0ZWQgaW4gZGVlcCB1cGRhdGVzXG4gICAgLy8gaW4gcHJvcHM7IHdlIGFzc3VtZSB0aGF0IGlmIGRlZXAgb2JqZWN0cyBhcmUgY2hhbmdlZCxcbiAgICAvLyB0aGlzIGlzIGluIG9ic2VydmFibGVzLCB3aGljaCB3b3VsZCBoYXZlIGJlZW4gdHJhY2tlZCBhbnl3YXlcbiAgICBvYnNlcnZlckNvbXBvbmVudCA9IG1lbW8ob2JzZXJ2ZXJDb21wb25lbnQpO1xuICAgIGNvcHlTdGF0aWNQcm9wZXJ0aWVzKGJhc2VDb21wb25lbnQsIG9ic2VydmVyQ29tcG9uZW50KTtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYnNlcnZlckNvbXBvbmVudCwgXCJjb250ZXh0VHlwZXNcIiwge1xuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlttb2J4LXJlYWN0LWxpdGVdIGBcIi5jb25jYXQodGhpcy5kaXNwbGF5TmFtZSB8fCAoKF9hID0gdGhpcy50eXBlKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZGlzcGxheU5hbWUpIHx8IFwiQ29tcG9uZW50XCIsIFwiLmNvbnRleHRUeXBlc2AgbXVzdCBiZSBzZXQgYmVmb3JlIGFwcGx5aW5nIGBvYnNlcnZlcmAuXCIpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBvYnNlcnZlckNvbXBvbmVudDtcbn1cbi8vIGJhc2VkIG9uIGh0dHBzOi8vZ2l0aHViLmNvbS9tcmlkZ3dheS9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9ibG9iL21hc3Rlci9zcmMvaW5kZXguanNcbnZhciBob2lzdEJsYWNrTGlzdCA9IHtcbiAgICAkJHR5cGVvZjogdHJ1ZSxcbiAgICByZW5kZXI6IHRydWUsXG4gICAgY29tcGFyZTogdHJ1ZSxcbiAgICB0eXBlOiB0cnVlLFxuICAgIC8vIERvbid0IHJlZGVmaW5lIGBkaXNwbGF5TmFtZWAsXG4gICAgLy8gaXQncyBkZWZpbmVkIGFzIGdldHRlci1zZXR0ZXIgcGFpciBvbiBgbWVtb2AgKHNlZSAjMzE5MikuXG4gICAgZGlzcGxheU5hbWU6IHRydWVcbn07XG5mdW5jdGlvbiBjb3B5U3RhdGljUHJvcGVydGllcyhiYXNlLCB0YXJnZXQpIHtcbiAgICBPYmplY3Qua2V5cyhiYXNlKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKCFob2lzdEJsYWNrTGlzdFtrZXldKSB7XG4gICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoYmFzZSwga2V5KSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ic2VydmVyLmpzLm1hcCIsImltcG9ydCB7IHVzZU9ic2VydmVyIH0gZnJvbSBcIi4vdXNlT2JzZXJ2ZXJcIjtcbmZ1bmN0aW9uIE9ic2VydmVyQ29tcG9uZW50KF9hKSB7XG4gICAgdmFyIGNoaWxkcmVuID0gX2EuY2hpbGRyZW4sIHJlbmRlciA9IF9hLnJlbmRlcjtcbiAgICB2YXIgY29tcG9uZW50ID0gY2hpbGRyZW4gfHwgcmVuZGVyO1xuICAgIGlmICh0eXBlb2YgY29tcG9uZW50ICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiB1c2VPYnNlcnZlcihjb21wb25lbnQpO1xufVxuaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVikge1xuICAgIE9ic2VydmVyQ29tcG9uZW50LnByb3BUeXBlcyA9IHtcbiAgICAgICAgY2hpbGRyZW46IE9ic2VydmVyUHJvcHNDaGVjayxcbiAgICAgICAgcmVuZGVyOiBPYnNlcnZlclByb3BzQ2hlY2tcbiAgICB9O1xufVxuT2JzZXJ2ZXJDb21wb25lbnQuZGlzcGxheU5hbWUgPSBcIk9ic2VydmVyXCI7XG5leHBvcnQgeyBPYnNlcnZlckNvbXBvbmVudCBhcyBPYnNlcnZlciB9O1xuZnVuY3Rpb24gT2JzZXJ2ZXJQcm9wc0NoZWNrKHByb3BzLCBrZXksIGNvbXBvbmVudE5hbWUsIGxvY2F0aW9uLCBwcm9wRnVsbE5hbWUpIHtcbiAgICB2YXIgZXh0cmFLZXkgPSBrZXkgPT09IFwiY2hpbGRyZW5cIiA/IFwicmVuZGVyXCIgOiBcImNoaWxkcmVuXCI7XG4gICAgdmFyIGhhc1Byb3AgPSB0eXBlb2YgcHJvcHNba2V5XSA9PT0gXCJmdW5jdGlvblwiO1xuICAgIHZhciBoYXNFeHRyYVByb3AgPSB0eXBlb2YgcHJvcHNbZXh0cmFLZXldID09PSBcImZ1bmN0aW9uXCI7XG4gICAgaWYgKGhhc1Byb3AgJiYgaGFzRXh0cmFQcm9wKSB7XG4gICAgICAgIHJldHVybiBuZXcgRXJyb3IoXCJNb2JYIE9ic2VydmVyOiBEbyBub3QgdXNlIGNoaWxkcmVuIGFuZCByZW5kZXIgaW4gdGhlIHNhbWUgdGltZSBpbmBcIiArIGNvbXBvbmVudE5hbWUpO1xuICAgIH1cbiAgICBpZiAoaGFzUHJvcCB8fCBoYXNFeHRyYVByb3ApIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRXJyb3IoXCJJbnZhbGlkIHByb3AgYFwiICtcbiAgICAgICAgcHJvcEZ1bGxOYW1lICtcbiAgICAgICAgXCJgIG9mIHR5cGUgYFwiICtcbiAgICAgICAgdHlwZW9mIHByb3BzW2tleV0gK1xuICAgICAgICBcImAgc3VwcGxpZWQgdG9cIiArXG4gICAgICAgIFwiIGBcIiArXG4gICAgICAgIGNvbXBvbmVudE5hbWUgK1xuICAgICAgICBcImAsIGV4cGVjdGVkIGBmdW5jdGlvbmAuXCIpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9T2JzZXJ2ZXJDb21wb25lbnQuanMubWFwIiwiaW1wb3J0IHsgb2JzZXJ2YWJsZSB9IGZyb20gXCJtb2J4XCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUxvY2FsT2JzZXJ2YWJsZShpbml0aWFsaXplciwgYW5ub3RhdGlvbnMpIHtcbiAgICByZXR1cm4gdXNlU3RhdGUoZnVuY3Rpb24gKCkgeyByZXR1cm4gb2JzZXJ2YWJsZShpbml0aWFsaXplcigpLCBhbm5vdGF0aW9ucywgeyBhdXRvQmluZDogdHJ1ZSB9KTsgfSlbMF07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2VMb2NhbE9ic2VydmFibGUuanMubWFwIiwidmFyIF9fcmVhZCA9ICh0aGlzICYmIHRoaXMuX19yZWFkKSB8fCBmdW5jdGlvbiAobywgbikge1xuICAgIHZhciBtID0gdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIG9bU3ltYm9sLml0ZXJhdG9yXTtcbiAgICBpZiAoIW0pIHJldHVybiBvO1xuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xuICAgIHRyeSB7XG4gICAgICAgIHdoaWxlICgobiA9PT0gdm9pZCAwIHx8IG4tLSA+IDApICYmICEociA9IGkubmV4dCgpKS5kb25lKSBhci5wdXNoKHIudmFsdWUpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHsgZSA9IHsgZXJyb3I6IGVycm9yIH07IH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChyICYmICFyLmRvbmUgJiYgKG0gPSBpW1wicmV0dXJuXCJdKSkgbS5jYWxsKGkpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxuICAgIH1cbiAgICByZXR1cm4gYXI7XG59O1xuaW1wb3J0IHsgdXNlRGVwcmVjYXRlZCB9IGZyb20gXCIuL3V0aWxzL3V0aWxzXCI7XG5pbXBvcnQgeyBvYnNlcnZhYmxlLCBydW5JbkFjdGlvbiB9IGZyb20gXCJtb2J4XCI7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZUFzT2JzZXJ2YWJsZVNvdXJjZShjdXJyZW50KSB7XG4gICAgaWYgKFwicHJvZHVjdGlvblwiICE9PSBwcm9jZXNzLmVudi5OT0RFX0VOVilcbiAgICAgICAgdXNlRGVwcmVjYXRlZChcIlttb2J4LXJlYWN0LWxpdGVdICd1c2VBc09ic2VydmFibGVTb3VyY2UnIGlzIGRlcHJlY2F0ZWQsIHBsZWFzZSBzdG9yZSB0aGUgdmFsdWVzIGRpcmVjdGx5IGluIGFuIG9ic2VydmFibGUsIGZvciBleGFtcGxlIGJ5IHVzaW5nICd1c2VMb2NhbE9ic2VydmFibGUnLCBhbmQgc3luYyBmdXR1cmUgdXBkYXRlcyB1c2luZyAndXNlRWZmZWN0JyB3aGVuIG5lZWRlZC4gU2VlIHRoZSBSRUFETUUgZm9yIGV4YW1wbGVzLlwiKTtcbiAgICB2YXIgX2EgPSBfX3JlYWQodXNlU3RhdGUoZnVuY3Rpb24gKCkgeyByZXR1cm4gb2JzZXJ2YWJsZShjdXJyZW50LCB7fSwgeyBkZWVwOiBmYWxzZSB9KTsgfSksIDEpLCByZXMgPSBfYVswXTtcbiAgICBydW5JbkFjdGlvbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIE9iamVjdC5hc3NpZ24ocmVzLCBjdXJyZW50KTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlQXNPYnNlcnZhYmxlU291cmNlLmpzLm1hcCIsImltcG9ydCB7IG9ic2VydmFibGUgfSBmcm9tIFwibW9ieFwiO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZURlcHJlY2F0ZWQgfSBmcm9tIFwiLi91dGlscy91dGlsc1wiO1xuaW1wb3J0IHsgdXNlQXNPYnNlcnZhYmxlU291cmNlIH0gZnJvbSBcIi4vdXNlQXNPYnNlcnZhYmxlU291cmNlXCI7XG5leHBvcnQgZnVuY3Rpb24gdXNlTG9jYWxTdG9yZShpbml0aWFsaXplciwgY3VycmVudCkge1xuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpXG4gICAgICAgIHVzZURlcHJlY2F0ZWQoXCJbbW9ieC1yZWFjdC1saXRlXSAndXNlTG9jYWxTdG9yZScgaXMgZGVwcmVjYXRlZCwgdXNlICd1c2VMb2NhbE9ic2VydmFibGUnIGluc3RlYWQuXCIpO1xuICAgIHZhciBzb3VyY2UgPSBjdXJyZW50ICYmIHVzZUFzT2JzZXJ2YWJsZVNvdXJjZShjdXJyZW50KTtcbiAgICByZXR1cm4gdXNlU3RhdGUoZnVuY3Rpb24gKCkgeyByZXR1cm4gb2JzZXJ2YWJsZShpbml0aWFsaXplcihzb3VyY2UpLCB1bmRlZmluZWQsIHsgYXV0b0JpbmQ6IHRydWUgfSk7IH0pWzBdO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXNlTG9jYWxTdG9yZS5qcy5tYXAiLCJ2YXIgX2E7XG5pbXBvcnQgXCIuL3V0aWxzL2Fzc2VydEVudmlyb25tZW50XCI7XG5pbXBvcnQgeyB1bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyBhcyBiYXRjaCB9IGZyb20gXCIuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXNcIjtcbmltcG9ydCB7IG9ic2VydmVyQmF0Y2hpbmcgfSBmcm9tIFwiLi91dGlscy9vYnNlcnZlckJhdGNoaW5nXCI7XG5pbXBvcnQgeyB1c2VEZXByZWNhdGVkIH0gZnJvbSBcIi4vdXRpbHMvdXRpbHNcIjtcbmltcG9ydCB7IHVzZU9ic2VydmVyIGFzIHVzZU9ic2VydmVyT3JpZ2luYWwgfSBmcm9tIFwiLi91c2VPYnNlcnZlclwiO1xuaW1wb3J0IHsgZW5hYmxlU3RhdGljUmVuZGVyaW5nIH0gZnJvbSBcIi4vc3RhdGljUmVuZGVyaW5nXCI7XG5pbXBvcnQgeyBvYnNlcnZlckZpbmFsaXphdGlvblJlZ2lzdHJ5IH0gZnJvbSBcIi4vdXRpbHMvb2JzZXJ2ZXJGaW5hbGl6YXRpb25SZWdpc3RyeVwiO1xub2JzZXJ2ZXJCYXRjaGluZyhiYXRjaCk7XG5leHBvcnQgeyBpc1VzaW5nU3RhdGljUmVuZGVyaW5nLCBlbmFibGVTdGF0aWNSZW5kZXJpbmcgfSBmcm9tIFwiLi9zdGF0aWNSZW5kZXJpbmdcIjtcbmV4cG9ydCB7IG9ic2VydmVyIH0gZnJvbSBcIi4vb2JzZXJ2ZXJcIjtcbmV4cG9ydCB7IE9ic2VydmVyIH0gZnJvbSBcIi4vT2JzZXJ2ZXJDb21wb25lbnRcIjtcbmV4cG9ydCB7IHVzZUxvY2FsT2JzZXJ2YWJsZSB9IGZyb20gXCIuL3VzZUxvY2FsT2JzZXJ2YWJsZVwiO1xuZXhwb3J0IHsgdXNlTG9jYWxTdG9yZSB9IGZyb20gXCIuL3VzZUxvY2FsU3RvcmVcIjtcbmV4cG9ydCB7IHVzZUFzT2JzZXJ2YWJsZVNvdXJjZSB9IGZyb20gXCIuL3VzZUFzT2JzZXJ2YWJsZVNvdXJjZVwiO1xuZXhwb3J0IHZhciBjbGVhclRpbWVycyA9IChfYSA9IG9ic2VydmVyRmluYWxpemF0aW9uUmVnaXN0cnlbXCJmaW5hbGl6ZUFsbEltbWVkaWF0ZWx5XCJdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAoZnVuY3Rpb24gKCkgeyB9KTtcbmV4cG9ydCBmdW5jdGlvbiB1c2VPYnNlcnZlcihmbiwgYmFzZUNvbXBvbmVudE5hbWUpIHtcbiAgICBpZiAoYmFzZUNvbXBvbmVudE5hbWUgPT09IHZvaWQgMCkgeyBiYXNlQ29tcG9uZW50TmFtZSA9IFwib2JzZXJ2ZWRcIjsgfVxuICAgIGlmIChcInByb2R1Y3Rpb25cIiAhPT0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYpIHtcbiAgICAgICAgdXNlRGVwcmVjYXRlZChcIlttb2J4LXJlYWN0LWxpdGVdICd1c2VPYnNlcnZlcihmbiknIGlzIGRlcHJlY2F0ZWQuIFVzZSBgPE9ic2VydmVyPntmbn08L09ic2VydmVyPmAgaW5zdGVhZCwgb3Igd3JhcCB0aGUgZW50aXJlIGNvbXBvbmVudCBpbiBgb2JzZXJ2ZXJgLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHVzZU9ic2VydmVyT3JpZ2luYWwoZm4sIGJhc2VDb21wb25lbnROYW1lKTtcbn1cbmV4cG9ydCB7IGlzT2JzZXJ2ZXJCYXRjaGVkLCBvYnNlcnZlckJhdGNoaW5nIH0gZnJvbSBcIi4vdXRpbHMvb2JzZXJ2ZXJCYXRjaGluZ1wiO1xuZXhwb3J0IGZ1bmN0aW9uIHVzZVN0YXRpY1JlbmRlcmluZyhlbmFibGUpIHtcbiAgICBpZiAoXCJwcm9kdWN0aW9uXCIgIT09IHByb2Nlc3MuZW52Lk5PREVfRU5WKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIlttb2J4LXJlYWN0LWxpdGVdICd1c2VTdGF0aWNSZW5kZXJpbmcnIGlzIGRlcHJlY2F0ZWQsIHVzZSAnZW5hYmxlU3RhdGljUmVuZGVyaW5nJyBpbnN0ZWFkXCIpO1xuICAgIH1cbiAgICBlbmFibGVTdGF0aWNSZW5kZXJpbmcoZW5hYmxlKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCIsImltcG9ydCBtZXJnZSBmcm9tICdsb2Rhc2gubWVyZ2UnO1xuXG5pbXBvcnQgdHlwZSB7IFRDb3JlU3RvcmVzLCBUU3RvcmVzIH0gZnJvbSAnLi4vdHlwZXMnO1xuXG5jb25zdCBtb2NrID0gKCk6IFRTdG9yZXMgJiB7IGlzX21vY2s6IGJvb2xlYW4gfSA9PiB7XG4gICAgY29uc3QgY29tbW9uX3N0b3JlX2Vycm9yID0ge1xuICAgICAgICBhcHBfcm91dGluZ19oaXN0b3J5OiBbXSxcbiAgICAgICAgaGVhZGVyOiAnJyxcbiAgICAgICAgbWVzc2FnZTogJycsXG4gICAgICAgIHR5cGU6ICcnLFxuICAgICAgICByZWRpcmVjdF9sYWJlbDogJycsXG4gICAgICAgIHJlZGlyZWN0X3RvOiAnJyxcbiAgICAgICAgc2hvdWxkX2NsZWFyX2Vycm9yX29uX2NsaWNrOiBmYWxzZSxcbiAgICAgICAgc2hvdWxkX3Nob3dfcmVmcmVzaDogZmFsc2UsXG4gICAgICAgIHJlZGlyZWN0T25DbGljazogamVzdC5mbigpLFxuICAgIH07XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNfbW9jazogdHJ1ZSxcbiAgICAgICAgY2xpZW50OiB7XG4gICAgICAgICAgICBhY2NvdW50X3NldHRpbmdzOiB7fSxcbiAgICAgICAgICAgIGFjY291bnRfdHlwZTogJ3ZpcnR1YWwnLFxuICAgICAgICAgICAgYWNjb3VudHM6IHt9LFxuICAgICAgICAgICAgYWN0aXZlX2FjY291bnRfbGFuZGluZ19jb21wYW55OiAnJyxcbiAgICAgICAgICAgIHRyYWRpbmdfcGxhdGZvcm1fYXZhaWxhYmxlX2FjY291bnRzOiBbXSxcbiAgICAgICAgICAgIGFjY291bnRfbGltaXRzOiB7fSxcbiAgICAgICAgICAgIGFjY291bnRfc3RhdHVzOiB7XG4gICAgICAgICAgICAgICAgYXV0aGVudGljYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgYXR0ZW1wdHM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGlzdG9yeTogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnRyeV9jb2RlOiAnaWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogJzg5MTknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlOiAnbWFudWFsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAndmVyaWZpZWQnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lc3RhbXA6IDE2NzQ2MzM2ODEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXRlc3Q6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X2NvZGU6ICdpZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6ICc4OTE5JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXJ2aWNlOiAnbWFudWFsJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICd2ZXJpZmllZCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiAxNjc0NjMzNjgxLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ3ZlcmlmaWVkJyxcbiAgICAgICAgICAgICAgICAgICAgfSxcblxuICAgICAgICAgICAgICAgICAgICBpZGVudGl0eToge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VydmljZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZHY6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdF9yZWplY3RlZDogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcG9ydGVkX3Byb3BlcnRpZXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VibWlzc2lvbnNfbGVmdDogMyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1hbnVhbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6ICdub25lJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uZmlkbzoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5X2NvZGU6ICdJRE4nLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudHNfc3VwcG9ydGVkOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnRHJpdmluZyBMaWNlbmNlJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdOYXRpb25hbCBJZGVudGl0eSBDYXJkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdQYXNzcG9ydCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnUmVzaWRlbmNlIFBlcm1pdCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2NvdW50cnlfc3VwcG9ydGVkOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0X3JlamVjdGVkOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVwb3J0ZWRfcHJvcGVydGllczoge30sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ25vbmUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdWJtaXNzaW9uc19sZWZ0OiAzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiAndmVyaWZpZWQnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBpbmNvbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ25vbmUnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBuZWVkc192ZXJpZmljYXRpb246IFtdLFxuICAgICAgICAgICAgICAgICAgICBvd25lcnNoaXA6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVlc3RzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogJ25vbmUnLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY3VycmVuY3lfY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgICAgIFVTRDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNfZGVwb3NpdF9zdXNwZW5kZWQ6IDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBpc193aXRoZHJhd2FsX3N1c3BlbmRlZDogMCxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHAycF9zdGF0dXM6ICdub25lJyxcbiAgICAgICAgICAgICAgICBwcm9tcHRfY2xpZW50X3RvX2F1dGhlbnRpY2F0ZTogMCxcbiAgICAgICAgICAgICAgICByaXNrX2NsYXNzaWZpY2F0aW9uOiAnbG93JyxcbiAgICAgICAgICAgICAgICBzdGF0dXM6IFtcbiAgICAgICAgICAgICAgICAgICAgJ2FnZV92ZXJpZmljYXRpb24nLFxuICAgICAgICAgICAgICAgICAgICAnYWxsb3dfZG9jdW1lbnRfdXBsb2FkJyxcbiAgICAgICAgICAgICAgICAgICAgJ2F1dGhlbnRpY2F0ZWQnLFxuICAgICAgICAgICAgICAgICAgICAnZHh0cmFkZV9wYXNzd29yZF9ub3Rfc2V0JyxcbiAgICAgICAgICAgICAgICAgICAgJ2ZpbmFuY2lhbF9pbmZvcm1hdGlvbl9ub3RfY29tcGxldGUnLFxuICAgICAgICAgICAgICAgICAgICAnaWR2X2Rpc2FsbG93ZWQnLFxuICAgICAgICAgICAgICAgICAgICAnbXQ1X3Bhc3N3b3JkX25vdF9zZXQnLFxuICAgICAgICAgICAgICAgICAgICAndHJhZGluZ19leHBlcmllbmNlX25vdF9jb21wbGV0ZScsXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBiYWxhbmNlOiAnJyxcbiAgICAgICAgICAgIGNhbl9jaGFuZ2VfZmlhdF9jdXJyZW5jeTogZmFsc2UsXG4gICAgICAgICAgICBjbGllbnRzX2NvdW50cnk6ICcnLFxuICAgICAgICAgICAgY291bnRyeV9zdGFuZHBvaW50OiB7XG4gICAgICAgICAgICAgICAgaXNfYmVsZ2l1bTogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNfZnJhbmNlOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpc19pc2xlX29mX21hbjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNfb3RoZXJfZXU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzX3Jlc3Rfb2ZfZXU6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzX3VuaXRlZF9raW5nZG9tOiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjdXJyZW5jeTogJycsXG4gICAgICAgICAgICBjdXJyZW5jaWVzX2xpc3Q6IFt7IHRleHQ6ICcnLCB2YWx1ZTogJycsIGhhc190b29sX3RpcDogZmFsc2UgfV0sXG4gICAgICAgICAgICBjdXJyZW50X2N1cnJlbmN5X3R5cGU6ICcnLFxuICAgICAgICAgICAgY3VycmVudF9maWF0X2N1cnJlbmN5OiAnJyxcbiAgICAgICAgICAgIGNmZF9zY29yZTogMCxcbiAgICAgICAgICAgIGN0cmFkZXJfYWNjb3VudHNfbGlzdDogW10sXG4gICAgICAgICAgICBzZXRDRkRTY29yZTogamVzdC5mbigpLFxuICAgICAgICAgICAgZ2V0TGltaXRzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBoYXNfYWN0aXZlX3JlYWxfYWNjb3VudDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfZmlhdDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfbG9nZ2VkX291dDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfbWFsdGFpbnZlc3RfYWNjb3VudDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfcmVzdHJpY3RlZF9tdDVfYWNjb3VudDogZmFsc2UsXG4gICAgICAgICAgICBpbml0aWFsaXplZF9icm9hZGNhc3Q6IGZhbHNlLFxuICAgICAgICAgICAgaXNfYWNjb3VudF9zZXR0aW5nX2xvYWRlZDogZmFsc2UsXG4gICAgICAgICAgICBpc19hdXRob3JpemU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfZGVwb3NpdF9sb2NrOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2R4dHJhZGVfYWxsb3dlZDogZmFsc2UsXG4gICAgICAgICAgICBpc19keHRyYWRlX3Bhc3N3b3JkX25vdF9zZXQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfZXU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfZXVfY291bnRyeTogZmFsc2UsXG4gICAgICAgICAgICBoYXNfcmVzaWRlbmNlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2ZpbmFuY2lhbF9hY2NvdW50OiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2ZpbmFuY2lhbF9hc3Nlc3NtZW50X25lZWRlZDogZmFsc2UsXG4gICAgICAgICAgICBpc19maW5hbmNpYWxfaW5mb3JtYXRpb25faW5jb21wbGV0ZTogZmFsc2UsXG4gICAgICAgICAgICBpc19sb3dfcmlzazogZmFsc2UsXG4gICAgICAgICAgICBpc19pZGVudGl0eV92ZXJpZmljYXRpb25fbmVlZGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2xhbmRpbmdfY29tcGFueV9sb2FkZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfbG9nZ2VkX2luOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2xvZ2dpbmdfaW46IGZhbHNlLFxuICAgICAgICAgICAgaXNfbXQ1X3Bhc3N3b3JkX25vdF9zZXQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfcGVuZGluZ19wcm9vZl9vZl9vd25lcnNoaXA6IGZhbHNlLFxuICAgICAgICAgICAgaXNfcG9hX2V4cGlyZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfcG9wdWxhdGluZ19keHRyYWRlX2FjY291bnRfbGlzdDogZmFsc2UsXG4gICAgICAgICAgICBpc19zb2NpYWxfc2lnbnVwOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3NpbmdsZV9jdXJyZW5jeTogZmFsc2UsXG4gICAgICAgICAgICBpc19zd2l0Y2hpbmc6IGZhbHNlLFxuICAgICAgICAgICAgaXNfdG5jX25lZWRlZDogZmFsc2UsXG4gICAgICAgICAgICBpc19oaWdoX3Jpc2s6IGZhbHNlLFxuICAgICAgICAgICAgaXNfdHJhZGluZ19leHBlcmllbmNlX2luY29tcGxldGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfdW53ZWxjb21lOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3ZpcnR1YWw6IGZhbHNlLFxuICAgICAgICAgICAgaXNfd2l0aGRyYXdhbF9sb2NrOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3BvcHVsYXRpbmdfYWNjb3VudF9saXN0OiBmYWxzZSxcbiAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9zaG9ydGNvZGU6ICcnLFxuICAgICAgICAgICAgbG9jYWxfY3VycmVuY3lfY29uZmlnOiB7XG4gICAgICAgICAgICAgICAgY3VycmVuY3k6ICcnLFxuICAgICAgICAgICAgICAgIGRlY2ltYWxfcGxhY2VzOiAwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGxvZ2luaWQ6ICcnLFxuICAgICAgICAgICAgcHJlX3N3aXRjaF9icm9hZGNhc3Q6IGZhbHNlLFxuICAgICAgICAgICAgcmVzaWRlbmNlOiAnJyxcbiAgICAgICAgICAgIGlzX3N2ZzogZmFsc2UsXG4gICAgICAgICAgICByZXNwb25zZU10NUxvZ2luTGlzdDogamVzdC5mbigpLFxuICAgICAgICAgICAgcmVzcG9uc2VUcmFkaW5nUGxhdGZvcm1BY2NvdW50c0xpc3Q6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldEZpbmFuY2lhbEFuZFRyYWRpbmdBc3Nlc3NtZW50OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzdGFuZHBvaW50OiB7XG4gICAgICAgICAgICAgICAgZmluYW5jaWFsX2NvbXBhbnk6ICcnLFxuICAgICAgICAgICAgICAgIGdhbWluZ19jb21wYW55OiAnJyxcbiAgICAgICAgICAgICAgICBtYWx0YWludmVzdDogZmFsc2UsXG4gICAgICAgICAgICAgICAgc3ZnOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBpb206IGZhbHNlLFxuICAgICAgICAgICAgICAgIG1hbHRhOiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzd2l0Y2hBY2NvdW50OiBqZXN0LmZuKCksXG4gICAgICAgICAgICB2ZXJpZmljYXRpb25fY29kZToge1xuICAgICAgICAgICAgICAgIHBheW1lbnRfYWdlbnRfd2l0aGRyYXc6ICcnLFxuICAgICAgICAgICAgICAgIHBheW1lbnRfd2l0aGRyYXc6ICcnLFxuICAgICAgICAgICAgICAgIHJlcXVlc3RfZW1haWw6ICcnLFxuICAgICAgICAgICAgICAgIHJlc2V0X3Bhc3N3b3JkOiAnJyxcbiAgICAgICAgICAgICAgICBzaWdudXA6ICcnLFxuICAgICAgICAgICAgICAgIHN5c3RlbV9lbWFpbF9jaGFuZ2U6ICcnLFxuICAgICAgICAgICAgICAgIHRyYWRpbmdfcGxhdGZvcm1fZHh0cmFkZV9wYXNzd29yZF9yZXNldDogJycsXG4gICAgICAgICAgICAgICAgdHJhZGluZ19wbGF0Zm9ybV9tdDVfcGFzc3dvcmRfcmVzZXQ6ICcnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVtYWlsOiAnJyxcbiAgICAgICAgICAgIHNldFZlcmlmaWNhdGlvbkNvZGU6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHVwZGF0ZUFjY291bnRTdGF0dXM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2F1dGhlbnRpY2F0aW9uX25lZWRlZDogZmFsc2UsXG4gICAgICAgICAgICBhdXRoZW50aWNhdGlvbl9zdGF0dXM6IHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudF9zdGF0dXM6ICcnLFxuICAgICAgICAgICAgICAgIGlkZW50aXR5X3N0YXR1czogJycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbXQ1X2xvZ2luX2xpc3Q6IFtdLFxuICAgICAgICAgICAgbG9nb3V0OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG91bGRfYWxsb3dfYXV0aGVudGljYXRpb246IGZhbHNlLFxuICAgICAgICAgICAgYWN0aXZlX2FjY291bnRzOiBbXSxcbiAgICAgICAgICAgIGFjY291bnRfbGlzdDogW10sXG4gICAgICAgICAgICBhdmFpbGFibGVfY3J5cHRvX2N1cnJlbmNpZXM6IFtdLFxuICAgICAgICAgICAgc2VsZWN0Q3VycmVuY3k6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldEFjY291bnRTdGF0dXM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldEJhbGFuY2VPdGhlckFjY291bnRzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRJbml0aWFsaXplZDogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0TG9nb3V0OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRWaXNpYmlsaXR5UmVhbGl0eUNoZWNrOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRQMnBBZHZlcnRpc2VySW5mbzogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0UHJlU3dpdGNoQWNjb3VudDogamVzdC5mbigpLFxuICAgICAgICAgICAgc29jaWFsX2lkZW50aXR5X3Byb3ZpZGVyOiAnJyxcbiAgICAgICAgICAgIHN3aXRjaGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHN3aXRjaF9icm9hZGNhc3Q6IGZhbHNlLFxuICAgICAgICAgICAgc3dpdGNoRW5kU2lnbmFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc191azogZmFsc2UsXG4gICAgICAgICAgICBpc0VsaWdpYmxlRm9yTW9yZVJlYWxNdDU6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzRWxpZ2libGVGb3JNb3JlRGVtb010NVN2ZzogamVzdC5mbigpLFxuICAgICAgICAgICAgdXBkYXRlTVQ1U3RhdHVzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBmZXRjaFJlc2lkZW5jZUxpc3Q6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHJlc2lkZW5jZV9saXN0OiBbXSxcbiAgICAgICAgICAgIHNob3VsZF9yZXN0cmljdF9idmlfYWNjb3VudF9jcmVhdGlvbjogZmFsc2UsXG4gICAgICAgICAgICBzaG91bGRfcmVzdHJpY3RfdmFudWF0dV9hY2NvdW50X2NyZWF0aW9uOiBmYWxzZSxcbiAgICAgICAgICAgIGZldGNoQWNjb3VudFNldHRpbmdzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRBY2NvdW50U2V0dGluZ3M6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHVwZ3JhZGVhYmxlX2xhbmRpbmdfY29tcGFuaWVzOiBbXSxcbiAgICAgICAgICAgIGlzX3BvcHVsYXRpbmdfbXQ1X2FjY291bnRfbGlzdDogZmFsc2UsXG4gICAgICAgICAgICBsYW5kaW5nX2NvbXBhbmllczoge30sXG4gICAgICAgICAgICBsYW5kaW5nX2NvbXBhbnk6IHt9LFxuICAgICAgICAgICAgdXBncmFkZWFibGVfY3VycmVuY2llczogW10sXG4gICAgICAgICAgICBnZXRDaGFuZ2VhYmxlRmllbGRzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc0FjY291bnRPZlR5cGVEaXNhYmxlZDogamVzdC5mbigpLFxuICAgICAgICAgICAgaXNfbXQ1X2FsbG93ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgbXQ1X2Rpc2FibGVkX3NpZ251cF90eXBlczoge1xuICAgICAgICAgICAgICAgIHJlYWw6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRlbW86IGZhbHNlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGR4dHJhZGVfZGlzYWJsZWRfc2lnbnVwX3R5cGVzOiB7XG4gICAgICAgICAgICAgICAgcmVhbDogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGVtbzogZmFsc2UsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZHh0cmFkZV9hY2NvdW50c19saXN0X2Vycm9yOiBudWxsLFxuICAgICAgICAgICAgaGFzX2FjY291bnRfZXJyb3JfaW5fbXQ1X2RlbW9fbGlzdDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfYWNjb3VudF9lcnJvcl9pbl9tdDVfcmVhbF9saXN0OiBmYWxzZSxcbiAgICAgICAgICAgIGhhc19hY2NvdW50X2Vycm9yX2luX2R4dHJhZGVfZGVtb19saXN0OiBmYWxzZSxcbiAgICAgICAgICAgIGhhc19hY2NvdW50X2Vycm9yX2luX2R4dHJhZGVfcmVhbF9saXN0OiBmYWxzZSxcbiAgICAgICAgICAgIHdlYnNpdGVfc3RhdHVzOiB7XG4gICAgICAgICAgICAgICAgZHhfdHJhZGVfc3RhdHVzOiB7XG4gICAgICAgICAgICAgICAgICAgIGFsbDogMCxcbiAgICAgICAgICAgICAgICAgICAgZGVtbzogMCxcbiAgICAgICAgICAgICAgICAgICAgcmVhbDogMCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG10NV9zdGF0dXM6IHtcbiAgICAgICAgICAgICAgICAgICAgcmVhbDogW10sXG4gICAgICAgICAgICAgICAgICAgIGRlbW86IFtdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaXNfZnVsbHlfYXV0aGVudGljYXRlZDogZmFsc2UsXG4gICAgICAgICAgICBzdGF0ZXNfbGlzdDogW10sXG4gICAgICAgICAgICBmZXRjaFN0YXRlc0xpc3Q6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2NyeXB0bzogamVzdC5mbigpLFxuICAgICAgICAgICAgZHh0cmFkZV9hY2NvdW50c19saXN0OiBbXSxcbiAgICAgICAgICAgIGRlZmF1bHRfY3VycmVuY3k6ICdVU0QnLFxuICAgICAgICAgICAgcmVzZXRWaXJ0dWFsQmFsYW5jZTogamVzdC5mbigpLFxuICAgICAgICAgICAgaGFzX2VuYWJsZWRfdHdvX2ZhOiBmYWxzZSxcbiAgICAgICAgICAgIHNldFR3b0ZBU3RhdHVzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBoYXNfY2hhbmdlZF90d29fZmE6IGZhbHNlLFxuICAgICAgICAgICAgc2V0VHdvRkFDaGFuZ2VkU3RhdHVzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICByZWFsX2FjY291bnRfY3JlYXRpb25fdW5sb2NrX2RhdGU6ICcnLFxuICAgICAgICAgICAgaGFzX2FueV9yZWFsX2FjY291bnQ6IGZhbHNlLFxuICAgICAgICAgICAgc2V0UHJldkFjY291bnRUeXBlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBwcmV2X2FjY291bnRfdHlwZTogJ2RlbW8nLFxuICAgICAgICAgICAgaXNfYmV0YV9jaGFydDogdHJ1ZSxcbiAgICAgICAgICAgIHNldExvZ2luSW5mb3JtYXRpb246IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGluaXQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldExvZ2luSWQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHJlc2V0TG9jYWxTdG9yYWdlVmFsdWVzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRJc0FscmVhZHlBdHRlbXB0ZWQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2FscmVhZHlfYXR0ZW1wdGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGFjY291bnRfb3Blbl9kYXRlOiB1bmRlZmluZWQsXG4gICAgICAgIH0sXG4gICAgICAgIGNvbW1vbjoge1xuICAgICAgICAgICAgZXJyb3I6IGNvbW1vbl9zdG9yZV9lcnJvcixcbiAgICAgICAgICAgIGN1cnJlbnRfbGFuZ3VhZ2U6ICdFTicsXG4gICAgICAgICAgICBpc0N1cnJlbnRMYW5ndWFnZTogamVzdC5mbigpLFxuICAgICAgICAgICAgaXNfZnJvbV9kZXJpdmdvOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3NvY2tldF9vcGVuZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaGFzX2Vycm9yOiBmYWxzZSxcbiAgICAgICAgICAgIHBsYXRmb3JtOiAnJyxcbiAgICAgICAgICAgIHJvdXRlQmFja0luQXBwOiBqZXN0LmZuKCksXG4gICAgICAgICAgICByb3V0ZVRvOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBjaGFuZ2VDdXJyZW50TGFuZ3VhZ2U6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGNoYW5nZVNlbGVjdGVkTGFuZ3VhZ2U6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX25ldHdvcmtfb25saW5lOiBmYWxzZSxcbiAgICAgICAgICAgIG5ldHdvcmtfc3RhdHVzOiB7fSxcbiAgICAgICAgICAgIHNlcnZpY2VzX2Vycm9yOiB7fSxcbiAgICAgICAgICAgIHNlcnZlcl90aW1lOiBuZXcgRGF0ZSgpIGFzIHVua25vd24gYXMgVENvcmVTdG9yZXNbJ2NvbW1vbiddWydzZXJ2ZXJfdGltZSddLFxuICAgICAgICAgICAgc2V0RXJyb3I6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldFNlbGVjdGVkQ29udHJhY3RUeXBlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRTZXJ2aWNlc0Vycm9yOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG93RXJyb3I6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2xhbmd1YWdlX2NoYW5naW5nOiBmYWxzZSxcbiAgICAgICAgICAgIHNldEFwcHN0b3JlUGxhdGZvcm06IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGFwcF9yb3V0aW5nX2hpc3Rvcnk6IFtdLFxuICAgICAgICAgICAgZ2V0RXhjaGFuZ2VSYXRlOiBqZXN0LmZuKCksXG4gICAgICAgIH0sXG4gICAgICAgIHVpOiB7XG4gICAgICAgICAgICBhZHZhbmNlZF9kdXJhdGlvbl91bml0OiAndCcsXG4gICAgICAgICAgICBhZHZhbmNlZF9leHBpcnlfdHlwZTogJ2R1cmF0aW9uJyxcbiAgICAgICAgICAgIGFjY291bnRfc3dpdGNoZXJfZGlzYWJsZWRfbWVzc2FnZTogJycsXG4gICAgICAgICAgICBhcHBfY29udGVudHNfc2Nyb2xsX3JlZjoge1xuICAgICAgICAgICAgICAgIGN1cnJlbnQ6IG51bGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY3VycmVudF9mb2N1czogbnVsbCxcbiAgICAgICAgICAgIGR1cmF0aW9uX3Q6IDUsXG4gICAgICAgICAgICBnZXREdXJhdGlvbkZyb21Vbml0OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc19hY2NvdW50X3NldHRpbmdzX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfYWR2YW5jZWRfZHVyYXRpb246IGZhbHNlLFxuICAgICAgICAgICAgaXNfbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICBpc19jYXNoaWVyX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfd2FsbGV0X21vZGFsX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfY2hhcnRfbGF5b3V0X2RlZmF1bHQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfY2xvc2luZ19jcmVhdGVfcmVhbF9hY2NvdW50X21vZGFsOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2RhcmtfbW9kZV9vbjogZmFsc2UsXG4gICAgICAgICAgICBpc19sYW5ndWFnZV9zZXR0aW5nc19tb2RhbF9vbjogZmFsc2UsXG4gICAgICAgICAgICBpc19kZXNrdG9wOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2FwcF9kaXNhYmxlZDogZmFsc2UsXG4gICAgICAgICAgICBoYXNfb25seV9mb3J3YXJkX3N0YXJ0aW5nX2NvbnRyYWN0czogZmFsc2UsXG4gICAgICAgICAgICBoZWFkZXJfZXh0ZW5zaW9uOiBudWxsLFxuICAgICAgICAgICAgaXNfbGlua19leHBpcmVkX21vZGFsX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfbW9iaWxlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3RhYmxldDogZmFsc2UsXG4gICAgICAgICAgICBpc19tb2JpbGVfbGFuZ3VhZ2VfbWVudV9vcGVuOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3Bvc2l0aW9uc19kcmF3ZXJfb246IGZhbHNlLFxuICAgICAgICAgICAgaXNfcmVwb3J0c192aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3JvdXRlX21vZGFsX29uOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3NlcnZpY2VzX2Vycm9yX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfdW5zdXBwb3J0ZWRfY29udHJhY3RfbW9kYWxfdmlzaWJsZTogZmFsc2UsXG4gICAgICAgICAgICBkaXNhYmxlQXBwOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBlbmFibGVBcHA6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldEN1cnJlbnRGb2N1czogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlQWNjb3VudHNEaWFsb2c6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHRvZ2dsZUFjY291bnRTZXR0aW5nczogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlQ2FzaGllcjogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0RGFya01vZGU6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldFJlcG9ydHNUYWJJbmRleDogamVzdC5mbigpLFxuICAgICAgICAgICAgaGFzX3JlYWxfYWNjb3VudF9zaWdudXBfZW5kZWQ6IGZhbHNlLFxuICAgICAgICAgICAgcmVhbF9hY2NvdW50X3NpZ251cF90YXJnZXQ6ICcnLFxuICAgICAgICAgICAgcmVhbF9hY2NvdW50X3NpZ251cDoge1xuICAgICAgICAgICAgICAgIGFjdGl2ZV9tb2RhbF9pbmRleDogLTEsXG4gICAgICAgICAgICAgICAgcHJldmlvdXNfY3VycmVuY3k6ICcnLFxuICAgICAgICAgICAgICAgIGN1cnJlbnRfY3VycmVuY3k6ICcnLFxuICAgICAgICAgICAgICAgIHN1Y2Nlc3NfbWVzc2FnZTogJycsXG4gICAgICAgICAgICAgICAgZXJyb3JfbWVzc2FnZTogJycsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVzZXRSZWFsQWNjb3VudFNpZ251cFBhcmFtczogamVzdC5mbigpLFxuICAgICAgICAgICAgbm90aWZpY2F0aW9uX21lc3NhZ2VzX3VpOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBvcGVuUG9zaXRpb25zRHJhd2VyOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBvcGVuUmVhbEFjY291bnRTaWdudXA6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIG9uQ2hhbmdlVWlTdG9yZTogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0Q2hhcnRDb3VudGRvd246IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldElzV2FsbGV0TW9kYWxWaXNpYmxlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRIYXNPbmx5Rm9yd2FyZGluZ0NvbnRyYWN0czogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0SXNDbG9zaW5nQ3JlYXRlUmVhbEFjY291bnRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0TW9iaWxlTGFuZ3VhZ2VNZW51T3BlbjogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0UmVhbEFjY291bnRTaWdudXBFbmQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldFByb21wdEhhbmRsZXI6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldFB1cmNoYXNlU3RhdGU6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldEFwcENvbnRlbnRzU2Nyb2xsUmVmOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG91bGROYXZpZ2F0ZUFmdGVyQ2hvb3NlQ3J5cHRvOiBqZXN0LmZuKCksXG4gICAgICAgICAgICB0b2dnbGVMYW5ndWFnZVNldHRpbmdzTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHRvZ2dsZVBvc2l0aW9uc0RyYXdlcjogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlTGlua0V4cGlyZWRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlU2VydmljZXNFcnJvck1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICB0b2dnbGVTZXRDdXJyZW5jeU1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBhZGRUb2FzdDogamVzdC5mbigpLFxuICAgICAgICAgICAgcmVtb3ZlVG9hc3Q6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHJlc2V0UHVyY2hhc2VTdGF0ZXM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHJlcG9ydHNfcm91dGVfdGFiX2luZGV4OiAxLFxuICAgICAgICAgICAgc2hvdWxkX3Nob3dfY2FuY2VsbGF0aW9uX3dhcm5pbmc6IGZhbHNlLFxuICAgICAgICAgICAgdG9nZ2xlQ2FuY2VsbGF0aW9uV2FybmluZzogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlVW5zdXBwb3J0ZWRDb250cmFjdE1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICB0b2dnbGVSZXBvcnRzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRTdWJTZWN0aW9uSW5kZXg6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHN1Yl9zZWN0aW9uX2luZGV4OiAwLFxuICAgICAgICAgICAgdG9nZ2xlUmVhZHlUb0RlcG9zaXRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgaXNfcmVhZHlfdG9fZGVwb3NpdF9tb2RhbF92aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3JlYWxfYWNjX3NpZ251cF9vbjogZmFsc2UsXG4gICAgICAgICAgICBpc19uZWVkX3JlYWxfYWNjb3VudF9mb3JfY2FzaGllcl9tb2RhbF92aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX210NV9taWdyYXRpb25fbW9kYWxfZW5hYmxlZDogZmFsc2UsXG4gICAgICAgICAgICBpc19tdDVfbWlncmF0aW9uX21vZGFsX29wZW46IGZhbHNlLFxuICAgICAgICAgICAgdG9nZ2xlTmVlZFJlYWxBY2NvdW50Rm9yQ2FzaGllck1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc19zd2l0Y2hfdG9fZGVyaXZfYWNjb3VudF9tb2RhbF92aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIG9wZW5Td2l0Y2hUb1JlYWxBY2NvdW50TW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX3RvcF91cF92aXJ0dWFsX29wZW46IGZhbHNlLFxuICAgICAgICAgICAgaXNfdG9wX3VwX3ZpcnR1YWxfaW5fcHJvZ3Jlc3M6IGZhbHNlLFxuICAgICAgICAgICAgaXNfdG9wX3VwX3ZpcnR1YWxfc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBjbG9zZVRvcFVwTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGNsb3NlU3VjY2Vzc1RvcFVwTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2NmZF9yZXNldF9wYXNzd29yZF9tb2RhbF9lbmFibGVkOiBmYWxzZSxcbiAgICAgICAgICAgIHNldENGRFBhc3N3b3JkUmVzZXRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgb3BlbkRlcml2UmVhbEFjY291bnROZWVkZWRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgcG9wdWxhdGVIZWFkZXJFeHRlbnNpb25zOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBwb3B1bGF0ZVNldHRpbmdzRXh0ZW5zaW9uczogamVzdC5mbigpLFxuICAgICAgICAgICAgcHVyY2hhc2Vfc3RhdGVzOiBbXSxcbiAgICAgICAgICAgIHNldFNob3VsZFNob3dDb29sZG93bk1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBwb3B1bGF0ZUZvb3RlckV4dGVuc2lvbnM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIG9wZW5BY2NvdW50TmVlZGVkTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2FjY291bnRzX3N3aXRjaGVyX29uOiBmYWxzZSxcbiAgICAgICAgICAgIG9wZW5Ub3BVcE1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICB0b2dnbGVTaG91bGRTaG93UmVhbEFjY291bnRzTGlzdDogamVzdC5mbigpLFxuICAgICAgICAgICAgaXNfcmVzZXRfdHJhZGluZ19wYXNzd29yZF9tb2RhbF92aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHNldFJlc2V0VHJhZGluZ1Bhc3N3b3JkTW9kYWxPcGVuOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRNVDVNaWdyYXRpb25Nb2RhbEVuYWJsZWQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHRvZ2dsZU1UNU1pZ3JhdGlvbk1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICB2YW5pbGxhX3RyYWRlX3R5cGU6ICdWQU5JTExBTE9OR0NBTEwnLFxuICAgICAgICAgICAgaXNfY2hhcnRfY291bnRkb3duX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfYWRkaXRpb25hbF9reWNfaW5mb19tb2RhbF9vcGVuOiBmYWxzZSxcbiAgICAgICAgICAgIHNpbXBsZV9kdXJhdGlvbl91bml0OiAndCcsXG4gICAgICAgICAgICB0b2dnbGVBZGRpdGlvbmFsS3ljSW5mb01vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc19reWNfaW5mb3JtYXRpb25fc3VibWl0dGVkX21vZGFsX29wZW46IGZhbHNlLFxuICAgICAgICAgICAgdG9nZ2xlS3ljSW5mb3JtYXRpb25TdWJtaXR0ZWRNb2RhbDogamVzdC5mbigpLFxuICAgICAgICB9LFxuICAgICAgICB0cmFkZXJzX2h1Yjoge1xuICAgICAgICAgICAgZ2V0QWNjb3VudDogamVzdC5mbigpLFxuICAgICAgICAgICAgY2xvc2VNb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgY29tYmluZWRfY2ZkX210NV9hY2NvdW50czogW10sXG4gICAgICAgICAgICBhdmFpbGFibGVfY2ZkX2FjY291bnRzOiBbXSxcbiAgICAgICAgICAgIGNvbnRlbnRfZmxhZzogJycsXG4gICAgICAgICAgICBDRkRzX3Jlc3RyaWN0ZWRfY291bnRyaWVzOiBmYWxzZSxcbiAgICAgICAgICAgIG9wZW5Nb2RhbDogamVzdC5mbigpLFxuICAgICAgICAgICAgc2VsZWN0ZWRfYWNjb3VudDoge1xuICAgICAgICAgICAgICAgIGxvZ2luOiAnJyxcbiAgICAgICAgICAgICAgICBhY2NvdW50X2lkOiAnJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBpc19ldV91c2VyOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2RlbW86IGZhbHNlLFxuICAgICAgICAgICAgaXNfb25ib2FyZGluZ192aXNpdGVkOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX2ZpcnN0X3RpbWVfdmlzaXQ6IHRydWUsXG4gICAgICAgICAgICBzZXRJc09uYm9hcmRpbmdWaXNpdGVkOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRJc0ZpcnN0VGltZVZpc2l0OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc19yZWFsOiBmYWxzZSxcbiAgICAgICAgICAgIHNlbGVjdFJlZ2lvbjogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0U2VsZWN0ZWRBY2NvdW50OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc19sb3dfcmlza19jcl9ldV9yZWFsOiBmYWxzZSxcbiAgICAgICAgICAgIGlzX3JlYWxfd2FsbGV0c191cGdyYWRlX29uOiBmYWxzZSxcbiAgICAgICAgICAgIHRvZ2dsZVdhbGxldHNVcGdyYWRlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG93X2V1X3JlbGF0ZWRfY29udGVudDogZmFsc2UsXG4gICAgICAgICAgICBwbGF0Zm9ybV9yZWFsX2JhbGFuY2U6IHtcbiAgICAgICAgICAgICAgICBjdXJyZW5jeTogJycsXG4gICAgICAgICAgICAgICAgYmFsYW5jZTogMCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjZmRfZGVtb19iYWxhbmNlOiB7XG4gICAgICAgICAgICAgICAgY3VycmVuY3k6ICcnLFxuICAgICAgICAgICAgICAgIGJhbGFuY2U6IDAsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcGxhdGZvcm1fZGVtb19iYWxhbmNlOiB7XG4gICAgICAgICAgICAgICAgY3VycmVuY3k6ICcnLFxuICAgICAgICAgICAgICAgIGJhbGFuY2U6IDAsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY2ZkX3JlYWxfYmFsYW5jZToge1xuICAgICAgICAgICAgICAgIGN1cnJlbmN5OiAnJyxcbiAgICAgICAgICAgICAgICBiYWxhbmNlOiAwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNsb3NlQWNjb3VudFRyYW5zZmVyTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHRvZ2dsZVJlZ3VsYXRvcnNDb21wYXJlTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGZpbmFuY2lhbF9yZXN0cmljdGVkX2NvdW50cmllczogZmFsc2UsXG4gICAgICAgICAgICBzZWxlY3RlZF9hY2NvdW50X3R5cGU6ICdyZWFsJyxcbiAgICAgICAgICAgIG5vX0NSX2FjY291bnQ6IGZhbHNlLFxuICAgICAgICAgICAgbm9fTUZfYWNjb3VudDogZmFsc2UsXG4gICAgICAgICAgICBtb2RhbF9kYXRhOiB7XG4gICAgICAgICAgICAgICAgYWN0aXZlX21vZGFsOiAnJyxcbiAgICAgICAgICAgICAgICBkYXRhOiB7fSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtdWx0aXBsaWVyc19hY2NvdW50X3N0YXR1czogJycsXG4gICAgICAgICAgICBvcGVuRmFpbGVkVmVyaWZpY2F0aW9uTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNldFRvZ2dsZVBsYXRmb3JtVHlwZTogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlQWNjb3VudFRyYW5zZmVyTW9kYWw6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNlbGVjdEFjY291bnRUeXBlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBpc193YWxsZXRfbWlncmF0aW9uX2ZhaWxlZDogZmFsc2UsXG4gICAgICAgICAgICBzZXRXYWxsZXRzTWlncmF0aW9uRmFpbGVkUG9wdXA6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHNlbGVjdGVkX3BsYXRmb3JtX3R5cGU6ICcnLFxuICAgICAgICAgICAgYXZhaWxhYmxlX3BsYXRmb3JtczogW10sXG4gICAgICAgICAgICBzZWxlY3RlZF9yZWdpb246ICdBbGwnLFxuICAgICAgICAgICAgZ2V0RXhpc3RpbmdBY2NvdW50czogamVzdC5mbigpLFxuICAgICAgICAgICAgYXZhaWxhYmxlX2R4dHJhZGVfYWNjb3VudHM6IFtdLFxuICAgICAgICAgICAgdG9nZ2xlQWNjb3VudFR5cGVNb2RhbFZpc2liaWxpdHk6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGFjdGl2ZV9tb2RhbF90YWI6ICdEZXBvc2l0JyxcbiAgICAgICAgICAgIHNldFdhbGxldE1vZGFsQWN0aXZlVGFiOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBhY3RpdmVfbW9kYWxfd2FsbGV0X2lkOiAnJyxcbiAgICAgICAgICAgIHNldFdhbGxldE1vZGFsQWN0aXZlV2FsbGV0SUQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGF2YWlsYWJsZV9jdHJhZGVyX2FjY291bnRzOiBbXSxcbiAgICAgICAgICAgIHRvZ2dsZUlzVG91ck9wZW46IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2RlbW9fbG93X3Jpc2s6IGZhbHNlLFxuICAgICAgICAgICAgaXNfbXQ1X25vdGlmaWNhdGlvbl9tb2RhbF92aXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHNldE1UNU5vdGlmaWNhdGlvbk1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBoYXNfYW55X3JlYWxfYWNjb3VudDogZmFsc2UsXG4gICAgICAgICAgICBzdGFydFRyYWRlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG93VG9wVXBNb2RhbDogamVzdC5mbigpLFxuICAgICAgICB9LFxuICAgICAgICBub3RpZmljYXRpb25zOiB7XG4gICAgICAgICAgICBhZGROb3RpZmljYXRpb25NZXNzYWdlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBhZGROb3RpZmljYXRpb25NZXNzYWdlQnlLZXk6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGNsaWVudF9ub3RpZmljYXRpb25zOiB7fSxcbiAgICAgICAgICAgIGlzX25vdGlmaWNhdGlvbnNfZW1wdHk6IHRydWUsXG4gICAgICAgICAgICBpc19ub3RpZmljYXRpb25zX3Zpc2libGU6IGZhbHNlLFxuICAgICAgICAgICAgZmlsdGVyTm90aWZpY2F0aW9uTWVzc2FnZXM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIG5vdGlmaWNhdGlvbnM6IFtdLFxuICAgICAgICAgICAgcmVmcmVzaE5vdGlmaWNhdGlvbnM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHJlbW92ZUFsbE5vdGlmaWNhdGlvbk1lc3NhZ2VzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICByZW1vdmVOb3RpZmljYXRpb25zOiBqZXN0LmZuKCksXG4gICAgICAgICAgICByZW1vdmVOb3RpZmljYXRpb25CeUtleTogamVzdC5mbigpLFxuICAgICAgICAgICAgcmVtb3ZlTm90aWZpY2F0aW9uTWVzc2FnZTogamVzdC5mbigpLFxuICAgICAgICAgICAgcmVtb3ZlTm90aWZpY2F0aW9uTWVzc2FnZUJ5S2V5OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRQMlBPcmRlclByb3BzOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRQMlBSZWRpcmVjdFRvOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzaG93QWNjb3VudFN3aXRjaFRvUmVhbE5vdGlmaWNhdGlvbjogamVzdC5mbigpLFxuICAgICAgICAgICAgc2V0U2hvdWxkU2hvd1BvcHVwczogamVzdC5mbigpLFxuICAgICAgICAgICAgdG9nZ2xlTm90aWZpY2F0aW9uc01vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgIH0sXG4gICAgICAgIHBvcnRmb2xpbzoge1xuICAgICAgICAgICAgYWN0aXZlX3Bvc2l0aW9uczogW10sXG4gICAgICAgICAgICBhY3RpdmVfcG9zaXRpb25zX2NvdW50OiAwLFxuICAgICAgICAgICAgYWxsX3Bvc2l0aW9uczogW10sXG4gICAgICAgICAgICBiYXJyaWVyczogW10sXG4gICAgICAgICAgICBlcnJvcjogJycsXG4gICAgICAgICAgICBnZXRQb3NpdGlvbkJ5SWQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGlzX2xvYWRpbmc6IGZhbHNlLFxuICAgICAgICAgICAgaXNfYWNjdW11bGF0b3I6IGZhbHNlLFxuICAgICAgICAgICAgaXNfbXVsdGlwbGllcjogZmFsc2UsXG4gICAgICAgICAgICBpc190dXJib3M6IGZhbHNlLFxuICAgICAgICAgICAgb25CdXlSZXNwb25zZTogamVzdC5mbigpLFxuICAgICAgICAgICAgb25Ib3ZlclBvc2l0aW9uOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBvbkNsaWNrQ2FuY2VsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBvbkNsaWNrU2VsbDogamVzdC5mbigpLFxuICAgICAgICAgICAgb25Nb3VudDogamVzdC5mbigpLFxuICAgICAgICAgICAgb25Vbm1vdW50OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBvcGVuX2FjY3VfY29udHJhY3Q6IG51bGwsXG4gICAgICAgICAgICBwb3NpdGlvbnM6IFtdLFxuICAgICAgICAgICAgcmVtb3ZlUG9zaXRpb25CeUlkOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRDb250cmFjdFR5cGU6IGplc3QuZm4oKSxcbiAgICAgICAgfSxcbiAgICAgICAgY29udHJhY3RfdHJhZGU6IHtcbiAgICAgICAgICAgIGFjY291bnRTd2l0Y2hMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgICAgICAgICAgYWNjdV9iYXJyaWVyc190aW1lb3V0X2lkOiBudWxsLFxuICAgICAgICAgICAgYWNjdW11bGF0b3JfYmFycmllcnNfZGF0YToge30sXG4gICAgICAgICAgICBhY2N1bXVsYXRvcl9jb250cmFjdF9iYXJyaWVyc19kYXRhOiB7fSxcbiAgICAgICAgICAgIGFkZENvbnRyYWN0OiBqZXN0LmZuKCksXG4gICAgICAgICAgICBjaGFydF90eXBlOiAnJyxcbiAgICAgICAgICAgIGNsZWFyQWNjdW11bGF0b3JCYXJyaWVyc0RhdGE6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGNsZWFyRXJyb3I6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGNvbnRyYWN0czogW10sXG4gICAgICAgICAgICBlcnJvcl9tZXNzYWdlOiAnJyxcbiAgICAgICAgICAgIGZpbHRlcmVkX2NvbnRyYWN0czogW10sXG4gICAgICAgICAgICBnZXRDb250cmFjdEJ5SWQ6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGdyYW51bGFyaXR5OiAwLFxuICAgICAgICAgICAgaGFzX2Nyb3NzZWRfYWNjdV9iYXJyaWVyczogZmFsc2UsXG4gICAgICAgICAgICBoYXNfZXJyb3I6IGZhbHNlLFxuICAgICAgICAgICAgbGFzdF9jb250cmFjdDoge30sXG4gICAgICAgICAgICBtYXJrZXJzX2FycmF5OiBbXSxcbiAgICAgICAgICAgIG9uVW5tb3VudDogamVzdC5mbigpLFxuICAgICAgICAgICAgcHJldl9jaGFydF90eXBlOiAnJyxcbiAgICAgICAgICAgIHByZXZfZ3JhbnVsYXJpdHk6IG51bGwsXG4gICAgICAgICAgICByZW1vdmVDb250cmFjdDogamVzdC5mbigpLFxuICAgICAgICAgICAgc2F2ZVByZXZpb3VzQ2hhcnRNb2RlOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXROZXdBY2N1bXVsYXRvckJhcnJpZXJzRGF0YTogamVzdC5mbigpLFxuICAgICAgICAgICAgdXBkYXRlQWNjdW11bGF0b3JCYXJyaWVyc0RhdGE6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHVwZGF0ZUNoYXJ0VHlwZTogamVzdC5mbigpLFxuICAgICAgICAgICAgdXBkYXRlR3JhbnVsYXJpdHk6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIHVwZGF0ZVByb3Bvc2FsOiBqZXN0LmZuKCksXG4gICAgICAgIH0sXG4gICAgICAgIG1vZHVsZXM6IHtcbiAgICAgICAgICAgIGNmZDoge1xuICAgICAgICAgICAgICAgIHNldE1UNU1pZ3JhdGlvbkVycm9yOiBqZXN0LmZuKCksXG4gICAgICAgICAgICAgICAgbWlncmF0ZWRfbXQ1X2FjY291bnRzOiBbXSxcbiAgICAgICAgICAgICAgICBtdDVfbWlncmF0aW9uX2Vycm9yOiAnJyxcbiAgICAgICAgICAgICAgICBlbmFibGVDRkRQYXNzd29yZE1vZGFsOiBqZXN0LmZuKCksXG4gICAgICAgICAgICAgICAgc2V0SnVyaXNkaWN0aW9uU2VsZWN0ZWRTaG9ydGNvZGU6IGplc3QuZm4oKSxcbiAgICAgICAgICAgICAgICBzZXRBY2NvdW50VHlwZTogamVzdC5mbigpLFxuICAgICAgICAgICAgICAgIHNldE1pZ3JhdGVkTVQ1QWNjb3VudHM6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGZlYXR1cmVfZmxhZ3M6IHtcbiAgICAgICAgICAgIGRhdGE6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHVwZGF0ZTogamVzdC5mbigpLFxuICAgICAgICAgICAgdW5tb3VudDogamVzdC5mbigpLFxuICAgICAgICB9LFxuICAgICAgICBndG06IHtcbiAgICAgICAgICAgIGlzX2d0bV9hcHBsaWNhYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHZpc2l0b3JJZDogJ3Zpc2l0b3JJZCcsXG4gICAgICAgICAgICBjb21tb25fdmFyaWFibGVzOiB7XG4gICAgICAgICAgICAgICAgbGFuZ3VhZ2U6ICdlbicsXG4gICAgICAgICAgICAgICAgdGhlbWU6ICdkYXJrJyxcbiAgICAgICAgICAgICAgICBwbGF0Zm9ybTogJ0RCb3QnLFxuICAgICAgICAgICAgICAgIGxvZ2dlZEluOiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhY2NvdW50U3dpdGNoZXJMaXN0ZW5lcjogamVzdC5mbigpLFxuICAgICAgICAgICAgcHVzaERhdGFMYXllcjogamVzdC5mbigpLFxuICAgICAgICAgICAgcHVzaFRyYW5zYWN0aW9uRGF0YTogamVzdC5mbigpLFxuICAgICAgICAgICAgZXZlbnRIYW5kbGVyOiBqZXN0LmZuKCksXG4gICAgICAgICAgICBzZXRMb2dpbkZsYWc6IGplc3QuZm4oKSxcbiAgICAgICAgfSxcbiAgICAgICAgcHVzaHdvb3NoOiB7fSxcbiAgICAgICAgY29udHJhY3RfcmVwbGF5OiB7XG4gICAgICAgICAgICBjb250cmFjdF9zdG9yZToge1xuICAgICAgICAgICAgICAgIGNvbnRyYWN0X2luZm86IHt9LFxuICAgICAgICAgICAgICAgIGRpZ2l0c19pbmZvOiB7fSxcbiAgICAgICAgICAgICAgICBkaXNwbGF5X3N0YXR1czogJycsXG4gICAgICAgICAgICAgICAgaXNfZGlnaXRfY29udHJhY3Q6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzX2VuZGVkOiBmYWxzZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICByZW1vdmVFcnJvck1lc3NhZ2U6IGplc3QuZm4oKSxcbiAgICAgICAgICAgIGVycm9yX21lc3NhZ2U6ICcnLFxuICAgICAgICB9LFxuICAgICAgICBjaGFydF9iYXJyaWVyX3N0b3JlOiB7fSxcbiAgICAgICAgYWN0aXZlX3N5bWJvbHM6IHtcbiAgICAgICAgICAgIGFjdGl2ZV9zeW1ib2xzOiBbXSxcbiAgICAgICAgICAgIHNldEFjdGl2ZVN5bWJvbHM6IGplc3QuZm4oKSxcbiAgICAgICAgfSxcbiAgICB9O1xufTtcblxuY29uc3QgbW9ja1N0b3JlID0gKG92ZXJyaWRlOiBEZWVwUGFydGlhbDxUU3RvcmVzPik6IFRTdG9yZXMgPT4gbWVyZ2UobW9jaygpLCBvdmVycmlkZSk7XG5cbmV4cG9ydCBkZWZhdWx0IG1vY2tTdG9yZTtcbiIsImltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IFRTdG9yZXMgfSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IFN0b3JlQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8VFN0b3JlcyB8IG51bGw+KG51bGwpO1xuXG5leHBvcnQgZGVmYXVsdCBTdG9yZUNvbnRleHQ7XG4iLCIvLyBUWVBFU1xuLy8gVVRJTFNcbmNvbnN0IGlzU2VydmVyID0gdHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcgfHwgJ0Rlbm8nIGluIHdpbmRvdztcbmZ1bmN0aW9uIG5vb3AoKSB7XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiBmdW5jdGlvbmFsVXBkYXRlKHVwZGF0ZXIsIGlucHV0KSB7XG4gIHJldHVybiB0eXBlb2YgdXBkYXRlciA9PT0gJ2Z1bmN0aW9uJyA/IHVwZGF0ZXIoaW5wdXQpIDogdXBkYXRlcjtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRUaW1lb3V0KHZhbHVlKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIHZhbHVlID49IDAgJiYgdmFsdWUgIT09IEluZmluaXR5O1xufVxuZnVuY3Rpb24gZGlmZmVyZW5jZShhcnJheTEsIGFycmF5Mikge1xuICByZXR1cm4gYXJyYXkxLmZpbHRlcih4ID0+ICFhcnJheTIuaW5jbHVkZXMoeCkpO1xufVxuZnVuY3Rpb24gcmVwbGFjZUF0KGFycmF5LCBpbmRleCwgdmFsdWUpIHtcbiAgY29uc3QgY29weSA9IGFycmF5LnNsaWNlKDApO1xuICBjb3B5W2luZGV4XSA9IHZhbHVlO1xuICByZXR1cm4gY29weTtcbn1cbmZ1bmN0aW9uIHRpbWVVbnRpbFN0YWxlKHVwZGF0ZWRBdCwgc3RhbGVUaW1lKSB7XG4gIHJldHVybiBNYXRoLm1heCh1cGRhdGVkQXQgKyAoc3RhbGVUaW1lIHx8IDApIC0gRGF0ZS5ub3coKSwgMCk7XG59XG5mdW5jdGlvbiBwYXJzZVF1ZXJ5QXJncyhhcmcxLCBhcmcyLCBhcmczKSB7XG4gIGlmICghaXNRdWVyeUtleShhcmcxKSkge1xuICAgIHJldHVybiBhcmcxO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhcmcyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHsgLi4uYXJnMyxcbiAgICAgIHF1ZXJ5S2V5OiBhcmcxLFxuICAgICAgcXVlcnlGbjogYXJnMlxuICAgIH07XG4gIH1cblxuICByZXR1cm4geyAuLi5hcmcyLFxuICAgIHF1ZXJ5S2V5OiBhcmcxXG4gIH07XG59XG5mdW5jdGlvbiBwYXJzZU11dGF0aW9uQXJncyhhcmcxLCBhcmcyLCBhcmczKSB7XG4gIGlmIChpc1F1ZXJ5S2V5KGFyZzEpKSB7XG4gICAgaWYgKHR5cGVvZiBhcmcyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICByZXR1cm4geyAuLi5hcmczLFxuICAgICAgICBtdXRhdGlvbktleTogYXJnMSxcbiAgICAgICAgbXV0YXRpb25GbjogYXJnMlxuICAgICAgfTtcbiAgICB9XG5cbiAgICByZXR1cm4geyAuLi5hcmcyLFxuICAgICAgbXV0YXRpb25LZXk6IGFyZzFcbiAgICB9O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBhcmcxID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIHsgLi4uYXJnMixcbiAgICAgIG11dGF0aW9uRm46IGFyZzFcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIHsgLi4uYXJnMVxuICB9O1xufVxuZnVuY3Rpb24gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgcmV0dXJuIGlzUXVlcnlLZXkoYXJnMSkgPyBbeyAuLi5hcmcyLFxuICAgIHF1ZXJ5S2V5OiBhcmcxXG4gIH0sIGFyZzNdIDogW2FyZzEgfHwge30sIGFyZzJdO1xufVxuZnVuY3Rpb24gcGFyc2VNdXRhdGlvbkZpbHRlckFyZ3MoYXJnMSwgYXJnMiwgYXJnMykge1xuICByZXR1cm4gaXNRdWVyeUtleShhcmcxKSA/IFt7IC4uLmFyZzIsXG4gICAgbXV0YXRpb25LZXk6IGFyZzFcbiAgfSwgYXJnM10gOiBbYXJnMSB8fCB7fSwgYXJnMl07XG59XG5mdW5jdGlvbiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSB7XG4gIGNvbnN0IHtcbiAgICB0eXBlID0gJ2FsbCcsXG4gICAgZXhhY3QsXG4gICAgZmV0Y2hTdGF0dXMsXG4gICAgcHJlZGljYXRlLFxuICAgIHF1ZXJ5S2V5LFxuICAgIHN0YWxlXG4gIH0gPSBmaWx0ZXJzO1xuXG4gIGlmIChpc1F1ZXJ5S2V5KHF1ZXJ5S2V5KSkge1xuICAgIGlmIChleGFjdCkge1xuICAgICAgaWYgKHF1ZXJ5LnF1ZXJ5SGFzaCAhPT0gaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKHF1ZXJ5S2V5LCBxdWVyeS5vcHRpb25zKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmICghcGFydGlhbE1hdGNoS2V5KHF1ZXJ5LnF1ZXJ5S2V5LCBxdWVyeUtleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZSAhPT0gJ2FsbCcpIHtcbiAgICBjb25zdCBpc0FjdGl2ZSA9IHF1ZXJ5LmlzQWN0aXZlKCk7XG5cbiAgICBpZiAodHlwZSA9PT0gJ2FjdGl2ZScgJiYgIWlzQWN0aXZlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKHR5cGUgPT09ICdpbmFjdGl2ZScgJiYgaXNBY3RpdmUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIHN0YWxlID09PSAnYm9vbGVhbicgJiYgcXVlcnkuaXNTdGFsZSgpICE9PSBzdGFsZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgZmV0Y2hTdGF0dXMgIT09ICd1bmRlZmluZWQnICYmIGZldGNoU3RhdHVzICE9PSBxdWVyeS5zdGF0ZS5mZXRjaFN0YXR1cykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGlmIChwcmVkaWNhdGUgJiYgIXByZWRpY2F0ZShxdWVyeSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cbmZ1bmN0aW9uIG1hdGNoTXV0YXRpb24oZmlsdGVycywgbXV0YXRpb24pIHtcbiAgY29uc3Qge1xuICAgIGV4YWN0LFxuICAgIGZldGNoaW5nLFxuICAgIHByZWRpY2F0ZSxcbiAgICBtdXRhdGlvbktleVxuICB9ID0gZmlsdGVycztcblxuICBpZiAoaXNRdWVyeUtleShtdXRhdGlvbktleSkpIHtcbiAgICBpZiAoIW11dGF0aW9uLm9wdGlvbnMubXV0YXRpb25LZXkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBpZiAoZXhhY3QpIHtcbiAgICAgIGlmIChoYXNoUXVlcnlLZXkobXV0YXRpb24ub3B0aW9ucy5tdXRhdGlvbktleSkgIT09IGhhc2hRdWVyeUtleShtdXRhdGlvbktleSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoIXBhcnRpYWxNYXRjaEtleShtdXRhdGlvbi5vcHRpb25zLm11dGF0aW9uS2V5LCBtdXRhdGlvbktleSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBpZiAodHlwZW9mIGZldGNoaW5nID09PSAnYm9vbGVhbicgJiYgbXV0YXRpb24uc3RhdGUuc3RhdHVzID09PSAnbG9hZGluZycgIT09IGZldGNoaW5nKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHByZWRpY2F0ZSAmJiAhcHJlZGljYXRlKG11dGF0aW9uKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKHF1ZXJ5S2V5LCBvcHRpb25zKSB7XG4gIGNvbnN0IGhhc2hGbiA9IChvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnF1ZXJ5S2V5SGFzaEZuKSB8fCBoYXNoUXVlcnlLZXk7XG4gIHJldHVybiBoYXNoRm4ocXVlcnlLZXkpO1xufVxuLyoqXG4gKiBEZWZhdWx0IHF1ZXJ5IGtleXMgaGFzaCBmdW5jdGlvbi5cbiAqIEhhc2hlcyB0aGUgdmFsdWUgaW50byBhIHN0YWJsZSBoYXNoLlxuICovXG5cbmZ1bmN0aW9uIGhhc2hRdWVyeUtleShxdWVyeUtleSkge1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocXVlcnlLZXksIChfLCB2YWwpID0+IGlzUGxhaW5PYmplY3QodmFsKSA/IE9iamVjdC5rZXlzKHZhbCkuc29ydCgpLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHtcbiAgICByZXN1bHRba2V5XSA9IHZhbFtrZXldO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIHt9KSA6IHZhbCk7XG59XG4vKipcbiAqIENoZWNrcyBpZiBrZXkgYGJgIHBhcnRpYWxseSBtYXRjaGVzIHdpdGgga2V5IGBhYC5cbiAqL1xuXG5mdW5jdGlvbiBwYXJ0aWFsTWF0Y2hLZXkoYSwgYikge1xuICByZXR1cm4gcGFydGlhbERlZXBFcXVhbChhLCBiKTtcbn1cbi8qKlxuICogQ2hlY2tzIGlmIGBiYCBwYXJ0aWFsbHkgbWF0Y2hlcyB3aXRoIGBhYC5cbiAqL1xuXG5mdW5jdGlvbiBwYXJ0aWFsRGVlcEVxdWFsKGEsIGIpIHtcbiAgaWYgKGEgPT09IGIpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYSAhPT0gdHlwZW9mIGIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09PSAnb2JqZWN0JyAmJiB0eXBlb2YgYiA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gIU9iamVjdC5rZXlzKGIpLnNvbWUoa2V5ID0+ICFwYXJ0aWFsRGVlcEVxdWFsKGFba2V5XSwgYltrZXldKSk7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBgYWAgaWYgYGJgIGlzIGRlZXBseSBlcXVhbC5cbiAqIElmIG5vdCwgaXQgd2lsbCByZXBsYWNlIGFueSBkZWVwbHkgZXF1YWwgY2hpbGRyZW4gb2YgYGJgIHdpdGggdGhvc2Ugb2YgYGFgLlxuICogVGhpcyBjYW4gYmUgdXNlZCBmb3Igc3RydWN0dXJhbCBzaGFyaW5nIGJldHdlZW4gSlNPTiB2YWx1ZXMgZm9yIGV4YW1wbGUuXG4gKi9cblxuZnVuY3Rpb24gcmVwbGFjZUVxdWFsRGVlcChhLCBiKSB7XG4gIGlmIChhID09PSBiKSB7XG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICBjb25zdCBhcnJheSA9IGlzUGxhaW5BcnJheShhKSAmJiBpc1BsYWluQXJyYXkoYik7XG5cbiAgaWYgKGFycmF5IHx8IGlzUGxhaW5PYmplY3QoYSkgJiYgaXNQbGFpbk9iamVjdChiKSkge1xuICAgIGNvbnN0IGFTaXplID0gYXJyYXkgPyBhLmxlbmd0aCA6IE9iamVjdC5rZXlzKGEpLmxlbmd0aDtcbiAgICBjb25zdCBiSXRlbXMgPSBhcnJheSA/IGIgOiBPYmplY3Qua2V5cyhiKTtcbiAgICBjb25zdCBiU2l6ZSA9IGJJdGVtcy5sZW5ndGg7XG4gICAgY29uc3QgY29weSA9IGFycmF5ID8gW10gOiB7fTtcbiAgICBsZXQgZXF1YWxJdGVtcyA9IDA7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJTaXplOyBpKyspIHtcbiAgICAgIGNvbnN0IGtleSA9IGFycmF5ID8gaSA6IGJJdGVtc1tpXTtcbiAgICAgIGNvcHlba2V5XSA9IHJlcGxhY2VFcXVhbERlZXAoYVtrZXldLCBiW2tleV0pO1xuXG4gICAgICBpZiAoY29weVtrZXldID09PSBhW2tleV0pIHtcbiAgICAgICAgZXF1YWxJdGVtcysrO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBhU2l6ZSA9PT0gYlNpemUgJiYgZXF1YWxJdGVtcyA9PT0gYVNpemUgPyBhIDogY29weTtcbiAgfVxuXG4gIHJldHVybiBiO1xufVxuLyoqXG4gKiBTaGFsbG93IGNvbXBhcmUgb2JqZWN0cy4gT25seSB3b3JrcyB3aXRoIG9iamVjdHMgdGhhdCBhbHdheXMgaGF2ZSB0aGUgc2FtZSBwcm9wZXJ0aWVzLlxuICovXG5cbmZ1bmN0aW9uIHNoYWxsb3dFcXVhbE9iamVjdHMoYSwgYikge1xuICBpZiAoYSAmJiAhYiB8fCBiICYmICFhKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yIChjb25zdCBrZXkgaW4gYSkge1xuICAgIGlmIChhW2tleV0gIT09IGJba2V5XSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuZnVuY3Rpb24gaXNQbGFpbkFycmF5KHZhbHVlKSB7XG4gIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlKSAmJiB2YWx1ZS5sZW5ndGggPT09IE9iamVjdC5rZXlzKHZhbHVlKS5sZW5ndGg7XG59IC8vIENvcGllZCBmcm9tOiBodHRwczovL2dpdGh1Yi5jb20vam9uc2NobGlua2VydC9pcy1wbGFpbi1vYmplY3RcblxuZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvKSB7XG4gIGlmICghaGFzT2JqZWN0UHJvdG90eXBlKG8pKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IC8vIElmIGhhcyBtb2RpZmllZCBjb25zdHJ1Y3RvclxuXG5cbiAgY29uc3QgY3RvciA9IG8uY29uc3RydWN0b3I7XG5cbiAgaWYgKHR5cGVvZiBjdG9yID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiB0cnVlO1xuICB9IC8vIElmIGhhcyBtb2RpZmllZCBwcm90b3R5cGVcblxuXG4gIGNvbnN0IHByb3QgPSBjdG9yLnByb3RvdHlwZTtcblxuICBpZiAoIWhhc09iamVjdFByb3RvdHlwZShwcm90KSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSAvLyBJZiBjb25zdHJ1Y3RvciBkb2VzIG5vdCBoYXZlIGFuIE9iamVjdC1zcGVjaWZpYyBtZXRob2RcblxuXG4gIGlmICghcHJvdC5oYXNPd25Qcm9wZXJ0eSgnaXNQcm90b3R5cGVPZicpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9IC8vIE1vc3QgbGlrZWx5IGEgcGxhaW4gT2JqZWN0XG5cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZnVuY3Rpb24gaGFzT2JqZWN0UHJvdG90eXBlKG8pIHtcbiAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKSA9PT0gJ1tvYmplY3QgT2JqZWN0XSc7XG59XG5cbmZ1bmN0aW9uIGlzUXVlcnlLZXkodmFsdWUpIHtcbiAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpO1xufVxuZnVuY3Rpb24gaXNFcnJvcih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBFcnJvcjtcbn1cbmZ1bmN0aW9uIHNsZWVwKHRpbWVvdXQpIHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgIHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZW91dCk7XG4gIH0pO1xufVxuLyoqXG4gKiBTY2hlZHVsZXMgYSBtaWNyb3Rhc2suXG4gKiBUaGlzIGNhbiBiZSB1c2VmdWwgdG8gc2NoZWR1bGUgc3RhdGUgdXBkYXRlcyBhZnRlciByZW5kZXJpbmcuXG4gKi9cblxuZnVuY3Rpb24gc2NoZWR1bGVNaWNyb3Rhc2soY2FsbGJhY2spIHtcbiAgc2xlZXAoMCkudGhlbihjYWxsYmFjayk7XG59XG5mdW5jdGlvbiBnZXRBYm9ydENvbnRyb2xsZXIoKSB7XG4gIGlmICh0eXBlb2YgQWJvcnRDb250cm9sbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgcmV0dXJuIG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgfVxuXG4gIHJldHVybjtcbn1cbmZ1bmN0aW9uIHJlcGxhY2VEYXRhKHByZXZEYXRhLCBkYXRhLCBvcHRpb25zKSB7XG4gIC8vIFVzZSBwcmV2IGRhdGEgaWYgYW4gaXNEYXRhRXF1YWwgZnVuY3Rpb24gaXMgZGVmaW5lZCBhbmQgcmV0dXJucyBgdHJ1ZWBcbiAgaWYgKG9wdGlvbnMuaXNEYXRhRXF1YWwgIT0gbnVsbCAmJiBvcHRpb25zLmlzRGF0YUVxdWFsKHByZXZEYXRhLCBkYXRhKSkge1xuICAgIHJldHVybiBwcmV2RGF0YTtcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5zdHJ1Y3R1cmFsU2hhcmluZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiBvcHRpb25zLnN0cnVjdHVyYWxTaGFyaW5nKHByZXZEYXRhLCBkYXRhKTtcbiAgfSBlbHNlIGlmIChvcHRpb25zLnN0cnVjdHVyYWxTaGFyaW5nICE9PSBmYWxzZSkge1xuICAgIC8vIFN0cnVjdHVyYWxseSBzaGFyZSBkYXRhIGJldHdlZW4gcHJldiBhbmQgbmV3IGRhdGEgaWYgbmVlZGVkXG4gICAgcmV0dXJuIHJlcGxhY2VFcXVhbERlZXAocHJldkRhdGEsIGRhdGEpO1xuICB9XG5cbiAgcmV0dXJuIGRhdGE7XG59XG5cbmV4cG9ydCB7IGRpZmZlcmVuY2UsIGZ1bmN0aW9uYWxVcGRhdGUsIGdldEFib3J0Q29udHJvbGxlciwgaGFzaFF1ZXJ5S2V5LCBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIGlzRXJyb3IsIGlzUGxhaW5BcnJheSwgaXNQbGFpbk9iamVjdCwgaXNRdWVyeUtleSwgaXNTZXJ2ZXIsIGlzVmFsaWRUaW1lb3V0LCBtYXRjaE11dGF0aW9uLCBtYXRjaFF1ZXJ5LCBub29wLCBwYXJzZUZpbHRlckFyZ3MsIHBhcnNlTXV0YXRpb25BcmdzLCBwYXJzZU11dGF0aW9uRmlsdGVyQXJncywgcGFyc2VRdWVyeUFyZ3MsIHBhcnRpYWxEZWVwRXF1YWwsIHBhcnRpYWxNYXRjaEtleSwgcmVwbGFjZUF0LCByZXBsYWNlRGF0YSwgcmVwbGFjZUVxdWFsRGVlcCwgc2NoZWR1bGVNaWNyb3Rhc2ssIHNoYWxsb3dFcXVhbE9iamVjdHMsIHNsZWVwLCB0aW1lVW50aWxTdGFsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMubWpzLm1hcFxuIiwiY29uc3QgZGVmYXVsdExvZ2dlciA9IGNvbnNvbGU7XG5cbmV4cG9ydCB7IGRlZmF1bHRMb2dnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5tanMubWFwXG4iLCJpbXBvcnQgeyBzY2hlZHVsZU1pY3JvdGFzayB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuZnVuY3Rpb24gY3JlYXRlTm90aWZ5TWFuYWdlcigpIHtcbiAgbGV0IHF1ZXVlID0gW107XG4gIGxldCB0cmFuc2FjdGlvbnMgPSAwO1xuXG4gIGxldCBub3RpZnlGbiA9IGNhbGxiYWNrID0+IHtcbiAgICBjYWxsYmFjaygpO1xuICB9O1xuXG4gIGxldCBiYXRjaE5vdGlmeUZuID0gY2FsbGJhY2sgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG5cbiAgY29uc3QgYmF0Y2ggPSBjYWxsYmFjayA9PiB7XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cmFuc2FjdGlvbnMrKztcblxuICAgIHRyeSB7XG4gICAgICByZXN1bHQgPSBjYWxsYmFjaygpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cmFuc2FjdGlvbnMtLTtcblxuICAgICAgaWYgKCF0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgZmx1c2goKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIGNvbnN0IHNjaGVkdWxlID0gY2FsbGJhY2sgPT4ge1xuICAgIGlmICh0cmFuc2FjdGlvbnMpIHtcbiAgICAgIHF1ZXVlLnB1c2goY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIG5vdGlmeUZuKGNhbGxiYWNrKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfTtcbiAgLyoqXG4gICAqIEFsbCBjYWxscyB0byB0aGUgd3JhcHBlZCBmdW5jdGlvbiB3aWxsIGJlIGJhdGNoZWQuXG4gICAqL1xuXG5cbiAgY29uc3QgYmF0Y2hDYWxscyA9IGNhbGxiYWNrID0+IHtcbiAgICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICAgIHNjaGVkdWxlKCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2soLi4uYXJncyk7XG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xuXG4gIGNvbnN0IGZsdXNoID0gKCkgPT4ge1xuICAgIGNvbnN0IG9yaWdpbmFsUXVldWUgPSBxdWV1ZTtcbiAgICBxdWV1ZSA9IFtdO1xuXG4gICAgaWYgKG9yaWdpbmFsUXVldWUubGVuZ3RoKSB7XG4gICAgICBzY2hlZHVsZU1pY3JvdGFzaygoKSA9PiB7XG4gICAgICAgIGJhdGNoTm90aWZ5Rm4oKCkgPT4ge1xuICAgICAgICAgIG9yaWdpbmFsUXVldWUuZm9yRWFjaChjYWxsYmFjayA9PiB7XG4gICAgICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBub3RpZnkgZnVuY3Rpb24uXG4gICAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZm9yIGV4YW1wbGUgd3JhcCBub3RpZmljYXRpb25zIHdpdGggYFJlYWN0LmFjdGAgd2hpbGUgcnVubmluZyB0ZXN0cy5cbiAgICovXG5cblxuICBjb25zdCBzZXROb3RpZnlGdW5jdGlvbiA9IGZuID0+IHtcbiAgICBub3RpZnlGbiA9IGZuO1xuICB9O1xuICAvKipcbiAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBmdW5jdGlvbiB0byBiYXRjaCBub3RpZmljYXRpb25zIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgdGljay5cbiAgICogQnkgZGVmYXVsdCBSZWFjdCBRdWVyeSB3aWxsIHVzZSB0aGUgYmF0Y2ggZnVuY3Rpb24gcHJvdmlkZWQgYnkgUmVhY3RET00gb3IgUmVhY3QgTmF0aXZlLlxuICAgKi9cblxuXG4gIGNvbnN0IHNldEJhdGNoTm90aWZ5RnVuY3Rpb24gPSBmbiA9PiB7XG4gICAgYmF0Y2hOb3RpZnlGbiA9IGZuO1xuICB9O1xuXG4gIHJldHVybiB7XG4gICAgYmF0Y2gsXG4gICAgYmF0Y2hDYWxscyxcbiAgICBzY2hlZHVsZSxcbiAgICBzZXROb3RpZnlGdW5jdGlvbixcbiAgICBzZXRCYXRjaE5vdGlmeUZ1bmN0aW9uXG4gIH07XG59IC8vIFNJTkdMRVRPTlxuXG5jb25zdCBub3RpZnlNYW5hZ2VyID0gY3JlYXRlTm90aWZ5TWFuYWdlcigpO1xuXG5leHBvcnQgeyBjcmVhdGVOb3RpZnlNYW5hZ2VyLCBub3RpZnlNYW5hZ2VyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3RpZnlNYW5hZ2VyLm1qcy5tYXBcbiIsImNsYXNzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gbmV3IFNldCgpO1xuICAgIHRoaXMuc3Vic2NyaWJlID0gdGhpcy5zdWJzY3JpYmUuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgIGNvbnN0IGlkZW50aXR5ID0ge1xuICAgICAgbGlzdGVuZXJcbiAgICB9O1xuICAgIHRoaXMubGlzdGVuZXJzLmFkZChpZGVudGl0eSk7XG4gICAgdGhpcy5vblN1YnNjcmliZSgpO1xuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICB0aGlzLmxpc3RlbmVycy5kZWxldGUoaWRlbnRpdHkpO1xuICAgICAgdGhpcy5vblVuc3Vic2NyaWJlKCk7XG4gICAgfTtcbiAgfVxuXG4gIGhhc0xpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZSA+IDA7XG4gIH1cblxuICBvblN1YnNjcmliZSgpIHsvLyBEbyBub3RoaW5nXG4gIH1cblxuICBvblVuc3Vic2NyaWJlKCkgey8vIERvIG5vdGhpbmdcbiAgfVxuXG59XG5cbmV4cG9ydCB7IFN1YnNjcmliYWJsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3Vic2NyaWJhYmxlLm1qcy5tYXBcbiIsImltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gJy4vc3Vic2NyaWJhYmxlLm1qcyc7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gJy4vdXRpbHMubWpzJztcblxuY2xhc3MgRm9jdXNNYW5hZ2VyIGV4dGVuZHMgU3Vic2NyaWJhYmxlIHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcblxuICAgIHRoaXMuc2V0dXAgPSBvbkZvY3VzID0+IHtcbiAgICAgIC8vIGFkZEV2ZW50TGlzdGVuZXIgZG9lcyBub3QgZXhpc3QgaW4gUmVhY3QgTmF0aXZlLCBidXQgd2luZG93IGRvZXNcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uXG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25Gb2N1cygpOyAvLyBMaXN0ZW4gdG8gdmlzaWJpbGxpdHljaGFuZ2UgYW5kIGZvY3VzXG5cblxuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGxpc3RlbmVyLCBmYWxzZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgLy8gQmUgc3VyZSB0byB1bnN1YnNjcmliZSBpZiBhIG5ldyBoYW5kbGVyIGlzIHNldFxuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd2aXNpYmlsaXR5Y2hhbmdlJywgbGlzdGVuZXIpO1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdmb2N1cycsIGxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cblxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuc2V0dXApO1xuICAgIH1cbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB2YXIgX3RoaXMkY2xlYW51cDtcblxuICAgICAgKF90aGlzJGNsZWFudXAgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLmNsZWFudXAgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHZhciBfdGhpcyRjbGVhbnVwMjtcblxuICAgIHRoaXMuc2V0dXAgPSBzZXR1cDtcbiAgICAoX3RoaXMkY2xlYW51cDIgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwMi5jYWxsKHRoaXMpO1xuICAgIHRoaXMuY2xlYW51cCA9IHNldHVwKGZvY3VzZWQgPT4ge1xuICAgICAgaWYgKHR5cGVvZiBmb2N1c2VkID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzZXRGb2N1c2VkKGZvY3VzZWQpIHtcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy5mb2N1c2VkICE9PSBmb2N1c2VkO1xuXG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuZm9jdXNlZCA9IGZvY3VzZWQ7XG4gICAgICB0aGlzLm9uRm9jdXMoKTtcbiAgICB9XG4gIH1cblxuICBvbkZvY3VzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgIGxpc3RlbmVyXG4gICAgfSkgPT4ge1xuICAgICAgbGlzdGVuZXIoKTtcbiAgICB9KTtcbiAgfVxuXG4gIGlzRm9jdXNlZCgpIHtcbiAgICBpZiAodHlwZW9mIHRoaXMuZm9jdXNlZCA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gdGhpcy5mb2N1c2VkO1xuICAgIH0gLy8gZG9jdW1lbnQgZ2xvYmFsIGNhbiBiZSB1bmF2YWlsYWJsZSBpbiByZWFjdCBuYXRpdmVcblxuXG4gICAgaWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiBbdW5kZWZpbmVkLCAndmlzaWJsZScsICdwcmVyZW5kZXInXS5pbmNsdWRlcyhkb2N1bWVudC52aXNpYmlsaXR5U3RhdGUpO1xuICB9XG5cbn1cbmNvbnN0IGZvY3VzTWFuYWdlciA9IG5ldyBGb2N1c01hbmFnZXIoKTtcblxuZXhwb3J0IHsgRm9jdXNNYW5hZ2VyLCBmb2N1c01hbmFnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZvY3VzTWFuYWdlci5tanMubWFwXG4iLCJpbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tICcuL3N1YnNjcmliYWJsZS5tanMnO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmNvbnN0IG9ubGluZUV2ZW50cyA9IFsnb25saW5lJywgJ29mZmxpbmUnXTtcbmNsYXNzIE9ubGluZU1hbmFnZXIgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgdGhpcy5zZXR1cCA9IG9uT25saW5lID0+IHtcbiAgICAgIC8vIGFkZEV2ZW50TGlzdGVuZXIgZG9lcyBub3QgZXhpc3QgaW4gUmVhY3QgTmF0aXZlLCBidXQgd2luZG93IGRvZXNcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uXG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUoKTsgLy8gTGlzdGVuIHRvIG9ubGluZVxuXG5cbiAgICAgICAgb25saW5lRXZlbnRzLmZvckVhY2goZXZlbnQgPT4ge1xuICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKGV2ZW50LCBsaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAvLyBCZSBzdXJlIHRvIHVuc3Vic2NyaWJlIGlmIGEgbmV3IGhhbmRsZXIgaXMgc2V0XG4gICAgICAgICAgb25saW5lRXZlbnRzLmZvckVhY2goZXZlbnQgPT4ge1xuICAgICAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnQsIGxpc3RlbmVyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cblxuICBvblN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuc2V0dXApO1xuICAgIH1cbiAgfVxuXG4gIG9uVW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLmhhc0xpc3RlbmVycygpKSB7XG4gICAgICB2YXIgX3RoaXMkY2xlYW51cDtcblxuICAgICAgKF90aGlzJGNsZWFudXAgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwLmNhbGwodGhpcyk7XG4gICAgICB0aGlzLmNsZWFudXAgPSB1bmRlZmluZWQ7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHZhciBfdGhpcyRjbGVhbnVwMjtcblxuICAgIHRoaXMuc2V0dXAgPSBzZXR1cDtcbiAgICAoX3RoaXMkY2xlYW51cDIgPSB0aGlzLmNsZWFudXApID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjbGVhbnVwMi5jYWxsKHRoaXMpO1xuICAgIHRoaXMuY2xlYW51cCA9IHNldHVwKG9ubGluZSA9PiB7XG4gICAgICBpZiAodHlwZW9mIG9ubGluZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHRoaXMuc2V0T25saW5lKG9ubGluZSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLm9uT25saW5lKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBzZXRPbmxpbmUob25saW5lKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMub25saW5lICE9PSBvbmxpbmU7XG5cbiAgICBpZiAoY2hhbmdlZCkge1xuICAgICAgdGhpcy5vbmxpbmUgPSBvbmxpbmU7XG4gICAgICB0aGlzLm9uT25saW5lKCk7XG4gICAgfVxuICB9XG5cbiAgb25PbmxpbmUoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgbGlzdGVuZXJcbiAgICB9KSA9PiB7XG4gICAgICBsaXN0ZW5lcigpO1xuICAgIH0pO1xuICB9XG5cbiAgaXNPbmxpbmUoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLm9ubGluZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gdGhpcy5vbmxpbmU7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBuYXZpZ2F0b3Iub25MaW5lID09PSAndW5kZWZpbmVkJykge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5hdmlnYXRvci5vbkxpbmU7XG4gIH1cblxufVxuY29uc3Qgb25saW5lTWFuYWdlciA9IG5ldyBPbmxpbmVNYW5hZ2VyKCk7XG5cbmV4cG9ydCB7IE9ubGluZU1hbmFnZXIsIG9ubGluZU1hbmFnZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9ubGluZU1hbmFnZXIubWpzLm1hcFxuIiwiaW1wb3J0IHsgZm9jdXNNYW5hZ2VyIH0gZnJvbSAnLi9mb2N1c01hbmFnZXIubWpzJztcbmltcG9ydCB7IG9ubGluZU1hbmFnZXIgfSBmcm9tICcuL29ubGluZU1hbmFnZXIubWpzJztcbmltcG9ydCB7IHNsZWVwIH0gZnJvbSAnLi91dGlscy5tanMnO1xuXG5mdW5jdGlvbiBkZWZhdWx0UmV0cnlEZWxheShmYWlsdXJlQ291bnQpIHtcbiAgcmV0dXJuIE1hdGgubWluKDEwMDAgKiAyICoqIGZhaWx1cmVDb3VudCwgMzAwMDApO1xufVxuXG5mdW5jdGlvbiBjYW5GZXRjaChuZXR3b3JrTW9kZSkge1xuICByZXR1cm4gKG5ldHdvcmtNb2RlICE9IG51bGwgPyBuZXR3b3JrTW9kZSA6ICdvbmxpbmUnKSA9PT0gJ29ubGluZScgPyBvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkgOiB0cnVlO1xufVxuY2xhc3MgQ2FuY2VsbGVkRXJyb3Ige1xuICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgdGhpcy5yZXZlcnQgPSBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnJldmVydDtcbiAgICB0aGlzLnNpbGVudCA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuc2lsZW50O1xuICB9XG5cbn1cbmZ1bmN0aW9uIGlzQ2FuY2VsbGVkRXJyb3IodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgQ2FuY2VsbGVkRXJyb3I7XG59XG5mdW5jdGlvbiBjcmVhdGVSZXRyeWVyKGNvbmZpZykge1xuICBsZXQgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICBsZXQgZmFpbHVyZUNvdW50ID0gMDtcbiAgbGV0IGlzUmVzb2x2ZWQgPSBmYWxzZTtcbiAgbGV0IGNvbnRpbnVlRm47XG4gIGxldCBwcm9taXNlUmVzb2x2ZTtcbiAgbGV0IHByb21pc2VSZWplY3Q7XG4gIGNvbnN0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgob3V0ZXJSZXNvbHZlLCBvdXRlclJlamVjdCkgPT4ge1xuICAgIHByb21pc2VSZXNvbHZlID0gb3V0ZXJSZXNvbHZlO1xuICAgIHByb21pc2VSZWplY3QgPSBvdXRlclJlamVjdDtcbiAgfSk7XG5cbiAgY29uc3QgY2FuY2VsID0gY2FuY2VsT3B0aW9ucyA9PiB7XG4gICAgaWYgKCFpc1Jlc29sdmVkKSB7XG4gICAgICByZWplY3QobmV3IENhbmNlbGxlZEVycm9yKGNhbmNlbE9wdGlvbnMpKTtcbiAgICAgIGNvbmZpZy5hYm9ydCA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLmFib3J0KCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGNhbmNlbFJldHJ5ID0gKCkgPT4ge1xuICAgIGlzUmV0cnlDYW5jZWxsZWQgPSB0cnVlO1xuICB9O1xuXG4gIGNvbnN0IGNvbnRpbnVlUmV0cnkgPSAoKSA9PiB7XG4gICAgaXNSZXRyeUNhbmNlbGxlZCA9IGZhbHNlO1xuICB9O1xuXG4gIGNvbnN0IHNob3VsZFBhdXNlID0gKCkgPT4gIWZvY3VzTWFuYWdlci5pc0ZvY3VzZWQoKSB8fCBjb25maWcubmV0d29ya01vZGUgIT09ICdhbHdheXMnICYmICFvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCk7XG5cbiAgY29uc3QgcmVzb2x2ZSA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uU3VjY2VzcyA9PSBudWxsID8gdm9pZCAwIDogY29uZmlnLm9uU3VjY2Vzcyh2YWx1ZSk7XG4gICAgICBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICBwcm9taXNlUmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IHJlamVjdCA9IHZhbHVlID0+IHtcbiAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgIGlzUmVzb2x2ZWQgPSB0cnVlO1xuICAgICAgY29uZmlnLm9uRXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkVycm9yKHZhbHVlKTtcbiAgICAgIGNvbnRpbnVlRm4gPT0gbnVsbCA/IHZvaWQgMCA6IGNvbnRpbnVlRm4oKTtcbiAgICAgIHByb21pc2VSZWplY3QodmFsdWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBwYXVzZSA9ICgpID0+IHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoY29udGludWVSZXNvbHZlID0+IHtcbiAgICAgIGNvbnRpbnVlRm4gPSB2YWx1ZSA9PiB7XG4gICAgICAgIGNvbnN0IGNhbkNvbnRpbnVlID0gaXNSZXNvbHZlZCB8fCAhc2hvdWxkUGF1c2UoKTtcblxuICAgICAgICBpZiAoY2FuQ29udGludWUpIHtcbiAgICAgICAgICBjb250aW51ZVJlc29sdmUodmFsdWUpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGNhbkNvbnRpbnVlO1xuICAgICAgfTtcblxuICAgICAgY29uZmlnLm9uUGF1c2UgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vblBhdXNlKCk7XG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICBjb250aW51ZUZuID0gdW5kZWZpbmVkO1xuXG4gICAgICBpZiAoIWlzUmVzb2x2ZWQpIHtcbiAgICAgICAgY29uZmlnLm9uQ29udGludWUgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkNvbnRpbnVlKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07IC8vIENyZWF0ZSBsb29wIGZ1bmN0aW9uXG5cblxuICBjb25zdCBydW4gPSAoKSA9PiB7XG4gICAgLy8gRG8gbm90aGluZyBpZiBhbHJlYWR5IHJlc29sdmVkXG4gICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcHJvbWlzZU9yVmFsdWU7IC8vIEV4ZWN1dGUgcXVlcnlcblxuICAgIHRyeSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IGNvbmZpZy5mbigpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBwcm9taXNlT3JWYWx1ZSA9IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICB9XG5cbiAgICBQcm9taXNlLnJlc29sdmUocHJvbWlzZU9yVmFsdWUpLnRoZW4ocmVzb2x2ZSkuY2F0Y2goZXJyb3IgPT4ge1xuICAgICAgdmFyIF9jb25maWckcmV0cnksIF9jb25maWckcmV0cnlEZWxheTtcblxuICAgICAgLy8gU3RvcCBpZiB0aGUgZmV0Y2ggaXMgYWxyZWFkeSByZXNvbHZlZFxuICAgICAgaWYgKGlzUmVzb2x2ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBEbyB3ZSBuZWVkIHRvIHJldHJ5IHRoZSByZXF1ZXN0P1xuXG5cbiAgICAgIGNvbnN0IHJldHJ5ID0gKF9jb25maWckcmV0cnkgPSBjb25maWcucmV0cnkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5IDogMztcbiAgICAgIGNvbnN0IHJldHJ5RGVsYXkgPSAoX2NvbmZpZyRyZXRyeURlbGF5ID0gY29uZmlnLnJldHJ5RGVsYXkpICE9IG51bGwgPyBfY29uZmlnJHJldHJ5RGVsYXkgOiBkZWZhdWx0UmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IGRlbGF5ID0gdHlwZW9mIHJldHJ5RGVsYXkgPT09ICdmdW5jdGlvbicgPyByZXRyeURlbGF5KGZhaWx1cmVDb3VudCwgZXJyb3IpIDogcmV0cnlEZWxheTtcbiAgICAgIGNvbnN0IHNob3VsZFJldHJ5ID0gcmV0cnkgPT09IHRydWUgfHwgdHlwZW9mIHJldHJ5ID09PSAnbnVtYmVyJyAmJiBmYWlsdXJlQ291bnQgPCByZXRyeSB8fCB0eXBlb2YgcmV0cnkgPT09ICdmdW5jdGlvbicgJiYgcmV0cnkoZmFpbHVyZUNvdW50LCBlcnJvcik7XG5cbiAgICAgIGlmIChpc1JldHJ5Q2FuY2VsbGVkIHx8ICFzaG91bGRSZXRyeSkge1xuICAgICAgICAvLyBXZSBhcmUgZG9uZSBpZiB0aGUgcXVlcnkgZG9lcyBub3QgbmVlZCB0byBiZSByZXRyaWVkXG4gICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgZmFpbHVyZUNvdW50Kys7IC8vIE5vdGlmeSBvbiBmYWlsXG5cbiAgICAgIGNvbmZpZy5vbkZhaWwgPT0gbnVsbCA/IHZvaWQgMCA6IGNvbmZpZy5vbkZhaWwoZmFpbHVyZUNvdW50LCBlcnJvcik7IC8vIERlbGF5XG5cbiAgICAgIHNsZWVwKGRlbGF5KSAvLyBQYXVzZSBpZiB0aGUgZG9jdW1lbnQgaXMgbm90IHZpc2libGUgb3Igd2hlbiB0aGUgZGV2aWNlIGlzIG9mZmxpbmVcbiAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgaWYgKHNob3VsZFBhdXNlKCkpIHtcbiAgICAgICAgICByZXR1cm4gcGF1c2UoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybjtcbiAgICAgIH0pLnRoZW4oKCkgPT4ge1xuICAgICAgICBpZiAoaXNSZXRyeUNhbmNlbGxlZCkge1xuICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcnVuKCk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9OyAvLyBTdGFydCBsb29wXG5cblxuICBpZiAoY2FuRmV0Y2goY29uZmlnLm5ldHdvcmtNb2RlKSkge1xuICAgIHJ1bigpO1xuICB9IGVsc2Uge1xuICAgIHBhdXNlKCkudGhlbihydW4pO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9taXNlLFxuICAgIGNhbmNlbCxcbiAgICBjb250aW51ZTogKCkgPT4ge1xuICAgICAgY29uc3QgZGlkQ29udGludWUgPSBjb250aW51ZUZuID09IG51bGwgPyB2b2lkIDAgOiBjb250aW51ZUZuKCk7XG4gICAgICByZXR1cm4gZGlkQ29udGludWUgPyBwcm9taXNlIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfSxcbiAgICBjYW5jZWxSZXRyeSxcbiAgICBjb250aW51ZVJldHJ5XG4gIH07XG59XG5cbmV4cG9ydCB7IENhbmNlbGxlZEVycm9yLCBjYW5GZXRjaCwgY3JlYXRlUmV0cnllciwgaXNDYW5jZWxsZWRFcnJvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmV0cnllci5tanMubWFwXG4iLCJpbXBvcnQgeyBpc1ZhbGlkVGltZW91dCwgaXNTZXJ2ZXIgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5cbmNsYXNzIFJlbW92YWJsZSB7XG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5jbGVhckdjVGltZW91dCgpO1xuICB9XG5cbiAgc2NoZWR1bGVHYygpIHtcbiAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG5cbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5jYWNoZVRpbWUpKSB7XG4gICAgICB0aGlzLmdjVGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLm9wdGlvbmFsUmVtb3ZlKCk7XG4gICAgICB9LCB0aGlzLmNhY2hlVGltZSk7XG4gICAgfVxuICB9XG5cbiAgdXBkYXRlQ2FjaGVUaW1lKG5ld0NhY2hlVGltZSkge1xuICAgIC8vIERlZmF1bHQgdG8gNSBtaW51dGVzIChJbmZpbml0eSBmb3Igc2VydmVyLXNpZGUpIGlmIG5vIGNhY2hlIHRpbWUgaXMgc2V0XG4gICAgdGhpcy5jYWNoZVRpbWUgPSBNYXRoLm1heCh0aGlzLmNhY2hlVGltZSB8fCAwLCBuZXdDYWNoZVRpbWUgIT0gbnVsbCA/IG5ld0NhY2hlVGltZSA6IGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxMDAwKTtcbiAgfVxuXG4gIGNsZWFyR2NUaW1lb3V0KCkge1xuICAgIGlmICh0aGlzLmdjVGltZW91dCkge1xuICAgICAgY2xlYXJUaW1lb3V0KHRoaXMuZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuZ2NUaW1lb3V0ID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfVxuXG59XG5cbmV4cG9ydCB7IFJlbW92YWJsZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZhYmxlLm1qcy5tYXBcbiIsImltcG9ydCB7IHJlcGxhY2VEYXRhLCBub29wLCB0aW1lVW50aWxTdGFsZSwgZ2V0QWJvcnRDb250cm9sbGVyIH0gZnJvbSAnLi91dGlscy5tanMnO1xuaW1wb3J0IHsgZGVmYXVsdExvZ2dlciB9IGZyb20gJy4vbG9nZ2VyLm1qcyc7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBjcmVhdGVSZXRyeWVyLCBpc0NhbmNlbGxlZEVycm9yLCBjYW5GZXRjaCB9IGZyb20gJy4vcmV0cnllci5tanMnO1xuaW1wb3J0IHsgUmVtb3ZhYmxlIH0gZnJvbSAnLi9yZW1vdmFibGUubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIFF1ZXJ5IGV4dGVuZHMgUmVtb3ZhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmFib3J0U2lnbmFsQ29uc3VtZWQgPSBmYWxzZTtcbiAgICB0aGlzLmRlZmF1bHRPcHRpb25zID0gY29uZmlnLmRlZmF1bHRPcHRpb25zO1xuICAgIHRoaXMuc2V0T3B0aW9ucyhjb25maWcub3B0aW9ucyk7XG4gICAgdGhpcy5vYnNlcnZlcnMgPSBbXTtcbiAgICB0aGlzLmNhY2hlID0gY29uZmlnLmNhY2hlO1xuICAgIHRoaXMubG9nZ2VyID0gY29uZmlnLmxvZ2dlciB8fCBkZWZhdWx0TG9nZ2VyO1xuICAgIHRoaXMucXVlcnlLZXkgPSBjb25maWcucXVlcnlLZXk7XG4gICAgdGhpcy5xdWVyeUhhc2ggPSBjb25maWcucXVlcnlIYXNoO1xuICAgIHRoaXMuaW5pdGlhbFN0YXRlID0gY29uZmlnLnN0YXRlIHx8IGdldERlZmF1bHRTdGF0ZSh0aGlzLm9wdGlvbnMpO1xuICAgIHRoaXMuc3RhdGUgPSB0aGlzLmluaXRpYWxTdGF0ZTtcbiAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgfVxuXG4gIGdldCBtZXRhKCkge1xuICAgIHJldHVybiB0aGlzLm9wdGlvbnMubWV0YTtcbiAgfVxuXG4gIHNldE9wdGlvbnMob3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IHsgLi4udGhpcy5kZWZhdWx0T3B0aW9ucyxcbiAgICAgIC4uLm9wdGlvbnNcbiAgICB9O1xuICAgIHRoaXMudXBkYXRlQ2FjaGVUaW1lKHRoaXMub3B0aW9ucy5jYWNoZVRpbWUpO1xuICB9XG5cbiAgb3B0aW9uYWxSZW1vdmUoKSB7XG4gICAgaWYgKCF0aGlzLm9ic2VydmVycy5sZW5ndGggJiYgdGhpcy5zdGF0ZS5mZXRjaFN0YXR1cyA9PT0gJ2lkbGUnKSB7XG4gICAgICB0aGlzLmNhY2hlLnJlbW92ZSh0aGlzKTtcbiAgICB9XG4gIH1cblxuICBzZXREYXRhKG5ld0RhdGEsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBkYXRhID0gcmVwbGFjZURhdGEodGhpcy5zdGF0ZS5kYXRhLCBuZXdEYXRhLCB0aGlzLm9wdGlvbnMpOyAvLyBTZXQgZGF0YSBhbmQgbWFyayBpdCBhcyBjYWNoZWRcblxuICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgZGF0YSxcbiAgICAgIHR5cGU6ICdzdWNjZXNzJyxcbiAgICAgIGRhdGFVcGRhdGVkQXQ6IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMudXBkYXRlZEF0LFxuICAgICAgbWFudWFsOiBvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLm1hbnVhbFxuICAgIH0pO1xuICAgIHJldHVybiBkYXRhO1xuICB9XG5cbiAgc2V0U3RhdGUoc3RhdGUsIHNldFN0YXRlT3B0aW9ucykge1xuICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgdHlwZTogJ3NldFN0YXRlJyxcbiAgICAgIHN0YXRlLFxuICAgICAgc2V0U3RhdGVPcHRpb25zXG4gICAgfSk7XG4gIH1cblxuICBjYW5jZWwob3B0aW9ucykge1xuICAgIHZhciBfdGhpcyRyZXRyeWVyO1xuXG4gICAgY29uc3QgcHJvbWlzZSA9IHRoaXMucHJvbWlzZTtcbiAgICAoX3RoaXMkcmV0cnllciA9IHRoaXMucmV0cnllcikgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJHJldHJ5ZXIuY2FuY2VsKG9wdGlvbnMpO1xuICAgIHJldHVybiBwcm9taXNlID8gcHJvbWlzZS50aGVuKG5vb3ApLmNhdGNoKG5vb3ApIDogUHJvbWlzZS5yZXNvbHZlKCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIHN1cGVyLmRlc3Ryb3koKTtcbiAgICB0aGlzLmNhbmNlbCh7XG4gICAgICBzaWxlbnQ6IHRydWVcbiAgICB9KTtcbiAgfVxuXG4gIHJlc2V0KCkge1xuICAgIHRoaXMuZGVzdHJveSgpO1xuICAgIHRoaXMuc2V0U3RhdGUodGhpcy5pbml0aWFsU3RhdGUpO1xuICB9XG5cbiAgaXNBY3RpdmUoKSB7XG4gICAgcmV0dXJuIHRoaXMub2JzZXJ2ZXJzLnNvbWUob2JzZXJ2ZXIgPT4gb2JzZXJ2ZXIub3B0aW9ucy5lbmFibGVkICE9PSBmYWxzZSk7XG4gIH1cblxuICBpc0Rpc2FibGVkKCkge1xuICAgIHJldHVybiB0aGlzLmdldE9ic2VydmVyc0NvdW50KCkgPiAwICYmICF0aGlzLmlzQWN0aXZlKCk7XG4gIH1cblxuICBpc1N0YWxlKCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmlzSW52YWxpZGF0ZWQgfHwgIXRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCB8fCB0aGlzLm9ic2VydmVycy5zb21lKG9ic2VydmVyID0+IG9ic2VydmVyLmdldEN1cnJlbnRSZXN1bHQoKS5pc1N0YWxlKTtcbiAgfVxuXG4gIGlzU3RhbGVCeVRpbWUoc3RhbGVUaW1lID0gMCkge1xuICAgIHJldHVybiB0aGlzLnN0YXRlLmlzSW52YWxpZGF0ZWQgfHwgIXRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCB8fCAhdGltZVVudGlsU3RhbGUodGhpcy5zdGF0ZS5kYXRhVXBkYXRlZEF0LCBzdGFsZVRpbWUpO1xuICB9XG5cbiAgb25Gb2N1cygpIHtcbiAgICB2YXIgX3RoaXMkcmV0cnllcjI7XG5cbiAgICBjb25zdCBvYnNlcnZlciA9IHRoaXMub2JzZXJ2ZXJzLmZpbmQoeCA9PiB4LnNob3VsZEZldGNoT25XaW5kb3dGb2N1cygpKTtcblxuICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgb2JzZXJ2ZXIucmVmZXRjaCh7XG4gICAgICAgIGNhbmNlbFJlZmV0Y2g6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9IC8vIENvbnRpbnVlIGZldGNoIGlmIGN1cnJlbnRseSBwYXVzZWRcblxuXG4gICAgKF90aGlzJHJldHJ5ZXIyID0gdGhpcy5yZXRyeWVyKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkcmV0cnllcjIuY29udGludWUoKTtcbiAgfVxuXG4gIG9uT25saW5lKCkge1xuICAgIHZhciBfdGhpcyRyZXRyeWVyMztcblxuICAgIGNvbnN0IG9ic2VydmVyID0gdGhpcy5vYnNlcnZlcnMuZmluZCh4ID0+IHguc2hvdWxkRmV0Y2hPblJlY29ubmVjdCgpKTtcblxuICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgb2JzZXJ2ZXIucmVmZXRjaCh7XG4gICAgICAgIGNhbmNlbFJlZmV0Y2g6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9IC8vIENvbnRpbnVlIGZldGNoIGlmIGN1cnJlbnRseSBwYXVzZWRcblxuXG4gICAgKF90aGlzJHJldHJ5ZXIzID0gdGhpcy5yZXRyeWVyKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkcmV0cnllcjMuY29udGludWUoKTtcbiAgfVxuXG4gIGFkZE9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgaWYgKCF0aGlzLm9ic2VydmVycy5pbmNsdWRlcyhvYnNlcnZlcikpIHtcbiAgICAgIHRoaXMub2JzZXJ2ZXJzLnB1c2gob2JzZXJ2ZXIpOyAvLyBTdG9wIHRoZSBxdWVyeSBmcm9tIGJlaW5nIGdhcmJhZ2UgY29sbGVjdGVkXG5cbiAgICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgICAgIHRoaXMuY2FjaGUubm90aWZ5KHtcbiAgICAgICAgdHlwZTogJ29ic2VydmVyQWRkZWQnLFxuICAgICAgICBxdWVyeTogdGhpcyxcbiAgICAgICAgb2JzZXJ2ZXJcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZU9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgaWYgKHRoaXMub2JzZXJ2ZXJzLmluY2x1ZGVzKG9ic2VydmVyKSkge1xuICAgICAgdGhpcy5vYnNlcnZlcnMgPSB0aGlzLm9ic2VydmVycy5maWx0ZXIoeCA9PiB4ICE9PSBvYnNlcnZlcik7XG5cbiAgICAgIGlmICghdGhpcy5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICAgIC8vIElmIHRoZSB0cmFuc3BvcnQgbGF5ZXIgZG9lcyBub3Qgc3VwcG9ydCBjYW5jZWxsYXRpb25cbiAgICAgICAgLy8gd2UnbGwgbGV0IHRoZSBxdWVyeSBjb250aW51ZSBzbyB0aGUgcmVzdWx0IGNhbiBiZSBjYWNoZWRcbiAgICAgICAgaWYgKHRoaXMucmV0cnllcikge1xuICAgICAgICAgIGlmICh0aGlzLmFib3J0U2lnbmFsQ29uc3VtZWQpIHtcbiAgICAgICAgICAgIHRoaXMucmV0cnllci5jYW5jZWwoe1xuICAgICAgICAgICAgICByZXZlcnQ6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJldHJ5ZXIuY2FuY2VsUmV0cnkoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5jYWNoZS5ub3RpZnkoe1xuICAgICAgICB0eXBlOiAnb2JzZXJ2ZXJSZW1vdmVkJyxcbiAgICAgICAgcXVlcnk6IHRoaXMsXG4gICAgICAgIG9ic2VydmVyXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXRPYnNlcnZlcnNDb3VudCgpIHtcbiAgICByZXR1cm4gdGhpcy5vYnNlcnZlcnMubGVuZ3RoO1xuICB9XG5cbiAgaW52YWxpZGF0ZSgpIHtcbiAgICBpZiAoIXRoaXMuc3RhdGUuaXNJbnZhbGlkYXRlZCkge1xuICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgIHR5cGU6ICdpbnZhbGlkYXRlJ1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgZmV0Y2gob3B0aW9ucywgZmV0Y2hPcHRpb25zKSB7XG4gICAgdmFyIF90aGlzJG9wdGlvbnMkYmVoYXZpbywgX2NvbnRleHQkZmV0Y2hPcHRpb25zO1xuXG4gICAgaWYgKHRoaXMuc3RhdGUuZmV0Y2hTdGF0dXMgIT09ICdpZGxlJykge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuZGF0YVVwZGF0ZWRBdCAmJiBmZXRjaE9wdGlvbnMgIT0gbnVsbCAmJiBmZXRjaE9wdGlvbnMuY2FuY2VsUmVmZXRjaCkge1xuICAgICAgICAvLyBTaWxlbnRseSBjYW5jZWwgY3VycmVudCBmZXRjaCBpZiB0aGUgdXNlciB3YW50cyB0byBjYW5jZWwgcmVmZXRjaGVzXG4gICAgICAgIHRoaXMuY2FuY2VsKHtcbiAgICAgICAgICBzaWxlbnQ6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2UgaWYgKHRoaXMucHJvbWlzZSkge1xuICAgICAgICB2YXIgX3RoaXMkcmV0cnllcjQ7XG5cbiAgICAgICAgLy8gbWFrZSBzdXJlIHRoYXQgcmV0cmllcyB0aGF0IHdlcmUgcG90ZW50aWFsbHkgY2FuY2VsbGVkIGR1ZSB0byB1bm1vdW50cyBjYW4gY29udGludWVcbiAgICAgICAgKF90aGlzJHJldHJ5ZXI0ID0gdGhpcy5yZXRyeWVyKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkcmV0cnllcjQuY29udGludWVSZXRyeSgpOyAvLyBSZXR1cm4gY3VycmVudCBwcm9taXNlIGlmIHdlIGFyZSBhbHJlYWR5IGZldGNoaW5nXG5cbiAgICAgICAgcmV0dXJuIHRoaXMucHJvbWlzZTtcbiAgICAgIH1cbiAgICB9IC8vIFVwZGF0ZSBjb25maWcgaWYgcGFzc2VkLCBvdGhlcndpc2UgdGhlIGNvbmZpZyBmcm9tIHRoZSBsYXN0IGV4ZWN1dGlvbiBpcyB1c2VkXG5cblxuICAgIGlmIChvcHRpb25zKSB7XG4gICAgICB0aGlzLnNldE9wdGlvbnMob3B0aW9ucyk7XG4gICAgfSAvLyBVc2UgdGhlIG9wdGlvbnMgZnJvbSB0aGUgZmlyc3Qgb2JzZXJ2ZXIgd2l0aCBhIHF1ZXJ5IGZ1bmN0aW9uIGlmIG5vIGZ1bmN0aW9uIGlzIGZvdW5kLlxuICAgIC8vIFRoaXMgY2FuIGhhcHBlbiB3aGVuIHRoZSBxdWVyeSBpcyBoeWRyYXRlZCBvciBjcmVhdGVkIHdpdGggc2V0UXVlcnlEYXRhLlxuXG5cbiAgICBpZiAoIXRoaXMub3B0aW9ucy5xdWVyeUZuKSB7XG4gICAgICBjb25zdCBvYnNlcnZlciA9IHRoaXMub2JzZXJ2ZXJzLmZpbmQoeCA9PiB4Lm9wdGlvbnMucXVlcnlGbik7XG5cbiAgICAgIGlmIChvYnNlcnZlcikge1xuICAgICAgICB0aGlzLnNldE9wdGlvbnMob2JzZXJ2ZXIub3B0aW9ucyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheSh0aGlzLm9wdGlvbnMucXVlcnlLZXkpKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFwiQXMgb2YgdjQsIHF1ZXJ5S2V5IG5lZWRzIHRvIGJlIGFuIEFycmF5LiBJZiB5b3UgYXJlIHVzaW5nIGEgc3RyaW5nIGxpa2UgJ3JlcG9EYXRhJywgcGxlYXNlIGNoYW5nZSBpdCB0byBhbiBBcnJheSwgZS5nLiBbJ3JlcG9EYXRhJ11cIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgYWJvcnRDb250cm9sbGVyID0gZ2V0QWJvcnRDb250cm9sbGVyKCk7IC8vIENyZWF0ZSBxdWVyeSBmdW5jdGlvbiBjb250ZXh0XG5cbiAgICBjb25zdCBxdWVyeUZuQ29udGV4dCA9IHtcbiAgICAgIHF1ZXJ5S2V5OiB0aGlzLnF1ZXJ5S2V5LFxuICAgICAgcGFnZVBhcmFtOiB1bmRlZmluZWQsXG4gICAgICBtZXRhOiB0aGlzLm1ldGFcbiAgICB9OyAvLyBBZGRzIGFuIGVudW1lcmFibGUgc2lnbmFsIHByb3BlcnR5IHRvIHRoZSBvYmplY3QgdGhhdFxuICAgIC8vIHdoaWNoIHNldHMgYWJvcnRTaWduYWxDb25zdW1lZCB0byB0cnVlIHdoZW4gdGhlIHNpZ25hbFxuICAgIC8vIGlzIHJlYWQuXG5cbiAgICBjb25zdCBhZGRTaWduYWxQcm9wZXJ0eSA9IG9iamVjdCA9PiB7XG4gICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqZWN0LCAnc2lnbmFsJywge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6ICgpID0+IHtcbiAgICAgICAgICBpZiAoYWJvcnRDb250cm9sbGVyKSB7XG4gICAgICAgICAgICB0aGlzLmFib3J0U2lnbmFsQ29uc3VtZWQgPSB0cnVlO1xuICAgICAgICAgICAgcmV0dXJuIGFib3J0Q29udHJvbGxlci5zaWduYWw7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfTtcblxuICAgIGFkZFNpZ25hbFByb3BlcnR5KHF1ZXJ5Rm5Db250ZXh0KTsgLy8gQ3JlYXRlIGZldGNoIGZ1bmN0aW9uXG5cbiAgICBjb25zdCBmZXRjaEZuID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLm9wdGlvbnMucXVlcnlGbikge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoXCJNaXNzaW5nIHF1ZXJ5Rm4gZm9yIHF1ZXJ5S2V5ICdcIiArIHRoaXMub3B0aW9ucy5xdWVyeUhhc2ggKyBcIidcIik7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuYWJvcnRTaWduYWxDb25zdW1lZCA9IGZhbHNlO1xuICAgICAgcmV0dXJuIHRoaXMub3B0aW9ucy5xdWVyeUZuKHF1ZXJ5Rm5Db250ZXh0KTtcbiAgICB9OyAvLyBUcmlnZ2VyIGJlaGF2aW9yIGhvb2tcblxuXG4gICAgY29uc3QgY29udGV4dCA9IHtcbiAgICAgIGZldGNoT3B0aW9ucyxcbiAgICAgIG9wdGlvbnM6IHRoaXMub3B0aW9ucyxcbiAgICAgIHF1ZXJ5S2V5OiB0aGlzLnF1ZXJ5S2V5LFxuICAgICAgc3RhdGU6IHRoaXMuc3RhdGUsXG4gICAgICBmZXRjaEZuXG4gICAgfTtcbiAgICBhZGRTaWduYWxQcm9wZXJ0eShjb250ZXh0KTtcbiAgICAoX3RoaXMkb3B0aW9ucyRiZWhhdmlvID0gdGhpcy5vcHRpb25zLmJlaGF2aW9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRiZWhhdmlvLm9uRmV0Y2goY29udGV4dCk7IC8vIFN0b3JlIHN0YXRlIGluIGNhc2UgdGhlIGN1cnJlbnQgZmV0Y2ggbmVlZHMgdG8gYmUgcmV2ZXJ0ZWRcblxuICAgIHRoaXMucmV2ZXJ0U3RhdGUgPSB0aGlzLnN0YXRlOyAvLyBTZXQgdG8gZmV0Y2hpbmcgc3RhdGUgaWYgbm90IGFscmVhZHkgaW4gaXRcblxuICAgIGlmICh0aGlzLnN0YXRlLmZldGNoU3RhdHVzID09PSAnaWRsZScgfHwgdGhpcy5zdGF0ZS5mZXRjaE1ldGEgIT09ICgoX2NvbnRleHQkZmV0Y2hPcHRpb25zID0gY29udGV4dC5mZXRjaE9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiBfY29udGV4dCRmZXRjaE9wdGlvbnMubWV0YSkpIHtcbiAgICAgIHZhciBfY29udGV4dCRmZXRjaE9wdGlvbnMyO1xuXG4gICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogJ2ZldGNoJyxcbiAgICAgICAgbWV0YTogKF9jb250ZXh0JGZldGNoT3B0aW9uczIgPSBjb250ZXh0LmZldGNoT3B0aW9ucykgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb250ZXh0JGZldGNoT3B0aW9uczIubWV0YVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3Qgb25FcnJvciA9IGVycm9yID0+IHtcbiAgICAgIC8vIE9wdGltaXN0aWNhbGx5IHVwZGF0ZSBzdGF0ZSBpZiBuZWVkZWRcbiAgICAgIGlmICghKGlzQ2FuY2VsbGVkRXJyb3IoZXJyb3IpICYmIGVycm9yLnNpbGVudCkpIHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgICBlcnJvcjogZXJyb3JcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICAgIGlmICghaXNDYW5jZWxsZWRFcnJvcihlcnJvcikpIHtcbiAgICAgICAgdmFyIF90aGlzJGNhY2hlJGNvbmZpZyRvbiwgX3RoaXMkY2FjaGUkY29uZmlnLCBfdGhpcyRjYWNoZSRjb25maWckb24yLCBfdGhpcyRjYWNoZSRjb25maWcyO1xuXG4gICAgICAgIC8vIE5vdGlmeSBjYWNoZSBjYWxsYmFja1xuICAgICAgICAoX3RoaXMkY2FjaGUkY29uZmlnJG9uID0gKF90aGlzJGNhY2hlJGNvbmZpZyA9IHRoaXMuY2FjaGUuY29uZmlnKS5vbkVycm9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2FjaGUkY29uZmlnJG9uLmNhbGwoX3RoaXMkY2FjaGUkY29uZmlnLCBlcnJvciwgdGhpcyk7XG4gICAgICAgIChfdGhpcyRjYWNoZSRjb25maWckb24yID0gKF90aGlzJGNhY2hlJGNvbmZpZzIgPSB0aGlzLmNhY2hlLmNvbmZpZykub25TZXR0bGVkKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkY2FjaGUkY29uZmlnJG9uMi5jYWxsKF90aGlzJGNhY2hlJGNvbmZpZzIsIHRoaXMuc3RhdGUuZGF0YSwgZXJyb3IsIHRoaXMpO1xuXG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmICghdGhpcy5pc0ZldGNoaW5nT3B0aW1pc3RpYykge1xuICAgICAgICAvLyBTY2hlZHVsZSBxdWVyeSBnYyBhZnRlciBmZXRjaGluZ1xuICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5pc0ZldGNoaW5nT3B0aW1pc3RpYyA9IGZhbHNlO1xuICAgIH07IC8vIFRyeSB0byBmZXRjaCB0aGUgZGF0YVxuXG5cbiAgICB0aGlzLnJldHJ5ZXIgPSBjcmVhdGVSZXRyeWVyKHtcbiAgICAgIGZuOiBjb250ZXh0LmZldGNoRm4sXG4gICAgICBhYm9ydDogYWJvcnRDb250cm9sbGVyID09IG51bGwgPyB2b2lkIDAgOiBhYm9ydENvbnRyb2xsZXIuYWJvcnQuYmluZChhYm9ydENvbnRyb2xsZXIpLFxuICAgICAgb25TdWNjZXNzOiBkYXRhID0+IHtcbiAgICAgICAgdmFyIF90aGlzJGNhY2hlJGNvbmZpZyRvbjMsIF90aGlzJGNhY2hlJGNvbmZpZzMsIF90aGlzJGNhY2hlJGNvbmZpZyRvbjQsIF90aGlzJGNhY2hlJGNvbmZpZzQ7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBkYXRhID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICB0aGlzLmxvZ2dlci5lcnJvcihcIlF1ZXJ5IGRhdGEgY2Fubm90IGJlIHVuZGVmaW5lZC4gUGxlYXNlIG1ha2Ugc3VyZSB0byByZXR1cm4gYSB2YWx1ZSBvdGhlciB0aGFuIHVuZGVmaW5lZCBmcm9tIHlvdXIgcXVlcnkgZnVuY3Rpb24uIEFmZmVjdGVkIHF1ZXJ5IGtleTogXCIgKyB0aGlzLnF1ZXJ5SGFzaCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgb25FcnJvcihuZXcgRXJyb3IodGhpcy5xdWVyeUhhc2ggKyBcIiBkYXRhIGlzIHVuZGVmaW5lZFwiKSk7XG4gICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5zZXREYXRhKGRhdGEpOyAvLyBOb3RpZnkgY2FjaGUgY2FsbGJhY2tcblxuICAgICAgICAoX3RoaXMkY2FjaGUkY29uZmlnJG9uMyA9IChfdGhpcyRjYWNoZSRjb25maWczID0gdGhpcy5jYWNoZS5jb25maWcpLm9uU3VjY2VzcykgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJGNhY2hlJGNvbmZpZyRvbjMuY2FsbChfdGhpcyRjYWNoZSRjb25maWczLCBkYXRhLCB0aGlzKTtcbiAgICAgICAgKF90aGlzJGNhY2hlJGNvbmZpZyRvbjQgPSAoX3RoaXMkY2FjaGUkY29uZmlnNCA9IHRoaXMuY2FjaGUuY29uZmlnKS5vblNldHRsZWQpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRjYWNoZSRjb25maWckb240LmNhbGwoX3RoaXMkY2FjaGUkY29uZmlnNCwgZGF0YSwgdGhpcy5zdGF0ZS5lcnJvciwgdGhpcyk7XG5cbiAgICAgICAgaWYgKCF0aGlzLmlzRmV0Y2hpbmdPcHRpbWlzdGljKSB7XG4gICAgICAgICAgLy8gU2NoZWR1bGUgcXVlcnkgZ2MgYWZ0ZXIgZmV0Y2hpbmdcbiAgICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuaXNGZXRjaGluZ09wdGltaXN0aWMgPSBmYWxzZTtcbiAgICAgIH0sXG4gICAgICBvbkVycm9yLFxuICAgICAgb25GYWlsOiAoZmFpbHVyZUNvdW50LCBlcnJvcikgPT4ge1xuICAgICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiAnZmFpbGVkJyxcbiAgICAgICAgICBmYWlsdXJlQ291bnQsXG4gICAgICAgICAgZXJyb3JcbiAgICAgICAgfSk7XG4gICAgICB9LFxuICAgICAgb25QYXVzZTogKCkgPT4ge1xuICAgICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgICB0eXBlOiAncGF1c2UnXG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIG9uQ29udGludWU6ICgpID0+IHtcbiAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ2NvbnRpbnVlJ1xuICAgICAgICB9KTtcbiAgICAgIH0sXG4gICAgICByZXRyeTogY29udGV4dC5vcHRpb25zLnJldHJ5LFxuICAgICAgcmV0cnlEZWxheTogY29udGV4dC5vcHRpb25zLnJldHJ5RGVsYXksXG4gICAgICBuZXR3b3JrTW9kZTogY29udGV4dC5vcHRpb25zLm5ldHdvcmtNb2RlXG4gICAgfSk7XG4gICAgdGhpcy5wcm9taXNlID0gdGhpcy5yZXRyeWVyLnByb21pc2U7XG4gICAgcmV0dXJuIHRoaXMucHJvbWlzZTtcbiAgfVxuXG4gIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGNvbnN0IHJlZHVjZXIgPSBzdGF0ZSA9PiB7XG4gICAgICB2YXIgX2FjdGlvbiRtZXRhLCBfYWN0aW9uJGRhdGFVcGRhdGVkQXQ7XG5cbiAgICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSAnZmFpbGVkJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGZldGNoRmFpbHVyZUNvdW50OiBhY3Rpb24uZmFpbHVyZUNvdW50LFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlUmVhc29uOiBhY3Rpb24uZXJyb3JcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ3BhdXNlJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGZldGNoU3RhdHVzOiAncGF1c2VkJ1xuICAgICAgICAgIH07XG5cbiAgICAgICAgY2FzZSAnY29udGludWUnOlxuICAgICAgICAgIHJldHVybiB7IC4uLnN0YXRlLFxuICAgICAgICAgICAgZmV0Y2hTdGF0dXM6ICdmZXRjaGluZydcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ2ZldGNoJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGZldGNoRmFpbHVyZUNvdW50OiAwLFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlUmVhc29uOiBudWxsLFxuICAgICAgICAgICAgZmV0Y2hNZXRhOiAoX2FjdGlvbiRtZXRhID0gYWN0aW9uLm1ldGEpICE9IG51bGwgPyBfYWN0aW9uJG1ldGEgOiBudWxsLFxuICAgICAgICAgICAgZmV0Y2hTdGF0dXM6IGNhbkZldGNoKHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZSkgPyAnZmV0Y2hpbmcnIDogJ3BhdXNlZCcsXG4gICAgICAgICAgICAuLi4oIXN0YXRlLmRhdGFVcGRhdGVkQXQgJiYge1xuICAgICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgICAgc3RhdHVzOiAnbG9hZGluZydcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdzdWNjZXNzJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGRhdGE6IGFjdGlvbi5kYXRhLFxuICAgICAgICAgICAgZGF0YVVwZGF0ZUNvdW50OiBzdGF0ZS5kYXRhVXBkYXRlQ291bnQgKyAxLFxuICAgICAgICAgICAgZGF0YVVwZGF0ZWRBdDogKF9hY3Rpb24kZGF0YVVwZGF0ZWRBdCA9IGFjdGlvbi5kYXRhVXBkYXRlZEF0KSAhPSBudWxsID8gX2FjdGlvbiRkYXRhVXBkYXRlZEF0IDogRGF0ZS5ub3coKSxcbiAgICAgICAgICAgIGVycm9yOiBudWxsLFxuICAgICAgICAgICAgaXNJbnZhbGlkYXRlZDogZmFsc2UsXG4gICAgICAgICAgICBzdGF0dXM6ICdzdWNjZXNzJyxcbiAgICAgICAgICAgIC4uLighYWN0aW9uLm1hbnVhbCAmJiB7XG4gICAgICAgICAgICAgIGZldGNoU3RhdHVzOiAnaWRsZScsXG4gICAgICAgICAgICAgIGZldGNoRmFpbHVyZUNvdW50OiAwLFxuICAgICAgICAgICAgICBmZXRjaEZhaWx1cmVSZWFzb246IG51bGxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgICAgY29uc3QgZXJyb3IgPSBhY3Rpb24uZXJyb3I7XG5cbiAgICAgICAgICBpZiAoaXNDYW5jZWxsZWRFcnJvcihlcnJvcikgJiYgZXJyb3IucmV2ZXJ0ICYmIHRoaXMucmV2ZXJ0U3RhdGUpIHtcbiAgICAgICAgICAgIHJldHVybiB7IC4uLnRoaXMucmV2ZXJ0U3RhdGUsXG4gICAgICAgICAgICAgIGZldGNoU3RhdHVzOiAnaWRsZSdcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBlcnJvcjogZXJyb3IsXG4gICAgICAgICAgICBlcnJvclVwZGF0ZUNvdW50OiBzdGF0ZS5lcnJvclVwZGF0ZUNvdW50ICsgMSxcbiAgICAgICAgICAgIGVycm9yVXBkYXRlZEF0OiBEYXRlLm5vdygpLFxuICAgICAgICAgICAgZmV0Y2hGYWlsdXJlQ291bnQ6IHN0YXRlLmZldGNoRmFpbHVyZUNvdW50ICsgMSxcbiAgICAgICAgICAgIGZldGNoRmFpbHVyZVJlYXNvbjogZXJyb3IsXG4gICAgICAgICAgICBmZXRjaFN0YXR1czogJ2lkbGUnLFxuICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdpbnZhbGlkYXRlJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGlzSW52YWxpZGF0ZWQ6IHRydWVcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ3NldFN0YXRlJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIC4uLmFjdGlvbi5zdGF0ZVxuICAgICAgICAgIH07XG4gICAgICB9XG4gICAgfTtcblxuICAgIHRoaXMuc3RhdGUgPSByZWR1Y2VyKHRoaXMuc3RhdGUpO1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5vYnNlcnZlcnMuZm9yRWFjaChvYnNlcnZlciA9PiB7XG4gICAgICAgIG9ic2VydmVyLm9uUXVlcnlVcGRhdGUoYWN0aW9uKTtcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jYWNoZS5ub3RpZnkoe1xuICAgICAgICBxdWVyeTogdGhpcyxcbiAgICAgICAgdHlwZTogJ3VwZGF0ZWQnLFxuICAgICAgICBhY3Rpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbn1cblxuZnVuY3Rpb24gZ2V0RGVmYXVsdFN0YXRlKG9wdGlvbnMpIHtcbiAgY29uc3QgZGF0YSA9IHR5cGVvZiBvcHRpb25zLmluaXRpYWxEYXRhID09PSAnZnVuY3Rpb24nID8gb3B0aW9ucy5pbml0aWFsRGF0YSgpIDogb3B0aW9ucy5pbml0aWFsRGF0YTtcbiAgY29uc3QgaGFzRGF0YSA9IHR5cGVvZiBkYXRhICE9PSAndW5kZWZpbmVkJztcbiAgY29uc3QgaW5pdGlhbERhdGFVcGRhdGVkQXQgPSBoYXNEYXRhID8gdHlwZW9mIG9wdGlvbnMuaW5pdGlhbERhdGFVcGRhdGVkQXQgPT09ICdmdW5jdGlvbicgPyBvcHRpb25zLmluaXRpYWxEYXRhVXBkYXRlZEF0KCkgOiBvcHRpb25zLmluaXRpYWxEYXRhVXBkYXRlZEF0IDogMDtcbiAgcmV0dXJuIHtcbiAgICBkYXRhLFxuICAgIGRhdGFVcGRhdGVDb3VudDogMCxcbiAgICBkYXRhVXBkYXRlZEF0OiBoYXNEYXRhID8gaW5pdGlhbERhdGFVcGRhdGVkQXQgIT0gbnVsbCA/IGluaXRpYWxEYXRhVXBkYXRlZEF0IDogRGF0ZS5ub3coKSA6IDAsXG4gICAgZXJyb3I6IG51bGwsXG4gICAgZXJyb3JVcGRhdGVDb3VudDogMCxcbiAgICBlcnJvclVwZGF0ZWRBdDogMCxcbiAgICBmZXRjaEZhaWx1cmVDb3VudDogMCxcbiAgICBmZXRjaEZhaWx1cmVSZWFzb246IG51bGwsXG4gICAgZmV0Y2hNZXRhOiBudWxsLFxuICAgIGlzSW52YWxpZGF0ZWQ6IGZhbHNlLFxuICAgIHN0YXR1czogaGFzRGF0YSA/ICdzdWNjZXNzJyA6ICdsb2FkaW5nJyxcbiAgICBmZXRjaFN0YXR1czogJ2lkbGUnXG4gIH07XG59XG5cbmV4cG9ydCB7IFF1ZXJ5IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeS5tanMubWFwXG4iLCJpbXBvcnQgeyBoYXNoUXVlcnlLZXlCeU9wdGlvbnMsIHBhcnNlRmlsdGVyQXJncywgbWF0Y2hRdWVyeSB9IGZyb20gJy4vdXRpbHMubWpzJztcbmltcG9ydCB7IFF1ZXJ5IH0gZnJvbSAnLi9xdWVyeS5tanMnO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gJy4vbm90aWZ5TWFuYWdlci5tanMnO1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSAnLi9zdWJzY3JpYmFibGUubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIFF1ZXJ5Q2FjaGUgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuY29uZmlnID0gY29uZmlnIHx8IHt9O1xuICAgIHRoaXMucXVlcmllcyA9IFtdO1xuICAgIHRoaXMucXVlcmllc01hcCA9IHt9O1xuICB9XG5cbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIHZhciBfb3B0aW9ucyRxdWVyeUhhc2g7XG5cbiAgICBjb25zdCBxdWVyeUtleSA9IG9wdGlvbnMucXVlcnlLZXk7XG4gICAgY29uc3QgcXVlcnlIYXNoID0gKF9vcHRpb25zJHF1ZXJ5SGFzaCA9IG9wdGlvbnMucXVlcnlIYXNoKSAhPSBudWxsID8gX29wdGlvbnMkcXVlcnlIYXNoIDogaGFzaFF1ZXJ5S2V5QnlPcHRpb25zKHF1ZXJ5S2V5LCBvcHRpb25zKTtcbiAgICBsZXQgcXVlcnkgPSB0aGlzLmdldChxdWVyeUhhc2gpO1xuXG4gICAgaWYgKCFxdWVyeSkge1xuICAgICAgcXVlcnkgPSBuZXcgUXVlcnkoe1xuICAgICAgICBjYWNoZTogdGhpcyxcbiAgICAgICAgbG9nZ2VyOiBjbGllbnQuZ2V0TG9nZ2VyKCksXG4gICAgICAgIHF1ZXJ5S2V5LFxuICAgICAgICBxdWVyeUhhc2gsXG4gICAgICAgIG9wdGlvbnM6IGNsaWVudC5kZWZhdWx0UXVlcnlPcHRpb25zKG9wdGlvbnMpLFxuICAgICAgICBzdGF0ZSxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IGNsaWVudC5nZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KVxuICAgICAgfSk7XG4gICAgICB0aGlzLmFkZChxdWVyeSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHF1ZXJ5O1xuICB9XG5cbiAgYWRkKHF1ZXJ5KSB7XG4gICAgaWYgKCF0aGlzLnF1ZXJpZXNNYXBbcXVlcnkucXVlcnlIYXNoXSkge1xuICAgICAgdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5LnF1ZXJ5SGFzaF0gPSBxdWVyeTtcbiAgICAgIHRoaXMucXVlcmllcy5wdXNoKHF1ZXJ5KTtcbiAgICAgIHRoaXMubm90aWZ5KHtcbiAgICAgICAgdHlwZTogJ2FkZGVkJyxcbiAgICAgICAgcXVlcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZShxdWVyeSkge1xuICAgIGNvbnN0IHF1ZXJ5SW5NYXAgPSB0aGlzLnF1ZXJpZXNNYXBbcXVlcnkucXVlcnlIYXNoXTtcblxuICAgIGlmIChxdWVyeUluTWFwKSB7XG4gICAgICBxdWVyeS5kZXN0cm95KCk7XG4gICAgICB0aGlzLnF1ZXJpZXMgPSB0aGlzLnF1ZXJpZXMuZmlsdGVyKHggPT4geCAhPT0gcXVlcnkpO1xuXG4gICAgICBpZiAocXVlcnlJbk1hcCA9PT0gcXVlcnkpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMucXVlcmllc01hcFtxdWVyeS5xdWVyeUhhc2hdO1xuICAgICAgfVxuXG4gICAgICB0aGlzLm5vdGlmeSh7XG4gICAgICAgIHR5cGU6ICdyZW1vdmVkJyxcbiAgICAgICAgcXVlcnlcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGNsZWFyKCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5xdWVyaWVzLmZvckVhY2gocXVlcnkgPT4ge1xuICAgICAgICB0aGlzLnJlbW92ZShxdWVyeSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldChxdWVyeUhhc2gpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzTWFwW3F1ZXJ5SGFzaF07XG4gIH1cblxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMucXVlcmllcztcbiAgfVxuXG4gIGZpbmQoYXJnMSwgYXJnMikge1xuICAgIGNvbnN0IFtmaWx0ZXJzXSA9IHBhcnNlRmlsdGVyQXJncyhhcmcxLCBhcmcyKTtcblxuICAgIGlmICh0eXBlb2YgZmlsdGVycy5leGFjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGZpbHRlcnMuZXhhY3QgPSB0cnVlO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzLnF1ZXJpZXMuZmluZChxdWVyeSA9PiBtYXRjaFF1ZXJ5KGZpbHRlcnMsIHF1ZXJ5KSk7XG4gIH1cblxuICBmaW5kQWxsKGFyZzEsIGFyZzIpIHtcbiAgICBjb25zdCBbZmlsdGVyc10gPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMik7XG4gICAgcmV0dXJuIE9iamVjdC5rZXlzKGZpbHRlcnMpLmxlbmd0aCA+IDAgPyB0aGlzLnF1ZXJpZXMuZmlsdGVyKHF1ZXJ5ID0+IG1hdGNoUXVlcnkoZmlsdGVycywgcXVlcnkpKSA6IHRoaXMucXVlcmllcztcbiAgfVxuXG4gIG5vdGlmeShldmVudCkge1xuICAgIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdGhpcy5saXN0ZW5lcnMuZm9yRWFjaCgoe1xuICAgICAgICBsaXN0ZW5lclxuICAgICAgfSkgPT4ge1xuICAgICAgICBsaXN0ZW5lcihldmVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG9uRm9jdXMoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLnF1ZXJpZXMuZm9yRWFjaChxdWVyeSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uRm9jdXMoKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgb25PbmxpbmUoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLnF1ZXJpZXMuZm9yRWFjaChxdWVyeSA9PiB7XG4gICAgICAgIHF1ZXJ5Lm9uT25saW5lKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG59XG5cbmV4cG9ydCB7IFF1ZXJ5Q2FjaGUgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJ5Q2FjaGUubWpzLm1hcFxuIiwiaW1wb3J0IHsgZGVmYXVsdExvZ2dlciB9IGZyb20gJy4vbG9nZ2VyLm1qcyc7XG5pbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBSZW1vdmFibGUgfSBmcm9tICcuL3JlbW92YWJsZS5tanMnO1xuaW1wb3J0IHsgY3JlYXRlUmV0cnllciwgY2FuRmV0Y2ggfSBmcm9tICcuL3JldHJ5ZXIubWpzJztcblxuLy8gQ0xBU1NcbmNsYXNzIE11dGF0aW9uIGV4dGVuZHMgUmVtb3ZhYmxlIHtcbiAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLmRlZmF1bHRPcHRpb25zID0gY29uZmlnLmRlZmF1bHRPcHRpb25zO1xuICAgIHRoaXMubXV0YXRpb25JZCA9IGNvbmZpZy5tdXRhdGlvbklkO1xuICAgIHRoaXMubXV0YXRpb25DYWNoZSA9IGNvbmZpZy5tdXRhdGlvbkNhY2hlO1xuICAgIHRoaXMubG9nZ2VyID0gY29uZmlnLmxvZ2dlciB8fCBkZWZhdWx0TG9nZ2VyO1xuICAgIHRoaXMub2JzZXJ2ZXJzID0gW107XG4gICAgdGhpcy5zdGF0ZSA9IGNvbmZpZy5zdGF0ZSB8fCBnZXREZWZhdWx0U3RhdGUoKTtcbiAgICB0aGlzLnNldE9wdGlvbnMoY29uZmlnLm9wdGlvbnMpO1xuICAgIHRoaXMuc2NoZWR1bGVHYygpO1xuICB9XG5cbiAgc2V0T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgdGhpcy5vcHRpb25zID0geyAuLi50aGlzLmRlZmF1bHRPcHRpb25zLFxuICAgICAgLi4ub3B0aW9uc1xuICAgIH07XG4gICAgdGhpcy51cGRhdGVDYWNoZVRpbWUodGhpcy5vcHRpb25zLmNhY2hlVGltZSk7XG4gIH1cblxuICBnZXQgbWV0YSgpIHtcbiAgICByZXR1cm4gdGhpcy5vcHRpb25zLm1ldGE7XG4gIH1cblxuICBzZXRTdGF0ZShzdGF0ZSkge1xuICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgdHlwZTogJ3NldFN0YXRlJyxcbiAgICAgIHN0YXRlXG4gICAgfSk7XG4gIH1cblxuICBhZGRPYnNlcnZlcihvYnNlcnZlcikge1xuICAgIGlmICghdGhpcy5vYnNlcnZlcnMuaW5jbHVkZXMob2JzZXJ2ZXIpKSB7XG4gICAgICB0aGlzLm9ic2VydmVycy5wdXNoKG9ic2VydmVyKTsgLy8gU3RvcCB0aGUgbXV0YXRpb24gZnJvbSBiZWluZyBnYXJiYWdlIGNvbGxlY3RlZFxuXG4gICAgICB0aGlzLmNsZWFyR2NUaW1lb3V0KCk7XG4gICAgICB0aGlzLm11dGF0aW9uQ2FjaGUubm90aWZ5KHtcbiAgICAgICAgdHlwZTogJ29ic2VydmVyQWRkZWQnLFxuICAgICAgICBtdXRhdGlvbjogdGhpcyxcbiAgICAgICAgb2JzZXJ2ZXJcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIHJlbW92ZU9ic2VydmVyKG9ic2VydmVyKSB7XG4gICAgdGhpcy5vYnNlcnZlcnMgPSB0aGlzLm9ic2VydmVycy5maWx0ZXIoeCA9PiB4ICE9PSBvYnNlcnZlcik7XG4gICAgdGhpcy5zY2hlZHVsZUdjKCk7XG4gICAgdGhpcy5tdXRhdGlvbkNhY2hlLm5vdGlmeSh7XG4gICAgICB0eXBlOiAnb2JzZXJ2ZXJSZW1vdmVkJyxcbiAgICAgIG11dGF0aW9uOiB0aGlzLFxuICAgICAgb2JzZXJ2ZXJcbiAgICB9KTtcbiAgfVxuXG4gIG9wdGlvbmFsUmVtb3ZlKCkge1xuICAgIGlmICghdGhpcy5vYnNlcnZlcnMubGVuZ3RoKSB7XG4gICAgICBpZiAodGhpcy5zdGF0ZS5zdGF0dXMgPT09ICdsb2FkaW5nJykge1xuICAgICAgICB0aGlzLnNjaGVkdWxlR2MoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMubXV0YXRpb25DYWNoZS5yZW1vdmUodGhpcyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY29udGludWUoKSB7XG4gICAgdmFyIF90aGlzJHJldHJ5ZXIkY29udGludSwgX3RoaXMkcmV0cnllcjtcblxuICAgIHJldHVybiAoX3RoaXMkcmV0cnllciRjb250aW51ID0gKF90aGlzJHJldHJ5ZXIgPSB0aGlzLnJldHJ5ZXIpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRyZXRyeWVyLmNvbnRpbnVlKCkpICE9IG51bGwgPyBfdGhpcyRyZXRyeWVyJGNvbnRpbnUgOiB0aGlzLmV4ZWN1dGUoKTtcbiAgfVxuXG4gIGFzeW5jIGV4ZWN1dGUoKSB7XG4gICAgY29uc3QgZXhlY3V0ZU11dGF0aW9uID0gKCkgPT4ge1xuICAgICAgdmFyIF90aGlzJG9wdGlvbnMkcmV0cnk7XG5cbiAgICAgIHRoaXMucmV0cnllciA9IGNyZWF0ZVJldHJ5ZXIoe1xuICAgICAgICBmbjogKCkgPT4ge1xuICAgICAgICAgIGlmICghdGhpcy5vcHRpb25zLm11dGF0aW9uRm4pIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdCgnTm8gbXV0YXRpb25GbiBmb3VuZCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB0aGlzLm9wdGlvbnMubXV0YXRpb25Gbih0aGlzLnN0YXRlLnZhcmlhYmxlcyk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRmFpbDogKGZhaWx1cmVDb3VudCwgZXJyb3IpID0+IHtcbiAgICAgICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgICAgIHR5cGU6ICdmYWlsZWQnLFxuICAgICAgICAgICAgZmFpbHVyZUNvdW50LFxuICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgb25QYXVzZTogKCkgPT4ge1xuICAgICAgICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgICAgICAgdHlwZTogJ3BhdXNlJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBvbkNvbnRpbnVlOiAoKSA9PiB7XG4gICAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnY29udGludWUnXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHJ5OiAoX3RoaXMkb3B0aW9ucyRyZXRyeSA9IHRoaXMub3B0aW9ucy5yZXRyeSkgIT0gbnVsbCA/IF90aGlzJG9wdGlvbnMkcmV0cnkgOiAwLFxuICAgICAgICByZXRyeURlbGF5OiB0aGlzLm9wdGlvbnMucmV0cnlEZWxheSxcbiAgICAgICAgbmV0d29ya01vZGU6IHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZVxuICAgICAgfSk7XG4gICAgICByZXR1cm4gdGhpcy5yZXRyeWVyLnByb21pc2U7XG4gICAgfTtcblxuICAgIGNvbnN0IHJlc3RvcmVkID0gdGhpcy5zdGF0ZS5zdGF0dXMgPT09ICdsb2FkaW5nJztcblxuICAgIHRyeSB7XG4gICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjMywgX3RoaXMkbXV0YXRpb25DYWNoZSRjNCwgX3RoaXMkb3B0aW9ucyRvblN1Y2NlLCBfdGhpcyRvcHRpb25zMiwgX3RoaXMkbXV0YXRpb25DYWNoZSRjNSwgX3RoaXMkbXV0YXRpb25DYWNoZSRjNiwgX3RoaXMkb3B0aW9ucyRvblNldHRsLCBfdGhpcyRvcHRpb25zMztcblxuICAgICAgaWYgKCFyZXN0b3JlZCkge1xuICAgICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjLCBfdGhpcyRtdXRhdGlvbkNhY2hlJGMyLCBfdGhpcyRvcHRpb25zJG9uTXV0YXQsIF90aGlzJG9wdGlvbnM7XG5cbiAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgdHlwZTogJ2xvYWRpbmcnLFxuICAgICAgICAgIHZhcmlhYmxlczogdGhpcy5vcHRpb25zLnZhcmlhYmxlc1xuICAgICAgICB9KTsgLy8gTm90aWZ5IGNhY2hlIGNhbGxiYWNrXG5cbiAgICAgICAgYXdhaXQgKChfdGhpcyRtdXRhdGlvbkNhY2hlJGMgPSAoX3RoaXMkbXV0YXRpb25DYWNoZSRjMiA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uTXV0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRpb25DYWNoZSRjLmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjMiwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMpKTtcbiAgICAgICAgY29uc3QgY29udGV4dCA9IGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvbk11dGF0ID0gKF90aGlzJG9wdGlvbnMgPSB0aGlzLm9wdGlvbnMpLm9uTXV0YXRlKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvbk11dGF0LmNhbGwoX3RoaXMkb3B0aW9ucywgdGhpcy5zdGF0ZS52YXJpYWJsZXMpKTtcblxuICAgICAgICBpZiAoY29udGV4dCAhPT0gdGhpcy5zdGF0ZS5jb250ZXh0KSB7XG4gICAgICAgICAgdGhpcy5kaXNwYXRjaCh7XG4gICAgICAgICAgICB0eXBlOiAnbG9hZGluZycsXG4gICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgdmFyaWFibGVzOiB0aGlzLnN0YXRlLnZhcmlhYmxlc1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBleGVjdXRlTXV0YXRpb24oKTsgLy8gTm90aWZ5IGNhY2hlIGNhbGxiYWNrXG5cbiAgICAgIGF3YWl0ICgoX3RoaXMkbXV0YXRpb25DYWNoZSRjMyA9IChfdGhpcyRtdXRhdGlvbkNhY2hlJGM0ID0gdGhpcy5tdXRhdGlvbkNhY2hlLmNvbmZpZykub25TdWNjZXNzKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkbXV0YXRpb25DYWNoZSRjMy5jYWxsKF90aGlzJG11dGF0aW9uQ2FjaGUkYzQsIGRhdGEsIHRoaXMuc3RhdGUudmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQsIHRoaXMpKTtcbiAgICAgIGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvblN1Y2NlID0gKF90aGlzJG9wdGlvbnMyID0gdGhpcy5vcHRpb25zKS5vblN1Y2Nlc3MpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRvcHRpb25zJG9uU3VjY2UuY2FsbChfdGhpcyRvcHRpb25zMiwgZGF0YSwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCkpOyAvLyBOb3RpZnkgY2FjaGUgY2FsbGJhY2tcblxuICAgICAgYXdhaXQgKChfdGhpcyRtdXRhdGlvbkNhY2hlJGM1ID0gKF90aGlzJG11dGF0aW9uQ2FjaGUkYzYgPSB0aGlzLm11dGF0aW9uQ2FjaGUuY29uZmlnKS5vblNldHRsZWQpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGlvbkNhY2hlJGM1LmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjNiwgZGF0YSwgbnVsbCwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCwgdGhpcykpO1xuICAgICAgYXdhaXQgKChfdGhpcyRvcHRpb25zJG9uU2V0dGwgPSAoX3RoaXMkb3B0aW9uczMgPSB0aGlzLm9wdGlvbnMpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG9wdGlvbnMkb25TZXR0bC5jYWxsKF90aGlzJG9wdGlvbnMzLCBkYXRhLCBudWxsLCB0aGlzLnN0YXRlLnZhcmlhYmxlcywgdGhpcy5zdGF0ZS5jb250ZXh0KSk7XG4gICAgICB0aGlzLmRpc3BhdGNoKHtcbiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICBkYXRhXG4gICAgICB9KTtcbiAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0cnkge1xuICAgICAgICB2YXIgX3RoaXMkbXV0YXRpb25DYWNoZSRjNywgX3RoaXMkbXV0YXRpb25DYWNoZSRjOCwgX3RoaXMkb3B0aW9ucyRvbkVycm9yLCBfdGhpcyRvcHRpb25zNCwgX3RoaXMkbXV0YXRpb25DYWNoZSRjOSwgX3RoaXMkbXV0YXRpb25DYWNoZSRjMTAsIF90aGlzJG9wdGlvbnMkb25TZXR0bDIsIF90aGlzJG9wdGlvbnM1O1xuXG4gICAgICAgIC8vIE5vdGlmeSBjYWNoZSBjYWxsYmFja1xuICAgICAgICBhd2FpdCAoKF90aGlzJG11dGF0aW9uQ2FjaGUkYzcgPSAoX3RoaXMkbXV0YXRpb25DYWNoZSRjOCA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uRXJyb3IpID09IG51bGwgPyB2b2lkIDAgOiBfdGhpcyRtdXRhdGlvbkNhY2hlJGM3LmNhbGwoX3RoaXMkbXV0YXRpb25DYWNoZSRjOCwgZXJyb3IsIHRoaXMuc3RhdGUudmFyaWFibGVzLCB0aGlzLnN0YXRlLmNvbnRleHQsIHRoaXMpKTtcblxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGF3YWl0ICgoX3RoaXMkb3B0aW9ucyRvbkVycm9yID0gKF90aGlzJG9wdGlvbnM0ID0gdGhpcy5vcHRpb25zKS5vbkVycm9yKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkb3B0aW9ucyRvbkVycm9yLmNhbGwoX3RoaXMkb3B0aW9uczQsIGVycm9yLCB0aGlzLnN0YXRlLnZhcmlhYmxlcywgdGhpcy5zdGF0ZS5jb250ZXh0KSk7IC8vIE5vdGlmeSBjYWNoZSBjYWxsYmFja1xuXG4gICAgICAgIGF3YWl0ICgoX3RoaXMkbXV0YXRpb25DYWNoZSRjOSA9IChfdGhpcyRtdXRhdGlvbkNhY2hlJGMxMCA9IHRoaXMubXV0YXRpb25DYWNoZS5jb25maWcpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG11dGF0aW9uQ2FjaGUkYzkuY2FsbChfdGhpcyRtdXRhdGlvbkNhY2hlJGMxMCwgdW5kZWZpbmVkLCBlcnJvciwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCwgdGhpcykpO1xuICAgICAgICBhd2FpdCAoKF90aGlzJG9wdGlvbnMkb25TZXR0bDIgPSAoX3RoaXMkb3B0aW9uczUgPSB0aGlzLm9wdGlvbnMpLm9uU2V0dGxlZCkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJG9wdGlvbnMkb25TZXR0bDIuY2FsbChfdGhpcyRvcHRpb25zNSwgdW5kZWZpbmVkLCBlcnJvciwgdGhpcy5zdGF0ZS52YXJpYWJsZXMsIHRoaXMuc3RhdGUuY29udGV4dCkpO1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMuZGlzcGF0Y2goe1xuICAgICAgICAgIHR5cGU6ICdlcnJvcicsXG4gICAgICAgICAgZXJyb3I6IGVycm9yXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGNvbnN0IHJlZHVjZXIgPSBzdGF0ZSA9PiB7XG4gICAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgJ2ZhaWxlZCc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IGFjdGlvbi5mYWlsdXJlQ291bnQsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBhY3Rpb24uZXJyb3JcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ3BhdXNlJzpcbiAgICAgICAgICByZXR1cm4geyAuLi5zdGF0ZSxcbiAgICAgICAgICAgIGlzUGF1c2VkOiB0cnVlXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdjb250aW51ZSc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBpc1BhdXNlZDogZmFsc2VcbiAgICAgICAgICB9O1xuXG4gICAgICAgIGNhc2UgJ2xvYWRpbmcnOlxuICAgICAgICAgIHJldHVybiB7IC4uLnN0YXRlLFxuICAgICAgICAgICAgY29udGV4dDogYWN0aW9uLmNvbnRleHQsXG4gICAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBmYWlsdXJlQ291bnQ6IDAsXG4gICAgICAgICAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgICAgICAgICAgZXJyb3I6IG51bGwsXG4gICAgICAgICAgICBpc1BhdXNlZDogIWNhbkZldGNoKHRoaXMub3B0aW9ucy5uZXR3b3JrTW9kZSksXG4gICAgICAgICAgICBzdGF0dXM6ICdsb2FkaW5nJyxcbiAgICAgICAgICAgIHZhcmlhYmxlczogYWN0aW9uLnZhcmlhYmxlc1xuICAgICAgICAgIH07XG5cbiAgICAgICAgY2FzZSAnc3VjY2Vzcyc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiBhY3Rpb24uZGF0YSxcbiAgICAgICAgICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICAgICAgICAgIGZhaWx1cmVSZWFzb246IG51bGwsXG4gICAgICAgICAgICBlcnJvcjogbnVsbCxcbiAgICAgICAgICAgIHN0YXR1czogJ3N1Y2Nlc3MnLFxuICAgICAgICAgICAgaXNQYXVzZWQ6IGZhbHNlXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdlcnJvcic6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBlcnJvcjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgZmFpbHVyZUNvdW50OiBzdGF0ZS5mYWlsdXJlQ291bnQgKyAxLFxuICAgICAgICAgICAgZmFpbHVyZVJlYXNvbjogYWN0aW9uLmVycm9yLFxuICAgICAgICAgICAgaXNQYXVzZWQ6IGZhbHNlLFxuICAgICAgICAgICAgc3RhdHVzOiAnZXJyb3InXG4gICAgICAgICAgfTtcblxuICAgICAgICBjYXNlICdzZXRTdGF0ZSc6XG4gICAgICAgICAgcmV0dXJuIHsgLi4uc3RhdGUsXG4gICAgICAgICAgICAuLi5hY3Rpb24uc3RhdGVcbiAgICAgICAgICB9O1xuICAgICAgfVxuICAgIH07XG5cbiAgICB0aGlzLnN0YXRlID0gcmVkdWNlcih0aGlzLnN0YXRlKTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMub2JzZXJ2ZXJzLmZvckVhY2gob2JzZXJ2ZXIgPT4ge1xuICAgICAgICBvYnNlcnZlci5vbk11dGF0aW9uVXBkYXRlKGFjdGlvbik7XG4gICAgICB9KTtcbiAgICAgIHRoaXMubXV0YXRpb25DYWNoZS5ub3RpZnkoe1xuICAgICAgICBtdXRhdGlvbjogdGhpcyxcbiAgICAgICAgdHlwZTogJ3VwZGF0ZWQnLFxuICAgICAgICBhY3Rpb25cbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbn1cbmZ1bmN0aW9uIGdldERlZmF1bHRTdGF0ZSgpIHtcbiAgcmV0dXJuIHtcbiAgICBjb250ZXh0OiB1bmRlZmluZWQsXG4gICAgZGF0YTogdW5kZWZpbmVkLFxuICAgIGVycm9yOiBudWxsLFxuICAgIGZhaWx1cmVDb3VudDogMCxcbiAgICBmYWlsdXJlUmVhc29uOiBudWxsLFxuICAgIGlzUGF1c2VkOiBmYWxzZSxcbiAgICBzdGF0dXM6ICdpZGxlJyxcbiAgICB2YXJpYWJsZXM6IHVuZGVmaW5lZFxuICB9O1xufVxuXG5leHBvcnQgeyBNdXRhdGlvbiwgZ2V0RGVmYXVsdFN0YXRlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdXRhdGlvbi5tanMubWFwXG4iLCJpbXBvcnQgeyBub3RpZnlNYW5hZ2VyIH0gZnJvbSAnLi9ub3RpZnlNYW5hZ2VyLm1qcyc7XG5pbXBvcnQgeyBNdXRhdGlvbiB9IGZyb20gJy4vbXV0YXRpb24ubWpzJztcbmltcG9ydCB7IG1hdGNoTXV0YXRpb24sIG5vb3AgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyBTdWJzY3JpYmFibGUgfSBmcm9tICcuL3N1YnNjcmliYWJsZS5tanMnO1xuXG4vLyBDTEFTU1xuY2xhc3MgTXV0YXRpb25DYWNoZSBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZykge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWcgfHwge307XG4gICAgdGhpcy5tdXRhdGlvbnMgPSBbXTtcbiAgICB0aGlzLm11dGF0aW9uSWQgPSAwO1xuICB9XG5cbiAgYnVpbGQoY2xpZW50LCBvcHRpb25zLCBzdGF0ZSkge1xuICAgIGNvbnN0IG11dGF0aW9uID0gbmV3IE11dGF0aW9uKHtcbiAgICAgIG11dGF0aW9uQ2FjaGU6IHRoaXMsXG4gICAgICBsb2dnZXI6IGNsaWVudC5nZXRMb2dnZXIoKSxcbiAgICAgIG11dGF0aW9uSWQ6ICsrdGhpcy5tdXRhdGlvbklkLFxuICAgICAgb3B0aW9uczogY2xpZW50LmRlZmF1bHRNdXRhdGlvbk9wdGlvbnMob3B0aW9ucyksXG4gICAgICBzdGF0ZSxcbiAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zLm11dGF0aW9uS2V5ID8gY2xpZW50LmdldE11dGF0aW9uRGVmYXVsdHMob3B0aW9ucy5tdXRhdGlvbktleSkgOiB1bmRlZmluZWRcbiAgICB9KTtcbiAgICB0aGlzLmFkZChtdXRhdGlvbik7XG4gICAgcmV0dXJuIG11dGF0aW9uO1xuICB9XG5cbiAgYWRkKG11dGF0aW9uKSB7XG4gICAgdGhpcy5tdXRhdGlvbnMucHVzaChtdXRhdGlvbik7XG4gICAgdGhpcy5ub3RpZnkoe1xuICAgICAgdHlwZTogJ2FkZGVkJyxcbiAgICAgIG11dGF0aW9uXG4gICAgfSk7XG4gIH1cblxuICByZW1vdmUobXV0YXRpb24pIHtcbiAgICB0aGlzLm11dGF0aW9ucyA9IHRoaXMubXV0YXRpb25zLmZpbHRlcih4ID0+IHggIT09IG11dGF0aW9uKTtcbiAgICB0aGlzLm5vdGlmeSh7XG4gICAgICB0eXBlOiAncmVtb3ZlZCcsXG4gICAgICBtdXRhdGlvblxuICAgIH0pO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICB0aGlzLm11dGF0aW9ucy5mb3JFYWNoKG11dGF0aW9uID0+IHtcbiAgICAgICAgdGhpcy5yZW1vdmUobXV0YXRpb24pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICBnZXRBbGwoKSB7XG4gICAgcmV0dXJuIHRoaXMubXV0YXRpb25zO1xuICB9XG5cbiAgZmluZChmaWx0ZXJzKSB7XG4gICAgaWYgKHR5cGVvZiBmaWx0ZXJzLmV4YWN0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgZmlsdGVycy5leGFjdCA9IHRydWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMubXV0YXRpb25zLmZpbmQobXV0YXRpb24gPT4gbWF0Y2hNdXRhdGlvbihmaWx0ZXJzLCBtdXRhdGlvbikpO1xuICB9XG5cbiAgZmluZEFsbChmaWx0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMubXV0YXRpb25zLmZpbHRlcihtdXRhdGlvbiA9PiBtYXRjaE11dGF0aW9uKGZpbHRlcnMsIG11dGF0aW9uKSk7XG4gIH1cblxuICBub3RpZnkoZXZlbnQpIHtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKHtcbiAgICAgICAgbGlzdGVuZXJcbiAgICAgIH0pID0+IHtcbiAgICAgICAgbGlzdGVuZXIoZXZlbnQpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXN1bWVQYXVzZWRNdXRhdGlvbnMoKSB7XG4gICAgdmFyIF90aGlzJHJlc3VtaW5nO1xuXG4gICAgdGhpcy5yZXN1bWluZyA9ICgoX3RoaXMkcmVzdW1pbmcgPSB0aGlzLnJlc3VtaW5nKSAhPSBudWxsID8gX3RoaXMkcmVzdW1pbmcgOiBQcm9taXNlLnJlc29sdmUoKSkudGhlbigoKSA9PiB7XG4gICAgICBjb25zdCBwYXVzZWRNdXRhdGlvbnMgPSB0aGlzLm11dGF0aW9ucy5maWx0ZXIoeCA9PiB4LnN0YXRlLmlzUGF1c2VkKTtcbiAgICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHBhdXNlZE11dGF0aW9ucy5yZWR1Y2UoKHByb21pc2UsIG11dGF0aW9uKSA9PiBwcm9taXNlLnRoZW4oKCkgPT4gbXV0YXRpb24uY29udGludWUoKS5jYXRjaChub29wKSksIFByb21pc2UucmVzb2x2ZSgpKSk7XG4gICAgfSkudGhlbigoKSA9PiB7XG4gICAgICB0aGlzLnJlc3VtaW5nID0gdW5kZWZpbmVkO1xuICAgIH0pO1xuICAgIHJldHVybiB0aGlzLnJlc3VtaW5nO1xuICB9XG5cbn1cblxuZXhwb3J0IHsgTXV0YXRpb25DYWNoZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb25DYWNoZS5tanMubWFwXG4iLCJmdW5jdGlvbiBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKSB7XG4gIHJldHVybiB7XG4gICAgb25GZXRjaDogY29udGV4dCA9PiB7XG4gICAgICBjb250ZXh0LmZldGNoRm4gPSAoKSA9PiB7XG4gICAgICAgIHZhciBfY29udGV4dCRmZXRjaE9wdGlvbnMsIF9jb250ZXh0JGZldGNoT3B0aW9uczIsIF9jb250ZXh0JGZldGNoT3B0aW9uczMsIF9jb250ZXh0JGZldGNoT3B0aW9uczQsIF9jb250ZXh0JHN0YXRlJGRhdGEsIF9jb250ZXh0JHN0YXRlJGRhdGEyO1xuXG4gICAgICAgIGNvbnN0IHJlZmV0Y2hQYWdlID0gKF9jb250ZXh0JGZldGNoT3B0aW9ucyA9IGNvbnRleHQuZmV0Y2hPcHRpb25zKSA9PSBudWxsID8gdm9pZCAwIDogKF9jb250ZXh0JGZldGNoT3B0aW9uczIgPSBfY29udGV4dCRmZXRjaE9wdGlvbnMubWV0YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb250ZXh0JGZldGNoT3B0aW9uczIucmVmZXRjaFBhZ2U7XG4gICAgICAgIGNvbnN0IGZldGNoTW9yZSA9IChfY29udGV4dCRmZXRjaE9wdGlvbnMzID0gY29udGV4dC5mZXRjaE9wdGlvbnMpID09IG51bGwgPyB2b2lkIDAgOiAoX2NvbnRleHQkZmV0Y2hPcHRpb25zNCA9IF9jb250ZXh0JGZldGNoT3B0aW9uczMubWV0YSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb250ZXh0JGZldGNoT3B0aW9uczQuZmV0Y2hNb3JlO1xuICAgICAgICBjb25zdCBwYWdlUGFyYW0gPSBmZXRjaE1vcmUgPT0gbnVsbCA/IHZvaWQgMCA6IGZldGNoTW9yZS5wYWdlUGFyYW07XG4gICAgICAgIGNvbnN0IGlzRmV0Y2hpbmdOZXh0UGFnZSA9IChmZXRjaE1vcmUgPT0gbnVsbCA/IHZvaWQgMCA6IGZldGNoTW9yZS5kaXJlY3Rpb24pID09PSAnZm9yd2FyZCc7XG4gICAgICAgIGNvbnN0IGlzRmV0Y2hpbmdQcmV2aW91c1BhZ2UgPSAoZmV0Y2hNb3JlID09IG51bGwgPyB2b2lkIDAgOiBmZXRjaE1vcmUuZGlyZWN0aW9uKSA9PT0gJ2JhY2t3YXJkJztcbiAgICAgICAgY29uc3Qgb2xkUGFnZXMgPSAoKF9jb250ZXh0JHN0YXRlJGRhdGEgPSBjb250ZXh0LnN0YXRlLmRhdGEpID09IG51bGwgPyB2b2lkIDAgOiBfY29udGV4dCRzdGF0ZSRkYXRhLnBhZ2VzKSB8fCBbXTtcbiAgICAgICAgY29uc3Qgb2xkUGFnZVBhcmFtcyA9ICgoX2NvbnRleHQkc3RhdGUkZGF0YTIgPSBjb250ZXh0LnN0YXRlLmRhdGEpID09IG51bGwgPyB2b2lkIDAgOiBfY29udGV4dCRzdGF0ZSRkYXRhMi5wYWdlUGFyYW1zKSB8fCBbXTtcbiAgICAgICAgbGV0IG5ld1BhZ2VQYXJhbXMgPSBvbGRQYWdlUGFyYW1zO1xuICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG5cbiAgICAgICAgY29uc3QgYWRkU2lnbmFsUHJvcGVydHkgPSBvYmplY3QgPT4ge1xuICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmplY3QsICdzaWduYWwnLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgZ2V0OiAoKSA9PiB7XG4gICAgICAgICAgICAgIHZhciBfY29udGV4dCRzaWduYWw7XG5cbiAgICAgICAgICAgICAgaWYgKChfY29udGV4dCRzaWduYWwgPSBjb250ZXh0LnNpZ25hbCkgIT0gbnVsbCAmJiBfY29udGV4dCRzaWduYWwuYWJvcnRlZCkge1xuICAgICAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyIF9jb250ZXh0JHNpZ25hbDI7XG5cbiAgICAgICAgICAgICAgICAoX2NvbnRleHQkc2lnbmFsMiA9IGNvbnRleHQuc2lnbmFsKSA9PSBudWxsID8gdm9pZCAwIDogX2NvbnRleHQkc2lnbmFsMi5hZGRFdmVudExpc3RlbmVyKCdhYm9ydCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gY29udGV4dC5zaWduYWw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSk7XG4gICAgICAgIH07IC8vIEdldCBxdWVyeSBmdW5jdGlvblxuXG5cbiAgICAgICAgY29uc3QgcXVlcnlGbiA9IGNvbnRleHQub3B0aW9ucy5xdWVyeUZuIHx8ICgoKSA9PiBQcm9taXNlLnJlamVjdChcIk1pc3NpbmcgcXVlcnlGbiBmb3IgcXVlcnlLZXkgJ1wiICsgY29udGV4dC5vcHRpb25zLnF1ZXJ5SGFzaCArIFwiJ1wiKSk7XG5cbiAgICAgICAgY29uc3QgYnVpbGROZXdQYWdlcyA9IChwYWdlcywgcGFyYW0sIHBhZ2UsIHByZXZpb3VzKSA9PiB7XG4gICAgICAgICAgbmV3UGFnZVBhcmFtcyA9IHByZXZpb3VzID8gW3BhcmFtLCAuLi5uZXdQYWdlUGFyYW1zXSA6IFsuLi5uZXdQYWdlUGFyYW1zLCBwYXJhbV07XG4gICAgICAgICAgcmV0dXJuIHByZXZpb3VzID8gW3BhZ2UsIC4uLnBhZ2VzXSA6IFsuLi5wYWdlcywgcGFnZV07XG4gICAgICAgIH07IC8vIENyZWF0ZSBmdW5jdGlvbiB0byBmZXRjaCBhIHBhZ2VcblxuXG4gICAgICAgIGNvbnN0IGZldGNoUGFnZSA9IChwYWdlcywgbWFudWFsLCBwYXJhbSwgcHJldmlvdXMpID0+IHtcbiAgICAgICAgICBpZiAoY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoJ0NhbmNlbGxlZCcpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmICh0eXBlb2YgcGFyYW0gPT09ICd1bmRlZmluZWQnICYmICFtYW51YWwgJiYgcGFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHBhZ2VzKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb25zdCBxdWVyeUZuQ29udGV4dCA9IHtcbiAgICAgICAgICAgIHF1ZXJ5S2V5OiBjb250ZXh0LnF1ZXJ5S2V5LFxuICAgICAgICAgICAgcGFnZVBhcmFtOiBwYXJhbSxcbiAgICAgICAgICAgIG1ldGE6IGNvbnRleHQub3B0aW9ucy5tZXRhXG4gICAgICAgICAgfTtcbiAgICAgICAgICBhZGRTaWduYWxQcm9wZXJ0eShxdWVyeUZuQ29udGV4dCk7XG4gICAgICAgICAgY29uc3QgcXVlcnlGblJlc3VsdCA9IHF1ZXJ5Rm4ocXVlcnlGbkNvbnRleHQpO1xuICAgICAgICAgIGNvbnN0IHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUocXVlcnlGblJlc3VsdCkudGhlbihwYWdlID0+IGJ1aWxkTmV3UGFnZXMocGFnZXMsIHBhcmFtLCBwYWdlLCBwcmV2aW91cykpO1xuICAgICAgICAgIHJldHVybiBwcm9taXNlO1xuICAgICAgICB9O1xuXG4gICAgICAgIGxldCBwcm9taXNlOyAvLyBGZXRjaCBmaXJzdCBwYWdlP1xuXG4gICAgICAgIGlmICghb2xkUGFnZXMubGVuZ3RoKSB7XG4gICAgICAgICAgcHJvbWlzZSA9IGZldGNoUGFnZShbXSk7XG4gICAgICAgIH0gLy8gRmV0Y2ggbmV4dCBwYWdlP1xuICAgICAgICBlbHNlIGlmIChpc0ZldGNoaW5nTmV4dFBhZ2UpIHtcbiAgICAgICAgICBjb25zdCBtYW51YWwgPSB0eXBlb2YgcGFnZVBhcmFtICE9PSAndW5kZWZpbmVkJztcbiAgICAgICAgICBjb25zdCBwYXJhbSA9IG1hbnVhbCA/IHBhZ2VQYXJhbSA6IGdldE5leHRQYWdlUGFyYW0oY29udGV4dC5vcHRpb25zLCBvbGRQYWdlcyk7XG4gICAgICAgICAgcHJvbWlzZSA9IGZldGNoUGFnZShvbGRQYWdlcywgbWFudWFsLCBwYXJhbSk7XG4gICAgICAgIH0gLy8gRmV0Y2ggcHJldmlvdXMgcGFnZT9cbiAgICAgICAgZWxzZSBpZiAoaXNGZXRjaGluZ1ByZXZpb3VzUGFnZSkge1xuICAgICAgICAgIGNvbnN0IG1hbnVhbCA9IHR5cGVvZiBwYWdlUGFyYW0gIT09ICd1bmRlZmluZWQnO1xuICAgICAgICAgIGNvbnN0IHBhcmFtID0gbWFudWFsID8gcGFnZVBhcmFtIDogZ2V0UHJldmlvdXNQYWdlUGFyYW0oY29udGV4dC5vcHRpb25zLCBvbGRQYWdlcyk7XG4gICAgICAgICAgcHJvbWlzZSA9IGZldGNoUGFnZShvbGRQYWdlcywgbWFudWFsLCBwYXJhbSwgdHJ1ZSk7XG4gICAgICAgIH0gLy8gUmVmZXRjaCBwYWdlc1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBuZXdQYWdlUGFyYW1zID0gW107XG4gICAgICAgICAgY29uc3QgbWFudWFsID0gdHlwZW9mIGNvbnRleHQub3B0aW9ucy5nZXROZXh0UGFnZVBhcmFtID09PSAndW5kZWZpbmVkJztcbiAgICAgICAgICBjb25zdCBzaG91bGRGZXRjaEZpcnN0UGFnZSA9IHJlZmV0Y2hQYWdlICYmIG9sZFBhZ2VzWzBdID8gcmVmZXRjaFBhZ2Uob2xkUGFnZXNbMF0sIDAsIG9sZFBhZ2VzKSA6IHRydWU7IC8vIEZldGNoIGZpcnN0IHBhZ2VcblxuICAgICAgICAgIHByb21pc2UgPSBzaG91bGRGZXRjaEZpcnN0UGFnZSA/IGZldGNoUGFnZShbXSwgbWFudWFsLCBvbGRQYWdlUGFyYW1zWzBdKSA6IFByb21pc2UucmVzb2x2ZShidWlsZE5ld1BhZ2VzKFtdLCBvbGRQYWdlUGFyYW1zWzBdLCBvbGRQYWdlc1swXSkpOyAvLyBGZXRjaCByZW1haW5pbmcgcGFnZXNcblxuICAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgb2xkUGFnZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHByb21pc2UgPSBwcm9taXNlLnRoZW4ocGFnZXMgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBzaG91bGRGZXRjaE5leHRQYWdlID0gcmVmZXRjaFBhZ2UgJiYgb2xkUGFnZXNbaV0gPyByZWZldGNoUGFnZShvbGRQYWdlc1tpXSwgaSwgb2xkUGFnZXMpIDogdHJ1ZTtcblxuICAgICAgICAgICAgICBpZiAoc2hvdWxkRmV0Y2hOZXh0UGFnZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcmFtID0gbWFudWFsID8gb2xkUGFnZVBhcmFtc1tpXSA6IGdldE5leHRQYWdlUGFyYW0oY29udGV4dC5vcHRpb25zLCBwYWdlcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoUGFnZShwYWdlcywgbWFudWFsLCBwYXJhbSk7XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGJ1aWxkTmV3UGFnZXMocGFnZXMsIG9sZFBhZ2VQYXJhbXNbaV0sIG9sZFBhZ2VzW2ldKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBmaW5hbFByb21pc2UgPSBwcm9taXNlLnRoZW4ocGFnZXMgPT4gKHtcbiAgICAgICAgICBwYWdlcyxcbiAgICAgICAgICBwYWdlUGFyYW1zOiBuZXdQYWdlUGFyYW1zXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIGZpbmFsUHJvbWlzZTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuZnVuY3Rpb24gZ2V0TmV4dFBhZ2VQYXJhbShvcHRpb25zLCBwYWdlcykge1xuICByZXR1cm4gb3B0aW9ucy5nZXROZXh0UGFnZVBhcmFtID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdldE5leHRQYWdlUGFyYW0ocGFnZXNbcGFnZXMubGVuZ3RoIC0gMV0sIHBhZ2VzKTtcbn1cbmZ1bmN0aW9uIGdldFByZXZpb3VzUGFnZVBhcmFtKG9wdGlvbnMsIHBhZ2VzKSB7XG4gIHJldHVybiBvcHRpb25zLmdldFByZXZpb3VzUGFnZVBhcmFtID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLmdldFByZXZpb3VzUGFnZVBhcmFtKHBhZ2VzWzBdLCBwYWdlcyk7XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGVyZSBpcyBhIG5leHQgcGFnZS5cbiAqIFJldHVybnMgYHVuZGVmaW5lZGAgaWYgaXQgY2Fubm90IGJlIGRldGVybWluZWQuXG4gKi9cblxuZnVuY3Rpb24gaGFzTmV4dFBhZ2Uob3B0aW9ucywgcGFnZXMpIHtcbiAgaWYgKG9wdGlvbnMuZ2V0TmV4dFBhZ2VQYXJhbSAmJiBBcnJheS5pc0FycmF5KHBhZ2VzKSkge1xuICAgIGNvbnN0IG5leHRQYWdlUGFyYW0gPSBnZXROZXh0UGFnZVBhcmFtKG9wdGlvbnMsIHBhZ2VzKTtcbiAgICByZXR1cm4gdHlwZW9mIG5leHRQYWdlUGFyYW0gIT09ICd1bmRlZmluZWQnICYmIG5leHRQYWdlUGFyYW0gIT09IG51bGwgJiYgbmV4dFBhZ2VQYXJhbSAhPT0gZmFsc2U7XG4gIH1cblxuICByZXR1cm47XG59XG4vKipcbiAqIENoZWNrcyBpZiB0aGVyZSBpcyBhIHByZXZpb3VzIHBhZ2UuXG4gKiBSZXR1cm5zIGB1bmRlZmluZWRgIGlmIGl0IGNhbm5vdCBiZSBkZXRlcm1pbmVkLlxuICovXG5cbmZ1bmN0aW9uIGhhc1ByZXZpb3VzUGFnZShvcHRpb25zLCBwYWdlcykge1xuICBpZiAob3B0aW9ucy5nZXRQcmV2aW91c1BhZ2VQYXJhbSAmJiBBcnJheS5pc0FycmF5KHBhZ2VzKSkge1xuICAgIGNvbnN0IHByZXZpb3VzUGFnZVBhcmFtID0gZ2V0UHJldmlvdXNQYWdlUGFyYW0ob3B0aW9ucywgcGFnZXMpO1xuICAgIHJldHVybiB0eXBlb2YgcHJldmlvdXNQYWdlUGFyYW0gIT09ICd1bmRlZmluZWQnICYmIHByZXZpb3VzUGFnZVBhcmFtICE9PSBudWxsICYmIHByZXZpb3VzUGFnZVBhcmFtICE9PSBmYWxzZTtcbiAgfVxuXG4gIHJldHVybjtcbn1cblxuZXhwb3J0IHsgZ2V0TmV4dFBhZ2VQYXJhbSwgZ2V0UHJldmlvdXNQYWdlUGFyYW0sIGhhc05leHRQYWdlLCBoYXNQcmV2aW91c1BhZ2UsIGluZmluaXRlUXVlcnlCZWhhdmlvciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5maW5pdGVRdWVyeUJlaGF2aW9yLm1qcy5tYXBcbiIsImltcG9ydCB7IHBhcnNlRmlsdGVyQXJncywgcGFyc2VRdWVyeUFyZ3MsIGZ1bmN0aW9uYWxVcGRhdGUsIG5vb3AsIGhhc2hRdWVyeUtleSwgcGFydGlhbE1hdGNoS2V5LCBoYXNoUXVlcnlLZXlCeU9wdGlvbnMgfSBmcm9tICcuL3V0aWxzLm1qcyc7XG5pbXBvcnQgeyBRdWVyeUNhY2hlIH0gZnJvbSAnLi9xdWVyeUNhY2hlLm1qcyc7XG5pbXBvcnQgeyBNdXRhdGlvbkNhY2hlIH0gZnJvbSAnLi9tdXRhdGlvbkNhY2hlLm1qcyc7XG5pbXBvcnQgeyBmb2N1c01hbmFnZXIgfSBmcm9tICcuL2ZvY3VzTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgb25saW5lTWFuYWdlciB9IGZyb20gJy4vb25saW5lTWFuYWdlci5tanMnO1xuaW1wb3J0IHsgbm90aWZ5TWFuYWdlciB9IGZyb20gJy4vbm90aWZ5TWFuYWdlci5tanMnO1xuaW1wb3J0IHsgaW5maW5pdGVRdWVyeUJlaGF2aW9yIH0gZnJvbSAnLi9pbmZpbml0ZVF1ZXJ5QmVoYXZpb3IubWpzJztcbmltcG9ydCB7IGRlZmF1bHRMb2dnZXIgfSBmcm9tICcuL2xvZ2dlci5tanMnO1xuXG4vLyBDTEFTU1xuY2xhc3MgUXVlcnlDbGllbnQge1xuICBjb25zdHJ1Y3Rvcihjb25maWcgPSB7fSkge1xuICAgIHRoaXMucXVlcnlDYWNoZSA9IGNvbmZpZy5xdWVyeUNhY2hlIHx8IG5ldyBRdWVyeUNhY2hlKCk7XG4gICAgdGhpcy5tdXRhdGlvbkNhY2hlID0gY29uZmlnLm11dGF0aW9uQ2FjaGUgfHwgbmV3IE11dGF0aW9uQ2FjaGUoKTtcbiAgICB0aGlzLmxvZ2dlciA9IGNvbmZpZy5sb2dnZXIgfHwgZGVmYXVsdExvZ2dlcjtcbiAgICB0aGlzLmRlZmF1bHRPcHRpb25zID0gY29uZmlnLmRlZmF1bHRPcHRpb25zIHx8IHt9O1xuICAgIHRoaXMucXVlcnlEZWZhdWx0cyA9IFtdO1xuICAgIHRoaXMubXV0YXRpb25EZWZhdWx0cyA9IFtdO1xuICAgIHRoaXMubW91bnRDb3VudCA9IDA7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiBjb25maWcubG9nZ2VyKSB7XG4gICAgICB0aGlzLmxvZ2dlci5lcnJvcihcIlBhc3NpbmcgYSBjdXN0b20gbG9nZ2VyIGhhcyBiZWVuIGRlcHJlY2F0ZWQgYW5kIHdpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCBtYWpvciB2ZXJzaW9uLlwiKTtcbiAgICB9XG4gIH1cblxuICBtb3VudCgpIHtcbiAgICB0aGlzLm1vdW50Q291bnQrKztcbiAgICBpZiAodGhpcy5tb3VudENvdW50ICE9PSAxKSByZXR1cm47XG4gICAgdGhpcy51bnN1YnNjcmliZUZvY3VzID0gZm9jdXNNYW5hZ2VyLnN1YnNjcmliZSgoKSA9PiB7XG4gICAgICBpZiAoZm9jdXNNYW5hZ2VyLmlzRm9jdXNlZCgpKSB7XG4gICAgICAgIHRoaXMucmVzdW1lUGF1c2VkTXV0YXRpb25zKCk7XG4gICAgICAgIHRoaXMucXVlcnlDYWNoZS5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gICAgdGhpcy51bnN1YnNjcmliZU9ubGluZSA9IG9ubGluZU1hbmFnZXIuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgIGlmIChvbmxpbmVNYW5hZ2VyLmlzT25saW5lKCkpIHtcbiAgICAgICAgdGhpcy5yZXN1bWVQYXVzZWRNdXRhdGlvbnMoKTtcbiAgICAgICAgdGhpcy5xdWVyeUNhY2hlLm9uT25saW5lKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICB1bm1vdW50KCkge1xuICAgIHZhciBfdGhpcyR1bnN1YnNjcmliZUZvY3UsIF90aGlzJHVuc3Vic2NyaWJlT25saTtcblxuICAgIHRoaXMubW91bnRDb3VudC0tO1xuICAgIGlmICh0aGlzLm1vdW50Q291bnQgIT09IDApIHJldHVybjtcbiAgICAoX3RoaXMkdW5zdWJzY3JpYmVGb2N1ID0gdGhpcy51bnN1YnNjcmliZUZvY3VzKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkdW5zdWJzY3JpYmVGb2N1LmNhbGwodGhpcyk7XG4gICAgdGhpcy51bnN1YnNjcmliZUZvY3VzID0gdW5kZWZpbmVkO1xuICAgIChfdGhpcyR1bnN1YnNjcmliZU9ubGkgPSB0aGlzLnVuc3Vic2NyaWJlT25saW5lKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkdW5zdWJzY3JpYmVPbmxpLmNhbGwodGhpcyk7XG4gICAgdGhpcy51bnN1YnNjcmliZU9ubGluZSA9IHVuZGVmaW5lZDtcbiAgfVxuXG4gIGlzRmV0Y2hpbmcoYXJnMSwgYXJnMikge1xuICAgIGNvbnN0IFtmaWx0ZXJzXSA9IHBhcnNlRmlsdGVyQXJncyhhcmcxLCBhcmcyKTtcbiAgICBmaWx0ZXJzLmZldGNoU3RhdHVzID0gJ2ZldGNoaW5nJztcbiAgICByZXR1cm4gdGhpcy5xdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykubGVuZ3RoO1xuICB9XG5cbiAgaXNNdXRhdGluZyhmaWx0ZXJzKSB7XG4gICAgcmV0dXJuIHRoaXMubXV0YXRpb25DYWNoZS5maW5kQWxsKHsgLi4uZmlsdGVycyxcbiAgICAgIGZldGNoaW5nOiB0cnVlXG4gICAgfSkubGVuZ3RoO1xuICB9XG5cbiAgZ2V0UXVlcnlEYXRhKHF1ZXJ5S2V5LCBmaWx0ZXJzKSB7XG4gICAgdmFyIF90aGlzJHF1ZXJ5Q2FjaGUkZmluZDtcblxuICAgIHJldHVybiAoX3RoaXMkcXVlcnlDYWNoZSRmaW5kID0gdGhpcy5xdWVyeUNhY2hlLmZpbmQocXVlcnlLZXksIGZpbHRlcnMpKSA9PSBudWxsID8gdm9pZCAwIDogX3RoaXMkcXVlcnlDYWNoZSRmaW5kLnN0YXRlLmRhdGE7XG4gIH1cblxuICBlbnN1cmVRdWVyeURhdGEoYXJnMSwgYXJnMiwgYXJnMykge1xuICAgIGNvbnN0IHBhcnNlZE9wdGlvbnMgPSBwYXJzZVF1ZXJ5QXJncyhhcmcxLCBhcmcyLCBhcmczKTtcbiAgICBjb25zdCBjYWNoZWREYXRhID0gdGhpcy5nZXRRdWVyeURhdGEocGFyc2VkT3B0aW9ucy5xdWVyeUtleSk7XG4gICAgcmV0dXJuIGNhY2hlZERhdGEgPyBQcm9taXNlLnJlc29sdmUoY2FjaGVkRGF0YSkgOiB0aGlzLmZldGNoUXVlcnkocGFyc2VkT3B0aW9ucyk7XG4gIH1cblxuICBnZXRRdWVyaWVzRGF0YShxdWVyeUtleU9yRmlsdGVycykge1xuICAgIHJldHVybiB0aGlzLmdldFF1ZXJ5Q2FjaGUoKS5maW5kQWxsKHF1ZXJ5S2V5T3JGaWx0ZXJzKS5tYXAoKHtcbiAgICAgIHF1ZXJ5S2V5LFxuICAgICAgc3RhdGVcbiAgICB9KSA9PiB7XG4gICAgICBjb25zdCBkYXRhID0gc3RhdGUuZGF0YTtcbiAgICAgIHJldHVybiBbcXVlcnlLZXksIGRhdGFdO1xuICAgIH0pO1xuICB9XG5cbiAgc2V0UXVlcnlEYXRhKHF1ZXJ5S2V5LCB1cGRhdGVyLCBvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSB0aGlzLnF1ZXJ5Q2FjaGUuZmluZChxdWVyeUtleSk7XG4gICAgY29uc3QgcHJldkRhdGEgPSBxdWVyeSA9PSBudWxsID8gdm9pZCAwIDogcXVlcnkuc3RhdGUuZGF0YTtcbiAgICBjb25zdCBkYXRhID0gZnVuY3Rpb25hbFVwZGF0ZSh1cGRhdGVyLCBwcmV2RGF0YSk7XG5cbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnNlZE9wdGlvbnMgPSBwYXJzZVF1ZXJ5QXJncyhxdWVyeUtleSk7XG4gICAgY29uc3QgZGVmYXVsdGVkT3B0aW9ucyA9IHRoaXMuZGVmYXVsdFF1ZXJ5T3B0aW9ucyhwYXJzZWRPcHRpb25zKTtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUNhY2hlLmJ1aWxkKHRoaXMsIGRlZmF1bHRlZE9wdGlvbnMpLnNldERhdGEoZGF0YSwgeyAuLi5vcHRpb25zLFxuICAgICAgbWFudWFsOiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBzZXRRdWVyaWVzRGF0YShxdWVyeUtleU9yRmlsdGVycywgdXBkYXRlciwgb3B0aW9ucykge1xuICAgIHJldHVybiBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHRoaXMuZ2V0UXVlcnlDYWNoZSgpLmZpbmRBbGwocXVlcnlLZXlPckZpbHRlcnMpLm1hcCgoe1xuICAgICAgcXVlcnlLZXlcbiAgICB9KSA9PiBbcXVlcnlLZXksIHRoaXMuc2V0UXVlcnlEYXRhKHF1ZXJ5S2V5LCB1cGRhdGVyLCBvcHRpb25zKV0pKTtcbiAgfVxuXG4gIGdldFF1ZXJ5U3RhdGUocXVlcnlLZXksIGZpbHRlcnMpIHtcbiAgICB2YXIgX3RoaXMkcXVlcnlDYWNoZSRmaW5kMjtcblxuICAgIHJldHVybiAoX3RoaXMkcXVlcnlDYWNoZSRmaW5kMiA9IHRoaXMucXVlcnlDYWNoZS5maW5kKHF1ZXJ5S2V5LCBmaWx0ZXJzKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF90aGlzJHF1ZXJ5Q2FjaGUkZmluZDIuc3RhdGU7XG4gIH1cblxuICByZW1vdmVRdWVyaWVzKGFyZzEsIGFyZzIpIHtcbiAgICBjb25zdCBbZmlsdGVyc10gPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMik7XG4gICAgY29uc3QgcXVlcnlDYWNoZSA9IHRoaXMucXVlcnlDYWNoZTtcbiAgICBub3RpZnlNYW5hZ2VyLmJhdGNoKCgpID0+IHtcbiAgICAgIHF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKHF1ZXJ5ID0+IHtcbiAgICAgICAgcXVlcnlDYWNoZS5yZW1vdmUocXVlcnkpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH1cblxuICByZXNldFF1ZXJpZXMoYXJnMSwgYXJnMiwgYXJnMykge1xuICAgIGNvbnN0IFtmaWx0ZXJzLCBvcHRpb25zXSA9IHBhcnNlRmlsdGVyQXJncyhhcmcxLCBhcmcyLCBhcmczKTtcbiAgICBjb25zdCBxdWVyeUNhY2hlID0gdGhpcy5xdWVyeUNhY2hlO1xuICAgIGNvbnN0IHJlZmV0Y2hGaWx0ZXJzID0ge1xuICAgICAgdHlwZTogJ2FjdGl2ZScsXG4gICAgICAuLi5maWx0ZXJzXG4gICAgfTtcbiAgICByZXR1cm4gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB7XG4gICAgICBxdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykuZm9yRWFjaChxdWVyeSA9PiB7XG4gICAgICAgIHF1ZXJ5LnJlc2V0KCk7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiB0aGlzLnJlZmV0Y2hRdWVyaWVzKHJlZmV0Y2hGaWx0ZXJzLCBvcHRpb25zKTtcbiAgICB9KTtcbiAgfVxuXG4gIGNhbmNlbFF1ZXJpZXMoYXJnMSwgYXJnMiwgYXJnMykge1xuICAgIGNvbnN0IFtmaWx0ZXJzLCBjYW5jZWxPcHRpb25zID0ge31dID0gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuXG4gICAgaWYgKHR5cGVvZiBjYW5jZWxPcHRpb25zLnJldmVydCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNhbmNlbE9wdGlvbnMucmV2ZXJ0ID0gdHJ1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBwcm9taXNlcyA9IG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4gdGhpcy5xdWVyeUNhY2hlLmZpbmRBbGwoZmlsdGVycykubWFwKHF1ZXJ5ID0+IHF1ZXJ5LmNhbmNlbChjYW5jZWxPcHRpb25zKSkpO1xuICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihub29wKS5jYXRjaChub29wKTtcbiAgfVxuXG4gIGludmFsaWRhdGVRdWVyaWVzKGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICBjb25zdCBbZmlsdGVycywgb3B0aW9uc10gPSBwYXJzZUZpbHRlckFyZ3MoYXJnMSwgYXJnMiwgYXJnMyk7XG4gICAgcmV0dXJuIG5vdGlmeU1hbmFnZXIuYmF0Y2goKCkgPT4ge1xuICAgICAgdmFyIF9yZWYsIF9maWx0ZXJzJHJlZmV0Y2hUeXBlO1xuXG4gICAgICB0aGlzLnF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5mb3JFYWNoKHF1ZXJ5ID0+IHtcbiAgICAgICAgcXVlcnkuaW52YWxpZGF0ZSgpO1xuICAgICAgfSk7XG5cbiAgICAgIGlmIChmaWx0ZXJzLnJlZmV0Y2hUeXBlID09PSAnbm9uZScpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgICAgfVxuXG4gICAgICBjb25zdCByZWZldGNoRmlsdGVycyA9IHsgLi4uZmlsdGVycyxcbiAgICAgICAgdHlwZTogKF9yZWYgPSAoX2ZpbHRlcnMkcmVmZXRjaFR5cGUgPSBmaWx0ZXJzLnJlZmV0Y2hUeXBlKSAhPSBudWxsID8gX2ZpbHRlcnMkcmVmZXRjaFR5cGUgOiBmaWx0ZXJzLnR5cGUpICE9IG51bGwgPyBfcmVmIDogJ2FjdGl2ZSdcbiAgICAgIH07XG4gICAgICByZXR1cm4gdGhpcy5yZWZldGNoUXVlcmllcyhyZWZldGNoRmlsdGVycywgb3B0aW9ucyk7XG4gICAgfSk7XG4gIH1cblxuICByZWZldGNoUXVlcmllcyhhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgY29uc3QgW2ZpbHRlcnMsIG9wdGlvbnNdID0gcGFyc2VGaWx0ZXJBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIGNvbnN0IHByb21pc2VzID0gbm90aWZ5TWFuYWdlci5iYXRjaCgoKSA9PiB0aGlzLnF1ZXJ5Q2FjaGUuZmluZEFsbChmaWx0ZXJzKS5maWx0ZXIocXVlcnkgPT4gIXF1ZXJ5LmlzRGlzYWJsZWQoKSkubWFwKHF1ZXJ5ID0+IHtcbiAgICAgIHZhciBfb3B0aW9ucyRjYW5jZWxSZWZldGM7XG5cbiAgICAgIHJldHVybiBxdWVyeS5mZXRjaCh1bmRlZmluZWQsIHsgLi4ub3B0aW9ucyxcbiAgICAgICAgY2FuY2VsUmVmZXRjaDogKF9vcHRpb25zJGNhbmNlbFJlZmV0YyA9IG9wdGlvbnMgPT0gbnVsbCA/IHZvaWQgMCA6IG9wdGlvbnMuY2FuY2VsUmVmZXRjaCkgIT0gbnVsbCA/IF9vcHRpb25zJGNhbmNlbFJlZmV0YyA6IHRydWUsXG4gICAgICAgIG1ldGE6IHtcbiAgICAgICAgICByZWZldGNoUGFnZTogZmlsdGVycy5yZWZldGNoUGFnZVxuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9KSk7XG4gICAgbGV0IHByb21pc2UgPSBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbihub29wKTtcblxuICAgIGlmICghKG9wdGlvbnMgIT0gbnVsbCAmJiBvcHRpb25zLnRocm93T25FcnJvcikpIHtcbiAgICAgIHByb21pc2UgPSBwcm9taXNlLmNhdGNoKG5vb3ApO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9XG5cbiAgZmV0Y2hRdWVyeShhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgY29uc3QgcGFyc2VkT3B0aW9ucyA9IHBhcnNlUXVlcnlBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSB0aGlzLmRlZmF1bHRRdWVyeU9wdGlvbnMocGFyc2VkT3B0aW9ucyk7IC8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YW5uZXJsaW5zbGV5L3JlYWN0LXF1ZXJ5L2lzc3Vlcy82NTJcblxuICAgIGlmICh0eXBlb2YgZGVmYXVsdGVkT3B0aW9ucy5yZXRyeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucmV0cnkgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCBxdWVyeSA9IHRoaXMucXVlcnlDYWNoZS5idWlsZCh0aGlzLCBkZWZhdWx0ZWRPcHRpb25zKTtcbiAgICByZXR1cm4gcXVlcnkuaXNTdGFsZUJ5VGltZShkZWZhdWx0ZWRPcHRpb25zLnN0YWxlVGltZSkgPyBxdWVyeS5mZXRjaChkZWZhdWx0ZWRPcHRpb25zKSA6IFByb21pc2UucmVzb2x2ZShxdWVyeS5zdGF0ZS5kYXRhKTtcbiAgfVxuXG4gIHByZWZldGNoUXVlcnkoYXJnMSwgYXJnMiwgYXJnMykge1xuICAgIHJldHVybiB0aGlzLmZldGNoUXVlcnkoYXJnMSwgYXJnMiwgYXJnMykudGhlbihub29wKS5jYXRjaChub29wKTtcbiAgfVxuXG4gIGZldGNoSW5maW5pdGVRdWVyeShhcmcxLCBhcmcyLCBhcmczKSB7XG4gICAgY29uc3QgcGFyc2VkT3B0aW9ucyA9IHBhcnNlUXVlcnlBcmdzKGFyZzEsIGFyZzIsIGFyZzMpO1xuICAgIHBhcnNlZE9wdGlvbnMuYmVoYXZpb3IgPSBpbmZpbml0ZVF1ZXJ5QmVoYXZpb3IoKTtcbiAgICByZXR1cm4gdGhpcy5mZXRjaFF1ZXJ5KHBhcnNlZE9wdGlvbnMpO1xuICB9XG5cbiAgcHJlZmV0Y2hJbmZpbml0ZVF1ZXJ5KGFyZzEsIGFyZzIsIGFyZzMpIHtcbiAgICByZXR1cm4gdGhpcy5mZXRjaEluZmluaXRlUXVlcnkoYXJnMSwgYXJnMiwgYXJnMykudGhlbihub29wKS5jYXRjaChub29wKTtcbiAgfVxuXG4gIHJlc3VtZVBhdXNlZE11dGF0aW9ucygpIHtcbiAgICByZXR1cm4gdGhpcy5tdXRhdGlvbkNhY2hlLnJlc3VtZVBhdXNlZE11dGF0aW9ucygpO1xuICB9XG5cbiAgZ2V0UXVlcnlDYWNoZSgpIHtcbiAgICByZXR1cm4gdGhpcy5xdWVyeUNhY2hlO1xuICB9XG5cbiAgZ2V0TXV0YXRpb25DYWNoZSgpIHtcbiAgICByZXR1cm4gdGhpcy5tdXRhdGlvbkNhY2hlO1xuICB9XG5cbiAgZ2V0TG9nZ2VyKCkge1xuICAgIHJldHVybiB0aGlzLmxvZ2dlcjtcbiAgfVxuXG4gIGdldERlZmF1bHRPcHRpb25zKCkge1xuICAgIHJldHVybiB0aGlzLmRlZmF1bHRPcHRpb25zO1xuICB9XG5cbiAgc2V0RGVmYXVsdE9wdGlvbnMob3B0aW9ucykge1xuICAgIHRoaXMuZGVmYXVsdE9wdGlvbnMgPSBvcHRpb25zO1xuICB9XG5cbiAgc2V0UXVlcnlEZWZhdWx0cyhxdWVyeUtleSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMucXVlcnlEZWZhdWx0cy5maW5kKHggPT4gaGFzaFF1ZXJ5S2V5KHF1ZXJ5S2V5KSA9PT0gaGFzaFF1ZXJ5S2V5KHgucXVlcnlLZXkpKTtcblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIHJlc3VsdC5kZWZhdWx0T3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMucXVlcnlEZWZhdWx0cy5wdXNoKHtcbiAgICAgICAgcXVlcnlLZXksXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXRRdWVyeURlZmF1bHRzKHF1ZXJ5S2V5KSB7XG4gICAgaWYgKCFxdWVyeUtleSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9IC8vIEdldCB0aGUgZmlyc3QgbWF0Y2hpbmcgZGVmYXVsdHNcblxuXG4gICAgY29uc3QgZmlyc3RNYXRjaGluZ0RlZmF1bHRzID0gdGhpcy5xdWVyeURlZmF1bHRzLmZpbmQoeCA9PiBwYXJ0aWFsTWF0Y2hLZXkocXVlcnlLZXksIHgucXVlcnlLZXkpKTsgLy8gQWRkaXRpb25hbCBjaGVja3MgYW5kIGVycm9yIGluIGRldiBtb2RlXG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgLy8gUmV0cmlldmUgYWxsIG1hdGNoaW5nIGRlZmF1bHRzIGZvciB0aGUgZ2l2ZW4ga2V5XG4gICAgICBjb25zdCBtYXRjaGluZ0RlZmF1bHRzID0gdGhpcy5xdWVyeURlZmF1bHRzLmZpbHRlcih4ID0+IHBhcnRpYWxNYXRjaEtleShxdWVyeUtleSwgeC5xdWVyeUtleSkpOyAvLyBJdCBpcyBvayBub3QgaGF2aW5nIGRlZmF1bHRzLCBidXQgaXQgaXMgZXJyb3IgcHJvbmUgdG8gaGF2ZSBtb3JlIHRoYW4gMSBkZWZhdWx0IGZvciBhIGdpdmVuIGtleVxuXG4gICAgICBpZiAobWF0Y2hpbmdEZWZhdWx0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFwiW1F1ZXJ5Q2xpZW50XSBTZXZlcmFsIHF1ZXJ5IGRlZmF1bHRzIG1hdGNoIHdpdGgga2V5ICdcIiArIEpTT04uc3RyaW5naWZ5KHF1ZXJ5S2V5KSArIFwiJy4gVGhlIGZpcnN0IG1hdGNoaW5nIHF1ZXJ5IGRlZmF1bHRzIGFyZSB1c2VkLiBQbGVhc2UgY2hlY2sgaG93IHF1ZXJ5IGRlZmF1bHRzIGFyZSByZWdpc3RlcmVkLiBPcmRlciBkb2VzIG1hdHRlciBoZXJlLiBjZi4gaHR0cHM6Ly9yZWFjdC1xdWVyeS50YW5zdGFjay5jb20vcmVmZXJlbmNlL1F1ZXJ5Q2xpZW50I3F1ZXJ5Y2xpZW50c2V0cXVlcnlkZWZhdWx0cy5cIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpcnN0TWF0Y2hpbmdEZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZmlyc3RNYXRjaGluZ0RlZmF1bHRzLmRlZmF1bHRPcHRpb25zO1xuICB9XG5cbiAgc2V0TXV0YXRpb25EZWZhdWx0cyhtdXRhdGlvbktleSwgb3B0aW9ucykge1xuICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMubXV0YXRpb25EZWZhdWx0cy5maW5kKHggPT4gaGFzaFF1ZXJ5S2V5KG11dGF0aW9uS2V5KSA9PT0gaGFzaFF1ZXJ5S2V5KHgubXV0YXRpb25LZXkpKTtcblxuICAgIGlmIChyZXN1bHQpIHtcbiAgICAgIHJlc3VsdC5kZWZhdWx0T3B0aW9ucyA9IG9wdGlvbnM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubXV0YXRpb25EZWZhdWx0cy5wdXNoKHtcbiAgICAgICAgbXV0YXRpb25LZXksXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiBvcHRpb25zXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBnZXRNdXRhdGlvbkRlZmF1bHRzKG11dGF0aW9uS2V5KSB7XG4gICAgaWYgKCFtdXRhdGlvbktleSkge1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9IC8vIEdldCB0aGUgZmlyc3QgbWF0Y2hpbmcgZGVmYXVsdHNcblxuXG4gICAgY29uc3QgZmlyc3RNYXRjaGluZ0RlZmF1bHRzID0gdGhpcy5tdXRhdGlvbkRlZmF1bHRzLmZpbmQoeCA9PiBwYXJ0aWFsTWF0Y2hLZXkobXV0YXRpb25LZXksIHgubXV0YXRpb25LZXkpKTsgLy8gQWRkaXRpb25hbCBjaGVja3MgYW5kIGVycm9yIGluIGRldiBtb2RlXG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgLy8gUmV0cmlldmUgYWxsIG1hdGNoaW5nIGRlZmF1bHRzIGZvciB0aGUgZ2l2ZW4ga2V5XG4gICAgICBjb25zdCBtYXRjaGluZ0RlZmF1bHRzID0gdGhpcy5tdXRhdGlvbkRlZmF1bHRzLmZpbHRlcih4ID0+IHBhcnRpYWxNYXRjaEtleShtdXRhdGlvbktleSwgeC5tdXRhdGlvbktleSkpOyAvLyBJdCBpcyBvayBub3QgaGF2aW5nIGRlZmF1bHRzLCBidXQgaXQgaXMgZXJyb3IgcHJvbmUgdG8gaGF2ZSBtb3JlIHRoYW4gMSBkZWZhdWx0IGZvciBhIGdpdmVuIGtleVxuXG4gICAgICBpZiAobWF0Y2hpbmdEZWZhdWx0cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIHRoaXMubG9nZ2VyLmVycm9yKFwiW1F1ZXJ5Q2xpZW50XSBTZXZlcmFsIG11dGF0aW9uIGRlZmF1bHRzIG1hdGNoIHdpdGgga2V5ICdcIiArIEpTT04uc3RyaW5naWZ5KG11dGF0aW9uS2V5KSArIFwiJy4gVGhlIGZpcnN0IG1hdGNoaW5nIG11dGF0aW9uIGRlZmF1bHRzIGFyZSB1c2VkLiBQbGVhc2UgY2hlY2sgaG93IG11dGF0aW9uIGRlZmF1bHRzIGFyZSByZWdpc3RlcmVkLiBPcmRlciBkb2VzIG1hdHRlciBoZXJlLiBjZi4gaHR0cHM6Ly9yZWFjdC1xdWVyeS50YW5zdGFjay5jb20vcmVmZXJlbmNlL1F1ZXJ5Q2xpZW50I3F1ZXJ5Y2xpZW50c2V0bXV0YXRpb25kZWZhdWx0cy5cIik7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpcnN0TWF0Y2hpbmdEZWZhdWx0cyA9PSBudWxsID8gdm9pZCAwIDogZmlyc3RNYXRjaGluZ0RlZmF1bHRzLmRlZmF1bHRPcHRpb25zO1xuICB9XG5cbiAgZGVmYXVsdFF1ZXJ5T3B0aW9ucyhvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgIT0gbnVsbCAmJiBvcHRpb25zLl9kZWZhdWx0ZWQpIHtcbiAgICAgIHJldHVybiBvcHRpb25zO1xuICAgIH1cblxuICAgIGNvbnN0IGRlZmF1bHRlZE9wdGlvbnMgPSB7IC4uLnRoaXMuZGVmYXVsdE9wdGlvbnMucXVlcmllcyxcbiAgICAgIC4uLnRoaXMuZ2V0UXVlcnlEZWZhdWx0cyhvcHRpb25zID09IG51bGwgPyB2b2lkIDAgOiBvcHRpb25zLnF1ZXJ5S2V5KSxcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICBfZGVmYXVsdGVkOiB0cnVlXG4gICAgfTtcblxuICAgIGlmICghZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUhhc2ggJiYgZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUtleSkge1xuICAgICAgZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUhhc2ggPSBoYXNoUXVlcnlLZXlCeU9wdGlvbnMoZGVmYXVsdGVkT3B0aW9ucy5xdWVyeUtleSwgZGVmYXVsdGVkT3B0aW9ucyk7XG4gICAgfSAvLyBkZXBlbmRlbnQgZGVmYXVsdCB2YWx1ZXNcblxuXG4gICAgaWYgKHR5cGVvZiBkZWZhdWx0ZWRPcHRpb25zLnJlZmV0Y2hPblJlY29ubmVjdCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGRlZmF1bHRlZE9wdGlvbnMucmVmZXRjaE9uUmVjb25uZWN0ID0gZGVmYXVsdGVkT3B0aW9ucy5uZXR3b3JrTW9kZSAhPT0gJ2Fsd2F5cyc7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBkZWZhdWx0ZWRPcHRpb25zLnVzZUVycm9yQm91bmRhcnkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBkZWZhdWx0ZWRPcHRpb25zLnVzZUVycm9yQm91bmRhcnkgPSAhIWRlZmF1bHRlZE9wdGlvbnMuc3VzcGVuc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRlZmF1bHRlZE9wdGlvbnM7XG4gIH1cblxuICBkZWZhdWx0TXV0YXRpb25PcHRpb25zKG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyAhPSBudWxsICYmIG9wdGlvbnMuX2RlZmF1bHRlZCkge1xuICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgLi4udGhpcy5kZWZhdWx0T3B0aW9ucy5tdXRhdGlvbnMsXG4gICAgICAuLi50aGlzLmdldE11dGF0aW9uRGVmYXVsdHMob3B0aW9ucyA9PSBudWxsID8gdm9pZCAwIDogb3B0aW9ucy5tdXRhdGlvbktleSksXG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgX2RlZmF1bHRlZDogdHJ1ZVxuICAgIH07XG4gIH1cblxuICBjbGVhcigpIHtcbiAgICB0aGlzLnF1ZXJ5Q2FjaGUuY2xlYXIoKTtcbiAgICB0aGlzLm11dGF0aW9uQ2FjaGUuY2xlYXIoKTtcbiAgfVxuXG59XG5cbmV4cG9ydCB7IFF1ZXJ5Q2xpZW50IH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeUNsaWVudC5tanMubWFwXG4iLCJpbXBvcnQgUmVhY3QsIHsgUHJvcHNXaXRoQ2hpbGRyZW4sIGNyZWF0ZUNvbnRleHQsIHVzZUNvbnRleHQsIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0Jztcbi8vIEB0cy1leHBlY3QtZXJyb3IgYEBkZXJpdi9kZXJpdi1hcGlgIGlzIG5vdCBpbiBUeXBlU2NyaXB0LCBIZW5jZSB3ZSBpZ25vcmUgdGhlIFRTIGVycm9yLlxuaW1wb3J0IERlcml2QVBJQmFzaWMgZnJvbSAnQGRlcml2L2Rlcml2LWFwaS9kaXN0L0Rlcml2QVBJQmFzaWMnO1xuaW1wb3J0IHsgZ2V0QXBwSWQsIGdldFNvY2tldFVSTCwgdXNlV1MgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcblxudHlwZSBBUElDb250ZXh0RGF0YSA9IHtcbiAgICBkZXJpdkFQSTogRGVyaXZBUElCYXNpYyB8IG51bGw7XG4gICAgc3dpdGNoRW52aXJvbm1lbnQ6IChsb2dpbmlkOiBzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQVBJQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQ8QVBJQ29udGV4dERhdGEgfCBudWxsPihudWxsKTtcblxuZGVjbGFyZSBnbG9iYWwge1xuICAgIGludGVyZmFjZSBXaW5kb3cge1xuICAgICAgICBSZWFjdFF1ZXJ5Q2xpZW50PzogUXVlcnlDbGllbnQ7XG4gICAgICAgIERlcml2QVBJPzogUmVjb3JkPHN0cmluZywgRGVyaXZBUElCYXNpYz47XG4gICAgICAgIFdTQ29ubmVjdGlvbnM/OiBSZWNvcmQ8c3RyaW5nLCBXZWJTb2NrZXQ+O1xuICAgIH1cbn1cblxuLy8gVGhpcyBpcyBhIHRlbXBvcmFyeSB3b3JrYXJvdW5kIHRvIHNoYXJlIGEgc2luZ2xlIGBRdWVyeUNsaWVudGAgaW5zdGFuY2UgYmV0d2VlbiBhbGwgdGhlIHBhY2thZ2VzLlxuY29uc3QgZ2V0U2hhcmVkUXVlcnlDbGllbnRDb250ZXh0ID0gKCk6IFF1ZXJ5Q2xpZW50ID0+IHtcbiAgICBpZiAoIXdpbmRvdy5SZWFjdFF1ZXJ5Q2xpZW50KSB7XG4gICAgICAgIHdpbmRvdy5SZWFjdFF1ZXJ5Q2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KHtcbiAgICAgICAgICAgIGxvZ2dlcjoge1xuICAgICAgICAgICAgICAgIGxvZzogY29uc29sZS5sb2csIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgICAgIHdhcm46IGNvbnNvbGUud2FybiwgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICAgICAgZXJyb3I6ICgpID0+IG51bGwsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gd2luZG93LlJlYWN0UXVlcnlDbGllbnQ7XG59O1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgV2ViU29ja2V0IFVSTCBiYXNlZCBvbiB0aGUgY3VycmVudCBlbnZpcm9ubWVudC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFRoZSBXZWJTb2NrZXQgVVJMLlxuICovXG5jb25zdCBnZXRXZWJTb2NrZXRVUkwgPSAoKSA9PiB7XG4gICAgY29uc3QgZW5kcG9pbnQgPSBnZXRTb2NrZXRVUkwoKTtcbiAgICBjb25zdCBhcHBfaWQgPSBnZXRBcHBJZCgpO1xuICAgIGNvbnN0IGxhbmd1YWdlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2kxOG5fbGFuZ3VhZ2UnKTtcbiAgICBjb25zdCBicmFuZCA9ICdkZXJpdic7XG4gICAgY29uc3Qgd3NzX3VybCA9IGB3c3M6Ly8ke2VuZHBvaW50fS93ZWJzb2NrZXRzL3YzP2FwcF9pZD0ke2FwcF9pZH0mbD0ke2xhbmd1YWdlfSZicmFuZD0ke2JyYW5kfWA7XG5cbiAgICByZXR1cm4gd3NzX3VybDtcbn07XG5cbi8qKlxuICogUmV0cmlldmVzIG9yIGluaXRpYWxpemVzIGEgV2ViU29ja2V0IGluc3RhbmNlIGJhc2VkIG9uIHRoZSBwcm92aWRlZCBVUkwuXG4gKiBAcGFyYW0ge3N0cmluZ30gd3NzX3VybCAtIFRoZSBXZWJTb2NrZXQgVVJMLlxuICogQHJldHVybnMge1dlYlNvY2tldH0gVGhlIFdlYlNvY2tldCBpbnN0YW5jZSBhc3NvY2lhdGVkIHdpdGggdGhlIHByb3ZpZGVkIFVSTC5cbiAqL1xuY29uc3QgZ2V0V2Vic29ja2V0SW5zdGFuY2UgPSAod3NzX3VybDogc3RyaW5nLCBvbldTQ2xvc2U6ICgpID0+IHZvaWQpID0+IHtcbiAgICBpZiAoIXdpbmRvdy5XU0Nvbm5lY3Rpb25zKSB7XG4gICAgICAgIHdpbmRvdy5XU0Nvbm5lY3Rpb25zID0ge307XG4gICAgfVxuXG4gICAgY29uc3QgZXhpc3RpbmdXZWJzb2NrZXRJbnN0YW5jZSA9IHdpbmRvdy5XU0Nvbm5lY3Rpb25zW3dzc191cmxdO1xuICAgIGlmIChcbiAgICAgICAgIWV4aXN0aW5nV2Vic29ja2V0SW5zdGFuY2UgfHxcbiAgICAgICAgIShleGlzdGluZ1dlYnNvY2tldEluc3RhbmNlIGluc3RhbmNlb2YgV2ViU29ja2V0KSB8fFxuICAgICAgICBbMiwgM10uaW5jbHVkZXMoZXhpc3RpbmdXZWJzb2NrZXRJbnN0YW5jZS5yZWFkeVN0YXRlKVxuICAgICkge1xuICAgICAgICB3aW5kb3cuV1NDb25uZWN0aW9uc1t3c3NfdXJsXSA9IG5ldyBXZWJTb2NrZXQod3NzX3VybCk7XG4gICAgICAgIHdpbmRvdy5XU0Nvbm5lY3Rpb25zW3dzc191cmxdLmFkZEV2ZW50TGlzdGVuZXIoJ2Nsb3NlJywgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBvbldTQ2xvc2UgPT09ICdmdW5jdGlvbicpIG9uV1NDbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gd2luZG93LldTQ29ubmVjdGlvbnNbd3NzX3VybF07XG59O1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgYWN0aXZlIFdlYlNvY2tldCBpbnN0YW5jZS5cbiAqIEByZXR1cm5zIHtXZWJTb2NrZXR9IFRoZSBXZWJTb2NrZXQgaW5zdGFuY2UgYXNzb2NpYXRlZCB3aXRoIHRoZSBwcm92aWRlZCBVUkwuXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRBY3RpdmVXZWJzb2NrZXQgPSAoKSA9PiB7XG4gICAgY29uc3Qgd3NzX3VybCA9IGdldFdlYlNvY2tldFVSTCgpO1xuXG4gICAgcmV0dXJuIHdpbmRvdz8uV1NDb25uZWN0aW9ucz8uW3dzc191cmxdO1xufTtcblxuLyoqXG4gKiBJbml0aWFsaXplcyBhIERlcml2QVBJIGluc3RhbmNlIGZvciB0aGUgZ2xvYmFsIHdpbmRvdy4gVGhpcyBlbmFibGVzIGEgc3RhbmRhbG9uZSBjb25uZWN0aW9uXG4gKiB3aXRob3V0IGNhdXNpbmcgcmFjZSBjb25kaXRpb25zIHdpdGggZGVyaXYtYXBwIGNvcmUgc3RvcmVzLlxuICogQHJldHVybnMge0Rlcml2QVBJQmFzaWN9IFRoZSBpbml0aWFsaXplZCBEZXJpdkFQSSBpbnN0YW5jZS5cbiAqL1xuY29uc3QgaW5pdGlhbGl6ZURlcml2QVBJID0gKG9uV1NDbG9zZTogKCkgPT4gdm9pZCk6IERlcml2QVBJQmFzaWMgPT4ge1xuICAgIGlmICghd2luZG93LkRlcml2QVBJKSB7XG4gICAgICAgIHdpbmRvdy5EZXJpdkFQSSA9IHt9O1xuICAgIH1cblxuICAgIGNvbnN0IHdzc191cmwgPSBnZXRXZWJTb2NrZXRVUkwoKTtcbiAgICBjb25zdCB3ZWJzb2NrZXRDb25uZWN0aW9uID0gZ2V0V2Vic29ja2V0SW5zdGFuY2Uod3NzX3VybCwgb25XU0Nsb3NlKTtcblxuICAgIGlmICghd2luZG93LkRlcml2QVBJPy5bd3NzX3VybF0gfHwgd2luZG93LkRlcml2QVBJPy5bd3NzX3VybF0uaXNDb25uZWN0aW9uQ2xvc2VkKCkpIHtcbiAgICAgICAgd2luZG93LkRlcml2QVBJW3dzc191cmxdID0gbmV3IERlcml2QVBJQmFzaWMoeyBjb25uZWN0aW9uOiB3ZWJzb2NrZXRDb25uZWN0aW9uIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB3aW5kb3cuRGVyaXZBUEk/Llt3c3NfdXJsXTtcbn07XG5cbmNvbnN0IHF1ZXJ5Q2xpZW50ID0gZ2V0U2hhcmVkUXVlcnlDbGllbnRDb250ZXh0KCk7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB0aGUgV1MgZW52aXJvbm1lbnQgYmFzZWQgb24gdGhlIGxvZ2luIElEIGFuZCBjdXN0b20gc2VydmVyIFVSTC5cbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gbG9naW5pZCAtIFRoZSBsb2dpbiBJRCAoY2FuIGJlIGEgc3RyaW5nLCBudWxsLCBvciB1bmRlZmluZWQpLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgV1MgZW52aXJvbm1lbnQ6ICdjdXN0b20nLCAncmVhbCcsIG9yICdkZW1vJy5cbiAqL1xuY29uc3QgZ2V0RW52aXJvbm1lbnQgPSAobG9naW5pZDogc3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZCkgPT4ge1xuICAgIGNvbnN0IGN1c3RvbVNlcnZlclVSTCA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY29uZmlnLnNlcnZlcl91cmwnKTtcbiAgICBpZiAoY3VzdG9tU2VydmVyVVJMKSByZXR1cm4gJ2N1c3RvbSc7XG5cbiAgICBpZiAobG9naW5pZCAmJiAhL14oVlJUfFZSVykvLnRlc3QobG9naW5pZCkpIHJldHVybiAncmVhbCc7XG4gICAgcmV0dXJuICdkZW1vJztcbn07XG5cbnR5cGUgVEFQSVByb3ZpZGVyUHJvcHMgPSB7XG4gICAgLyoqIElmIHNldCB0byB0cnVlLCB0aGUgQVBJUHJvdmlkZXIgd2lsbCBpbnN0YW50aWF0ZSBpdCdzIG93biBzb2NrZXQgY29ubmVjdGlvbi4gKi9cbiAgICBzdGFuZGFsb25lPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IEFQSVByb3ZpZGVyID0gKHsgY2hpbGRyZW4sIHN0YW5kYWxvbmUgPSBmYWxzZSB9OiBQcm9wc1dpdGhDaGlsZHJlbjxUQVBJUHJvdmlkZXJQcm9wcz4pID0+IHtcbiAgICBjb25zdCBXUyA9IHVzZVdTKCk7XG4gICAgY29uc3QgW3JlY29ubmVjdCwgc2V0UmVjb25uZWN0XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBhY3RpdmVMb2dpbmlkID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCdhY3RpdmVfbG9naW5pZCcpO1xuICAgIGNvbnN0IFtlbnZpcm9ubWVudCwgc2V0RW52aXJvbm1lbnRdID0gdXNlU3RhdGUoZ2V0RW52aXJvbm1lbnQoYWN0aXZlTG9naW5pZCkpO1xuICAgIGNvbnN0IHN0YW5kYWxvbmVEZXJpdkFQSSA9IHVzZVJlZihzdGFuZGFsb25lID8gaW5pdGlhbGl6ZURlcml2QVBJKCgpID0+IHNldFJlY29ubmVjdCh0cnVlKSkgOiBudWxsKTtcblxuICAgIGNvbnN0IHN3aXRjaEVudmlyb25tZW50ID0gKGxvZ2luaWQ6IHN0cmluZyB8IG51bGwgfCB1bmRlZmluZWQpID0+IHtcbiAgICAgICAgaWYgKCFzdGFuZGFsb25lKSByZXR1cm47XG4gICAgICAgIGNvbnN0IGN1cnJlbnRFbnZpcm9ubWVudCA9IGdldEVudmlyb25tZW50KGxvZ2luaWQpO1xuICAgICAgICBpZiAoY3VycmVudEVudmlyb25tZW50ICE9PSAnY3VzdG9tJyAmJiBjdXJyZW50RW52aXJvbm1lbnQgIT09IGVudmlyb25tZW50KSB7XG4gICAgICAgICAgICBzZXRFbnZpcm9ubWVudChjdXJyZW50RW52aXJvbm1lbnQpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGxldCBpbnRlcnZhbF9pZDogTm9kZUpTLlRpbWVyO1xuXG4gICAgICAgIGlmIChzdGFuZGFsb25lKSB7XG4gICAgICAgICAgICBpbnRlcnZhbF9pZCA9IHNldEludGVydmFsKCgpID0+IHN0YW5kYWxvbmVEZXJpdkFQSS5jdXJyZW50Py5zZW5kKHsgcGluZzogMSB9KSwgMTAwMDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuICgpID0+IGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxfaWQpO1xuICAgIH0sIFtzdGFuZGFsb25lXSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBsZXQgcmVjb25uZWN0VGltZXJJZDogTm9kZUpTLlRpbWVvdXQ7XG4gICAgICAgIGlmIChzdGFuZGFsb25lIHx8IHJlY29ubmVjdCkge1xuICAgICAgICAgICAgc3RhbmRhbG9uZURlcml2QVBJLmN1cnJlbnQgPSBpbml0aWFsaXplRGVyaXZBUEkoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJlY29ubmVjdFRpbWVySWQgPSBzZXRUaW1lb3V0KCgpID0+IHNldFJlY29ubmVjdCh0cnVlKSwgNTAwKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgc2V0UmVjb25uZWN0KGZhbHNlKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoKSA9PiBjbGVhclRpbWVvdXQocmVjb25uZWN0VGltZXJJZCk7XG4gICAgfSwgW2Vudmlyb25tZW50LCByZWNvbm5lY3QsIHN0YW5kYWxvbmVdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxBUElDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGRlcml2QVBJOiBzdGFuZGFsb25lID8gc3RhbmRhbG9uZURlcml2QVBJLmN1cnJlbnQgOiBXUywgc3dpdGNoRW52aXJvbm1lbnQgfX0+XG4gICAgICAgICAgICA8UXVlcnlDbGllbnRQcm92aWRlciBjbGllbnQ9e3F1ZXJ5Q2xpZW50fT5cbiAgICAgICAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgICAgICAgICAgey8qIDxSZWFjdFF1ZXJ5RGV2dG9vbHMgLz4gKi99XG4gICAgICAgICAgICA8L1F1ZXJ5Q2xpZW50UHJvdmlkZXI+XG4gICAgICAgIDwvQVBJQ29udGV4dC5Qcm92aWRlcj5cbiAgICApO1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZUFQSUNvbnRleHQgPSAoKSA9PiB7XG4gICAgY29uc3QgY29udGV4dCA9IHVzZUNvbnRleHQoQVBJQ29udGV4dCk7XG4gICAgaWYgKCFjb250ZXh0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigndXNlQVBJQ29udGV4dCBtdXN0IGJlIHVzZWQgd2l0aGluIEFQSVByb3ZpZGVyJyk7XG4gICAgfVxuICAgIHJldHVybiBjb250ZXh0O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQVBJUHJvdmlkZXI7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUge1xuICAgIFRTb2NrZXRFbmRwb2ludE5hbWVzLFxuICAgIFRTb2NrZXRQYWdpbmF0ZWFibGVFbmRwb2ludE5hbWVzLFxuICAgIFRTb2NrZXRSZXF1ZXN0UGF5bG9hZCxcbiAgICBUU29ja2V0UmVzcG9uc2VEYXRhLFxuICAgIFRTb2NrZXRTdWJzY3JpYmFibGVFbmRwb2ludE5hbWVzLFxufSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgeyB1c2VBUElDb250ZXh0IH0gZnJvbSAnLi9BUElQcm92aWRlcic7XG5cbmNvbnN0IHVzZUFQSSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRlcml2QVBJIH0gPSB1c2VBUElDb250ZXh0KCk7XG5cbiAgICBjb25zdCBzZW5kID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIGFzeW5jIDxUIGV4dGVuZHMgVFNvY2tldEVuZHBvaW50TmFtZXMgfCBUU29ja2V0UGFnaW5hdGVhYmxlRW5kcG9pbnROYW1lcyA9IFRTb2NrZXRFbmRwb2ludE5hbWVzPihcbiAgICAgICAgICAgIG5hbWU6IFQsXG4gICAgICAgICAgICBwYXlsb2FkPzogVFNvY2tldFJlcXVlc3RQYXlsb2FkPFQ+XG4gICAgICAgICk6IFByb21pc2U8VFNvY2tldFJlc3BvbnNlRGF0YTxUPj4gPT4ge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBkZXJpdkFQST8uc2VuZCh7IFtuYW1lXTogMSwgLi4uKHBheWxvYWQgfHwge30pIH0pO1xuXG4gICAgICAgICAgICBpZiAocmVzcG9uc2UuZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyByZXNwb25zZS5lcnJvcjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICBbZGVyaXZBUEldXG4gICAgKTtcblxuICAgIGNvbnN0IHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKFxuICAgICAgICA8VCBleHRlbmRzIFRTb2NrZXRTdWJzY3JpYmFibGVFbmRwb2ludE5hbWVzPihcbiAgICAgICAgICAgIG5hbWU6IFQsXG4gICAgICAgICAgICBwYXlsb2FkPzogVFNvY2tldFJlcXVlc3RQYXlsb2FkPFQ+XG4gICAgICAgICk6IHtcbiAgICAgICAgICAgIHN1YnNjcmliZTogKFxuICAgICAgICAgICAgICAgIC8vIFRoZSB0eXBlIHdpbGwgYmUgaGFuZGxlZCBieSB0aGUgYHVzZVN1YnNjcmlwdGlvbmAgaG9vay5cbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgICAgICAgICAgICAgIG9uRGF0YTogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQsXG4gICAgICAgICAgICAgICAgLy8gVGhlIHR5cGUgd2lsbCBiZSBoYW5kbGVkIGJ5IHRoZSBgdXNlU3Vic2NyaXB0aW9uYCBob29rLlxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgICAgICAgICAgICAgb25FcnJvcjogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWRcbiAgICAgICAgICAgICkgPT4geyB1bnN1YnNjcmliZT86IFZvaWRGdW5jdGlvbiB9O1xuICAgICAgICB9ID0+IGRlcml2QVBJPy5zdWJzY3JpYmUoeyBbbmFtZV06IDEsIHN1YnNjcmliZTogMSwgLi4uKHBheWxvYWQgfHwge30pIH0pLFxuICAgICAgICBbZGVyaXZBUEldXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIHNlbmQsXG4gICAgICAgIHN1YnNjcmliZSxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQVBJO1xuIiwiaW1wb3J0IHsgdXNlSW5maW5pdGVRdWVyeSBhcyBfdXNlSW5maW5pdGVRdWVyeSB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XG5cbmltcG9ydCB0eXBlIHtcbiAgICBUU29ja2V0QWNjZXB0YWJsZVByb3BzLFxuICAgIFRTb2NrZXRFcnJvcixcbiAgICBUU29ja2V0UGFnaW5hdGF0ZWFibGVSZXF1ZXN0Q2xlYW5lZCxcbiAgICBUU29ja2V0UGFnaW5hdGVhYmxlRW5kcG9pbnROYW1lcyxcbiAgICBUU29ja2V0UmVxdWVzdEluZmluaXRlUXVlcnlPcHRpb25zLFxuICAgIFRTb2NrZXRSZXF1ZXN0UGF5bG9hZCxcbiAgICBUU29ja2V0UmVzcG9uc2VEYXRhLFxufSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB1c2VBUEkgZnJvbSAnLi91c2VBUEknO1xuaW1wb3J0IHsgZ2V0UXVlcnlLZXlzIH0gZnJvbSAnLi91dGlscyc7XG5cbmNvbnN0IHVzZUluZmluaXRlUXVlcnkgPSA8VCBleHRlbmRzIFRTb2NrZXRQYWdpbmF0ZWFibGVFbmRwb2ludE5hbWVzPihcbiAgICBuYW1lOiBULFxuICAgIC4uLnByb3BzOiBUU29ja2V0QWNjZXB0YWJsZVByb3BzPFQsIHRydWUsICd1c2VJbmZpbml0ZVF1ZXJ5Jz5cbikgPT4ge1xuICAgIGNvbnN0IHByb3AgPSBwcm9wcz8uWzBdO1xuICAgIGNvbnN0IHBheWxvYWQgPSBwcm9wICYmICdwYXlsb2FkJyBpbiBwcm9wID8gKHByb3AucGF5bG9hZCBhcyBUU29ja2V0UGFnaW5hdGF0ZWFibGVSZXF1ZXN0Q2xlYW5lZDxUPikgOiB1bmRlZmluZWQ7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHByb3AgJiYgJ29wdGlvbnMnIGluIHByb3AgPyAocHJvcC5vcHRpb25zIGFzIFRTb2NrZXRSZXF1ZXN0SW5maW5pdGVRdWVyeU9wdGlvbnM8VD4pIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHsgc2VuZCB9ID0gdXNlQVBJKCk7XG5cbiAgICBjb25zdCBpbml0aWFsX29mZnNldCA9IHBheWxvYWQ/Lm9mZnNldCB8fCAwO1xuICAgIGNvbnN0IGxpbWl0ID0gcGF5bG9hZD8ubGltaXQgfHwgNTA7XG5cbiAgICByZXR1cm4gX3VzZUluZmluaXRlUXVlcnk8VFNvY2tldFJlc3BvbnNlRGF0YTxUPiwgVFNvY2tldEVycm9yPFQ+PihcbiAgICAgICAgZ2V0UXVlcnlLZXlzKG5hbWUsIHBheWxvYWQpLFxuXG4gICAgICAgICh7IHBhZ2VQYXJhbSA9IDAgfSkgPT5cbiAgICAgICAgICAgIHNlbmQobmFtZSwge1xuICAgICAgICAgICAgICAgIC4uLnBheWxvYWQsXG4gICAgICAgICAgICAgICAgbGltaXQsXG4gICAgICAgICAgICAgICAgb2Zmc2V0OiBwYWdlUGFyYW0gKiBsaW1pdCArIGluaXRpYWxfb2Zmc2V0LFxuICAgICAgICAgICAgfSBhcyB1bmtub3duIGFzIFRTb2NrZXRSZXF1ZXN0UGF5bG9hZDxUPiksXG4gICAgICAgIHtcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICBnZXROZXh0UGFnZVBhcmFtOiBvcHRpb25zPy5nZXROZXh0UGFnZVBhcmFtID8gb3B0aW9ucy5nZXROZXh0UGFnZVBhcmFtIDogKF9sYXN0UGFnZSwgcGFnZXMpID0+IHBhZ2VzLmxlbmd0aCxcbiAgICAgICAgfVxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VJbmZpbml0ZVF1ZXJ5O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VNdXRhdGlvbiBhcyBfdXNlTXV0YXRpb24gfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknO1xuaW1wb3J0IHVzZUFQSSBmcm9tICcuL3VzZUFQSSc7XG5pbXBvcnQgdHlwZSB7XG4gICAgVFNvY2tldEFjY2VwdGFibGVQcm9wcyxcbiAgICBUU29ja2V0RW5kcG9pbnROYW1lcyxcbiAgICBUU29ja2V0RXJyb3IsXG4gICAgVFNvY2tldFJlcXVlc3RNdXRhdGlvbk9wdGlvbnMsXG4gICAgVFNvY2tldFJlcXVlc3RQYXlsb2FkLFxuICAgIFRTb2NrZXRSZXNwb25zZURhdGEsXG59IGZyb20gJy4uL3R5cGVzJztcblxuY29uc3QgdXNlTXV0YXRpb24gPSA8VCBleHRlbmRzIFRTb2NrZXRFbmRwb2ludE5hbWVzPihuYW1lOiBULCBvcHRpb25zPzogVFNvY2tldFJlcXVlc3RNdXRhdGlvbk9wdGlvbnM8VD4pID0+IHtcbiAgICBjb25zdCB7IHNlbmQgfSA9IHVzZUFQSSgpO1xuICAgIGNvbnN0IHtcbiAgICAgICAgbXV0YXRlOiBfbXV0YXRlLFxuICAgICAgICBtdXRhdGVBc3luYzogX211dGF0ZUFzeW5jLFxuICAgICAgICAuLi5yZXN0XG4gICAgfSA9IF91c2VNdXRhdGlvbjxUU29ja2V0UmVzcG9uc2VEYXRhPFQ+LCBUU29ja2V0RXJyb3I8VD4sIFRTb2NrZXRBY2NlcHRhYmxlUHJvcHM8VD4+KHByb3BzID0+IHtcbiAgICAgICAgY29uc3QgcHJvcCA9IHByb3BzPy5bMF07XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBwcm9wICYmICdwYXlsb2FkJyBpbiBwcm9wID8gKHByb3AucGF5bG9hZCBhcyBUU29ja2V0UmVxdWVzdFBheWxvYWQ8VD4pIDogdW5kZWZpbmVkO1xuXG4gICAgICAgIHJldHVybiBzZW5kKG5hbWUsIHBheWxvYWQpO1xuICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKC4uLnBheWxvYWQ6IFRTb2NrZXRBY2NlcHRhYmxlUHJvcHM8VD4pID0+IF9tdXRhdGUocGF5bG9hZCksIFtfbXV0YXRlXSk7XG4gICAgY29uc3QgbXV0YXRlQXN5bmMgPSB1c2VDYWxsYmFjaygoLi4ucGF5bG9hZDogVFNvY2tldEFjY2VwdGFibGVQcm9wczxUPikgPT4gX211dGF0ZUFzeW5jKHBheWxvYWQpLCBbX211dGF0ZUFzeW5jXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBtdXRhdGUsXG4gICAgICAgIG11dGF0ZUFzeW5jLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VNdXRhdGlvbjtcbiIsImltcG9ydCB7IHVzZVF1ZXJ5IGFzIF91c2VRdWVyeSB9IGZyb20gJ0B0YW5zdGFjay9yZWFjdC1xdWVyeSc7XG5pbXBvcnQgdHlwZSB7XG4gICAgVFNvY2tldEFjY2VwdGFibGVQcm9wcyxcbiAgICBUU29ja2V0RW5kcG9pbnROYW1lcyxcbiAgICBUU29ja2V0RXJyb3IsXG4gICAgVFNvY2tldFJlcXVlc3RQYXlsb2FkLFxuICAgIFRTb2NrZXRSZXF1ZXN0UXVlcnlPcHRpb25zLFxuICAgIFRTb2NrZXRSZXNwb25zZURhdGEsXG59IGZyb20gJy4uL3R5cGVzJztcbmltcG9ydCB1c2VBUEkgZnJvbSAnLi91c2VBUEknO1xuaW1wb3J0IHsgZ2V0UXVlcnlLZXlzIH0gZnJvbSAnLi91dGlscyc7XG5cbmNvbnN0IHVzZVF1ZXJ5ID0gPFQgZXh0ZW5kcyBUU29ja2V0RW5kcG9pbnROYW1lcz4obmFtZTogVCwgLi4ucHJvcHM6IFRTb2NrZXRBY2NlcHRhYmxlUHJvcHM8VCwgdHJ1ZT4pID0+IHtcbiAgICBjb25zdCBwcm9wID0gcHJvcHM/LlswXTtcbiAgICBjb25zdCBwYXlsb2FkID0gcHJvcCAmJiAncGF5bG9hZCcgaW4gcHJvcCA/IChwcm9wLnBheWxvYWQgYXMgVFNvY2tldFJlcXVlc3RQYXlsb2FkPFQ+KSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBvcHRpb25zID0gcHJvcCAmJiAnb3B0aW9ucycgaW4gcHJvcCA/IChwcm9wLm9wdGlvbnMgYXMgVFNvY2tldFJlcXVlc3RRdWVyeU9wdGlvbnM8VD4pIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IHsgc2VuZCB9ID0gdXNlQVBJKCk7XG5cbiAgICByZXR1cm4gX3VzZVF1ZXJ5PFRTb2NrZXRSZXNwb25zZURhdGE8VD4sIFRTb2NrZXRFcnJvcjxUPj4oXG4gICAgICAgIGdldFF1ZXJ5S2V5cyhuYW1lLCBwYXlsb2FkKSxcbiAgICAgICAgKCkgPT4gc2VuZChuYW1lLCBwYXlsb2FkKSxcbiAgICAgICAgb3B0aW9uc1xuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VRdWVyeTtcbiIsImltcG9ydCBncm91cEJ5IGZyb20gJ2xvZGFzaC5ncm91cGJ5JztcbmltcG9ydCBwaWNrQnkgZnJvbSAnbG9kYXNoLnBpY2tieSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5pbXBvcnQgeyBTdGF0ZW1lbnQgfSBmcm9tICdAZGVyaXYvYXBpLXR5cGVzJztcblxuY29uc3QgZ3JvdXBUcmFuc2FjdGlvbnNCeURheSA9ICh0cmFuc2FjdGlvbnM6IFN0YXRlbWVudFsndHJhbnNhY3Rpb25zJ10pID0+IHtcbiAgICBjb25zdCBncm91cGVkX3RyYW5zYWN0aW9ucyA9IHBpY2tCeShcbiAgICAgICAgZ3JvdXBCeSh0cmFuc2FjdGlvbnMsIHRyYW5zYWN0aW9uID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0cmFuc2FjdGlvbi50cmFuc2FjdGlvbl90aW1lXG4gICAgICAgICAgICAgICAgPyBtb21lbnQodHJhbnNhY3Rpb24udHJhbnNhY3Rpb25fdGltZSAqIDEwMDApXG4gICAgICAgICAgICAgICAgICAgICAgLnN0YXJ0T2YoJ2RheScpXG4gICAgICAgICAgICAgICAgICAgICAgLmZvcm1hdCgnREQgTU1NIFlZWVknKVxuICAgICAgICAgICAgICAgIDogbnVsbDtcbiAgICAgICAgfSksXG4gICAgICAgICh2YWx1ZSwga2V5KSA9PiBrZXkgIT09IG51bGxcbiAgICApO1xuXG4gICAgcmV0dXJuIGdyb3VwZWRfdHJhbnNhY3Rpb25zO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgZ3JvdXBUcmFuc2FjdGlvbnNCeURheTtcbiIsImV4cG9ydCB7IGRlZmF1bHQgYXMgZ2V0QWNjb3VudHNGcm9tTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9nZXRBY2NvdW50c0Zyb21Mb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBnZXRBY3RpdmVBdXRoVG9rZW5JREZyb21Mb2NhbFN0b3JhZ2UgfSBmcm9tICcuL2dldEFjdGl2ZUF1dGhUb2tlbklERnJvbUxvY2FsU3RvcmFnZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGdldEFjdGl2ZUxvZ2luSURGcm9tTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9nZXRBY3RpdmVMb2dpbklERnJvbUxvY2FsU3RvcmFnZSc7XG5leHBvcnQgeyBnZXRMb2NhbFN0b3JhZ2UgfSBmcm9tICcuL2dldExvY2FsU3RvcmFnZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGdldFdhbGxldEN1cnJlbmN5SWNvbiB9IGZyb20gJy4vZ2V0V2FsbGV0Q3VycmVuY3lJY29uJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZ3JvdXBUcmFuc2FjdGlvbnNCeURheSB9IGZyb20gJy4vZ3JvdXBUcmFuc2FjdGlvbnNCeURheSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIGdldFRydW5jYXRlZFN0cmluZyB9IGZyb20gJy4vZ2V0VHJ1bmNhdGVkU3RyaW5nJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdW5Gb3JtYXRMb2NhbGVTdHJpbmcgfSBmcm9tICcuL3VuRm9ybWF0TG9jYWxlU3RyaW5nJztcbmV4cG9ydCAqIGZyb20gJy4vcGFyc2UtdXJsJztcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlUXVlcnlDbGllbnQgfSBmcm9tICdAdGFuc3RhY2svcmVhY3QtcXVlcnknO1xuaW1wb3J0IHsgVFNvY2tldEVuZHBvaW50TmFtZXMgfSBmcm9tICcuLi90eXBlcyc7XG5cbnR5cGUgVE9wdGlvbnMgPSBQYXJhbWV0ZXJzPFJldHVyblR5cGU8dHlwZW9mIHVzZVF1ZXJ5Q2xpZW50PlsnaW52YWxpZGF0ZVF1ZXJpZXMnXT5bMV07XG5cbmNvbnN0IHVzZUludmFsaWRhdGVRdWVyeSA9ICgpID0+IHtcbiAgICBjb25zdCBxdWVyeUNsaWVudCA9IHVzZVF1ZXJ5Q2xpZW50KCk7XG5cbiAgICBjb25zdCBpbnZhbGlkYXRlID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIDxUIGV4dGVuZHMgVFNvY2tldEVuZHBvaW50TmFtZXM+KG5hbWU6IFQgfCBUW10sIG9wdGlvbnM/OiBUT3B0aW9ucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5Q2xpZW50LmludmFsaWRhdGVRdWVyaWVzKEFycmF5LmlzQXJyYXkobmFtZSkgPyBuYW1lIDogW25hbWVdLCBvcHRpb25zKTtcbiAgICAgICAgfSxcbiAgICAgICAgW3F1ZXJ5Q2xpZW50XVxuICAgICk7XG5cbiAgICByZXR1cm4gaW52YWxpZGF0ZTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUludmFsaWRhdGVRdWVyeTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0QWN0aXZlQXV0aFRva2VuSURGcm9tTG9jYWxTdG9yYWdlLCBnZXRBY3RpdmVMb2dpbklERnJvbUxvY2FsU3RvcmFnZSB9IGZyb20gJ0BkZXJpdi91dGlscyc7XG5pbXBvcnQgdXNlSW52YWxpZGF0ZVF1ZXJ5IGZyb20gJy4uL3VzZUludmFsaWRhdGVRdWVyeSc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHsgdXNlQVBJQ29udGV4dCB9IGZyb20gJy4uL0FQSVByb3ZpZGVyJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBhdXRob3JpemUgdGhlIHVzZXIgd2l0aCB0aGUgZ2l2ZW4gdG9rZW4uIElmIG5vIHRva2VuIGlzIGdpdmVuLFxuICogaXQgd2lsbCB1c2UgdGhlIGN1cnJlbnQgdG9rZW4gZnJvbSBsb2NhbFN0b3JhZ2UuXG4gKi9cbmNvbnN0IHVzZUF1dGhvcml6ZSA9ICgpID0+IHtcbiAgICBjb25zdCBjdXJyZW50X3Rva2VuID0gZ2V0QWN0aXZlQXV0aFRva2VuSURGcm9tTG9jYWxTdG9yYWdlKCk7XG4gICAgY29uc3QgaW52YWxpZGF0ZSA9IHVzZUludmFsaWRhdGVRdWVyeSgpO1xuICAgIGNvbnN0IHsgc3dpdGNoRW52aXJvbm1lbnQgfSA9IHVzZUFQSUNvbnRleHQoKTtcblxuICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ2F1dGhvcml6ZScsIHtcbiAgICAgICAgcGF5bG9hZDogeyBhdXRob3JpemU6IGN1cnJlbnRfdG9rZW4gfHwgJycgfSxcbiAgICAgICAgb3B0aW9uczogeyBlbmFibGVkOiBCb29sZWFuKGN1cnJlbnRfdG9rZW4pIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgYXV0aG9yaXplIHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX2F1dGhvcml6ZSA9IHVzZU1lbW8oKCkgPT4gKHsgLi4uZGF0YT8uYXV0aG9yaXplIH0pLCBbZGF0YT8uYXV0aG9yaXplXSk7XG5cbiAgICBjb25zdCBzd2l0Y2hBY2NvdW50ID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIChsb2dpbmlkOiBzdHJpbmcpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGl2ZV9sb2dpbmlkID0gZ2V0QWN0aXZlTG9naW5JREZyb21Mb2NhbFN0b3JhZ2UoKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVfbG9naW5pZCAhPT0gbG9naW5pZCkge1xuICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhY3RpdmVfbG9naW5pZCcsIGxvZ2luaWQpO1xuICAgICAgICAgICAgICAgIHN3aXRjaEVudmlyb25tZW50KGFjdGl2ZV9sb2dpbmlkKTtcbiAgICAgICAgICAgICAgICBpbnZhbGlkYXRlKCdhdXRob3JpemUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgW2ludmFsaWRhdGUsIHN3aXRjaEVudmlyb25tZW50XVxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGF1dGhvcml6ZSByZXNwb25zZS4gKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfYXV0aG9yaXplLFxuICAgICAgICAvKiogRnVuY3Rpb24gdG8gc3dpdGNoIHRvIGFub3RoZXIgYWNjb3VudCAqL1xuICAgICAgICBzd2l0Y2hBY2NvdW50LFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBdXRob3JpemU7XG4iLCJpbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZUF1dGhvcml6ZSBmcm9tICcuL3VzZUF1dGhvcml6ZSc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCBhY2NvdW50IGxpbWl0cyAqL1xuY29uc3QgdXNlQWNjb3VudExpbWl0cyA9ICgpID0+IHtcbiAgICBjb25zdCB7IGlzU3VjY2VzcyB9ID0gdXNlQXV0aG9yaXplKCk7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgnZ2V0X2xpbWl0cycsIHsgb3B0aW9uczogeyBlbmFibGVkOiBpc1N1Y2Nlc3MgfSB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBBY2NvdW50IGxpbWl0cyByZXNwb25zZSAqL1xuICAgICAgICBkYXRhOiBkYXRhPy5nZXRfbGltaXRzLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBY2NvdW50TGltaXRzO1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIHJldHJpZXZlcyB0aGUgYWNjb3VudCBzdGF0dXMgZm9yIHRoZSBjdXJyZW50IHVzZXIuICovXG5jb25zdCB1c2VHZXRBY2NvdW50U3RhdHVzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogZ2V0X2FjY291bnRfc3RhdHVzX2RhdGEsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCdnZXRfYWNjb3VudF9zdGF0dXMnKTtcblxuICAgIC8vIEFkZCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIHRoZSBhY2NvdW50IHN0YXR1cyByZXNwb25zZS5cbiAgICBjb25zdCBtb2RpZmllZF9hY2NvdW50X3N0YXR1cyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWdldF9hY2NvdW50X3N0YXR1c19kYXRhPy5nZXRfYWNjb3VudF9zdGF0dXMpIHJldHVybjtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uZ2V0X2FjY291bnRfc3RhdHVzX2RhdGEuZ2V0X2FjY291bnRfc3RhdHVzLFxuICAgICAgICAgICAgLyoqIEluZGljYXRlcyB3aGV0aGVyIHRoZSBjbGllbnQgc2hvdWxkIGJlIHByb21wdGVkIHRvIGF1dGhlbnRpY2F0ZSB0aGVpciBhY2NvdW50LiAqL1xuICAgICAgICAgICAgc2hvdWxkX3Byb21wdF9jbGllbnRfdG9fYXV0aGVudGljYXRlOiBCb29sZWFuKFxuICAgICAgICAgICAgICAgIGdldF9hY2NvdW50X3N0YXR1c19kYXRhLmdldF9hY2NvdW50X3N0YXR1cy5wcm9tcHRfY2xpZW50X3RvX2F1dGhlbnRpY2F0ZVxuICAgICAgICAgICAgKSxcbiAgICAgICAgfTtcbiAgICB9LCBbZ2V0X2FjY291bnRfc3RhdHVzX2RhdGE/LmdldF9hY2NvdW50X3N0YXR1c10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBhY2NvdW50IHN0YXR1cyByZXNwb25zZS4gKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfYWNjb3VudF9zdGF0dXMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUdldEFjY291bnRTdGF0dXM7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUdldEFjY291bnRTdGF0dXMgZnJvbSAnLi91c2VHZXRBY2NvdW50U3RhdHVzJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gY2hlY2sgdGhlIGFjY291bnQgc3RhdHVzIGZvciB0aGUgY3VycmVudCB1c2VyLiAqL1xuY29uc3QgdXNlQWNjb3VudFN0YXR1cyA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IGdldF9hY2NvdW50X3N0YXR1c19kYXRhLCAuLi5yZXN0IH0gPSB1c2VHZXRBY2NvdW50U3RhdHVzKCk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgYWNjb3VudCBzdGF0dXMgcmVzcG9uc2UuXG4gICAgY29uc3QgbW9kaWZpZWRfYWNjb3VudF9zdGF0dXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFnZXRfYWNjb3VudF9zdGF0dXNfZGF0YT8uc3RhdHVzKSByZXR1cm47XG5cbiAgICAgICAgY29uc3Qgc3RhdHVzID0gbmV3IFNldChnZXRfYWNjb3VudF9zdGF0dXNfZGF0YT8uc3RhdHVzKTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLyoqIEFjY291bnQgc3RhdHVzLiAqL1xuICAgICAgICAgICAgc3RhdHVzOiBnZXRfYWNjb3VudF9zdGF0dXNfZGF0YT8uc3RhdHVzLFxuICAgICAgICAgICAgLyoqIGNsaWVudCdzIGFkZHJlc3MgaXMgdmVyaWZpZWQgYnkgdGhpcmQgcGFydHkgc2VydmljZXMuICovXG4gICAgICAgICAgICBpc19hZGRyZXNzX3ZlcmlmaWVkOiBzdGF0dXMuaGFzKCdhZGRyZXNzX3ZlcmlmaWVkJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGlzIGFsbG93ZWQgdG8gdXBsb2FkIGRvY3VtZW50cy4gKi9cbiAgICAgICAgICAgIGlzX2FsbG93X2RvY3VtZW50X3VwbG9hZDogc3RhdHVzLmhhcygnYWxsb3dfZG9jdW1lbnRfdXBsb2FkJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGlzIGFnZS12ZXJpZmllZC4gKi9cbiAgICAgICAgICAgIGlzX2FnZV92ZXJpZmljYXRpb246IHN0YXR1cy5oYXMoJ2FnZV92ZXJpZmljYXRpb24nKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgaXMgZnVsbHkgYXV0aGVudGljYXRlZC4gKi9cbiAgICAgICAgICAgIGlzX2F1dGhlbnRpY2F0ZWQ6IHN0YXR1cy5oYXMoJ2F1dGhlbnRpY2F0ZWQnKSxcbiAgICAgICAgICAgIC8qKiBjYXNoaWVyIGlzIGxvY2tlZC4gKi9cbiAgICAgICAgICAgIGlzX2Nhc2hpZXJfbG9ja2VkOiBzdGF0dXMuaGFzKCdjYXNoaWVyX2xvY2tlZCcpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBoYXMgdXBkYXRlZCB0YXggcmVsYXRlZCBpbmZvcm1hdGlvbi4gKi9cbiAgICAgICAgICAgIGlzX2Nyc190aW5faW5mb3JtYXRpb246IHN0YXR1cy5oYXMoJ2Nyc190aW5faW5mb3JtYXRpb24nKSxcbiAgICAgICAgICAgIC8qKiBkZXBvc2l0IGlzIG5vdCBhbGxvd2VkLiAqL1xuICAgICAgICAgICAgaXNfZGVwb3NpdF9sb2NrZWQ6IHN0YXR1cy5oYXMoJ2RlcG9zaXRfbG9ja2VkJyksXG4gICAgICAgICAgICAvKiogYWNjb3VudCBpcyBkaXNhYmxlZC4gKi9cbiAgICAgICAgICAgIGlzX2Rpc2FibGVkOiBzdGF0dXMuaGFzKCdkaXNhYmxlZCcpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCdzIHN1Ym1pdHRlZCBwcm9vZi1vZi1pZGVudGl0eSBkb2N1bWVudHMgaGF2ZSBleHBpcmVkLiAqL1xuICAgICAgICAgICAgaXNfZG9jdW1lbnRfZXhwaXJlZDogc3RhdHVzLmhhcygnZG9jdW1lbnRfZXhwaXJlZCcpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCdzIHN1Ym1pdHRlZCBwcm9vZi1vZi1pZGVudGl0eSBkb2N1bWVudHMgYXJlIGV4cGlyaW5nIHdpdGhpbiBhIG1vbnRoLiAqL1xuICAgICAgICAgICAgaXNfZG9jdW1lbnRfZXhwaXJpbmdfc29vbjogc3RhdHVzLmhhcygnZG9jdW1lbnRfZXhwaXJpbmdfc29vbicpLFxuICAgICAgICAgICAgLyoqIERlcml2IFggcGFzc3dvcmQgaXMgbm90IHNldC4gKi9cbiAgICAgICAgICAgIGlzX2R4dHJhZGVfcGFzc3dvcmRfbm90X3NldDogc3RhdHVzLmhhcygnZHh0cmFkZV9wYXNzd29yZF9ub3Rfc2V0JyksXG4gICAgICAgICAgICAvKiogY2xpZW50IHNob3VsZCBjb21wbGV0ZSB0aGVpciBmaW5hbmNpYWwgYXNzZXNzbWVudC4gKi9cbiAgICAgICAgICAgIGlzX2ZpbmFuY2lhbF9hc3Nlc3NtZW50X25vdF9jb21wbGV0ZTogc3RhdHVzLmhhcygnZmluYW5jaWFsX2Fzc2Vzc21lbnRfbm90X2NvbXBsZXRlJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGhhcyBub3QgY29tcGxldGVkIGZpbmFuY2lhbCBhc3Nlc3NtZW50LiAqL1xuICAgICAgICAgICAgaXNfZmluYW5jaWFsX2luZm9ybWF0aW9uX25vdF9jb21wbGV0ZTogc3RhdHVzLmhhcygnZmluYW5jaWFsX2luZm9ybWF0aW9uX25vdF9jb21wbGV0ZScpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBoYXMgYWNjZXB0ZWQgZmluYW5jaWFsIHJpc2sgZGlzY2xvc3VyZS4gKi9cbiAgICAgICAgICAgIGlzX2ZpbmFuY2lhbF9yaXNrX2FwcHJvdmFsOiBzdGF0dXMuaGFzKCdmaW5hbmNpYWxfcmlza19hcHByb3ZhbCcpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBoYXMgbm90IHNldCBmaW5hbmNpYWwgbGltaXRzIG9uIHRoZWlyIGFjY291bnQuIEFwcGxpZXMgdG8gVUsgYW5kIE1hbHRhIGNsaWVudHMuICovXG4gICAgICAgICAgICBpc19tYXhfdHVybm92ZXJfbGltaXRfbm90X3NldDogc3RhdHVzLmhhcygnbWF4X3R1cm5vdmVyX2xpbWl0X25vdF9zZXQnKSxcbiAgICAgICAgICAgIC8qKiBNVDUgcGFzc3dvcmQgaXMgbm90IHNldC4gKi9cbiAgICAgICAgICAgIGlzX210NV9wYXNzd29yZF9ub3Rfc2V0OiBzdGF0dXMuaGFzKCdtdDVfcGFzc3dvcmRfbm90X3NldCcpLFxuICAgICAgICAgICAgLyoqIE1UNSBkZXBvc2l0cyBhbGxvd2VkLCBidXQgd2l0aGRyYXdhbCBpcyBub3QgYWxsb3dlZC4gKi9cbiAgICAgICAgICAgIGlzX210NV93aXRoZHJhd2FsX2xvY2tlZDogc3RhdHVzLmhhcygnbXQ1X3dpdGhkcmF3YWxfbG9ja2VkJyksXG4gICAgICAgICAgICAvKiogdXNlciBtdXN0IGFwcHJvdmUgdGhlIEFmZmlsaWF0ZSdzIENvZGUgb2YgQ29uZHVjdCBBZ3JlZW1lbnQuICovXG4gICAgICAgICAgICBpc19uZWVkc19hZmZpbGlhdGVfY29jX2FwcHJvdmFsOiBzdGF0dXMuaGFzKCduZWVkc19hZmZpbGlhdGVfY29jX2FwcHJvdmFsJyksXG4gICAgICAgICAgICAvKiogdHJhZGluZyBpcyBkaXNhYmxlZC4gKi9cbiAgICAgICAgICAgIGlzX25vX3RyYWRpbmc6IHN0YXR1cy5oYXMoJ25vX3RyYWRpbmcnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgY2Fubm90IHRyYWRlIG9yIHdpdGhkcmF3IGJ1dCBjYW4gZGVwb3NpdC4gKi9cbiAgICAgICAgICAgIGlzX25vX3dpdGhkcmF3YWxfb3JfdHJhZGluZzogc3RhdHVzLmhhcygnbm9fd2l0aGRyYXdhbF9vcl90cmFkaW5nJyksXG4gICAgICAgICAgICAvKiogcDJwIGlzIGJsb2NrZWQgZm9yIHRoZSBjdXJyZW50IHBheW1lbnQgYWdlbnQgY2xpZW50LiAqL1xuICAgICAgICAgICAgaXNfcDJwX2Jsb2NrZWRfZm9yX3BhOiBzdGF0dXMuaGFzKCdwMnBfYmxvY2tlZF9mb3JfcGEnKSxcbiAgICAgICAgICAgIC8qKiB3aXRoZHJhd2FsIHRocm91Z2ggcGF5bWVudCBhZ2VudCBpcyBhbGxvd2VkLiAqL1xuICAgICAgICAgICAgaXNfcGFfd2l0aGRyYXdhbF9leHBsaWNpdGx5X2FsbG93ZWQ6IHN0YXR1cy5oYXMoJ3BhX3dpdGhkcmF3YWxfZXhwbGljaXRseV9hbGxvd2VkJyksXG4gICAgICAgICAgICAvKiogdGhpcyBjbGllbnQgbXVzdCByZXNldCB0aGVpciBwYXNzd29yZC4gKi9cbiAgICAgICAgICAgIGlzX3Bhc3N3b3JkX3Jlc2V0X3JlcXVpcmVkOiBzdGF0dXMuaGFzKCdwYXNzd29yZF9yZXNldF9yZXF1aXJlZCcpLFxuICAgICAgICAgICAgLyoqIHRoaXMgY2xpZW50IGhhcyBvcHRlZCBmb3IgYSBwcm9mZXNzaW9uYWwgYWNjb3VudC4gKi9cbiAgICAgICAgICAgIGlzX3Byb2Zlc3Npb25hbDogc3RhdHVzLmhhcygncHJvZmVzc2lvbmFsJyksXG4gICAgICAgICAgICAvKiogdGhpcyBjbGllbnQgaGFzIHJlcXVlc3RlZCBmb3IgYSBwcm9mZXNzaW9uYWwgYWNjb3VudC4gKi9cbiAgICAgICAgICAgIGlzX3Byb2Zlc3Npb25hbF9yZXF1ZXN0ZWQ6IHN0YXR1cy5oYXMoJ3Byb2Zlc3Npb25hbF9yZXF1ZXN0ZWQnKSxcbiAgICAgICAgICAgIC8qKiB0aGlzIGNsaWVudCdzIHJlcXVlc3QgZm9yIGEgcHJvZmVzc2lvbmFsIGFjY291bnQgaGFzIGJlZW4gcmVqZWN0ZWQuICovXG4gICAgICAgICAgICBpc19wcm9mZXNzaW9uYWxfcmVqZWN0ZWQ6IHN0YXR1cy5oYXMoJ3Byb2Zlc3Npb25hbF9yZWplY3RlZCcpLFxuICAgICAgICAgICAgLyoqIHRoaXMgY2xpZW50IGlzIHVzaW5nIHNvY2lhbCBzaWdudXAuICovXG4gICAgICAgICAgICBpc19zb2NpYWxfc2lnbnVwOiBzdGF0dXMuaGFzKCdzb2NpYWxfc2lnbnVwJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGhhcyBub3QgY29tcGxldGVkIHRoZSB0cmFkaW5nIGV4cGVyaWVuY2UgcXVlc3Rpb25uYWlyZS4gKi9cbiAgICAgICAgICAgIGlzX3RyYWRpbmdfZXhwZXJpZW5jZV9ub3RfY29tcGxldGU6IHN0YXR1cy5oYXMoJ3RyYWRpbmdfZXhwZXJpZW5jZV9ub3RfY29tcGxldGUnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgaGFzIGFja25vd2xlZGdlZCBVS0dDIGZ1bmRzIHByb3RlY3Rpb24gbm90aWNlLiAqL1xuICAgICAgICAgICAgaXNfdWtnY19mdW5kc19wcm90ZWN0aW9uOiBzdGF0dXMuaGFzKCd1a2djX2Z1bmRzX3Byb3RlY3Rpb24nKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgY2Fubm90IGRlcG9zaXQgb3IgYnV5IGNvbnRyYWN0cywgYnV0IGNhbiB3aXRoZHJhdyBvciBzZWxsIGNvbnRyYWN0cy4gKi9cbiAgICAgICAgICAgIGlzX3Vud2VsY29tZTogc3RhdHVzLmhhcygndW53ZWxjb21lJyksXG4gICAgICAgICAgICAvKiogZGVwb3NpdHMgYWxsb3dlZCBidXQgd2l0aGRyYXdhbHMgYXJlIG5vdCBhbGxvd2VkLiAqL1xuICAgICAgICAgICAgaXNfd2l0aGRyYXdhbF9sb2NrZWQ6IHN0YXR1cy5oYXMoJ3dpdGhkcmF3YWxfbG9ja2VkJyksXG4gICAgICAgICAgICAvKiogdGhpcyBwcmV2ZW50IGEgY2xpZW50IGZyb20gY2hhbmdpbmcgdGhlIGFjY291bnQgY3VycmVuY3kgYWZ0ZXIgZGVwb3NpdCBhdHRlbXB0LiAqL1xuICAgICAgICAgICAgaXNfZGVwb3NpdF9hdHRlbXB0OiBzdGF0dXMuaGFzKCdkZXBvc2l0X2F0dGVtcHQnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgUE9JIGRvY3VtZW50cyBuYW1lIG1pc21hdGNoLiAqL1xuICAgICAgICAgICAgaXNfcG9pX25hbWVfbWlzbWF0Y2g6IHN0YXR1cy5oYXMoJ3BvaV9uYW1lX21pc21hdGNoJyksXG4gICAgICAgICAgICAvKiogdGhlIGNsaWVudCBjYW4gcmVzdWJtaXQgUE9BIGRvY3VtZW50cy4gKi9cbiAgICAgICAgICAgIGlzX2FsbG93X3BvYV9yZXN1Ym1pc3Npb246IHN0YXR1cy5oYXMoJ2FsbG93X3BvYV9yZXN1Ym1pc3Npb24nKSxcbiAgICAgICAgICAgIC8qKiB0aGUgY2xpZW50IGNhbiByZXN1Ym1pdCBQT0kgZG9jdW1lbnRzLiAqL1xuICAgICAgICAgICAgaXNfYWxsb3dfcG9pX3Jlc3VibWlzc2lvbjogc3RhdHVzLmhhcygnYWxsb3dfcG9pX3Jlc3VibWlzc2lvbicpLFxuICAgICAgICAgICAgLyoqIHRoZSBjbGllbnQgaGFzIGJlZW4gc2hhcmluZyBwYXltZW50IG1ldGhvZHMuICovXG4gICAgICAgICAgICBpc19zaGFyZWRfcGF5bWVudF9tZXRob2Q6IHN0YXR1cy5oYXMoJ3NoYXJlZF9wYXltZW50X21ldGhvZCcpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBpcyBub3QgYWxsb3dlZCB0byBlZGl0IHBlcnNvbmFsIHByb2ZpbGUgZGV0YWlscy4gKi9cbiAgICAgICAgICAgIGlzX3BlcnNvbmFsX2RldGFpbHNfbG9ja2VkOiBzdGF0dXMuaGFzKCdwZXJzb25hbF9kZXRhaWxzX2xvY2tlZCcpLFxuICAgICAgICAgICAgLyoqIGl0IGJsb2NrIGFueSB0cmFuc2ZlciBiZXR3ZWVuIHR3byBhY2NvdW50cy4gKi9cbiAgICAgICAgICAgIGlzX3RyYW5zZmVyc19ibG9ja2VkOiBzdGF0dXMuaGFzKCd0cmFuc2ZlcnNfYmxvY2tlZCcpLFxuICAgICAgICAgICAgLyoqIHRoZSBERiBkZXBvc2l0IHdpbGwgYmUgYmxvY2tlZCB1bnRpbCB0aGUgY2xpZW50IGdldHMgYWdlIHZlcmlmaWVkLiAqL1xuICAgICAgICAgICAgaXNfZGZfZGVwb3NpdF9yZXF1aXJlc19wb2k6IHN0YXR1cy5oYXMoJ2RmX2RlcG9zaXRfcmVxdWlyZXNfcG9pJyksXG4gICAgICAgICAgICAvKiogdGhlIGNsaWVudCBoYXMgYmVlbiBmdWxseSBhdXRoZW50aWNhdGVkIGJ5IElEVi4gKi9cbiAgICAgICAgICAgIGlzX2F1dGhlbnRpY2F0ZWRfd2l0aF9pZHZfcGhvdG9pZDogc3RhdHVzLmhhcygnYXV0aGVudGljYXRlZF93aXRoX2lkdl9waG90b2lkJyksXG4gICAgICAgICAgICAvKiogdGhlIGNsaWVudCB1c2VkIHRvIGJlIGZ1bGx5IGF1dGhlbnRpY2F0ZWQgYnkgSURWIGJ1dCBpdCB3YXMgdGFrZW4gYXdheSBkdWUgdG8gY29tcGxpYW5jZSBjcml0ZXJpYS4gKi9cbiAgICAgICAgICAgIGlzX2lkdl9yZXZva2VkOiBzdGF0dXMuaGFzKCdpZHZfcmV2b2tlZCcpLFxuICAgICAgICB9O1xuICAgIH0sIFtnZXRfYWNjb3VudF9zdGF0dXNfZGF0YT8uc3RhdHVzXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGFjY291bnQgc3RhdHVzIHJlc3BvbnNlLiAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9hY2NvdW50X3N0YXR1cyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQWNjb3VudFN0YXR1cztcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBnZXQgYXZhaWxhYmxlIGFjY291bnQgdHlwZXMgZm9yIGEgc3BlY2lmaWMgbGFuZGluZyBjb21wYW55LiAqL1xuY29uc3QgdXNlQWNjb3VudFR5cGVzID0gKGxhbmRpbmdfY29tcGFueT86IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ2dldF9hY2NvdW50X3R5cGVzJywge1xuICAgICAgICBwYXlsb2FkOiB7IGNvbXBhbnk6IGxhbmRpbmdfY29tcGFueSB9LFxuICAgICAgICBvcHRpb25zOiB7IGVuYWJsZWQ6IEJvb2xlYW4obGFuZGluZ19jb21wYW55KSB9LFxuICAgIH0pO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIGFjY291bnQgdHlwZXMgcmVzcG9uc2UuXG4gICAgY29uc3QgbW9kaWZpZWRfYWNjb3VudF90eXBlcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWRhdGE/LmdldF9hY2NvdW50X3R5cGVzKSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmRhdGEuZ2V0X2FjY291bnRfdHlwZXMsXG4gICAgICAgICAgICAvKiogTGFuZGluZyBjb21wYW55IGZvciB0aGUgYWNjb3VudCB0eXBlcyAqL1xuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55LFxuICAgICAgICB9O1xuICAgIH0sIFtkYXRhPy5nZXRfYWNjb3VudF90eXBlcywgbGFuZGluZ19jb21wYW55XSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGFjY291bnQgdHlwZXMgcmVzcG9uc2UuICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2FjY291bnRfdHlwZXMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUFjY291bnRUeXBlcztcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZUF1dGhvcml6ZSBmcm9tICcuL3VzZUF1dGhvcml6ZSc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyB0aGUgYmFsYW5jZSBmb3IgYWxsIHRoZSB1c2VyIGFjY291bnRzLiAqL1xuY29uc3QgdXNlQmFsYW5jZSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGlzU3VjY2VzcyB9ID0gdXNlQXV0aG9yaXplKCk7XG4gICAgY29uc3QgeyBkYXRhOiBiYWxhbmNlX2RhdGEsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCdiYWxhbmNlJywge1xuICAgICAgICBwYXlsb2FkOiB7IGFjY291bnQ6ICdhbGwnIH0sXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIGVuYWJsZWQ6IGlzU3VjY2VzcyxcbiAgICAgICAgICAgIHJlZmV0Y2hJbnRlcnZhbDogMzAwMDAsIC8vIFJlZmV0Y2ggZXZlcnkgMzAgc2Vjb25kcyB0byBzaW11bGF0ZSBzdWJzY3JpcHRpb24uXG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgYmFsYW5jZSBkYXRhLlxuICAgIGNvbnN0IG1vZGlmaWVkX2JhbGFuY2UgPSB1c2VNZW1vKCgpID0+ICh7IC4uLmJhbGFuY2VfZGF0YT8uYmFsYW5jZSB9KSwgW2JhbGFuY2VfZGF0YT8uYmFsYW5jZV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBiYWxhbmNlIHJlc3BvbnNlLiAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9iYWxhbmNlLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VCYWxhbmNlO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBnZXQgdGhlIGN1cnJlbmN5IGNvbmZpZyBpbmZvcm1hdGlvbiBmcm9tIGB3ZWJzaXRlX3N0YXR1c2AgZW5kcG9pbnQgYW5kIGBjcnlwdG9fY29uZmlnYCBlbmRwb2ludC4gKi9cbmNvbnN0IHVzZUN1cnJlbmN5Q29uZmlnID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogd2Vic2l0ZV9zdGF0dXNfZGF0YSwgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ3dlYnNpdGVfc3RhdHVzJyk7XG4gICAgY29uc3QgeyBkYXRhOiBjcnlwdG9fY29uZmlnX2RhdGEgfSA9IHVzZVF1ZXJ5KCdjcnlwdG9fY29uZmlnJyk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgY3VycmVuY3kgY29uZmlnLlxuICAgIGNvbnN0IG1vZGlmaWVkX2N1cnJlbmNpZXNfY29uZmlnID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghd2Vic2l0ZV9zdGF0dXNfZGF0YT8ud2Vic2l0ZV9zdGF0dXM/LmN1cnJlbmNpZXNfY29uZmlnKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICAgIGNvbnN0IHdlYnNpdGVfc3RhdHVzX2N1cnJlbmNpZXNfY29uZmlnID0gd2Vic2l0ZV9zdGF0dXNfZGF0YS53ZWJzaXRlX3N0YXR1cy5jdXJyZW5jaWVzX2NvbmZpZztcblxuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMod2Vic2l0ZV9zdGF0dXNfY3VycmVuY2llc19jb25maWcpLm1hcChjdXJyZW5jeSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW5jeV9jb25maWcgPSB3ZWJzaXRlX3N0YXR1c19jdXJyZW5jaWVzX2NvbmZpZ1tjdXJyZW5jeV07XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uY3VycmVuY3lfY29uZmlnLFxuICAgICAgICAgICAgICAgIC8qKiBkZXRlcm1pbmUgaWYgdGhlIGN1cnJlbmN5IGlzIGEgYGNyeXB0b2AgY3VycmVuY3kgKi9cbiAgICAgICAgICAgICAgICBpc19jcnlwdG86IGN1cnJlbmN5X2NvbmZpZz8udHlwZSA9PT0gJ2NyeXB0bycsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYSBgZmlhdGAgY3VycmVuY3kgKi9cbiAgICAgICAgICAgICAgICBpc19maWF0OiBjdXJyZW5jeV9jb25maWc/LnR5cGUgPT09ICdmaWF0JyxcbiAgICAgICAgICAgICAgICAvKiogZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW5jeSBpcyBgQXVzdHJhbGlhbiBEb2xsYXJgICovXG4gICAgICAgICAgICAgICAgaXNfQVVEOiBjdXJyZW5jeSA9PT0gJ0FVRCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFVTIERvbGxhcmAgKi9cbiAgICAgICAgICAgICAgICBpc19VU0Q6IGN1cnJlbmN5ID09PSAnVVNEJyxcbiAgICAgICAgICAgICAgICAvKiogZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW5jeSBpcyBgRXVyb2AgKi9cbiAgICAgICAgICAgICAgICBpc19FVVI6IGN1cnJlbmN5ID09PSAnRVVSJyxcbiAgICAgICAgICAgICAgICAvKiogZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW5jeSBpcyBgUG91bmQgU3RlcmxpbmdgICovXG4gICAgICAgICAgICAgICAgaXNfR0JQOiBjdXJyZW5jeSA9PT0gJ0dCUCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYEJpdGNvaW5gICovXG4gICAgICAgICAgICAgICAgaXNfQlRDOiBjdXJyZW5jeSA9PT0gJ0JUQycsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYEV0aGVyZXVtYCAqL1xuICAgICAgICAgICAgICAgIGlzX0VUSDogY3VycmVuY3kgPT09ICdFVEgnLFxuICAgICAgICAgICAgICAgIC8qKiBkZXRlcm1pbmUgaWYgdGhlIGN1cnJlbmN5IGlzIGBMaXRlY29pbmAgKi9cbiAgICAgICAgICAgICAgICBpc19MVEM6IGN1cnJlbmN5ID09PSAnTFRDJyxcbiAgICAgICAgICAgICAgICAvKiogZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW5jeSBpcyBgTXVsdGktQ29sbGF0ZXJhbCBEQUlgICovXG4gICAgICAgICAgICAgICAgaXNfREFJOiBjdXJyZW5jeSA9PT0gJ0RBSScsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYElES2AgKi9cbiAgICAgICAgICAgICAgICBpc19JREs6IGN1cnJlbmN5ID09PSAnSURLJyxcbiAgICAgICAgICAgICAgICAvKiogZGV0ZXJtaW5lIGlmIHRoZSBjdXJyZW5jeSBpcyBgUGF4b3MgU3RhbmRhcmRgICovXG4gICAgICAgICAgICAgICAgaXNfUEFYOiBjdXJyZW5jeSA9PT0gJ1BBWCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYEJpbmFyeSBDb2luYCAqL1xuICAgICAgICAgICAgICAgIGlzX1VTQjogY3VycmVuY3kgPT09ICdVU0InLFxuICAgICAgICAgICAgICAgIC8qKiBkZXRlcm1pbmUgaWYgdGhlIGN1cnJlbmN5IGlzIGBUZXRoZXIgT21uaWAgKi9cbiAgICAgICAgICAgICAgICBpc19VU0RUOiBjdXJyZW5jeSA9PT0gJ1VTVCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFRydWUgVVNEYCAqL1xuICAgICAgICAgICAgICAgIGlzX1RVU0Q6IGN1cnJlbmN5ID09PSAnVFVTRCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYEJpbmFuY2UgVVNEYCAqL1xuICAgICAgICAgICAgICAgIGlzX0JVU0Q6IGN1cnJlbmN5ID09PSAnQlVTRCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFNUQVRJUyBFdXJvYCAqL1xuICAgICAgICAgICAgICAgIGlzX0VVUlM6IGN1cnJlbmN5ID09PSAnRVVSUycsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFRldGhlciBFUkMyMGAgKi9cbiAgICAgICAgICAgICAgICBpc19lVVNEVDogY3VycmVuY3kgPT09ICdlVVNEVCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFRldGhlciBUUkMyMGAgKi9cbiAgICAgICAgICAgICAgICBpc190VVNEVDogY3VycmVuY3kgPT09ICd0VVNEVCcsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFVTRCBDb2luYCAqL1xuICAgICAgICAgICAgICAgIGlzX1VTREM6IGN1cnJlbmN5ID09PSAnVVNEQycsXG4gICAgICAgICAgICAgICAgLyoqIGRldGVybWluZSBpZiB0aGUgY3VycmVuY3kgaXMgYFVTREtgICovXG4gICAgICAgICAgICAgICAgaXNfVVNESzogY3VycmVuY3kgPT09ICdVU0RLJyxcbiAgICAgICAgICAgICAgICAvKiogQ3VycmVuY3kgY29kZSAqL1xuICAgICAgICAgICAgICAgIGNvZGU6IGN1cnJlbmN5LFxuICAgICAgICAgICAgICAgIC8qKiBDdXJyZW5jeSBkaXNwbGF5IGNvZGUgKi9cbiAgICAgICAgICAgICAgICBkaXNwbGF5X2NvZGU6IGN1cnJlbmN5ID09PSAnVVNUJyA/ICdVU0RUJyA6IGN1cnJlbmN5LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfSwgW3dlYnNpdGVfc3RhdHVzX2RhdGE/LndlYnNpdGVfc3RhdHVzPy5jdXJyZW5jaWVzX2NvbmZpZ10pO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIGNyeXB0byBjb25maWcuXG4gICAgY29uc3QgbW9kaWZpZWRfY3J5cHRvX2NvbmZpZyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gbW9kaWZpZWRfY3VycmVuY2llc19jb25maWc/Lm1hcChjdXJyZW5jeV9jb25maWcgPT4gKHtcbiAgICAgICAgICAgIC4uLmN1cnJlbmN5X2NvbmZpZyxcbiAgICAgICAgICAgIC4uLmNyeXB0b19jb25maWdfZGF0YT8uY3J5cHRvX2NvbmZpZz8uY3VycmVuY2llc19jb25maWdbY3VycmVuY3lfY29uZmlnLmNvZGVdLFxuICAgICAgICB9KSk7XG4gICAgfSwgW2NyeXB0b19jb25maWdfZGF0YT8uY3J5cHRvX2NvbmZpZz8uY3VycmVuY2llc19jb25maWcsIG1vZGlmaWVkX2N1cnJlbmNpZXNfY29uZmlnXSk7XG5cbiAgICAvLyBUcmFuc2Zvcm0gdGhlIGN1cnJlbmN5IGNvbmZpZyBhcnJheSBpbnRvIGEgcmVjb3JkIG9iamVjdC5cbiAgICBjb25zdCB0cmFuc2Zvcm1lZF9jdXJyZW5jaWVzX2NvbmZpZyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gbW9kaWZpZWRfY3J5cHRvX2NvbmZpZz8ucmVkdWNlPFJlY29yZDxzdHJpbmcsIHR5cGVvZiBtb2RpZmllZF9jcnlwdG9fY29uZmlnW251bWJlcl0+PihcbiAgICAgICAgICAgIChwcmV2aW91cywgY3VycmVudCkgPT4gKHsgLi4ucHJldmlvdXMsIFtjdXJyZW50LmNvZGVdOiBjdXJyZW50IH0pLFxuICAgICAgICAgICAge31cbiAgICAgICAgKTtcbiAgICB9LCBbbW9kaWZpZWRfY3J5cHRvX2NvbmZpZ10pO1xuXG4gICAgY29uc3QgZ2V0Q29uZmlnID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIChjdXJyZW5jeTogc3RyaW5nKSA9PiB0cmFuc2Zvcm1lZF9jdXJyZW5jaWVzX2NvbmZpZz8uW2N1cnJlbmN5XSxcbiAgICAgICAgW3RyYW5zZm9ybWVkX2N1cnJlbmNpZXNfY29uZmlnXVxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogQXZhaWxhYmxlIGN1cnJlbmNpZXMgYW5kIHRoZWlyIGluZm9ybWF0aW9uICovXG4gICAgICAgIGRhdGE6IHRyYW5zZm9ybWVkX2N1cnJlbmNpZXNfY29uZmlnLFxuICAgICAgICAvKiogUmV0dXJucyB0aGUgY3VycmVuY3kgY29uZmlnIG9iamVjdCBmb3IgdGhlIGdpdmVuIGN1cnJlbmN5ICovXG4gICAgICAgIGdldENvbmZpZyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3VycmVuY3lDb25maWc7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUF1dGhvcml6ZSBmcm9tICcuL3VzZUF1dGhvcml6ZSc7XG5pbXBvcnQgdXNlQmFsYW5jZSBmcm9tICcuL3VzZUJhbGFuY2UnO1xuaW1wb3J0IHVzZUN1cnJlbmN5Q29uZmlnIGZyb20gJy4vdXNlQ3VycmVuY3lDb25maWcnO1xuaW1wb3J0IHsgZGlzcGxheU1vbmV5IH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IHJldHVybnMgdGhlIGxpc3Qgb2YgYWNjb3VudHMgZm9yIHRoZSBjdXJyZW50IHVzZXIuICovXG5jb25zdCB1c2VEZXJpdkFjY291bnRzTGlzdCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IGF1dGhvcml6ZV9kYXRhLCAuLi5yZXN0IH0gPSB1c2VBdXRob3JpemUoKTtcbiAgICBjb25zdCB7IGRhdGE6IGJhbGFuY2VfZGF0YSB9ID0gdXNlQmFsYW5jZSgpO1xuICAgIGNvbnN0IHsgZ2V0Q29uZmlnIH0gPSB1c2VDdXJyZW5jeUNvbmZpZygpO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIGF1dGhvcml6ZSByZXNwb25zZS5cbiAgICBjb25zdCBtb2RpZmllZF9hY2NvdW50cyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gYXV0aG9yaXplX2RhdGEuYWNjb3VudF9saXN0Py5tYXAoYWNjb3VudCA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLmFjY291bnQsXG4gICAgICAgICAgICAgICAgLyoqIENyZWF0aW9uIHRpbWUgb2YgdGhlIGFjY291bnQuICovXG4gICAgICAgICAgICAgICAgY3JlYXRlZF9hdDogYWNjb3VudC5jcmVhdGVkX2F0ID8gbmV3IERhdGUoYWNjb3VudC5jcmVhdGVkX2F0KSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAvKiogQWNjb3VudCdzIGN1cnJlbmN5IGNvbmZpZyBpbmZvcm1hdGlvbiAqL1xuICAgICAgICAgICAgICAgIGN1cnJlbmN5X2NvbmZpZzogYWNjb3VudC5jdXJyZW5jeSA/IGdldENvbmZpZyhhY2NvdW50LmN1cnJlbmN5KSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAvKiogRGF0ZSB0aWxsIGNsaWVudCBoYXMgZXhjbHVkZWQgaGltL2hlcnNlbGYgZnJvbSB0aGUgd2Vic2l0ZSwgb25seSBwcmVzZW50IGlmIGNsaWVudCBpcyBzZWxmIGV4Y2x1ZGVkLiAqL1xuICAgICAgICAgICAgICAgIGV4Y2x1ZGVkX3VudGlsOiBhY2NvdW50LmV4Y2x1ZGVkX3VudGlsID8gbmV3IERhdGUoYWNjb3VudC5leGNsdWRlZF91bnRpbCkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgLyoqIEluZGljYXRpbmcgd2hldGhlciB0aGUgd2FsbGV0IGlzIHRoZSBjdXJyZW50bHkgYWN0aXZlIGFjY291bnQuICovXG4gICAgICAgICAgICAgICAgaXNfYWN0aXZlOiBhY2NvdW50LmxvZ2luaWQgPT09IGF1dGhvcml6ZV9kYXRhLmxvZ2luaWQsXG4gICAgICAgICAgICAgICAgLyoqIGluZGljYXRpbmcgd2hldGhlciB0aGUgYWNjb3VudCBpcyBtYXJrZWQgYXMgZGlzYWJsZWQgb3Igbm90LiAqL1xuICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkOiBCb29sZWFuKGFjY291bnQuaXNfZGlzYWJsZWQpLFxuICAgICAgICAgICAgICAgIC8qKiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIGFjY291bnQgaXMgYSB0cmFkaW5nIGFjY291bnQuICovXG4gICAgICAgICAgICAgICAgaXNfdHJhZGluZzogYWNjb3VudC5hY2NvdW50X2NhdGVnb3J5ID09PSAndHJhZGluZycsXG4gICAgICAgICAgICAgICAgLyoqIGluZGljYXRpbmcgd2hldGhlciB0aGUgYWNjb3VudCBpcyBhIHZpcnR1YWwtbW9uZXkgYWNjb3VudC4gKi9cbiAgICAgICAgICAgICAgICBpc192aXJ0dWFsOiBCb29sZWFuKGFjY291bnQuaXNfdmlydHVhbCksXG4gICAgICAgICAgICAgICAgLyoqIGluZGljYXRpbmcgd2hldGhlciB0aGUgYWNjb3VudCBpcyBhIHdhbGxldCBhY2NvdW50LiAqL1xuICAgICAgICAgICAgICAgIGlzX3dhbGxldDogYWNjb3VudC5hY2NvdW50X2NhdGVnb3J5ID09PSAnd2FsbGV0JyxcbiAgICAgICAgICAgICAgICAvKiogVGhlIGFjY291bnQgSUQgb2Ygc3BlY2lmaWVkIGFjY291bnQuICovXG4gICAgICAgICAgICAgICAgbG9naW5pZDogYCR7YWNjb3VudC5sb2dpbmlkfWAsXG4gICAgICAgICAgICAgICAgLyoqIFRoZSBwbGF0Zm9ybSBvZiB0aGUgYWNjb3VudCAqL1xuICAgICAgICAgICAgICAgIHBsYXRmb3JtOiAnZGVyaXYnIGFzIGNvbnN0LFxuICAgICAgICAgICAgfSBhcyBjb25zdDtcbiAgICAgICAgfSk7XG4gICAgfSwgW2F1dGhvcml6ZV9kYXRhLmFjY291bnRfbGlzdCwgYXV0aG9yaXplX2RhdGEubG9naW5pZCwgZ2V0Q29uZmlnXSk7XG5cbiAgICAvLyBBZGQgYmFsYW5jZSB0byBlYWNoIGFjY291bnRcbiAgICBjb25zdCBtb2RpZmllZF9hY2NvdW50c193aXRoX2JhbGFuY2UgPSB1c2VNZW1vKFxuICAgICAgICAoKSA9PlxuICAgICAgICAgICAgbW9kaWZpZWRfYWNjb3VudHM/Lm1hcChhY2NvdW50ID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBiYWxhbmNlID0gYmFsYW5jZV9kYXRhPy5hY2NvdW50cz8uW2FjY291bnQubG9naW5pZF0/LmJhbGFuY2UgfHwgMDtcblxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgIC8qKiBUaGUgYmFsYW5jZSBvZiB0aGUgYWNjb3VudC4gKi9cbiAgICAgICAgICAgICAgICAgICAgYmFsYW5jZSxcbiAgICAgICAgICAgICAgICAgICAgLyoqIFRoZSBiYWxhbmNlIG9mIHRoZSBhY2NvdW50IGluIGN1cnJlbmN5IGZvcm1hdC4gKi9cbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheV9iYWxhbmNlOiBkaXNwbGF5TW9uZXkoYmFsYW5jZSwgYWNjb3VudC5jdXJyZW5jeV9jb25maWc/LmRpc3BsYXlfY29kZSB8fCAnVVNEJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgZnJhY3Rpb25hbF9kaWdpdHM6IGFjY291bnQuY3VycmVuY3lfY29uZmlnPy5mcmFjdGlvbmFsX2RpZ2l0cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZWZlcnJlZF9sYW5ndWFnZTogYXV0aG9yaXplX2RhdGE/LnByZWZlcnJlZF9sYW5ndWFnZSxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBbYmFsYW5jZV9kYXRhPy5hY2NvdW50cywgbW9kaWZpZWRfYWNjb3VudHMsIGF1dGhvcml6ZV9kYXRhPy5wcmVmZXJyZWRfbGFuZ3VhZ2VdXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgbGlzdCBvZiBhY2NvdW50cyBmb3IgdGhlIGN1cnJlbnQgdXNlci4gKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfYWNjb3VudHNfd2l0aF9iYWxhbmNlLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VEZXJpdkFjY291bnRzTGlzdDtcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlRGVyaXZBY2NvdW50c0xpc3QgZnJvbSAnLi91c2VEZXJpdkFjY291bnRzTGlzdCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgcmV0dXJucyB0aGUgYWNjb3VudCBvYmplY3QgZm9yIHRoZSBjdXJyZW50IGFjdGl2ZSBhY2NvdW50LiAqL1xuY29uc3QgdXNlQWN0aXZlQWNjb3VudCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIC4uLnJlc3QgfSA9IHVzZURlcml2QWNjb3VudHNMaXN0KCk7XG4gICAgY29uc3QgYWN0aXZlX2FjY291bnQgPSB1c2VNZW1vKCgpID0+IGRhdGE/LmZpbmQoYWNjb3VudCA9PiBhY2NvdW50LmlzX2FjdGl2ZSksIFtkYXRhXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVXNlcidzIGN1cnJlbnQgYWN0aXZlIGFjY291bnQuICovXG4gICAgICAgIGRhdGE6IGFjdGl2ZV9hY2NvdW50LFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBY3RpdmVBY2NvdW50O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VEZXJpdkFjY291bnRzTGlzdCBmcm9tICcuL3VzZURlcml2QWNjb3VudHNMaXN0JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXRzIHRoZSBsaXN0IG9mIGFsbCB3YWxsZXQgYWNjb3VudHMgZm9yIHRoZSBjdXJyZW50IHVzZXIuICovXG5jb25zdCB1c2VXYWxsZXRBY2NvdW50c0xpc3QgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhY2NvdW50X2xpc3RfZGF0YSwgLi4ucmVzdCB9ID0gdXNlRGVyaXZBY2NvdW50c0xpc3QoKTtcblxuICAgIC8vIEZpbHRlciBvdXQgbm9uLXdhbGxldCBhY2NvdW50cy5cbiAgICBjb25zdCBmaWx0ZXJlZF9hY2NvdW50cyA9IHVzZU1lbW8oXG4gICAgICAgICgpID0+IGFjY291bnRfbGlzdF9kYXRhPy5maWx0ZXIoYWNjb3VudCA9PiBhY2NvdW50LmlzX3dhbGxldCksXG4gICAgICAgIFthY2NvdW50X2xpc3RfZGF0YV1cbiAgICApO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gZWFjaCB3YWxsZXQgYWNjb3VudC5cbiAgICBjb25zdCBtb2RpZmllZF9hY2NvdW50cyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gZmlsdGVyZWRfYWNjb3VudHM/Lm1hcCh3YWxsZXQgPT4ge1xuICAgICAgICAgICAgY29uc3Qgd2FsbGV0X2N1cnJlbmN5X3R5cGUgPSB3YWxsZXQuaXNfdmlydHVhbCA/ICdEZW1vJyA6IHdhbGxldC5jdXJyZW5jeSB8fCAnJztcbiAgICAgICAgICAgIGNvbnN0IGR0cmFkZV9sb2dpbmlkID0gd2FsbGV0LmxpbmtlZF90bz8uZmluZChhY2NvdW50ID0+IGFjY291bnQucGxhdGZvcm0gPT09ICdkdHJhZGUnKT8ubG9naW5pZDtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi53YWxsZXQsXG4gICAgICAgICAgICAgICAgLyoqIFJldHVybnMgdGhlIHdhbGxldCdzIGN1cnJlbmN5IHR5cGUuIGV4OiBgRGVtb2AsIGBVU0RgLCBldGMuICovXG4gICAgICAgICAgICAgICAgd2FsbGV0X2N1cnJlbmN5X3R5cGUsXG4gICAgICAgICAgICAgICAgLyoqIExhbmRpbmcgY29tcGFueSBzaG9ydGNvZGUgdGhlIGFjY291bnQgYmVsb25ncyB0by4gKi9cbiAgICAgICAgICAgICAgICBsYW5kaW5nX2NvbXBhbnlfbmFtZTogd2FsbGV0LmxhbmRpbmdfY29tcGFueV9uYW1lPy5yZXBsYWNlKCdtYWx0YWludmVzdCcsICdtYWx0YScpLFxuICAgICAgICAgICAgICAgIC8qKiBJbmRpY2F0aW5nIHdoZXRoZXIgdGhlIHdhbGxldCBpcyBhIG1hbHRhaW52ZXN0IHdhbGxldC4gKi9cbiAgICAgICAgICAgICAgICBpc19tYWx0YV93YWxsZXQ6IHdhbGxldC5sYW5kaW5nX2NvbXBhbnlfbmFtZSA9PT0gJ21hbHRhaW52ZXN0JyxcbiAgICAgICAgICAgICAgICAvKiogVGhlIERUcmFkZSBhY2NvdW50IElEIG9mIHRoaXMgd2FsbGV0ICovXG4gICAgICAgICAgICAgICAgZHRyYWRlX2xvZ2luaWQsXG4gICAgICAgICAgICAgICAgLyoqIFJldHVybnMgaWYgdGhlIHdhbGxldCBpcyBhIGNyeXB0byB3YWxsZXQuICovXG4gICAgICAgICAgICAgICAgaXNfY3J5cHRvOiB3YWxsZXQuY3VycmVuY3lfY29uZmlnPy5pc19jcnlwdG8sXG4gICAgICAgICAgICB9IGFzIGNvbnN0O1xuICAgICAgICB9KTtcbiAgICB9LCBbZmlsdGVyZWRfYWNjb3VudHNdKTtcblxuICAgIC8vIFNvcnQgd2FsbGV0IGFjY291bnRzIGFscGhhYmV0aWNhbGx5IGJ5IGZpYXQsIGNyeXB0bywgdGhlbiB2aXJ0dWFsLlxuICAgIGNvbnN0IHNvcnRlZF9hY2NvdW50cyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIW1vZGlmaWVkX2FjY291bnRzKSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIFsuLi5tb2RpZmllZF9hY2NvdW50c10uc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgaWYgKGEuaXNfdmlydHVhbCAhPT0gYi5pc192aXJ0dWFsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGEuaXNfdmlydHVhbCA/IDEgOiAtMTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYS5jdXJyZW5jeV9jb25maWc/LmlzX2NyeXB0byAhPT0gYi5jdXJyZW5jeV9jb25maWc/LmlzX2NyeXB0bykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhLmN1cnJlbmN5X2NvbmZpZz8uaXNfY3J5cHRvID8gMSA6IC0xO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4gKGEuY3VycmVuY3kgfHwgJ1VTRCcpLmxvY2FsZUNvbXBhcmUoYi5jdXJyZW5jeSB8fCAnVVNEJyk7XG4gICAgICAgIH0pO1xuICAgIH0sIFttb2RpZmllZF9hY2NvdW50c10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBsaXN0IG9mIHdhbGxldCBhY2NvdW50cyBmb3IgdGhlIGN1cnJlbnQgdXNlci4gKi9cbiAgICAgICAgZGF0YTogc29ydGVkX2FjY291bnRzLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VXYWxsZXRBY2NvdW50c0xpc3Q7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVdhbGxldEFjY291bnRzTGlzdCBmcm9tICcuL3VzZVdhbGxldEFjY291bnRzTGlzdCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgcmV0dXJucyB0aGUgd2FsbGV0IG9iamVjdCBmb3IgdGhlIGN1cnJlbnQgYWN0aXZlIHdhbGxldC4gKi9cbmNvbnN0IHVzZUFjdGl2ZVdhbGxldEFjY291bnQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VXYWxsZXRBY2NvdW50c0xpc3QoKTtcbiAgICBjb25zdCBhY3RpdmVfd2FsbGV0ID0gdXNlTWVtbygoKSA9PiBkYXRhPy5maW5kKHdhbGxldCA9PiB3YWxsZXQuaXNfYWN0aXZlKSwgW2RhdGFdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBVc2VyJ3MgY3VycmVudCBhY3RpdmUgd2FsbGV0LiAqL1xuICAgICAgICBkYXRhOiBhY3RpdmVfd2FsbGV0LFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBY3RpdmVXYWxsZXRBY2NvdW50O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VEZXJpdkFjY291bnRzTGlzdCBmcm9tICcuL3VzZURlcml2QWNjb3VudHNMaXN0JztcbmltcG9ydCB1c2VBY3RpdmVXYWxsZXRBY2NvdW50IGZyb20gJy4vdXNlQWN0aXZlV2FsbGV0QWNjb3VudCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyB0aGUgYWN0aXZlIGxpbmtlZCB0cmFkaW5nIGFjY291bnQgZm9yIHRoZSBjdXJyZW50IHVzZXIuICovXG5jb25zdCB1c2VBY3RpdmVMaW5rZWRUb1RyYWRpbmdBY2NvdW50ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogYWNjb3VudF9saXN0X2RhdGEgfSA9IHVzZURlcml2QWNjb3VudHNMaXN0KCk7XG4gICAgY29uc3QgeyBkYXRhOiB3YWxsZXRfYWNjb3VudF9kYXRhIH0gPSB1c2VBY3RpdmVXYWxsZXRBY2NvdW50KCk7XG5cbiAgICBjb25zdCBsaW5rZWREdHJhZGVMb2dpbklkID0gd2FsbGV0X2FjY291bnRfZGF0YT8ubGlua2VkX3RvPy5maW5kKFxuICAgICAgICBsaW5rZWQgPT4gbGlua2VkLmxvZ2luaWQgJiYgbGlua2VkPy5wbGF0Zm9ybSA9PT0gJ2R0cmFkZSdcbiAgICApPy5sb2dpbmlkO1xuXG4gICAgY29uc3QgbWF0Y2hpbmdUcmFkaW5nQWNjb3VudCA9IGFjY291bnRfbGlzdF9kYXRhPy5maWx0ZXIoYWNjb3VudCA9PiBhY2NvdW50LmxvZ2luaWQgPT09IGxpbmtlZER0cmFkZUxvZ2luSWQpWzBdO1xuXG4gICAgY29uc3QgbW9kaWZpZWRfYWNjb3VudCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWFjY291bnRfbGlzdF9kYXRhIHx8ICF3YWxsZXRfYWNjb3VudF9kYXRhKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4geyAuLi5tYXRjaGluZ1RyYWRpbmdBY2NvdW50IH07XG4gICAgfSwgW2FjY291bnRfbGlzdF9kYXRhLCBtYXRjaGluZ1RyYWRpbmdBY2NvdW50LCB3YWxsZXRfYWNjb3VudF9kYXRhXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGFjdGl2ZSBsaW5rZWQgdHJhZGluZyBhY2NvdW50IGZvciB0aGUgY3VycmVudCB1c2VyLiAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9hY2NvdW50LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBY3RpdmVMaW5rZWRUb1RyYWRpbmdBY2NvdW50O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VEZXJpdkFjY291bnRzTGlzdCBmcm9tICcuL3VzZURlcml2QWNjb3VudHNMaXN0JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXRzIHRoZSBsaXN0IG9mIGFsbCB0cmFkaW5nIGFjY291bnRzIGZvciB0aGUgY3VycmVudCB1c2VyLiAqL1xuY29uc3QgdXNlVHJhZGluZ0FjY291bnRzTGlzdCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IGFjY291bnRfbGlzdF9kYXRhLCAuLi5yZXN0IH0gPSB1c2VEZXJpdkFjY291bnRzTGlzdCgpO1xuXG4gICAgLy8gRmlsdGVyIG91dCBub24tdHJhZGluZyBhY2NvdW50cy5cbiAgICBjb25zdCBmaWx0ZXJlZF9hY2NvdW50cyA9IHVzZU1lbW8oXG4gICAgICAgICgpID0+IGFjY291bnRfbGlzdF9kYXRhPy5maWx0ZXIoYWNjb3VudCA9PiBhY2NvdW50LmlzX3RyYWRpbmcpLFxuICAgICAgICBbYWNjb3VudF9saXN0X2RhdGFdXG4gICAgKTtcblxuICAgIC8vIEFkZCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIHRvIGVhY2ggdHJhZGluZyBhY2NvdW50LlxuICAgIGNvbnN0IG1vZGlmaWVkX2FjY291bnRzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIHJldHVybiBmaWx0ZXJlZF9hY2NvdW50cz8ubWFwKHRyYWRpbmcgPT4gKHsgLi4udHJhZGluZyB9KSk7XG4gICAgfSwgW2ZpbHRlcmVkX2FjY291bnRzXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGxpc3Qgb2YgdHJhZGluZyBhY2NvdW50cyBmb3IgdGhlIGN1cnJlbnQgdXNlci4gKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfYWNjb3VudHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRyYWRpbmdBY2NvdW50c0xpc3Q7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVRyYWRpbmdBY2NvdW50c0xpc3QgZnJvbSAnLi91c2VUcmFkaW5nQWNjb3VudHNMaXN0JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCByZXR1cm5zIHRoZSB0cmFkaW5nIG9iamVjdCBmb3IgdGhlIGN1cnJlbnQgYWN0aXZlIHRyYWRpbmcuICovXG5jb25zdCB1c2VBY3RpdmVUcmFkaW5nQWNjb3VudCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIC4uLnJlc3QgfSA9IHVzZVRyYWRpbmdBY2NvdW50c0xpc3QoKTtcbiAgICBjb25zdCBhY3RpdmVfdHJhZGluZyA9IHVzZU1lbW8oKCkgPT4gZGF0YT8uZmluZCh0cmFkaW5nID0+IHRyYWRpbmcuaXNfYWN0aXZlKSwgW2RhdGFdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBVc2VyJ3MgY3VycmVudCBhY3RpdmUgdHJhZGluZy4gKi9cbiAgICAgICAgZGF0YTogYWN0aXZlX3RyYWRpbmcsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUFjdGl2ZVRyYWRpbmdBY2NvdW50O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlUmVmLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VBUEkgZnJvbSAnLi91c2VBUEknO1xuaW1wb3J0IHR5cGUge1xuICAgIFRTb2NrZXRBY2NlcHRhYmxlUHJvcHMsXG4gICAgVFNvY2tldEVycm9yLFxuICAgIFRTb2NrZXRSZXF1ZXN0UGF5bG9hZCxcbiAgICBUU29ja2V0UmVzcG9uc2VEYXRhLFxuICAgIFRTb2NrZXRTdWJzY3JpYmFibGVFbmRwb2ludE5hbWVzLFxufSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IHVzZVN1YnNjcmlwdGlvbiA9IDxUIGV4dGVuZHMgVFNvY2tldFN1YnNjcmliYWJsZUVuZHBvaW50TmFtZXM+KG5hbWU6IFQpID0+IHtcbiAgICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtpc1N1YnNjcmliZWQsIHNldFN1YnNjcmliZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtlcnJvciwgc2V0RXJyb3JdID0gdXNlU3RhdGU8VFNvY2tldEVycm9yPFQ+PigpO1xuICAgIGNvbnN0IFtkYXRhLCBzZXREYXRhXSA9IHVzZVN0YXRlPFRTb2NrZXRSZXNwb25zZURhdGE8VD4+KCk7XG4gICAgY29uc3Qgc3Vic2NyaWJlciA9IHVzZVJlZjx7IHVuc3Vic2NyaWJlPzogVm9pZEZ1bmN0aW9uIH0+KCk7XG4gICAgY29uc3QgeyBzdWJzY3JpYmU6IF9zdWJzY3JpYmUgfSA9IHVzZUFQSSgpO1xuXG4gICAgY29uc3Qgc3Vic2NyaWJlID0gdXNlQ2FsbGJhY2soXG4gICAgICAgICguLi5wcm9wczogVFNvY2tldEFjY2VwdGFibGVQcm9wczxUPikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJvcCA9IHByb3BzPy5bMF07XG4gICAgICAgICAgICBjb25zdCBwYXlsb2FkID0gcHJvcCAmJiAncGF5bG9hZCcgaW4gcHJvcCA/IChwcm9wLnBheWxvYWQgYXMgVFNvY2tldFJlcXVlc3RQYXlsb2FkPFQ+KSA6IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgICAgICAgICAgc2V0U3Vic2NyaWJlZCh0cnVlKTtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmVyLmN1cnJlbnQgPSBfc3Vic2NyaWJlKG5hbWUsIHBheWxvYWQpLnN1YnNjcmliZShcbiAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0RGF0YShyZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRFcnJvcihyZXNwb25zZS5lcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgICAgICBzZXRFcnJvcihlIGFzIFRTb2NrZXRFcnJvcjxUPik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFtfc3Vic2NyaWJlLCBuYW1lXVxuICAgICk7XG5cbiAgICBjb25zdCB1bnN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgc3Vic2NyaWJlci5jdXJyZW50Py51bnN1YnNjcmliZT8uKCk7XG4gICAgICAgIHNldFN1YnNjcmliZWQoZmFsc2UpO1xuICAgIH0sIFtdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICB1bnN1YnNjcmliZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFt1bnN1YnNjcmliZV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3Vic2NyaWJlLFxuICAgICAgICB1bnN1YnNjcmliZSxcbiAgICAgICAgaXNMb2FkaW5nLFxuICAgICAgICBpc1N1YnNjcmliZWQsXG4gICAgICAgIGVycm9yLFxuICAgICAgICBkYXRhLFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VTdWJzY3JpcHRpb247XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcbmltcG9ydCB1c2VTdWJzY3JpcHRpb24gZnJvbSAnLi4vdXNlU3Vic2NyaXB0aW9uJztcbmltcG9ydCB7IGRpc3BsYXlNb25leSB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB1c2VBY3RpdmVXYWxsZXRBY2NvdW50IGZyb20gJy4vdXNlQWN0aXZlV2FsbGV0QWNjb3VudCc7XG5cbi8qKlxuICogSG9vayB0byBkaXNwbGF5IGxpdmUsIHN1YnNjcmliZWQgYmFsYW5jZS5cbiAqIFVzZSB3aGVuIHlvdSBoYXZlIG9ubHkgb25lIHdhbGxldCBvbiBzY3JlZW4uXG4gKi9cbmNvbnN0IHVzZUFjdGl2ZVdhbGxldEJhbGFuY2UgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhY3RpdmVXYWxsZXQgfSA9IHVzZUFjdGl2ZVdhbGxldEFjY291bnQoKTtcbiAgICBjb25zdCB7IGRhdGE6IGFjY291bnQgfSA9IHVzZUF1dGhvcml6ZSgpO1xuXG4gICAgY29uc3QgeyBzdWJzY3JpYmUsIGRhdGE6IGJhbGFuY2VEYXRhLCB1bnN1YnNjcmliZSwgLi4ucmVzdCB9ID0gdXNlU3Vic2NyaXB0aW9uKCdiYWxhbmNlJyk7XG5cbiAgICBjb25zdCBiYWxhbmNlID0gYmFsYW5jZURhdGE/LmJhbGFuY2U/LmJhbGFuY2UgfHwgMDtcbiAgICBjb25zdCBjdXJyZW5jeUNvZGUgPSBiYWxhbmNlRGF0YT8uYmFsYW5jZT8uY3VycmVuY3kgfHwgJ1VTRCc7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzdWJzY3JpYmUoKTtcblxuICAgICAgICByZXR1cm4gKCkgPT4gdW5zdWJzY3JpYmUoKTtcbiAgICB9LCBbc3Vic2NyaWJlXSk7XG5cbiAgICBjb25zdCBkaXNwbGF5QmFsYW5jZSA9IGRpc3BsYXlNb25leShiYWxhbmNlLCBjdXJyZW5jeUNvZGUsIHtcbiAgICAgICAgZnJhY3Rpb25hbF9kaWdpdHM6IGFjdGl2ZVdhbGxldD8uY3VycmVuY3lfY29uZmlnPy5mcmFjdGlvbmFsX2RpZ2l0cyxcbiAgICAgICAgcHJlZmVycmVkX2xhbmd1YWdlOiBhY2NvdW50Py5wcmVmZXJyZWRfbGFuZ3VhZ2UsXG4gICAgfSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBiYWxhbmNlRGF0YSxcbiAgICAgICAgZGlzcGxheUJhbGFuY2UsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUFjdGl2ZVdhbGxldEJhbGFuY2U7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4uL3VzZVF1ZXJ5JztcbmltcG9ydCB1c2VBdXRob3JpemUgZnJvbSAnLi91c2VBdXRob3JpemUnO1xuaW1wb3J0IHVzZUN1cnJlbmN5Q29uZmlnIGZyb20gJy4vdXNlQ3VycmVuY3lDb25maWcnO1xuXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IGdldHMgdGhlIGxpc3Qgb2YgY3JlYXRlZCBjVHJhZGVyIGFjY291bnRzLiAqL1xuY29uc3QgdXNlQ3RyYWRlckFjY291bnRzTGlzdCA9ICgpID0+IHtcbiAgICBjb25zdCB7IGlzU3VjY2VzcyB9ID0gdXNlQXV0aG9yaXplKCk7XG4gICAgY29uc3QgeyBkYXRhOiBjdHJhZGVyX2FjY291bnRzLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgndHJhZGluZ19wbGF0Zm9ybV9hY2NvdW50cycsIHtcbiAgICAgICAgcGF5bG9hZDogeyBwbGF0Zm9ybTogJ2N0cmFkZXInIH0sXG4gICAgICAgIG9wdGlvbnM6IHsgZW5hYmxlZDogaXNTdWNjZXNzIH0sXG4gICAgfSk7XG4gICAgY29uc3QgeyBnZXRDb25maWcgfSA9IHVzZUN1cnJlbmN5Q29uZmlnKCk7XG5cbiAgICAvKiogQWRkaW5nIG5lY2Nlc2FyeSBwcm9wZXJ0aWVzIHRvIGNUcmFkZXIgYWNjb3VudHMgKi9cbiAgICBjb25zdCBtb2RpZmllZF9jdHJhZGVyX2FjY291bnRzID0gdXNlTWVtbyhcbiAgICAgICAgKCkgPT5cbiAgICAgICAgICAgIGN0cmFkZXJfYWNjb3VudHM/LnRyYWRpbmdfcGxhdGZvcm1fYWNjb3VudHM/Lm1hcChhY2NvdW50ID0+ICh7XG4gICAgICAgICAgICAgICAgLi4uYWNjb3VudCxcbiAgICAgICAgICAgICAgICAvKiogQWNjb3VudCdzIGN1cnJlbmN5IGNvbmZpZyBpbmZvcm1hdGlvbiAqL1xuICAgICAgICAgICAgICAgIGN1cnJlbmN5X2NvbmZpZzogYWNjb3VudC5jdXJyZW5jeSA/IGdldENvbmZpZyhhY2NvdW50LmN1cnJlbmN5KSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAvKiogVGhlIGlkIG9mIHRoZSBjVHJhZGVyIGFjY291bnQgKi9cbiAgICAgICAgICAgICAgICBpZDogYWNjb3VudC5hY2NvdW50X2lkLFxuICAgICAgICAgICAgICAgIC8qKiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIGFjY291bnQgaXMgYSB2aXJ0dWFsLW1vbmV5IGFjY291bnQuICovXG4gICAgICAgICAgICAgICAgaXNfdmlydHVhbDogYWNjb3VudC5hY2NvdW50X3R5cGUgPT09ICdkZW1vJyxcbiAgICAgICAgICAgICAgICAvKiogTGFuZGluZyBjb21wYW55IHNob3J0Y29kZSB0aGUgYWNjb3VudCBiZWxvbmdzIHRvLiAqL1xuICAgICAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9uYW1lOiBhY2NvdW50LmxhbmRpbmdfY29tcGFueV9zaG9ydCxcbiAgICAgICAgICAgICAgICAvKiogVGhlIHBsYXRmb3JtIG9mIHRoZSBhY2NvdW50ICovXG4gICAgICAgICAgICAgICAgcGxhdGZvcm06ICdjdHJhZGVyJyBhcyBjb25zdCxcbiAgICAgICAgICAgIH0pKSxcbiAgICAgICAgW2N0cmFkZXJfYWNjb3VudHM/LnRyYWRpbmdfcGxhdGZvcm1fYWNjb3VudHMsIGdldENvbmZpZ11cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIExpc3Qgb2YgYWxsIGNyZWF0ZWQgY1RyYWRlciBhY2NvdW50cyAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9jdHJhZGVyX2FjY291bnRzLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VDdHJhZGVyQWNjb3VudHNMaXN0O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcbmltcG9ydCB1c2VDdXJyZW5jeUNvbmZpZyBmcm9tICcuL3VzZUN1cnJlbmN5Q29uZmlnJztcbmltcG9ydCB7IGRpc3BsYXlNb25leSB9IGZyb20gJy4uL3V0aWxzJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXRzIHRoZSBsaXN0IG9mIGNyZWF0ZWQgRGVyaXYgWCBhY2NvdW50cy4gKi9cbmNvbnN0IHVzZUR4dHJhZGVBY2NvdW50c0xpc3QgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhdXRob3JpemVfZGF0YSwgaXNTdWNjZXNzIH0gPSB1c2VBdXRob3JpemUoKTtcbiAgICBjb25zdCB7IGRhdGE6IGR4dHJhZGVfYWNjb3VudHMsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCd0cmFkaW5nX3BsYXRmb3JtX2FjY291bnRzJywge1xuICAgICAgICBwYXlsb2FkOiB7IHBsYXRmb3JtOiAnZHh0cmFkZScgfSxcbiAgICAgICAgb3B0aW9uczogeyBlbmFibGVkOiBpc1N1Y2Nlc3MgfSxcbiAgICB9KTtcbiAgICBjb25zdCB7IGdldENvbmZpZyB9ID0gdXNlQ3VycmVuY3lDb25maWcoKTtcblxuICAgIC8qKiBBZGRpbmcgbmVjZXNzYXJ5IHByb3BlcnRpZXMgdG8gRGVyaXYgWCBhY2NvdW50cyAqL1xuICAgIGNvbnN0IG1vZGlmaWVkX2R4dHJhZGVfYWNjb3VudHMgPSB1c2VNZW1vKFxuICAgICAgICAoKSA9PlxuICAgICAgICAgICAgZHh0cmFkZV9hY2NvdW50cz8udHJhZGluZ19wbGF0Zm9ybV9hY2NvdW50cz8ubWFwKGFjY291bnQgPT4gKHtcbiAgICAgICAgICAgICAgICAuLi5hY2NvdW50LFxuICAgICAgICAgICAgICAgIC8qKiBBY2NvdW50J3MgY3VycmVuY3kgY29uZmlnIGluZm9ybWF0aW9uICovXG4gICAgICAgICAgICAgICAgY3VycmVuY3lfY29uZmlnOiBhY2NvdW50LmN1cnJlbmN5ID8gZ2V0Q29uZmlnKGFjY291bnQuY3VycmVuY3kpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIC8qKiBUaGUgYmFsYW5jZSBvZiB0aGUgYWNjb3VudCBpbiBjdXJyZW5jeSBmb3JtYXQuICovXG4gICAgICAgICAgICAgICAgZGlzcGxheV9iYWxhbmNlOiBkaXNwbGF5TW9uZXkoYWNjb3VudD8uYmFsYW5jZSB8fCAwLCBhY2NvdW50Py5jdXJyZW5jeSB8fCAnVVNEJywge1xuICAgICAgICAgICAgICAgICAgICBwcmVmZXJyZWRfbGFuZ3VhZ2U6IGF1dGhvcml6ZV9kYXRhPy5wcmVmZXJyZWRfbGFuZ3VhZ2UsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgLyoqIGluZGljYXRpbmcgd2hldGhlciB0aGUgYWNjb3VudCBpcyBhIHZpcnR1YWwtbW9uZXkgYWNjb3VudC4gKi9cbiAgICAgICAgICAgICAgICBpc192aXJ0dWFsOiBhY2NvdW50LmFjY291bnRfdHlwZSA9PT0gJ2RlbW8nLFxuICAgICAgICAgICAgICAgIC8qKiBMYW5kaW5nIGNvbXBhbnkgc2hvcnRjb2RlIHRoZSBhY2NvdW50IGJlbG9uZ3MgdG8uICovXG4gICAgICAgICAgICAgICAgbGFuZGluZ19jb21wYW55X25hbWU6IGFjY291bnQubGFuZGluZ19jb21wYW55X3Nob3J0LFxuICAgICAgICAgICAgICAgIC8qKiBUaGUgcGxhdGZvcm0gb2YgdGhlIGFjY291bnQgKi9cbiAgICAgICAgICAgICAgICBwbGF0Zm9ybTogJ2R4dHJhZGUnIGFzIGNvbnN0LFxuICAgICAgICAgICAgfSkpLFxuICAgICAgICBbYXV0aG9yaXplX2RhdGE/LnByZWZlcnJlZF9sYW5ndWFnZSwgZHh0cmFkZV9hY2NvdW50cz8udHJhZGluZ19wbGF0Zm9ybV9hY2NvdW50cywgZ2V0Q29uZmlnXVxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogTGlzdCBvZiBhbGwgY3JlYXRlZCBEZXJpdiBYIGFjY291bnRzICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2R4dHJhZGVfYWNjb3VudHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUR4dHJhZGVBY2NvdW50c0xpc3Q7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4uL3VzZVF1ZXJ5JztcbmltcG9ydCB1c2VBdXRob3JpemUgZnJvbSAnLi91c2VBdXRob3JpemUnO1xuaW1wb3J0IHVzZUN1cnJlbmN5Q29uZmlnIGZyb20gJy4vdXNlQ3VycmVuY3lDb25maWcnO1xuaW1wb3J0IHsgZGlzcGxheU1vbmV5IH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IGdldHMgdGhlIGxpc3QgY3JlYXRlZCBNVDUgYWNjb3VudHMgb2YgdGhlIHVzZXIuICovXG5jb25zdCB1c2VNVDVBY2NvdW50c0xpc3QgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhdXRob3JpemVfZGF0YSwgaXNTdWNjZXNzIH0gPSB1c2VBdXRob3JpemUoKTtcbiAgICBjb25zdCB7IGdldENvbmZpZyB9ID0gdXNlQ3VycmVuY3lDb25maWcoKTtcblxuICAgIGNvbnN0IHsgZGF0YTogbXQ1X2FjY291bnRzLCAuLi5tdDVfYWNjb3VudHNfcmVzdCB9ID0gdXNlUXVlcnkoJ210NV9sb2dpbl9saXN0Jywge1xuICAgICAgICBvcHRpb25zOiB7IGVuYWJsZWQ6IGlzU3VjY2VzcyB9LFxuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogQGRlc2NyaXB0aW9uIFRoZSBsaXN0IG9mIGNyZWF0ZWQgTVQ1IGFjY291bnRzXG4gICAgICovXG4gICAgY29uc3QgbW9kaWZpZWRfbXQ1X2FjY291bnRzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIHJldHVybiBtdDVfYWNjb3VudHM/Lm10NV9sb2dpbl9saXN0Py5tYXAoYWNjb3VudCA9PiAoe1xuICAgICAgICAgICAgLi4uYWNjb3VudCxcbiAgICAgICAgICAgIC8qKiBBY2NvdW50J3MgY3VycmVuY3kgY29uZmlnIGluZm9ybWF0aW9uICovXG4gICAgICAgICAgICBjdXJyZW5jeV9jb25maWc6IGFjY291bnQuY3VycmVuY3kgPyBnZXRDb25maWcoYWNjb3VudC5jdXJyZW5jeSkgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAvKiogVGhlIGZvcm1hdHRlZCBkaXNwbGF5IGxvZ2luIG9mIHRoZSBhY2NvdW50ICovXG4gICAgICAgICAgICBkaXNwbGF5X2xvZ2luOiBhY2NvdW50LmxvZ2luPy5yZXBsYWNlKC9eKE1UW0RSXT8pLywgJycpLFxuICAgICAgICAgICAgLyoqIExhbmRpbmcgY29tcGFueSBzaG9ydGNvZGUgdGhlIGFjY291bnQgYmVsb25ncyB0by4gKi9cbiAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9uYW1lOiBhY2NvdW50LmxhbmRpbmdfY29tcGFueV9zaG9ydCxcbiAgICAgICAgICAgIC8qKiBUaGUgaWQgb2YgdGhlIGFjY291bnQgKi9cbiAgICAgICAgICAgIGxvZ2luaWQ6IGFjY291bnQubG9naW4sXG4gICAgICAgICAgICAvKiogVGhlIGJhbGFuY2Ugb2YgdGhlIGFjY291bnQgaW4gY3VycmVuY3kgZm9ybWF0LiAqL1xuICAgICAgICAgICAgZGlzcGxheV9iYWxhbmNlOiBkaXNwbGF5TW9uZXkoYWNjb3VudC5iYWxhbmNlIHx8IDAsIGFjY291bnQuY3VycmVuY3kgfHwgJ1VTRCcsIHtcbiAgICAgICAgICAgICAgICBwcmVmZXJyZWRfbGFuZ3VhZ2U6IGF1dGhvcml6ZV9kYXRhPy5wcmVmZXJyZWRfbGFuZ3VhZ2UsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIC8qKiBpbmRpY2F0aW5nIHdoZXRoZXIgdGhlIGFjY291bnQgaXMgYSB2aXJ0dWFsLW1vbmV5IGFjY291bnQuICovXG4gICAgICAgICAgICBpc192aXJ0dWFsOiBhY2NvdW50LmFjY291bnRfdHlwZSA9PT0gJ2RlbW8nLFxuICAgICAgICAgICAgLyoqIFRoZSBwbGF0Zm9ybSBvZiB0aGUgYWNjb3VudCAqL1xuICAgICAgICAgICAgcGxhdGZvcm06ICdtdDUnIGFzIGNvbnN0LFxuICAgICAgICB9KSk7XG4gICAgfSwgW2F1dGhvcml6ZV9kYXRhPy5wcmVmZXJyZWRfbGFuZ3VhZ2UsIGdldENvbmZpZywgbXQ1X2FjY291bnRzPy5tdDVfbG9naW5fbGlzdF0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBsaXN0IG9mIGNyZWF0ZWQgTVQ1IGFjY291bnRzICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX210NV9hY2NvdW50cyxcbiAgICAgICAgLi4ubXQ1X2FjY291bnRzX3Jlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZU1UNUFjY291bnRzTGlzdDtcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1c2VDdHJhZGVyQWNjb3VudHNMaXN0IGZyb20gJy4vdXNlQ3RyYWRlckFjY291bnRzTGlzdCc7XG5pbXBvcnQgdXNlRHh0cmFkZUFjY291bnRzTGlzdCBmcm9tICcuL3VzZUR4dHJhZGVBY2NvdW50c0xpc3QnO1xuaW1wb3J0IHVzZU1UNUFjY291bnRzTGlzdCBmcm9tICcuL3VzZU1UNUFjY291bnRzTGlzdCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyB0aGUgbGlzdCBhbGwgY3JlYXRlZCBDRkQgYWNjb3VudHMgb2YgdGhlIHVzZXIuICovXG5jb25zdCB1c2VDRkRBY2NvdW50c0xpc3QgPSAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBkYXRhOiBtdDVfYWNjb3VudHMsXG4gICAgICAgIGlzRXJyb3I6IGlzTVQ1QWNjb3VudHNMaXN0RXJyb3IsXG4gICAgICAgIGlzTG9hZGluZzogaXNNVDVBY2NvdW50c0xpc3RMb2FkaW5nLFxuICAgIH0gPSB1c2VNVDVBY2NvdW50c0xpc3QoKTtcbiAgICBjb25zdCB7XG4gICAgICAgIGRhdGE6IGR4dHJhZGVfYWNjb3VudHMsXG4gICAgICAgIGlzRXJyb3I6IGlzRHh0cmFkZUFjY291bnRzTGlzdEVycm9yLFxuICAgICAgICBpc0xvYWRpbmc6IGlzRHh0cmFkZUFjY291bnRzTGlzdExvYWRpbmcsXG4gICAgfSA9IHVzZUR4dHJhZGVBY2NvdW50c0xpc3QoKTtcbiAgICBjb25zdCB7XG4gICAgICAgIGRhdGE6IGN0cmFkZXJfYWNjb3VudHMsXG4gICAgICAgIGlzRXJyb3I6IGlzQ3RyYWRlckFjY291bnRzTGlzdEVycm9yLFxuICAgICAgICBpc0xvYWRpbmc6IEN0cmFkZXJBY2NvdW50c0xpc3RMb2FkaW5nLFxuICAgIH0gPSB1c2VDdHJhZGVyQWNjb3VudHNMaXN0KCk7XG5cbiAgICBjb25zdCBkYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghbXQ1X2FjY291bnRzIHx8ICFkeHRyYWRlX2FjY291bnRzIHx8ICFjdHJhZGVyX2FjY291bnRzKSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG10NTogbXQ1X2FjY291bnRzLFxuICAgICAgICAgICAgZHh0cmFkZTogZHh0cmFkZV9hY2NvdW50cyxcbiAgICAgICAgICAgIGN0cmFkZXI6IGN0cmFkZXJfYWNjb3VudHMsXG4gICAgICAgIH07XG4gICAgfSwgW210NV9hY2NvdW50cywgZHh0cmFkZV9hY2NvdW50cywgY3RyYWRlcl9hY2NvdW50c10pO1xuXG4gICAgY29uc3QgaXNFcnJvciA9IGlzTVQ1QWNjb3VudHNMaXN0RXJyb3IgfHwgaXNEeHRyYWRlQWNjb3VudHNMaXN0RXJyb3IgfHwgaXNDdHJhZGVyQWNjb3VudHNMaXN0RXJyb3I7XG5cbiAgICBjb25zdCBpc0xvYWRpbmcgPSBpc01UNUFjY291bnRzTGlzdExvYWRpbmcgfHwgaXNEeHRyYWRlQWNjb3VudHNMaXN0TG9hZGluZyB8fCBDdHJhZGVyQWNjb3VudHNMaXN0TG9hZGluZztcblxuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGEsXG4gICAgICAgIGlzRXJyb3IsXG4gICAgICAgIGlzTG9hZGluZyxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ0ZEQWNjb3VudHNMaXN0O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VEZXJpdkFjY291bnRzTGlzdCBmcm9tICcuL3VzZURlcml2QWNjb3VudHNMaXN0JztcbmltcG9ydCB1c2VDRkRBY2NvdW50c0xpc3QgZnJvbSAnLi91c2VDRkRBY2NvdW50c0xpc3QnO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBnZXQgYWxsIHVzZXIgYWNjb3VudHMsIGluY2x1ZGluZyBleHRlcm5hbCBhcHBzIGFjY291bnRzICovXG5jb25zdCB1c2VBbGxBY2NvdW50c0xpc3QgPSAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBkYXRhOiBhY2NvdW50c0xpc3QsXG4gICAgICAgIGlzRXJyb3I6IGlzQWNjb3VudHNMaXN0RXJyb3IsXG4gICAgICAgIGlzTG9hZGluZzogaXNBY2NvdW50c0xpc3RMb2FkaW5nLFxuICAgIH0gPSB1c2VEZXJpdkFjY291bnRzTGlzdCgpO1xuICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YTogY2Zkc0xpc3QsXG4gICAgICAgIGlzRXJyb3I6IGlzQ0ZEQWNjb3VudHNMaXN0RXJyb3IsXG4gICAgICAgIGlzTG9hZGluZzogaXNDRkRBY2NvdW50c0xpc3RMb2FkaW5nLFxuICAgIH0gPSB1c2VDRkRBY2NvdW50c0xpc3QoKTtcblxuICAgIGNvbnN0IGFjY291bnRzID0gdXNlTWVtbyhcbiAgICAgICAgKCkgPT4gKHtcbiAgICAgICAgICAgIHdhbGxldHM6IGFjY291bnRzTGlzdD8uZmlsdGVyKGFjY291bnQgPT4gYWNjb3VudC5pc193YWxsZXQpLFxuICAgICAgICAgICAgZHRyYWRlOiBhY2NvdW50c0xpc3Q/LmZpbHRlcihhY2NvdW50ID0+IGFjY291bnQuaXNfdHJhZGluZyksXG4gICAgICAgICAgICAuLi5jZmRzTGlzdCxcbiAgICAgICAgfSksXG4gICAgICAgIFthY2NvdW50c0xpc3QsIGNmZHNMaXN0XVxuICAgICk7XG4gICAgY29uc3QgaXNFcnJvciA9IGlzQWNjb3VudHNMaXN0RXJyb3IgfHwgaXNDRkRBY2NvdW50c0xpc3RFcnJvcjtcbiAgICBjb25zdCBpc0xvYWRpbmcgPSBpc0FjY291bnRzTGlzdExvYWRpbmcgfHwgaXNDRkRBY2NvdW50c0xpc3RMb2FkaW5nO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogYWNjb3VudHMsXG4gICAgICAgIGlzRXJyb3IsXG4gICAgICAgIGlzTG9hZGluZyxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQWxsQWNjb3VudHNMaXN0O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXRzIHRoZSBsaXN0IG9mIGF2YWlsYWJsZSB3YWxsZXRzLiAqL1xuY29uc3QgdXNlQXZhaWxhYmxlV2FsbGV0cyA9ICgpID0+IHtcbiAgICBjb25zdCB7IGlzU3VjY2VzcyB9ID0gdXNlQXV0aG9yaXplKCk7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgnYXZhaWxhYmxlX2FjY291bnRzJywge1xuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICBjYXRlZ29yaWVzOiBbJ3dhbGxldCddLFxuICAgICAgICB9LFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICBlbmFibGVkOiBpc1N1Y2Nlc3MsXG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBtb2RpZmllZERhdGEgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhPy5hdmFpbGFibGVfYWNjb3VudHM/LndhbGxldHMpIHJldHVybjtcblxuICAgICAgICByZXR1cm4gZGF0YS5hdmFpbGFibGVfYWNjb3VudHMud2FsbGV0cztcbiAgICB9LCBbZGF0YV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIExpc3Qgb2YgYXZhaWxhYmxlIHdhbGxldCBhY2NvdW50cyB0byBjcmVhdGUgKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWREYXRhLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VBdmFpbGFibGVXYWxsZXRzO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlQ3VycmVuY3lDb25maWcgZnJvbSAnLi91c2VDdXJyZW5jeUNvbmZpZyc7XG5pbXBvcnQgdXNlV2FsbGV0QWNjb3VudHNMaXN0IGZyb20gJy4vdXNlV2FsbGV0QWNjb3VudHNMaXN0JztcbmltcG9ydCB1c2VBdmFpbGFibGVXYWxsZXRzIGZyb20gJy4vdXNlQXZhaWxhYmxlV2FsbGV0cyc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyB0aGUgbGlzdCBvZiBhZGRlZCBhbmQgbm9uLWFkZGVkIHdhbGxldCBhY2NvdW50cy4gKi9cbmNvbnN0IHVzZUFsbFdhbGxldEFjY291bnRzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogbm9uQWRkZWRXYWxsZXRzLCAuLi5yZXN0IH0gPSB1c2VBdmFpbGFibGVXYWxsZXRzKCk7XG4gICAgY29uc3QgeyBkYXRhOiBhZGRlZFdhbGxldHMgfSA9IHVzZVdhbGxldEFjY291bnRzTGlzdCgpO1xuICAgIGNvbnN0IHsgZ2V0Q29uZmlnIH0gPSB1c2VDdXJyZW5jeUNvbmZpZygpO1xuXG4gICAgLyoqIEdldCBhbGwgdGhlIGFkZGVkIGFuZCBub24tYWRkZWQgd2FsbGV0cyBhY2NvdW50ICovXG4gICAgY29uc3QgbW9kaWZpZWRXYWxsZXRzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IG5vblZpcnR1YWxXYWxsZXRzID0gYWRkZWRXYWxsZXRzPy5maWx0ZXIod2FsbGV0ID0+ICF3YWxsZXQuaXNfdmlydHVhbCk7XG5cbiAgICAgICAgLyoqIE1vZGlmeSBhZGRlZCB3YWxsZXRzIGxpc3Qgd2l0aCBhZGRpbmcgYGlzX2FkZGVkYCBhbmQgYGlzX2NyeXB0b2AgZmxhZyAqL1xuICAgICAgICBjb25zdCBtb2RpZmllZEFkZGVkV2FsbGV0cyA9IG5vblZpcnR1YWxXYWxsZXRzPy5tYXAod2FsbGV0ID0+ICh7XG4gICAgICAgICAgICBjdXJyZW5jeTogd2FsbGV0LmN1cnJlbmN5LFxuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55X25hbWU6IHdhbGxldC5sYW5kaW5nX2NvbXBhbnlfbmFtZSxcbiAgICAgICAgICAgIGlzX2FkZGVkOiB0cnVlLFxuICAgICAgICAgICAgaXNfY3J5cHRvOiB3YWxsZXQuY3VycmVuY3kgPyBnZXRDb25maWcod2FsbGV0LmN1cnJlbmN5KT8uaXNfY3J5cHRvIDogZmFsc2UsXG4gICAgICAgIH0pKTtcblxuICAgICAgICAvKiogTW9kaWZ5IG5vbi1hZGRlZCB3YWxsZXRzIGxpc3Qgd2l0aCBhZGRpbmcgYGlzX2FkZGVkYCBhbmQgYGlzX2NyeXB0b2AgZmxhZyAqL1xuICAgICAgICBjb25zdCBtb2RpZmllZE5vbkFkZGVkV2FsbGV0cyA9IG5vbkFkZGVkV2FsbGV0cz8ubWFwKHdhbGxldCA9PiAoe1xuICAgICAgICAgICAgY3VycmVuY3k6IHdhbGxldC5jdXJyZW5jeSxcbiAgICAgICAgICAgIGxhbmRpbmdfY29tcGFueV9uYW1lOiB3YWxsZXQubGFuZGluZ19jb21wYW55LFxuICAgICAgICAgICAgaXNfYWRkZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfY3J5cHRvOiB3YWxsZXQuYWNjb3VudF90eXBlID09PSAnY3J5cHRvJyxcbiAgICAgICAgfSkpO1xuXG4gICAgICAgIHJldHVybiBbLi4uKG1vZGlmaWVkQWRkZWRXYWxsZXRzIHx8IFtdKSwgLi4uKG1vZGlmaWVkTm9uQWRkZWRXYWxsZXRzIHx8IFtdKV07XG4gICAgfSwgW25vbkFkZGVkV2FsbGV0cywgYWRkZWRXYWxsZXRzLCBnZXRDb25maWddKTtcblxuICAgIC8qKiBGdW5jdGlvbiB0byBzb3J0IHdhbGxldCBiYXNlZCBvbiBjdXJyZW5jeSAqL1xuICAgIGNvbnN0IHNvcnRXYWxsZXRzQnlDdXJyZW5jeSA9IHVzZUNhbGxiYWNrKFxuICAgICAgICAoYTogdHlwZW9mIG1vZGlmaWVkV2FsbGV0c1tudW1iZXJdLCBiOiB0eXBlb2YgbW9kaWZpZWRXYWxsZXRzW251bWJlcl0pID0+IHtcbiAgICAgICAgICAgIGlmIChhLmlzX2NyeXB0byAhPT0gYi5pc19jcnlwdG8pIHJldHVybiBhLmlzX2NyeXB0byA/IDEgOiAtMTtcblxuICAgICAgICAgICAgcmV0dXJuIChhLmN1cnJlbmN5IHx8ICdVU0QnKS5sb2NhbGVDb21wYXJlKGIuY3VycmVuY3kgfHwgJ1VTRCcpO1xuICAgICAgICB9LFxuICAgICAgICBbXVxuICAgICk7XG5cbiAgICAvKiogU29ydCB0aGUgd2FsbGV0cyBieSBmaWF0LCBjcnlwdG8sIHRoZW4gdmlydHVhbCAqL1xuICAgIGNvbnN0IHNvcnRlZFdhbGxldHMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFtb2RpZmllZFdhbGxldHMpIHJldHVybjtcblxuICAgICAgICAvLyBTb3J0IHdhbGxldHMgYnkgbm9uLWFkZGVkIHdhbGxldHMgdGhlbiBhZGRlZCB3YWxsZXRzXG4gICAgICAgIG1vZGlmaWVkV2FsbGV0cy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICBpZiAoYS5pc19hZGRlZCAhPT0gYi5pc19hZGRlZCkgcmV0dXJuIGEuaXNfYWRkZWQgPyAxIDogLTE7XG5cbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICB9KTtcblxuICAgICAgICAvLyBTb3J0IHRoZSBhZGRlZCB3YWxsZXRzIGFscGhhYmV0aWNhbGx5IGJ5IGZpYXQsIGNyeXB0bywgdGhlbiB2aXJ0dWFsIChpZiBhbnkpXG4gICAgICAgIG1vZGlmaWVkV2FsbGV0cy5zb3J0KChhLCBiKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWEuaXNfYWRkZWQgfHwgIWIuaXNfYWRkZWQpIHJldHVybiAwO1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRXYWxsZXRzQnlDdXJyZW5jeShhLCBiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gU29ydCB0aGUgbm9uLWFkZGVkIHdhbGxldHMgYWxwaGFiZXRpY2FsbHkgYnkgZmlhdCwgY3J5cHRvLCB0aGVuIHZpcnR1YWwgKGlmIGFueSlcbiAgICAgICAgbW9kaWZpZWRXYWxsZXRzLnNvcnQoKGEsIGIpID0+IHtcbiAgICAgICAgICAgIGlmIChhLmlzX2FkZGVkIHx8IGIuaXNfYWRkZWQpIHJldHVybiAwO1xuICAgICAgICAgICAgcmV0dXJuIHNvcnRXYWxsZXRzQnlDdXJyZW5jeShhLCBiKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIFsuLi5tb2RpZmllZFdhbGxldHNdO1xuICAgIH0sIFttb2RpZmllZFdhbGxldHMsIHNvcnRXYWxsZXRzQnlDdXJyZW5jeV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFNvcnRlZCB3YWxsZXRzIGFjY291bnRzICovXG4gICAgICAgIGRhdGE6IHNvcnRlZFdhbGxldHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUFsbFdhbGxldEFjY291bnRzO1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VHZXRBY2NvdW50U3RhdHVzIGZyb20gJy4vdXNlR2V0QWNjb3VudFN0YXR1cyc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgdmVyaWZpY2F0aW9uIHN0YXR1cyAoYmFzaWNhbGx5IGFueSBwb2ksIHBvYSwgcG9pbmMsIHBvbykgb2YgdGhlIGN1cnJlbnQgdXNlci4gKi9cbmNvbnN0IHVzZUF1dGhlbnRpY2F0aW9uID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogZ2V0X2FjY291bnRfc3RhdHVzX2RhdGEsIC4uLnJlc3QgfSA9IHVzZUdldEFjY291bnRTdGF0dXMoKTtcblxuICAgIGNvbnN0IG1vZGlmaWVkX2FjY291bnRfc3RhdHVzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghZ2V0X2FjY291bnRfc3RhdHVzX2RhdGEpIHJldHVybjtcblxuICAgICAgICBjb25zdCBuZWVkc192ZXJpZmljYXRpb24gPSBuZXcgU2V0KGdldF9hY2NvdW50X3N0YXR1c19kYXRhLmF1dGhlbnRpY2F0aW9uPy5uZWVkc192ZXJpZmljYXRpb24pO1xuICAgICAgICBjb25zdCBhY2NvdW50X3N0YXR1cyA9IG5ldyBTZXQoZ2V0X2FjY291bnRfc3RhdHVzX2RhdGE/LnN0YXR1cyk7XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmdldF9hY2NvdW50X3N0YXR1c19kYXRhLmF1dGhlbnRpY2F0aW9uLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBoYXMgYmVlbiBhdXRoZW50aWNhdGVkIHdpdGggSURWIHBob3RvIElEIGZlYXR1cmUgKi9cbiAgICAgICAgICAgIGlzX2F1dGhlbnRpY2F0ZWRfd2l0aF9pZHZfcGhvdG9pZDogYWNjb3VudF9zdGF0dXMuaGFzKCdpc19hdXRoZW50aWNhdGVkX3dpdGhfaWR2X3Bob3RvaWQnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgaXMgcmVxdWlyZWQgdG8gdmVyaWZ5IHRoZWlyIGRvY3VtZW50IChwcm9vZiBvZiBhZGRyZXNzKSAqL1xuICAgICAgICAgICAgaXNfcG9hX25lZWRlZDogbmVlZHNfdmVyaWZpY2F0aW9uLmhhcygnZG9jdW1lbnQnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgaXMgcmVxdWlyZWQgdG8gdmVyaWZ5IHRoZWlyIGlkZW50aXR5ICovXG4gICAgICAgICAgICBpc19wb2lfbmVlZGVkOiBuZWVkc192ZXJpZmljYXRpb24uaGFzKCdpZGVudGl0eScpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCBoYXMgYmVlbiBhZ2UtdmVyaWZpZWQgKi9cbiAgICAgICAgICAgIGlzX2FnZV92ZXJpZmllZDogYWNjb3VudF9zdGF0dXMuaGFzKCdhZ2VfdmVyaWZpY2F0aW9uJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGlzIHByZXZlbnRlZCBmcm9tIHZlcmlmeWluZyBmcm9tIGlkdiAqL1xuICAgICAgICAgICAgaXNfaWR2X2Rpc2FsbG93ZWQ6IGFjY291bnRfc3RhdHVzLmhhcygnaWR2X2Rpc2FsbG93ZWQnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgSURWIGlzIHJldm9rZWQgKi9cbiAgICAgICAgICAgIGlzX2lkdl9yZXZva2VkOiBhY2NvdW50X3N0YXR1cy5oYXMoJ2lkdl9yZXZva2VkJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGlzIGFsbG93ZWQgdG8gcGVyZm9ybSBQT0kgYW5kIFBPQSAoYWxsb3cgdXBsb2FkaW5nIGRvY3VtZW50cykgKi9cbiAgICAgICAgICAgIGlzX2FsbG93X2RvY3VtZW50X3VwbG9hZDogYWNjb3VudF9zdGF0dXMuaGFzKCdpc19hbGxvd19kb2N1bWVudF91cGxvYWQnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQgY2FuIHJlc3VibWl0IFBPSSBkb2N1bWVudHMgKi9cbiAgICAgICAgICAgIGlzX3BvaV9yZXN1Ym1pc3Npb25fYWxsb3dlZDogYWNjb3VudF9zdGF0dXMuaGFzKCdhbGxvd19wb2lfcmVzdWJtaXNzaW9uJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGNhbiByZXN1Ym1pdCBQT0EgZG9jdW1lbnRzICovXG4gICAgICAgICAgICBpc19wb2FfcmVzdWJtaXNzaW9uX2FsbG93ZWQ6IGFjY291bnRfc3RhdHVzLmhhcygnYWxsb3dfcG9hX3Jlc3VibWlzc2lvbicpLFxuICAgICAgICAgICAgLyoqIGNsaWVudCdzIG5hbWUgaW4gUE9JIGRvY3VtZW50cyBkb2VzIG5vdCBtYXRjaCAqL1xuICAgICAgICAgICAgaXNfcG9pX25hbWVfbWlzbWF0Y2g6IGFjY291bnRfc3RhdHVzLmhhcygncG9pX25hbWVfbWlzbWF0Y2gnKSxcbiAgICAgICAgICAgIC8qKiBjbGllbnQncyBuYW1lIGluIFBPQSBkb2N1bWVudHMgZG9lcyBub3QgbWF0Y2ggKi9cbiAgICAgICAgICAgIGlzX3BvYV9hZGRyZXNzX21pc21hdGNoOiBhY2NvdW50X3N0YXR1cy5oYXMoJ3BvYV9hZGRyZXNzX21pc21hdGNoJyksXG4gICAgICAgICAgICAvKiogY2xpZW50IGhhcyBhdHRlbXB0ZWQgUE9BIGJlZm9yZSAqL1xuICAgICAgICAgICAgaGFzX3BvYV9iZWVuX2F0dGVtcHRlZDogZ2V0X2FjY291bnRfc3RhdHVzX2RhdGE/LmF1dGhlbnRpY2F0aW9uPy5kb2N1bWVudD8uc3RhdHVzICE9PSAnbm9uZScsXG4gICAgICAgICAgICAvKiogY2xpZW50IGhhcyBhdHRlbXB0ZWQgUE9JIGJlZm9yZSAqL1xuICAgICAgICAgICAgaGFzX3BvaV9iZWVuX2F0dGVtcHRlZDogZ2V0X2FjY291bnRfc3RhdHVzX2RhdGE/LmF1dGhlbnRpY2F0aW9uPy5pZGVudGl0eT8uc3RhdHVzICE9PSAnbm9uZScsXG4gICAgICAgICAgICAvKiogY2xpZW50J3MgcG9pIHZlcmlmaWNhdGlvbiBzdGF0dXMgKi9cbiAgICAgICAgICAgIHBvaV9zdGF0dXM6IGdldF9hY2NvdW50X3N0YXR1c19kYXRhPy5hdXRoZW50aWNhdGlvbj8uaWRlbnRpdHk/LnN0YXR1cyxcbiAgICAgICAgICAgIC8qKiBjbGllbnQncyBwb2EgdmVyaWZpY2F0aW9uIHN0YXR1cyAqL1xuICAgICAgICAgICAgcG9hX3N0YXR1czogZ2V0X2FjY291bnRfc3RhdHVzX2RhdGE/LmF1dGhlbnRpY2F0aW9uPy5kb2N1bWVudD8uc3RhdHVzLFxuICAgICAgICB9O1xuICAgIH0sIFtnZXRfYWNjb3VudF9zdGF0dXNfZGF0YV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbW9kaWZpZWRfYWNjb3VudF9zdGF0dXMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUF1dGhlbnRpY2F0aW9uO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZUludmFsaWRhdGVRdWVyeSBmcm9tICcuLi91c2VJbnZhbGlkYXRlUXVlcnknO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxudHlwZSBUU2V0U2V0dGluZ3NQYXlsb2FkID0gTm9uTnVsbGFibGU8XG4gICAgTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8UGFyYW1ldGVyczxSZXR1cm5UeXBlPHR5cGVvZiB1c2VNdXRhdGlvbjwnc2V0X3NldHRpbmdzJz4+WydtdXRhdGUnXT4+WzBdPlsncGF5bG9hZCddXG4+O1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBnZXQgYW5kIHVwZGF0ZSB0aGUgdXNlciBzZXR0aW5ncy4gKi9cbmNvbnN0IHVzZVNldHRpbmdzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ2dldF9zZXR0aW5ncycpO1xuICAgIGNvbnN0IHsgbXV0YXRlLCAuLi5tdXRhdGVfcmVzdCB9ID0gdXNlTXV0YXRpb24oJ3NldF9zZXR0aW5ncycsIHsgb25TdWNjZXNzOiAoKSA9PiBpbnZhbGlkYXRlKCdnZXRfc2V0dGluZ3MnKSB9KTtcbiAgICBjb25zdCBpbnZhbGlkYXRlID0gdXNlSW52YWxpZGF0ZVF1ZXJ5KCk7XG5cbiAgICBjb25zdCB1cGRhdGUgPSB1c2VDYWxsYmFjaygocGF5bG9hZDogVFNldFNldHRpbmdzUGF5bG9hZCkgPT4gbXV0YXRlKHsgcGF5bG9hZCB9KSwgW211dGF0ZV0pO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIHNldHRpbmdzIHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX3NldHRpbmdzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IGNpdGl6ZW5zaGlwID0gZGF0YT8uZ2V0X3NldHRpbmdzPy5jaXRpemVuID8/ICcnO1xuICAgICAgICBjb25zdCBhY2NvdW50ID0gZGF0YT8uZ2V0X3NldHRpbmdzPy5hY2NvdW50X29wZW5pbmdfcmVhc29uID8/ICcnO1xuICAgICAgICBjb25zdCBwbGFjZW9mYmlydGggPSBkYXRhPy5nZXRfc2V0dGluZ3M/LnBsYWNlX29mX2JpcnRoID8/ICcnO1xuICAgICAgICBjb25zdCB0YXhSZXNpZGVuY2UgPSBkYXRhPy5nZXRfc2V0dGluZ3M/LnRheF9yZXNpZGVuY2UgPz8gJyc7XG4gICAgICAgIGNvbnN0IHRheElkZW50aWZpY2F0aW9ubnVtYmVyID0gZGF0YT8uZ2V0X3NldHRpbmdzPy50YXhfaWRlbnRpZmljYXRpb25fbnVtYmVyID8/ICcnO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5kYXRhPy5nZXRfc2V0dGluZ3MsXG4gICAgICAgICAgICBoYXNfc3VibWl0dGVkX3BlcnNvbmFsX2RldGFpbHM6IEJvb2xlYW4oXG4gICAgICAgICAgICAgICAgY2l0aXplbnNoaXAgJiYgYWNjb3VudCAmJiBwbGFjZW9mYmlydGggJiYgdGF4UmVzaWRlbmNlICYmIHRheElkZW50aWZpY2F0aW9ubnVtYmVyXG4gICAgICAgICAgICApLFxuICAgICAgICB9O1xuICAgIH0sIFtkYXRhPy5nZXRfc2V0dGluZ3NdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgc2V0dGluZ3MgcmVzcG9uc2UuICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX3NldHRpbmdzLFxuICAgICAgICAvKiogRnVuY3Rpb24gdG8gdXBkYXRlIHVzZXIgc2V0dGluZ3MgKi9cbiAgICAgICAgdXBkYXRlLFxuICAgICAgICAvKiogVGhlIG11dGF0aW9uIHJlbGF0ZWQgaW5mb3JtYXRpb24gKi9cbiAgICAgICAgbXV0YXRpb246IG11dGF0ZV9yZXN0LFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VTZXR0aW5ncztcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZVNldHRpbmdzIGZyb20gJy4vdXNlU2V0dGluZ3MnO1xuXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IHJldHVybnMgdGhlIGF2YWlsYWJsZSBsYW5kaW5nIGNvbXBhbmllcyBvZiB0aGUgdXNlcidzIGNvdW50cnkuICovXG5jb25zdCB1c2VMYW5kaW5nQ29tcGFueSA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IHNldHRpbmdzX2RhdGEgfSA9IHVzZVNldHRpbmdzKCk7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgnbGFuZGluZ19jb21wYW55Jywge1xuICAgICAgICBwYXlsb2FkOiB7IGxhbmRpbmdfY29tcGFueTogc2V0dGluZ3NfZGF0YT8uY291bnRyeV9jb2RlIHx8ICcnIH0sXG4gICAgICAgIG9wdGlvbnM6IHsgZW5hYmxlZDogQm9vbGVhbihzZXR0aW5nc19kYXRhPy5jb3VudHJ5X2NvZGUpIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgbGFuZGluZyBjb21wYW55IHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX2xhbmRpbmdfY29tcGFueSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWRhdGE/LmxhbmRpbmdfY29tcGFueSkgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiB7IC4uLmRhdGEubGFuZGluZ19jb21wYW55IH07XG4gICAgfSwgW2RhdGE/LmxhbmRpbmdfY29tcGFueV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBsYW5kaW5nIGNvbXBhbnkgcmVzcG9uc2UuICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2xhbmRpbmdfY29tcGFueSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlTGFuZGluZ0NvbXBhbnk7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUxhbmRpbmdDb21wYW55IGZyb20gJy4vdXNlTGFuZGluZ0NvbXBhbnknO1xuXG4vKipcbiAqIEEgY3VzdG9tIGhvb2sgdGhhdCBwcm92aWRlcyBmbGFncyB0byBkZXRlcm1pbmUgdGhlIGFjY2Vzc2liaWxpdHkgc3RhdHVzIG9mIGNUcmFkZXIgYW5kIER4dHJhZGUgYmFzZWQgb24gdGhlIGN1cnJlbnQgY291bnRyeSBvZiByZXNpZGVuY2UuXG4gKi9cbmNvbnN0IHVzZUFjY2VzaWJsZVBsYXRmb3JtcyA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IGxhbmRpbmdfY29tcGFueSwgLi4ucmVzdCB9ID0gdXNlTGFuZGluZ0NvbXBhbnkoKTtcblxuICAgIGNvbnN0IG1vZGlmaWVkX2FjY2VzaWJsZV9wbGF0Zm9ybSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWxhbmRpbmdfY29tcGFueSkgcmV0dXJuO1xuXG4gICAgICAgIC8qKiBjaGVjayBpZiBjdHJhZGVyIGp1cmlzZGljdGlvbiBpcyBvZmZlcmVkIGluIHRoZSBsYW5kaW5nX2NvbXBhbnkgcmVzcG9uc2UgICovXG4gICAgICAgIGNvbnN0IGlzX2N0cmFkZXJfYXZhaWxhYmxlID0gbGFuZGluZ19jb21wYW55Py5jdHJhZGVyPy5hbGw/LnN0YW5kYXJkID09PSAnc3ZnJztcbiAgICAgICAgLyoqIGNoZWNrIGlmIGR4dHJhZGUgaXMgaW4gdGhlIGxhbmRpbmdfY29tcGFueSByZXNwb25zZSAqL1xuICAgICAgICBjb25zdCBpc19keHRyYWRlX2F2YWlsYWJsZSA9IGxhbmRpbmdfY29tcGFueT8uZHh0cmFkZV9hbGxfY29tcGFueTtcbiAgICAgICAgLyoqIGNoZWNrIGlmIE1UNSBpcyBpbiB0aGUgbGFuZGluZ19jb21wYW55IHJlc3BvbnNlICovXG4gICAgICAgIGNvbnN0IGlzX210NV9hdmFpbGFibGUgPVxuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55Py5tdF9maW5hbmNpYWxfY29tcGFueSB8fFxuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55Py5tdF9nYW1pbmdfY29tcGFueSB8fFxuICAgICAgICAgICAgbGFuZGluZ19jb21wYW55Py5tdF9hbGxfY29tcGFueTtcblxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLyoqIGlzIGN0cmFkZXIgYWNjZXNzaWJsZSBmb3IgdGhpcyBjb3VudHJ5IG9mIHJlc2lkZW5jZSAqL1xuICAgICAgICAgICAgaXNfY3RyYWRlcl9hdmFpbGFibGU6ICEhaXNfY3RyYWRlcl9hdmFpbGFibGUsXG4gICAgICAgICAgICAvKiogaXMgZHh0cmFkZSBhY2Nlc3NpYmxlIGZvciB0aGlzIGNvdW50cnkgb2YgcmVzaWRlbmNlICovXG4gICAgICAgICAgICBpc19keHRyYWRlX2F2YWlsYWJsZTogISFpc19keHRyYWRlX2F2YWlsYWJsZSxcbiAgICAgICAgICAgIC8qKiBpcyBtdDUgYWNjZXNzaWJsZSBmb3IgdGhpcyBjb3VudHJ5IG9mIHJlc2lkZW5jZSAqL1xuICAgICAgICAgICAgaXNfbXQ1X2F2YWlsYWJsZTogISFpc19tdDVfYXZhaWxhYmxlLFxuICAgICAgICB9O1xuICAgIH0sIFtsYW5kaW5nX2NvbXBhbnldKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2FjY2VzaWJsZV9wbGF0Zm9ybSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQWNjZXNpYmxlUGxhdGZvcm1zO1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcblxuY29uc3QgbWFya2V0X3R5cGVfdG9fbGV2ZXJhZ2VfbWFwcGVyOiBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+ID0ge1xuICAgIGdhbWluZzogNTAwLFxuICAgIGZpbmFuY2lhbDogMTAwMCxcbiAgICBhbGw6IDEwMCxcbn07XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgbGlzdCBvZiBhdmFpbGFibGUgTVQ1IGFjY291bnRzLiAqL1xuY29uc3QgdXNlQXZhaWxhYmxlTVQ1QWNjb3VudHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBpc1N1Y2Nlc3MgfSA9IHVzZUF1dGhvcml6ZSgpO1xuICAgIGNvbnN0IHsgZGF0YTogbXQ1X2F2YWlsYWJsZV9hY2NvdW50cywgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ3RyYWRpbmdfcGxhdGZvcm1fYXZhaWxhYmxlX2FjY291bnRzJywge1xuICAgICAgICBwYXlsb2FkOiB7IHBsYXRmb3JtOiAnbXQ1JyB9LFxuICAgICAgICBvcHRpb25zOiB7IGVuYWJsZWQ6IGlzU3VjY2VzcyB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgbW9kaWZpZWRfbXQ1X2F2YWlsYWJsZV9hY2NvdW50cyA9IHVzZU1lbW8oXG4gICAgICAgICgpID0+XG4gICAgICAgICAgICBtdDVfYXZhaWxhYmxlX2FjY291bnRzPy50cmFkaW5nX3BsYXRmb3JtX2F2YWlsYWJsZV9hY2NvdW50cz8ubWFwKGFjY291bnQgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgIC8qKiBUaGUgbWFya2V0IHR5cGUgZm9yIHRoZSBhY2NvdW50ICovXG4gICAgICAgICAgICAgICAgICAgIG1hcmtldF90eXBlOiBhY2NvdW50Lm1hcmtldF90eXBlID09PSAnZ2FtaW5nJyA/ICdzeW50aGV0aWMnIDogYWNjb3VudC5tYXJrZXRfdHlwZSxcbiAgICAgICAgICAgICAgICAgICAgLyoqIFRoZSBwbGF0Zm9ybSBmb3IgdGhlIGFjY291bnQgKi9cbiAgICAgICAgICAgICAgICAgICAgcGxhdGZvcm06ICdtdDUnLFxuICAgICAgICAgICAgICAgICAgICAvKiogTGV2ZXJhZ2UgZm9yIHRoZSBhY2NvdW50ICovXG4gICAgICAgICAgICAgICAgICAgIGxldmVyYWdlOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWFya2V0X3R5cGVfdG9fbGV2ZXJhZ2VfbWFwcGVyW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjY291bnQubWFya2V0X3R5cGUgYXMga2V5b2YgdHlwZW9mIG1hcmtldF90eXBlX3RvX2xldmVyYWdlX21hcHBlclxuICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICB9IGFzIGNvbnN0O1xuICAgICAgICAgICAgfSksXG4gICAgICAgIFttdDVfYXZhaWxhYmxlX2FjY291bnRzPy50cmFkaW5nX3BsYXRmb3JtX2F2YWlsYWJsZV9hY2NvdW50c11cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBhdmFpbGFibGUgTVQ1IGFjY291bnRzICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX210NV9hdmFpbGFibGVfYWNjb3VudHMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUF2YWlsYWJsZU1UNUFjY291bnRzO1xuIiwiaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxuLyoqIEEgY3VzdG9tIGhvb2tzIGZvciBjYW5jZWxsaW5nIGNyeXB0byB0cmFuc2FjdGlvbiAgKi9cbmNvbnN0IHVzZUNhbmNlbENyeXB0b1RyYW5zYWN0aW9uID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YSwgbXV0YXRlLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbignY2FzaGllcl93aXRoZHJhd2FsX2NhbmNlbCcpO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBjYW5jZWwgY3J5cHRvIHRyYW5zYWN0aW9uIHJlc3BvbnNlICovXG4gICAgICAgIGRhdGE6IGRhdGE/LmNhc2hpZXJfd2l0aGRyYXdhbF9jYW5jZWwsXG4gICAgICAgIC8qKiBGdW5jdGlvbiB0byBjYW5jZWwgY3J5cHRvIHRyYW5zYWN0aW9uICovXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ2FuY2VsQ3J5cHRvVHJhbnNhY3Rpb247XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5cbnR5cGUgVENhc2hpZXJQYXJhbSA9IE5vbk51bGxhYmxlPFxuICAgIFBhcmFtZXRlcnM8UmV0dXJuVHlwZTx0eXBlb2YgdXNlTXV0YXRpb248J2Nhc2hpZXInPj5bJ211dGF0ZSddPlxuPlswXVsncGF5bG9hZCddWydjYXNoaWVyJ107XG5cbnR5cGUgVFBhcmFtcyA9IE9taXQ8XG4gICAgTm9uTnVsbGFibGU8UGFyYW1ldGVyczxSZXR1cm5UeXBlPHR5cGVvZiB1c2VNdXRhdGlvbjwnY2FzaGllcic+PlsnbXV0YXRlJ10+PlswXVsncGF5bG9hZCddLFxuICAgICdjYXNoaWVyJyB8ICdwcm92aWRlcidcbj47XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgZGVwb3NpdCBhbmQgd2l0aGRyYXdhbCBmaWF0IGFkZHJlc3MuICovXG5jb25zdCB1c2VDYXNoaWVyRmlhdEFkZHJlc3MgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBtdXRhdGU6IF9tdXRhdGUsIC4uLnJlc3QgfSA9IHVzZU11dGF0aW9uKCdjYXNoaWVyJyk7XG4gICAgY29uc3QgaWZyYW1lX3VybCA9IHR5cGVvZiBkYXRhPy5jYXNoaWVyID09PSAnc3RyaW5nJyA/IGRhdGE/LmNhc2hpZXIgOiB1bmRlZmluZWQ7XG5cbiAgICBjb25zdCBtdXRhdGUgPSB1c2VDYWxsYmFjayhcbiAgICAgICAgKGNhc2hpZXI6IFRDYXNoaWVyUGFyYW0sIHBheWxvYWQ/OiBUUGFyYW1zKSA9PlxuICAgICAgICAgICAgX211dGF0ZSh7IHBheWxvYWQ6IHsgY2FzaGllciwgcHJvdmlkZXI6ICdkb3VnaGZsb3cnLCAuLi5wYXlsb2FkIH0gfSksXG4gICAgICAgIFtfbXV0YXRlXVxuICAgICk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIGRlcG9zaXQvd2l0aGRyYXdhbCBmaWF0IGlmcmFtZSAqL1xuICAgICAgICBkYXRhOiBpZnJhbWVfdXJsLFxuICAgICAgICAvKiogRnVuY3Rpb24gdG8gZ2V0IGRlcG9zaXQvd2l0aGRyYXdhbCBmaWF0IGFkZHJlc3MgKi9cbiAgICAgICAgbXV0YXRlLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VDYXNoaWVyRmlhdEFkZHJlc3M7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgY291bnRyeSBjb25maWcgaW5mb3JtYXRpb24gZnJvbSBgcmVzaWRlbmNlX2xpc3RgIGVuZHBvaW50LiAqL1xuY29uc3QgdXNlQ291bnRyeUNvbmZpZyA9ICgpID0+IHtcbiAgICBjb25zdCB7IGRhdGE6IHJlc2lkZW5jZV9saXN0X2RhdGEsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCdyZXNpZGVuY2VfbGlzdCcpO1xuXG4gICAgLy8gQWRkIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gdG8gdGhlIGNvdW50cnkgY29uZmlnLlxuICAgIGNvbnN0IG1vZGlmaWVkX3Jlc2lkZW5jZV9saXN0ID0gdXNlTWVtbyhcbiAgICAgICAgKCkgPT5cbiAgICAgICAgICAgIHJlc2lkZW5jZV9saXN0X2RhdGE/LnJlc2lkZW5jZV9saXN0Py5tYXAoY291bnRyeV9jb25maWcgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvdW50cnlfY29uZmlnLFxuICAgICAgICAgICAgICAgICAgICAvKiogRGV0ZXJtaW5lIGlmIHRoZSBjb3VudHJ5IGlzIGRpc2FibGVkICovXG4gICAgICAgICAgICAgICAgICAgIGlzX2Rpc2FibGVkOiBjb3VudHJ5X2NvbmZpZy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICAvKiogMi1sZXR0ZXIgY291bnRyeSBjb2RlICovXG4gICAgICAgICAgICAgICAgICAgIGNvZGU6IGAke2NvdW50cnlfY29uZmlnLnZhbHVlfWAudG9VcHBlckNhc2UoKSxcbiAgICAgICAgICAgICAgICAgICAgLyoqIENvdW50cnkgbmFtZSAqL1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBgJHtjb3VudHJ5X2NvbmZpZy50ZXh0fWAsXG4gICAgICAgICAgICAgICAgICAgIC8qKiBEZXRlcm1pbmUgaWYgdGhlIElEViBzZXJ2aWNlIGlzIHN1cHBvcnRlZCBmb3IgdGhlIGNvdW50cnkgKi9cbiAgICAgICAgICAgICAgICAgICAgaXNfaWR2X3N1cHBvcnRlZDogY291bnRyeV9jb25maWcuaWRlbnRpdHk/LnNlcnZpY2VzPy5pZHY/LmlzX2NvdW50cnlfc3VwcG9ydGVkID09PSAxLFxuICAgICAgICAgICAgICAgICAgICAvKiogRGV0ZXJtaW5lIGlmIHRoZSBPbmZpZG8gc2VydmljZSBpcyBzdXBwb3J0ZWQgZm9yIHRoZSBjb3VudHJ5ICovXG4gICAgICAgICAgICAgICAgICAgIGlzX29uZmlkb19zdXBwb3J0ZWQ6IGNvdW50cnlfY29uZmlnLmlkZW50aXR5Py5zZXJ2aWNlcz8ub25maWRvPy5pc19jb3VudHJ5X3N1cHBvcnRlZCA9PT0gMSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSksXG4gICAgICAgIFtyZXNpZGVuY2VfbGlzdF9kYXRhPy5yZXNpZGVuY2VfbGlzdF1cbiAgICApO1xuXG4gICAgLy8gVHJhbnNmb3JtIHRoZSBjb3VudHJ5IGNvbmZpZyBhcnJheSBpbnRvIGEgcmVjb3JkIG9iamVjdC5cbiAgICBjb25zdCB0cmFuc2Zvcm1lZF9yZXNpZGVuY2VfbGlzdCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gbW9kaWZpZWRfcmVzaWRlbmNlX2xpc3Q/LnJlZHVjZTxSZWNvcmQ8c3RyaW5nLCB0eXBlb2YgbW9kaWZpZWRfcmVzaWRlbmNlX2xpc3RbbnVtYmVyXT4+KFxuICAgICAgICAgICAgKHByZXZpb3VzLCBjdXJyZW50KSA9PiAoeyAuLi5wcmV2aW91cywgW2N1cnJlbnQuY29kZV06IGN1cnJlbnQgfSksXG4gICAgICAgICAgICB7fVxuICAgICAgICApO1xuICAgIH0sIFttb2RpZmllZF9yZXNpZGVuY2VfbGlzdF0pO1xuXG4gICAgY29uc3QgZ2V0Q29uZmlnID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIChjdXJyZW5jeTogc3RyaW5nKSA9PiB0cmFuc2Zvcm1lZF9yZXNpZGVuY2VfbGlzdD8uW2N1cnJlbmN5IGFzIHN0cmluZ10sXG4gICAgICAgIFt0cmFuc2Zvcm1lZF9yZXNpZGVuY2VfbGlzdF1cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIEF2YWlsYWJsZSBjb3VudHJpZXMgYW5kIHRoZWlyIGluZm9ybWF0aW9uICovXG4gICAgICAgIGRhdGE6IHRyYW5zZm9ybWVkX3Jlc2lkZW5jZV9saXN0LFxuICAgICAgICAvKiogUmV0dXJucyB0aGUgY291bnRyeSBjb25maWcgb2JqZWN0IGZvciB0aGUgZ2l2ZW4gY291bnRyeSBjb2RlICovXG4gICAgICAgIGdldENvbmZpZyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ291bnRyeUNvbmZpZztcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlTXV0YXRpb24gZnJvbSAnLi4vdXNlTXV0YXRpb24nO1xuaW1wb3J0IHVzZUludmFsaWRhdGVRdWVyeSBmcm9tICcuLi91c2VJbnZhbGlkYXRlUXVlcnknO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBjcmVhdGUgTVQ1IGFjY291bnRzLiAqL1xuY29uc3QgdXNlQ3JlYXRlTVQ1QWNjb3VudCA9ICgpID0+IHtcbiAgICBjb25zdCBpbnZhbGlkYXRlID0gdXNlSW52YWxpZGF0ZVF1ZXJ5KCk7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbignbXQ1X25ld19hY2NvdW50Jywge1xuICAgICAgICBvblN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgICAgICAgIGludmFsaWRhdGUoJ210NV9sb2dpbl9saXN0Jyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgY3JlYXRlIE1UNSBhY2NvdW50IHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX2RhdGEgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhPy5tdDVfbmV3X2FjY291bnQpIHJldHVybiB1bmRlZmluZWQ7XG5cbiAgICAgICAgcmV0dXJuIHsgLi4uZGF0YT8ubXQ1X25ld19hY2NvdW50IH07XG4gICAgfSwgW2RhdGFdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgcmVzcG9uc2UgYW5kIHRoZSBtdXRhdGlvbiBvZiB0aGUgY3JlYXRlIE1UNSBhY2NvdW50IEFQSSByZXF1ZXN0ICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2RhdGEsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUNyZWF0ZU1UNUFjY291bnQ7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcbmltcG9ydCB1c2VJbnZhbGlkYXRlUXVlcnkgZnJvbSAnLi4vdXNlSW52YWxpZGF0ZVF1ZXJ5JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBjcmVhdGVzIGEgbmV3IHJlYWwgdHJhZGluZyBhY2NvdW50LiAqL1xuY29uc3QgdXNlQ3JlYXRlTmV3UmVhbEFjY291bnQgPSAoKSA9PiB7XG4gICAgY29uc3QgaW52YWxpZGF0ZSA9IHVzZUludmFsaWRhdGVRdWVyeSgpO1xuICAgIGNvbnN0IHsgZGF0YSwgLi4ucmVzdCB9ID0gdXNlTXV0YXRpb24oJ25ld19hY2NvdW50X3JlYWwnLCB7XG4gICAgICAgIG9uU3VjY2VzczogKCkgPT4ge1xuICAgICAgICAgICAgaW52YWxpZGF0ZSgnYXV0aG9yaXplJyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgbmV3IHJlYWwgdHJhZGluZyBhY2NvdW50IHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX2RhdGEgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhPy5uZXdfYWNjb3VudF9yZWFsKSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIHsgLi4uZGF0YT8ubmV3X2FjY291bnRfcmVhbCB9O1xuICAgIH0sIFtkYXRhXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIHJlc3BvbnNlIGFuZCB0aGUgbXV0YXRpb24gb2YgdGhlIG5ldyBhY2NvdW50IHJlYWwgQVBJIHJlcXVlc3QgKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfZGF0YSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3JlYXRlTmV3UmVhbEFjY291bnQ7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcbmltcG9ydCB1c2VJbnZhbGlkYXRlUXVlcnkgZnJvbSAnLi4vdXNlSW52YWxpZGF0ZVF1ZXJ5JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gY3JlYXRlIHRoaXJkIHBhcnR5IENGRCBhY2NvdW50cy4gKi9cbmNvbnN0IHVzZUNyZWF0ZU90aGVyQ0ZEQWNjb3VudCA9ICgpID0+IHtcbiAgICBjb25zdCBpbnZhbGlkYXRlID0gdXNlSW52YWxpZGF0ZVF1ZXJ5KCk7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbigndHJhZGluZ19wbGF0Zm9ybV9uZXdfYWNjb3VudCcsIHtcbiAgICAgICAgb25TdWNjZXNzOiAoKSA9PiB7XG4gICAgICAgICAgICBpbnZhbGlkYXRlKCd0cmFkaW5nX3BsYXRmb3JtX2FjY291bnRzJyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgY3JlYXRlIE90aGVyIENGRCBhY2NvdW50IHJlc3BvbnNlLlxuICAgIGNvbnN0IG1vZGlmaWVkX2RhdGEgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhKSByZXR1cm4gdW5kZWZpbmVkO1xuXG4gICAgICAgIHJldHVybiB7IC4uLmRhdGEgfTtcbiAgICB9LCBbZGF0YV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSByZXNwb25zZSBhbmQgdGhlIG11dGF0aW9uIG9mIHRoZSBjcmVhdGUgdGhpcmQgcGFydHkgQ0ZEcyBBUEkgcmVxdWVzdCAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9kYXRhLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VDcmVhdGVPdGhlckNGREFjY291bnQ7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUludmFsaWRhdGVRdWVyeSBmcm9tICcuLi91c2VJbnZhbGlkYXRlUXVlcnknO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcbmltcG9ydCB1c2VDdXJyZW5jeUNvbmZpZyBmcm9tICcuL3VzZUN1cnJlbmN5Q29uZmlnJztcbmltcG9ydCB7IGRpc3BsYXlNb25leSB9IGZyb20gJy4uL3V0aWxzJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gY3JlYXRlIG5ldyB3YWxsZXQgYWNjb3VudCAqL1xuY29uc3QgdXNlQ3JlYXRlV2FsbGV0ID0gKCkgPT4ge1xuICAgIGNvbnN0IGludmFsaWRhdGUgPSB1c2VJbnZhbGlkYXRlUXVlcnkoKTtcbiAgICBjb25zdCB7IGdldENvbmZpZyB9ID0gdXNlQ3VycmVuY3lDb25maWcoKTtcbiAgICBjb25zdCB7XG4gICAgICAgIGRhdGEsXG4gICAgICAgIG11dGF0ZTogX211dGF0ZSxcbiAgICAgICAgLi4ucmVzdFxuICAgIH0gPSB1c2VNdXRhdGlvbignbmV3X2FjY291bnRfd2FsbGV0Jywge1xuICAgICAgICBvblN1Y2Nlc3M6ICgpID0+IHtcbiAgICAgICAgICAgIGludmFsaWRhdGUoJ2F1dGhvcml6ZScpO1xuICAgICAgICAgICAgaW52YWxpZGF0ZSgnYXZhaWxhYmxlX2FjY291bnRzJyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBtdXRhdGUgPSAocGFyYW1zOiBQYXJhbWV0ZXJzPHR5cGVvZiBfbXV0YXRlPlswXVsncGF5bG9hZCddKSA9PiB7XG4gICAgICAgIHJldHVybiBfbXV0YXRlKHsgcGF5bG9hZDogcGFyYW1zIH0pO1xuICAgIH07XG5cbiAgICBjb25zdCBtb2RpZmllZF9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghZGF0YT8ubmV3X2FjY291bnRfd2FsbGV0KSByZXR1cm47XG4gICAgICAgIGNvbnN0IGN1cnJlbmN5Q29uZmlnID0gZ2V0Q29uZmlnKGRhdGE/Lm5ld19hY2NvdW50X3dhbGxldC5jdXJyZW5jeSB8fCAnVVNEJyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5kYXRhLm5ld19hY2NvdW50X3dhbGxldCxcbiAgICAgICAgICAgIC8qKiBUaGUgYmFsYW5jZSBvZiB0aGUgYWNjb3VudCBpbiBjdXJyZW5jeSBmb3JtYXQuICovXG4gICAgICAgICAgICBkaXNwbGF5X2JhbGFuY2U6IGRpc3BsYXlNb25leSgwLCBjdXJyZW5jeUNvbmZpZz8uZGlzcGxheV9jb2RlIHx8ICdVU0QnLCB7XG4gICAgICAgICAgICAgICAgZnJhY3Rpb25hbF9kaWdpdHM6IGN1cnJlbmN5Q29uZmlnPy5mcmFjdGlvbmFsX2RpZ2l0cyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH0sIFtkYXRhPy5uZXdfYWNjb3VudF93YWxsZXQsIGdldENvbmZpZ10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIE5ldyBhY2NvdW50IGluZm9ybWF0aW9uICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX2RhdGEsXG4gICAgICAgIC8qKiBBIGZ1bmN0aW9uIHRvIGNyZWF0ZSBuZXcgd2FsbGV0ICovXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3JlYXRlV2FsbGV0O1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRUcnVuY2F0ZWRTdHJpbmcgfSBmcm9tICdAZGVyaXYvdXRpbHMnO1xuaW1wb3J0IHVzZVN1YnNjcmlwdGlvbiBmcm9tICcuLi91c2VTdWJzY3JpcHRpb24nO1xuaW1wb3J0IHVzZUFjdGl2ZUFjY291bnQgZnJvbSAnLi91c2VBY3RpdmVBY2NvdW50JztcbmltcG9ydCB1c2VBdXRob3JpemUgZnJvbSAnLi91c2VBdXRob3JpemUnO1xuaW1wb3J0IHsgZGlzcGxheU1vbmV5IH0gZnJvbSAnLi4vdXRpbHMnO1xuXG50eXBlIFRUcmFuc2FjdGlvbiA9IE5vbk51bGxhYmxlPFxuICAgIE5vbk51bGxhYmxlPFJldHVyblR5cGU8dHlwZW9mIHVzZVN1YnNjcmlwdGlvbjwnY2FzaGllcl9wYXltZW50cyc+PlsnZGF0YSddPlsnY2FzaGllcl9wYXltZW50cyddXG4+WydjcnlwdG8nXVtudW1iZXJdO1xuXG50eXBlIFRTdGF0dXMgPSBUVHJhbnNhY3Rpb25bJ3N0YXR1c19jb2RlJ107XG5cbnR5cGUgVERlcG9zaXRTdGF0dXMgPSAnUEVORElORycgfCAnQ09ORklSTUVEJyB8ICdFUlJPUic7XG5cbnR5cGUgVFdpdGhkcmF3YWxTdGF0dXMgPSBFeGNsdWRlPFRTdGF0dXMsIFREZXBvc2l0U3RhdHVzPjtcblxuLy8gU2luY2UgQkUgc2VuZHMgdGhlIGBzdGF0dXNfY29kZWAgZm9yIGJvdGggYGRlcG9zaXRgIGFuZCBgd2l0aGRyYXdhbGAgaW4gdGhlIHNhbWUgZmllbGQsXG4vLyBIZXJlIHdlIG1vZGlmeSB0aGUgQkUgdHlwZSB0byBtYWtlIGBzdGF0dXNfY29kZWAgdHlwZSBtb3JlIHNwZWNpZmljIHRvIHRoZSBgdHJhbnNhY3Rpb25fdHlwZWAgZmllbGQuXG50eXBlIFRNb2RpZmllZFRyYW5zYWN0aW9uID0gT21pdDxUVHJhbnNhY3Rpb24sICdzdGF0dXNfY29kZScgfCAndHJhbnNhY3Rpb25fdHlwZSc+ICZcbiAgICAoXG4gICAgICAgIHwgeyB0cmFuc2FjdGlvbl90eXBlOiAnZGVwb3NpdCc7IHN0YXR1c19jb2RlOiBURGVwb3NpdFN0YXR1cyB9XG4gICAgICAgIHwgeyB0cmFuc2FjdGlvbl90eXBlOiAnd2l0aGRyYXdhbCc7IHN0YXR1c19jb2RlOiBUV2l0aGRyYXdhbFN0YXR1cyB9XG4gICAgKTtcblxuY29uc3QgZ2V0Rm9ybWF0dGVkQ29uZmlybWF0aW9ucyA9ICh0cmFuc2FjdGlvbjogVE1vZGlmaWVkVHJhbnNhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKHRyYW5zYWN0aW9uLnN0YXR1c19jb2RlKSB7XG4gICAgICAgIGNhc2UgJ0NPTkZJUk1FRCc6XG4gICAgICAgICAgICByZXR1cm4gJ0NvbmZpcm1lZCc7XG4gICAgICAgIGNhc2UgJ0VSUk9SJzpcbiAgICAgICAgICAgIHJldHVybiAnTkEnO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uLmNvbmZpcm1hdGlvbnMgfHwgJ1BlbmRpbmcnO1xuICAgIH1cbn07XG5cbmNvbnN0IGdldFN0YXR1c05hbWUgPSAoc3RhdHVzX2NvZGU6IFRNb2RpZmllZFRyYW5zYWN0aW9uWydzdGF0dXNfY29kZSddKSA9PiB7XG4gICAgc3dpdGNoIChzdGF0dXNfY29kZSkge1xuICAgICAgICBjYXNlICdDT05GSVJNRUQnOlxuICAgICAgICBjYXNlICdTRU5UJzpcbiAgICAgICAgICAgIHJldHVybiAnU3VjY2Vzc2Z1bCc7XG4gICAgICAgIGNhc2UgJ0VSUk9SJzpcbiAgICAgICAgY2FzZSAnUkVKRUNURUQnOlxuICAgICAgICBjYXNlICdSRVZFUlRFRCc6XG4gICAgICAgICAgICByZXR1cm4gJ1Vuc3VjY2Vzc2Z1bCc7XG4gICAgICAgIGNhc2UgJ1BFTkRJTkcnOlxuICAgICAgICBjYXNlICdQRVJGT1JNSU5HX0JMT0NLQ0hBSU5fVFhOJzpcbiAgICAgICAgY2FzZSAnUFJPQ0VTU0lORyc6XG4gICAgICAgIGNhc2UgJ1JFVkVSVElORyc6XG4gICAgICAgIGNhc2UgJ1ZFUklGSUVEJzpcbiAgICAgICAgICAgIHJldHVybiAnSW4gcHJvY2Vzcyc7XG4gICAgICAgIGNhc2UgJ0NBTkNFTExFRCc6XG4gICAgICAgICAgICByZXR1cm4gJ0NhbmNlbGxlZCc7XG4gICAgICAgIGNhc2UgJ0xPQ0tFRCc6XG4gICAgICAgICAgICByZXR1cm4gJ0luIHJldmlldyc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxufTtcblxuY29uc3QgZ2V0U3RhdHVzRGVzY3JpcHRpb24gPSAoXG4gICAgdHJhbnNhY3Rpb25fdHlwZTogVE1vZGlmaWVkVHJhbnNhY3Rpb25bJ3RyYW5zYWN0aW9uX3R5cGUnXSxcbiAgICBzdGF0dXNfY29kZTogVE1vZGlmaWVkVHJhbnNhY3Rpb25bJ3N0YXR1c19jb2RlJ11cbikgPT4ge1xuICAgIHN3aXRjaCAoc3RhdHVzX2NvZGUpIHtcbiAgICAgICAgLy8gZGVwb3NpdC1zcGVjaWZpYzpcbiAgICAgICAgY2FzZSAnQ09ORklSTUVEJzpcbiAgICAgICAgICAgIHJldHVybiAnWW91ciBkZXBvc2l0IGlzIHN1Y2Nlc3NmdWwuJztcbiAgICAgICAgY2FzZSAnUEVORElORyc6XG4gICAgICAgICAgICByZXR1cm4gXCJXZSd2ZSByZWNlaXZlZCB5b3VyIHJlcXVlc3QgYW5kIGFyZSB3YWl0aW5nIGZvciBtb3JlIGJsb2NrY2hhaW4gY29uZmlybWF0aW9ucy5cIjtcbiAgICAgICAgLy8gd2l0aGRyYXdhbC1zcGVjaWZpYzpcbiAgICAgICAgY2FzZSAnQ0FOQ0VMTEVEJzpcbiAgICAgICAgICAgIHJldHVybiBcIllvdSd2ZSBjYW5jZWxsZWQgeW91ciB3aXRoZHJhd2FsIHJlcXVlc3QuXCI7XG4gICAgICAgIGNhc2UgJ0xPQ0tFRCc6XG4gICAgICAgICAgICByZXR1cm4gXCJXZSdyZSByZXZpZXdpbmcgeW91ciB3aXRoZHJhd2FsIHJlcXVlc3QuIFlvdSBtYXkgc3RpbGwgY2FuY2VsIHRoaXMgdHJhbnNhY3Rpb24gaWYgeW91IHdpc2guXFxuT25jZSB3ZSBzdGFydCBwcm9jZXNzaW5nLCB5b3Ugd29uJ3QgYmUgYWJsZSB0byBjYW5jZWwuXCI7XG4gICAgICAgIGNhc2UgJ1BFUkZPUk1JTkdfQkxPQ0tDSEFJTl9UWE4nOlxuICAgICAgICAgICAgcmV0dXJuIFwiV2UncmUgc2VuZGluZyB5b3VyIHJlcXVlc3QgdG8gdGhlIGJsb2NrY2hhaW4uXCI7XG4gICAgICAgIGNhc2UgJ1BST0NFU1NJTkcnOlxuICAgICAgICAgICAgcmV0dXJuIFwiV2UncmUgYXdhaXRpbmcgY29uZmlybWF0aW9uIGZyb20gdGhlIGJsb2NrY2hhaW4uXCI7XG4gICAgICAgIGNhc2UgJ1JFSkVDVEVEJzpcbiAgICAgICAgY2FzZSAnUkVWRVJURUQnOlxuICAgICAgICAgICAgcmV0dXJuIFwiWW91ciB3aXRoZHJhd2FsIGlzIHVuc3VjY2Vzc2Z1bC4gV2UndmUgc2VudCB5b3UgYW4gZW1haWwgd2l0aCBtb3JlIGluZm9ybWF0aW9uLlwiO1xuICAgICAgICBjYXNlICdSRVZFUlRJTkcnOlxuICAgICAgICBjYXNlICdWRVJJRklFRCc6XG4gICAgICAgICAgICByZXR1cm4gXCJXZSdyZSBwcm9jZXNzaW5nIHlvdXIgd2l0aGRyYXdhbC5cIjtcbiAgICAgICAgY2FzZSAnU0VOVCc6XG4gICAgICAgICAgICByZXR1cm4gJ1lvdXIgd2l0aGRyYXdhbCBpcyBzdWNjZXNzZnVsLic7XG4gICAgICAgIC8vIGJvdGg6XG4gICAgICAgIGNhc2UgJ0VSUk9SJzpcbiAgICAgICAgICAgIHJldHVybiBgWW91ciAke3RyYW5zYWN0aW9uX3R5cGV9IGlzIHVuc3VjY2Vzc2Z1bCBkdWUgdG8gYW4gZXJyb3Igb24gdGhlIGJsb2NrY2hhaW4uIFBsZWFzZSBjb250YWN0ICR7XG4gICAgICAgICAgICAgICAgdHJhbnNhY3Rpb25fdHlwZSA9PT0gJ2RlcG9zaXQnID8gJ3lvdXIgY3J5cHRvIHdhbGxldCBzZXJ2aWNlIHByb3ZpZGVyJyA6ICd1cyB2aWEgbGl2ZSBjaGF0J1xuICAgICAgICAgICAgfSBmb3IgbW9yZSBpbmZvLmA7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxufTtcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCByZXR1cm5zIHRoZSBsaXN0IG9mIHBlbmRpbmcgY3J5cHRvIHRyYW5zYWN0aW9ucyBmb3IgdGhlIGN1cnJlbnQgdXNlci4gKi9cbmNvbnN0IHVzZUNyeXB0b1RyYW5zYWN0aW9ucyA9ICgpID0+IHtcbiAgICBjb25zdCB7IHN1YnNjcmliZSwgZGF0YSwgLi4ucmVzdCB9ID0gdXNlU3Vic2NyaXB0aW9uKCdjYXNoaWVyX3BheW1lbnRzJyk7XG4gICAgY29uc3QgW3RyYW5zYWN0aW9ucywgc2V0VHJhbnNhY3Rpb25zXSA9IHVzZVN0YXRlPFRNb2RpZmllZFRyYW5zYWN0aW9uW10+KCk7XG5cbiAgICBjb25zdCB7XG4gICAgICAgIGRhdGE6IHsgcHJlZmVycmVkX2xhbmd1YWdlIH0sXG4gICAgfSA9IHVzZUF1dGhvcml6ZSgpO1xuXG4gICAgY29uc3QgeyBkYXRhOiBhY2NvdW50IH0gPSB1c2VBY3RpdmVBY2NvdW50KCk7XG4gICAgY29uc3QgZGlzcGxheV9jb2RlID0gYWNjb3VudD8uY3VycmVuY3lfY29uZmlnPy5kaXNwbGF5X2NvZGUgfHwgJ1VTRCc7XG4gICAgY29uc3QgZnJhY3Rpb25hbF9kaWdpdHMgPSBhY2NvdW50Py5jdXJyZW5jeV9jb25maWc/LmZyYWN0aW9uYWxfZGlnaXRzIHx8IDI7XG5cbiAgICAvLyBSZXNldCB0cmFuc2FjdGlvbnMgZGF0YVxuICAgIGNvbnN0IHJlc2V0RGF0YSA9IHVzZUNhbGxiYWNrKCgpID0+IHNldFRyYW5zYWN0aW9ucyh1bmRlZmluZWQpLCBbXSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRUcmFuc2FjdGlvbnMob2xkX3RyYW5zYWN0aW9ucyA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXdfdHJhbnNhY3Rpb25zID0gZGF0YT8uY2FzaGllcl9wYXltZW50cz8uY3J5cHRvIGFzIFRNb2RpZmllZFRyYW5zYWN0aW9uW10gfCB1bmRlZmluZWQ7XG5cbiAgICAgICAgICAgIGlmICghbmV3X3RyYW5zYWN0aW9ucykgcmV0dXJuIG9sZF90cmFuc2FjdGlvbnM7XG5cbiAgICAgICAgICAgIGlmICghb2xkX3RyYW5zYWN0aW9ucykgcmV0dXJuIG5ld190cmFuc2FjdGlvbnM7XG5cbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZWRfdHJhbnNhY3Rpb25zID0gWy4uLm9sZF90cmFuc2FjdGlvbnNdO1xuXG4gICAgICAgICAgICAvLyBGb3IgZWFjaCBuZXcgdHJhbnNhY3Rpb24sIGNoZWNrIGlmIGl0IGV4aXN0cyBpbiB0aGUgb2xkIHRyYW5zYWN0aW9ucy5cbiAgICAgICAgICAgIG5ld190cmFuc2FjdGlvbnMuZm9yRWFjaChuZXdfdHJhbnNhY3Rpb24gPT4ge1xuICAgICAgICAgICAgICAgIC8vIEZpbmQgdGhlIGluZGV4IG9mIHRoZSBuZXcgdHJhbnNhY3Rpb24gaW4gdGhlIG9sZCB0cmFuc2FjdGlvbnMgaWYgZXhpc3RzLlxuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdXBkYXRlZF90cmFuc2FjdGlvbnMuZmluZEluZGV4KFxuICAgICAgICAgICAgICAgICAgICBvbGRfdHJhbnNhY3Rpb24gPT4gb2xkX3RyYW5zYWN0aW9uLmlkID09PSBuZXdfdHJhbnNhY3Rpb24uaWRcbiAgICAgICAgICAgICAgICApO1xuXG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIG5ldyB0cmFuc2FjdGlvbiBkb2VzIG5vdCBleGlzdCBpbiB0aGUgb2xkIHRyYW5zYWN0aW9ucywgYWRkIGl0LCBvdGhlcndpc2UgdXBkYXRlIGl0LlxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlZF90cmFuc2FjdGlvbnMucHVzaChuZXdfdHJhbnNhY3Rpb24pO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZWRfdHJhbnNhY3Rpb25zW2luZGV4XSA9IG5ld190cmFuc2FjdGlvbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIHVwZGF0ZWRfdHJhbnNhY3Rpb25zO1xuICAgICAgICB9KTtcbiAgICB9LCBbZGF0YT8uY2FzaGllcl9wYXltZW50cz8uY3J5cHRvXSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byBlYWNoIHRyYW5zYWN0aW9uLlxuICAgIGNvbnN0IG1vZGlmaWVkX3RyYW5zYWN0aW9ucyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIXRyYW5zYWN0aW9ucyB8fCAhdHJhbnNhY3Rpb25zLmxlbmd0aCkgcmV0dXJuIHVuZGVmaW5lZDtcblxuICAgICAgICByZXR1cm4gdHJhbnNhY3Rpb25zLm1hcCh0cmFuc2FjdGlvbiA9PiAoe1xuICAgICAgICAgICAgLi4udHJhbnNhY3Rpb24sXG4gICAgICAgICAgICAvKiogRGVzY3JpcHRpb24gb2YgYSB0cmFuc2FjdGlvbiBzdGF0dXMgKi9cbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBnZXRTdGF0dXNEZXNjcmlwdGlvbih0cmFuc2FjdGlvbi50cmFuc2FjdGlvbl90eXBlLCB0cmFuc2FjdGlvbi5zdGF0dXNfY29kZSksXG4gICAgICAgICAgICAvKiogRm9ybWF0dGVkIGFtb3VudCAqL1xuICAgICAgICAgICAgZm9ybWF0dGVkX2Ftb3VudDogZGlzcGxheU1vbmV5KHRyYW5zYWN0aW9uLmFtb3VudCB8fCAwLCBkaXNwbGF5X2NvZGUsIHtcbiAgICAgICAgICAgICAgICBmcmFjdGlvbmFsX2RpZ2l0cyxcbiAgICAgICAgICAgICAgICBwcmVmZXJyZWRfbGFuZ3VhZ2UsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIC8qKiBGb3JtYXR0ZWQgdHJhbnNhY3Rpb24gaGFzaCAqL1xuICAgICAgICAgICAgZm9ybWF0dGVkX3RyYW5zYWN0aW9uX2hhc2g6IHRyYW5zYWN0aW9uLnRyYW5zYWN0aW9uX2hhc2hcbiAgICAgICAgICAgICAgICA/IGdldFRydW5jYXRlZFN0cmluZyh0cmFuc2FjdGlvbi50cmFuc2FjdGlvbl9oYXNoLCB7IHR5cGU6ICdtaWRkbGUnIH0pXG4gICAgICAgICAgICAgICAgOiAnTkEnLFxuICAgICAgICAgICAgLyoqIEZvcm1hdHRlZCBhZGRyZXNzIGhhc2ggKi9cbiAgICAgICAgICAgIGZvcm1hdHRlZF9hZGRyZXNzX2hhc2g6IHRyYW5zYWN0aW9uLmFkZHJlc3NfaGFzaFxuICAgICAgICAgICAgICAgID8gZ2V0VHJ1bmNhdGVkU3RyaW5nKHRyYW5zYWN0aW9uLmFkZHJlc3NfaGFzaCwgeyB0eXBlOiAnbWlkZGxlJyB9KVxuICAgICAgICAgICAgICAgIDogJ05BJyxcbiAgICAgICAgICAgIC8qKiBGb3JtYXR0ZWQgY29uZmlybWF0aW9ucyBzdGF0dXMgKi9cbiAgICAgICAgICAgIGZvcm1hdHRlZF9jb25maXJtYXRpb25zOiBnZXRGb3JtYXR0ZWRDb25maXJtYXRpb25zKHRyYW5zYWN0aW9uKSxcbiAgICAgICAgICAgIC8qKiBEZXRlcm1pbmUgaWYgdGhlIHRyYW5zYWN0aW9uIGlzIGEgZGVwb3NpdCBvciBub3QuICovXG4gICAgICAgICAgICBpc19kZXBvc2l0OiB0cmFuc2FjdGlvbi50cmFuc2FjdGlvbl90eXBlID09PSAnZGVwb3NpdCcsXG4gICAgICAgICAgICAvKiogRGV0ZXJtaW5lIGlmIHRoZSB0cmFuc2FjdGlvbiBpcyBhIHdpdGhkcmF3YWwgb3Igbm90LiAqL1xuICAgICAgICAgICAgaXNfd2l0aGRyYXdhbDogdHJhbnNhY3Rpb24udHJhbnNhY3Rpb25fdHlwZSA9PT0gJ3dpdGhkcmF3YWwnLFxuICAgICAgICAgICAgLyoqIFN0YXR1cyBuYW1lICovXG4gICAgICAgICAgICBzdGF0dXNfbmFtZTogZ2V0U3RhdHVzTmFtZSh0cmFuc2FjdGlvbi5zdGF0dXNfY29kZSksXG4gICAgICAgIH0pKTtcbiAgICB9LCBbZGlzcGxheV9jb2RlLCBmcmFjdGlvbmFsX2RpZ2l0cywgcHJlZmVycmVkX2xhbmd1YWdlLCB0cmFuc2FjdGlvbnNdKTtcblxuICAgIC8vIFNvcnQgdHJhbnNhY3Rpb25zIGJ5IHN1Ym1pdCB0aW1lLlxuICAgIGNvbnN0IHNvcnRlZF90cmFuc2FjdGlvbnMgPSB1c2VNZW1vKFxuICAgICAgICAoKSA9PiBtb2RpZmllZF90cmFuc2FjdGlvbnM/LnNvcnQoKGEsIGIpID0+IGIuc3VibWl0X2RhdGUgLSBhLnN1Ym1pdF9kYXRlKSxcbiAgICAgICAgW21vZGlmaWVkX3RyYW5zYWN0aW9uc11cbiAgICApO1xuICAgIC8vIEdldCB0aGUgbGFzdCB0cmFuc2FjdGlvbiBpZiBleGlzdHMuXG4gICAgY29uc3QgbGFzdF90cmFuc2FjdGlvbiA9IG1vZGlmaWVkX3RyYW5zYWN0aW9ucz8uWzBdO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIExpc3Qgb2YgdXNlciB0cmFuc2FjdGlvbnMgc29ydGVkIGJ5IHN1Ym1pdCB0aW1lLiAqL1xuICAgICAgICBkYXRhOiBzb3J0ZWRfdHJhbnNhY3Rpb25zLFxuICAgICAgICAvKiogUmV0dXJucyB0aGUgbGFzdCB0cmFuc2FjdGlvbiBpZiBleGlzdHMuICovXG4gICAgICAgIGxhc3RfdHJhbnNhY3Rpb24sXG4gICAgICAgIC8qKiBSZXNldCB0cmFuc2FjdGlvbnMgZGF0YSAqL1xuICAgICAgICByZXNldERhdGEsXG4gICAgICAgIHN1YnNjcmliZSxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3J5cHRvVHJhbnNhY3Rpb25zO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlTXV0YXRpb24gZnJvbSAnLi4vdXNlTXV0YXRpb24nO1xuXG50eXBlIFRQYXlsb2FkID0gT21pdDxcbiAgICBOb25OdWxsYWJsZTxQYXJhbWV0ZXJzPFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCdjYXNoaWVyJz4+WydtdXRhdGUnXT4+WzBdWydwYXlsb2FkJ10sXG4gICAgJ2Nhc2hpZXInIHwgJ3Byb3ZpZGVyJyB8ICd0eXBlJ1xuPjtcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCB1c2VkIGZvciBjcnlwdG8gd2l0aGRyYXdhbCAqL1xuY29uc3QgdXNlQ3J5cHRvV2l0aGRyYXdhbCA9ICgpID0+IHtcbiAgICBjb25zdCB7IG11dGF0ZTogX211dGF0ZSwgbXV0YXRlQXN5bmM6IF9tdXRhdGVBc3luYywgLi4ucmVzdCB9ID0gdXNlTXV0YXRpb24oJ2Nhc2hpZXInKTtcblxuICAgIGNvbnN0IG11dGF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgICAgICAocGF5bG9hZDogVFBheWxvYWQpID0+XG4gICAgICAgICAgICBfbXV0YXRlKHsgcGF5bG9hZDogeyBjYXNoaWVyOiAnd2l0aGRyYXcnLCBwcm92aWRlcjogJ2NyeXB0bycsIHR5cGU6ICdhcGknLCAuLi5wYXlsb2FkIH0gfSksXG4gICAgICAgIFtfbXV0YXRlXVxuICAgICk7XG4gICAgY29uc3QgbXV0YXRlQXN5bmMgPSB1c2VDYWxsYmFjayhcbiAgICAgICAgKHBheWxvYWQ6IFRQYXlsb2FkKSA9PlxuICAgICAgICAgICAgX211dGF0ZUFzeW5jKHsgcGF5bG9hZDogeyBjYXNoaWVyOiAnd2l0aGRyYXcnLCBwcm92aWRlcjogJ2NyeXB0bycsIHR5cGU6ICdhcGknLCAuLi5wYXlsb2FkIH0gfSksXG4gICAgICAgIFtfbXV0YXRlQXN5bmNdXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBGdW5jdGlvbiB0byByZXF1ZXN0IGZvciBjcnlwdG8gd2l0aGRyYXdhbCAqL1xuICAgICAgICBtdXRhdGUsXG4gICAgICAgIG11dGF0ZUFzeW5jLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VDcnlwdG9XaXRoZHJhd2FsO1xuIiwiaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4uL3VzZVF1ZXJ5JztcbmltcG9ydCB1c2VBY3RpdmVBY2NvdW50IGZyb20gJy4vdXNlQWN0aXZlQWNjb3VudCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0IFNlcnZpY2UgVG9rZW4gZm9yIENUcmFkZXIgUGxhdGZvcm0uICovXG5jb25zdCB1c2VDdHJhZGVyU2VydmljZVRva2VuID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogYWNjb3VudCB9ID0gdXNlQWN0aXZlQWNjb3VudCgpO1xuICAgIGNvbnN0IHsgZGF0YTogY3RyYWRlcl90b2tlbiwgLi4ucmVzdCB9ID0gdXNlUXVlcnkoJ3NlcnZpY2VfdG9rZW4nLCB7XG4gICAgICAgIHBheWxvYWQ6IHsgc2VydmljZTogJ2N0cmFkZXInLCBzZXJ2ZXI6IGFjY291bnQ/LmlzX3ZpcnR1YWwgPyAnZGVtbycgOiAncmVhbCcgfSxcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiByZXR1cm4gdGhlIGN0cmFkZXIgYWNjb3VudCB0b2tlbiAqL1xuICAgICAgICBkYXRhOiBjdHJhZGVyX3Rva2VuPy5zZXJ2aWNlX3Rva2VuPy5jdHJhZGVyPy50b2tlbixcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlQ3RyYWRlclNlcnZpY2VUb2tlbjtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gZ2V0IHRoZSBkZXBvc2l0IGNyeXB0byBhZGRyZXNzLiAqL1xuY29uc3QgdXNlRGVwb3NpdENyeXB0b0FkZHJlc3MgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBtdXRhdGU6IF9tdXRhdGUsIC4uLnJlc3QgfSA9IHVzZU11dGF0aW9uKCdjYXNoaWVyJyk7XG4gICAgY29uc3QgZGVwb3NpdF9hZGRyZXNzID0gdHlwZW9mIGRhdGE/LmNhc2hpZXIgIT09ICdzdHJpbmcnID8gZGF0YT8uY2FzaGllcj8uZGVwb3NpdD8uYWRkcmVzcyA6IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0IG11dGF0ZSA9IHVzZUNhbGxiYWNrKFxuICAgICAgICAoKSA9PiBfbXV0YXRlKHsgcGF5bG9hZDogeyBjYXNoaWVyOiAnZGVwb3NpdCcsIHByb3ZpZGVyOiAnY3J5cHRvJywgdHlwZTogJ2FwaScgfSB9KSxcbiAgICAgICAgW19tdXRhdGVdXG4gICAgKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgZGF0YTogZGVwb3NpdF9hZGRyZXNzLFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VEZXBvc2l0Q3J5cHRvQWRkcmVzcztcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VNZW1vLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5pbXBvcnQgeyBjb21wcmVzc0ltYWdlRmlsZSwgZ2VuZXJhdGVDaHVua3MsIG51bVRvVWludDhBcnJheSwgcmVhZEZpbGUgfSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgbWQ1IGZyb20gJ21kNSc7XG5pbXBvcnQgeyBnZXRBY3RpdmVXZWJzb2NrZXQgfSBmcm9tICcuLi9BUElQcm92aWRlcic7XG5cbnR5cGUgVERvY3VtZW50VXBsb2FkUGF5bG9hZCA9IFBhcmFtZXRlcnM8UmV0dXJuVHlwZTx0eXBlb2YgdXNlTXV0YXRpb248J2RvY3VtZW50X3VwbG9hZCc+PlsnbXV0YXRlJ10+WzBdWydwYXlsb2FkJ107XG50eXBlIFRVcGxvYWRQYXlsb2FkID0gT21pdDxURG9jdW1lbnRVcGxvYWRQYXlsb2FkLCAnZG9jdW1lbnRfZm9ybWF0JyB8ICdleHBlY3RlZF9jaGVja3N1bScgfCAnZmlsZV9zaXplJz4gJiB7XG4gICAgZmlsZT86IEZpbGU7XG59O1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBoYW5kbGUgZG9jdW1lbnQgZmlsZSB1cGxvYWRzIHRvIG91ciBiYWNrZW5kLiAqL1xuY29uc3QgdXNlRG9jdW1lbnRVcGxvYWQgPSAoKSA9PiB7XG4gICAgY29uc3Qge1xuICAgICAgICBkYXRhLFxuICAgICAgICBpc0xvYWRpbmc6IF9pc0xvYWRpbmcsXG4gICAgICAgIGlzU3VjY2VzczogX2lzU3VjY2VzcyxcbiAgICAgICAgbXV0YXRlQXN5bmMsXG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgLi4ucmVzdFxuICAgIH0gPSB1c2VNdXRhdGlvbignZG9jdW1lbnRfdXBsb2FkJyk7XG4gICAgY29uc3QgW2lzRG9jdW1lbnRVcGxvYWRlZCwgc2V0SXNEb2N1bWVudFVwbG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBhY3RpdmVXZWJTb2NrZXQgPSBnZXRBY3RpdmVXZWJzb2NrZXQoKTtcblxuICAgIGNvbnN0IGlzTG9hZGluZyA9IF9pc0xvYWRpbmcgfHwgKCFpc0RvY3VtZW50VXBsb2FkZWQgJiYgc3RhdHVzID09PSAnc3VjY2VzcycpO1xuICAgIGNvbnN0IGlzU3VjY2VzcyA9IF9pc1N1Y2Nlc3MgJiYgaXNEb2N1bWVudFVwbG9hZGVkO1xuXG4gICAgY29uc3QgdXBsb2FkID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIGFzeW5jIChwYXlsb2FkOiBUVXBsb2FkUGF5bG9hZCkgPT4ge1xuICAgICAgICAgICAgaWYgKCFwYXlsb2FkPy5maWxlKSByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdObyBmaWxlIHNlbGVjdGVkJykpO1xuICAgICAgICAgICAgY29uc3QgZmlsZSA9IHBheWxvYWQuZmlsZTtcbiAgICAgICAgICAgIGRlbGV0ZSBwYXlsb2FkLmZpbGU7XG4gICAgICAgICAgICBjb25zdCBmaWxlQmxvYiA9IGF3YWl0IGNvbXByZXNzSW1hZ2VGaWxlKGZpbGUpO1xuICAgICAgICAgICAgY29uc3QgbW9kaWZpZWRGaWxlID0gYXdhaXQgcmVhZEZpbGUoZmlsZUJsb2IpO1xuICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciB0eXBlIG1pc21hdGNoXG4gICAgICAgICAgICBjb25zdCBmaWxlQnVmZmVyID0gbmV3IFVpbnQ4QXJyYXkobW9kaWZpZWRGaWxlLmJ1ZmZlcik7XG4gICAgICAgICAgICBjb25zdCBjaGVja3N1bSA9IG1kNShBcnJheS5mcm9tKGZpbGVCdWZmZXIpKTtcblxuICAgICAgICAgICAgY29uc3QgdXBkYXRlZFBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgLi4ucGF5bG9hZCxcbiAgICAgICAgICAgICAgICBkb2N1bWVudF9mb3JtYXQ6IGZpbGUudHlwZVxuICAgICAgICAgICAgICAgICAgICAuc3BsaXQoJy8nKVsxXVxuICAgICAgICAgICAgICAgICAgICAudG9Mb2NhbGVVcHBlckNhc2UoKSBhcyBURG9jdW1lbnRVcGxvYWRQYXlsb2FkWydkb2N1bWVudF9mb3JtYXQnXSxcbiAgICAgICAgICAgICAgICBleHBlY3RlZF9jaGVja3N1bTogY2hlY2tzdW0sXG4gICAgICAgICAgICAgICAgZmlsZV9zaXplOiBmaWxlQnVmZmVyLmxlbmd0aCxcbiAgICAgICAgICAgICAgICBwYXNzdGhyb3VnaDoge1xuICAgICAgICAgICAgICAgICAgICBkb2N1bWVudF91cGxvYWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBzZXRJc0RvY3VtZW50VXBsb2FkZWQoZmFsc2UpO1xuICAgICAgICAgICAgYXdhaXQgbXV0YXRlQXN5bmMoeyBwYXlsb2FkOiB1cGRhdGVkUGF5bG9hZCB9KS50aGVuKGFzeW5jIHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmtzID0gZ2VuZXJhdGVDaHVua3MoZmlsZUJ1ZmZlciwge30pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGlkID0gbnVtVG9VaW50OEFycmF5KHJlcz8uZG9jdW1lbnRfdXBsb2FkPy51cGxvYWRfaWQgfHwgMCk7XG4gICAgICAgICAgICAgICAgY29uc3QgdHlwZSA9IG51bVRvVWludDhBcnJheShyZXM/LmRvY3VtZW50X3VwbG9hZD8uY2FsbF90eXBlIHx8IDApO1xuXG4gICAgICAgICAgICAgICAgY2h1bmtzLmZvckVhY2goY2h1bmsgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzaXplID0gbnVtVG9VaW50OEFycmF5KGNodW5rLmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBheWxvYWQgPSBuZXcgVWludDhBcnJheShbLi4udHlwZSwgLi4uaWQsIC4uLnNpemUsIC4uLmNodW5rXSk7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZVdlYlNvY2tldD8uc2VuZChwYXlsb2FkKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBzZXRJc0RvY3VtZW50VXBsb2FkZWQodHJ1ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW2FjdGl2ZVdlYlNvY2tldCwgbXV0YXRlQXN5bmNdXG4gICAgKTtcblxuICAgIGNvbnN0IG1vZGlmaWVkX3Jlc3BvbnNlID0gdXNlTWVtbygoKSA9PiAoeyAuLi5kYXRhPy5kb2N1bWVudF91cGxvYWQgfSksIFtkYXRhPy5kb2N1bWVudF91cGxvYWRdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgdXBsb2FkIHJlc3BvbnNlICovXG4gICAgICAgIGRhdGE6IG1vZGlmaWVkX3Jlc3BvbnNlLFxuICAgICAgICAvKiogRnVuY3Rpb24gdG8gdXBsb2FkIHRoZSBkb2N1bWVudCAqL1xuICAgICAgICB1cGxvYWQsXG4gICAgICAgIC8qKiBNdXRhdGlvbiBzdGF0dXMgKi9cbiAgICAgICAgc3RhdHVzLFxuICAgICAgICAvKiogV2hldGhlciB0aGUgbXV0YXRpb24gaXMgbG9hZGluZyAqL1xuICAgICAgICBpc0xvYWRpbmcsXG4gICAgICAgIC8qKiBXaGV0aGVyIHRoZSBtdXRhdGlvbiBpcyBzdWNjZXNzZnVsICovXG4gICAgICAgIGlzU3VjY2VzcyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlRG9jdW1lbnRVcGxvYWQ7XG4iLCJpbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZUFjdGl2ZUFjY291bnQgZnJvbSAnLi91c2VBY3RpdmVBY2NvdW50JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXQgU2VydmljZSBUb2tlbiBmb3IgRGVyaXYgWCBQbGF0Zm9ybS4gKi9cbmNvbnN0IHVzZUR4dHJhZGVTZXJ2aWNlVG9rZW4gPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhY2NvdW50IH0gPSB1c2VBY3RpdmVBY2NvdW50KCk7XG4gICAgY29uc3QgeyBkYXRhOiBkeHRyYWRlX3Rva2VuLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgnc2VydmljZV90b2tlbicsIHtcbiAgICAgICAgcGF5bG9hZDogeyBzZXJ2aWNlOiAnZHh0cmFkZScsIHNlcnZlcjogYWNjb3VudD8uaXNfdmlydHVhbCA/ICdkZW1vJyA6ICdyZWFsJyB9LFxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIHJldHVybiB0aGUgRGVyaXYgWCBhY2NvdW50IHRva2VuICovXG4gICAgICAgIGRhdGE6IGR4dHJhZGVfdG9rZW4/LnNlcnZpY2VfdG9rZW4/LmR4dHJhZGU/LnRva2VuLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VEeHRyYWRlU2VydmljZVRva2VuO1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuLi91c2VRdWVyeSc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyBkeW5hbWljIGxldmVyYWdlIHZhbHVlcy4gKi9cbmNvbnN0IHVzZUR5bmFtaWNMZXZlcmFnZSA9IChwbGF0Zm9ybTogJ210NScgfCAnZHh0cmFkZScgfCAnY3RyYWRlcicpID0+IHtcbiAgICBjb25zdCB7IGRhdGEsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCd0cmFkaW5nX3BsYXRmb3JtX2xldmVyYWdlJywge1xuICAgICAgICBwYXlsb2FkOiB7IHBsYXRmb3JtIH0sXG4gICAgfSk7XG5cbiAgICAvLyBBZGQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiB0byB0aGUgZHluYW1pYyBsZXZlcmFnZSByZXNwb25zZS5cbiAgICBjb25zdCBtb2RpZmllZF9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghZGF0YT8udHJhZGluZ19wbGF0Zm9ybV9sZXZlcmFnZSkgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiB7IC4uLmRhdGE/LnRyYWRpbmdfcGxhdGZvcm1fbGV2ZXJhZ2UgfTtcbiAgICB9LCBbZGF0YV0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGF0YTogbW9kaWZpZWRfZGF0YT8ubGV2ZXJhZ2UsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUR5bmFtaWNMZXZlcmFnZTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZVN1YnNjcmlwdGlvbiBmcm9tICcuLi91c2VTdWJzY3JpcHRpb24nO1xuXG50eXBlIFRQYXlsb2FkID0gUmVxdWlyZWQ8XG4gICAgTm9uTnVsbGFibGU8UGFyYW1ldGVyczxSZXR1cm5UeXBlPHR5cGVvZiB1c2VTdWJzY3JpcHRpb248J2V4Y2hhbmdlX3JhdGVzJz4+WydzdWJzY3JpYmUnXT4+WzBdWydwYXlsb2FkJ11cbj47XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgZ2V0cyBleGNoYW5nZSByYXRlcyBmcm9tIGJhc2UgY3VycmVuY3kgdG8gdGFyZ2V0IGN1cnJlbmN5ICovXG5jb25zdCB1c2VFeGNoYW5nZVJhdGUgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCBzdWJzY3JpYmU6IF9zdWJzY3JpYmUsIC4uLnJlc3QgfSA9IHVzZVN1YnNjcmlwdGlvbignZXhjaGFuZ2VfcmF0ZXMnKTtcblxuICAgIGNvbnN0IHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKFxuICAgICAgICAocGF5bG9hZDogVFBheWxvYWQpID0+IHtcbiAgICAgICAgICAgIF9zdWJzY3JpYmUoeyBwYXlsb2FkIH0pO1xuICAgICAgICB9LFxuICAgICAgICBbX3N1YnNjcmliZV1cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBleGNoYW5nZSByYXRlcyByZXNwb25zZSAqL1xuICAgICAgICBkYXRhOiBkYXRhPy5leGNoYW5nZV9yYXRlcyxcbiAgICAgICAgLyoqIEZ1bmN0aW9uIHRvIHN1YnNjcmliZSB0byBleGNoYW5nZSByYXRlcyAqL1xuICAgICAgICBzdWJzY3JpYmUsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUV4Y2hhbmdlUmF0ZTtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxudHlwZSBUSWRlbnRpdHlWZXJpZmljYXRpb25Eb2N1bWVudEFkZFBheWxvYWQgPSBQYXJhbWV0ZXJzPFxuICAgIFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCdpZGVudGl0eV92ZXJpZmljYXRpb25fZG9jdW1lbnRfYWRkJz4+WydtdXRhdGUnXVxuPlswXVsncGF5bG9hZCddO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBzdWJtaXQgSURWIGRldGFpbHMgZm9yIFBPSSB2ZXJpZmljYXRpb24uXG4gKlxuICogVXNlIGNhc2VzOlxuICogLSBUbyBzdWJtaXQgSURWIHZlcmlmaWNhdGlvbiBmb3IgdmVyaWZpY2F0aW9uIGZsb3cgaW4gV2FsbGV0cy5cbiAqL1xuY29uc3QgdXNlSWRlbnRpdHlEb2N1bWVudFZlcmlmaWNhdGlvbkFkZCA9ICgpID0+IHtcbiAgICBjb25zdCB7IG11dGF0ZTogX211dGF0ZSwgLi4ucmVzdCB9ID0gdXNlTXV0YXRpb24oJ2lkZW50aXR5X3ZlcmlmaWNhdGlvbl9kb2N1bWVudF9hZGQnKTtcblxuICAgIGNvbnN0IHN1Ym1pdElEVkRvY3VtZW50cyA9IHVzZUNhbGxiYWNrKFxuICAgICAgICAocGF5bG9hZDogVElkZW50aXR5VmVyaWZpY2F0aW9uRG9jdW1lbnRBZGRQYXlsb2FkKSA9PlxuICAgICAgICAgICAgX211dGF0ZSh7XG4gICAgICAgICAgICAgICAgcGF5bG9hZCxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBbX211dGF0ZV1cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIENhbGwgdGhpcyBmdW5jdGlvbiB1cG9uIElEViBzdWJtaXNzaW9uLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAcGFyYW0gcGF5bG9hZCAtIFRoZSBwYXlsb2FkIHRvIHBhc3MgaW4gd2hpY2ggdGhlc2UgZmllbGRzIGFyZSByZXF1aXJlZDpcbiAgICAgICAgICogLSBkb2N1bWVudF9udW1iZXI6IFRoZSBkb2N1bWVudCBudW1iZXIgcGFzc2VkIGluIGJ5IHRoZSB1c2VyXG4gICAgICAgICAqIC0gZG9jdW1lbnRfdHlwZTogVGhlIHR5cGUgb2YgZG9jdW1lbnQgaW4gd2hpY2ggdGhlIGRvY3VtZW50X251bWJlciBpcyBiYXNlZCBvbi4gRXhhbXBsZXMgYXJlIGVpdGhlciBkcml2ZXJzX2xpY2Vuc2UsIHBhc3Nwb3J0LCBzc25pdCwgZXRjIGRlcGVuZGluZyBvbiB0aGUgaXNzdWluZyBjb3VudHJ5LlxuICAgICAgICAgKiAgICAgICAgICAgICAgICAgIFRoZXNlIGRvY3VtZW50IHR5cGVzIGNhbiBvZnRlbiBiZSByZXRyaWV2ZWQgZnJvbSB0aGUgYHVzZVJlc2lkZW5jZUxpc3RgIGhvb2tcbiAgICAgICAgICogLSBpc3N1aW5nX2NvdW50cnk6IFRoZSBjb3VudHJ5IGluIHdoaWNoIHRoZSBkb2N1bWVudHMgYXJlIGlzc3VlZCBhbmQgc3VwcG9ydGVkLlxuICAgICAgICAgKi9cbiAgICAgICAgc3VibWl0SURWRG9jdW1lbnRzLFxuICAgICAgICAvKiogVGhlIG9yaWdpbmFsIG11dGF0ZSBmdW5jdGlvbiByZXR1cm5lZCBieSB1c2VNdXRhdGlvbiAqL1xuICAgICAgICBfbXV0YXRlLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VJZGVudGl0eURvY3VtZW50VmVyaWZpY2F0aW9uQWRkO1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4uL3VzZVF1ZXJ5JztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBnZXRzIHRoZSByZXNpZGVuY2UgbGlzdC4gKi9cbmNvbnN0IHVzZVJlc2lkZW5jZUxpc3QgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXNpZGVuY2VfbGlzdF9yZXN0IH0gPSB1c2VRdWVyeSgncmVzaWRlbmNlX2xpc3QnKTtcblxuICAgIC8qKiBNb2RpZnkgdGhlIHJlc2lkZW5jZSBsaXN0IGRhdGEuICovXG4gICAgY29uc3QgbW9kaWZpZWRfcmVzaWRlbmNlX2xpc3QgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgaWYgKCFkYXRhIHx8ICFkYXRhLnJlc2lkZW5jZV9saXN0KSByZXR1cm4gW107XG5cbiAgICAgICAgcmV0dXJuIGRhdGEucmVzaWRlbmNlX2xpc3QubWFwKHJlc2lkZW5jZSA9PiAoe1xuICAgICAgICAgICAgLi4ucmVzaWRlbmNlLFxuICAgICAgICB9KSk7XG4gICAgfSwgW2RhdGFdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgcmVzaWRlbmNlIGxpc3QgKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfcmVzaWRlbmNlX2xpc3QsXG4gICAgICAgIC4uLnJlc2lkZW5jZV9saXN0X3Jlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVJlc2lkZW5jZUxpc3Q7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUF1dGhlbnRpY2F0aW9uIGZyb20gJy4vdXNlQXV0aGVudGljYXRpb24nO1xuaW1wb3J0IHVzZVJlc2lkZW5jZUxpc3QgZnJvbSAnLi91c2VSZXNpZGVuY2VMaXN0JztcbmltcG9ydCB1c2VTZXR0aW5ncyBmcm9tICcuL3VzZVNldHRpbmdzJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gZ2V0IHRoZSBwcm9vZiBvZiBpZGVudGl0eSB2ZXJpZmljYXRpb24gaW5mbyBvZiB0aGUgY3VycmVudCB1c2VyLiAqL1xuY29uc3QgdXNlUE9JID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogYXV0aGVudGljYXRpb25fZGF0YSwgaXNTdWNjZXNzOiBpc0F1dGhlbnRpY2F0aW9uU3VjY2VzcywgLi4ucmVzdCB9ID0gdXNlQXV0aGVudGljYXRpb24oKTtcbiAgICBjb25zdCB7IGRhdGE6IHJlc2lkZW5jZV9saXN0X2RhdGEsIGlzU3VjY2VzczogaXNSZXNpZGVuY2VMaXN0U3VjY2VzcyB9ID0gdXNlUmVzaWRlbmNlTGlzdCgpO1xuICAgIGNvbnN0IHsgZGF0YTogZ2V0X3NldHRpbmdzX2RhdGEsIGlzU3VjY2VzczogaXNHZXRTZXR0aW5nc1N1Y2Nlc3MgfSA9IHVzZVNldHRpbmdzKCk7XG5cbiAgICBjb25zdCBwcmV2aW91c19zZXJ2aWNlID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxhdGVzdF9wb2lfYXR0ZW1wdCA9IGF1dGhlbnRpY2F0aW9uX2RhdGE/LmF0dGVtcHRzPy5sYXRlc3Q7XG4gICAgICAgIHJldHVybiBsYXRlc3RfcG9pX2F0dGVtcHQ/LnNlcnZpY2U7XG4gICAgfSwgW2F1dGhlbnRpY2F0aW9uX2RhdGE/LmF0dGVtcHRzPy5sYXRlc3RdKTtcblxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBHZXQgdGhlIHByZXZpb3VzIFBPSSBhdHRlbXB0cyBkZXRhaWxzIChpZiBhbnkpXG4gICAgICovXG4gICAgY29uc3QgcHJldmlvdXNfcG9pID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghcHJldmlvdXNfc2VydmljZSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBzZXJ2aWNlcyA9IGF1dGhlbnRpY2F0aW9uX2RhdGE/LmlkZW50aXR5Py5zZXJ2aWNlcztcbiAgICAgICAgaWYgKHNlcnZpY2VzICYmIHNlcnZpY2VzLm1hbnVhbCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlOiBwcmV2aW91c19zZXJ2aWNlLFxuICAgICAgICAgICAgICAgIHN0YXR1czogc2VydmljZXMubWFudWFsLnN0YXR1cyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBjdXJyZW50X3NlcnZpY2UgPSBzZXJ2aWNlcz8uW3ByZXZpb3VzX3NlcnZpY2UgYXMgJ2lkdicgfCAnb25maWRvJ107XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzZXJ2aWNlOiBwcmV2aW91c19zZXJ2aWNlLFxuICAgICAgICAgICAgc3RhdHVzOiBjdXJyZW50X3NlcnZpY2U/LnN0YXR1cyxcbiAgICAgICAgICAgIHJlcG9ydGVkX3Byb3BlcnRpZXM6IGN1cnJlbnRfc2VydmljZT8ucmVwb3J0ZWRfcHJvcGVydGllcyxcbiAgICAgICAgICAgIGxhc3RfcmVqZWN0ZWQ6IGN1cnJlbnRfc2VydmljZT8ubGFzdF9yZWplY3RlZCxcbiAgICAgICAgICAgIHN1Ym1pc3Npb25zX2xlZnQ6IGN1cnJlbnRfc2VydmljZT8uc3VibWlzc2lvbnNfbGVmdCB8fCAwLFxuICAgICAgICB9O1xuICAgIH0sIFtwcmV2aW91c19zZXJ2aWNlLCBhdXRoZW50aWNhdGlvbl9kYXRhPy5pZGVudGl0eT8uc2VydmljZXNdKTtcblxuICAgIC8qKlxuICAgICAqIEBkZXNjcmlwdGlvbiBHZXQgdGhlIGN1cnJlbnQgc3RlcCBiYXNlZCBvbiBhIGZldyBjaGVja3MuIFJldHVybnMgY29uZmlndXJhdGlvbiBmb3IgZG9jdW1lbnQgdmFsaWRhdGlvbiBhcyB3ZWxsLlxuICAgICAqL1xuICAgIGNvbnN0IGN1cnJlbnRfcG9pID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGNvbnN0IHVzZXJfY291bnRyeV9jb2RlID0gZ2V0X3NldHRpbmdzX2RhdGE/LmNpdGl6ZW4gfHwgZ2V0X3NldHRpbmdzX2RhdGE/LmNvdW50cnlfY29kZTtcbiAgICAgICAgY29uc3QgbWF0Y2hpbmdfcmVzaWRlbmNlX2RhdGEgPSByZXNpZGVuY2VfbGlzdF9kYXRhPy5maW5kKHIgPT4gci52YWx1ZSA9PT0gdXNlcl9jb3VudHJ5X2NvZGUpO1xuICAgICAgICBjb25zdCBpc19pZHZfc3VwcG9ydGVkID0gbWF0Y2hpbmdfcmVzaWRlbmNlX2RhdGE/LmlkZW50aXR5Py5zZXJ2aWNlcz8uaWR2Py5pc19jb3VudHJ5X3N1cHBvcnRlZDtcbiAgICAgICAgY29uc3QgaXNfb25maWRvX3N1cHBvcnRlZCA9IG1hdGNoaW5nX3Jlc2lkZW5jZV9kYXRhPy5pZGVudGl0eT8uc2VydmljZXM/Lm9uZmlkbz8uaXNfY291bnRyeV9zdXBwb3J0ZWQ7XG4gICAgICAgIGNvbnN0IHNlcnZpY2VzID0gYXV0aGVudGljYXRpb25fZGF0YT8uaWRlbnRpdHk/LnNlcnZpY2VzO1xuICAgICAgICBjb25zdCBpZHZfc3VibWlzc2lvbl9sZWZ0ID0gc2VydmljZXM/Lmlkdj8uc3VibWlzc2lvbnNfbGVmdCA/PyAwO1xuICAgICAgICBjb25zdCBvbmZpZG9fc3VibWlzc2lvbl9sZWZ0ID0gc2VydmljZXM/Lm9uZmlkbz8uc3VibWlzc2lvbnNfbGVmdCA/PyAwO1xuICAgICAgICBpZiAoaXNfaWR2X3N1cHBvcnRlZCAmJiBpZHZfc3VibWlzc2lvbl9sZWZ0ICYmICFhdXRoZW50aWNhdGlvbl9kYXRhPy5pc19pZHZfZGlzYWxsb3dlZCkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBjb3VudHJ5X2NvZGU6IHVzZXJfY291bnRyeV9jb2RlLFxuICAgICAgICAgICAgICAgIHNlcnZpY2U6ICdpZHYnLFxuICAgICAgICAgICAgICAgIHN0YXR1czogc2VydmljZXM/Lmlkdj8uc3RhdHVzLFxuICAgICAgICAgICAgICAgIHN1Ym1pc3Npb25fbGVmdDogaWR2X3N1Ym1pc3Npb25fbGVmdCxcbiAgICAgICAgICAgICAgICBkb2N1bWVudF9zdXBwb3J0ZWQ6IG1hdGNoaW5nX3Jlc2lkZW5jZV9kYXRhPy5pZGVudGl0eT8uc2VydmljZXM/Lmlkdj8uZG9jdW1lbnRzX3N1cHBvcnRlZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSBpZiAoaXNfb25maWRvX3N1cHBvcnRlZCAmJiBvbmZpZG9fc3VibWlzc2lvbl9sZWZ0KSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGNvdW50cnlfY29kZTogdXNlcl9jb3VudHJ5X2NvZGUsXG4gICAgICAgICAgICAgICAgc2VydmljZTogJ29uZmlkbycsXG4gICAgICAgICAgICAgICAgc3RhdHVzOiBzZXJ2aWNlcz8ub25maWRvPy5zdGF0dXMsXG4gICAgICAgICAgICAgICAgc3VibWlzc2lvbl9sZWZ0OiBvbmZpZG9fc3VibWlzc2lvbl9sZWZ0LFxuICAgICAgICAgICAgICAgIGRvY3VtZW50X3N1cHBvcnRlZDogbWF0Y2hpbmdfcmVzaWRlbmNlX2RhdGE/LmlkZW50aXR5Py5zZXJ2aWNlcz8ub25maWRvPy5kb2N1bWVudHNfc3VwcG9ydGVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgY291bnRyeV9jb2RlOiB1c2VyX2NvdW50cnlfY29kZSxcbiAgICAgICAgICAgIHNlcnZpY2U6ICdtYW51YWwnLFxuICAgICAgICAgICAgc3RhdHVzOiBzZXJ2aWNlcz8ubWFudWFsPy5zdGF0dXMsXG4gICAgICAgIH07XG4gICAgfSwgW1xuICAgICAgICBnZXRfc2V0dGluZ3NfZGF0YT8uY2l0aXplbixcbiAgICAgICAgZ2V0X3NldHRpbmdzX2RhdGE/LmNvdW50cnlfY29kZSxcbiAgICAgICAgcmVzaWRlbmNlX2xpc3RfZGF0YSxcbiAgICAgICAgYXV0aGVudGljYXRpb25fZGF0YT8uaWRlbnRpdHk/LnNlcnZpY2VzLFxuICAgICAgICBhdXRoZW50aWNhdGlvbl9kYXRhPy5pc19pZHZfZGlzYWxsb3dlZCxcbiAgICBdKTtcblxuICAgIGNvbnN0IG1vZGlmaWVkX3ZlcmlmaWNhdGlvbl9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghYXV0aGVudGljYXRpb25fZGF0YSkgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5hdXRoZW50aWNhdGlvbl9kYXRhPy5pZGVudGl0eSxcbiAgICAgICAgICAgIHByZXZpb3VzOiBwcmV2aW91c19wb2ksXG4gICAgICAgICAgICBjdXJyZW50OiBjdXJyZW50X3BvaSxcbiAgICAgICAgICAgIGlzX3BlbmRpbmc6IGF1dGhlbnRpY2F0aW9uX2RhdGE/LmlkZW50aXR5Py5zdGF0dXMgPT09ICdwZW5kaW5nJyxcbiAgICAgICAgICAgIGlzX3JlamVjdGVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5pZGVudGl0eT8uc3RhdHVzID09PSAncmVqZWN0ZWQnLFxuICAgICAgICAgICAgaXNfZXhwaXJlZDogYXV0aGVudGljYXRpb25fZGF0YT8uaWRlbnRpdHk/LnN0YXR1cyA9PT0gJ2V4cGlyZWQnLFxuICAgICAgICAgICAgaXNfc3VzcGVjdGVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5pZGVudGl0eT8uc3RhdHVzID09PSAnc3VzcGVjdGVkJyxcbiAgICAgICAgICAgIGlzX3ZlcmlmaWVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5pZGVudGl0eT8uc3RhdHVzID09PSAndmVyaWZpZWQnLFxuICAgICAgICB9O1xuICAgIH0sIFthdXRoZW50aWNhdGlvbl9kYXRhLCBjdXJyZW50X3BvaSwgcHJldmlvdXNfcG9pXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBtb2RpZmllZF92ZXJpZmljYXRpb25fZGF0YSxcbiAgICAgICAgaXNTdWNjZXNzOiBpc0F1dGhlbnRpY2F0aW9uU3VjY2VzcyAmJiBpc0dldFNldHRpbmdzU3VjY2VzcyAmJiBpc1Jlc2lkZW5jZUxpc3RTdWNjZXNzLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VQT0k7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUF1dGhlbnRpY2F0aW9uIGZyb20gJy4vdXNlQXV0aGVudGljYXRpb24nO1xuaW1wb3J0IHVzZVBPSSBmcm9tICcuL3VzZVBPSSc7XG5pbXBvcnQgdXNlTVQ1QWNjb3VudHNMaXN0IGZyb20gJy4vdXNlTVQ1QWNjb3VudHNMaXN0JztcblxudHlwZSBUQWNjb3VudCA9IE5vbk51bGxhYmxlPFJldHVyblR5cGU8dHlwZW9mIHVzZU1UNUFjY291bnRzTGlzdD5bJ2RhdGEnXT5bbnVtYmVyXTtcbnR5cGUgVFNlcnZpY2VzID0gTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8UmV0dXJuVHlwZTx0eXBlb2YgdXNlUE9JPlsnZGF0YSddPlsnc2VydmljZXMnXT47XG50eXBlIFRTZXJ2aWNlU3RhdHVzID0gTm9uTnVsbGFibGU8Tm9uTnVsbGFibGU8UmV0dXJuVHlwZTx0eXBlb2YgdXNlUE9JPlsnZGF0YSddPlsnc3RhdHVzJ10+O1xuXG4vKipcbiAqIEhvb2sgdGhhdCBjYWxjdWxhdGVzL2NoZWNrcyB0aGUgdmVyaWZpY2F0aW9uIHN0YXR1cyBmb3IgYSBsYW5kaW5nIGNvbXBhbnkvanVyaXNkaWN0aW9uLlxuICpcbiAqIFNvbWUganVyaXNkaWN0aW9ucyBzdWNoIGFzIExhYnVhbiByZXF1aXJlcyBjaGVja3MgZm9yIG90aGVyIHN0YXR1c2VzIHN1Y2ggYXMgYGlzX2F1dGhlbnRpY2F0ZWRfd2l0aF9pZHZfcGhvdG9pZGAgc3RhdHVzIGZyb20gYGdldF9hY2NvdW50X3N0YXR1c2AgZW5kcG9pbnQuXG4gKiBUaGlzIGhvb2sgdmVyaWZpZXMgdGhlc2UgY2hlY2tzIGludGVybmFsbHkgYW5kIHJldHVybnMgdGhlIGFwcHJvcHJpYXRlIHZlcmlmaWNhdGlvbiBzdGF0dXMgZm9yIGEgbGFuZGluZyBjb21wYW55L2p1cmlzZGljdGlvbi5cbiAqXG4gKiBVc2UgY2FzZXM6XG4gKiAtIFRvIHNob3cgdGhlIHZlcmlmaWNhdGlvbiBiYWRnZSBmb3IgYSBNVDUgYWNjb3VudCB3aXRoIGEgY2VydGFpbiBsYW5kaW5nIGNvbXBhbnkvanVyaXNkaWN0aW9uXG4gKlxuICpcbiAqIEBwYXJhbSBqdXJpc2RpY3Rpb24gLSB0aGUganVyaXNkaWN0aW9uL2xhbmRpbmcgY29tcGFueSwgaS5lLiAnc3ZnJywgJ2J2aScsICdsYWJ1YW4nLCAndmFudWF0dSdcbiAqIEBwYXJhbSBtdDVfYWNjb3VudF9zdGF0dXMgLSB0aGUgc3RhdHVzIG9mIHRoZSBNVDUgYWNjb3VudCwgdXN1YWxseSByZXRyaWV2ZWQgZnJvbSBNVDUgYWNjb3VudHMgbGlzdCBpdGVtXG4gKiBAcmV0dXJucyBUaGUgZm9sbG93aW5nIHN0YXR1c2VzOlxuICogLSBgaXNfZmFpbGVkYDogVGhlIHZlcmlmaWNhdGlvbiBzdGF0dXMgZm9yIHRoZSBsYW5kaW5nIGNvbXBhbnkvanVyaXNkaWN0aW9uIGhhcyBjdXJyZW50bHkgZmFpbGVkIGVpdGhlciBkdWUgdG8gZXhwaXJhdGlvbiwgcmVqZWN0aW9uLCBzdXNwaWNpb24gc3RhdHVzIG9yIG90aGVyIGZhY3RvcnNcbiAqIC0gYGlzX3BlbmRpbmdgOiBUaGUgdmVyaWZpY2F0aW9uIHN0YXR1cyBmb3IgdGhlIGxhbmRpbmcgY29tcGFueS9qdXJpc2RpY3Rpb24gaXMgY3VycmVudGx5IHBlbmRpbmcgdmVyaWZpY2F0aW9uXG4gKiAtIGBpc19ub3RfYXBwbGljYWJsZWA6IFRoZSBsYW5kaW5nIGNvbXBhbnkvanVyaXNkaWN0aW9uIGlzIG5vdCBhcHBsaWNhYmxlIGZvciB2ZXJpZmljYXRpb24uIFRoaXMgc3RhdHVzIGlzIG9ubHkgYXBwbGllZCBmb3IgYFNWR2AgbGFuZGluZyBjb21wYW55L2p1cmlzZGljdGlvblxuICovXG5jb25zdCB1c2VKdXJpc2RpY3Rpb25TdGF0dXMgPSAoXG4gICAganVyaXNkaWN0aW9uOiBUQWNjb3VudFsnbGFuZGluZ19jb21wYW55X3Nob3J0J10sXG4gICAgbXQ1X2FjY291bnRfc3RhdHVzOiBUQWNjb3VudFsnc3RhdHVzJ11cbikgPT4ge1xuICAgIGNvbnN0IHsgZGF0YTogYXV0aGVudGljYXRpb25TdGF0dXMsIGlzU3VjY2VzczogaXNTdWNjZXNzQXV0aGVudGljYXRpb25TdGF0dXMgfSA9IHVzZUF1dGhlbnRpY2F0aW9uKCk7XG4gICAgY29uc3QgeyBkYXRhOiBwb2lTdGF0dXMgfSA9IHVzZVBPSSgpO1xuXG4gICAgY29uc3QgaXNTdWNjZXNzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIHJldHVybiBpc1N1Y2Nlc3NBdXRoZW50aWNhdGlvblN0YXR1cyAmJiBwb2lTdGF0dXM/LmN1cnJlbnQ/LnNlcnZpY2U7XG4gICAgfSwgW2lzU3VjY2Vzc0F1dGhlbnRpY2F0aW9uU3RhdHVzLCBwb2lTdGF0dXNdKTtcblxuICAgIGNvbnN0IHZlcmlmaWNhdGlvbl9zdGF0dXMgPSB1c2VNZW1vKCgpID0+IHtcbiAgICAgICAgY29uc3QgaXNQT0lTZXJ2aWNlU3RhdHVzID0gKC4uLnN0YXR1c2VzOiBUU2VydmljZVN0YXR1c1tdKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50X3NlcnZpY2UgPSBwb2lTdGF0dXM/LmN1cnJlbnQ/LnNlcnZpY2UgYXMga2V5b2YgVFNlcnZpY2VzO1xuICAgICAgICAgICAgY29uc3Qgc2VydmljZSA9IHBvaVN0YXR1cz8uc2VydmljZXM/LltjdXJyZW50X3NlcnZpY2VdO1xuICAgICAgICAgICAgaWYgKHNlcnZpY2U/LnN0YXR1cykge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdGF0dXNlcy5pbmNsdWRlcyhzZXJ2aWNlLnN0YXR1cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgcGVuZGluZ1N0YXR1c2VzID0gWydwb2FfcGVuZGluZycsICd2ZXJpZmljYXRpb25fcGVuZGluZyddO1xuICAgICAgICBjb25zdCBpc1N0YXR1c1BlbmRpbmcgPSBwZW5kaW5nU3RhdHVzZXMuaW5jbHVkZXMobXQ1X2FjY291bnRfc3RhdHVzID8/ICcnKTtcblxuICAgICAgICBjb25zdCBzdGF0dXMgPSB7XG4gICAgICAgICAgICBpc19mYWlsZWQ6IGZhbHNlLFxuICAgICAgICAgICAgaXNfbm90X2FwcGxpY2FibGU6IGZhbHNlLFxuICAgICAgICAgICAgaXNfcGVuZGluZzogZmFsc2UsXG4gICAgICAgIH07XG4gICAgICAgIHN3aXRjaCAoanVyaXNkaWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlICdidmknOlxuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgaXNQT0lTZXJ2aWNlU3RhdHVzKCdleHBpcmVkJywgJ3JlamVjdGVkJywgJ3N1c3BlY3RlZCcpIHx8XG4gICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU3RhdHVzPy5pc19pZHZfcmV2b2tlZCB8fFxuICAgICAgICAgICAgICAgICAgICBtdDVfYWNjb3VudF9zdGF0dXMgPT09ICdwcm9vZl9mYWlsZWQnXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1cy5pc19mYWlsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNQT0lTZXJ2aWNlU3RhdHVzKCdwZW5kaW5nJykgfHwgaXNTdGF0dXNQZW5kaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1cy5pc19wZW5kaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdsYWJ1YW4nOlxuICAgICAgICAgICAgICAgIGlmIChcbiAgICAgICAgICAgICAgICAgICAgaXNQT0lTZXJ2aWNlU3RhdHVzKCdleHBpcmVkJywgJ3JlamVjdGVkJywgJ3N1c3BlY3RlZCcpIHx8XG4gICAgICAgICAgICAgICAgICAgIGF1dGhlbnRpY2F0aW9uU3RhdHVzPy5pc19pZHZfcmV2b2tlZCB8fFxuICAgICAgICAgICAgICAgICAgICAvLyBOT1RFOiBCRSBwbGFucyB0byByZW5hbWUgdGhpcyB0byBgYXV0aGVudGljYXRlZF93aXRoX2lkdmBcbiAgICAgICAgICAgICAgICAgICAgYXV0aGVudGljYXRpb25TdGF0dXM/LmlzX2F1dGhlbnRpY2F0ZWRfd2l0aF9pZHZfcGhvdG9pZCB8fFxuICAgICAgICAgICAgICAgICAgICBtdDVfYWNjb3VudF9zdGF0dXMgPT09ICdwcm9vZl9mYWlsZWQnXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1cy5pc19mYWlsZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoaXNQT0lTZXJ2aWNlU3RhdHVzKCdwZW5kaW5nJykgfHwgaXNTdGF0dXNQZW5kaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YXR1cy5pc19wZW5kaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdzdmcnOlxuICAgICAgICAgICAgICAgIHN0YXR1cy5pc19ub3RfYXBwbGljYWJsZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIC8vIGZvciBvdGhlciBqdXJpc2RpY3Rpb25zLCBNVDUgYWNjb3VudCBzdGF0dXMgYWxyZWFkeSBjaGVja3MgZm9yIFBPQSBzdGF0dXMgaW4gQkVcbiAgICAgICAgICAgICAgICBpZiAobXQ1X2FjY291bnRfc3RhdHVzID09PSAncHJvb2ZfZmFpbGVkJykge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXMuaXNfZmFpbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGlzU3RhdHVzUGVuZGluZykge1xuICAgICAgICAgICAgICAgICAgICBzdGF0dXMuaXNfcGVuZGluZyA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHN0YXR1cztcbiAgICB9LCBbXG4gICAgICAgIGp1cmlzZGljdGlvbixcbiAgICAgICAgcG9pU3RhdHVzLFxuICAgICAgICBhdXRoZW50aWNhdGlvblN0YXR1cz8uaXNfaWR2X3Jldm9rZWQsXG4gICAgICAgIGF1dGhlbnRpY2F0aW9uU3RhdHVzPy5pc19hdXRoZW50aWNhdGVkX3dpdGhfaWR2X3Bob3RvaWQsXG4gICAgICAgIG10NV9hY2NvdW50X3N0YXR1cyxcbiAgICBdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IHZlcmlmaWNhdGlvbl9zdGF0dXMsXG4gICAgICAgIC8qKiBjaGVja3MgaWYgdGhlIGhvb2sgaGFzIGNvbXBsZXRlZCB2ZXJpZmljYXRpb24gY2hlY2tzIGZvciB0aGUgbGFuZGluZyBjb21wYW55L2p1cmlzZGljdGlvbiAqL1xuICAgICAgICBpc1N1Y2Nlc3MsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZUp1cmlzZGljdGlvblN0YXR1cztcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxudHlwZSBUUGF5bG9hZCA9IFBhcmFtZXRlcnM8UmV0dXJuVHlwZTx0eXBlb2YgdXNlTXV0YXRpb248J210NV9kZXBvc2l0Jz4+WydtdXRhdGUnXT5bMF1bJ3BheWxvYWQnXTtcblxuLyoqIEEgY3VzdG9tIGhvb2sgZm9yIHRvcC11cCBvZiBNVDUgQWNjb3VudHMgKi9cbmNvbnN0IHVzZU1UNURlcG9zaXQgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBtdXRhdGU6IF9tdXRhdGUsIG11dGF0ZUFzeW5jOiBfbXV0YXRlQXN5bmMsIC4uLnJlc3QgfSA9IHVzZU11dGF0aW9uKCdtdDVfZGVwb3NpdCcpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcbiAgICBjb25zdCBtdXRhdGVBc3luYyA9IHVzZUNhbGxiYWNrKChwYXlsb2FkOiBUUGF5bG9hZCkgPT4gX211dGF0ZUFzeW5jKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVBc3luY10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBtdXRhdGlvbiBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBwYXlsb2FkIGFuZCBzZW5kcyBpdCB0byB0aGUgc2VydmVyICovXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgbXV0YXRlQXN5bmMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZU1UNURlcG9zaXQ7XG4iLCJleHBvcnQgY29uc3QgQUxQSEFfMl9UT19BTFBIQV8zOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICAgIEFGOiAnQUZHJyxcbiAgICBBWDogJ0FMQScsXG4gICAgQUw6ICdBTEInLFxuICAgIERaOiAnRFpBJyxcbiAgICBBUzogJ0FTTScsXG4gICAgQUQ6ICdBTkQnLFxuICAgIEFPOiAnQUdPJyxcbiAgICBBSTogJ0FJQScsXG4gICAgQVE6ICdBVEEnLFxuICAgIEFHOiAnQVRHJyxcbiAgICBBUjogJ0FSRycsXG4gICAgQU06ICdBUk0nLFxuICAgIEFXOiAnQUJXJyxcbiAgICBBVTogJ0FVUycsXG4gICAgQVQ6ICdBVVQnLFxuICAgIEFaOiAnQVpFJyxcbiAgICBCUzogJ0JIUycsXG4gICAgQkg6ICdCSFInLFxuICAgIEJEOiAnQkdEJyxcbiAgICBCQjogJ0JSQicsXG4gICAgQlk6ICdCTFInLFxuICAgIEJFOiAnQkVMJyxcbiAgICBCWjogJ0JMWicsXG4gICAgQko6ICdCRU4nLFxuICAgIEJNOiAnQk1VJyxcbiAgICBCVDogJ0JUTicsXG4gICAgQk86ICdCT0wnLFxuICAgIEJROiAnQkVTJyxcbiAgICBCQTogJ0JJSCcsXG4gICAgQlc6ICdCV0EnLFxuICAgIEJWOiAnQlZUJyxcbiAgICBCUjogJ0JSQScsXG4gICAgVkc6ICdWR0InLFxuICAgIElPOiAnSU9UJyxcbiAgICBCTjogJ0JSTicsXG4gICAgQkc6ICdCR1InLFxuICAgIEJGOiAnQkZBJyxcbiAgICBCSTogJ0JESScsXG4gICAgS0g6ICdLSE0nLFxuICAgIENNOiAnQ01SJyxcbiAgICBDQTogJ0NBTicsXG4gICAgQ1Y6ICdDUFYnLFxuICAgIEtZOiAnQ1lNJyxcbiAgICBDRjogJ0NBRicsXG4gICAgVEQ6ICdUQ0QnLFxuICAgIENMOiAnQ0hMJyxcbiAgICBDTjogJ0NITicsXG4gICAgSEs6ICdIS0cnLFxuICAgIE1POiAnTUFDJyxcbiAgICBDWDogJ0NYUicsXG4gICAgQ0M6ICdDQ0snLFxuICAgIENPOiAnQ09MJyxcbiAgICBLTTogJ0NPTScsXG4gICAgQ0c6ICdDT0cnLFxuICAgIENEOiAnQ09EJyxcbiAgICBDSzogJ0NPSycsXG4gICAgQ1I6ICdDUkknLFxuICAgIENJOiAnQ0lWJyxcbiAgICBIUjogJ0hSVicsXG4gICAgQ1U6ICdDVUInLFxuICAgIENXOiAnQ1VXJyxcbiAgICBDWTogJ0NZUCcsXG4gICAgQ1o6ICdDWkUnLFxuICAgIERLOiAnRE5LJyxcbiAgICBESjogJ0RKSScsXG4gICAgRE06ICdETUEnLFxuICAgIERPOiAnRE9NJyxcbiAgICBFQzogJ0VDVScsXG4gICAgRUc6ICdFR1knLFxuICAgIFNWOiAnU0xWJyxcbiAgICBHUTogJ0dOUScsXG4gICAgRVI6ICdFUkknLFxuICAgIEVFOiAnRVNUJyxcbiAgICBFVDogJ0VUSCcsXG4gICAgRks6ICdGTEsnLFxuICAgIEZPOiAnRlJPJyxcbiAgICBGSjogJ0ZKSScsXG4gICAgRkk6ICdGSU4nLFxuICAgIEZSOiAnRlJBJyxcbiAgICBHRjogJ0dVRicsXG4gICAgUEY6ICdQWUYnLFxuICAgIFRGOiAnQVRGJyxcbiAgICBHQTogJ0dBQicsXG4gICAgR006ICdHTUInLFxuICAgIEdFOiAnR0VPJyxcbiAgICBERTogJ0RFVScsXG4gICAgR0g6ICdHSEEnLFxuICAgIEdJOiAnR0lCJyxcbiAgICBHUjogJ0dSQycsXG4gICAgR0w6ICdHUkwnLFxuICAgIEdEOiAnR1JEJyxcbiAgICBHUDogJ0dMUCcsXG4gICAgR1U6ICdHVU0nLFxuICAgIEdUOiAnR1RNJyxcbiAgICBHRzogJ0dHWScsXG4gICAgR046ICdHSU4nLFxuICAgIEdXOiAnR05CJyxcbiAgICBHWTogJ0dVWScsXG4gICAgSFQ6ICdIVEknLFxuICAgIEhNOiAnSE1EJyxcbiAgICBWQTogJ1ZBVCcsXG4gICAgSE46ICdITkQnLFxuICAgIEhVOiAnSFVOJyxcbiAgICBJUzogJ0lTTCcsXG4gICAgSU46ICdJTkQnLFxuICAgIElEOiAnSUROJyxcbiAgICBJUjogJ0lSTicsXG4gICAgSVE6ICdJUlEnLFxuICAgIElFOiAnSVJMJyxcbiAgICBJTTogJ0lNTicsXG4gICAgSUw6ICdJU1InLFxuICAgIElUOiAnSVRBJyxcbiAgICBKTTogJ0pBTScsXG4gICAgSlA6ICdKUE4nLFxuICAgIEpFOiAnSkVZJyxcbiAgICBKTzogJ0pPUicsXG4gICAgS1o6ICdLQVonLFxuICAgIEtFOiAnS0VOJyxcbiAgICBLSTogJ0tJUicsXG4gICAgS1A6ICdQUksnLFxuICAgIEtSOiAnS09SJyxcbiAgICBLVzogJ0tXVCcsXG4gICAgS0c6ICdLR1onLFxuICAgIExBOiAnTEFPJyxcbiAgICBMVjogJ0xWQScsXG4gICAgTEI6ICdMQk4nLFxuICAgIExTOiAnTFNPJyxcbiAgICBMUjogJ0xCUicsXG4gICAgTFk6ICdMQlknLFxuICAgIExJOiAnTElFJyxcbiAgICBMVDogJ0xUVScsXG4gICAgTFU6ICdMVVgnLFxuICAgIE1LOiAnTUtEJyxcbiAgICBNRzogJ01ERycsXG4gICAgTVc6ICdNV0knLFxuICAgIE1ZOiAnTVlTJyxcbiAgICBNVjogJ01EVicsXG4gICAgTUw6ICdNTEknLFxuICAgIE1UOiAnTUxUJyxcbiAgICBNSDogJ01ITCcsXG4gICAgTVE6ICdNVFEnLFxuICAgIE1SOiAnTVJUJyxcbiAgICBNVTogJ01VUycsXG4gICAgWVQ6ICdNWVQnLFxuICAgIE1YOiAnTUVYJyxcbiAgICBGTTogJ0ZTTScsXG4gICAgTUQ6ICdNREEnLFxuICAgIE1DOiAnTUNPJyxcbiAgICBNTjogJ01ORycsXG4gICAgTUU6ICdNTkUnLFxuICAgIE1TOiAnTVNSJyxcbiAgICBNQTogJ01BUicsXG4gICAgTVo6ICdNT1onLFxuICAgIE1NOiAnTU1SJyxcbiAgICBOQTogJ05BTScsXG4gICAgTlI6ICdOUlUnLFxuICAgIE5QOiAnTlBMJyxcbiAgICBOTDogJ05MRCcsXG4gICAgQU46ICdBTlQnLFxuICAgIE5DOiAnTkNMJyxcbiAgICBOWjogJ05aTCcsXG4gICAgTkk6ICdOSUMnLFxuICAgIE5FOiAnTkVSJyxcbiAgICBORzogJ05HQScsXG4gICAgTlU6ICdOSVUnLFxuICAgIE5GOiAnTkZLJyxcbiAgICBNUDogJ01OUCcsXG4gICAgTk86ICdOT1InLFxuICAgIE9NOiAnT01OJyxcbiAgICBQSzogJ1BBSycsXG4gICAgUFc6ICdQTFcnLFxuICAgIFBTOiAnUFNFJyxcbiAgICBQQTogJ1BBTicsXG4gICAgUEc6ICdQTkcnLFxuICAgIFBZOiAnUFJZJyxcbiAgICBQRTogJ1BFUicsXG4gICAgUEg6ICdQSEwnLFxuICAgIFBOOiAnUENOJyxcbiAgICBQTDogJ1BPTCcsXG4gICAgUFQ6ICdQUlQnLFxuICAgIFBSOiAnUFJJJyxcbiAgICBRQTogJ1FBVCcsXG4gICAgUkU6ICdSRVUnLFxuICAgIFJPOiAnUk9VJyxcbiAgICBSVTogJ1JVUycsXG4gICAgUlc6ICdSV0EnLFxuICAgIEJMOiAnQkxNJyxcbiAgICBTSDogJ1NITicsXG4gICAgS046ICdLTkEnLFxuICAgIExDOiAnTENBJyxcbiAgICBNRjogJ01BRicsXG4gICAgUE06ICdTUE0nLFxuICAgIFZDOiAnVkNUJyxcbiAgICBXUzogJ1dTTScsXG4gICAgU006ICdTTVInLFxuICAgIFNUOiAnU1RQJyxcbiAgICBTQTogJ1NBVScsXG4gICAgU046ICdTRU4nLFxuICAgIFJTOiAnU1JCJyxcbiAgICBTQzogJ1NZQycsXG4gICAgU0w6ICdTTEUnLFxuICAgIFNHOiAnU0dQJyxcbiAgICBTWDogJ1NYTScsXG4gICAgU0s6ICdTVksnLFxuICAgIFNJOiAnU1ZOJyxcbiAgICBTQjogJ1NMQicsXG4gICAgU086ICdTT00nLFxuICAgIFpBOiAnWkFGJyxcbiAgICBHUzogJ1NHUycsXG4gICAgU1M6ICdTU0QnLFxuICAgIEVTOiAnRVNQJyxcbiAgICBMSzogJ0xLQScsXG4gICAgU0Q6ICdTRE4nLFxuICAgIFNSOiAnU1VSJyxcbiAgICBTSjogJ1NKTScsXG4gICAgU1o6ICdTV1onLFxuICAgIFNFOiAnU1dFJyxcbiAgICBDSDogJ0NIRScsXG4gICAgU1k6ICdTWVInLFxuICAgIFRXOiAnVFdOJyxcbiAgICBUSjogJ1RKSycsXG4gICAgVFo6ICdUWkEnLFxuICAgIFRIOiAnVEhBJyxcbiAgICBUTDogJ1RMUycsXG4gICAgVEc6ICdUR08nLFxuICAgIFRLOiAnVEtMJyxcbiAgICBUTzogJ1RPTicsXG4gICAgVFQ6ICdUVE8nLFxuICAgIFROOiAnVFVOJyxcbiAgICBUUjogJ1RVUicsXG4gICAgVE06ICdUS00nLFxuICAgIFRDOiAnVENBJyxcbiAgICBUVjogJ1RVVicsXG4gICAgVUc6ICdVR0EnLFxuICAgIFVBOiAnVUtSJyxcbiAgICBBRTogJ0FSRScsXG4gICAgR0I6ICdHQlInLFxuICAgIFVTOiAnVVNBJyxcbiAgICBVTTogJ1VNSScsXG4gICAgVVk6ICdVUlknLFxuICAgIFVaOiAnVVpCJyxcbiAgICBWVTogJ1ZVVCcsXG4gICAgVkU6ICdWRU4nLFxuICAgIFZOOiAnVk5NJyxcbiAgICBWSTogJ1ZJUicsXG4gICAgV0Y6ICdXTEYnLFxuICAgIEVIOiAnRVNIJyxcbiAgICBZRTogJ1lFTScsXG4gICAgWk06ICdaTUInLFxuICAgIFpXOiAnWldFJyxcbiAgICBYSzogJ1hLWCcsXG59O1xuXG5leHBvcnQgY29uc3QgQUxQSEFfM19UT19BTFBIQV8yOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge1xuICAgIEFGRzogJ0FGJyxcbiAgICBBTEE6ICdBWCcsXG4gICAgQUxCOiAnQUwnLFxuICAgIERaQTogJ0RaJyxcbiAgICBBU006ICdBUycsXG4gICAgQU5EOiAnQUQnLFxuICAgIEFHTzogJ0FPJyxcbiAgICBBSUE6ICdBSScsXG4gICAgQVRBOiAnQVEnLFxuICAgIEFURzogJ0FHJyxcbiAgICBBUkc6ICdBUicsXG4gICAgQVJNOiAnQU0nLFxuICAgIEFCVzogJ0FXJyxcbiAgICBBVVM6ICdBVScsXG4gICAgQVVUOiAnQVQnLFxuICAgIEFaRTogJ0FaJyxcbiAgICBCSFM6ICdCUycsXG4gICAgQkhSOiAnQkgnLFxuICAgIEJHRDogJ0JEJyxcbiAgICBCUkI6ICdCQicsXG4gICAgQkxSOiAnQlknLFxuICAgIEJFTDogJ0JFJyxcbiAgICBCTFo6ICdCWicsXG4gICAgQkVOOiAnQkonLFxuICAgIEJNVTogJ0JNJyxcbiAgICBCVE46ICdCVCcsXG4gICAgQk9MOiAnQk8nLFxuICAgIEJFUzogJ0JRJyxcbiAgICBCSUg6ICdCQScsXG4gICAgQldBOiAnQlcnLFxuICAgIEJWVDogJ0JWJyxcbiAgICBCUkE6ICdCUicsXG4gICAgVkdCOiAnVkcnLFxuICAgIElPVDogJ0lPJyxcbiAgICBCUk46ICdCTicsXG4gICAgQkdSOiAnQkcnLFxuICAgIEJGQTogJ0JGJyxcbiAgICBCREk6ICdCSScsXG4gICAgS0hNOiAnS0gnLFxuICAgIENNUjogJ0NNJyxcbiAgICBDQU46ICdDQScsXG4gICAgQ1BWOiAnQ1YnLFxuICAgIENZTTogJ0tZJyxcbiAgICBDQUY6ICdDRicsXG4gICAgVENEOiAnVEQnLFxuICAgIENITDogJ0NMJyxcbiAgICBDSE46ICdDTicsXG4gICAgSEtHOiAnSEsnLFxuICAgIE1BQzogJ01PJyxcbiAgICBDWFI6ICdDWCcsXG4gICAgQ0NLOiAnQ0MnLFxuICAgIENPTDogJ0NPJyxcbiAgICBDT006ICdLTScsXG4gICAgQ09HOiAnQ0cnLFxuICAgIENPRDogJ0NEJyxcbiAgICBDT0s6ICdDSycsXG4gICAgQ1JJOiAnQ1InLFxuICAgIENJVjogJ0NJJyxcbiAgICBIUlY6ICdIUicsXG4gICAgQ1VCOiAnQ1UnLFxuICAgIENVVzogJ0NXJyxcbiAgICBDWVA6ICdDWScsXG4gICAgQ1pFOiAnQ1onLFxuICAgIEROSzogJ0RLJyxcbiAgICBESkk6ICdESicsXG4gICAgRE1BOiAnRE0nLFxuICAgIERPTTogJ0RPJyxcbiAgICBFQ1U6ICdFQycsXG4gICAgRUdZOiAnRUcnLFxuICAgIFNMVjogJ1NWJyxcbiAgICBHTlE6ICdHUScsXG4gICAgRVJJOiAnRVInLFxuICAgIEVTVDogJ0VFJyxcbiAgICBFVEg6ICdFVCcsXG4gICAgRkxLOiAnRksnLFxuICAgIEZSTzogJ0ZPJyxcbiAgICBGSkk6ICdGSicsXG4gICAgRklOOiAnRkknLFxuICAgIEZSQTogJ0ZSJyxcbiAgICBHVUY6ICdHRicsXG4gICAgUFlGOiAnUEYnLFxuICAgIEFURjogJ1RGJyxcbiAgICBHQUI6ICdHQScsXG4gICAgR01COiAnR00nLFxuICAgIEdFTzogJ0dFJyxcbiAgICBERVU6ICdERScsXG4gICAgR0hBOiAnR0gnLFxuICAgIEdJQjogJ0dJJyxcbiAgICBHUkM6ICdHUicsXG4gICAgR1JMOiAnR0wnLFxuICAgIEdSRDogJ0dEJyxcbiAgICBHTFA6ICdHUCcsXG4gICAgR1VNOiAnR1UnLFxuICAgIEdUTTogJ0dUJyxcbiAgICBHR1k6ICdHRycsXG4gICAgR0lOOiAnR04nLFxuICAgIEdOQjogJ0dXJyxcbiAgICBHVVk6ICdHWScsXG4gICAgSFRJOiAnSFQnLFxuICAgIEhNRDogJ0hNJyxcbiAgICBWQVQ6ICdWQScsXG4gICAgSE5EOiAnSE4nLFxuICAgIEhVTjogJ0hVJyxcbiAgICBJU0w6ICdJUycsXG4gICAgSU5EOiAnSU4nLFxuICAgIElETjogJ0lEJyxcbiAgICBJUk46ICdJUicsXG4gICAgSVJROiAnSVEnLFxuICAgIElSTDogJ0lFJyxcbiAgICBJTU46ICdJTScsXG4gICAgSVNSOiAnSUwnLFxuICAgIElUQTogJ0lUJyxcbiAgICBKQU06ICdKTScsXG4gICAgSlBOOiAnSlAnLFxuICAgIEpFWTogJ0pFJyxcbiAgICBKT1I6ICdKTycsXG4gICAgS0FaOiAnS1onLFxuICAgIEtFTjogJ0tFJyxcbiAgICBLSVI6ICdLSScsXG4gICAgUFJLOiAnS1AnLFxuICAgIEtPUjogJ0tSJyxcbiAgICBLV1Q6ICdLVycsXG4gICAgS0daOiAnS0cnLFxuICAgIExBTzogJ0xBJyxcbiAgICBMVkE6ICdMVicsXG4gICAgTEJOOiAnTEInLFxuICAgIExTTzogJ0xTJyxcbiAgICBMQlI6ICdMUicsXG4gICAgTEJZOiAnTFknLFxuICAgIExJRTogJ0xJJyxcbiAgICBMVFU6ICdMVCcsXG4gICAgTFVYOiAnTFUnLFxuICAgIE1LRDogJ01LJyxcbiAgICBNREc6ICdNRycsXG4gICAgTVdJOiAnTVcnLFxuICAgIE1ZUzogJ01ZJyxcbiAgICBNRFY6ICdNVicsXG4gICAgTUxJOiAnTUwnLFxuICAgIE1MVDogJ01UJyxcbiAgICBNSEw6ICdNSCcsXG4gICAgTVRROiAnTVEnLFxuICAgIE1SVDogJ01SJyxcbiAgICBNVVM6ICdNVScsXG4gICAgTVlUOiAnWVQnLFxuICAgIE1FWDogJ01YJyxcbiAgICBGU006ICdGTScsXG4gICAgTURBOiAnTUQnLFxuICAgIE1DTzogJ01DJyxcbiAgICBNTkc6ICdNTicsXG4gICAgTU5FOiAnTUUnLFxuICAgIE1TUjogJ01TJyxcbiAgICBNQVI6ICdNQScsXG4gICAgTU9aOiAnTVonLFxuICAgIE1NUjogJ01NJyxcbiAgICBOQU06ICdOQScsXG4gICAgTlJVOiAnTlInLFxuICAgIE5QTDogJ05QJyxcbiAgICBOTEQ6ICdOTCcsXG4gICAgQU5UOiAnQU4nLFxuICAgIE5DTDogJ05DJyxcbiAgICBOWkw6ICdOWicsXG4gICAgTklDOiAnTkknLFxuICAgIE5FUjogJ05FJyxcbiAgICBOR0E6ICdORycsXG4gICAgTklVOiAnTlUnLFxuICAgIE5GSzogJ05GJyxcbiAgICBNTlA6ICdNUCcsXG4gICAgTk9SOiAnTk8nLFxuICAgIE9NTjogJ09NJyxcbiAgICBQQUs6ICdQSycsXG4gICAgUExXOiAnUFcnLFxuICAgIFBTRTogJ1BTJyxcbiAgICBQQU46ICdQQScsXG4gICAgUE5HOiAnUEcnLFxuICAgIFBSWTogJ1BZJyxcbiAgICBQRVI6ICdQRScsXG4gICAgUEhMOiAnUEgnLFxuICAgIFBDTjogJ1BOJyxcbiAgICBQT0w6ICdQTCcsXG4gICAgUFJUOiAnUFQnLFxuICAgIFBSSTogJ1BSJyxcbiAgICBRQVQ6ICdRQScsXG4gICAgUkVVOiAnUkUnLFxuICAgIFJPVTogJ1JPJyxcbiAgICBSVVM6ICdSVScsXG4gICAgUldBOiAnUlcnLFxuICAgIEJMTTogJ0JMJyxcbiAgICBTSE46ICdTSCcsXG4gICAgS05BOiAnS04nLFxuICAgIExDQTogJ0xDJyxcbiAgICBNQUY6ICdNRicsXG4gICAgU1BNOiAnUE0nLFxuICAgIFZDVDogJ1ZDJyxcbiAgICBXU006ICdXUycsXG4gICAgU01SOiAnU00nLFxuICAgIFNUUDogJ1NUJyxcbiAgICBTQVU6ICdTQScsXG4gICAgU0VOOiAnU04nLFxuICAgIFNSQjogJ1JTJyxcbiAgICBTWUM6ICdTQycsXG4gICAgU0xFOiAnU0wnLFxuICAgIFNHUDogJ1NHJyxcbiAgICBTWE06ICdTWCcsXG4gICAgU1ZLOiAnU0snLFxuICAgIFNWTjogJ1NJJyxcbiAgICBTTEI6ICdTQicsXG4gICAgU09NOiAnU08nLFxuICAgIFpBRjogJ1pBJyxcbiAgICBTR1M6ICdHUycsXG4gICAgU1NEOiAnU1MnLFxuICAgIEVTUDogJ0VTJyxcbiAgICBMS0E6ICdMSycsXG4gICAgU0ROOiAnU0QnLFxuICAgIFNVUjogJ1NSJyxcbiAgICBTSk06ICdTSicsXG4gICAgU1daOiAnU1onLFxuICAgIFNXRTogJ1NFJyxcbiAgICBDSEU6ICdDSCcsXG4gICAgU1lSOiAnU1knLFxuICAgIFRXTjogJ1RXJyxcbiAgICBUSks6ICdUSicsXG4gICAgVFpBOiAnVFonLFxuICAgIFRIQTogJ1RIJyxcbiAgICBUTFM6ICdUTCcsXG4gICAgVEdPOiAnVEcnLFxuICAgIFRLTDogJ1RLJyxcbiAgICBUT046ICdUTycsXG4gICAgVFRPOiAnVFQnLFxuICAgIFRVTjogJ1ROJyxcbiAgICBUVVI6ICdUUicsXG4gICAgVEtNOiAnVE0nLFxuICAgIFRDQTogJ1RDJyxcbiAgICBUVVY6ICdUVicsXG4gICAgVUdBOiAnVUcnLFxuICAgIFVLUjogJ1VBJyxcbiAgICBBUkU6ICdBRScsXG4gICAgR0JSOiAnR0InLFxuICAgIFVTQTogJ1VTJyxcbiAgICBVTUk6ICdVTScsXG4gICAgVVJZOiAnVVknLFxuICAgIFVaQjogJ1VaJyxcbiAgICBWVVQ6ICdWVScsXG4gICAgVkVOOiAnVkUnLFxuICAgIFZOTTogJ1ZOJyxcbiAgICBWSVI6ICdWSScsXG4gICAgV0xGOiAnV0YnLFxuICAgIEVTSDogJ0VIJyxcbiAgICBZRU06ICdZRScsXG4gICAgWk1COiAnWk0nLFxuICAgIFpXRTogJ1pXJyxcbiAgICBYS1g6ICdYSycsXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuZXhwb3J0IGNvbnN0IFJPT1RfQ0xBU1MgPSAnbWFudWFsLXBvaS1kZXRhaWxzJztcblxuZXhwb3J0IGNvbnN0IERPQ1VNRU5UX1RZUEVTID0ge1xuICAgIE5BVElPTkFMX0lERU5USVRZX0NBUkQ6ICduYXRpb25hbF9pZGVudGl0eV9jYXJkJyxcbiAgICBOSU1DX1NMSVA6ICduaW1jX3NsaXAnLFxuICAgIFBBU1NQT1JUOiAncGFzc3BvcnQnLFxuICAgIERSSVZJTkdfTElDRU5DRTogJ2RyaXZpbmdfbGljZW5jZScsXG4gICAgQklSVEhfQ0VSVElGSUNBVEU6ICdiaXJ0aF9jZXJ0aWZpY2F0ZScsXG4gICAgU0VMRklFX1dJVEhfSUQ6ICdzZWxmaWVfd2l0aF9pZCcsXG4gICAgT1RIRVI6ICdvdGhlcicsXG59O1xuXG5jb25zdCBQQUdFX1RZUEUgPSB7XG4gICAgRlJPTlQ6ICdmcm9udCcsXG4gICAgQkFDSzogJ2JhY2snLFxuICAgIFBIT1RPOiAncGhvdG8nLFxufTtcblxuZXhwb3J0IGNvbnN0IFNFTEZJRV9ET0NVTUVOVCA9IHtcbiAgICBkb2N1bWVudF90eXBlOiBET0NVTUVOVF9UWVBFUy5TRUxGSUVfV0lUSF9JRCxcbiAgICBwYWdlVHlwZTogUEFHRV9UWVBFLlBIT1RPLFxuICAgIG5hbWU6ICdzZWxmaWVfd2l0aF9pZCcsXG4gICAgaWNvbjogJ0ljU2VsZmllJyxcbiAgICBpbmZvOiAnVXBsb2FkIHlvdXIgc2VsZmllLicsXG59O1xuXG5leHBvcnQgY29uc3QgZGF0ZV9maWVsZCA9IHtcbiAgICBuYW1lOiAnZXhwaXJ5X2RhdGUnLFxuICAgIGxhYmVsOiAnRXhwaXJ5IGRhdGUnLFxuICAgIHR5cGU6ICdkYXRlJyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBPTkZJRE9fUEhSQVNFUyA9IHtcbiAgICBjb3VudHJ5X3NlbGVjdDoge1xuICAgICAgICBhbGVydF9kcm9wZG93bjoge1xuICAgICAgICAgICAgY291bnRyeV9ub3RfZm91bmQ6ICdDb3VudHJ5IG5vdCBmb3VuZCcsXG4gICAgICAgIH0sXG4gICAgICAgIGFsZXJ0OiB7XG4gICAgICAgICAgICBhbm90aGVyX2RvYzpcbiAgICAgICAgICAgICAgICAnRG9jdW1lbnRzIGZyb20gdGhhdCBjb3VudHJ5IGFyZSBub3QgY3VycmVudGx5IHN1cHBvcnRlZCDigJQgPGZhbGxiYWNrPnRyeSBhbm90aGVyIGRvY3VtZW50IHR5cGU8L2ZhbGxiYWNrPicsXG4gICAgICAgIH0sXG4gICAgICAgIGJ1dHRvbl9wcmltYXJ5OiAnU3VibWl0IGRvY3VtZW50JyxcbiAgICAgICAgc2VhcmNoOiB7XG4gICAgICAgICAgICBhY2Nlc3NpYmlsaXR5OiAnU2VsZWN0IGNvdW50cnknLFxuICAgICAgICAgICAgaW5wdXRfcGxhY2Vob2xkZXI6ICdlLmcuIFVuaXRlZCBTdGF0ZXMnLFxuICAgICAgICAgICAgbGFiZWw6ICdTZWFyY2ggZm9yIGNvdW50cnknLFxuICAgICAgICB9LFxuICAgICAgICB0aXRsZTogJ1NlbGVjdCBpc3N1aW5nIGNvdW50cnknLFxuICAgIH0sXG4gICAgY3Jvc3NfZGV2aWNlX2NoZWNrbGlzdDoge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ1N1Ym1pdCB2ZXJpZmljYXRpb24nLFxuICAgICAgICBpbmZvOiAnVGlwcycsXG4gICAgICAgIGxpc3RfaXRlbV9kb2NfbXVsdGlwbGU6ICdEb2N1bWVudHMgdXBsb2FkZWQnLFxuICAgICAgICBsaXN0X2l0ZW1fZG9jX29uZTogJ0RvY3VtZW50IHVwbG9hZGVkJyxcbiAgICAgICAgbGlzdF9pdGVtX3NlbGZpZTogJ1NlbGZpZSB1cGxvYWRlZCcsXG4gICAgICAgIHN1YnRpdGxlOiBcIldlJ3JlIG5vdyByZWFkeSB0byB2ZXJpZnkgeW91ciBpZGVudGl0eVwiLFxuICAgICAgICB0aXRsZTogXCJHcmVhdCwgdGhhdCdzIGV2ZXJ5dGhpbmcgd2UgbmVlZFwiLFxuICAgIH0sXG4gICAgY3Jvc3NfZGV2aWNlX2Vycm9yX2Rlc2t0b3A6IHtcbiAgICAgICAgc3VidGl0bGU6ICdUaGUgbGluayBvbmx5IHdvcmtzIG9uIG1vYmlsZSBkZXZpY2VzJyxcbiAgICAgICAgdGl0bGU6IFwiU29tZXRoaW5nJ3MgZ29uZSB3cm9uZ1wiLFxuICAgIH0sXG4gICAgY3Jvc3NfZGV2aWNlX2Vycm9yX3Jlc3RhcnQ6IHtcbiAgICAgICAgc3VidGl0bGU6IFwiWW91J2xsIG5lZWQgdG8gcmVzdGFydCB5b3VyIHZlcmlmaWNhdGlvbiBvbiB5b3VyIGNvbXB1dGVyXCIsXG4gICAgICAgIHRpdGxlOiBcIlNvbWV0aGluZydzIGdvbmUgd3JvbmdcIixcbiAgICB9LFxuICAgIGNyb3NzX2RldmljZV9pbnRybzoge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ0dldCBzZWN1cmUgbGluaycsXG4gICAgICAgIGxpc3RfYWNjZXNzaWJpbGl0eTogJ1N0ZXBzIHJlcXVpcmVkIHRvIGNvbnRpbnVlIHZlcmlmaWNhdGlvbiBvbiB5b3VyIG1vYmlsZScsXG4gICAgICAgIGxpc3RfaXRlbV9maW5pc2g6ICdDaGVjayBiYWNrIGhlcmUgdG8gZmluaXNoIHRoZSBzdWJtaXNzaW9uJyxcbiAgICAgICAgbGlzdF9pdGVtX29wZW5fbGluazogJ09wZW4gdGhlIGxpbmsgYW5kIGNvbXBsZXRlIHRoZSB0YXNrcycsXG4gICAgICAgIGxpc3RfaXRlbV9zZW5kX3Bob25lOiAnU2VuZCBhIHNlY3VyZSBsaW5rIHRvIHlvdXIgcGhvbmUnLFxuICAgICAgICBzdWJ0aXRsZTogXCJIZXJlJ3MgaG93IHRvIGRvIGl0OlwiLFxuICAgICAgICB0aXRsZTogJ0NvbnRpbnVlIG9uIHlvdXIgcGhvbmUnLFxuICAgIH0sXG4gICAgY3Jvc3NfZGV2aWNlX3JldHVybjoge1xuICAgICAgICBib2R5OiAnWW91ciBjb21wdXRlciBtYXkgdGFrZSBhIGZldyBzZWNvbmRzIHRvIHVwZGF0ZScsXG4gICAgICAgIHN1YnRpdGxlOiAnWW91IGNhbiBub3cgcmV0dXJuIHRvIHlvdXIgY29tcHV0ZXIgdG8gY29udGludWUnLFxuICAgICAgICB0aXRsZTogJ1VwbG9hZHMgc3VjY2Vzc2Z1bCcsXG4gICAgfSxcbiAgICBkb2NfY29uZmlybWF0aW9uOiB7XG4gICAgICAgIGFsZXJ0OiB7XG4gICAgICAgICAgICBibHVyX2RldGFpbDogJ01ha2Ugc3VyZSBldmVyeXRoaW5nIGlzIGNsZWFyJyxcbiAgICAgICAgICAgIGJsdXJfdGl0bGU6ICdCbHVycnkgcGhvdG8gZGV0ZWN0ZWQnLFxuICAgICAgICAgICAgY3JvcF9kZXRhaWw6ICdNYWtlIHN1cmUgZnVsbCBkb2N1bWVudCBpcyB2aXNpYmxlJyxcbiAgICAgICAgICAgIGNyb3BfdGl0bGU6ICdDdXQtb2ZmIGltYWdlIGRldGVjdGVkJyxcbiAgICAgICAgICAgIGdsYXJlX2RldGFpbDogJ01vdmUgYXdheSBmcm9tIGRpcmVjdCBsaWdodCcsXG4gICAgICAgICAgICBnbGFyZV90aXRsZTogJ0dsYXJlIGRldGVjdGVkJyxcbiAgICAgICAgICAgIG5vX2RvY19kZXRhaWw6ICdNYWtlIHN1cmUgYWxsIG9mIHRoZSBkb2N1bWVudCBpcyBpbiB0aGUgcGhvdG8nLFxuICAgICAgICAgICAgbm9fZG9jX3RpdGxlOiAnTm8gZG9jdW1lbnQgZGV0ZWN0ZWQnLFxuICAgICAgICB9LFxuICAgICAgICBib2R5X2lkOiAnTWFrZSBzdXJlIHlvdXIgY2FyZCBkZXRhaWxzIGFyZSBjbGVhciB0byByZWFkLCB3aXRoIG5vIGJsdXIgb3IgZ2xhcmUnLFxuICAgICAgICBib2R5X2ltYWdlX21lZGl1bTogJ0l04oCZbGwgdGFrZSBsb25nZXIgdG8gdmVyaWZ5IHlvdSBpZiB3ZSBjYW7igJl0IHJlYWQgaXQnLFxuICAgICAgICBib2R5X2ltYWdlX3Bvb3I6ICdUbyBzbW9vdGhseSB2ZXJpZnkgeW91LCB3ZSBuZWVkIGEgYmV0dGVyIHBob3RvJyxcbiAgICAgICAgYm9keV9saWNlbnNlOiAnTWFrZSBzdXJlIHlvdXIgbGljZW5zZSBkZXRhaWxzIGFyZSBjbGVhciB0byByZWFkLCB3aXRoIG5vIGJsdXIgb3IgZ2xhcmUnLFxuICAgICAgICBib2R5X3Bhc3Nwb3J0OiAnTWFrZSBzdXJlIHlvdXIgcGFzc3BvcnQgZGV0YWlscyBhcmUgY2xlYXIgdG8gcmVhZCwgd2l0aCBubyBibHVyIG9yIGdsYXJlJyxcbiAgICAgICAgYm9keV9wZXJtaXQ6ICdNYWtlIHN1cmUgeW91ciBwZXJtaXQgZGV0YWlscyBhcmUgY2xlYXIgdG8gcmVhZCwgd2l0aCBubyBibHVyIG9yIGdsYXJlJyxcbiAgICAgICAgYm9keV90YXhfbGV0dGVyOiAnTWFrZSBzdXJlIGRldGFpbHMgYXJlIGNsZWFyIHRvIHJlYWQsIHdpdGggbm8gYmx1ciBvciBnbGFyZScsXG4gICAgICAgIGJ1dHRvbl9jbG9zZTogJ0Nsb3NlJyxcbiAgICAgICAgYnV0dG9uX3ByaW1hcnlfcmVkbzogJ1JlZG8nLFxuICAgICAgICBidXR0b25fcHJpbWFyeV91cGxvYWQ6ICdDb25maXJtJyxcbiAgICAgICAgYnV0dG9uX3ByaW1hcnlfdXBsb2FkX2FueXdheTogJ1VwbG9hZCBhbnl3YXknLFxuICAgICAgICBidXR0b25fc2Vjb25kYXJ5X3JlZG86ICdSZWRvJyxcbiAgICAgICAgYnV0dG9uX3pvb206ICdFbmxhcmdlIGltYWdlJyxcbiAgICAgICAgaW1hZ2VfYWNjZXNzaWJpbGl0eTogJ1Bob3RvIG9mIHlvdXIgZG9jdW1lbnQnLFxuICAgICAgICB0aXRsZTogJ0NoZWNrIHlvdXIgaW1hZ2UnLFxuICAgIH0sXG4gICAgZG9jX3NlbGVjdDoge1xuICAgICAgICBidXR0b25faWQ6ICdJZGVudGl0eSBjYXJkJyxcbiAgICAgICAgYnV0dG9uX2lkX2RldGFpbDogJ0Zyb250IGFuZCBiYWNrJyxcbiAgICAgICAgYnV0dG9uX2xpY2Vuc2U6IFwiRHJpdmVyJ3MgbGljZW5zZVwiLFxuICAgICAgICBidXR0b25fbGljZW5zZV9kZXRhaWw6ICdGcm9udCBhbmQgYmFjaycsXG4gICAgICAgIGJ1dHRvbl9wYXNzcG9ydDogJ1Bhc3Nwb3J0JyxcbiAgICAgICAgYnV0dG9uX3Bhc3Nwb3J0X2RldGFpbDogJ0ZhY2UgcGhvdG8gcGFnZScsXG4gICAgICAgIGJ1dHRvbl9wZXJtaXQ6ICdSZXNpZGVuY2UgcGVybWl0JyxcbiAgICAgICAgYnV0dG9uX3Blcm1pdF9kZXRhaWw6ICdGcm9udCBhbmQgYmFjaycsXG4gICAgICAgIGV4dHJhX25vX21vYmlsZTogJ1NvcnJ5LCBubyBtb2JpbGUgcGhvbmUgYmlsbHMnLFxuICAgICAgICBsaXN0X2FjY2Vzc2liaWxpdHk6ICdEb2N1bWVudHMgeW91IGNhbiB1c2UgdG8gdmVyaWZ5IHlvdXIgaWRlbnRpdHknLFxuICAgICAgICBzdWJ0aXRsZTogJ0l0IG11c3QgYmUgYW4gb2ZmaWNpYWwgcGhvdG8gSUQnLFxuICAgICAgICBzdWJ0aXRsZV9wb2E6ICdUaGVzZSBhcmUgdGhlIGRvY3VtZW50cyBtb3N0IGxpa2VseSB0byBzaG93IHlvdXIgY3VycmVudCBob21lIGFkZHJlc3MnLFxuICAgICAgICB0aXRsZTogJ0Nob29zZSBkb2N1bWVudCcsXG4gICAgICAgIHRpdGxlX3BvYTogJ1NlbGVjdCBhICV7Y291bnRyeX0gZG9jdW1lbnQnLFxuICAgIH0sXG4gICAgZG9jX3N1Ym1pdDoge1xuICAgICAgICBidXR0b25fbGlua191cGxvYWQ6ICdvciB1cGxvYWQgcGhvdG8g4oCTIG5vIHNjYW5zIG9yIHBob3RvY29waWVzJyxcbiAgICAgICAgYnV0dG9uX3ByaW1hcnk6ICdDb250aW51ZSBvbiBwaG9uZScsXG4gICAgICAgIHN1YnRpdGxlOiAnVGFrZSBhIHBob3RvIHdpdGggeW91ciBwaG9uZScsXG4gICAgICAgIHRpdGxlX2lkX2JhY2s6ICdTdWJtaXQgaWRlbnRpdHkgY2FyZCAoYmFjayknLFxuICAgICAgICB0aXRsZV9pZF9mcm9udDogJ1N1Ym1pdCBpZGVudGl0eSBjYXJkIChmcm9udCknLFxuICAgICAgICB0aXRsZV9saWNlbnNlX2JhY2s6ICdTdWJtaXQgbGljZW5zZSAoYmFjayknLFxuICAgICAgICB0aXRsZV9saWNlbnNlX2Zyb250OiAnU3VibWl0IGxpY2Vuc2UgKGZyb250KScsXG4gICAgICAgIHRpdGxlX3Bhc3Nwb3J0OiAnU3VibWl0IHBhc3Nwb3J0IHBob3RvIHBhZ2UnLFxuICAgICAgICB0aXRsZV9wZXJtaXRfYmFjazogJ1N1Ym1pdCByZXNpZGVuY2UgcGVybWl0IChiYWNrKScsXG4gICAgICAgIHRpdGxlX3Blcm1pdF9mcm9udDogJ1N1Ym1pdCByZXNpZGVuY2UgcGVybWl0IChmcm9udCknLFxuICAgIH0sXG4gICAgZXJyb3JfdW5zdXBwb3J0ZWRfYnJvd3Nlcjoge1xuICAgICAgICBzdWJ0aXRsZV9hbmRyb2lkOiAnUmVzdGFydCB0aGUgcHJvY2VzcyBvbiB0aGUgbGF0ZXN0IHZlcnNpb24gb2YgR29vZ2xlIENocm9tZScsXG4gICAgICAgIHN1YnRpdGxlX2lvczogJ1Jlc3RhcnQgdGhlIHByb2Nlc3Mgb24gdGhlIGxhdGVzdCB2ZXJzaW9uIG9mIFNhZmFyaScsXG4gICAgICAgIHRpdGxlX2FuZHJvaWQ6ICdVbnN1cHBvcnRlZCBicm93c2VyJyxcbiAgICAgICAgdGl0bGVfaW9zOiAnVW5zdXBwb3J0ZWQgYnJvd3NlcicsXG4gICAgfSxcbiAgICBnZW5lcmljOiB7XG4gICAgICAgIGFjY2Vzc2liaWxpdHk6IHtcbiAgICAgICAgICAgIGNsb3NlX3Nka19zY3JlZW46ICdDbG9zZSBpZGVudGl0eSB2ZXJpZmljYXRpb24gc2NyZWVuJyxcbiAgICAgICAgICAgIGRpc21pc3NfYWxlcnQ6ICdEaXNtaXNzIGFsZXJ0JyxcbiAgICAgICAgfSxcbiAgICAgICAgYmFjazogJ2JhY2snLFxuICAgICAgICBjbG9zZTogJ2Nsb3NlJyxcbiAgICAgICAgZXJyb3JzOiB7XG4gICAgICAgICAgICBpbnRlcnJ1cHRlZF9mbG93X2Vycm9yOiB7XG4gICAgICAgICAgICAgICAgaW5zdHJ1Y3Rpb246ICdSZXN0YXJ0IHByb2Nlc3Mgb24gYSBkaWZmZXJlbnQgZGV2aWNlJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQ2FtZXJhIG5vdCBkZXRlY3RlZCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW52YWxpZF9zaXplOiB7XG4gICAgICAgICAgICAgICAgaW5zdHJ1Y3Rpb246ICdNdXN0IGJlIHVuZGVyIDEwTUIuJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmlsZSBzaXplIGV4Y2VlZGVkLicsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgaW52YWxpZF90eXBlOiB7XG4gICAgICAgICAgICAgICAgaW5zdHJ1Y3Rpb246ICdUcnkgdXNpbmcgYW5vdGhlciBmaWxlIHR5cGUuJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmlsZSBub3QgdXBsb2FkZWQuJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBsYXp5X2xvYWRpbmc6IHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgbG9hZGluZyB0aGUgY29tcG9uZW50JyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBtdWx0aXBsZV9mYWNlczoge1xuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uOiAnT25seSB5b3VyIGZhY2UgY2FuIGJlIGluIHRoZSBzZWxmaWUnLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdNdWx0aXBsZSBmYWNlcyBmb3VuZCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbm9fZmFjZToge1xuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uOiAnWW91ciBmYWNlIGlzIG5lZWRlZCBpbiB0aGUgc2VsZmllJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnTm8gZmFjZSBmb3VuZCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcmVxdWVzdF9lcnJvcjoge1xuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uOiAnUGxlYXNlIHRyeSBhZ2FpbicsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogJ0Nvbm5lY3Rpb24gbG9zdCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc21zX2ZhaWxlZDoge1xuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uOiAnQ29weSB0aGUgbGluayB0byB5b3VyIHBob25lJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIlNvbWV0aGluZydzIGdvbmUgd3JvbmdcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzbXNfb3ZlcnVzZToge1xuICAgICAgICAgICAgICAgIGluc3RydWN0aW9uOiAnQ29weSB0aGUgbGluayB0byB5b3VyIHBob25lJyxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnVG9vIG1hbnkgZmFpbGVkIGF0dGVtcHRzJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB1bnN1cHBvcnRlZF9maWxlOiB7XG4gICAgICAgICAgICAgICAgaW5zdHJ1Y3Rpb246ICdUcnkgdXNpbmcgYSBKUEcgb3IgUE5HIGZpbGUnLFxuICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdGaWxlIHR5cGUgbm90IHN1cHBvcnRlZCcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBsYXp5X2xvYWRfcGxhY2Vob2xkZXI6ICdMb2FkaW5nLi4uJyxcbiAgICAgICAgbG9hZGluZzogJ0xvYWRpbmcnLFxuICAgIH0sXG4gICAgZ2V0X2xpbms6IHtcbiAgICAgICAgYWxlcnRfd3JvbmdfbnVtYmVyOiAnQ2hlY2sgdGhhdCB5b3VyIG51bWJlciBpcyBjb3JyZWN0JyxcbiAgICAgICAgYnV0dG9uX2NvcGllZDogJ0NvcGllZCcsXG4gICAgICAgIGJ1dHRvbl9jb3B5OiAnQ29weScsXG4gICAgICAgIGJ1dHRvbl9zdWJtaXQ6ICdTZW5kIGxpbmsnLFxuICAgICAgICBpbmZvX3FyX2hvdzogJ0hvdyB0byBzY2FuIGEgUVIgY29kZScsXG4gICAgICAgIGluZm9fcXJfaG93X2xpc3RfaXRlbV9jYW1lcmE6ICdQb2ludCB5b3VyIHBob25l4oCZcyBjYW1lcmEgYXQgdGhlIFFSIGNvZGUnLFxuICAgICAgICBpbmZvX3FyX2hvd19saXN0X2l0ZW1fZG93bmxvYWQ6XG4gICAgICAgICAgICAnSWYgaXQgZG9lc27igJl0IHdvcmssIGRvd25sb2FkIGEgUVIgY29kZSBzY2FubmVyIGZyb20gR29vZ2xlIFBsYXkgb3IgdGhlIEFwcCBTdG9yZScsXG4gICAgICAgIGxpbmtfZGl2aWRlcjogJ29yJyxcbiAgICAgICAgbGlua19xcjogJ1NjYW4gUVIgY29kZScsXG4gICAgICAgIGxpbmtfc21zOiAnR2V0IGxpbmsgdmlhIFNNUycsXG4gICAgICAgIGxpbmtfdXJsOiAnQ29weSBsaW5rJyxcbiAgICAgICAgbG9hZGVyX3NlbmRpbmc6ICdTZW5kaW5nJyxcbiAgICAgICAgbnVtYmVyX2ZpZWxkX2lucHV0X3BsYWNlaG9sZGVyOiAnRW50ZXIgbW9iaWxlIG51bWJlcicsXG4gICAgICAgIG51bWJlcl9maWVsZF9sYWJlbDogJ0VudGVyIHlvdXIgbW9iaWxlIG51bWJlcjonLFxuICAgICAgICBzdWJ0aXRsZV9xcjogJ1NjYW4gdGhlIFFSIGNvZGUgd2l0aCB5b3VyIHBob25lJyxcbiAgICAgICAgc3VidGl0bGVfc21zOiAnU2VuZCB0aGlzIG9uZS10aW1lIGxpbmsgdG8geW91ciBwaG9uZScsXG4gICAgICAgIHN1YnRpdGxlX3VybDogJ09wZW4gdGhlIGxpbmsgb24geW91ciBtb2JpbGUnLFxuICAgICAgICB0aXRsZTogJ0dldCB5b3VyIHNlY3VyZSBsaW5rJyxcbiAgICAgICAgdXJsX2ZpZWxkX2xhYmVsOiAnQ29weSB0aGUgbGluayB0byB5b3VyIG1vYmlsZSBicm93c2VyJyxcbiAgICB9LFxuICAgIGxpbmtlZF9jb21wdXRlcjoge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ0NvbnRpbnVlJyxcbiAgICAgICAgaW5mbzogJ01ha2Ugc3VyZcKnJyxcbiAgICAgICAgbGlzdF9pdGVtX2Rlc2t0b3Bfb3BlbjogJzIuIFlvdXIgZGVza3RvcCB3aW5kb3cgc3RheXMgb3BlbicsXG4gICAgICAgIGxpc3RfaXRlbV9zZW50X2J5X3lvdTogJzEuIFRoaXMgbGluayB3YXMgc2VudCBieSB5b3UnLFxuICAgICAgICBzdWJ0aXRsZTogJ0NvbnRpbnVlIHdpdGggdGhlIHZlcmlmaWNhdGlvbicsXG4gICAgICAgIHRpdGxlOiAnTGlua2VkIHRvIHlvdXIgY29tcHV0ZXInLFxuICAgIH0sXG4gICAgbW9iaWxlUGhyYXNlczoge1xuICAgICAgICBwaG90b191cGxvYWQ6IHtcbiAgICAgICAgICAgIGJvZHlfaWRfYmFjazogJ1Rha2UgYSBwaG90byBvZiB0aGUgYmFjayBvZiB5b3VyIGNhcmQnLFxuICAgICAgICAgICAgYm9keV9pZF9mcm9udDogJ1Rha2UgYSBwaG90byBvZiB0aGUgZnJvbnQgb2YgeW91ciBjYXJkJyxcbiAgICAgICAgICAgIGJvZHlfbGljZW5zZV9iYWNrOiAnVGFrZSBhIHBob3RvIG9mIHRoZSBiYWNrIG9mIHlvdXIgbGljZW5zZScsXG4gICAgICAgICAgICBib2R5X2xpY2Vuc2VfZnJvbnQ6ICdUYWtlIGEgcGhvdG8gb2YgdGhlIGZyb250IG9mIHlvdXIgbGljZW5zZScsXG4gICAgICAgICAgICBib2R5X3Bhc3Nwb3J0OiAnVGFrZSBhIHBob3RvIG9mIHlvdXIgcGFzc3BvcnQgcGhvdG8gcGFnZScsXG4gICAgICAgICAgICBib2R5X3NlbGZpZTogJ1Rha2UgYSBzZWxmaWUgc2hvd2luZyB5b3VyIGZhY2UnLFxuICAgICAgICB9LFxuICAgICAgICBzZWxmaWVfY2FwdHVyZToge1xuICAgICAgICAgICAgYWxlcnQ6IHtcbiAgICAgICAgICAgICAgICBjYW1lcmFfaW5hY3RpdmU6IHtcbiAgICAgICAgICAgICAgICAgICAgZGV0YWlsOiAnVGFrZSBhIHBob3RvIHVzaW5nIHRoZSA8ZmFsbGJhY2s+YmFzaWMgY2FtZXJhIG1vZGU8L2ZhbGxiYWNrPiBpbnN0ZWFkJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNhbWVyYV9ub3Rfd29ya2luZzoge1xuICAgICAgICAgICAgICAgICAgICBkZXRhaWw6ICdUYWtlIGEgcGhvdG8gdXNpbmcgdGhlIDxmYWxsYmFjaz5iYXNpYyBjYW1lcmEgbW9kZTwvZmFsbGJhY2s+IGluc3RlYWQnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICB1cGxvYWRfZ3VpZGU6IHtcbiAgICAgICAgICAgIGJ1dHRvbl9wcmltYXJ5OiAnVGFrZSBhIHBob3RvJyxcbiAgICAgICAgICAgIHRpdGxlOiAnUGFzc3BvcnQgcGhvdG8gcGFnZScsXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBvdXRybzoge1xuICAgICAgICBib2R5OiAnVGhhbmsgeW91JyxcbiAgICAgICAgdGl0bGU6ICdWZXJpZmljYXRpb24gY29tcGxldGUnLFxuICAgIH0sXG4gICAgcGVybWlzc2lvbl9yZWNvdmVyeToge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ1JlZnJlc2gnLFxuICAgICAgICBpbmZvOiAnUmVjb3ZlcnknLFxuICAgICAgICBsaXN0X2hlYWRlcl9jYW06ICdGb2xsb3cgdGhlc2Ugc3RlcHMgdG8gcmVjb3ZlciBjYW1lcmEgYWNjZXNzOicsXG4gICAgICAgIGxpc3RfaXRlbV9hY3Rpb25fY2FtOiAnUmVmcmVzaCB0aGlzIHBhZ2UgdG8gcmVzdGFydCB0aGUgaWRlbnRpdHkgdmVyaWZpY2F0aW9uIHByb2Nlc3MnLFxuICAgICAgICBsaXN0X2l0ZW1faG93X3RvX2NhbTogJ0dyYW50IGFjY2VzcyB0byB5b3VyIGNhbWVyYSBmcm9tIHlvdXIgYnJvd3NlciBzZXR0aW5ncycsXG4gICAgICAgIHN1YnRpdGxlX2NhbTogJ1JlY292ZXIgY2FtZXJhIGFjY2VzcyB0byBjb250aW51ZSBmYWNlIHZlcmlmaWNhdGlvbicsXG4gICAgICAgIHRpdGxlX2NhbTogJ0NhbWVyYSBhY2Nlc3MgaXMgZGVuaWVkJyxcbiAgICB9LFxuICAgIHBlcm1pc3Npb246IHtcbiAgICAgICAgYm9keV9jYW06ICdXZSBjYW5ub3QgdmVyaWZ5IHlvdSB3aXRob3V0IHVzaW5nIHlvdXIgY2FtZXJhJyxcbiAgICAgICAgYnV0dG9uX3ByaW1hcnlfY2FtOiAnRW5hYmxlIGNhbWVyYScsXG4gICAgICAgIHN1YnRpdGxlX2NhbTogJ1doZW4gcHJvbXB0ZWQsIHlvdSBtdXN0IGVuYWJsZSBjYW1lcmEgYWNjZXNzIHRvIGNvbnRpbnVlJyxcbiAgICAgICAgdGl0bGVfY2FtOiAnQWxsb3cgY2FtZXJhIGFjY2VzcycsXG4gICAgfSxcbiAgICBwaG90b191cGxvYWQ6IHtcbiAgICAgICAgYm9keV9iYW5rX3N0YXRlbWVudDogJ1Byb3ZpZGUgdGhlIHdob2xlIGRvY3VtZW50IHBhZ2UgZm9yIGJlc3QgcmVzdWx0cycsXG4gICAgICAgIGJvZHlfYmVuZWZpdHNfbGV0dGVyOiAnUHJvdmlkZSB0aGUgd2hvbGUgZG9jdW1lbnQgcGFnZSBmb3IgYmVzdCByZXN1bHRzJyxcbiAgICAgICAgYm9keV9iaWxsOiAnUHJvdmlkZSB0aGUgd2hvbGUgZG9jdW1lbnQgcGFnZSBmb3IgYmVzdCByZXN1bHRzJyxcbiAgICAgICAgYm9keV9nb3Zlcm5tZW50X2xldHRlcjogJ1Byb3ZpZGUgdGhlIHdob2xlIGRvY3VtZW50IHBhZ2UgZm9yIGJlc3QgcmVzdWx0cycsXG4gICAgICAgIGJvZHlfaWRfYmFjazogJ1VwbG9hZCBiYWNrIG9mIGNhcmQgZnJvbSB5b3VyIGNvbXB1dGVyJyxcbiAgICAgICAgYm9keV9pZF9mcm9udDogJ1VwbG9hZCBmcm9udCBvZiBjYXJkIGZyb20geW91ciBjb21wdXRlcicsXG4gICAgICAgIGJvZHlfbGljZW5zZV9iYWNrOiAnVXBsb2FkIGJhY2sgb2YgbGljZW5zZSBmcm9tIHlvdXIgY29tcHV0ZXInLFxuICAgICAgICBib2R5X2xpY2Vuc2VfZnJvbnQ6ICdVcGxvYWQgZnJvbnQgb2YgbGljZW5zZSBmcm9tIHlvdXIgY29tcHV0ZXInLFxuICAgICAgICBib2R5X3Bhc3Nwb3J0OiAnVXBsb2FkIHBhc3Nwb3J0IHBob3RvIHBhZ2UgZnJvbSB5b3VyIGNvbXB1dGVyJyxcbiAgICAgICAgYm9keV9zZWxmaWU6ICdVcGxvYWQgYSBzZWxmaWUgZnJvbSB5b3VyIGNvbXB1dGVyJyxcbiAgICAgICAgYm9keV90YXhfbGV0dGVyOiAnUHJvdmlkZSB0aGUgd2hvbGUgZG9jdW1lbnQgcGFnZSBmb3IgYmVzdCByZXN1bHRzJyxcbiAgICAgICAgYnV0dG9uX3Rha2VfcGhvdG86ICdUYWtlIHBob3RvJyxcbiAgICAgICAgYnV0dG9uX3VwbG9hZDogJ1VwbG9hZCcsXG4gICAgICAgIHRpdGxlX3NlbGZpZTogJ1NlbGZpZScsXG4gICAgfSxcbiAgICBzZWxmaWVfY2FwdHVyZToge1xuICAgICAgICBhbGVydDoge1xuICAgICAgICAgICAgY2FtZXJhX2luYWN0aXZlOiB7XG4gICAgICAgICAgICAgICAgZGV0YWlsOiAnQ2hlY2sgdGhhdCBpdCBpcyBjb25uZWN0ZWQgYW5kIGZ1bmN0aW9uYWwuIFlvdSBjYW4gYWxzbyA8ZmFsbGJhY2s+Y29udGludWUgdmVyaWZpY2F0aW9uIG9uIHlvdXIgcGhvbmU8L2ZhbGxiYWNrPicsXG4gICAgICAgICAgICAgICAgZGV0YWlsX25vX2ZhbGxiYWNrOiAnTWFrZSBzdXJlIHlvdXIgZGV2aWNlIGhhcyBhIHdvcmtpbmcgY2FtZXJhJyxcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0NhbWVyYSBub3Qgd29ya2luZz8nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNhbWVyYV9ub3Rfd29ya2luZzoge1xuICAgICAgICAgICAgICAgIGRldGFpbDogJ0l0IG1heSBiZSBkaXNjb25uZWN0ZWQuIDxmYWxsYmFjaz5UcnkgdXNpbmcgeW91ciBwaG9uZSBpbnN0ZWFkPC9mYWxsYmFjaz4uJyxcbiAgICAgICAgICAgICAgICBkZXRhaWxfbm9fZmFsbGJhY2s6IFwiTWFrZSBzdXJlIHlvdXIgZGV2aWNlJ3MgY2FtZXJhIHdvcmtzXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6ICdDYW1lcmEgbm90IHdvcmtpbmcnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRpbWVvdXQ6IHtcbiAgICAgICAgICAgICAgICBkZXRhaWw6IFwiUmVtZW1iZXIgdG8gcHJlc3Mgc3RvcCB3aGVuIHlvdSdyZSBkb25lLiA8ZmFsbGJhY2s+UmVkbyB2aWRlbyBhY3Rpb25zPC9mYWxsYmFjaz5cIixcbiAgICAgICAgICAgICAgICB0aXRsZTogJ0xvb2tzIGxpa2UgeW91IHRvb2sgdG9vIGxvbmcnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgYnV0dG9uX2FjY2Vzc2liaWxpdHk6ICdUYWtlIGEgcGhvdG8nLFxuICAgICAgICBmcmFtZV9hY2Nlc3NpYmlsaXR5OiAnVmlldyBmcm9tIGNhbWVyYScsXG4gICAgICAgIHRpdGxlOiAnVGFrZSBhIHNlbGZpZScsXG4gICAgfSxcbiAgICBzZWxmaWVfY29uZmlybWF0aW9uOiB7XG4gICAgICAgIGltYWdlX2FjY2Vzc2liaWxpdHk6ICdQaG90byBvZiB5b3VyIGZhY2UnLFxuICAgICAgICBzdWJ0aXRsZTogJ01ha2Ugc3VyZSB5b3VyIHNlbGZpZSBjbGVhcmx5IHNob3dzIHlvdXIgZmFjZScsXG4gICAgICAgIHRpdGxlOiAnQ2hlY2sgc2VsZmllJyxcbiAgICB9LFxuICAgIHNlbGZpZV9pbnRybzoge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ0NvbnRpbnVlJyxcbiAgICAgICAgbGlzdF9hY2Nlc3NpYmlsaXR5OiAnVGlwcyB0byB0YWtlIGEgZ29vZCBzZWxmaWUnLFxuICAgICAgICBsaXN0X2l0ZW1fZmFjZV9mb3J3YXJkOiAnRmFjZSBmb3J3YXJkIGFuZCBtYWtlIHN1cmUgeW91ciBleWVzIGFyZSBjbGVhcmx5IHZpc2libGUnLFxuICAgICAgICBsaXN0X2l0ZW1fbm9fZ2xhc3NlczogJ1JlbW92ZSB5b3VyIGdsYXNzZXMsIGlmIG5lY2Vzc2FyeScsXG4gICAgICAgIHN1YnRpdGxlOiBcIldlJ2xsIGNvbXBhcmUgaXQgd2l0aCB5b3VyIGRvY3VtZW50XCIsXG4gICAgICAgIHRpdGxlOiAnVGFrZSBhIHNlbGZpZScsXG4gICAgfSxcbiAgICBzbXNfc2VudDoge1xuICAgICAgICBpbmZvOiAnVGlwcycsXG4gICAgICAgIGluZm9fbGlua19leHBpcmU6ICdZb3VyIGxpbmsgd2lsbCBleHBpcmUgaW4gb25lIGhvdXInLFxuICAgICAgICBpbmZvX2xpbmtfd2luZG93OiAnS2VlcCB0aGlzIHdpbmRvdyBvcGVuIHdoaWxlIHVzaW5nIHlvdXIgbW9iaWxlJyxcbiAgICAgICAgbGluazogJ1Jlc2VuZCBsaW5rJyxcbiAgICAgICAgc3VidGl0bGU6IFwiV2UndmUgc2VudCBhIHNlY3VyZSBsaW5rIHRvICV7bnVtYmVyfVwiLFxuICAgICAgICBzdWJ0aXRsZV9taW51dGVzOiAnSXQgbWF5IHRha2UgYSBmZXcgbWludXRlcyB0byBhcnJpdmUnLFxuICAgICAgICB0aXRsZTogJ0NoZWNrIHlvdXIgbW9iaWxlJyxcbiAgICB9LFxuICAgIHN3aXRjaF9waG9uZToge1xuICAgICAgICBpbmZvOiAnVGlwcycsXG4gICAgICAgIGluZm9fbGlua19leHBpcmU6ICdZb3VyIG1vYmlsZSBsaW5rIHdpbGwgZXhwaXJlIGluIG9uZSBob3VyJyxcbiAgICAgICAgaW5mb19saW5rX3JlZnJlc2g6IFwiRG9uJ3QgcmVmcmVzaCB0aGlzIHBhZ2VcIixcbiAgICAgICAgaW5mb19saW5rX3dpbmRvdzogJ0tlZXAgdGhpcyB3aW5kb3cgb3BlbiB3aGlsZSB1c2luZyB5b3VyIG1vYmlsZScsXG4gICAgICAgIGxpbms6ICdDYW5jZWwnLFxuICAgICAgICBzdWJ0aXRsZTogXCJPbmNlIHlvdSd2ZSBmaW5pc2hlZCB3ZSdsbCB0YWtlIHlvdSB0byB0aGUgbmV4dCBzdGVwXCIsXG4gICAgICAgIHRpdGxlOiAnQ29ubmVjdGVkIHRvIHlvdXIgbW9iaWxlJyxcbiAgICB9LFxuICAgIHVwbG9hZF9ndWlkZToge1xuICAgICAgICBidXR0b25fcHJpbWFyeTogJ1VwbG9hZCBwaG90bycsXG4gICAgICAgIGltYWdlX2RldGFpbF9ibHVyX2FsdDogJ0V4YW1wbGUgb2YgYSBibHVycnkgZG9jdW1lbnQnLFxuICAgICAgICBpbWFnZV9kZXRhaWxfYmx1cl9sYWJlbDogJ0FsbCBkZXRhaWxzIG11c3QgYmUgY2xlYXIg4oCUIG5vdGhpbmcgYmx1cnJ5JyxcbiAgICAgICAgaW1hZ2VfZGV0YWlsX2N1dG9mZl9hbHQ6ICdFeGFtcGxlIG9mIGEgY3V0LW9mZiBkb2N1bWVudCcsXG4gICAgICAgIGltYWdlX2RldGFpbF9jdXRvZmZfbGFiZWw6ICdTaG93IGFsbCBkZXRhaWxzIOKAlCBpbmNsdWRpbmcgdGhlIGJvdHRvbSAyIGxpbmVzJyxcbiAgICAgICAgaW1hZ2VfZGV0YWlsX2dsYXJlX2FsdDogJ0V4YW1wbGUgb2YgYSBkb2N1bWVudCB3aXRoIGdsYXJlJyxcbiAgICAgICAgaW1hZ2VfZGV0YWlsX2dsYXJlX2xhYmVsOiAnTW92ZSBhd2F5IGZyb20gZGlyZWN0IGxpZ2h0IOKAlCBubyBnbGFyZScsXG4gICAgICAgIGltYWdlX2RldGFpbF9nb29kX2FsdDogJ0RvY3VtZW50IGV4YW1wbGUnLFxuICAgICAgICBpbWFnZV9kZXRhaWxfZ29vZF9sYWJlbDogJ1RoZSBwaG90byBzaG91bGQgY2xlYXJseSBzaG93IHlvdXIgZG9jdW1lbnQnLFxuICAgICAgICBzdWJ0aXRsZTogJ1NjYW5zIGFuZCBwaG90b2NvcGllcyBhcmUgbm90IGFjY2VwdGVkJyxcbiAgICAgICAgdGl0bGU6ICdVcGxvYWQgcGFzc3BvcnQgcGhvdG8gcGFnZScsXG4gICAgfSxcbn07XG4iLCJleHBvcnQgKiBmcm9tICcuL2NvdW50cmllcyc7XG5leHBvcnQgKiBmcm9tICcuL29uZmlkbyc7XG4iLCJpbXBvcnQgeyBBTFBIQV8zX1RPX0FMUEhBXzIgfSBmcm9tICcuLi9jb25zdGFudHMnO1xuaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4uL3VzZVF1ZXJ5JztcbmltcG9ydCB1c2VTZXR0aW5ncyBmcm9tICcuL3VzZVNldHRpbmdzJztcblxuLy8gVE9ETzogTWVyZ2Ugc2VydmljZSB0b2tlbiBob29rcyBpbnRvIGEgc2luZ2xlIHNlcnZpY2UgdG9rZW4gaG9vayBjYWxsXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IGdldCBTZXJ2aWNlIFRva2VuIGZvciBPbmZpZG8uICovXG5jb25zdCB1c2VPbmZpZG9TZXJ2aWNlVG9rZW4gPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBzZXR0aW5ncywgaXNTdWNjZXNzIH0gPSB1c2VTZXR0aW5ncygpO1xuICAgIGNvbnN0IHsgZGF0YTogb25maWRvX3Rva2VuX2RhdGEsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KCdzZXJ2aWNlX3Rva2VuJywge1xuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICBzZXJ2aWNlOiAnb25maWRvJyxcbiAgICAgICAgICAgIGNvdW50cnk6IHNldHRpbmdzPy5jb3VudHJ5X2NvZGVcbiAgICAgICAgICAgICAgICA/IHNldHRpbmdzPy5jb3VudHJ5X2NvZGU/Lmxlbmd0aCA+PSAzXG4gICAgICAgICAgICAgICAgICAgID8gQUxQSEFfM19UT19BTFBIQV8yW3NldHRpbmdzPy5jb3VudHJ5X2NvZGVdXG4gICAgICAgICAgICAgICAgICAgIDogc2V0dGluZ3M/LmNvdW50cnlfY29kZVxuICAgICAgICAgICAgICAgIDogJycsXG4gICAgICAgIH0sXG4gICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgIGVuYWJsZWQ6IGlzU3VjY2VzcyxcbiAgICAgICAgfSxcbiAgICB9KTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiByZXR1cm4gdGhlIG9uZmlkbyBhY2NvdW50IHRva2VuICovXG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIC4uLm9uZmlkb190b2tlbl9kYXRhPy5zZXJ2aWNlX3Rva2VuPy5vbmZpZG8sXG4gICAgICAgIH0sXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZU9uZmlkb1NlcnZpY2VUb2tlbjtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gc2VuZCBub3RpZmljYXRpb24gZXZlbnQgdG8gYmFja2VuZCBhYm91dCBPbmZpZG8gc3VjY2Vzc2Z1bCBkb2N1bWVudHMgdXBsb2FkZWQgKi9cbmNvbnN0IHVzZU9uZmlkb05vdGlmaWNhdGlvbkV2ZW50ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgbXV0YXRlOiBfbXV0YXRlLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbignbm90aWZpY2F0aW9uX2V2ZW50Jyk7XG5cbiAgICBjb25zdCBtdXRhdGUgPSB1c2VDYWxsYmFjayhcbiAgICAgICAgKGRvY3VtZW50SWRzOiBzdHJpbmdbXSkgPT5cbiAgICAgICAgICAgIF9tdXRhdGUoe1xuICAgICAgICAgICAgICAgIHBheWxvYWQ6IHtcbiAgICAgICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICdhdXRoZW50aWNhdGlvbicsXG4gICAgICAgICAgICAgICAgICAgIGV2ZW50OiAncG9pX2RvY3VtZW50c191cGxvYWRlZCcsXG4gICAgICAgICAgICAgICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50czogZG9jdW1lbnRJZHMsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICBbX211dGF0ZV1cbiAgICApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgbXV0YXRlLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VPbmZpZG9Ob3RpZmljYXRpb25FdmVudDtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VSZWYsIHVzZU1lbW8sIHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZUlkIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU9uZmlkb1NlcnZpY2VUb2tlbiBmcm9tICcuL3VzZU9uZmlkb1NlcnZpY2VUb2tlbic7XG5pbXBvcnQgeyBBTFBIQV8yX1RPX0FMUEhBXzMsIE9ORklET19QSFJBU0VTIH0gZnJvbSAnLi4vY29uc3RhbnRzJztcbmltcG9ydCB1c2VTZXR0aW5ncyBmcm9tICcuL3VzZVNldHRpbmdzJztcbmltcG9ydCB1c2VSZXNpZGVuY2VMaXN0IGZyb20gJy4vdXNlUmVzaWRlbmNlTGlzdCc7XG5pbXBvcnQgdHlwZSB7IFNka0hhbmRsZSwgU2RrUmVzcG9uc2UgfSBmcm9tICcuLi90eXBlcy9vbmZpZG8nO1xuaW1wb3J0IHVzZU9uZmlkb05vdGlmaWNhdGlvbkV2ZW50IGZyb20gJy4vdXNlT25maWRvTm90aWZpY2F0aW9uRXZlbnQnO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGluaXRpYWxpemUgT25maWRvIFNESy5cbiAqIFRvIGluaXRpYWxpemUgT25maWRvLCBlbnN1cmUgdGhhdCBhbiBlbXB0eSBjb250YWluZXIgaXMgcHJlc2VudC5cbiAqIENhbGwgdGhlIGhvb2sgYW5kIHVzZSBgb25maWRvQ29udGFpbmVySWRgIHRvIG1hcmsgdGhlIGVtcHR5IGNvbnRhaW5lciB3aGVyZSB0aGUgT25maWRvIFVJIGlzIHRvIGJlIG1vdW50ZWQuXG4gKiBGb3IgZXhhbXBsZTpcbiAqIGBgYFxuICogY29uc3QgeyBkYXRhOiB7IG9uZmlkb0NvbnRhaW5lcklkIH0gfSA9IHVzZU9uZmlkbygpXG4gKiAuLi5cbiAqIHJldHVybiAoXG4gKiAgICA8PlxuICogICAgICAgLi4uXG4gKiAgICAgICA8ZGl2IGlkPXtvbmZpZG9Db250YWluZXJJZH0+PC9kaXY+XG4gKiAgICAgICAuLi5cbiAqICAgIDwvPlxuICogKVxuICogYGBgXG4gKi9cbmNvbnN0IHVzZU9uZmlkbyA9ICgpID0+IHtcbiAgICAvLyB1c2VkIHRvIGNoZWNrIHRoYXQgd2Ugb25seSBpbml0aWFsaXplIGFuZCBsb2FkIHRoZSBvbmZpZG8gc2NyaXB0IG9uY2VcbiAgICBjb25zdCBbaXNPbmZpZG9Mb2FkZWQsIHNldElzT25maWRvTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICAvLyB1c2UgdG8gY2hlY2sgdGhhdCB3ZSBkbyBub3QgcmUtYXR0ZW1wdCB0byByZWxvYWQgdGhlIG9uZmlkbyBzY3JpcHQgd2hpbGUgaXRzIHN0aWxsIGxvYWRpbmdcbiAgICBjb25zdCBbaXNPbmZpZG9Mb2FkaW5nLCBzZXRJc09uZmlkb0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFtoYXNTdWJtaXR0ZWQsIHNldEhhc1N1Ym1pdHRlZF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgICAvKipcbiAgICAgKiBBIHJlZmVyZW5jZSB0byB0aGUgT25maWRvIFNES1xuICAgICAqL1xuICAgIGNvbnN0IG9uZmlkb1JlZiA9IHVzZVJlZjxTZGtIYW5kbGUgfCBudWxsPihudWxsKTtcbiAgICAvKipcbiAgICAgKiBBIGdlbmVyYXRlZCBJRCB3aGljaCBzaG91bGQgYmUgYXNzaWduZWQgdG8gYSBjb250YWluZXIgd2hlcmUgdGhlIE9uZmlkbyBVSSBpcyB0byBiZSBtb3VudGVkLlxuICAgICAqIEZvciBleGFtcGxlOlxuICAgICAqIGBgYFxuICAgICAqIGNvbnN0IHsgZGF0YTogeyBvbmZpZG9Db250YWluZXJJZCB9IH0gPSB1c2VPbmZpZG8oKVxuICAgICAqIC4uLlxuICAgICAqIHJldHVybiAoXG4gICAgICogICAgPD5cbiAgICAgKiAgICAgICAuLi5cbiAgICAgKiAgICAgICA8ZGl2IGlkPXtvbmZpZG9Db250YWluZXJJZH0+PC9kaXY+XG4gICAgICogICAgICAgLi4uXG4gICAgICogICAgPC8+XG4gICAgICogKVxuICAgICAqIGBgYFxuICAgICAqL1xuICAgIGNvbnN0IG9uZmlkb0NvbnRhaW5lcklkID0gdXNlTWVtbygoKSA9PiB1dWlkdjQoKSwgW10pO1xuXG4gICAgLy8gc2V0dGluZ3MgZm9yIHJldHJpZXZpbmcgY291bnRyeSBjb2RlXG4gICAgY29uc3QgeyBkYXRhOiBzZXR0aW5ncyB9ID0gdXNlU2V0dGluZ3MoKTtcbiAgICAvLyByZXNpZGVuY2UgbGlzdCBmb3IgcmV0cmlldmluZyBzdXBwb3J0ZWQgZG9jdW1lbnRzIGZvciBvbmZpZG8gZm9yIHRoZSB1c2VyJ3MgY291bnRyeVxuICAgIGNvbnN0IHsgZGF0YTogcmVzaWRlbmNlTGlzdCB9ID0gdXNlUmVzaWRlbmNlTGlzdCgpO1xuICAgIC8vIG9uZmlkbyBzZXJ2aWNlIHRva2VuIHRvIGJlIHBhc3NlZCBpbiBPbmZpZG8gU0RLXG4gICAgY29uc3Qge1xuICAgICAgICBkYXRhOiB7IHRva2VuIH0sXG4gICAgfSA9IHVzZU9uZmlkb1NlcnZpY2VUb2tlbigpO1xuICAgIC8vIG5vdGlmaWNhdGlvbiBldmVudCBmb3Igb25maWRvIG9uY2UgdXNlciBzdWJtaXRzIGRvY3VtZW50c1xuICAgIGNvbnN0IHsgbXV0YXRlOiBzdWJtaXREb2N1bWVudHMgfSA9IHVzZU9uZmlkb05vdGlmaWNhdGlvbkV2ZW50KCk7XG5cbiAgICBjb25zdCBjb3VudHJ5Q29kZSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICByZXR1cm4gc2V0dGluZ3M/LmNvdW50cnlfY29kZSB8fCAnJztcbiAgICB9LCBbc2V0dGluZ3M/LmNvdW50cnlfY29kZV0pO1xuXG4gICAgY29uc3Qgc3VwcG9ydGVkRG9jdW1lbnRzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmIChjb3VudHJ5Q29kZSAmJiByZXNpZGVuY2VMaXN0Lmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3Qgb25maWRvUmVzaWRlbmNlID0gcmVzaWRlbmNlTGlzdC5maW5kKHJlc2lkZW5jZSA9PiByZXNpZGVuY2U/LnZhbHVlID09PSBjb3VudHJ5Q29kZSk/LmlkZW50aXR5XG4gICAgICAgICAgICAgICAgPy5zZXJ2aWNlcz8ub25maWRvO1xuXG4gICAgICAgICAgICBpZiAob25maWRvUmVzaWRlbmNlICYmIG9uZmlkb1Jlc2lkZW5jZS5pc19jb3VudHJ5X3N1cHBvcnRlZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3Qua2V5cyhvbmZpZG9SZXNpZGVuY2UuZG9jdW1lbnRzX3N1cHBvcnRlZCB8fCB7fSkubWFwKFxuICAgICAgICAgICAgICAgICAgICAoZG9jdW1lbnQ6IHN0cmluZykgPT4gb25maWRvUmVzaWRlbmNlLmRvY3VtZW50c19zdXBwb3J0ZWQ/Lltkb2N1bWVudF0uZGlzcGxheV9uYW1lXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW107XG4gICAgfSwgW3Jlc2lkZW5jZUxpc3QsIGNvdW50cnlDb2RlXSk7XG5cbiAgICBjb25zdCBvbkNvbXBsZXRlID0gdXNlQ2FsbGJhY2soXG4gICAgICAgIChkYXRhOiBPbWl0PFNka1Jlc3BvbnNlLCAnZGF0YSc+ICYgeyBkYXRhPzogeyBpZD86IHN0cmluZyB9IH0pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50X2lkcyA9IE9iamVjdC5rZXlzKGRhdGEpLm1hcChrZXkgPT4gZGF0YVtrZXkgYXMga2V5b2YgU2RrUmVzcG9uc2VdPy5pZCB8fCAnJyk7XG4gICAgICAgICAgICBzdWJtaXREb2N1bWVudHMoZG9jdW1lbnRfaWRzKTtcbiAgICAgICAgICAgIHNldEhhc1N1Ym1pdHRlZCh0cnVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgW3N1Ym1pdERvY3VtZW50c11cbiAgICApO1xuXG4gICAgY29uc3QgbG9hZE9uZmlkb1Nka1NjcmlwdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qgb25maWRvU2NyaXB0Tm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdvbmZpZG9fc2RrJyk7XG4gICAgICAgIC8vIGNoZWNrIGlmIHRoZSBvbmZpZG8gc2RrIHNjcmlwdCBoYXMgYmVlbiBsb2FkZWQsIGFuZCBpZiBpdHMgc3RpbGwgbG9hZGluZyB0aGUgb25maWRvIHNjcmlwdCwgZG9uJ3QgcmUtYXR0ZW1wdCB0byBsb2FkIHRoZSBzY3JpcHQgYWdhaW5cbiAgICAgICAgaWYgKCFvbmZpZG9TY3JpcHROb2RlIHx8ICFpc09uZmlkb0xvYWRpbmcpIHtcbiAgICAgICAgICAgIHNldElzT25maWRvTG9hZGluZyh0cnVlKTtcbiAgICAgICAgICAgIGNvbnN0IHNjcmlwdE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgICAgICAgIGNvbnN0IGxpbmtOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpO1xuXG4gICAgICAgICAgICBzY3JpcHROb2RlLmlkID0gJ29uZmlkb19zZGsnO1xuICAgICAgICAgICAgc2NyaXB0Tm9kZS5zcmMgPSAnaHR0cHM6Ly9hc3NldHMub25maWRvLmNvbS93ZWItc2RrLXJlbGVhc2VzL2xhdGVzdC9vbmZpZG8ubWluLmpzJztcbiAgICAgICAgICAgIGxpbmtOb2RlLmhyZWYgPSAnaHR0cHM6Ly9hc3NldHMub25maWRvLmNvbS93ZWItc2RrLXJlbGVhc2VzL2xhdGVzdC9zdHlsZS5jc3MnO1xuICAgICAgICAgICAgbGlua05vZGUucmVsID0gJ3N0eWxlc2hlZXQnO1xuXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHNjcmlwdE5vZGUpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChsaW5rTm9kZSk7XG5cbiAgICAgICAgICAgIHNjcmlwdE5vZGUuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHtcbiAgICAgICAgICAgICAgICBzZXRJc09uZmlkb0xvYWRpbmcoZmFsc2UpO1xuICAgICAgICAgICAgICAgIHNldElzT25maWRvTG9hZGVkKHRydWUpO1xuICAgICAgICAgICAgICAgIGluaXRPbmZpZG8oKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaW5pdE9uZmlkbygpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIGNvbnN0IGluaXRPbmZpZG8gPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGkxOE5MYW5ndWFnZSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnaTE4bl9sYW5ndWFnZScpPy50b0xvd2VyQ2FzZSgpIHx8ICdlbic7XG4gICAgICAgIGNvbnN0IG9uZmlkb0NvdW50cnlDb2RlID1cbiAgICAgICAgICAgIGNvdW50cnlDb2RlLmxlbmd0aCAhPT0gMyA/IEFMUEhBXzJfVE9fQUxQSEFfM1tjb3VudHJ5Q29kZS50b1VwcGVyQ2FzZSgpXSA6IHNldHRpbmdzPy5jb3VudHJ5X2NvZGU7XG5cbiAgICAgICAgb25maWRvUmVmLmN1cnJlbnQgPSBhd2FpdCB3aW5kb3cuT25maWRvLmluaXQoe1xuICAgICAgICAgICAgY29udGFpbmVySWQ6IG9uZmlkb0NvbnRhaW5lcklkLFxuICAgICAgICAgICAgbGFuZ3VhZ2U6IHtcbiAgICAgICAgICAgICAgICBsb2NhbGU6IGkxOE5MYW5ndWFnZSxcbiAgICAgICAgICAgICAgICBwaHJhc2VzOiBPTkZJRE9fUEhSQVNFUyxcbiAgICAgICAgICAgICAgICBtb2JpbGVQaHJhc2VzOiBPTkZJRE9fUEhSQVNFUyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0b2tlbixcbiAgICAgICAgICAgIHVzZU1vZGFsOiBmYWxzZSxcbiAgICAgICAgICAgIHVzZU1lbW9yeUhpc3Rvcnk6IHRydWUsXG4gICAgICAgICAgICBvbkNvbXBsZXRlLFxuICAgICAgICAgICAgc3RlcHM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6ICdkb2N1bWVudCcsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvY3VtZW50VHlwZXM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXNzcG9ydDogc3VwcG9ydGVkRG9jdW1lbnRzLnNvbWUoZG9jID0+IC9QYXNzcG9ydC9nLnRlc3QoZG9jIHx8ICcnKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHJpdmluZ19saWNlbmNlOiBzdXBwb3J0ZWREb2N1bWVudHMuc29tZShkb2MgPT4gL0RyaXZpbmcgTGljZW5jZS9nLnRlc3QoZG9jIHx8ICcnKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvdW50cnk6IG9uZmlkb0NvdW50cnlDb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYXRpb25hbF9pZGVudGl0eV9jYXJkOiBzdXBwb3J0ZWREb2N1bWVudHMuc29tZShkb2MgPT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgL05hdGlvbmFsIElkZW50aXR5IENhcmQvZy50ZXN0KGRvYyB8fCAnJylcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb3VudHJ5OiBvbmZpZG9Db3VudHJ5Q29kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgaGlkZUNvdW50cnlTZWxlY3Rpb246IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAnZmFjZScsXG4gICAgICAgICAgICBdLFxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKHRva2VuICYmIHN1cHBvcnRlZERvY3VtZW50cy5sZW5ndGggJiYgIWlzT25maWRvTG9hZGVkICYmIGNvdW50cnlDb2RlKSB7XG4gICAgICAgICAgICBsb2FkT25maWRvU2RrU2NyaXB0KCk7XG4gICAgICAgIH1cbiAgICB9LCBbdG9rZW4sIHN1cHBvcnRlZERvY3VtZW50cywgY291bnRyeUNvZGVdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgIG9uZmlkb1JlZixcbiAgICAgICAgICAgIG9uZmlkb0NvbnRhaW5lcklkLFxuICAgICAgICAgICAgaGFzU3VibWl0dGVkLFxuICAgICAgICB9LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VPbmZpZG87XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5cbnR5cGUgVFBheWxvYWQgPSBQYXJhbWV0ZXJzPFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCd0cmFkaW5nX3BsYXRmb3JtX2RlcG9zaXQnPj5bJ211dGF0ZSddPlswXVsncGF5bG9hZCddO1xuXG4vKiogQSBjdXN0b20gaG9vayBmb3IgdG9wLXVwIG9mIE90aGVyIENGRCBBY2NvdW50cyAqL1xuY29uc3QgdXNlT3RoZXJDRkRQbGF0Zm9ybXNEZXBvc2l0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgbXV0YXRlOiBfbXV0YXRlLCBtdXRhdGVBc3luYzogX211dGF0ZUFzeW5jLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbigndHJhZGluZ19wbGF0Zm9ybV9kZXBvc2l0Jyk7XG5cbiAgICBjb25zdCBtdXRhdGUgPSB1c2VDYWxsYmFjaygocGF5bG9hZDogVFBheWxvYWQpID0+IF9tdXRhdGUoeyBwYXlsb2FkIH0pLCBbX211dGF0ZV0pO1xuICAgIGNvbnN0IG11dGF0ZUFzeW5jID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlQXN5bmMoeyBwYXlsb2FkIH0pLCBbX211dGF0ZUFzeW5jXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIG11dGF0aW9uIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBhIHBheWxvYWQgYW5kIHNlbmRzIGl0IHRvIHRoZSBzZXJ2ZXIgKi9cbiAgICAgICAgbXV0YXRlLFxuICAgICAgICBtdXRhdGVBc3luYyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlT3RoZXJDRkRQbGF0Zm9ybXNEZXBvc2l0O1xuIiwiaW1wb3J0IHsgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VBdXRoZW50aWNhdGlvbiBmcm9tICcuL3VzZUF1dGhlbnRpY2F0aW9uJztcblxuLyoqIEEgY3VzdG9tIGhvb2sgdG8gZ2V0IHRoZSBwcm9vZiBvZiBhZGRyZXNzIChwb2EpIHZlcmlmaWNhdGlvbiBpbmZvIG9mIHRoZSBjdXJyZW50IHVzZXIgICovXG5jb25zdCB1c2VQT0EgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhdXRoZW50aWNhdGlvbl9kYXRhLCAuLi5yZXN0IH0gPSB1c2VBdXRoZW50aWNhdGlvbigpO1xuXG4gICAgY29uc3QgbW9kaWZpZWRfYXV0aGVudGljYXRpb25fZGF0YSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIWF1dGhlbnRpY2F0aW9uX2RhdGE/LmRvY3VtZW50KSByZXR1cm47XG5cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLmF1dGhlbnRpY2F0aW9uX2RhdGEuZG9jdW1lbnQsXG4gICAgICAgICAgICBoYXNfYXR0ZW1wdGVkX3BvYTogYXV0aGVudGljYXRpb25fZGF0YT8uZG9jdW1lbnQuc3RhdHVzICE9PSAnbm9uZScsXG4gICAgICAgICAgICBpc19wZW5kaW5nOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5kb2N1bWVudC5zdGF0dXMgPT09ICdwZW5kaW5nJyxcbiAgICAgICAgICAgIGlzX3JlamVjdGVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5kb2N1bWVudC5zdGF0dXMgPT09ICdyZWplY3RlZCcsXG4gICAgICAgICAgICBpc19leHBpcmVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5kb2N1bWVudC5zdGF0dXMgPT09ICdleHBpcmVkJyxcbiAgICAgICAgICAgIGlzX3N1c3BlY3RlZDogYXV0aGVudGljYXRpb25fZGF0YT8uZG9jdW1lbnQuc3RhdHVzID09PSAnc3VzcGVjdGVkJyxcbiAgICAgICAgICAgIGlzX3ZlcmlmaWVkOiBhdXRoZW50aWNhdGlvbl9kYXRhPy5kb2N1bWVudC5zdGF0dXMgPT09ICd2ZXJpZmllZCcsXG4gICAgICAgICAgICBpc19uZWVkX3N1Ym1pc3Npb246ICFbJ3BlbmRpbmcnLCAndmVyaWZpZWQnXS5pbmNsdWRlcyhhdXRoZW50aWNhdGlvbl9kYXRhPy5kb2N1bWVudC5zdGF0dXMgfHwgJycpLFxuICAgICAgICB9O1xuICAgIH0sIFthdXRoZW50aWNhdGlvbl9kYXRhXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9hdXRoZW50aWNhdGlvbl9kYXRhLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VQT0E7XG4iLCJpbXBvcnQgeyB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU1UNUFjY291bnRzTGlzdCBmcm9tICcuL3VzZU1UNUFjY291bnRzTGlzdCc7XG5pbXBvcnQgdXNlQXZhaWxhYmxlTVQ1QWNjb3VudHMgZnJvbSAnLi91c2VBdmFpbGFibGVNVDVBY2NvdW50cyc7XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgc29ydGVkIGFkZGVkIGFuZCBub24tYWRkZWQgTVQ1IGFjY291bnRzLiAqL1xuY29uc3QgdXNlU29ydGVkTVQ1QWNjb3VudHMgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBkYXRhOiBhbGxfYXZhaWxhYmxlX210NV9hY2NvdW50cyB9ID0gdXNlQXZhaWxhYmxlTVQ1QWNjb3VudHMoKTtcbiAgICBjb25zdCB7IGRhdGE6IG10NV9hY2NvdW50cywgLi4ucmVzdCB9ID0gdXNlTVQ1QWNjb3VudHNMaXN0KCk7XG5cbiAgICBjb25zdCBtb2RpZmllZF9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghYWxsX2F2YWlsYWJsZV9tdDVfYWNjb3VudHMgfHwgIW10NV9hY2NvdW50cykgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiBhbGxfYXZhaWxhYmxlX210NV9hY2NvdW50cz8ubWFwKGF2YWlsYWJsZV9hY2NvdW50ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNyZWF0ZWRfYWNjb3VudCA9IG10NV9hY2NvdW50cz8uZmluZChhY2NvdW50ID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVfYWNjb3VudC5tYXJrZXRfdHlwZSA9PT0gYWNjb3VudC5tYXJrZXRfdHlwZSAmJlxuICAgICAgICAgICAgICAgICAgICBhdmFpbGFibGVfYWNjb3VudC5zaG9ydGNvZGUgPT09IGFjY291bnQubGFuZGluZ19jb21wYW55X3Nob3J0XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKGNyZWF0ZWRfYWNjb3VudClcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAuLi5jcmVhdGVkX2FjY291bnQsXG4gICAgICAgICAgICAgICAgICAgIC8qKiBEZXRlcm1pbmUgaWYgdGhlIGFjY291bnQgaXMgYWRkZWQgb3Igbm90ICovXG4gICAgICAgICAgICAgICAgICAgIGlzX2FkZGVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0gYXMgY29uc3Q7XG5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4uYXZhaWxhYmxlX2FjY291bnQsXG4gICAgICAgICAgICAgICAgLyoqIERldGVybWluZSBpZiB0aGUgYWNjb3VudCBpcyBhZGRlZCBvciBub3QgKi9cbiAgICAgICAgICAgICAgICBpc19hZGRlZDogZmFsc2UsXG4gICAgICAgICAgICB9IGFzIGNvbnN0O1xuICAgICAgICB9KTtcbiAgICB9LCBbYWxsX2F2YWlsYWJsZV9tdDVfYWNjb3VudHMsIG10NV9hY2NvdW50c10pO1xuXG4gICAgLy8gLy8gUmVkdWNlIG91dCB0aGUgYWRkZWQgYW5kIG5vbiBhZGRlZCBhY2NvdW50cyB0byBtYWtlIHN1cmUgb25seSBvbmUgb2YgZWFjaCBtYXJrZXRfdHlwZSBpcyBzaG93biBmb3Igbm90IGFkZGVkXG4gICAgY29uc3QgZmlsdGVyZWRfZGF0YSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBpZiAoIW1vZGlmaWVkX2RhdGEpIHJldHVybjtcblxuICAgICAgICBjb25zdCBhZGRlZF9hY2NvdW50cyA9IG1vZGlmaWVkX2RhdGEuZmlsdGVyKGFjY291bnQgPT4gYWNjb3VudC5pc19hZGRlZCk7XG4gICAgICAgIGNvbnN0IG5vbl9hZGRlZF9hY2NvdW50cyA9IG1vZGlmaWVkX2RhdGEuZmlsdGVyKGFjY291bnQgPT4gIWFjY291bnQuaXNfYWRkZWQpO1xuXG4gICAgICAgIGNvbnN0IGZpbHRlcmVkX25vbl9hZGRlZF9hY2NvdW50cyA9IG5vbl9hZGRlZF9hY2NvdW50cy5yZWR1Y2UoKGFjYywgYWNjb3VudCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdfYWNjb3VudCA9IGFjYy5maW5kKGFjY19hY2NvdW50ID0+IGFjY19hY2NvdW50Lm1hcmtldF90eXBlID09PSBhY2NvdW50Lm1hcmtldF90eXBlKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZGVkX2FjY291bnQgPSBhZGRlZF9hY2NvdW50cy5maW5kKGFjY19hY2NvdW50ID0+IGFjY19hY2NvdW50Lm1hcmtldF90eXBlID09PSBhY2NvdW50Lm1hcmtldF90eXBlKTtcbiAgICAgICAgICAgIGlmIChleGlzdGluZ19hY2NvdW50IHx8IGFkZGVkX2FjY291bnQpIHJldHVybiBhY2M7XG5cbiAgICAgICAgICAgIHJldHVybiBbLi4uYWNjLCBhY2NvdW50XTtcbiAgICAgICAgfSwgW10gYXMgdHlwZW9mIG5vbl9hZGRlZF9hY2NvdW50cyk7XG5cbiAgICAgICAgcmV0dXJuIFsuLi5hZGRlZF9hY2NvdW50cywgLi4uZmlsdGVyZWRfbm9uX2FkZGVkX2FjY291bnRzXTtcbiAgICB9LCBbbW9kaWZpZWRfZGF0YV0pO1xuXG4gICAgLy8gU29ydCB0aGUgZGF0YSBieSBtYXJrZXRfdHlwZSB0byBtYWtlIHN1cmUgdGhlIG9yZGVyIGlzICdzeW50aGV0aWMnLCAnZmluYW5jaWFsJywgJ2FsbCdcbiAgICBjb25zdCBzb3J0ZWRfZGF0YSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICBjb25zdCBtYXJrZXRfdHlwZV9vcmRlciA9IFsnc3ludGhldGljJywgJ2ZpbmFuY2lhbCcsICdhbGwnXTtcblxuICAgICAgICBpZiAoIWZpbHRlcmVkX2RhdGEpIHJldHVybjtcblxuICAgICAgICBjb25zdCBzb3J0ZWRfZGF0YSA9IG1hcmtldF90eXBlX29yZGVyLnJlZHVjZSgoYWNjLCBtYXJrZXRfdHlwZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYWNjb3VudHMgPSBmaWx0ZXJlZF9kYXRhLmZpbHRlcihhY2NvdW50ID0+IGFjY291bnQubWFya2V0X3R5cGUgPT09IG1hcmtldF90eXBlKTtcbiAgICAgICAgICAgIGlmICghYWNjb3VudHMubGVuZ3RoKSByZXR1cm4gYWNjO1xuICAgICAgICAgICAgcmV0dXJuIFsuLi5hY2MsIC4uLmFjY291bnRzXTtcbiAgICAgICAgfSwgW10gYXMgdHlwZW9mIGZpbHRlcmVkX2RhdGEpO1xuXG4gICAgICAgIHJldHVybiBzb3J0ZWRfZGF0YTtcbiAgICB9LCBbZmlsdGVyZWRfZGF0YV0pO1xuXG4gICAgY29uc3QgYXJlQWxsQWNjb3VudHNDcmVhdGVkID0gc29ydGVkX2RhdGE/Lmxlbmd0aCA9PT0gYWxsX2F2YWlsYWJsZV9tdDVfYWNjb3VudHM/Lmxlbmd0aDtcblxuICAgIHJldHVybiB7XG4gICAgICAgIGRhdGE6IHNvcnRlZF9kYXRhLFxuICAgICAgICAvKiogRGV0ZXJtaW5lIGlmIGFsbCB0aGUgYWNjb3VudHMgYXJlIGNyZWF0ZWQgKi9cbiAgICAgICAgYXJlQWxsQWNjb3VudHNDcmVhdGVkLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VTb3J0ZWRNVDVBY2NvdW50cztcbiIsImltcG9ydCB7IHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuaW1wb3J0IHVzZVNldHRpbmdzIGZyb20gJy4vdXNlU2V0dGluZ3MnO1xuXG4vKiogQ3VzdG9tIGhvb2sgdG8gZ2V0IHN0YXRlcyBsaXN0IGZvciBhIHBhcnRpY3VsYXIgY291bnRyeS4gKi9cbnR5cGUgVFN0YXRlc0xpc3QgPSBOb25OdWxsYWJsZTxSZXR1cm5UeXBlPHR5cGVvZiB1c2VTZXR0aW5ncz5bJ2RhdGEnXVsncmVzaWRlbmNlJyB8ICdjb3VudHJ5J10+O1xuXG5jb25zdCB1c2VTdGF0ZXNMaXN0ID0gKGNvdW50cnk6IFRTdGF0ZXNMaXN0KSA9PiB7XG4gICAgY29uc3QgeyBkYXRhLCAuLi5yZXN0IH0gPSB1c2VRdWVyeSgnc3RhdGVzX2xpc3QnLCB7XG4gICAgICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVGhlIGBzdGF0ZXNfbGlzdGAgdHlwZSBmcm9tIGBAZGVyaXYvYXBpLXR5cGVzYCBpcyBub3QgY29ycmVjdC5cbiAgICAgICAgLy8gVGhlIHR5cGUgc2hvdWxkIGJlIGBzdHJpbmdgLCBidXQgaXQncyBhbiBhbGlhcyB0byBzdHJpbmcgdHlwZS5cbiAgICAgICAgcGF5bG9hZDogeyBzdGF0ZXNfbGlzdDogY291bnRyeSB9LFxuICAgIH0pO1xuXG4gICAgY29uc3QgbW9kaWZpZWRfc3RhdGVzX2xpc3QgPSB1c2VNZW1vKCgpID0+IFsuLi4oZGF0YT8uc3RhdGVzX2xpc3QgfHwgW10pXSwgW2RhdGE/LnN0YXRlc19saXN0XSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIHN0YXRlcyBsaXN0IGZvciB0aGUgZ2l2ZW4gY291bnRyeS4gKi9cbiAgICAgICAgZGF0YTogbW9kaWZpZWRfc3RhdGVzX2xpc3QsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVN0YXRlc0xpc3Q7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5cbnR5cGUgVFBheWxvYWQgPSBQYXJhbWV0ZXJzPFxuICAgIFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCd0cmFkaW5nX3BsYXRmb3JtX2ludmVzdG9yX3Bhc3N3b3JkX2NoYW5nZSc+PlsnbXV0YXRlJ11cbj5bMF1bJ3BheWxvYWQnXTtcblxuLyoqIEEgY3VzdG9tIGhvb2sgdGhhdCBjaGFuZ2UgdGhlIFRyYWRpbmcgUGxhdGZvcm0gSW52ZXN0b3IgUGFzc3dvcmQuICovXG5jb25zdCB1c2VUcmFkaW5nUGxhdGZvcm1JbnZlc3RvclBhc3N3b3JkQ2hhbmdlID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgbXV0YXRlOiBfbXV0YXRlLFxuICAgICAgICBtdXRhdGVBc3luYzogX211dGF0ZUFzeW5jLFxuICAgICAgICAuLi5yZXN0XG4gICAgfSA9IHVzZU11dGF0aW9uKCd0cmFkaW5nX3BsYXRmb3JtX2ludmVzdG9yX3Bhc3N3b3JkX2NoYW5nZScpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcbiAgICBjb25zdCBtdXRhdGVBc3luYyA9IHVzZUNhbGxiYWNrKChwYXlsb2FkOiBUUGF5bG9hZCkgPT4gX211dGF0ZUFzeW5jKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVBc3luY10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBtdXRhdGlvbiBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBwYXlsb2FkIGFuZCBzZW5kcyBpdCB0byB0aGUgc2VydmVyICovXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgbXV0YXRlQXN5bmMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRyYWRpbmdQbGF0Zm9ybUludmVzdG9yUGFzc3dvcmRDaGFuZ2U7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5cbnR5cGUgVFBheWxvYWQgPSBQYXJhbWV0ZXJzPFxuICAgIFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCd0cmFkaW5nX3BsYXRmb3JtX2ludmVzdG9yX3Bhc3N3b3JkX3Jlc2V0Jz4+WydtdXRhdGUnXVxuPlswXVsncGF5bG9hZCddO1xuXG4vKiogQSBjdXN0b20gaG9vayB0aGF0IHJlc2V0IHRoZSBUcmFkaW5nIFBsYXRmb3JtIEludmVzdG9yIFBhc3N3b3JkLiAqL1xuY29uc3QgdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZFJlc2V0ID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgbXV0YXRlOiBfbXV0YXRlLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbigndHJhZGluZ19wbGF0Zm9ybV9pbnZlc3Rvcl9wYXNzd29yZF9yZXNldCcpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgbXV0YXRpb24gZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgcGF5bG9hZCBhbmQgc2VuZHMgaXQgdG8gdGhlIHNlcnZlciAqL1xuICAgICAgICBtdXRhdGUsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRyYWRpbmdQbGF0Zm9ybUludmVzdG9yUGFzc3dvcmRSZXNldDtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4uL3VzZU11dGF0aW9uJztcblxudHlwZSBUUGF5bG9hZCA9IFBhcmFtZXRlcnM8UmV0dXJuVHlwZTx0eXBlb2YgdXNlTXV0YXRpb248J3RyYWRpbmdfcGxhdGZvcm1fcGFzc3dvcmRfY2hhbmdlJz4+WydtdXRhdGUnXT5bMF1bJ3BheWxvYWQnXTtcbnR5cGUgVFBheWxvYWRBc3luYyA9IFBhcmFtZXRlcnM8XG4gICAgUmV0dXJuVHlwZTx0eXBlb2YgdXNlTXV0YXRpb248J3RyYWRpbmdfcGxhdGZvcm1fcGFzc3dvcmRfY2hhbmdlJz4+WydtdXRhdGVBc3luYyddXG4+WzBdWydwYXlsb2FkJ107XG5cbi8qKiBBIGN1c3RvbSBob29rIHRoYXQgY2hhbmdlIHRoZSBUcmFkaW5nIFBsYXRmb3JtIFBhc3N3b3JkLiAqL1xuY29uc3QgdXNlVHJhZGluZ1BsYXRmb3JtUGFzc3dvcmRDaGFuZ2UgPSAoKSA9PiB7XG4gICAgY29uc3QgeyBtdXRhdGU6IF9tdXRhdGUsIG11dGF0ZUFzeW5jOiBfbXV0YXRlQXN5bmMsIC4uLnJlc3QgfSA9IHVzZU11dGF0aW9uKCd0cmFkaW5nX3BsYXRmb3JtX3Bhc3N3b3JkX2NoYW5nZScpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcbiAgICBjb25zdCBtdXRhdGVBc3luYyA9IHVzZUNhbGxiYWNrKChwYXlsb2FkOiBUUGF5bG9hZEFzeW5jKSA9PiBfbXV0YXRlQXN5bmMoeyBwYXlsb2FkIH0pLCBbX211dGF0ZUFzeW5jXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogVGhlIG11dGF0aW9uIGZ1bmN0aW9uIHRoYXQgYWNjZXB0cyBhIHBheWxvYWQgYW5kIHNlbmRzIGl0IHRvIHRoZSBzZXJ2ZXIgKi9cbiAgICAgICAgbXV0YXRlLFxuICAgICAgICBtdXRhdGVBc3luYyxcbiAgICAgICAgLi4ucmVzdCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlVHJhZGluZ1BsYXRmb3JtUGFzc3dvcmRDaGFuZ2U7XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHVzZUluZmluaXRlUXVlcnkgZnJvbSAnLi4vdXNlSW5maW5pdGVRdWVyeSc7XG5pbXBvcnQgeyBUU29ja2V0UmVxdWVzdFBheWxvYWQgfSBmcm9tICcuLi8uLi90eXBlcyc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcbmltcG9ydCB1c2VJbnZhbGlkYXRlUXVlcnkgZnJvbSAnLi4vdXNlSW52YWxpZGF0ZVF1ZXJ5JztcbmltcG9ydCB1c2VBY3RpdmVBY2NvdW50IGZyb20gJy4vdXNlQWN0aXZlQWNjb3VudCc7XG5pbXBvcnQgeyBkaXNwbGF5TW9uZXkgfSBmcm9tICcuLi91dGlscyc7XG5cbnR5cGUgVEZpbHRlciA9IE5vbk51bGxhYmxlPFRTb2NrZXRSZXF1ZXN0UGF5bG9hZDwnc3RhdGVtZW50Jz5bJ3BheWxvYWQnXT5bJ2FjdGlvbl90eXBlJ107XG5cbi8qKiBBIGN1c3RvbSBob29rIHRvIGdldCB0aGUgc3VtbWFyeSBvZiBhY2NvdW50IHRyYW5zYWN0aW9ucyAqL1xuY29uc3QgdXNlVHJhbnNhY3Rpb25zID0gKCkgPT4ge1xuICAgIGNvbnN0IHtcbiAgICAgICAgZGF0YTogeyBwcmVmZXJyZWRfbGFuZ3VhZ2UgfSxcbiAgICAgICAgaXNGZXRjaGluZyxcbiAgICAgICAgaXNTdWNjZXNzLFxuICAgIH0gPSB1c2VBdXRob3JpemUoKTtcblxuICAgIGNvbnN0IHsgZGF0YTogYWNjb3VudCB9ID0gdXNlQWN0aXZlQWNjb3VudCgpO1xuICAgIGNvbnN0IGRpc3BsYXlfY29kZSA9IGFjY291bnQ/LmN1cnJlbmN5X2NvbmZpZz8uZGlzcGxheV9jb2RlIHx8ICdVU0QnO1xuICAgIGNvbnN0IGZyYWN0aW9uYWxfZGlnaXRzID0gYWNjb3VudD8uY3VycmVuY3lfY29uZmlnPy5mcmFjdGlvbmFsX2RpZ2l0cyB8fCAyO1xuXG4gICAgY29uc3QgW2ZpbHRlciwgc2V0RmlsdGVyXSA9IHVzZVN0YXRlPFRGaWx0ZXI+KCk7XG4gICAgY29uc3QgeyBkYXRhLCBmZXRjaE5leHRQYWdlLCByZW1vdmUsIC4uLnJlc3QgfSA9IHVzZUluZmluaXRlUXVlcnkoJ3N0YXRlbWVudCcsIHtcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgZW5hYmxlZDogIWlzRmV0Y2hpbmcgJiYgaXNTdWNjZXNzLFxuICAgICAgICAgICAgZ2V0TmV4dFBhZ2VQYXJhbTogKGxhc3RQYWdlLCBwYWdlcykgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghbGFzdFBhZ2U/LnN0YXRlbWVudD8uY291bnQpIHJldHVybjtcblxuICAgICAgICAgICAgICAgIHJldHVybiBwYWdlcy5sZW5ndGg7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICBhY3Rpb25fdHlwZTogZmlsdGVyLFxuICAgICAgICAgICAgLy8gVE9ETzogcmVtb3ZlIHRoaXMgb25jZSBiYWNrZW5kIGFkZHMgYHRvYCBhbmQgYGZyb21gIGZvciBEZXJpdiBYIHRyYW5zZmVyc1xuICAgICAgICAgICAgZGVzY3JpcHRpb246IDEsXG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBpbnZhbGlkYXRlID0gdXNlSW52YWxpZGF0ZVF1ZXJ5KCk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaW52YWxpZGF0ZSgnc3RhdGVtZW50Jyk7XG4gICAgfSwgW2ZpbHRlciwgaW52YWxpZGF0ZV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHJlbW92ZSgpO1xuICAgICAgICB9O1xuICAgIH0sIFtyZW1vdmVdKTtcblxuICAgIC8vIEZsYXR0ZW4gdGhlIGRhdGEgYXJyYXkuXG4gICAgY29uc3QgZmxhdHRlbl9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghZGF0YT8ucGFnZXM/Lmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICAgIHJldHVybiBkYXRhPy5wYWdlcz8uZmxhdE1hcChwYWdlID0+IHBhZ2U/LnN0YXRlbWVudD8udHJhbnNhY3Rpb25zKTtcbiAgICB9LCBbZGF0YT8ucGFnZXNdKTtcblxuICAgIC8vIE1vZGlmeSB0aGUgZGF0YS5cbiAgICBjb25zdCBtb2RpZmllZF9kYXRhID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIGlmICghZmxhdHRlbl9kYXRhPy5sZW5ndGgpIHJldHVybjtcblxuICAgICAgICByZXR1cm4gZmxhdHRlbl9kYXRhPy5tYXAodHJhbnNhY3Rpb24gPT4gKHtcbiAgICAgICAgICAgIC4uLnRyYW5zYWN0aW9uLFxuICAgICAgICAgICAgLyoqIFRoZSB0cmFuc2FjdGlvbiBhbW91bnQgaW4gY3VycmVuY3kgZm9ybWF0LiAqL1xuICAgICAgICAgICAgZGlzcGxheV9hbW91bnQ6IGRpc3BsYXlNb25leSh0cmFuc2FjdGlvbj8uYW1vdW50IHx8IDAsIGRpc3BsYXlfY29kZSwge1xuICAgICAgICAgICAgICAgIGZyYWN0aW9uYWxfZGlnaXRzLFxuICAgICAgICAgICAgICAgIHByZWZlcnJlZF9sYW5ndWFnZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgLyoqIFRoZSBiYWxhbmNlIG9mIGFjY291bnQgYWZ0ZXIgdGhlIHRyYW5zYWN0aW9uIGluIGN1cnJlbmN5IGZvcm1hdC4gKi9cbiAgICAgICAgICAgIGRpc3BsYXlfYmFsYW5jZV9hZnRlcjogZGlzcGxheU1vbmV5KHRyYW5zYWN0aW9uPy5iYWxhbmNlX2FmdGVyIHx8IDAsIGRpc3BsYXlfY29kZSwge1xuICAgICAgICAgICAgICAgIGZyYWN0aW9uYWxfZGlnaXRzLFxuICAgICAgICAgICAgICAgIHByZWZlcnJlZF9sYW5ndWFnZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KSk7XG4gICAgfSwgW2ZsYXR0ZW5fZGF0YSwgcHJlZmVycmVkX2xhbmd1YWdlLCBmcmFjdGlvbmFsX2RpZ2l0cywgZGlzcGxheV9jb2RlXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAvKiogTGlzdCBvZiBhY2NvdW50IHRyYW5zYWN0aW9ucyAqL1xuICAgICAgICBkYXRhOiBtb2RpZmllZF9kYXRhLFxuICAgICAgICAvKiogRmV0Y2ggdGhlIG5leHQgcGFnZSBvZiB0cmFuc2FjdGlvbnMgKi9cbiAgICAgICAgZmV0Y2hOZXh0UGFnZSxcbiAgICAgICAgLyoqIEZpbHRlciB0aGUgdHJhbnNhY3Rpb25zIGJ5IHR5cGUgKi9cbiAgICAgICAgc2V0RmlsdGVyLFxuICAgICAgICAuLi5yZXN0LFxuICAgIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VUcmFuc2FjdGlvbnM7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5cbnR5cGUgVFBheWxvYWQgPSBOb25OdWxsYWJsZTxcbiAgICBOb25OdWxsYWJsZTxQYXJhbWV0ZXJzPFJldHVyblR5cGU8dHlwZW9mIHVzZU11dGF0aW9uPCd0cmFuc2Zlcl9iZXR3ZWVuX2FjY291bnRzJz4+WydtdXRhdGUnXT5bMF0+WydwYXlsb2FkJ11cbj47XG5cbi8qKiBBIGN1c3RvbSBob29rIHVzZWQgdG8gdHJhbnNmZXIgbW9uZXkgYmV0d2VlbiBjbGllbnQgYWNjb3VudHMgKi9cbmNvbnN0IHVzZVRyYW5zZmVyQmV0d2VlbkFjY291bnRzID0gKCkgPT4ge1xuICAgIGNvbnN0IHsgbXV0YXRlOiBfbXV0YXRlLCBtdXRhdGVBc3luYzogX211dGF0ZUFzeW5jLCAuLi5yZXN0IH0gPSB1c2VNdXRhdGlvbigndHJhbnNmZXJfYmV0d2Vlbl9hY2NvdW50cycpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcbiAgICBjb25zdCBtdXRhdGVBc3luYyA9IHVzZUNhbGxiYWNrKChwYXlsb2FkOiBUUGF5bG9hZCkgPT4gX211dGF0ZUFzeW5jKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVBc3luY10pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBtdXRhdGlvbiBmdW5jdGlvbiB0aGF0IGFjY2VwdHMgYSBwYXlsb2FkIGFuZCBzZW5kcyBpdCB0byB0aGUgc2VydmVyICovXG4gICAgICAgIG11dGF0ZSxcbiAgICAgICAgbXV0YXRlQXN5bmMsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVRyYW5zZmVyQmV0d2VlbkFjY291bnRzO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlTXV0YXRpb24gZnJvbSAnLi4vdXNlTXV0YXRpb24nO1xuXG50eXBlIFRQYXlsb2FkID0gUGFyYW1ldGVyczxSZXR1cm5UeXBlPHR5cGVvZiB1c2VNdXRhdGlvbjwndmVyaWZ5X2VtYWlsJz4+WydtdXRhdGUnXT5bMF1bJ3BheWxvYWQnXTtcblxuLyoqIEEgY3VzdG9tIGhvb2sgZm9yIHZlcmlmeWluZyBlbWFpbCBhZGRyZXNzICovXG5jb25zdCB1c2VWZXJpZnlFbWFpbCA9ICgpID0+IHtcbiAgICBjb25zdCB7IG11dGF0ZTogX211dGF0ZSwgLi4ucmVzdCB9ID0gdXNlTXV0YXRpb24oJ3ZlcmlmeV9lbWFpbCcpO1xuXG4gICAgY29uc3QgbXV0YXRlID0gdXNlQ2FsbGJhY2soKHBheWxvYWQ6IFRQYXlsb2FkKSA9PiBfbXV0YXRlKHsgcGF5bG9hZCB9KSwgW19tdXRhdGVdKTtcblxuICAgIHJldHVybiB7XG4gICAgICAgIC8qKiBUaGUgbXV0YXRpb24gZnVuY3Rpb24gdGhhdCBhY2NlcHRzIGEgcGF5bG9hZCBhbmQgc2VuZHMgaXQgdG8gdGhlIHNlcnZlciAqL1xuICAgICAgICBtdXRhdGUsXG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVZlcmlmeUVtYWlsO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2sgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdXNlQXV0aG9yaXplIGZyb20gJy4vdXNlQXV0aG9yaXplJztcbmltcG9ydCB1c2VJbnZhbGlkYXRlUXVlcnkgZnJvbSAnLi4vdXNlSW52YWxpZGF0ZVF1ZXJ5JztcbmltcG9ydCB1c2VNdXRhdGlvbiBmcm9tICcuLi91c2VNdXRhdGlvbic7XG5pbXBvcnQgdXNlUXVlcnkgZnJvbSAnLi4vdXNlUXVlcnknO1xuXG4vKiogQSBjdXN0b20gaG9vayB0byBnZXQgdGhlIHN0YXR1cyBvZiB3YWxsZXRfbWlncmF0aW9uIEFQSSBhbmQgdG8gc3RhcnQvcmVzZXQgdGhlIG1pZ3JhdGlvbiBwcm9jZXNzICovXG5jb25zdCB1c2VXYWxsZXRNaWdyYXRpb24gPSAoKSA9PiB7XG4gICAgY29uc3QgaW52YWxpZGF0ZSA9IHVzZUludmFsaWRhdGVRdWVyeSgpO1xuXG4gICAgLyoqIE1ha2UgYSByZXF1ZXN0IHRvIHdhbGxldF9taWdyYXRpb24gQVBJIGFuZCBvblN1Y2Nlc3MgaXQgd2lsbCBpbnZhbGlkYXRlIHRoZSBjYWNoZWQgZGF0YSAgKi9cbiAgICBjb25zdCB7IG11dGF0ZSB9ID0gdXNlTXV0YXRpb24oJ3dhbGxldF9taWdyYXRpb24nLCB7IG9uU3VjY2VzczogKCkgPT4gaW52YWxpZGF0ZSgnd2FsbGV0X21pZ3JhdGlvbicpIH0pO1xuXG4gICAgY29uc3QgeyBpc1N1Y2Nlc3MgfSA9IHVzZUF1dGhvcml6ZSgpO1xuXG4gICAgLyoqIEZldGNoIHRoZSB3YWxsZXRfbWlncmF0aW9uIEFQSSBhbmQgcmVmZXRjaCBpdCBldmVyeSBzZWNvbmQgaWYgdGhlIHN0YXR1cyBpcyBpbl9wcm9ncmVzcyAqL1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gdXNlUXVlcnkoJ3dhbGxldF9taWdyYXRpb24nLCB7XG4gICAgICAgIHBheWxvYWQ6IHsgd2FsbGV0X21pZ3JhdGlvbjogJ3N0YXRlJyB9LFxuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICByZWZldGNoSW50ZXJ2YWw6IHJlc3BvbnNlID0+IChyZXNwb25zZT8ud2FsbGV0X21pZ3JhdGlvbj8uc3RhdGUgPT09ICdpbl9wcm9ncmVzcycgPyA1MDAgOiBmYWxzZSksXG4gICAgICAgICAgICBlbmFibGVkOiBpc1N1Y2Nlc3MsXG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICBjb25zdCBzdGFydE1pZ3JhdGlvbiA9IHVzZUNhbGxiYWNrKCgpID0+IG11dGF0ZSh7IHBheWxvYWQ6IHsgd2FsbGV0X21pZ3JhdGlvbjogJ3N0YXJ0JyB9IH0pLCBbbXV0YXRlXSk7XG5cbiAgICBjb25zdCByZXNldE1pZ3JhdGlvbiA9IHVzZUNhbGxiYWNrKCgpID0+IG11dGF0ZSh7IHBheWxvYWQ6IHsgd2FsbGV0X21pZ3JhdGlvbjogJ3Jlc2V0JyB9IH0pLCBbbXV0YXRlXSk7XG5cbiAgICBjb25zdCBzdGF0ZSA9IGRhdGE/LndhbGxldF9taWdyYXRpb24/LnN0YXRlO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgLyoqIFRoZSBzdGF0dXMgb2YgdGhlIHdhbGxldF9taWdyYXRpb24gQVBJICovXG4gICAgICAgIHN0YXRlLFxuICAgICAgICAvKiogQSBib29sZWFuIHRvIGNoZWNrIGlmIHRoZSBzdGF0dXMgaXMgbm90X2VsaWdpYmxlICovXG4gICAgICAgIGlzX2luZWxpZ2libGU6IHN0YXRlID09PSAnaW5lbGlnaWJsZScsXG4gICAgICAgIC8qKiBBIGJvb2xlYW4gdG8gY2hlY2sgaWYgdGhlIHN0YXR1cyBpcyBlbGlnaWJsZSAqL1xuICAgICAgICBpc19lbGlnaWJsZTogc3RhdGUgPT09ICdlbGlnaWJsZScsXG4gICAgICAgIC8qKiBBIGJvb2xlYW4gdG8gY2hlY2sgaWYgdGhlIHN0YXR1cyBpcyBpbl9wcm9ncmVzcyAqL1xuICAgICAgICBpc19pbl9wcm9ncmVzczogc3RhdGUgPT09ICdpbl9wcm9ncmVzcycsXG4gICAgICAgIC8qKiBBIGJvb2xlYW4gdG8gY2hlY2sgaWYgdGhlIHN0YXR1cyBpcyBjb21wbGV0ZWQgKi9cbiAgICAgICAgaXNfbWlncmF0ZWQ6IHN0YXRlID09PSAnbWlncmF0ZWQnLFxuICAgICAgICAvKiogQSBib29sZWFuIHRvIGNoZWNrIGlmIHRoZSBzdGF0dXMgaXMgZmFpbGVkICovXG4gICAgICAgIGlzX2ZhaWxlZDogc3RhdGUgPT09ICdmYWlsZWQnLFxuICAgICAgICAvKiogU2VuZHMgYSByZXF1ZXN0IHRvIHdhbGxldF9taWdyYXRpb24gQVBJIHRvIHN0YXJ0IHRoZSBtaWdyYXRpb24gcHJvY2VzcyAqL1xuICAgICAgICBzdGFydE1pZ3JhdGlvbixcbiAgICAgICAgLyoqIFNlbmRzIGEgcmVxdWVzdCB0byB3YWxsZXRfbWlncmF0aW9uIEFQSSB0byByZXNldCB0aGUgbWlncmF0aW9uIHByb2Nlc3MgKi9cbiAgICAgICAgcmVzZXRNaWdyYXRpb24sXG4gICAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVzZVdhbGxldE1pZ3JhdGlvbjtcbiIsImV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQWNjb3VudExpbWl0cyB9IGZyb20gJy4vdXNlQWNjb3VudExpbWl0cyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUFjY291bnRTdGF0dXMgfSBmcm9tICcuL3VzZUFjY291bnRTdGF0dXMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VBY2NvdW50VHlwZXMgfSBmcm9tICcuL3VzZUFjY291bnRUeXBlcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUFjdGl2ZUFjY291bnQgfSBmcm9tICcuL3VzZUFjdGl2ZUFjY291bnQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VBY3RpdmVMaW5rZWRUb1RyYWRpbmdBY2NvdW50IH0gZnJvbSAnLi91c2VBY3RpdmVMaW5rZWRUb1RyYWRpbmdBY2NvdW50JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQWN0aXZlVHJhZGluZ0FjY291bnQgfSBmcm9tICcuL3VzZUFjdGl2ZVRyYWRpbmdBY2NvdW50JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQWN0aXZlV2FsbGV0QWNjb3VudCB9IGZyb20gJy4vdXNlQWN0aXZlV2FsbGV0QWNjb3VudCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUFjdGl2ZVdhbGxldEJhbGFuY2UgfSBmcm9tICcuL3VzZUFjdGl2ZVdhbGxldEJhbGFuY2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VBbGxBY2NvdW50c0xpc3QgfSBmcm9tICcuL3VzZUFsbEFjY291bnRzTGlzdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUFsbFdhbGxldEFjY291bnRzIH0gZnJvbSAnLi91c2VBbGxXYWxsZXRBY2NvdW50cyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUF1dGhlbnRpY2F0aW9uIH0gZnJvbSAnLi91c2VBdXRoZW50aWNhdGlvbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUF1dGhvcml6ZSB9IGZyb20gJy4vdXNlQXV0aG9yaXplJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQWNjZXNpYmxlUGxhdGZvcm1zIH0gZnJvbSAnLi91c2VBY2Nlc2libGVQbGF0Zm9ybXMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VBdmFpbGFibGVNVDVBY2NvdW50cyB9IGZyb20gJy4vdXNlQXZhaWxhYmxlTVQ1QWNjb3VudHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VBdmFpbGFibGVXYWxsZXRzIH0gZnJvbSAnLi91c2VBdmFpbGFibGVXYWxsZXRzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQmFsYW5jZSB9IGZyb20gJy4vdXNlQmFsYW5jZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNGREFjY291bnRzTGlzdCB9IGZyb20gJy4vdXNlQ0ZEQWNjb3VudHNMaXN0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ2FuY2VsQ3J5cHRvVHJhbnNhY3Rpb24gfSBmcm9tICcuL3VzZUNhbmNlbENyeXB0b1RyYW5zYWN0aW9uJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ2FzaGllckZpYXRBZGRyZXNzIH0gZnJvbSAnLi91c2VDYXNoaWVyRmlhdEFkZHJlc3MnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VDb3VudHJ5Q29uZmlnIH0gZnJvbSAnLi91c2VDb3VudHJ5Q29uZmlnJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ3JlYXRlTVQ1QWNjb3VudCB9IGZyb20gJy4vdXNlQ3JlYXRlTVQ1QWNjb3VudCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNyZWF0ZU5ld1JlYWxBY2NvdW50IH0gZnJvbSAnLi91c2VDcmVhdGVOZXdSZWFsQWNjb3VudCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNyZWF0ZU90aGVyQ0ZEQWNjb3VudCB9IGZyb20gJy4vdXNlQ3JlYXRlT3RoZXJDRkRBY2NvdW50JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ3JlYXRlV2FsbGV0IH0gZnJvbSAnLi91c2VDcmVhdGVXYWxsZXQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VDcnlwdG9UcmFuc2FjdGlvbnMgfSBmcm9tICcuL3VzZUNyeXB0b1RyYW5zYWN0aW9ucyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNyeXB0b1dpdGhkcmF3YWwgfSBmcm9tICcuL3VzZUNyeXB0b1dpdGhkcmF3YWwnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VDdHJhZGVyQWNjb3VudHNMaXN0IH0gZnJvbSAnLi91c2VDdHJhZGVyQWNjb3VudHNMaXN0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ3RyYWRlclNlcnZpY2VUb2tlbiB9IGZyb20gJy4vdXNlQ3RyYWRlclNlcnZpY2VUb2tlbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUN1cnJlbmN5Q29uZmlnIH0gZnJvbSAnLi91c2VDdXJyZW5jeUNvbmZpZyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZURlcG9zaXRDcnlwdG9BZGRyZXNzIH0gZnJvbSAnLi91c2VEZXBvc2l0Q3J5cHRvQWRkcmVzcyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZURlcml2QWNjb3VudHNMaXN0IH0gZnJvbSAnLi91c2VEZXJpdkFjY291bnRzTGlzdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZURvY3VtZW50VXBsb2FkIH0gZnJvbSAnLi91c2VEb2N1bWVudFVwbG9hZCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUR4dHJhZGVBY2NvdW50c0xpc3QgfSBmcm9tICcuL3VzZUR4dHJhZGVBY2NvdW50c0xpc3QnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VEeHRyYWRlU2VydmljZVRva2VuIH0gZnJvbSAnLi91c2VEeHRyYWRlU2VydmljZVRva2VuJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlRHluYW1pY0xldmVyYWdlIH0gZnJvbSAnLi91c2VEeW5hbWljTGV2ZXJhZ2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VFeGNoYW5nZVJhdGUgfSBmcm9tICcuL3VzZUV4Y2hhbmdlUmF0ZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUdldEFjY291bnRTdGF0dXMgfSBmcm9tICcuL3VzZUdldEFjY291bnRTdGF0dXMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VJZGVudGl0eURvY3VtZW50VmVyaWZpY2F0aW9uQWRkIH0gZnJvbSAnLi91c2VJZGVudGl0eURvY3VtZW50VmVyaWZpY2F0aW9uQWRkJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlSnVyaXNkaWN0aW9uU3RhdHVzIH0gZnJvbSAnLi91c2VKdXJpc2RpY3Rpb25TdGF0dXMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VMYW5kaW5nQ29tcGFueSB9IGZyb20gJy4vdXNlTGFuZGluZ0NvbXBhbnknO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VNVDVBY2NvdW50c0xpc3QgfSBmcm9tICcuL3VzZU1UNUFjY291bnRzTGlzdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZU1UNURlcG9zaXQgfSBmcm9tICcuL3VzZU1UNURlcG9zaXQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VPbmZpZG8gfSBmcm9tICcuL3VzZU9uZmlkbyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZU9uZmlkb05vdGlmaWNhdGlvbkV2ZW50IH0gZnJvbSAnLi91c2VPbmZpZG9Ob3RpZmljYXRpb25FdmVudCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZU9uZmlkb1NlcnZpY2VUb2tlbiB9IGZyb20gJy4vdXNlT25maWRvU2VydmljZVRva2VuJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlT3RoZXJDRkRQbGF0Zm9ybXNEZXBvc2l0IH0gZnJvbSAnLi91c2VPdGhlckNGRFBsYXRmb3Jtc0RlcG9zaXQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VQT0EgfSBmcm9tICcuL3VzZVBPQSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVBPSSB9IGZyb20gJy4vdXNlUE9JJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlUmVzaWRlbmNlTGlzdCB9IGZyb20gJy4vdXNlUmVzaWRlbmNlTGlzdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVNldHRpbmdzIH0gZnJvbSAnLi91c2VTZXR0aW5ncyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVNvcnRlZE1UNUFjY291bnRzIH0gZnJvbSAnLi91c2VTb3J0ZWRNVDVBY2NvdW50cyc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVN0YXRlc0xpc3QgfSBmcm9tICcuL3VzZVN0YXRlc0xpc3QnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VUcmFkaW5nQWNjb3VudHNMaXN0IH0gZnJvbSAnLi91c2VUcmFkaW5nQWNjb3VudHNMaXN0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZENoYW5nZSB9IGZyb20gJy4vdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZENoYW5nZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVRyYWRpbmdQbGF0Zm9ybUludmVzdG9yUGFzc3dvcmRSZXNldCB9IGZyb20gJy4vdXNlVHJhZGluZ1BsYXRmb3JtSW52ZXN0b3JQYXNzd29yZFJlc2V0JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlVHJhZGluZ1BsYXRmb3JtUGFzc3dvcmRDaGFuZ2UgfSBmcm9tICcuL3VzZVRyYWRpbmdQbGF0Zm9ybVBhc3N3b3JkQ2hhbmdlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlVHJhbnNhY3Rpb25zIH0gZnJvbSAnLi91c2VUcmFuc2FjdGlvbnMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VUcmFuc2ZlckJldHdlZW5BY2NvdW50cyB9IGZyb20gJy4vdXNlVHJhbnNmZXJCZXR3ZWVuQWNjb3VudHMnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VWZXJpZnlFbWFpbCB9IGZyb20gJy4vdXNlVmVyaWZ5RW1haWwnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VXYWxsZXRBY2NvdW50c0xpc3QgfSBmcm9tICcuL3VzZVdhbGxldEFjY291bnRzTGlzdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVdhbGxldE1pZ3JhdGlvbiB9IGZyb20gJy4vdXNlV2FsbGV0TWlncmF0aW9uJztcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHR5cGUge1xuICAgIFRTb2NrZXRBY2NlcHRhYmxlUHJvcHMsXG4gICAgVFNvY2tldFBhZ2luYXRlYWJsZUVuZHBvaW50TmFtZXMsXG4gICAgVFNvY2tldFJlcXVlc3RQYXlsb2FkLFxuICAgIFRTb2NrZXRSZXF1ZXN0UXVlcnlPcHRpb25zLFxufSBmcm9tICcuLi90eXBlcyc7XG5cbmltcG9ydCB1c2VRdWVyeSBmcm9tICcuL3VzZVF1ZXJ5JztcblxuY29uc3QgdXNlUGFnaW5hdGVkRmV0Y2ggPSA8VCBleHRlbmRzIFRTb2NrZXRQYWdpbmF0ZWFibGVFbmRwb2ludE5hbWVzPihcbiAgICBuYW1lOiBULFxuICAgIC4uLnByb3BzOiBUU29ja2V0QWNjZXB0YWJsZVByb3BzPFQsIHRydWU+XG4pID0+IHtcbiAgICBjb25zdCBwcm9wID0gcHJvcHM/LlswXTtcbiAgICBjb25zdCBwYXlsb2FkID0gcHJvcCAmJiAncGF5bG9hZCcgaW4gcHJvcCA/IChwcm9wLnBheWxvYWQgYXMgVFNvY2tldFJlcXVlc3RQYXlsb2FkPFQ+KSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBvcHRpb25zID0gcHJvcCAmJiAnb3B0aW9ucycgaW4gcHJvcCA/IChwcm9wLm9wdGlvbnMgYXMgVFNvY2tldFJlcXVlc3RRdWVyeU9wdGlvbnM8VD4pIDogdW5kZWZpbmVkO1xuXG4gICAgY29uc3QgbGltaXQ6IG51bWJlciA9IHBheWxvYWQ/LnBheWxvYWQ/LmxpbWl0IHx8IDEwO1xuICAgIGNvbnN0IFtvZmZzZXQsIHNldE9mZnNldF0gPSB1c2VTdGF0ZTxudW1iZXI+KHBheWxvYWQ/LnBheWxvYWQ/Lm9mZnNldCB8fCAwKTtcblxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgSXQncyBzYWZlIHRvIGlnbm9yZSB0aGUgVFMgZXJyb3IgaGVyZSBzaW5jZSB0aGVcbiAgICAvLyBleGFjdCB0eXBlIG9mIHRoZSBwYXlsb2FkIGlzIG5vdCBkZXRlcm1pbmVkIGF0IHRoaXMgcG9pbnQuXG4gICAgY29uc3QgeyByZW1vdmUsIC4uLnJlc3QgfSA9IHVzZVF1ZXJ5KG5hbWUsIHtcbiAgICAgICAgcGF5bG9hZDogeyAuLi5wYXlsb2FkLCBvZmZzZXQsIGxpbWl0IH0sXG4gICAgICAgIG9wdGlvbnM6IHsgLi4ub3B0aW9ucywga2VlcFByZXZpb3VzRGF0YTogISFvZmZzZXQgfSxcbiAgICB9KTtcblxuICAgIGNvbnN0IGxvYWRNb3JlID0gdXNlQ2FsbGJhY2soKCkgPT4gc2V0T2Zmc2V0KHByZXYgPT4gcHJldiArIGxpbWl0KSwgW2xpbWl0XSk7XG5cbiAgICBjb25zdCByZXNldCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgcmVtb3ZlKCk7XG4gICAgICAgIHNldE9mZnNldCgwKTtcbiAgICB9LCBbcmVtb3ZlXSk7XG5cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5yZXN0LFxuICAgICAgICByZW1vdmUsXG4gICAgICAgIGxvYWRNb3JlLFxuICAgICAgICByZXNldCxcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlUGFnaW5hdGVkRmV0Y2g7XG4iLCJpbXBvcnQgdXNlSW5maW5pdGVRdWVyeSBmcm9tICcuL3VzZUluZmluaXRlUXVlcnknO1xuaW1wb3J0IHVzZU11dGF0aW9uIGZyb20gJy4vdXNlTXV0YXRpb24nO1xuaW1wb3J0IHVzZVF1ZXJ5IGZyb20gJy4vdXNlUXVlcnknO1xuXG5leHBvcnQgeyBkZWZhdWx0IGFzIEFQSVByb3ZpZGVyIH0gZnJvbSAnLi9BUElQcm92aWRlcic7XG5leHBvcnQgKiBmcm9tICcuL2hvb2tzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlSW52YWxpZGF0ZVF1ZXJ5IH0gZnJvbSAnLi91c2VJbnZhbGlkYXRlUXVlcnknO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VQYWdpbmF0ZWRGZXRjaCB9IGZyb20gJy4vdXNlUGFnaW5hdGVkRmV0Y2gnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VTdWJzY3JpcHRpb24gfSBmcm9tICcuL3VzZVN1YnNjcmlwdGlvbic7XG5cbmV4cG9ydCB7XG4gICAgdXNlSW5maW5pdGVRdWVyeSxcbiAgICB1c2VNdXRhdGlvbixcbiAgICB1c2VRdWVyeSxcbiAgICAvKiogQGRlcHJlY2F0ZWQgdXNlIGB1c2VRdWVyeWAgaW5zdGVhZCAqL1xuICAgIHVzZVF1ZXJ5IGFzIHVzZUZldGNoLFxuICAgIC8qKiBAZGVwcmVjYXRlZCB1c2UgYHVzZU11dGF0aW9uYCBpbnN0ZWFkICovXG4gICAgdXNlTXV0YXRpb24gYXMgdXNlUmVxdWVzdCxcbn07XG4iLCIvKiBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuZXhwb3J0IHZhciBQZXJzaXN0U3RvcmVNYXAgPSBuZXcgTWFwKCk7XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuaW1wb3J0IHsgUGVyc2lzdFN0b3JlTWFwIH0gZnJvbSAnLi9QZXJzaXN0U3RvcmVNYXAnO1xuZXhwb3J0IHZhciBjbGVhclBlcnNpc3RlZFN0b3JlID0gZnVuY3Rpb24gKHRhcmdldCkgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYikge1xuICAgICAgICBzd2l0Y2ggKF9iLmxhYmVsKSB7XG4gICAgICAgICAgICBjYXNlIDA6IHJldHVybiBbNCAvKnlpZWxkKi8sICgoX2EgPSBQZXJzaXN0U3RvcmVNYXAuZ2V0KHRhcmdldCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jbGVhclBlcnNpc3RlZFN0b3JlKCkpXTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICBfYi5zZW50KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICB9XG4gICAgfSk7XG59KTsgfTtcbiIsImV4cG9ydCB2YXIgbXBzQ29uZmlnID0ge307XG5leHBvcnQgdmFyIG1wc1JlYWN0aW9uT3B0aW9ucyA9IHt9O1xuZXhwb3J0IHZhciBjb25maWd1cmVQZXJzaXN0YWJsZSA9IGZ1bmN0aW9uIChjb25maWcsIHJlYWN0aW9uT3B0aW9ucykge1xuICAgIGlmIChyZWFjdGlvbk9wdGlvbnMgPT09IHZvaWQgMCkgeyByZWFjdGlvbk9wdGlvbnMgPSB7fTsgfVxuICAgIG1wc0NvbmZpZyA9IGNvbmZpZztcbiAgICBtcHNSZWFjdGlvbk9wdGlvbnMgPSByZWFjdGlvbk9wdGlvbnM7XG59O1xuIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG52YXIgX19nZW5lcmF0b3IgPSAodGhpcyAmJiB0aGlzLl9fZ2VuZXJhdG9yKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgYm9keSkge1xuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XG4gICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksIFwidGhyb3dcIjogdmVyYigxKSwgXCJyZXR1cm5cIjogdmVyYigyKSB9LCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7XG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IHJldHVybiBmdW5jdGlvbiAodikgeyByZXR1cm4gc3RlcChbbiwgdl0pOyB9OyB9XG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xuICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkdlbmVyYXRvciBpcyBhbHJlYWR5IGV4ZWN1dGluZy5cIik7XG4gICAgICAgIHdoaWxlIChfKSB0cnkge1xuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xuICAgICAgICAgICAgaWYgKHkgPSAwLCB0KSBvcCA9IFtvcFswXSAmIDIsIHQudmFsdWVdO1xuICAgICAgICAgICAgc3dpdGNoIChvcFswXSkge1xuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xuICAgICAgICAgICAgICAgIGNhc2UgNDogXy5sYWJlbCsrOyByZXR1cm4geyB2YWx1ZTogb3BbMV0sIGRvbmU6IGZhbHNlIH07XG4gICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSA2ICYmIF8ubGFiZWwgPCB0WzFdKSB7IF8ubGFiZWwgPSB0WzFdOyB0ID0gb3A7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xuICAgICAgICAgICAgICAgICAgICBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHsgb3AgPSBbNiwgZV07IHkgPSAwOyB9IGZpbmFsbHkgeyBmID0gdCA9IDA7IH1cbiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07XG4gICAgfVxufTtcbmltcG9ydCB7IFBlcnNpc3RTdG9yZU1hcCB9IGZyb20gJy4vUGVyc2lzdFN0b3JlTWFwJztcbmV4cG9ydCB2YXIgZ2V0UGVyc2lzdGVkU3RvcmUgPSBmdW5jdGlvbiAodGFyZ2V0KSB7IHJldHVybiBfX2F3YWl0ZXIodm9pZCAwLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYykge1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgKF9iID0gKF9hID0gUGVyc2lzdFN0b3JlTWFwLmdldCh0YXJnZXQpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuZ2V0UGVyc2lzdGVkU3RvcmUoKSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogbnVsbF07XG4gICAgfSk7XG59KTsgfTtcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5pbXBvcnQgeyBQZXJzaXN0U3RvcmVNYXAgfSBmcm9tICcuL1BlcnNpc3RTdG9yZU1hcCc7XG5leHBvcnQgdmFyIGh5ZHJhdGVTdG9yZSA9IGZ1bmN0aW9uICh0YXJnZXQpIHsgcmV0dXJuIF9fYXdhaXRlcih2b2lkIDAsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2IpIHtcbiAgICAgICAgc3dpdGNoIChfYi5sYWJlbCkge1xuICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCAoKF9hID0gUGVyc2lzdFN0b3JlTWFwLmdldCh0YXJnZXQpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuaHlkcmF0ZVN0b3JlKCkpXTtcbiAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICBfYi5zZW50KCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICB9XG4gICAgfSk7XG59KTsgfTtcbiIsImltcG9ydCB7IFBlcnNpc3RTdG9yZU1hcCB9IGZyb20gJy4vUGVyc2lzdFN0b3JlTWFwJztcbmV4cG9ydCB2YXIgaXNIeWRyYXRlZCA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoX2IgPSAoX2EgPSBQZXJzaXN0U3RvcmVNYXAuZ2V0KHRhcmdldCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pc0h5ZHJhdGVkKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBmYWxzZTtcbn07XG4iLCJpbXBvcnQgeyBQZXJzaXN0U3RvcmVNYXAgfSBmcm9tICcuL1BlcnNpc3RTdG9yZU1hcCc7XG5leHBvcnQgdmFyIGlzUGVyc2lzdGluZyA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIHJldHVybiAoX2IgPSAoX2EgPSBQZXJzaXN0U3RvcmVNYXAuZ2V0KHRhcmdldCkpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5pc1BlcnNpc3RpbmcpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGZhbHNlO1xufTtcbiIsImV4cG9ydCB2YXIgYnVpbGRFeHBpcmVUaW1lc3RhbXAgPSBmdW5jdGlvbiAobWlsbGlzZWNvbmRzKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKCkuZ2V0VGltZSgpICsgbWlsbGlzZWNvbmRzO1xufTtcbmV4cG9ydCB2YXIgaGFzVGltZXN0YW1wRXhwaXJlZCA9IGZ1bmN0aW9uIChtaWxsaXNlY29uZHMpIHtcbiAgICB2YXIgZGF0ZVRpbWVOb3cgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcbiAgICB2YXIgZGF0ZVRpbWVFeHBpcmF0aW9uID0gbmV3IERhdGUobWlsbGlzZWNvbmRzKS5nZXRUaW1lKCk7XG4gICAgcmV0dXJuIGRhdGVUaW1lRXhwaXJhdGlvbiA8PSBkYXRlVGltZU5vdztcbn07XG5leHBvcnQgdmFyIGlzRGVmaW5lZCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB0ICE9IG51bGw7IH07XG4vKipcbiAqIENoZWNrIGlmIHRoZSBkYXRhIGlzIGFuIG9iamVjdC5cbiAqL1xuZXhwb3J0IHZhciBpc09iamVjdCA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4oZGF0YSkgJiYgQXJyYXkuaXNBcnJheShkYXRhKSA9PT0gZmFsc2UgJiYgdHlwZW9mIGRhdGEgPT09ICdvYmplY3QnO1xufTtcbi8qKlxuICogQ2hlY2sgdGhlIGRhdGEgaXMgYW4gb2JqZWN0IHdpdGggcHJvcGVydGllcy5cbiAqL1xuZXhwb3J0IHZhciBpc09iamVjdFdpdGhQcm9wZXJ0aWVzID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoZGF0YSkgJiYgT2JqZWN0LmtleXMoZGF0YSkubGVuZ3RoID4gMDtcbn07XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlc1xuZXhwb3J0IHZhciBpc0Z1bmN0aW9uID0gZnVuY3Rpb24gKGZ1bmN0aW9uVG9DaGVjaykge1xuICAgIHJldHVybiBmdW5jdGlvblRvQ2hlY2sgJiYgZnVuY3Rpb25Ub0NoZWNrIGluc3RhbmNlb2YgRnVuY3Rpb247XG59O1xuZXhwb3J0IHZhciBpc1N0b3JhZ2VDb250cm9sbGVyTGlrZSA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgIC8vIFwidHlwZW9mIFN0b3JhZ2VcIiBmaXhlcyBpc3N1ZSB3aXRoIFJlYWN0IE5hdGl2ZVxuICAgIGlmICh0eXBlb2YgU3RvcmFnZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBTdG9yYWdlKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gW1xuICAgICAgICB2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsdWUuaGFzT3duUHJvcGVydHkoJ2dldEl0ZW0nKSxcbiAgICAgICAgdmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbHVlLmhhc093blByb3BlcnR5KCdyZW1vdmVJdGVtJyksXG4gICAgICAgIHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWx1ZS5oYXNPd25Qcm9wZXJ0eSgnc2V0SXRlbScpLFxuICAgICAgICBpc0Z1bmN0aW9uKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWx1ZS5nZXRJdGVtKSxcbiAgICAgICAgaXNGdW5jdGlvbih2YWx1ZSA9PT0gbnVsbCB8fCB2YWx1ZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdmFsdWUucmVtb3ZlSXRlbSksXG4gICAgICAgIGlzRnVuY3Rpb24odmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbHVlLnNldEl0ZW0pLFxuICAgIF0uZXZlcnkoQm9vbGVhbik7XG59O1xudmFyIGlzQnJvd3NlciA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnO1xudmFyIGlzTm90UHJvZHVjdGlvbkJ1aWxkID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJztcbmV4cG9ydCB2YXIgaW52YWxpZFN0b3JhZ2VBZGFwdG9yV2FybmluZ0lmID0gZnVuY3Rpb24gKHN0b3JhZ2VBZGFwdG9yLCBzdG9yYWdlTmFtZSkge1xuICAgIGlmIChpc0Jyb3dzZXIgJiYgaXNOb3RQcm9kdWN0aW9uQnVpbGQgJiYgIWlzU3RvcmFnZUNvbnRyb2xsZXJMaWtlKHN0b3JhZ2VBZGFwdG9yKSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJtb2J4LXBlcnNpc3Qtc3RvcmU6IFwiLmNvbmNhdChzdG9yYWdlTmFtZSwgXCIgZG9lcyBub3QgaGF2ZSBhIHZhbGlkIHN0b3JhZ2UgYWRhcHRvci5cXG5cXG4qIE1ha2Ugc3VyZSB0aGUgc3RvcmFnZSBjb250cm9sbGVyIGhhcyAnZ2V0SXRlbScsICdzZXRJdGVtJyBhbmQgJ3JlbW92ZUl0ZW0nIG1ldGhvZHMuXFxcIlwiKSk7XG4gICAgfVxufTtcbmV4cG9ydCB2YXIgZHVwbGljYXRlZFN0b3JlV2FybmluZ0lmID0gZnVuY3Rpb24gKGhhc1BlcnNpc3RlZFN0b3JlQWxyZWFkeSwgc3RvcmFnZU5hbWUpIHtcbiAgICBpZiAoaXNCcm93c2VyICYmIGlzTm90UHJvZHVjdGlvbkJ1aWxkICYmIGhhc1BlcnNpc3RlZFN0b3JlQWxyZWFkeSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJtb2J4LXBlcnNpc3Qtc3RvcmU6ICdtYWtlUGVyc2lzdGFibGUnIHdhcyBjYWxsZWQgd2FzIGNhbGxlZCB3aXRoIHRoZSBzYW1lIHN0b3JhZ2UgbmFtZSBcXFwiXCIuY29uY2F0KHN0b3JhZ2VOYW1lLCBcIlxcXCIuXFxuXFxuICogTWFrZSBzdXJlIHlvdSBjYWxsIFxcXCJzdG9wUGVyc2lzdGluZ1xcXCIgYmVmb3JlIHJlY3JlYXRpbmcgXFxcIlwiKS5jb25jYXQoc3RvcmFnZU5hbWUsIFwiXFxcIiB0byBhdm9pZCBtZW1vcnkgbGVha3MuIFxcbiAqIE9yIGRvdWJsZSBjaGVjayB5b3UgZGlkIG5vdCBoYXZlIHR3byBzdG9yZXMgd2l0aCB0aGUgc2FtZSBuYW1lLlwiKSk7XG4gICAgfVxufTtcbmV4cG9ydCB2YXIgY29tcHV0ZWRQZXJzaXN0V2FybmluZ0lmID0gZnVuY3Rpb24gKGlzQ29tcHV0ZWRQcm9wZXJ0eSwgcHJvcGVydHlOYW1lKSB7XG4gICAgaWYgKGlzQnJvd3NlciAmJiBpc05vdFByb2R1Y3Rpb25CdWlsZCAmJiBpc0NvbXB1dGVkUHJvcGVydHkpIHtcbiAgICAgICAgY29uc29sZS53YXJuKFwibW9ieC1wZXJzaXN0LXN0b3JlOiBUaGUgcHJvcGVydHkgJ1wiLmNvbmNhdChwcm9wZXJ0eU5hbWUsIFwiJyBpcyBjb21wdXRlZCBhbmQgd2lsbCBub3QgcGVyc2lzdC5cIikpO1xuICAgIH1cbn07XG5leHBvcnQgdmFyIGFjdGlvblBlcnNpc3RXYXJuaW5nSWYgPSBmdW5jdGlvbiAoaXNDb21wdXRlZFByb3BlcnR5LCBwcm9wZXJ0eU5hbWUpIHtcbiAgICBpZiAoaXNCcm93c2VyICYmIGlzTm90UHJvZHVjdGlvbkJ1aWxkICYmIGlzQ29tcHV0ZWRQcm9wZXJ0eSkge1xuICAgICAgICBjb25zb2xlLndhcm4oXCJtb2J4LXBlcnNpc3Qtc3RvcmU6IFRoZSBwcm9wZXJ0eSAnXCIuY29uY2F0KHByb3BlcnR5TmFtZSwgXCInIGlzIGFuIGFjdGlvbiBhbmQgd2lsbCBub3QgcGVyc2lzdC5cIikpO1xuICAgIH1cbn07XG5leHBvcnQgdmFyIGNvbnNvbGVEZWJ1ZyA9IGZ1bmN0aW9uIChpc0RlYnVnTW9kZSwgbWVzc2FnZSwgY29udGVudCkge1xuICAgIGlmIChjb250ZW50ID09PSB2b2lkIDApIHsgY29udGVudCA9ICcnOyB9XG4gICAgaWYgKGlzRGVidWdNb2RlICYmIGlzQnJvd3NlciAmJiBpc05vdFByb2R1Y3Rpb25CdWlsZCkge1xuICAgICAgICBjb25zb2xlLmluZm8oXCIlYyBtb2J4LXBlcnNpc3Qtc3RvcmU6IChEZWJ1ZyBNb2RlKSBcIi5jb25jYXQobWVzc2FnZSwgXCIgXCIpLCAnYmFja2dyb3VuZDogIzRCOENDNTsgY29sb3I6IGJsYWNrOyBkaXNwbGF5OiBibG9jazsnLCBjb250ZW50KTtcbiAgICB9XG59O1xuZXhwb3J0IHZhciBpc0FycmF5Rm9yTWFwID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZS5ldmVyeShmdW5jdGlvbiAodikgeyByZXR1cm4gQXJyYXkuaXNBcnJheSh2KTsgfSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuaW1wb3J0IHsgYnVpbGRFeHBpcmVUaW1lc3RhbXAsIGNvbnNvbGVEZWJ1ZywgaGFzVGltZXN0YW1wRXhwaXJlZCB9IGZyb20gJy4vdXRpbHMnO1xudmFyIFN0b3JhZ2VBZGFwdGVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIFN0b3JhZ2VBZGFwdGVyKG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5vcHRpb25zID0gb3B0aW9ucztcbiAgICB9XG4gICAgU3RvcmFnZUFkYXB0ZXIucHJvdG90eXBlLnNldEl0ZW0gPSBmdW5jdGlvbiAoa2V5LCBpdGVtKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9iLCBfYywgc3RyaW5naWZ5LCBfZCwgZGVidWdNb2RlLCBkYXRhLCBjb250ZW50O1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfZSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2UubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2IgPSB0aGlzLm9wdGlvbnMsIF9jID0gX2Iuc3RyaW5naWZ5LCBzdHJpbmdpZnkgPSBfYyA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9jLCBfZCA9IF9iLmRlYnVnTW9kZSwgZGVidWdNb2RlID0gX2QgPT09IHZvaWQgMCA/IGZhbHNlIDogX2Q7XG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhID0gdGhpcy5vcHRpb25zLmV4cGlyZUluXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBPYmplY3QuYXNzaWduKHt9LCBpdGVtLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9fbXBzX186IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyZUluVGltZXN0YW1wOiBidWlsZEV4cGlyZVRpbWVzdGFtcCh0aGlzLm9wdGlvbnMuZXhwaXJlSW4pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBpdGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudCA9IHN0cmluZ2lmeSA/IEpTT04uc3RyaW5naWZ5KGRhdGEpIDogZGF0YTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZWJ1ZyhkZWJ1Z01vZGUsIFwiXCIuY29uY2F0KGtleSwgXCIgLSBzZXRJdGVtOlwiKSwgY29udGVudCk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCAoKF9hID0gdGhpcy5vcHRpb25zLnN0b3JhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5zZXRJdGVtKGtleSwgY29udGVudCkpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2Uuc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIFN0b3JhZ2VBZGFwdGVyLnByb3RvdHlwZS5nZXRJdGVtID0gZnVuY3Rpb24gKGtleSkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgX2MsIF9kLCByZW1vdmVPbkV4cGlyYXRpb24sIF9lLCBkZWJ1Z01vZGUsIHN0b3JhZ2VEYXRhLCBwYXJzZWREYXRhLCBoYXNFeHBpcmVkO1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfZikge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2YubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2MgPSB0aGlzLm9wdGlvbnMsIF9kID0gX2MucmVtb3ZlT25FeHBpcmF0aW9uLCByZW1vdmVPbkV4cGlyYXRpb24gPSBfZCA9PT0gdm9pZCAwID8gdHJ1ZSA6IF9kLCBfZSA9IF9jLmRlYnVnTW9kZSwgZGVidWdNb2RlID0gX2UgPT09IHZvaWQgMCA/IGZhbHNlIDogX2U7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCAoKF9hID0gdGhpcy5vcHRpb25zLnN0b3JhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5nZXRJdGVtKGtleSkpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgc3RvcmFnZURhdGEgPSBfZi5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZERhdGEgPSBKU09OLnBhcnNlKHN0b3JhZ2VEYXRhKSB8fCB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcnNlZERhdGEgPSBzdG9yYWdlRGF0YSB8fCB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhc0V4cGlyZWQgPSBoYXNUaW1lc3RhbXBFeHBpcmVkKChfYiA9IHBhcnNlZERhdGEuX19tcHNfXykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmV4cGlyZUluVGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZWJ1ZyhkZWJ1Z01vZGUsIFwiXCIuY29uY2F0KGtleSwgXCIgLSBoYXNFeHBpcmVkXCIpLCBoYXNFeHBpcmVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghKGhhc0V4cGlyZWQgJiYgcmVtb3ZlT25FeHBpcmF0aW9uKSkgcmV0dXJuIFszIC8qYnJlYWsqLywgM107XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnJlbW92ZUl0ZW0oa2V5KV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9mLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9mLmxhYmVsID0gMztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkRGF0YSA9IGhhc0V4cGlyZWQgPyB7fSA6IHBhcnNlZERhdGE7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlRGVidWcoZGVidWdNb2RlLCBcIlwiLmNvbmNhdChrZXksIFwiIC0gKGdldEl0ZW0pOlwiKSwgcGFyc2VkRGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgcGFyc2VkRGF0YV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgU3RvcmFnZUFkYXB0ZXIucHJvdG90eXBlLnJlbW92ZUl0ZW0gPSBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIF9iLCBkZWJ1Z01vZGU7XG4gICAgICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9jKSB7XG4gICAgICAgICAgICAgICAgc3dpdGNoIChfYy5sYWJlbCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYiA9IHRoaXMub3B0aW9ucy5kZWJ1Z01vZGUsIGRlYnVnTW9kZSA9IF9iID09PSB2b2lkIDAgPyBmYWxzZSA6IF9iO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZURlYnVnKGRlYnVnTW9kZSwgXCJcIi5jb25jYXQoa2V5LCBcIiAtIChyZW1vdmVJdGVtKTogc3RvcmFnZSB3YXMgcmVtb3ZlZFwiKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCAoKF9hID0gdGhpcy5vcHRpb25zLnN0b3JhZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yZW1vdmVJdGVtKGtleSkpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2Muc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuICAgIHJldHVybiBTdG9yYWdlQWRhcHRlcjtcbn0oKSk7XG5leHBvcnQgeyBTdG9yYWdlQWRhcHRlciB9O1xuIiwiaW1wb3J0IHsgbXBzQ29uZmlnIH0gZnJvbSAnLi9jb25maWd1cmVQZXJzaXN0YWJsZSc7XG5pbXBvcnQgeyBjb25zb2xlRGVidWcsIGlzT2JqZWN0IH0gZnJvbSAnLi91dGlscyc7XG52YXIgaXNTZXJpYWxpemFibGVQcm9wZXJ0eSA9IGZ1bmN0aW9uIChvYmopIHtcbiAgICB2YXIga2V5cyA9IFsna2V5JywgJ3NlcmlhbGl6ZScsICdkZXNlcmlhbGl6ZSddO1xuICAgIGlmICghaXNPYmplY3Qob2JqKSkge1xuICAgICAgICBjb25zb2xlRGVidWcoISFtcHNDb25maWcuZGVidWdNb2RlLCAncGFzc2VkIHZhbHVlIGlzIG5vdCBhbiBvYmplY3QnLCB7IG9iajogb2JqIH0pO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBrZXlzLmV2ZXJ5KGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrZXkpICYmIHR5cGVvZiBrZXkgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICA7XG4gICAgICAgIGNvbnNvbGVEZWJ1ZyghIW1wc0NvbmZpZy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KGtleSwgXCIgbm90IGZvdW5kIGluIFNlcmlhbGl6YWJsZVByb3BlcnR5XCIpLCB7IGtleToga2V5LCBvYmo6IG9iaiB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xufTtcbmV4cG9ydCB2YXIgbWFrZVNlcmlhbGl6YWJsZVByb3BlcnRpZXMgPSBmdW5jdGlvbiAocHJvcGVydGllcykge1xuICAgIHJldHVybiBwcm9wZXJ0aWVzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyKSB7XG4gICAgICAgIGlmICh0eXBlb2YgY3VyciA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIGFjYy5wdXNoKHtcbiAgICAgICAgICAgICAgICBrZXk6IGN1cnIsXG4gICAgICAgICAgICAgICAgc2VyaWFsaXplOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9LFxuICAgICAgICAgICAgICAgIGRlc2VyaWFsaXplOiBmdW5jdGlvbiAodmFsdWUpIHsgcmV0dXJuIHZhbHVlOyB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2VyaWFsaXphYmxlUHJvcGVydHkoY3VycikpIHtcbiAgICAgICAgICAgIGFjYy5wdXNoKGN1cnIpO1xuICAgICAgICAgICAgcmV0dXJuIGFjYztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIFtdKTtcbn07XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7XG4gICAgdmFyIF8gPSB7IGxhYmVsOiAwLCBzZW50OiBmdW5jdGlvbigpIHsgaWYgKHRbMF0gJiAxKSB0aHJvdyB0WzFdOyByZXR1cm4gdFsxXTsgfSwgdHJ5czogW10sIG9wczogW10gfSwgZiwgeSwgdCwgZztcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcbiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH1cbiAgICBmdW5jdGlvbiBzdGVwKG9wKSB7XG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcbiAgICAgICAgd2hpbGUgKF8pIHRyeSB7XG4gICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5W1wicmV0dXJuXCJdIDogb3BbMF0gPyB5W1widGhyb3dcIl0gfHwgKCh0ID0geVtcInJldHVyblwiXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7XG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XG4gICAgICAgICAgICBzd2l0Y2ggKG9wWzBdKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7XG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcbiAgICAgICAgICAgICAgICBjYXNlIDU6IF8ubGFiZWwrKzsgeSA9IG9wWzFdOyBvcCA9IFswXTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGlmICghKHQgPSBfLnRyeXMsIHQgPSB0Lmxlbmd0aCA+IDAgJiYgdFt0Lmxlbmd0aCAtIDFdKSAmJiAob3BbMF0gPT09IDYgfHwgb3BbMF0gPT09IDIpKSB7IF8gPSAwOyBjb250aW51ZTsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKHQgJiYgXy5sYWJlbCA8IHRbMl0pIHsgXy5sYWJlbCA9IHRbMl07IF8ub3BzLnB1c2gob3ApOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7XG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTtcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxuICAgICAgICBpZiAob3BbMF0gJiA1KSB0aHJvdyBvcFsxXTsgcmV0dXJuIHsgdmFsdWU6IG9wWzBdID8gb3BbMV0gOiB2b2lkIDAsIGRvbmU6IHRydWUgfTtcbiAgICB9XG59O1xuaW1wb3J0IHsgYWN0aW9uLCBpc0FjdGlvbiwgaXNDb21wdXRlZFByb3AsIG1ha2VPYnNlcnZhYmxlLCBvYnNlcnZhYmxlLCBPYnNlcnZhYmxlTWFwLCByZWFjdGlvbiwgcnVuSW5BY3Rpb24sIHRvSlMsIH0gZnJvbSAnbW9ieCc7XG5pbXBvcnQgeyBQZXJzaXN0U3RvcmVNYXAgfSBmcm9tICcuL1BlcnNpc3RTdG9yZU1hcCc7XG5pbXBvcnQgeyBTdG9yYWdlQWRhcHRlciB9IGZyb20gJy4vU3RvcmFnZUFkYXB0ZXInO1xuaW1wb3J0IHsgbXBzQ29uZmlnLCBtcHNSZWFjdGlvbk9wdGlvbnMgfSBmcm9tICcuL2NvbmZpZ3VyZVBlcnNpc3RhYmxlJztcbmltcG9ydCB7IG1ha2VTZXJpYWxpemFibGVQcm9wZXJ0aWVzIH0gZnJvbSAnLi9zZXJpYWxpemFibGVQcm9wZXJ0eSc7XG5pbXBvcnQgeyBhY3Rpb25QZXJzaXN0V2FybmluZ0lmLCBjb21wdXRlZFBlcnNpc3RXYXJuaW5nSWYsIGNvbnNvbGVEZWJ1ZywgaW52YWxpZFN0b3JhZ2VBZGFwdG9yV2FybmluZ0lmLCBpc0FycmF5Rm9yTWFwLCB9IGZyb20gJy4vdXRpbHMnO1xudmFyIFBlcnNpc3RTdG9yZSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQZXJzaXN0U3RvcmUodGFyZ2V0LCBvcHRpb25zLCByZWFjdGlvbk9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHJlYWN0aW9uT3B0aW9ucyA9PT0gdm9pZCAwKSB7IHJlYWN0aW9uT3B0aW9ucyA9IHt9OyB9XG4gICAgICAgIHZhciBfYSwgX2IsIF9jLCBfZCwgX2UsIF9mLCBfZztcbiAgICAgICAgdGhpcy5jYW5jZWxXYXRjaCA9IG51bGw7XG4gICAgICAgIHRoaXMucHJvcGVydGllcyA9IFtdO1xuICAgICAgICB0aGlzLnJlYWN0aW9uT3B0aW9ucyA9IHt9O1xuICAgICAgICB0aGlzLnN0b3JhZ2VBZGFwdGVyID0gbnVsbDtcbiAgICAgICAgdGhpcy50YXJnZXQgPSBudWxsO1xuICAgICAgICB0aGlzLmRlYnVnTW9kZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzSHlkcmF0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5pc1BlcnNpc3RpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdG9yYWdlTmFtZSA9ICcnO1xuICAgICAgICB0aGlzLnRhcmdldCA9IHRhcmdldDtcbiAgICAgICAgdGhpcy5zdG9yYWdlTmFtZSA9IG9wdGlvbnMubmFtZTtcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0gbWFrZVNlcmlhbGl6YWJsZVByb3BlcnRpZXMob3B0aW9ucy5wcm9wZXJ0aWVzKTtcbiAgICAgICAgdGhpcy5yZWFjdGlvbk9wdGlvbnMgPSBPYmplY3QuYXNzaWduKHsgZmlyZUltbWVkaWF0ZWx5OiB0cnVlIH0sIG1wc1JlYWN0aW9uT3B0aW9ucywgcmVhY3Rpb25PcHRpb25zKTtcbiAgICAgICAgdGhpcy5kZWJ1Z01vZGUgPSAoX2IgPSAoX2EgPSBvcHRpb25zLmRlYnVnTW9kZSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogbXBzQ29uZmlnLmRlYnVnTW9kZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogZmFsc2U7XG4gICAgICAgIHRoaXMuc3RvcmFnZUFkYXB0ZXIgPSBuZXcgU3RvcmFnZUFkYXB0ZXIoe1xuICAgICAgICAgICAgZXhwaXJlSW46IChfYyA9IG9wdGlvbnMuZXhwaXJlSW4pICE9PSBudWxsICYmIF9jICE9PSB2b2lkIDAgPyBfYyA6IG1wc0NvbmZpZy5leHBpcmVJbixcbiAgICAgICAgICAgIHJlbW92ZU9uRXhwaXJhdGlvbjogKF9lID0gKF9kID0gb3B0aW9ucy5yZW1vdmVPbkV4cGlyYXRpb24pICE9PSBudWxsICYmIF9kICE9PSB2b2lkIDAgPyBfZCA6IG1wc0NvbmZpZy5yZW1vdmVPbkV4cGlyYXRpb24pICE9PSBudWxsICYmIF9lICE9PSB2b2lkIDAgPyBfZSA6IHRydWUsXG4gICAgICAgICAgICBzdHJpbmdpZnk6IChfZyA9IChfZiA9IG9wdGlvbnMuc3RyaW5naWZ5KSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBtcHNDb25maWcuc3RyaW5naWZ5KSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiB0cnVlLFxuICAgICAgICAgICAgc3RvcmFnZTogb3B0aW9ucy5zdG9yYWdlID8gb3B0aW9ucy5zdG9yYWdlIDogbXBzQ29uZmlnLnN0b3JhZ2UsXG4gICAgICAgICAgICBkZWJ1Z01vZGU6IHRoaXMuZGVidWdNb2RlLFxuICAgICAgICB9KTtcbiAgICAgICAgbWFrZU9ic2VydmFibGUodGhpcywge1xuICAgICAgICAgICAgY2xlYXJQZXJzaXN0ZWRTdG9yZTogYWN0aW9uLFxuICAgICAgICAgICAgaHlkcmF0ZVN0b3JlOiBhY3Rpb24sXG4gICAgICAgICAgICBpc0h5ZHJhdGVkOiBvYnNlcnZhYmxlLFxuICAgICAgICAgICAgaXNQZXJzaXN0aW5nOiBvYnNlcnZhYmxlLFxuICAgICAgICAgICAgcGF1c2VQZXJzaXN0aW5nOiBhY3Rpb24sXG4gICAgICAgICAgICBzdGFydFBlcnNpc3Rpbmc6IGFjdGlvbixcbiAgICAgICAgICAgIHN0b3BQZXJzaXN0aW5nOiBhY3Rpb24sXG4gICAgICAgIH0sIHsgYXV0b0JpbmQ6IHRydWUsIGRlZXA6IGZhbHNlIH0pO1xuICAgICAgICBpbnZhbGlkU3RvcmFnZUFkYXB0b3JXYXJuaW5nSWYodGhpcy5zdG9yYWdlQWRhcHRlci5vcHRpb25zLnN0b3JhZ2UsIHRoaXMuc3RvcmFnZU5hbWUpO1xuICAgICAgICBjb25zb2xlRGVidWcodGhpcy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KHRoaXMuc3RvcmFnZU5hbWUsIFwiIC0gKG1ha2VQZXJzaXN0YWJsZSlcIiksIHtcbiAgICAgICAgICAgIHByb3BlcnRpZXM6IHRoaXMucHJvcGVydGllcyxcbiAgICAgICAgICAgIHN0b3JhZ2VBZGFwdGVyOiB0aGlzLnN0b3JhZ2VBZGFwdGVyLFxuICAgICAgICAgICAgcmVhY3Rpb25PcHRpb25zOiB0aGlzLnJlYWN0aW9uT3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIFBlcnNpc3RTdG9yZS5wcm90b3R5cGUuaW5pdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAwOiByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLmh5ZHJhdGVTdG9yZSgpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydFBlcnNpc3RpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovLCB0aGlzXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBQZXJzaXN0U3RvcmUucHJvdG90eXBlLmh5ZHJhdGVTdG9yZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGlzQmVpbmdXYXRjaGVkLCBkYXRhXzEsIHRhcmdldF8xO1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzQmVpbmdXYXRjaGVkID0gQm9vbGVhbih0aGlzLmNhbmNlbFdhdGNoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzUGVyc2lzdGluZykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucGF1c2VQZXJzaXN0aW5nKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBydW5JbkFjdGlvbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3RoaXMuaXNIeWRyYXRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZWJ1ZyhfdGhpcy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KF90aGlzLnN0b3JhZ2VOYW1lLCBcIiAtIChoeWRyYXRlU3RvcmUpIGlzSHlkcmF0ZWQ6XCIpLCBfdGhpcy5pc0h5ZHJhdGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEodGhpcy5zdG9yYWdlQWRhcHRlciAmJiB0aGlzLnRhcmdldCkpIHJldHVybiBbMyAvKmJyZWFrKi8sIDJdO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFs0IC8qeWllbGQqLywgdGhpcy5zdG9yYWdlQWRhcHRlci5nZXRJdGVtKHRoaXMuc3RvcmFnZU5hbWUpXTtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YV8xID0gX2Euc2VudCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0XzEgPSB0aGlzLnRhcmdldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhXzEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydW5JbkFjdGlvbihmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLnByb3BlcnRpZXMuZm9yRWFjaChmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBhbGxvd1Byb3BlcnR5SHlkcmF0aW9uID0gW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldF8xLmhhc093blByb3BlcnR5KHByb3BlcnR5LmtleSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGRhdGFfMVtwcm9wZXJ0eS5rZXldICE9PSAndW5kZWZpbmVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0uZXZlcnkoQm9vbGVhbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWxsb3dQcm9wZXJ0eUh5ZHJhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwcm9wZXJ0eURhdGEgPSBkYXRhXzFbcHJvcGVydHkua2V5XTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0XzFbcHJvcGVydHkua2V5XSBpbnN0YW5jZW9mIE9ic2VydmFibGVNYXAgJiYgaXNBcnJheUZvck1hcChwcm9wZXJ0eURhdGEpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldF8xW3Byb3BlcnR5LmtleV0gPSBwcm9wZXJ0eS5kZXNlcmlhbGl6ZShuZXcgTWFwKHByb3BlcnR5RGF0YSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0XzFbcHJvcGVydHkua2V5XSA9IHByb3BlcnR5LmRlc2VyaWFsaXplKHByb3BlcnR5RGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLmxhYmVsID0gMjtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgICAgICAgICAgcnVuSW5BY3Rpb24oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmlzSHlkcmF0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZWJ1ZyhfdGhpcy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KF90aGlzLnN0b3JhZ2VOYW1lLCBcIiAtIGlzSHlkcmF0ZWQ6XCIpLCBfdGhpcy5pc0h5ZHJhdGVkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzQmVpbmdXYXRjaGVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGFydFBlcnNpc3RpbmcoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbMiAvKnJldHVybiovXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBQZXJzaXN0U3RvcmUucHJvdG90eXBlLnN0YXJ0UGVyc2lzdGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKCF0aGlzLnN0b3JhZ2VBZGFwdGVyIHx8ICF0aGlzLnRhcmdldCB8fCB0aGlzLmNhbmNlbFdhdGNoKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8gUmVhc3NpZ25pbmcgc28gVHlwZVNjcmlwdCBkb2Vzbid0IGNvbXBsYWluIChPYmplY3QgaXMgcG9zc2libHkgJ251bGwnKSBhYm91dCBhbmQgdGhpcy50YXJnZXQgd2l0aGluIHJlYWN0aW9uXG4gICAgICAgIHZhciB0YXJnZXQgPSB0aGlzLnRhcmdldDtcbiAgICAgICAgdGhpcy5jYW5jZWxXYXRjaCA9IHJlYWN0aW9uKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHZhciBwcm9wZXJ0aWVzVG9XYXRjaCA9IHt9O1xuICAgICAgICAgICAgX3RoaXMucHJvcGVydGllcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICAgICAgICAgICAgICAgIHZhciBpc0NvbXB1dGVkUHJvcGVydHkgPSBpc0NvbXB1dGVkUHJvcCh0YXJnZXQsIHByb3BlcnR5LmtleSk7XG4gICAgICAgICAgICAgICAgdmFyIGlzQWN0aW9uUHJvcGVydHkgPSBpc0FjdGlvbih0YXJnZXRbcHJvcGVydHkua2V5XSk7XG4gICAgICAgICAgICAgICAgY29tcHV0ZWRQZXJzaXN0V2FybmluZ0lmKGlzQ29tcHV0ZWRQcm9wZXJ0eSwgU3RyaW5nKHByb3BlcnR5LmtleSkpO1xuICAgICAgICAgICAgICAgIGFjdGlvblBlcnNpc3RXYXJuaW5nSWYoaXNBY3Rpb25Qcm9wZXJ0eSwgU3RyaW5nKHByb3BlcnR5LmtleSkpO1xuICAgICAgICAgICAgICAgIGlmICghaXNDb21wdXRlZFByb3BlcnR5ICYmICFpc0FjdGlvblByb3BlcnR5KSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBwcm9wZXJ0eURhdGEgPSBwcm9wZXJ0eS5zZXJpYWxpemUodGFyZ2V0W3Byb3BlcnR5LmtleV0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvcGVydHlEYXRhIGluc3RhbmNlb2YgT2JzZXJ2YWJsZU1hcCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIG1hcEFycmF5XzEgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnR5RGF0YS5mb3JFYWNoKGZ1bmN0aW9uICh2LCBrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFwQXJyYXlfMS5wdXNoKFtrLCB0b0pTKHYpXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnR5RGF0YSA9IG1hcEFycmF5XzE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcHJvcGVydGllc1RvV2F0Y2hbcHJvcGVydHkua2V5XSA9IHRvSlMocHJvcGVydHlEYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBwcm9wZXJ0aWVzVG9XYXRjaDtcbiAgICAgICAgfSwgZnVuY3Rpb24gKGRhdGFUb1NhdmUpIHsgcmV0dXJuIF9fYXdhaXRlcihfdGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5zdG9yYWdlQWRhcHRlcikgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzQgLyp5aWVsZCovLCB0aGlzLnN0b3JhZ2VBZGFwdGVyLnNldEl0ZW0odGhpcy5zdG9yYWdlTmFtZSwgZGF0YVRvU2F2ZSldO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5zZW50KCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBfYS5sYWJlbCA9IDI7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTsgfSwgdGhpcy5yZWFjdGlvbk9wdGlvbnMpO1xuICAgICAgICB0aGlzLmlzUGVyc2lzdGluZyA9IHRydWU7XG4gICAgICAgIGNvbnNvbGVEZWJ1Zyh0aGlzLmRlYnVnTW9kZSwgXCJcIi5jb25jYXQodGhpcy5zdG9yYWdlTmFtZSwgXCIgLSAoc3RhcnRQZXJzaXN0aW5nKSBpc1BlcnNpc3Rpbmc6XCIpLCB0aGlzLmlzUGVyc2lzdGluZyk7XG4gICAgfTtcbiAgICBQZXJzaXN0U3RvcmUucHJvdG90eXBlLnBhdXNlUGVyc2lzdGluZyA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5pc1BlcnNpc3RpbmcgPSBmYWxzZTtcbiAgICAgICAgY29uc29sZURlYnVnKHRoaXMuZGVidWdNb2RlLCBcIlwiLmNvbmNhdCh0aGlzLnN0b3JhZ2VOYW1lLCBcIiAtIHBhdXNlUGVyc2lzdGluZyAoaXNQZXJzaXN0aW5nKTpcIiksIHRoaXMuaXNQZXJzaXN0aW5nKTtcbiAgICAgICAgaWYgKHRoaXMuY2FuY2VsV2F0Y2gpIHtcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsV2F0Y2goKTtcbiAgICAgICAgICAgIHRoaXMuY2FuY2VsV2F0Y2ggPSBudWxsO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBQZXJzaXN0U3RvcmUucHJvdG90eXBlLnN0b3BQZXJzaXN0aW5nID0gZnVuY3Rpb24gKCkge1xuICAgICAgICB0aGlzLnBhdXNlUGVyc2lzdGluZygpO1xuICAgICAgICBjb25zb2xlRGVidWcodGhpcy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KHRoaXMuc3RvcmFnZU5hbWUsIFwiIC0gKHN0b3BQZXJzaXN0aW5nKVwiKSk7XG4gICAgICAgIFBlcnNpc3RTdG9yZU1hcC5kZWxldGUodGhpcy50YXJnZXQpO1xuICAgICAgICB0aGlzLmNhbmNlbFdhdGNoID0gbnVsbDtcbiAgICAgICAgdGhpcy5wcm9wZXJ0aWVzID0gW107XG4gICAgICAgIHRoaXMucmVhY3Rpb25PcHRpb25zID0ge307XG4gICAgICAgIHRoaXMuc3RvcmFnZUFkYXB0ZXIgPSBudWxsO1xuICAgICAgICB0aGlzLnRhcmdldCA9IG51bGw7XG4gICAgfTtcbiAgICBQZXJzaXN0U3RvcmUucHJvdG90eXBlLmNsZWFyUGVyc2lzdGVkU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKF9hLmxhYmVsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5zdG9yYWdlQWRhcHRlcikgcmV0dXJuIFszIC8qYnJlYWsqLywgMl07XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlRGVidWcodGhpcy5kZWJ1Z01vZGUsIFwiXCIuY29uY2F0KHRoaXMuc3RvcmFnZU5hbWUsIFwiIC0gKGNsZWFyUGVyc2lzdGVkU3RvcmUpXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIHRoaXMuc3RvcmFnZUFkYXB0ZXIucmVtb3ZlSXRlbSh0aGlzLnN0b3JhZ2VOYW1lKV07XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLmxhYmVsID0gMjtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAyOiByZXR1cm4gWzIgLypyZXR1cm4qL107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgUGVyc2lzdFN0b3JlLnByb3RvdHlwZS5nZXRQZXJzaXN0ZWRTdG9yZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIF9fZ2VuZXJhdG9yKHRoaXMsIGZ1bmN0aW9uIChfYSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLnN0b3JhZ2VBZGFwdGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGVEZWJ1Zyh0aGlzLmRlYnVnTW9kZSwgXCJcIi5jb25jYXQodGhpcy5zdG9yYWdlTmFtZSwgXCIgLSAoZ2V0UGVyc2lzdGVkU3RvcmUpXCIpKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgdGhpcy5zdG9yYWdlQWRhcHRlci5nZXRJdGVtKHRoaXMuc3RvcmFnZU5hbWUpXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi8sIG51bGxdO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFBlcnNpc3RTdG9yZTtcbn0oKSk7XG5leHBvcnQgeyBQZXJzaXN0U3RvcmUgfTtcbiIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xudmFyIF9fZ2VuZXJhdG9yID0gKHRoaXMgJiYgdGhpcy5fX2dlbmVyYXRvcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIGJvZHkpIHtcbiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnO1xuICAgIHJldHVybiBnID0geyBuZXh0OiB2ZXJiKDApLCBcInRocm93XCI6IHZlcmIoMSksIFwicmV0dXJuXCI6IHZlcmIoMikgfSwgdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIChnW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbigpIHsgcmV0dXJuIHRoaXM7IH0pLCBnO1xuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxuICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHtcbiAgICAgICAgaWYgKGYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO1xuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcbiAgICAgICAgICAgIGlmIChmID0gMSwgeSAmJiAodCA9IG9wWzBdICYgMiA/IHlbXCJyZXR1cm5cIl0gOiBvcFswXSA/IHlbXCJ0aHJvd1wiXSB8fCAoKHQgPSB5W1wicmV0dXJuXCJdKSAmJiB0LmNhbGwoeSksIDApIDogeS5uZXh0KSAmJiAhKHQgPSB0LmNhbGwoeSwgb3BbMV0pKS5kb25lKSByZXR1cm4gdDtcbiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTtcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcbiAgICAgICAgICAgICAgICBjYXNlIDA6IGNhc2UgMTogdCA9IG9wOyBicmVhaztcbiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9O1xuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcbiAgICAgICAgICAgICAgICBjYXNlIDc6IG9wID0gXy5vcHMucG9wKCk7IF8udHJ5cy5wb3AoKTsgY29udGludWU7XG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gMyAmJiAoIXQgfHwgKG9wWzFdID4gdFswXSAmJiBvcFsxXSA8IHRbM10pKSkgeyBfLmxhYmVsID0gb3BbMV07IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfVxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XG4gICAgICAgICAgICAgICAgICAgIGlmICh0WzJdKSBfLm9wcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wID0gYm9keS5jYWxsKHRoaXNBcmcsIF8pO1xuICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9XG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xuICAgIH1cbn07XG5pbXBvcnQgeyBQZXJzaXN0U3RvcmUgfSBmcm9tICcuL1BlcnNpc3RTdG9yZSc7XG5pbXBvcnQgeyBQZXJzaXN0U3RvcmVNYXAgfSBmcm9tICcuL1BlcnNpc3RTdG9yZU1hcCc7XG5pbXBvcnQgeyBkdXBsaWNhdGVkU3RvcmVXYXJuaW5nSWYgfSBmcm9tICcuL3V0aWxzJztcbmV4cG9ydCB2YXIgbWFrZVBlcnNpc3RhYmxlID0gZnVuY3Rpb24gKHRhcmdldCwgc3RvcmFnZU9wdGlvbnMsIHJlYWN0aW9uT3B0aW9ucykgeyByZXR1cm4gX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbW9ieFBlcnNpc3RTdG9yZSwgaGFzUGVyc2lzdGVkU3RvcmVBbHJlYWR5O1xuICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcbiAgICAgICAgbW9ieFBlcnNpc3RTdG9yZSA9IG5ldyBQZXJzaXN0U3RvcmUodGFyZ2V0LCBzdG9yYWdlT3B0aW9ucywgcmVhY3Rpb25PcHRpb25zKTtcbiAgICAgICAgaGFzUGVyc2lzdGVkU3RvcmVBbHJlYWR5ID0gQXJyYXkuZnJvbShQZXJzaXN0U3RvcmVNYXAudmFsdWVzKCkpXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChpdGVtKSB7IHJldHVybiBpdGVtLnN0b3JhZ2VOYW1lOyB9KVxuICAgICAgICAgICAgLmluY2x1ZGVzKG1vYnhQZXJzaXN0U3RvcmUuc3RvcmFnZU5hbWUpO1xuICAgICAgICBkdXBsaWNhdGVkU3RvcmVXYXJuaW5nSWYoaGFzUGVyc2lzdGVkU3RvcmVBbHJlYWR5LCBtb2J4UGVyc2lzdFN0b3JlLnN0b3JhZ2VOYW1lKTtcbiAgICAgICAgUGVyc2lzdFN0b3JlTWFwLnNldCh0YXJnZXQsIG1vYnhQZXJzaXN0U3RvcmUpO1xuICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgbW9ieFBlcnNpc3RTdG9yZS5pbml0KCldO1xuICAgIH0pO1xufSk7IH07XG4iLCJpbXBvcnQgeyBQZXJzaXN0U3RvcmVNYXAgfSBmcm9tICcuL1BlcnNpc3RTdG9yZU1hcCc7XG5leHBvcnQgdmFyIHBhdXNlUGVyc2lzdGluZyA9IGZ1bmN0aW9uICh0YXJnZXQpIHtcbiAgICB2YXIgX2E7XG4gICAgKF9hID0gUGVyc2lzdFN0b3JlTWFwLmdldCh0YXJnZXQpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucGF1c2VQZXJzaXN0aW5nKCk7XG59O1xuIiwiaW1wb3J0IHsgUGVyc2lzdFN0b3JlTWFwIH0gZnJvbSAnLi9QZXJzaXN0U3RvcmVNYXAnO1xuZXhwb3J0IHZhciBzdGFydFBlcnNpc3RpbmcgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgdmFyIF9hO1xuICAgIChfYSA9IFBlcnNpc3RTdG9yZU1hcC5nZXQodGFyZ2V0KSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnN0YXJ0UGVyc2lzdGluZygpO1xufTtcbiIsImltcG9ydCB7IFBlcnNpc3RTdG9yZU1hcCB9IGZyb20gJy4vUGVyc2lzdFN0b3JlTWFwJztcbmV4cG9ydCB2YXIgc3RvcFBlcnNpc3RpbmcgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgdmFyIF9hO1xuICAgIChfYSA9IFBlcnNpc3RTdG9yZU1hcC5nZXQodGFyZ2V0KSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnN0b3BQZXJzaXN0aW5nKCk7XG59O1xuIiwiZXhwb3J0ICogZnJvbSAnLi9jbGVhclBlcnNpc3RlZFN0b3JlJztcbmV4cG9ydCAqIGZyb20gJy4vY29uZmlndXJlUGVyc2lzdGFibGUnO1xuZXhwb3J0ICogZnJvbSAnLi9nZXRQZXJzaXN0ZWRTdG9yZSc7XG5leHBvcnQgKiBmcm9tICcuL2h5ZHJhdGVTdG9yZSc7XG5leHBvcnQgKiBmcm9tICcuL2lzSHlkcmF0ZWQnO1xuZXhwb3J0ICogZnJvbSAnLi9pc1BlcnNpc3RpbmcnO1xuZXhwb3J0ICogZnJvbSAnLi9tYWtlUGVyc2lzdGFibGUnO1xuZXhwb3J0ICogZnJvbSAnLi9wYXVzZVBlcnNpc3RpbmcnO1xuZXhwb3J0ICogZnJvbSAnLi9QZXJzaXN0U3RvcmUnO1xuZXhwb3J0ICogZnJvbSAnLi9QZXJzaXN0U3RvcmVNYXAnO1xuZXhwb3J0ICogZnJvbSAnLi9zdGFydFBlcnNpc3RpbmcnO1xuZXhwb3J0ICogZnJvbSAnLi9zdG9wUGVyc2lzdGluZyc7XG5leHBvcnQgKiBmcm9tICcuL1N0b3JhZ2VBZGFwdGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdHlwZXMnO1xuIiwiaW1wb3J0IHsgYWN0aW9uLCBtYWtlT2JzZXJ2YWJsZSwgb2JzZXJ2YWJsZSB9IGZyb20gJ21vYngnO1xuaW1wb3J0IHsgbWFrZVBlcnNpc3RhYmxlLCBzdG9wUGVyc2lzdGluZyB9IGZyb20gJ21vYngtcGVyc2lzdC1zdG9yZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VTdG9yZTxUPiB7XG4gICAgZGF0YTogVCB8IHVuZGVmaW5lZCA9IHVuZGVmaW5lZDtcblxuICAgIGNvbnN0cnVjdG9yKG5hbWU6IHN0cmluZywgb25IeWRyYXRpb25Eb25lPzogVm9pZEZ1bmN0aW9uKSB7XG4gICAgICAgIG1ha2VPYnNlcnZhYmxlKHRoaXMsIHtcbiAgICAgICAgICAgIGRhdGE6IG9ic2VydmFibGUsXG4gICAgICAgICAgICB1cGRhdGU6IGFjdGlvbi5ib3VuZCxcbiAgICAgICAgICAgIHVubW91bnQ6IGFjdGlvbi5ib3VuZCxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWFrZVBlcnNpc3RhYmxlKHRoaXMsIHsgbmFtZSwgcHJvcGVydGllczogWydkYXRhJ10sIHN0b3JhZ2U6IHdpbmRvdy5sb2NhbFN0b3JhZ2UgfSkudGhlbigoKSA9PlxuICAgICAgICAgICAgb25IeWRyYXRpb25Eb25lPy4oKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHVwZGF0ZShkYXRhOiBOb25OdWxsYWJsZTxUPiB8ICgocHJldmlvdXM/OiBUKSA9PiBOb25OdWxsYWJsZTxUPikpIHtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YSBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gZGF0YSh0aGlzLmRhdGEpIDogZGF0YTtcbiAgICB9XG5cbiAgICB1bm1vdW50KCkge1xuICAgICAgICBzdG9wUGVyc2lzdGluZyh0aGlzKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgQmFzZVN0b3JlIGZyb20gJy4vQmFzZVN0b3JlJztcblxuY29uc3QgRkxBR1MgPSB7XG4gICAgd2FsbGV0OiBmYWxzZSxcbiAgICBuZXh0X3dhbGxldDogZmFsc2UsXG4gICAgc2hhcmtmaW46IGZhbHNlLFxufSBzYXRpc2ZpZXMgUmVjb3JkPHN0cmluZywgYm9vbGVhbj47XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZlYXR1cmVGbGFnc1N0b3JlIGV4dGVuZHMgQmFzZVN0b3JlPHsgW2sgaW4ga2V5b2YgdHlwZW9mIEZMQUdTXTogYm9vbGVhbiB9PiB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCdGZWF0dXJlRmxhZ3NTdG9yZScsICgpID0+IHtcbiAgICAgICAgICAgIC8vIFNldCB0aGUgZGVmYXVsdCB2YWx1ZXMgZm9yIHRoZSBmaXJzdCB0aW1lLlxuICAgICAgICAgICAgaWYgKCF0aGlzLmRhdGEpIHRoaXMudXBkYXRlKEZMQUdTKTtcblxuICAgICAgICAgICAgLy8gVXBkYXRlIHRoZSBzdG9yZSBkYXRhIGlmIGEgbmV3IGZsYWcgd2FzIGFkZGVkIG9yIHJlbW92ZWQuXG4gICAgICAgICAgICBpZiAodGhpcy5kYXRhICYmIE9iamVjdC5rZXlzKHRoaXMuZGF0YSkubGVuZ3RoICE9PSBPYmplY3Qua2V5cyhGTEFHUykubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGUob2xkID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEZMQUdTO1xuXG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKEZMQUdTKS5mb3JFYWNoKGZsYWcgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBmbGFnIGtleSBpcyBhbHdheXMgcHJlc2VudCBpbiB0aGUgb2JqZWN0LCBIZW5jZSBjYW4gaWdub3JlIHRoZSBUUyBlcnJvci5cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbGRbZmxhZ10gIT09IHVuZGVmaW5lZCkgZGF0YVtmbGFnXSA9IG9sZFtmbGFnXTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMuZGF0YSA9IEZMQUdTO1xuICAgIH1cbn1cbiIsImV4cG9ydCB7IGRlZmF1bHQgYXMgRmVhdHVyZUZsYWdzU3RvcmUgfSBmcm9tICcuL0ZlYXR1cmVGbGFnc1N0b3JlJztcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZU1lbW8gfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBBUElQcm92aWRlciB9IGZyb20gJ0BkZXJpdi9hcGknO1xuaW1wb3J0IFN0b3JlQ29udGV4dCBmcm9tICcuL3N0b3JlQ29udGV4dCc7XG5pbXBvcnQgeyBGZWF0dXJlRmxhZ3NTdG9yZSB9IGZyb20gJy4vc3RvcmVzJztcbmltcG9ydCB0eXBlIHsgVENvcmVTdG9yZXMsIFRTdG9yZXMgfSBmcm9tICcuLi90eXBlcyc7XG5cbmNvbnN0IFN0b3JlUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiwgc3RvcmUgfTogUmVhY3QuUHJvcHNXaXRoQ2hpbGRyZW48eyBzdG9yZTogVENvcmVTdG9yZXMgfT4pID0+IHtcbiAgICBjb25zdCBtZW1vaXplZFZhbHVlOiBUU3RvcmVzID0gdXNlTWVtbygoKSA9PiB7XG4gICAgICAgIC8vIElmIHRoZSBzdG9yZSBpcyBtb2NrZWQgZm9yIHRlc3RpbmcgcHVycG9zZXMsIHRoZW4gcmV0dXJuIHRoZSBtb2NrZWQgdmFsdWUuXG4gICAgICAgIGlmICgnaXNfbW9jaycgaW4gc3RvcmUgJiYgc3RvcmUuaXNfbW9jaykgcmV0dXJuIHN0b3JlIGFzIHVua25vd24gYXMgVFN0b3JlcztcblxuICAgICAgICAvLyBPdGhlcndpc2UsIGluc3RhbnRpYXRlIHN0b3JlIGFuZCByZXR1cm4gaXQuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdG9yZSxcbiAgICAgICAgICAgIGZlYXR1cmVfZmxhZ3M6IG5ldyBGZWF0dXJlRmxhZ3NTdG9yZSgpLFxuICAgICAgICB9O1xuICAgIH0sIFtzdG9yZV0pO1xuXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIE9iamVjdC52YWx1ZXMobWVtb2l6ZWRWYWx1ZSkuZm9yRWFjaCh2YWx1ZSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgJ3VubW91bnQnIGluIHZhbHVlKSB2YWx1ZS51bm1vdW50KCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9LCBbbWVtb2l6ZWRWYWx1ZV0pO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPEFQSVByb3ZpZGVyPlxuICAgICAgICAgICAgPFN0b3JlQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17bWVtb2l6ZWRWYWx1ZX0+e2NoaWxkcmVufTwvU3RvcmVDb250ZXh0LlByb3ZpZGVyPlxuICAgICAgICA8L0FQSVByb3ZpZGVyPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBTdG9yZVByb3ZpZGVyO1xuIiwiaW1wb3J0IHsgdXNlQ29udGV4dCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBTdG9yZUNvbnRleHQgZnJvbSAnLi9zdG9yZUNvbnRleHQnO1xuXG5jb25zdCB1c2VTdG9yZSA9ICgpID0+IHtcbiAgICBjb25zdCBzdG9yZSA9IHVzZUNvbnRleHQoU3RvcmVDb250ZXh0KTtcblxuICAgIGlmICghc3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd1c2VTdG9yZSBtdXN0IGJlIHVzZWQgd2l0aGluIFN0b3JlUHJvdmlkZXInKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RvcmU7XG59O1xuXG5leHBvcnQgZGVmYXVsdCB1c2VTdG9yZTtcbiIsImltcG9ydCB7IGNyZWF0ZUNvbnRleHQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB7IHVzZVN1YnNjcmlwdGlvbiB9IGZyb20gJ0BkZXJpdi9hcGknO1xuXG50eXBlIFRSYXRlID0gUmVjb3JkPHN0cmluZywgUmVjb3JkPHN0cmluZywgbnVtYmVyPj47XG5cbnR5cGUgVEV4Y2hhbmdlUmF0ZXNDb250ZXh0ID0ge1xuICAgIGhhbmRsZVN1YnNjcmlwdGlvbjogKGJhc2VfY3VycmVuY3k6IHN0cmluZywgdGFyZ2V0X2N1cnJlbmN5OiBzdHJpbmcpID0+IHZvaWQ7XG4gICAgZXhjaGFuZ2VfcmF0ZXM6IFRSYXRlO1xuICAgIHJlc3Q6IE9taXQ8dHlwZW9mIHVzZVN1YnNjcmlwdGlvbiwgJ3N1YnNjcmliZScgfCAnZGF0YSc+O1xufTtcblxuY29uc3QgRXhjaGFuZ2VSYXRlc0NvbnRleHQgPSBjcmVhdGVDb250ZXh0PFRFeGNoYW5nZVJhdGVzQ29udGV4dCB8IG51bGw+KG51bGwpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNoYW5nZVJhdGVzQ29udGV4dDtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmZ1bmN0aW9uIHVzZUJvb2xlYW4oZGVmYXVsdFZhbHVlKSB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZSghIWRlZmF1bHRWYWx1ZSk7XG4gICAgY29uc3Qgc2V0VHJ1ZSA9IHVzZUNhbGxiYWNrKCgpID0+IHNldFZhbHVlKHRydWUpLCBbXSk7XG4gICAgY29uc3Qgc2V0RmFsc2UgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRWYWx1ZShmYWxzZSksIFtdKTtcbiAgICBjb25zdCB0b2dnbGUgPSB1c2VDYWxsYmFjaygoKSA9PiBzZXRWYWx1ZSh4ID0+ICF4KSwgW10pO1xuICAgIHJldHVybiB7IHZhbHVlLCBzZXRWYWx1ZSwgc2V0VHJ1ZSwgc2V0RmFsc2UsIHRvZ2dsZSB9O1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlQm9vbGVhbjtcbiIsImltcG9ydCB7IHVzZUV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VDbGlja0FueVdoZXJlKGhhbmRsZXIpIHtcbiAgICB1c2VFdmVudExpc3RlbmVyKCdjbGljaycsIGV2ZW50ID0+IHtcbiAgICAgICAgaGFuZGxlcihldmVudCk7XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VDbGlja0FueVdoZXJlO1xuIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmZ1bmN0aW9uIHVzZUNvcHlUb0NsaXBib2FyZCgpIHtcbiAgICBjb25zdCBbY29waWVkVGV4dCwgc2V0Q29waWVkVGV4dF0gPSB1c2VTdGF0ZShudWxsKTtcbiAgICBjb25zdCBjb3B5ID0gKHRleHQpID0+IF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgaWYgKCEobmF2aWdhdG9yID09PSBudWxsIHx8IG5hdmlnYXRvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmF2aWdhdG9yLmNsaXBib2FyZCkpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybignQ2xpcGJvYXJkIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeWllbGQgbmF2aWdhdG9yLmNsaXBib2FyZC53cml0ZVRleHQodGV4dCk7XG4gICAgICAgICAgICBzZXRDb3BpZWRUZXh0KHRleHQpO1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ0NvcHkgZmFpbGVkJywgZXJyb3IpO1xuICAgICAgICAgICAgc2V0Q29waWVkVGV4dChudWxsKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBbY29waWVkVGV4dCwgY29weV07XG59XG5leHBvcnQgZGVmYXVsdCB1c2VDb3B5VG9DbGlwYm9hcmQ7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUJvb2xlYW4sIHVzZUNvdW50ZXIsIHVzZUludGVydmFsIH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlQ291bnRkb3duKGNvdW50ZG93bk9wdGlvbikge1xuICAgIGxldCBpc0RlcHJlY2F0ZWQgPSBmYWxzZTtcbiAgICBsZXQgY291bnRTdGFydCwgaW50ZXJ2YWxNcywgaXNJbmNyZW1lbnQsIGNvdW50U3RvcDtcbiAgICBpZiAoJ3NlY29uZHMnIGluIGNvdW50ZG93bk9wdGlvbikge1xuICAgICAgICBjb25zb2xlLndhcm4oJ1t1c2VDb3VudGRvd246REVQUkVDQVRFRF0gbmV3IGludGVyZmFjZSBpcyBhbHJlYWR5IGF2YWlsYWJsZSAoc2VlIGh0dHBzOi8vdXNlaG9va3MtdHMuY29tL3JlYWN0LWhvb2svdXNlLWNvdW50ZG93biksIHRoZSBvbGQgdmVyc2lvbiB3aWxsIHJldGlyZSBvbiB1c2Vob29rcy10c0AzLicpO1xuICAgICAgICBpc0RlcHJlY2F0ZWQgPSB0cnVlO1xuICAgICAgICBjb3VudFN0YXJ0ID0gY291bnRkb3duT3B0aW9uLnNlY29uZHM7XG4gICAgICAgIGludGVydmFsTXMgPSBjb3VudGRvd25PcHRpb24uaW50ZXJ2YWw7XG4gICAgICAgIGlzSW5jcmVtZW50ID0gY291bnRkb3duT3B0aW9uLmlzSW5jcmVtZW50O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgO1xuICAgICAgICAoeyBjb3VudFN0YXJ0LCBpbnRlcnZhbE1zLCBpc0luY3JlbWVudCwgY291bnRTdG9wIH0gPSBjb3VudGRvd25PcHRpb24pO1xuICAgIH1cbiAgICBpbnRlcnZhbE1zID0gaW50ZXJ2YWxNcyAhPT0gbnVsbCAmJiBpbnRlcnZhbE1zICE9PSB2b2lkIDAgPyBpbnRlcnZhbE1zIDogMTAwMDtcbiAgICBpc0luY3JlbWVudCA9IGlzSW5jcmVtZW50ICE9PSBudWxsICYmIGlzSW5jcmVtZW50ICE9PSB2b2lkIDAgPyBpc0luY3JlbWVudCA6IGZhbHNlO1xuICAgIGNvdW50U3RvcCA9IGNvdW50U3RvcCAhPT0gbnVsbCAmJiBjb3VudFN0b3AgIT09IHZvaWQgMCA/IGNvdW50U3RvcCA6IDA7XG4gICAgY29uc3QgeyBjb3VudCwgaW5jcmVtZW50LCBkZWNyZW1lbnQsIHJlc2V0OiByZXNldENvdW50ZXIsIH0gPSB1c2VDb3VudGVyKGNvdW50U3RhcnQpO1xuICAgIGNvbnN0IHsgdmFsdWU6IGlzQ291bnRkb3duUnVubmluZywgc2V0VHJ1ZTogc3RhcnRDb3VudGRvd24sIHNldEZhbHNlOiBzdG9wQ291bnRkb3duLCB9ID0gdXNlQm9vbGVhbihmYWxzZSk7XG4gICAgY29uc3QgcmVzZXRDb3VudGRvd24gPSAoKSA9PiB7XG4gICAgICAgIHN0b3BDb3VudGRvd24oKTtcbiAgICAgICAgcmVzZXRDb3VudGVyKCk7XG4gICAgfTtcbiAgICBjb25zdCBjb3VudGRvd25DYWxsYmFjayA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKGNvdW50ID09PSBjb3VudFN0b3ApIHtcbiAgICAgICAgICAgIHN0b3BDb3VudGRvd24oKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNJbmNyZW1lbnQpIHtcbiAgICAgICAgICAgIGluY3JlbWVudCgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGVjcmVtZW50KCk7XG4gICAgICAgIH1cbiAgICB9LCBbY291bnQsIGNvdW50U3RvcCwgZGVjcmVtZW50LCBpbmNyZW1lbnQsIGlzSW5jcmVtZW50LCBzdG9wQ291bnRkb3duXSk7XG4gICAgdXNlSW50ZXJ2YWwoY291bnRkb3duQ2FsbGJhY2ssIGlzQ291bnRkb3duUnVubmluZyA/IGludGVydmFsTXMgOiBudWxsKTtcbiAgICByZXR1cm4gaXNEZXByZWNhdGVkXG4gICAgICAgID8gW1xuICAgICAgICAgICAgY291bnQsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc3RhcnQ6IHN0YXJ0Q291bnRkb3duLFxuICAgICAgICAgICAgICAgIHN0b3A6IHN0b3BDb3VudGRvd24sXG4gICAgICAgICAgICAgICAgcmVzZXQ6IHJlc2V0Q291bnRkb3duLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXVxuICAgICAgICA6IFtcbiAgICAgICAgICAgIGNvdW50LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHN0YXJ0Q291bnRkb3duLFxuICAgICAgICAgICAgICAgIHN0b3BDb3VudGRvd24sXG4gICAgICAgICAgICAgICAgcmVzZXRDb3VudGRvd24sXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlQ291bnRkb3duO1xuIiwiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VDb3VudGVyKGluaXRpYWxWYWx1ZSkge1xuICAgIGNvbnN0IFtjb3VudCwgc2V0Q291bnRdID0gdXNlU3RhdGUoaW5pdGlhbFZhbHVlIHx8IDApO1xuICAgIGNvbnN0IGluY3JlbWVudCA9ICgpID0+IHNldENvdW50KHggPT4geCArIDEpO1xuICAgIGNvbnN0IGRlY3JlbWVudCA9ICgpID0+IHNldENvdW50KHggPT4geCAtIDEpO1xuICAgIGNvbnN0IHJlc2V0ID0gKCkgPT4gc2V0Q291bnQoaW5pdGlhbFZhbHVlIHx8IDApO1xuICAgIHJldHVybiB7XG4gICAgICAgIGNvdW50LFxuICAgICAgICBpbmNyZW1lbnQsXG4gICAgICAgIGRlY3JlbWVudCxcbiAgICAgICAgcmVzZXQsXG4gICAgICAgIHNldENvdW50LFxuICAgIH07XG59XG5leHBvcnQgZGVmYXVsdCB1c2VDb3VudGVyO1xuIiwiaW1wb3J0IHsgdXNlTG9jYWxTdG9yYWdlLCB1c2VNZWRpYVF1ZXJ5LCB1c2VVcGRhdGVFZmZlY3QgfSBmcm9tICcuLic7XG5jb25zdCBDT0xPUl9TQ0hFTUVfUVVFUlkgPSAnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKSc7XG5mdW5jdGlvbiB1c2VEYXJrTW9kZShkZWZhdWx0VmFsdWUpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgaXNEYXJrT1MgPSB1c2VNZWRpYVF1ZXJ5KENPTE9SX1NDSEVNRV9RVUVSWSk7XG4gICAgY29uc3QgW2lzRGFya01vZGUsIHNldERhcmtNb2RlXSA9IHVzZUxvY2FsU3RvcmFnZSgndXNlaG9va3MtdHMtZGFyay1tb2RlJywgKF9hID0gZGVmYXVsdFZhbHVlICE9PSBudWxsICYmIGRlZmF1bHRWYWx1ZSAhPT0gdm9pZCAwID8gZGVmYXVsdFZhbHVlIDogaXNEYXJrT1MpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGZhbHNlKTtcbiAgICB1c2VVcGRhdGVFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXREYXJrTW9kZShpc0RhcmtPUyk7XG4gICAgfSwgW2lzRGFya09TXSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNEYXJrTW9kZSxcbiAgICAgICAgdG9nZ2xlOiAoKSA9PiBzZXREYXJrTW9kZShwcmV2ID0+ICFwcmV2KSxcbiAgICAgICAgZW5hYmxlOiAoKSA9PiBzZXREYXJrTW9kZSh0cnVlKSxcbiAgICAgICAgZGlzYWJsZTogKCkgPT4gc2V0RGFya01vZGUoZmFsc2UpLFxuICAgIH07XG59XG5leHBvcnQgZGVmYXVsdCB1c2VEYXJrTW9kZTtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VEZWJvdW5jZSh2YWx1ZSwgZGVsYXkpIHtcbiAgICBjb25zdCBbZGVib3VuY2VkVmFsdWUsIHNldERlYm91bmNlZFZhbHVlXSA9IHVzZVN0YXRlKHZhbHVlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4gc2V0RGVib3VuY2VkVmFsdWUodmFsdWUpLCBkZWxheSB8fCA1MDApO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgICAgfTtcbiAgICB9LCBbdmFsdWUsIGRlbGF5XSk7XG4gICAgcmV0dXJuIGRlYm91bmNlZFZhbHVlO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlRGVib3VuY2U7XG4iLCJpbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlRG9jdW1lbnRUaXRsZSh0aXRsZSkge1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICB3aW5kb3cuZG9jdW1lbnQudGl0bGUgPSB0aXRsZTtcbiAgICB9LCBbdGl0bGVdKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZURvY3VtZW50VGl0bGU7XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VFZmZlY3RPbmNlKGVmZmVjdCkge1xuICAgIHVzZUVmZmVjdChlZmZlY3QsIFtdKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUVmZmVjdE9uY2U7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VFdmVudExpc3RlbmVyLCB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlRWxlbWVudFNpemUoKSB7XG4gICAgY29uc3QgW3JlZiwgc2V0UmVmXSA9IHVzZVN0YXRlKG51bGwpO1xuICAgIGNvbnN0IFtzaXplLCBzZXRTaXplXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgd2lkdGg6IDAsXG4gICAgICAgIGhlaWdodDogMCxcbiAgICB9KTtcbiAgICBjb25zdCBoYW5kbGVTaXplID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzZXRTaXplKHtcbiAgICAgICAgICAgIHdpZHRoOiAocmVmID09PSBudWxsIHx8IHJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVmLm9mZnNldFdpZHRoKSB8fCAwLFxuICAgICAgICAgICAgaGVpZ2h0OiAocmVmID09PSBudWxsIHx8IHJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVmLm9mZnNldEhlaWdodCkgfHwgMCxcbiAgICAgICAgfSk7XG4gICAgfSwgW3JlZiA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5vZmZzZXRIZWlnaHQsIHJlZiA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5vZmZzZXRXaWR0aF0pO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVNpemUpO1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBoYW5kbGVTaXplKCk7XG4gICAgfSwgW3JlZiA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5vZmZzZXRIZWlnaHQsIHJlZiA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5vZmZzZXRXaWR0aF0pO1xuICAgIHJldHVybiBbc2V0UmVmLCBzaXplXTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUVsZW1lbnRTaXplO1xuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VFdmVudENhbGxiYWNrKGZuKSB7XG4gICAgY29uc3QgcmVmID0gdXNlUmVmKCgpID0+IHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgY2FsbCBhbiBldmVudCBoYW5kbGVyIHdoaWxlIHJlbmRlcmluZy4nKTtcbiAgICB9KTtcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgcmVmLmN1cnJlbnQgPSBmbjtcbiAgICB9LCBbZm5dKTtcbiAgICByZXR1cm4gdXNlQ2FsbGJhY2soKC4uLmFyZ3MpID0+IHJlZi5jdXJyZW50KC4uLmFyZ3MpLCBbcmVmXSk7XG59XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgaGFuZGxlciwgZWxlbWVudCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHNhdmVkSGFuZGxlciA9IHVzZVJlZihoYW5kbGVyKTtcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2F2ZWRIYW5kbGVyLmN1cnJlbnQgPSBoYW5kbGVyO1xuICAgIH0sIFtoYW5kbGVyXSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCB0YXJnZXRFbGVtZW50ID0gKF9hID0gZWxlbWVudCA9PT0gbnVsbCB8fCBlbGVtZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBlbGVtZW50LmN1cnJlbnQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHdpbmRvdztcbiAgICAgICAgaWYgKCEodGFyZ2V0RWxlbWVudCAmJiB0YXJnZXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIpKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IGV2ZW50ID0+IHNhdmVkSGFuZGxlci5jdXJyZW50KGV2ZW50KTtcbiAgICAgICAgdGFyZ2V0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdGFyZ2V0RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgbGlzdGVuZXIsIG9wdGlvbnMpO1xuICAgICAgICB9O1xuICAgIH0sIFtldmVudE5hbWUsIGVsZW1lbnQsIG9wdGlvbnNdKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUV2ZW50TGlzdGVuZXI7XG4iLCJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbmltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVkdWNlciwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuZnVuY3Rpb24gdXNlRmV0Y2godXJsLCBvcHRpb25zKSB7XG4gICAgY29uc3QgY2FjaGUgPSB1c2VSZWYoe30pO1xuICAgIGNvbnN0IGNhbmNlbFJlcXVlc3QgPSB1c2VSZWYoZmFsc2UpO1xuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgICAgZXJyb3I6IHVuZGVmaW5lZCxcbiAgICAgICAgZGF0YTogdW5kZWZpbmVkLFxuICAgIH07XG4gICAgY29uc3QgZmV0Y2hSZWR1Y2VyID0gKHN0YXRlLCBhY3Rpb24pID0+IHtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgY2FzZSAnbG9hZGluZyc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGluaXRpYWxTdGF0ZSk7XG4gICAgICAgICAgICBjYXNlICdmZXRjaGVkJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBpbml0aWFsU3RhdGUpLCB7IGRhdGE6IGFjdGlvbi5wYXlsb2FkIH0pO1xuICAgICAgICAgICAgY2FzZSAnZXJyb3InOlxuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGluaXRpYWxTdGF0ZSksIHsgZXJyb3I6IGFjdGlvbi5wYXlsb2FkIH0pO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IFtzdGF0ZSwgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcihmZXRjaFJlZHVjZXIsIGluaXRpYWxTdGF0ZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKCF1cmwpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNhbmNlbFJlcXVlc3QuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBmZXRjaERhdGEgPSAoKSA9PiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBkaXNwYXRjaCh7IHR5cGU6ICdsb2FkaW5nJyB9KTtcbiAgICAgICAgICAgIGlmIChjYWNoZS5jdXJyZW50W3VybF0pIHtcbiAgICAgICAgICAgICAgICBkaXNwYXRjaCh7IHR5cGU6ICdmZXRjaGVkJywgcGF5bG9hZDogY2FjaGUuY3VycmVudFt1cmxdIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSB5aWVsZCBmZXRjaCh1cmwsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1c1RleHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBkYXRhID0gKHlpZWxkIHJlc3BvbnNlLmpzb24oKSk7XG4gICAgICAgICAgICAgICAgY2FjaGUuY3VycmVudFt1cmxdID0gZGF0YTtcbiAgICAgICAgICAgICAgICBpZiAoY2FuY2VsUmVxdWVzdC5jdXJyZW50KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnZmV0Y2hlZCcsIHBheWxvYWQ6IGRhdGEgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FuY2VsUmVxdWVzdC5jdXJyZW50KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgZGlzcGF0Y2goeyB0eXBlOiAnZXJyb3InLCBwYXlsb2FkOiBlcnJvciB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHZvaWQgZmV0Y2hEYXRhKCk7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBjYW5jZWxSZXF1ZXN0LmN1cnJlbnQgPSB0cnVlO1xuICAgICAgICB9O1xuICAgIH0sIFt1cmxdKTtcbiAgICByZXR1cm4gc3RhdGU7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VGZXRjaDtcbiIsImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlRXZlbnRMaXN0ZW5lciB9IGZyb20gJy4uJztcbmZ1bmN0aW9uIHVzZUhvdmVyKGVsZW1lbnRSZWYpIHtcbiAgICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBoYW5kbGVNb3VzZUVudGVyID0gKCkgPT4gc2V0VmFsdWUodHJ1ZSk7XG4gICAgY29uc3QgaGFuZGxlTW91c2VMZWF2ZSA9ICgpID0+IHNldFZhbHVlKGZhbHNlKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKCdtb3VzZWVudGVyJywgaGFuZGxlTW91c2VFbnRlciwgZWxlbWVudFJlZik7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIGhhbmRsZU1vdXNlTGVhdmUsIGVsZW1lbnRSZWYpO1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUhvdmVyO1xuIiwiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VJbWFnZU9uTG9hZCgpIHtcbiAgICBjb25zdCBbaXNMb2FkZWQsIHNldElzTG9hZGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBoYW5kbGVJbWFnZU9uTG9hZCA9ICgpID0+IHtcbiAgICAgICAgc2V0SXNMb2FkZWQodHJ1ZSk7XG4gICAgfTtcbiAgICBjb25zdCBjc3MgPSB7XG4gICAgICAgIHRodW1ibmFpbDoge1xuICAgICAgICAgICAgdmlzaWJpbGl0eTogaXNMb2FkZWQgPyAnaGlkZGVuJyA6ICd2aXNpYmxlJyxcbiAgICAgICAgICAgIGZpbHRlcjogJ2JsdXIoOHB4KScsXG4gICAgICAgICAgICB0cmFuc2l0aW9uOiAndmlzaWJpbGl0eSAwbXMgZWFzZS1vdXQgNTAwbXMnLFxuICAgICAgICB9LFxuICAgICAgICBmdWxsU2l6ZToge1xuICAgICAgICAgICAgb3BhY2l0eTogaXNMb2FkZWQgPyAxIDogMCxcbiAgICAgICAgICAgIHRyYW5zaXRpb246ICdvcGFjaXR5IDUwMG1zIGVhc2UtaW4gMG1zJyxcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIHJldHVybiB7IGhhbmRsZUltYWdlT25Mb2FkLCBjc3MgfTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUltYWdlT25Mb2FkO1xuIiwiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmZ1bmN0aW9uIHVzZUludGVyc2VjdGlvbk9ic2VydmVyKGVsZW1lbnRSZWYsIHsgdGhyZXNob2xkID0gMCwgcm9vdCA9IG51bGwsIHJvb3RNYXJnaW4gPSAnMCUnLCBmcmVlemVPbmNlVmlzaWJsZSA9IGZhbHNlLCB9KSB7XG4gICAgY29uc3QgW2VudHJ5LCBzZXRFbnRyeV0gPSB1c2VTdGF0ZSgpO1xuICAgIGNvbnN0IGZyb3plbiA9IChlbnRyeSA9PT0gbnVsbCB8fCBlbnRyeSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZW50cnkuaXNJbnRlcnNlY3RpbmcpICYmIGZyZWV6ZU9uY2VWaXNpYmxlO1xuICAgIGNvbnN0IHVwZGF0ZUVudHJ5ID0gKFtlbnRyeV0pID0+IHtcbiAgICAgICAgc2V0RW50cnkoZW50cnkpO1xuICAgIH07XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IGVsZW1lbnRSZWYgPT09IG51bGwgfHwgZWxlbWVudFJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbWVudFJlZi5jdXJyZW50O1xuICAgICAgICBjb25zdCBoYXNJT1N1cHBvcnQgPSAhIXdpbmRvdy5JbnRlcnNlY3Rpb25PYnNlcnZlcjtcbiAgICAgICAgaWYgKCFoYXNJT1N1cHBvcnQgfHwgZnJvemVuIHx8ICFub2RlKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICBjb25zdCBvYnNlcnZlclBhcmFtcyA9IHsgdGhyZXNob2xkLCByb290LCByb290TWFyZ2luIH07XG4gICAgICAgIGNvbnN0IG9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKHVwZGF0ZUVudHJ5LCBvYnNlcnZlclBhcmFtcyk7XG4gICAgICAgIG9ic2VydmVyLm9ic2VydmUobm9kZSk7XG4gICAgICAgIHJldHVybiAoKSA9PiBvYnNlcnZlci5kaXNjb25uZWN0KCk7XG4gICAgfSwgW2VsZW1lbnRSZWYgPT09IG51bGwgfHwgZWxlbWVudFJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbWVudFJlZi5jdXJyZW50LCBKU09OLnN0cmluZ2lmeSh0aHJlc2hvbGQpLCByb290LCByb290TWFyZ2luLCBmcm96ZW5dKTtcbiAgICByZXR1cm4gZW50cnk7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VJbnRlcnNlY3Rpb25PYnNlcnZlcjtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCB9IGZyb20gJy4uJztcbmZ1bmN0aW9uIHVzZUludGVydmFsKGNhbGxiYWNrLCBkZWxheSkge1xuICAgIGNvbnN0IHNhdmVkQ2FsbGJhY2sgPSB1c2VSZWYoY2FsbGJhY2spO1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzYXZlZENhbGxiYWNrLmN1cnJlbnQgPSBjYWxsYmFjaztcbiAgICB9LCBbY2FsbGJhY2tdKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIWRlbGF5ICYmIGRlbGF5ICE9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaWQgPSBzZXRJbnRlcnZhbCgoKSA9PiBzYXZlZENhbGxiYWNrLmN1cnJlbnQoKSwgZGVsYXkpO1xuICAgICAgICByZXR1cm4gKCkgPT4gY2xlYXJJbnRlcnZhbChpZCk7XG4gICAgfSwgW2RlbGF5XSk7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VJbnRlcnZhbDtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VJc0NsaWVudCgpIHtcbiAgICBjb25zdCBbaXNDbGllbnQsIHNldENsaWVudF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0Q2xpZW50KHRydWUpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gaXNDbGllbnQ7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VJc0NsaWVudDtcbiIsImltcG9ydCB7IHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmZ1bmN0aW9uIHVzZUlzRmlyc3RSZW5kZXIoKSB7XG4gICAgY29uc3QgaXNGaXJzdCA9IHVzZVJlZih0cnVlKTtcbiAgICBpZiAoaXNGaXJzdC5jdXJyZW50KSB7XG4gICAgICAgIGlzRmlyc3QuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGlzRmlyc3QuY3VycmVudDtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUlzRmlyc3RSZW5kZXI7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VJc01vdW50ZWQoKSB7XG4gICAgY29uc3QgaXNNb3VudGVkID0gdXNlUmVmKGZhbHNlKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpc01vdW50ZWQuY3VycmVudCA9IHRydWU7XG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBpc01vdW50ZWQuY3VycmVudCA9IGZhbHNlO1xuICAgICAgICB9O1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gdXNlQ2FsbGJhY2soKCkgPT4gaXNNb3VudGVkLmN1cnJlbnQsIFtdKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUlzTW91bnRlZDtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlTGF5b3V0RWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuY29uc3QgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCA9IHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnID8gdXNlTGF5b3V0RWZmZWN0IDogdXNlRWZmZWN0O1xuZXhwb3J0IGRlZmF1bHQgdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdDtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlLCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUV2ZW50Q2FsbGJhY2ssIHVzZUV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VMb2NhbFN0b3JhZ2Uoa2V5LCBpbml0aWFsVmFsdWUpIHtcbiAgICBjb25zdCByZWFkVmFsdWUgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0gPyBwYXJzZUpTT04oaXRlbSkgOiBpbml0aWFsVmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYEVycm9yIHJlYWRpbmcgbG9jYWxTdG9yYWdlIGtleSDigJwke2tleX3igJ06YCwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTtcbiAgICAgICAgfVxuICAgIH0sIFtpbml0aWFsVmFsdWUsIGtleV0pO1xuICAgIGNvbnN0IFtzdG9yZWRWYWx1ZSwgc2V0U3RvcmVkVmFsdWVdID0gdXNlU3RhdGUocmVhZFZhbHVlKTtcbiAgICBjb25zdCBzZXRWYWx1ZSA9IHVzZUV2ZW50Q2FsbGJhY2sodmFsdWUgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgVHJpZWQgc2V0dGluZyBsb2NhbFN0b3JhZ2Uga2V5IOKAnCR7a2V5feKAnSBldmVuIHRob3VnaCBlbnZpcm9ubWVudCBpcyBub3QgYSBjbGllbnRgKTtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB2YWx1ZSBpbnN0YW5jZW9mIEZ1bmN0aW9uID8gdmFsdWUoc3RvcmVkVmFsdWUpIDogdmFsdWU7XG4gICAgICAgICAgICB3aW5kb3cubG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSkpO1xuICAgICAgICAgICAgc2V0U3RvcmVkVmFsdWUobmV3VmFsdWUpO1xuICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdsb2NhbC1zdG9yYWdlJykpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBFcnJvciBzZXR0aW5nIGxvY2FsU3RvcmFnZSBrZXkg4oCcJHtrZXl94oCdOmAsIGVycm9yKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIHNldFN0b3JlZFZhbHVlKHJlYWRWYWx1ZSgpKTtcbiAgICB9LCBbXSk7XG4gICAgY29uc3QgaGFuZGxlU3RvcmFnZUNoYW5nZSA9IHVzZUNhbGxiYWNrKChldmVudCkgPT4ge1xuICAgICAgICBpZiAoKGV2ZW50ID09PSBudWxsIHx8IGV2ZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBldmVudC5rZXkpICYmIGV2ZW50LmtleSAhPT0ga2V5KSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgc2V0U3RvcmVkVmFsdWUocmVhZFZhbHVlKCkpO1xuICAgIH0sIFtrZXksIHJlYWRWYWx1ZV0pO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoJ3N0b3JhZ2UnLCBoYW5kbGVTdG9yYWdlQ2hhbmdlKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKCdsb2NhbC1zdG9yYWdlJywgaGFuZGxlU3RvcmFnZUNoYW5nZSk7XG4gICAgcmV0dXJuIFtzdG9yZWRWYWx1ZSwgc2V0VmFsdWVdO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlTG9jYWxTdG9yYWdlO1xuZnVuY3Rpb24gcGFyc2VKU09OKHZhbHVlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09PSAndW5kZWZpbmVkJyA/IHVuZGVmaW5lZCA6IEpTT04ucGFyc2UodmFsdWUgIT09IG51bGwgJiYgdmFsdWUgIT09IHZvaWQgMCA/IHZhbHVlIDogJycpO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ3BhcnNpbmcgZXJyb3Igb24nLCB7IHZhbHVlIH0pO1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlTG9ja2VkQm9keShpbml0aWFsTG9ja2VkID0gZmFsc2UsIHJvb3RJZCA9ICdfX19nYXRzYnknKSB7XG4gICAgY29uc3QgW2xvY2tlZCwgc2V0TG9ja2VkXSA9IHVzZVN0YXRlKGluaXRpYWxMb2NrZWQpO1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIWxvY2tlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsT3ZlcmZsb3cgPSBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93O1xuICAgICAgICBjb25zdCBvcmlnaW5hbFBhZGRpbmdSaWdodCA9IGRvY3VtZW50LmJvZHkuc3R5bGUucGFkZGluZ1JpZ2h0O1xuICAgICAgICBkb2N1bWVudC5ib2R5LnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgICAgIGNvbnN0IHJvb3QgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChyb290SWQpO1xuICAgICAgICBjb25zdCBzY3JvbGxCYXJXaWR0aCA9IHJvb3QgPyByb290Lm9mZnNldFdpZHRoIC0gcm9vdC5zY3JvbGxXaWR0aCA6IDA7XG4gICAgICAgIGlmIChzY3JvbGxCYXJXaWR0aCkge1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBgJHtzY3JvbGxCYXJXaWR0aH1weGA7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3cgPSBvcmlnaW5hbE92ZXJmbG93O1xuICAgICAgICAgICAgaWYgKHNjcm9sbEJhcldpZHRoKSB7XG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5zdHlsZS5wYWRkaW5nUmlnaHQgPSBvcmlnaW5hbFBhZGRpbmdSaWdodDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9LCBbbG9ja2VkXSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGxvY2tlZCAhPT0gaW5pdGlhbExvY2tlZCkge1xuICAgICAgICAgICAgc2V0TG9ja2VkKGluaXRpYWxMb2NrZWQpO1xuICAgICAgICB9XG4gICAgfSwgW2luaXRpYWxMb2NrZWRdKTtcbiAgICByZXR1cm4gW2xvY2tlZCwgc2V0TG9ja2VkXTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZUxvY2tlZEJvZHk7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VNYXAoaW5pdGlhbFN0YXRlID0gbmV3IE1hcCgpKSB7XG4gICAgY29uc3QgW21hcCwgc2V0TWFwXSA9IHVzZVN0YXRlKG5ldyBNYXAoaW5pdGlhbFN0YXRlKSk7XG4gICAgY29uc3QgYWN0aW9ucyA9IHtcbiAgICAgICAgc2V0OiB1c2VDYWxsYmFjaygoa2V5LCB2YWx1ZSkgPT4ge1xuICAgICAgICAgICAgc2V0TWFwKHByZXYgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvcHkgPSBuZXcgTWFwKHByZXYpO1xuICAgICAgICAgICAgICAgIGNvcHkuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBjb3B5O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIFtdKSxcbiAgICAgICAgc2V0QWxsOiB1c2VDYWxsYmFjayhlbnRyaWVzID0+IHtcbiAgICAgICAgICAgIHNldE1hcCgoKSA9PiBuZXcgTWFwKGVudHJpZXMpKTtcbiAgICAgICAgfSwgW10pLFxuICAgICAgICByZW1vdmU6IHVzZUNhbGxiYWNrKGtleSA9PiB7XG4gICAgICAgICAgICBzZXRNYXAocHJldiA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgY29weSA9IG5ldyBNYXAocHJldik7XG4gICAgICAgICAgICAgICAgY29weS5kZWxldGUoa2V5KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29weTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBbXSksXG4gICAgICAgIHJlc2V0OiB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgICAgICBzZXRNYXAoKCkgPT4gbmV3IE1hcCgpKTtcbiAgICAgICAgfSwgW10pLFxuICAgIH07XG4gICAgcmV0dXJuIFttYXAsIGFjdGlvbnNdO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlTWFwO1xuIiwiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmZ1bmN0aW9uIHVzZU1lZGlhUXVlcnkocXVlcnkpIHtcbiAgICBjb25zdCBnZXRNYXRjaGVzID0gKHF1ZXJ5KSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgcmV0dXJuIHdpbmRvdy5tYXRjaE1lZGlhKHF1ZXJ5KS5tYXRjaGVzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9O1xuICAgIGNvbnN0IFttYXRjaGVzLCBzZXRNYXRjaGVzXSA9IHVzZVN0YXRlKGdldE1hdGNoZXMocXVlcnkpKTtcbiAgICBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoKSB7XG4gICAgICAgIHNldE1hdGNoZXMoZ2V0TWF0Y2hlcyhxdWVyeSkpO1xuICAgIH1cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCBtYXRjaE1lZGlhID0gd2luZG93Lm1hdGNoTWVkaWEocXVlcnkpO1xuICAgICAgICBoYW5kbGVDaGFuZ2UoKTtcbiAgICAgICAgaWYgKG1hdGNoTWVkaWEuYWRkTGlzdGVuZXIpIHtcbiAgICAgICAgICAgIG1hdGNoTWVkaWEuYWRkTGlzdGVuZXIoaGFuZGxlQ2hhbmdlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hdGNoTWVkaWEuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgaGFuZGxlQ2hhbmdlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKG1hdGNoTWVkaWEucmVtb3ZlTGlzdGVuZXIpIHtcbiAgICAgICAgICAgICAgICBtYXRjaE1lZGlhLnJlbW92ZUxpc3RlbmVyKGhhbmRsZUNoYW5nZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBtYXRjaE1lZGlhLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGhhbmRsZUNoYW5nZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSwgW3F1ZXJ5XSk7XG4gICAgcmV0dXJuIG1hdGNoZXM7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VNZWRpYVF1ZXJ5O1xuIiwiaW1wb3J0IHsgdXNlRXZlbnRMaXN0ZW5lciB9IGZyb20gJy4uJztcbmZ1bmN0aW9uIHVzZU9uQ2xpY2tPdXRzaWRlKHJlZiwgaGFuZGxlciwgbW91c2VFdmVudCA9ICdtb3VzZWRvd24nKSB7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcihtb3VzZUV2ZW50LCBldmVudCA9PiB7XG4gICAgICAgIGNvbnN0IGVsID0gcmVmID09PSBudWxsIHx8IHJlZiA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVmLmN1cnJlbnQ7XG4gICAgICAgIGlmICghZWwgfHwgZWwuY29udGFpbnMoZXZlbnQudGFyZ2V0KSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGhhbmRsZXIoZXZlbnQpO1xuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlT25DbGlja091dHNpZGU7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VSZWFkTG9jYWxTdG9yYWdlKGtleSkge1xuICAgIGNvbnN0IHJlYWRWYWx1ZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgaXRlbSA9IHdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0gPyBKU09OLnBhcnNlKGl0ZW0pIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihgRXJyb3IgcmVhZGluZyBsb2NhbFN0b3JhZ2Uga2V5IOKAnCR7a2V5feKAnTpgLCBlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH0sIFtrZXldKTtcbiAgICBjb25zdCBbc3RvcmVkVmFsdWUsIHNldFN0b3JlZFZhbHVlXSA9IHVzZVN0YXRlKHJlYWRWYWx1ZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2V0U3RvcmVkVmFsdWUocmVhZFZhbHVlKCkpO1xuICAgIH0sIFtdKTtcbiAgICBjb25zdCBoYW5kbGVTdG9yYWdlQ2hhbmdlID0gdXNlQ2FsbGJhY2soKGV2ZW50KSA9PiB7XG4gICAgICAgIGlmICgoZXZlbnQgPT09IG51bGwgfHwgZXZlbnQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGV2ZW50LmtleSkgJiYgZXZlbnQua2V5ICE9PSBrZXkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBzZXRTdG9yZWRWYWx1ZShyZWFkVmFsdWUoKSk7XG4gICAgfSwgW2tleSwgcmVhZFZhbHVlXSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcignc3RvcmFnZScsIGhhbmRsZVN0b3JhZ2VDaGFuZ2UpO1xuICAgIHVzZUV2ZW50TGlzdGVuZXIoJ2xvY2FsLXN0b3JhZ2UnLCBoYW5kbGVTdG9yYWdlQ2hhbmdlKTtcbiAgICByZXR1cm4gc3RvcmVkVmFsdWU7XG59XG5leHBvcnQgZGVmYXVsdCB1c2VSZWFkTG9jYWxTdG9yYWdlO1xuIiwiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VFdmVudExpc3RlbmVyLCB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlU2NyZWVuKCkge1xuICAgIGNvbnN0IGdldFNjcmVlbiA9ICgpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnICYmIHdpbmRvdy5zY3JlZW4pIHtcbiAgICAgICAgICAgIHJldHVybiB3aW5kb3cuc2NyZWVuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfTtcbiAgICBjb25zdCBbc2NyZWVuLCBzZXRTY3JlZW5dID0gdXNlU3RhdGUoZ2V0U2NyZWVuKCkpO1xuICAgIGZ1bmN0aW9uIGhhbmRsZVNpemUoKSB7XG4gICAgICAgIHNldFNjcmVlbihnZXRTY3JlZW4oKSk7XG4gICAgfVxuICAgIHVzZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVNpemUpO1xuICAgIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QoKCkgPT4ge1xuICAgICAgICBoYW5kbGVTaXplKCk7XG4gICAgfSwgW10pO1xuICAgIHJldHVybiBzY3JlZW47XG59XG5leHBvcnQgZGVmYXVsdCB1c2VTY3JlZW47XG4iLCJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuY29uc3QgY2FjaGVkU2NyaXB0U3RhdHVzZXMgPSB7fTtcbmZ1bmN0aW9uIGdldFNjcmlwdE5vZGUoc3JjKSB7XG4gICAgY29uc3Qgbm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYHNjcmlwdFtzcmM9XCIke3NyY31cIl1gKTtcbiAgICBjb25zdCBzdGF0dXMgPSBub2RlID09PSBudWxsIHx8IG5vZGUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5vZGUuZ2V0QXR0cmlidXRlKCdkYXRhLXN0YXR1cycpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5vZGUsXG4gICAgICAgIHN0YXR1cyxcbiAgICB9O1xufVxuZnVuY3Rpb24gdXNlU2NyaXB0KHNyYywgb3B0aW9ucykge1xuICAgIGNvbnN0IFtzdGF0dXMsIHNldFN0YXR1c10gPSB1c2VTdGF0ZSgoKSA9PiB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgaWYgKCFzcmMgfHwgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaG91bGRQcmV2ZW50TG9hZCkpIHtcbiAgICAgICAgICAgIHJldHVybiAnaWRsZSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gJ2xvYWRpbmcnO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoX2EgPSBjYWNoZWRTY3JpcHRTdGF0dXNlc1tzcmNdKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAnbG9hZGluZyc7XG4gICAgfSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKCFzcmMgfHwgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zaG91bGRQcmV2ZW50TG9hZCkpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZWRTY3JpcHRTdGF0dXMgPSBjYWNoZWRTY3JpcHRTdGF0dXNlc1tzcmNdO1xuICAgICAgICBpZiAoY2FjaGVkU2NyaXB0U3RhdHVzID09PSAncmVhZHknIHx8IGNhY2hlZFNjcmlwdFN0YXR1cyA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgc2V0U3RhdHVzKGNhY2hlZFNjcmlwdFN0YXR1cyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc2NyaXB0ID0gZ2V0U2NyaXB0Tm9kZShzcmMpO1xuICAgICAgICBsZXQgc2NyaXB0Tm9kZSA9IHNjcmlwdC5ub2RlO1xuICAgICAgICBpZiAoIXNjcmlwdE5vZGUpIHtcbiAgICAgICAgICAgIHNjcmlwdE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiAgICAgICAgICAgIHNjcmlwdE5vZGUuc3JjID0gc3JjO1xuICAgICAgICAgICAgc2NyaXB0Tm9kZS5hc3luYyA9IHRydWU7XG4gICAgICAgICAgICBzY3JpcHROb2RlLnNldEF0dHJpYnV0ZSgnZGF0YS1zdGF0dXMnLCAnbG9hZGluZycpO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHROb2RlKTtcbiAgICAgICAgICAgIGNvbnN0IHNldEF0dHJpYnV0ZUZyb21FdmVudCA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNjcmlwdFN0YXR1cyA9IGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdyZWFkeScgOiAnZXJyb3InO1xuICAgICAgICAgICAgICAgIHNjcmlwdE5vZGUgPT09IG51bGwgfHwgc2NyaXB0Tm9kZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2NyaXB0Tm9kZS5zZXRBdHRyaWJ1dGUoJ2RhdGEtc3RhdHVzJywgc2NyaXB0U3RhdHVzKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBzY3JpcHROb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBzZXRBdHRyaWJ1dGVGcm9tRXZlbnQpO1xuICAgICAgICAgICAgc2NyaXB0Tm9kZS5hZGRFdmVudExpc3RlbmVyKCdlcnJvcicsIHNldEF0dHJpYnV0ZUZyb21FdmVudCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzZXRTdGF0dXMoKF9iID0gKF9hID0gc2NyaXB0LnN0YXR1cykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogY2FjaGVkU2NyaXB0U3RhdHVzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAnbG9hZGluZycpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNldFN0YXRlRnJvbUV2ZW50ID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBuZXdTdGF0dXMgPSBldmVudC50eXBlID09PSAnbG9hZCcgPyAncmVhZHknIDogJ2Vycm9yJztcbiAgICAgICAgICAgIHNldFN0YXR1cyhuZXdTdGF0dXMpO1xuICAgICAgICAgICAgY2FjaGVkU2NyaXB0U3RhdHVzZXNbc3JjXSA9IG5ld1N0YXR1cztcbiAgICAgICAgfTtcbiAgICAgICAgc2NyaXB0Tm9kZS5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgc2V0U3RhdGVGcm9tRXZlbnQpO1xuICAgICAgICBzY3JpcHROb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgc2V0U3RhdGVGcm9tRXZlbnQpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHNjcmlwdE5vZGUpIHtcbiAgICAgICAgICAgICAgICBzY3JpcHROb2RlLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBzZXRTdGF0ZUZyb21FdmVudCk7XG4gICAgICAgICAgICAgICAgc2NyaXB0Tm9kZS5yZW1vdmVFdmVudExpc3RlbmVyKCdlcnJvcicsIHNldFN0YXRlRnJvbUV2ZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzY3JpcHROb2RlICYmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVtb3ZlT25Vbm1vdW50KSkge1xuICAgICAgICAgICAgICAgIHNjcmlwdE5vZGUucmVtb3ZlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSwgW3NyYywgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnNob3VsZFByZXZlbnRMb2FkLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMucmVtb3ZlT25Vbm1vdW50XSk7XG4gICAgcmV0dXJuIHN0YXR1cztcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVNjcmlwdDtcbiIsImltcG9ydCB7IHVzZUNhbGxiYWNrLCB1c2VFZmZlY3QsIHVzZVN0YXRlLCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUV2ZW50Q2FsbGJhY2ssIHVzZUV2ZW50TGlzdGVuZXIgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VTZXNzaW9uU3RvcmFnZShrZXksIGluaXRpYWxWYWx1ZSkge1xuICAgIGNvbnN0IHJlYWRWYWx1ZSA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5pdGlhbFZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBpdGVtID0gd2luZG93LnNlc3Npb25TdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICAgICAgICAgIHJldHVybiBpdGVtID8gcGFyc2VKU09OKGl0ZW0pIDogaW5pdGlhbFZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBFcnJvciByZWFkaW5nIHNlc3Npb25TdG9yYWdlIGtleSDigJwke2tleX3igJ06YCwgZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuIGluaXRpYWxWYWx1ZTtcbiAgICAgICAgfVxuICAgIH0sIFtpbml0aWFsVmFsdWUsIGtleV0pO1xuICAgIGNvbnN0IFtzdG9yZWRWYWx1ZSwgc2V0U3RvcmVkVmFsdWVdID0gdXNlU3RhdGUocmVhZFZhbHVlKTtcbiAgICBjb25zdCBzZXRWYWx1ZSA9IHVzZUV2ZW50Q2FsbGJhY2sodmFsdWUgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBUcmllZCBzZXR0aW5nIHNlc3Npb25TdG9yYWdlIGtleSDigJwke2tleX3igJ0gZXZlbiB0aG91Z2ggZW52aXJvbm1lbnQgaXMgbm90IGEgY2xpZW50YCk7XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1ZhbHVlID0gdmFsdWUgaW5zdGFuY2VvZiBGdW5jdGlvbiA/IHZhbHVlKHN0b3JlZFZhbHVlKSA6IHZhbHVlO1xuICAgICAgICAgICAgd2luZG93LnNlc3Npb25TdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSkpO1xuICAgICAgICAgICAgc2V0U3RvcmVkVmFsdWUobmV3VmFsdWUpO1xuICAgICAgICAgICAgd2luZG93LmRpc3BhdGNoRXZlbnQobmV3IEV2ZW50KCdzZXNzaW9uLXN0b3JhZ2UnKSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4oYEVycm9yIHNldHRpbmcgc2Vzc2lvblN0b3JhZ2Uga2V5IOKAnCR7a2V5feKAnTpgLCBlcnJvcik7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzZXRTdG9yZWRWYWx1ZShyZWFkVmFsdWUoKSk7XG4gICAgfSwgW10pO1xuICAgIGNvbnN0IGhhbmRsZVN0b3JhZ2VDaGFuZ2UgPSB1c2VDYWxsYmFjaygoZXZlbnQpID0+IHtcbiAgICAgICAgaWYgKChldmVudCA9PT0gbnVsbCB8fCBldmVudCA9PT0gdm9pZCAwID8gdm9pZCAwIDogZXZlbnQua2V5KSAmJiBldmVudC5rZXkgIT09IGtleSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHNldFN0b3JlZFZhbHVlKHJlYWRWYWx1ZSgpKTtcbiAgICB9LCBba2V5LCByZWFkVmFsdWVdKTtcbiAgICB1c2VFdmVudExpc3RlbmVyKCdzdG9yYWdlJywgaGFuZGxlU3RvcmFnZUNoYW5nZSk7XG4gICAgdXNlRXZlbnRMaXN0ZW5lcignc2Vzc2lvbi1zdG9yYWdlJywgaGFuZGxlU3RvcmFnZUNoYW5nZSk7XG4gICAgcmV0dXJuIFtzdG9yZWRWYWx1ZSwgc2V0VmFsdWVdO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlU2Vzc2lvblN0b3JhZ2U7XG5mdW5jdGlvbiBwYXJzZUpTT04odmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gdmFsdWUgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogSlNPTi5wYXJzZSh2YWx1ZSAhPT0gbnVsbCAmJiB2YWx1ZSAhPT0gdm9pZCAwID8gdmFsdWUgOiAnJyk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICBjb25zb2xlLmxvZygncGFyc2luZyBlcnJvciBvbicsIHsgdmFsdWUgfSk7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZU1lbW8sIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuZnVuY3Rpb24gdXNlU3RlcChtYXhTdGVwKSB7XG4gICAgY29uc3QgW2N1cnJlbnRTdGVwLCBzZXRDdXJyZW50U3RlcF0gPSB1c2VTdGF0ZSgxKTtcbiAgICBjb25zdCBjYW5Hb1RvTmV4dFN0ZXAgPSB1c2VNZW1vKCgpID0+IGN1cnJlbnRTdGVwICsgMSA8PSBtYXhTdGVwLCBbY3VycmVudFN0ZXAsIG1heFN0ZXBdKTtcbiAgICBjb25zdCBjYW5Hb1RvUHJldlN0ZXAgPSB1c2VNZW1vKCgpID0+IGN1cnJlbnRTdGVwIC0gMSA+PSAxLCBbY3VycmVudFN0ZXBdKTtcbiAgICBjb25zdCBzZXRTdGVwID0gdXNlQ2FsbGJhY2soc3RlcCA9PiB7XG4gICAgICAgIGNvbnN0IG5ld1N0ZXAgPSBzdGVwIGluc3RhbmNlb2YgRnVuY3Rpb24gPyBzdGVwKGN1cnJlbnRTdGVwKSA6IHN0ZXA7XG4gICAgICAgIGlmIChuZXdTdGVwID49IDEgJiYgbmV3U3RlcCA8PSBtYXhTdGVwKSB7XG4gICAgICAgICAgICBzZXRDdXJyZW50U3RlcChuZXdTdGVwKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1N0ZXAgbm90IHZhbGlkJyk7XG4gICAgfSwgW21heFN0ZXAsIGN1cnJlbnRTdGVwXSk7XG4gICAgY29uc3QgZ29Ub05leHRTdGVwID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBpZiAoY2FuR29Ub05leHRTdGVwKSB7XG4gICAgICAgICAgICBzZXRDdXJyZW50U3RlcChzdGVwID0+IHN0ZXAgKyAxKTtcbiAgICAgICAgfVxuICAgIH0sIFtjYW5Hb1RvTmV4dFN0ZXBdKTtcbiAgICBjb25zdCBnb1RvUHJldlN0ZXAgPSB1c2VDYWxsYmFjaygoKSA9PiB7XG4gICAgICAgIGlmIChjYW5Hb1RvUHJldlN0ZXApIHtcbiAgICAgICAgICAgIHNldEN1cnJlbnRTdGVwKHN0ZXAgPT4gc3RlcCAtIDEpO1xuICAgICAgICB9XG4gICAgfSwgW2NhbkdvVG9QcmV2U3RlcF0pO1xuICAgIGNvbnN0IHJlc2V0ID0gdXNlQ2FsbGJhY2soKCkgPT4ge1xuICAgICAgICBzZXRDdXJyZW50U3RlcCgxKTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY3VycmVudFN0ZXAsXG4gICAgICAgIHtcbiAgICAgICAgICAgIGdvVG9OZXh0U3RlcCxcbiAgICAgICAgICAgIGdvVG9QcmV2U3RlcCxcbiAgICAgICAgICAgIGNhbkdvVG9OZXh0U3RlcCxcbiAgICAgICAgICAgIGNhbkdvVG9QcmV2U3RlcCxcbiAgICAgICAgICAgIHNldFN0ZXAsXG4gICAgICAgICAgICByZXNldCxcbiAgICAgICAgfSxcbiAgICBdO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlU3RlcDtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VMb2NhbFN0b3JhZ2UsIHVzZU1lZGlhUXVlcnksIHVzZVVwZGF0ZUVmZmVjdCB9IGZyb20gJy4uJztcbmNvbnN0IENPTE9SX1NDSEVNRV9RVUVSWSA9ICcocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspJztcbmZ1bmN0aW9uIHVzZVRlcm5hcnlEYXJrTW9kZSgpIHtcbiAgICBjb25zdCBpc0RhcmtPUyA9IHVzZU1lZGlhUXVlcnkoQ09MT1JfU0NIRU1FX1FVRVJZKTtcbiAgICBjb25zdCBbdGVybmFyeURhcmtNb2RlLCBzZXRUZXJuYXJ5RGFya01vZGVdID0gdXNlTG9jYWxTdG9yYWdlKCd1c2Vob29rcy10cy10ZXJuYXJ5LWRhcmstbW9kZScsICdzeXN0ZW0nKTtcbiAgICBjb25zdCBbaXNEYXJrTW9kZSwgc2V0RGFya01vZGVdID0gdXNlU3RhdGUoaXNEYXJrT1MpO1xuICAgIHVzZVVwZGF0ZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh0ZXJuYXJ5RGFya01vZGUgPT09ICdzeXN0ZW0nKSB7XG4gICAgICAgICAgICBzZXREYXJrTW9kZShpc0RhcmtPUyk7XG4gICAgICAgIH1cbiAgICB9LCBbaXNEYXJrT1NdKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBzd2l0Y2ggKHRlcm5hcnlEYXJrTW9kZSkge1xuICAgICAgICAgICAgY2FzZSAnbGlnaHQnOlxuICAgICAgICAgICAgICAgIHNldERhcmtNb2RlKGZhbHNlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3N5c3RlbSc6XG4gICAgICAgICAgICAgICAgc2V0RGFya01vZGUoaXNEYXJrT1MpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGFyayc6XG4gICAgICAgICAgICAgICAgc2V0RGFya01vZGUodHJ1ZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9LCBbdGVybmFyeURhcmtNb2RlLCBpc0RhcmtPU10pO1xuICAgIGZ1bmN0aW9uIHRvZ2dsZVRlcm5hcnlEYXJrTW9kZSgpIHtcbiAgICAgICAgY29uc3QgdG9nZ2xlRGljdCA9IHtcbiAgICAgICAgICAgIGxpZ2h0OiAnc3lzdGVtJyxcbiAgICAgICAgICAgIHN5c3RlbTogJ2RhcmsnLFxuICAgICAgICAgICAgZGFyazogJ2xpZ2h0JyxcbiAgICAgICAgfTtcbiAgICAgICAgc2V0VGVybmFyeURhcmtNb2RlKHByZXZNb2RlID0+IHRvZ2dsZURpY3RbcHJldk1vZGVdKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaXNEYXJrTW9kZSxcbiAgICAgICAgdGVybmFyeURhcmtNb2RlLFxuICAgICAgICBzZXRUZXJuYXJ5RGFya01vZGUsXG4gICAgICAgIHRvZ2dsZVRlcm5hcnlEYXJrTW9kZSxcbiAgICB9O1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlVGVybmFyeURhcmtNb2RlO1xuIiwiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlVGltZW91dChjYWxsYmFjaywgZGVsYXkpIHtcbiAgICBjb25zdCBzYXZlZENhbGxiYWNrID0gdXNlUmVmKGNhbGxiYWNrKTtcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgc2F2ZWRDYWxsYmFjay5jdXJyZW50ID0gY2FsbGJhY2s7XG4gICAgfSwgW2NhbGxiYWNrXSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKCFkZWxheSAmJiBkZWxheSAhPT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGlkID0gc2V0VGltZW91dCgoKSA9PiBzYXZlZENhbGxiYWNrLmN1cnJlbnQoKSwgZGVsYXkpO1xuICAgICAgICByZXR1cm4gKCkgPT4gY2xlYXJUaW1lb3V0KGlkKTtcbiAgICB9LCBbZGVsYXldKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVRpbWVvdXQ7XG4iLCJpbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5mdW5jdGlvbiB1c2VUb2dnbGUoZGVmYXVsdFZhbHVlKSB7XG4gICAgY29uc3QgW3ZhbHVlLCBzZXRWYWx1ZV0gPSB1c2VTdGF0ZSghIWRlZmF1bHRWYWx1ZSk7XG4gICAgY29uc3QgdG9nZ2xlID0gdXNlQ2FsbGJhY2soKCkgPT4gc2V0VmFsdWUoeCA9PiAheCksIFtdKTtcbiAgICByZXR1cm4gW3ZhbHVlLCB0b2dnbGUsIHNldFZhbHVlXTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVRvZ2dsZTtcbiIsImltcG9ydCB7IHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHVzZUlzRmlyc3RSZW5kZXIgfSBmcm9tICcuLic7XG5mdW5jdGlvbiB1c2VVcGRhdGVFZmZlY3QoZWZmZWN0LCBkZXBzKSB7XG4gICAgY29uc3QgaXNGaXJzdCA9IHVzZUlzRmlyc3RSZW5kZXIoKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIWlzRmlyc3QpIHtcbiAgICAgICAgICAgIHJldHVybiBlZmZlY3QoKTtcbiAgICAgICAgfVxuICAgIH0sIGRlcHMpO1xufVxuZXhwb3J0IGRlZmF1bHQgdXNlVXBkYXRlRWZmZWN0O1xuIiwiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VFdmVudExpc3RlbmVyLCB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0IH0gZnJvbSAnLi4nO1xuZnVuY3Rpb24gdXNlV2luZG93U2l6ZSgpIHtcbiAgICBjb25zdCBbd2luZG93U2l6ZSwgc2V0V2luZG93U2l6ZV0gPSB1c2VTdGF0ZSh7XG4gICAgICAgIHdpZHRoOiAwLFxuICAgICAgICBoZWlnaHQ6IDAsXG4gICAgfSk7XG4gICAgY29uc3QgaGFuZGxlU2l6ZSA9ICgpID0+IHtcbiAgICAgICAgc2V0V2luZG93U2l6ZSh7XG4gICAgICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCxcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICB1c2VFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVTaXplKTtcbiAgICB1c2VJc29tb3JwaGljTGF5b3V0RWZmZWN0KCgpID0+IHtcbiAgICAgICAgaGFuZGxlU2l6ZSgpO1xuICAgIH0sIFtdKTtcbiAgICByZXR1cm4gd2luZG93U2l6ZTtcbn1cbmV4cG9ydCBkZWZhdWx0IHVzZVdpbmRvd1NpemU7XG4iLCJleHBvcnQgeyBkZWZhdWx0IGFzIHVzZUJvb2xlYW4gfSBmcm9tICcuL3VzZUJvb2xlYW4vdXNlQm9vbGVhbic7XG5leHBvcnQgKiBmcm9tICcuL3VzZUJvb2xlYW4vdXNlQm9vbGVhbic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNsaWNrQW55V2hlcmUgfSBmcm9tICcuL3VzZUNsaWNrQW55V2hlcmUvdXNlQ2xpY2tBbnlXaGVyZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUNsaWNrQW55V2hlcmUvdXNlQ2xpY2tBbnlXaGVyZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUNvcHlUb0NsaXBib2FyZCB9IGZyb20gJy4vdXNlQ29weVRvQ2xpcGJvYXJkL3VzZUNvcHlUb0NsaXBib2FyZCc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUNvcHlUb0NsaXBib2FyZC91c2VDb3B5VG9DbGlwYm9hcmQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VDb3VudGRvd24gfSBmcm9tICcuL3VzZUNvdW50ZG93bi91c2VDb3VudGRvd24nO1xuZXhwb3J0ICogZnJvbSAnLi91c2VDb3VudGRvd24vdXNlQ291bnRkb3duJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlQ291bnRlciB9IGZyb20gJy4vdXNlQ291bnRlci91c2VDb3VudGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlQ291bnRlci91c2VDb3VudGVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlRGFya01vZGUgfSBmcm9tICcuL3VzZURhcmtNb2RlL3VzZURhcmtNb2RlJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlRGFya01vZGUvdXNlRGFya01vZGUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VEZWJvdW5jZSB9IGZyb20gJy4vdXNlRGVib3VuY2UvdXNlRGVib3VuY2UnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VEZWJvdW5jZS91c2VEZWJvdW5jZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZURvY3VtZW50VGl0bGUgfSBmcm9tICcuL3VzZURvY3VtZW50VGl0bGUvdXNlRG9jdW1lbnRUaXRsZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZURvY3VtZW50VGl0bGUvdXNlRG9jdW1lbnRUaXRsZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUVmZmVjdE9uY2UgfSBmcm9tICcuL3VzZUVmZmVjdE9uY2UvdXNlRWZmZWN0T25jZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUVmZmVjdE9uY2UvdXNlRWZmZWN0T25jZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUVsZW1lbnRTaXplIH0gZnJvbSAnLi91c2VFbGVtZW50U2l6ZS91c2VFbGVtZW50U2l6ZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUVsZW1lbnRTaXplL3VzZUVsZW1lbnRTaXplJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlRXZlbnRDYWxsYmFjayB9IGZyb20gJy4vdXNlRXZlbnRDYWxsYmFjay91c2VFdmVudENhbGxiYWNrJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlRXZlbnRDYWxsYmFjay91c2VFdmVudENhbGxiYWNrJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlRXZlbnRMaXN0ZW5lciB9IGZyb20gJy4vdXNlRXZlbnRMaXN0ZW5lci91c2VFdmVudExpc3RlbmVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlRXZlbnRMaXN0ZW5lci91c2VFdmVudExpc3RlbmVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlRmV0Y2ggfSBmcm9tICcuL3VzZUZldGNoL3VzZUZldGNoJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlRmV0Y2gvdXNlRmV0Y2gnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VIb3ZlciB9IGZyb20gJy4vdXNlSG92ZXIvdXNlSG92ZXInO1xuZXhwb3J0ICogZnJvbSAnLi91c2VIb3Zlci91c2VIb3Zlcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUltYWdlT25Mb2FkIH0gZnJvbSAnLi91c2VJbWFnZU9uTG9hZC91c2VJbWFnZU9uTG9hZCc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUltYWdlT25Mb2FkL3VzZUltYWdlT25Mb2FkJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIgfSBmcm9tICcuL3VzZUludGVyc2VjdGlvbk9ic2VydmVyL3VzZUludGVyc2VjdGlvbk9ic2VydmVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXIvdXNlSW50ZXJzZWN0aW9uT2JzZXJ2ZXInO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VJbnRlcnZhbCB9IGZyb20gJy4vdXNlSW50ZXJ2YWwvdXNlSW50ZXJ2YWwnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VJbnRlcnZhbC91c2VJbnRlcnZhbCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUlzQ2xpZW50IH0gZnJvbSAnLi91c2VJc0NsaWVudC91c2VJc0NsaWVudCc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUlzQ2xpZW50L3VzZUlzQ2xpZW50JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlSXNGaXJzdFJlbmRlciB9IGZyb20gJy4vdXNlSXNGaXJzdFJlbmRlci91c2VJc0ZpcnN0UmVuZGVyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlSXNGaXJzdFJlbmRlci91c2VJc0ZpcnN0UmVuZGVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlSXNNb3VudGVkIH0gZnJvbSAnLi91c2VJc01vdW50ZWQvdXNlSXNNb3VudGVkJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlSXNNb3VudGVkL3VzZUlzTW91bnRlZCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QgfSBmcm9tICcuL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUlzb21vcnBoaWNMYXlvdXRFZmZlY3QvdXNlSXNvbW9ycGhpY0xheW91dEVmZmVjdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZUxvY2FsU3RvcmFnZSB9IGZyb20gJy4vdXNlTG9jYWxTdG9yYWdlL3VzZUxvY2FsU3RvcmFnZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZUxvY2FsU3RvcmFnZS91c2VMb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VMb2NrZWRCb2R5IH0gZnJvbSAnLi91c2VMb2NrZWRCb2R5L3VzZUxvY2tlZEJvZHknO1xuZXhwb3J0ICogZnJvbSAnLi91c2VMb2NrZWRCb2R5L3VzZUxvY2tlZEJvZHknO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VNYXAgfSBmcm9tICcuL3VzZU1hcC91c2VNYXAnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VNYXAvdXNlTWFwJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlTWVkaWFRdWVyeSB9IGZyb20gJy4vdXNlTWVkaWFRdWVyeS91c2VNZWRpYVF1ZXJ5JztcbmV4cG9ydCAqIGZyb20gJy4vdXNlTWVkaWFRdWVyeS91c2VNZWRpYVF1ZXJ5JztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlT25DbGlja091dHNpZGUgfSBmcm9tICcuL3VzZU9uQ2xpY2tPdXRzaWRlL3VzZU9uQ2xpY2tPdXRzaWRlJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlT25DbGlja091dHNpZGUvdXNlT25DbGlja091dHNpZGUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VSZWFkTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi91c2VSZWFkTG9jYWxTdG9yYWdlL3VzZVJlYWRMb2NhbFN0b3JhZ2UnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VSZWFkTG9jYWxTdG9yYWdlL3VzZVJlYWRMb2NhbFN0b3JhZ2UnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VTY3JlZW4gfSBmcm9tICcuL3VzZVNjcmVlbi91c2VTY3JlZW4nO1xuZXhwb3J0ICogZnJvbSAnLi91c2VTY3JlZW4vdXNlU2NyZWVuJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlU2NyaXB0IH0gZnJvbSAnLi91c2VTY3JpcHQvdXNlU2NyaXB0JztcbmV4cG9ydCAqIGZyb20gJy4vdXNlU2NyaXB0L3VzZVNjcmlwdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVNlc3Npb25TdG9yYWdlIH0gZnJvbSAnLi91c2VTZXNzaW9uU3RvcmFnZS91c2VTZXNzaW9uU3RvcmFnZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZVNlc3Npb25TdG9yYWdlL3VzZVNlc3Npb25TdG9yYWdlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlU3NyIH0gZnJvbSAnLi91c2VTc3IvdXNlU3NyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlU3NyL3VzZVNzcic7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVN0ZXAgfSBmcm9tICcuL3VzZVN0ZXAvdXNlU3RlcCc7XG5leHBvcnQgKiBmcm9tICcuL3VzZVN0ZXAvdXNlU3RlcCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVRlcm5hcnlEYXJrTW9kZSB9IGZyb20gJy4vdXNlVGVybmFyeURhcmtNb2RlL3VzZVRlcm5hcnlEYXJrTW9kZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZVRlcm5hcnlEYXJrTW9kZS91c2VUZXJuYXJ5RGFya01vZGUnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VUaW1lb3V0IH0gZnJvbSAnLi91c2VUaW1lb3V0L3VzZVRpbWVvdXQnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VUaW1lb3V0L3VzZVRpbWVvdXQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyB1c2VUb2dnbGUgfSBmcm9tICcuL3VzZVRvZ2dsZS91c2VUb2dnbGUnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VUb2dnbGUvdXNlVG9nZ2xlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlVXBkYXRlRWZmZWN0IH0gZnJvbSAnLi91c2VVcGRhdGVFZmZlY3QvdXNlVXBkYXRlRWZmZWN0JztcbmV4cG9ydCAqIGZyb20gJy4vdXNlVXBkYXRlRWZmZWN0L3VzZVVwZGF0ZUVmZmVjdCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIHVzZVdpbmRvd1NpemUgfSBmcm9tICcuL3VzZVdpbmRvd1NpemUvdXNlV2luZG93U2l6ZSc7XG5leHBvcnQgKiBmcm9tICcuL3VzZVdpbmRvd1NpemUvdXNlV2luZG93U2l6ZSc7XG4iLCJpbXBvcnQgUmVhY3QsIHsgUmVhY3ROb2RlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgdXNlTG9jYWxTdG9yYWdlIH0gZnJvbSAndXNlaG9va3MtdHMnO1xuaW1wb3J0IHsgdXNlU3Vic2NyaXB0aW9uIH0gZnJvbSAnQGRlcml2L2FwaSc7XG5pbXBvcnQgRXhjaGFuZ2VSYXRlc0NvbnRleHQgZnJvbSAnLi4vc3RvcmVzL0V4Y2hhbmdlUmF0ZXNDb250ZXh0JztcblxudHlwZSBURXhjaGFuZ2VSYXRlc1Byb3ZpZGVyID0ge1xuICAgIGNoaWxkcmVuOiBSZWFjdE5vZGU7XG59O1xuXG50eXBlIFRSYXRlID0gUmVjb3JkPHN0cmluZywgUmVjb3JkPHN0cmluZywgbnVtYmVyPj47XG5cbmNvbnN0IEV4Y2hhbmdlUmF0ZXNQcm92aWRlciA9ICh7IGNoaWxkcmVuIH06IFRFeGNoYW5nZVJhdGVzUHJvdmlkZXIpID0+IHtcbiAgICBjb25zdCBbZXhjaGFuZ2VfcmF0ZXMsIHNldEV4Y2hhbmdlUmF0ZXNdID0gdXNlTG9jYWxTdG9yYWdlPFRSYXRlPignZXhjaGFuZ2VfcmF0ZXMnLCB7fSk7XG5cbiAgICBjb25zdCB7IHN1YnNjcmliZSwgZGF0YSwgLi4ucmVzdCB9ID0gdXNlU3Vic2NyaXB0aW9uKCdleGNoYW5nZV9yYXRlcycpO1xuXG4gICAgY29uc3QgaGFuZGxlU3Vic2NyaXB0aW9uID0gKGJhc2VfY3VycmVuY3k6IHN0cmluZywgdGFyZ2V0X2N1cnJlbmN5OiBzdHJpbmcpID0+IHtcbiAgICAgICAgaWYgKGJhc2VfY3VycmVuY3kgPT09ICcnIHx8IHRhcmdldF9jdXJyZW5jeSA9PT0gJycgfHwgYmFzZV9jdXJyZW5jeSA9PT0gdGFyZ2V0X2N1cnJlbmN5KSByZXR1cm47XG4gICAgICAgIHN1YnNjcmliZSh7XG4gICAgICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICAgICAgYmFzZV9jdXJyZW5jeSxcbiAgICAgICAgICAgICAgICB0YXJnZXRfY3VycmVuY3ksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKGRhdGEpIHtcbiAgICAgICAgICAgIHNldEV4Y2hhbmdlUmF0ZXMocHJldl9yYXRlcyA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgYmFzZV9jdXJyZW5jeSA9IGRhdGE/LmV4Y2hhbmdlX3JhdGVzPy5iYXNlX2N1cnJlbmN5IHx8ICdVU0QnO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld19yYXRlcyA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4ucHJldl9yYXRlcyxcbiAgICAgICAgICAgICAgICAgICAgW2Jhc2VfY3VycmVuY3ldOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5wcmV2X3JhdGVzW2Jhc2VfY3VycmVuY3ldLFxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uZGF0YT8uZXhjaGFuZ2VfcmF0ZXM/LnJhdGVzLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ld19yYXRlcztcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSwgW2RhdGEsIHNldEV4Y2hhbmdlUmF0ZXNdKTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxFeGNoYW5nZVJhdGVzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBoYW5kbGVTdWJzY3JpcHRpb24sIGV4Y2hhbmdlX3JhdGVzLCByZXN0IH19PlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L0V4Y2hhbmdlUmF0ZXNDb250ZXh0LlByb3ZpZGVyPlxuICAgICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBFeGNoYW5nZVJhdGVzUHJvdmlkZXI7XG4iLCJleHBvcnQgeyBvYnNlcnZlciB9IGZyb20gJ21vYngtcmVhY3QtbGl0ZSc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIG1vY2tTdG9yZSB9IGZyb20gJy4vbW9ja1N0b3JlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU3RvcmVDb250ZXh0IH0gZnJvbSAnLi9zdG9yZUNvbnRleHQnO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTdG9yZVByb3ZpZGVyIH0gZnJvbSAnLi9zdG9yZVByb3ZpZGVyJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgdXNlU3RvcmUgfSBmcm9tICcuL3VzZVN0b3JlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgRXhjaGFuZ2VSYXRlc0NvbnRleHQgfSBmcm9tICcuL3N0b3Jlcy9FeGNoYW5nZVJhdGVzQ29udGV4dCc7XG5leHBvcnQgeyBkZWZhdWx0IGFzIEV4Y2hhbmdlUmF0ZXNQcm92aWRlciB9IGZyb20gJy4vcHJvdmlkZXJzL0V4Y2hhbmdlUmF0ZXNQcm92aWRlcic7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzTmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgeyBGb3JtaWssIEZvcm0sIEZpZWxkLCBGb3JtaWtWYWx1ZXMsIEZvcm1pa0Vycm9ycywgRmllbGRQcm9wcyB9IGZyb20gJ2Zvcm1payc7XG5pbXBvcnQgeyBUaW1lbGluZSwgSW5wdXQsIEJ1dHRvbiwgVGhlbWVkU2Nyb2xsYmFycywgTG9hZGluZyB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCBJbmxpbmVOb3RlV2l0aEljb24gZnJvbSAnLi4vaW5saW5lLW5vdGUtd2l0aC1pY29uJztcbmltcG9ydCB7IGlzRGVza3RvcCwgaXNNb2JpbGUsIGdldFByb3BlcnR5VmFsdWUsIHVzZUlzTW91bnRlZCwgV1MgfSBmcm9tICdAZGVyaXYvc2hhcmVkJztcbmltcG9ydCB7IGxvY2FsaXplIH0gZnJvbSAnQGRlcml2L3RyYW5zbGF0aW9ucyc7XG5pbXBvcnQgTG9hZEVycm9yTWVzc2FnZSBmcm9tICdDb21wb25lbnRzL2xvYWQtZXJyb3ItbWVzc2FnZSc7XG5pbXBvcnQgQXBpVG9rZW5BcnRpY2xlIGZyb20gJy4vYXBpLXRva2VuLWFydGljbGUnO1xuaW1wb3J0IEFwaVRva2VuQ2FyZCBmcm9tICcuL2FwaS10b2tlbi1jYXJkJztcbmltcG9ydCBBcGlUb2tlbkZvb3RlciBmcm9tICcuL2FwaS10b2tlbi1mb290ZXInO1xuaW1wb3J0IEFwaVRva2VuT3ZlcmxheSBmcm9tICcuL2FwaS10b2tlbi1vdmVybGF5JztcbmltcG9ydCBBcGlUb2tlblRhYmxlIGZyb20gJy4vYXBpLXRva2VuLXRhYmxlJztcbmltcG9ydCBBcGlUb2tlbkNvbnRleHQgZnJvbSAnLi9hcGktdG9rZW4tY29udGV4dCc7XG5pbXBvcnQgeyBUVG9rZW4gfSBmcm9tICdUeXBlcyc7XG5pbXBvcnQgeyBvYnNlcnZlciwgdXNlU3RvcmUgfSBmcm9tICdAZGVyaXYvc3RvcmVzJztcblxuY29uc3QgTUlOX1RPS0VOID0gMjtcbmNvbnN0IE1BWF9UT0tFTiA9IDMyO1xuXG50eXBlIEFwdFRva2VuU3RhdGUgPSB7XG4gICAgYXBpX3Rva2VuczogTm9uTnVsbGFibGU8VFRva2VuW10+O1xuICAgIGlzX2xvYWRpbmc6IGJvb2xlYW47XG4gICAgaXNfc3VjY2VzczogYm9vbGVhbjtcbiAgICBpc19vdmVybGF5X3Nob3duOiBib29sZWFuO1xuICAgIGVycm9yX21lc3NhZ2U6IHN0cmluZztcbiAgICBzaG93X2RlbGV0ZTogYm9vbGVhbjtcbiAgICBkaXNwb3NlX3Rva2VuOiBzdHJpbmc7XG4gICAgaXNfZGVsZXRlX2xvYWRpbmc6IGJvb2xlYW47XG4gICAgaXNfZGVsZXRlX3N1Y2Nlc3M6IGJvb2xlYW47XG59O1xuXG5leHBvcnQgdHlwZSBUQXBpVG9rZW4gPSB7XG4gICAgZm9vdGVyX3JlZjogRWxlbWVudCB8IERvY3VtZW50RnJhZ21lbnQgfCB1bmRlZmluZWQ7XG4gICAgaXNfYXBwX3NldHRpbmdzOiBib29sZWFuO1xuICAgIG92ZXJsYXlfcmVmOlxuICAgICAgICB8IHVuZGVmaW5lZFxuICAgICAgICB8ICgoLi4uYXJnczogdW5rbm93bltdKSA9PiB1bmtub3duKVxuICAgICAgICB8IGltcG9ydCgncHJvcC10eXBlcycpLkluZmVyUHJvcHM8e1xuICAgICAgICAgICAgICBjdXJyZW50OiBpbXBvcnQoJ3Byb3AtdHlwZXMnKS5SZXF1aXJlYWJsZTx1bmtub3duPjtcbiAgICAgICAgICB9PjtcbiAgICBzZXRJc092ZXJsYXlTaG93bjogKGlzX292ZXJsYXlfc2hvd246IGJvb2xlYW4gfCB1bmRlZmluZWQpID0+IHZvaWQ7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbn07XG5cbmNvbnN0IEFwaVRva2VuID0gKHsgZm9vdGVyX3JlZiwgaXNfYXBwX3NldHRpbmdzLCBvdmVybGF5X3JlZiwgc2V0SXNPdmVybGF5U2hvd24gfTogVEFwaVRva2VuKSA9PiB7XG4gICAgY29uc3QgeyBjbGllbnQgfSA9IHVzZVN0b3JlKCk7XG4gICAgY29uc3QgeyBpc19zd2l0Y2hpbmcgfSA9IGNsaWVudDtcbiAgICBjb25zdCBpc01vdW50ZWQgPSB1c2VJc01vdW50ZWQoKTtcbiAgICBjb25zdCBwcmV2X2lzX3N3aXRjaGluZyA9IFJlYWN0LnVzZVJlZihpc19zd2l0Y2hpbmcpO1xuICAgIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gUmVhY3QudXNlUmVkdWNlcihcbiAgICAgICAgKHByZXZfc3RhdGU6IFBhcnRpYWw8QXB0VG9rZW5TdGF0ZT4sIHZhbHVlOiBQYXJ0aWFsPEFwdFRva2VuU3RhdGU+KSA9PiAoe1xuICAgICAgICAgICAgLi4ucHJldl9zdGF0ZSxcbiAgICAgICAgICAgIC4uLnZhbHVlLFxuICAgICAgICB9KSxcbiAgICAgICAge1xuICAgICAgICAgICAgYXBpX3Rva2VuczogW10sXG4gICAgICAgICAgICBpc19sb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgaXNfc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgICBpc19vdmVybGF5X3Nob3duOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yX21lc3NhZ2U6ICcnLFxuICAgICAgICAgICAgc2hvd19kZWxldGU6IGZhbHNlLFxuICAgICAgICAgICAgZGlzcG9zZV90b2tlbjogJycsXG4gICAgICAgICAgICBpc19kZWxldGVfbG9hZGluZzogZmFsc2UsXG4gICAgICAgICAgICBpc19kZWxldGVfc3VjY2VzczogZmFsc2UsXG4gICAgICAgIH1cbiAgICApO1xuXG4gICAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgZ2V0QXBpVG9rZW5zKCk7XG5cbiAgICAgICAgcmV0dXJuICgpID0+IHNldFN0YXRlKHsgZGlzcG9zZV90b2tlbjogJycgfSk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWFjdC1ob29rcy9leGhhdXN0aXZlLWRlcHNcbiAgICB9LCBbXSk7XG5cbiAgICBSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAocHJldl9pc19zd2l0Y2hpbmcuY3VycmVudCAhPT0gaXNfc3dpdGNoaW5nKSB7XG4gICAgICAgICAgICBwcmV2X2lzX3N3aXRjaGluZy5jdXJyZW50ID0gaXNfc3dpdGNoaW5nO1xuICAgICAgICAgICAgZ2V0QXBpVG9rZW5zKCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xuICAgIH0sIFtpc19zd2l0Y2hpbmddKTtcblxuICAgIFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0SXNPdmVybGF5U2hvd24gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHNldElzT3ZlcmxheVNob3duKHN0YXRlLmlzX292ZXJsYXlfc2hvd24pO1xuICAgICAgICB9XG4gICAgfSwgW3N0YXRlLmlzX292ZXJsYXlfc2hvd24sIHNldElzT3ZlcmxheVNob3duXSk7XG5cbiAgICBjb25zdCBpbml0aWFsX2Zvcm0gPSB7XG4gICAgICAgIHRva2VuX25hbWU6ICcnLFxuICAgICAgICByZWFkOiBmYWxzZSxcbiAgICAgICAgdHJhZGU6IGZhbHNlLFxuICAgICAgICBwYXltZW50czogZmFsc2UsXG4gICAgICAgIHRyYWRpbmdfaW5mb3JtYXRpb246IGZhbHNlLFxuICAgICAgICBhZG1pbjogZmFsc2UsXG4gICAgfTtcblxuICAgIGNvbnN0IHRvZ2dsZU92ZXJsYXkgPSAoKSA9PiBzZXRTdGF0ZSh7IGlzX292ZXJsYXlfc2hvd246ICFzdGF0ZS5pc19vdmVybGF5X3Nob3duIH0pO1xuXG4gICAgY29uc3QgdmFsaWRhdGVGaWVsZHMgPSAodmFsdWVzOiBGb3JtaWtWYWx1ZXMpID0+IHtcbiAgICAgICAgY29uc3QgZXJyb3JzOiBGb3JtaWtFcnJvcnM8Rm9ybWlrVmFsdWVzPiA9IHt9O1xuICAgICAgICBjb25zdCB0b2tlbl9uYW1lID0gdmFsdWVzPy50b2tlbl9uYW1lPy50cmltKCk7XG5cbiAgICAgICAgaWYgKCF0b2tlbl9uYW1lKSB7XG4gICAgICAgICAgICBlcnJvcnMudG9rZW5fbmFtZSA9IGxvY2FsaXplKCdQbGVhc2UgZW50ZXIgYSB0b2tlbiBuYW1lLicpO1xuICAgICAgICB9IGVsc2UgaWYgKCEvXltBLVphLXowLTlcXHNfXSskL2cudGVzdCh0b2tlbl9uYW1lKSkge1xuICAgICAgICAgICAgZXJyb3JzLnRva2VuX25hbWUgPSBsb2NhbGl6ZSgnT25seSBsZXR0ZXJzLCBudW1iZXJzLCBhbmQgdW5kZXJzY29yZXMgYXJlIGFsbG93ZWQuJyk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW5fbmFtZS5sZW5ndGggPCBNSU5fVE9LRU4pIHtcbiAgICAgICAgICAgIGVycm9ycy50b2tlbl9uYW1lID0gbG9jYWxpemUoXG4gICAgICAgICAgICAgICAgJ0xlbmd0aCBvZiB0b2tlbiBuYW1lIG11c3QgYmUgYmV0d2VlbiB7e01JTl9UT0tFTn19IGFuZCB7e01BWF9UT0tFTn19IGNoYXJhY3RlcnMuJyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIE1JTl9UT0tFTixcbiAgICAgICAgICAgICAgICAgICAgTUFYX1RPS0VOLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSBpZiAodG9rZW5fbmFtZS5sZW5ndGggPiBNQVhfVE9LRU4pIHtcbiAgICAgICAgICAgIGVycm9ycy50b2tlbl9uYW1lID0gbG9jYWxpemUoJ01heGltdW0ge3tNQVhfVE9LRU59fSBjaGFyYWN0ZXJzLicsIHsgTUFYX1RPS0VOIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGVycm9ycztcbiAgICB9O1xuXG4gICAgY29uc3Qgc2VsZWN0ZWRUb2tlblNjb3BlID0gKHZhbHVlczogRm9ybWlrVmFsdWVzKSA9PlxuICAgICAgICBPYmplY3Qua2V5cyh2YWx1ZXMpLmZpbHRlcihpdGVtID0+IGl0ZW0gIT09ICd0b2tlbl9uYW1lJyAmJiB2YWx1ZXNbaXRlbV0pO1xuICAgIGNvbnN0IGhhbmRsZVN1Ym1pdCA9IGFzeW5jICh2YWx1ZXM6IEZvcm1pa1ZhbHVlcywgeyBzZXRTdWJtaXR0aW5nLCBzZXRGaWVsZEVycm9yLCByZXNldEZvcm0gfTogYW55KSA9PiB7XG4gICAgICAgIGNvbnN0IHRva2VuX3Jlc3BvbnNlID0gYXdhaXQgV1MuYXBpVG9rZW4oe1xuICAgICAgICAgICAgYXBpX3Rva2VuOiAxLFxuICAgICAgICAgICAgbmV3X3Rva2VuOiB2YWx1ZXMudG9rZW5fbmFtZSxcbiAgICAgICAgICAgIG5ld190b2tlbl9zY29wZXM6IHNlbGVjdGVkVG9rZW5TY29wZSh2YWx1ZXMpLFxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAodG9rZW5fcmVzcG9uc2UuZXJyb3IpIHtcbiAgICAgICAgICAgIHNldEZpZWxkRXJyb3IoJ3Rva2VuX25hbWUnLCB0b2tlbl9yZXNwb25zZS5lcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfSBlbHNlIGlmIChpc01vdW50ZWQoKSkge1xuICAgICAgICAgICAgc2V0U3RhdGUoe1xuICAgICAgICAgICAgICAgIGlzX3N1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICAgICAgYXBpX3Rva2VuczogZ2V0UHJvcGVydHlWYWx1ZSh0b2tlbl9yZXNwb25zZSwgWydhcGlfdG9rZW4nLCAndG9rZW5zJ10pLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXNNb3VudGVkKCkpIHNldFN0YXRlKHsgaXNfc3VjY2VzczogZmFsc2UgfSk7XG4gICAgICAgICAgICB9LCA1MDApO1xuICAgICAgICB9XG5cbiAgICAgICAgcmVzZXRGb3JtKCk7XG4gICAgICAgIHNldFN1Ym1pdHRpbmcoZmFsc2UpO1xuICAgIH07XG5cbiAgICBjb25zdCBwb3B1bGF0ZVRva2VuUmVzcG9uc2UgPSAocmVzcG9uc2U6IGltcG9ydCgnQGRlcml2L2FwaS10eXBlcycpLkFQSVRva2VuUmVzcG9uc2UpID0+IHtcbiAgICAgICAgaWYgKCFpc01vdW50ZWQoKSkgcmV0dXJuO1xuICAgICAgICBpZiAocmVzcG9uc2UuZXJyb3IpIHtcbiAgICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBpc19sb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBlcnJvcl9tZXNzYWdlOiBnZXRQcm9wZXJ0eVZhbHVlKHJlc3BvbnNlLCBbJ2Vycm9yJywgJ21lc3NhZ2UnXSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICBpc19sb2FkaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBhcGlfdG9rZW5zOiBnZXRQcm9wZXJ0eVZhbHVlKHJlc3BvbnNlLCBbJ2FwaV90b2tlbicsICd0b2tlbnMnXSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBjb25zdCBnZXRBcGlUb2tlbnMgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHNldFN0YXRlKHsgaXNfbG9hZGluZzogdHJ1ZSB9KTtcbiAgICAgICAgY29uc3QgdG9rZW5fcmVzcG9uc2UgPSBhd2FpdCBXUy5hdXRob3JpemVkLmFwaVRva2VuKHsgYXBpX3Rva2VuOiAxIH0pO1xuICAgICAgICBwb3B1bGF0ZVRva2VuUmVzcG9uc2UodG9rZW5fcmVzcG9uc2UpO1xuICAgIH07XG5cbiAgICBjb25zdCBkZWxldGVUb2tlbiA9IGFzeW5jICh0b2tlbjogc3RyaW5nKSA9PiB7XG4gICAgICAgIHNldFN0YXRlKHsgaXNfZGVsZXRlX2xvYWRpbmc6IHRydWUgfSk7XG5cbiAgICAgICAgY29uc3QgdG9rZW5fcmVzcG9uc2UgPSBhd2FpdCBXUy5hdXRob3JpemVkLmFwaVRva2VuKHsgYXBpX3Rva2VuOiAxLCBkZWxldGVfdG9rZW46IHRva2VuIH0pO1xuXG4gICAgICAgIHBvcHVsYXRlVG9rZW5SZXNwb25zZSh0b2tlbl9yZXNwb25zZSk7XG5cbiAgICAgICAgaWYgKGlzTW91bnRlZCgpKSBzZXRTdGF0ZSh7IGlzX2RlbGV0ZV9sb2FkaW5nOiBmYWxzZSwgaXNfZGVsZXRlX3N1Y2Nlc3M6IHRydWUgfSk7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNNb3VudGVkKCkpIHNldFN0YXRlKHsgaXNfZGVsZXRlX3N1Y2Nlc3M6IGZhbHNlIH0pO1xuICAgICAgICB9LCA1MDApO1xuICAgIH07XG5cbiAgICBjb25zdCB7IGFwaV90b2tlbnMsIGlzX2xvYWRpbmcsIGlzX3N1Y2Nlc3MsIGVycm9yX21lc3NhZ2UsIGlzX292ZXJsYXlfc2hvd24gfSA9IHN0YXRlO1xuXG4gICAgaWYgKGlzX2xvYWRpbmcgfHwgaXNfc3dpdGNoaW5nKSB7XG4gICAgICAgIHJldHVybiA8TG9hZGluZyBpc19mdWxsc2NyZWVuPXtmYWxzZX0gY2xhc3NOYW1lPSdhY2NvdW50X19pbml0aWFsLWxvYWRlcicgLz47XG4gICAgfVxuXG4gICAgaWYgKGVycm9yX21lc3NhZ2UpIHtcbiAgICAgICAgcmV0dXJuIDxMb2FkRXJyb3JNZXNzYWdlIGVycm9yX21lc3NhZ2U9e2Vycm9yX21lc3NhZ2V9IC8+O1xuICAgIH1cblxuICAgIGNvbnN0IGNvbnRleHRfdmFsdWUgPSB7XG4gICAgICAgIGFwaV90b2tlbnMsXG4gICAgICAgIHRvZ2dsZU92ZXJsYXksXG4gICAgICAgIGRlbGV0ZVRva2VuLFxuICAgICAgICBmb290ZXJfcmVmLFxuICAgICAgICBvdmVybGF5X3JlZixcbiAgICB9O1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFJlYWN0LkZyYWdtZW50PlxuICAgICAgICAgICAgPEFwaVRva2VuQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17Y29udGV4dF92YWx1ZX0+XG4gICAgICAgICAgICAgICAgPHNlY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdkYS1hcGktdG9rZW4nLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAnZGEtYXBpLXRva2VuLS1hcHAtc2V0dGluZ3MnOiBpc19hcHBfc2V0dGluZ3MsXG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fd3JhcHBlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICA8VGhlbWVkU2Nyb2xsYmFycyBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fc2Nyb2xsYmFycycgaXNfYnlwYXNzZWQ9e2lzTW9iaWxlKCl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHshaXNfYXBwX3NldHRpbmdzICYmIGlzTW9iaWxlKCkgJiYgPEFwaVRva2VuQXJ0aWNsZSAvPn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8Rm9ybWlrIGluaXRpYWxWYWx1ZXM9e2luaXRpYWxfZm9ybX0gb25TdWJtaXQ9e2hhbmRsZVN1Ym1pdH0gdmFsaWRhdGU9e3ZhbGlkYXRlRmllbGRzfT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc1ZhbGlkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlydHksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3VjaGVkLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlQ2hhbmdlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlQmx1cixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU3VibWl0dGluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEZpZWxkVmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRGaWVsZFRvdWNoZWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGb3JtIG5vVmFsaWRhdGU+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPFRpbWVsaW5lIGNsYXNzTmFtZT0nZGEtYXBpLXRva2VuX190aW1lbGluZScgbGluZV9oZWlnaHQ9J3h4eGwnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGltZWxpbmUuSXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbV90aXRsZT17bG9jYWxpemUoJ1NlbGVjdCBzY29wZXMgYmFzZWQgb24gdGhlIGFjY2VzcyB5b3UgbmVlZC4nKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9fY2hlY2tib3gtd3JhcHBlcic+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuQ2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSdyZWFkJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLnJlYWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNldEZpZWxkVmFsdWU9e3NldEZpZWxkVmFsdWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlfbmFtZT17bG9jYWxpemUoJ1JlYWQnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RoaXMgc2NvcGUgd2lsbCBhbGxvdyB0aGlyZC1wYXJ0eSBhcHBzIHRvIHZpZXcgeW91ciBhY2NvdW50IGFjdGl2aXR5LCBzZXR0aW5ncywgbGltaXRzLCBiYWxhbmNlIHNoZWV0cywgdHJhZGUgcHVyY2hhc2UgaGlzdG9yeSwgYW5kIG1vcmUuJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuQ2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSd0cmFkZSdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlcy50cmFkZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheV9uYW1lPXtsb2NhbGl6ZSgnVHJhZGUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RmllbGRWYWx1ZT17c2V0RmllbGRWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RoaXMgc2NvcGUgd2lsbCBhbGxvdyB0aGlyZC1wYXJ0eSBhcHBzIHRvIGJ1eSBhbmQgc2VsbCBjb250cmFjdHMgZm9yIHlvdSwgcmVuZXcgeW91ciBleHBpcmVkIHB1cmNoYXNlcywgYW5kIHRvcCB1cCB5b3VyIGRlbW8gYWNjb3VudHMuJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuQ2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSdwYXltZW50cydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlcy5wYXltZW50c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheV9uYW1lPXtsb2NhbGl6ZSgnUGF5bWVudHMnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RmllbGRWYWx1ZT17c2V0RmllbGRWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RoaXMgc2NvcGUgd2lsbCBhbGxvdyB0aGlyZC1wYXJ0eSBhcHBzIHRvIHdpdGhkcmF3IHRvIHBheW1lbnQgYWdlbnRzIGFuZCBtYWtlIGludGVyLWFjY291bnQgdHJhbnNmZXJzIGZvciB5b3UuJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuQ2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSd0cmFkaW5nX2luZm9ybWF0aW9uJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLnRyYWRpbmdfaW5mb3JtYXRpb259XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlfbmFtZT17bG9jYWxpemUoJ1RyYWRpbmcgaW5mb3JtYXRpb24nKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RmllbGRWYWx1ZT17c2V0RmllbGRWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RoaXMgc2NvcGUgd2lsbCBhbGxvdyB0aGlyZC1wYXJ0eSBhcHBzIHRvIHZpZXcgeW91ciB0cmFkaW5nIGhpc3RvcnkuJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPEFwaVRva2VuQ2FyZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lPSdhZG1pbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU9e3ZhbHVlcy5hZG1pbn1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheV9uYW1lPXtsb2NhbGl6ZSgnQWRtaW4nKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0RmllbGRWYWx1ZT17c2V0RmllbGRWYWx1ZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzY3JpcHRpb249e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ1RoaXMgc2NvcGUgd2lsbCBhbGxvdyB0aGlyZC1wYXJ0eSBhcHBzIHRvIG9wZW4gYWNjb3VudHMgZm9yIHlvdSwgbWFuYWdlIHlvdXIgc2V0dGluZ3MgYW5kIHRva2VuIHVzYWdlLCBhbmQgbW9yZS4gJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPElubGluZU5vdGVXaXRoSWNvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWNvbj0nSWNBbGVydFdhcm5pbmcnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlPXtsb2NhbGl6ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnVG8gYXZvaWQgbG9zcyBvZiBmdW5kcywgZG8gbm90IHNoYXJlIHRva2VucyB3aXRoIHRoZSBBZG1pbiBzY29wZSB3aXRoIHVuYXV0aG9yaXNlZCBwYXJ0aWVzLidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17bG9jYWxpemUoJ05vdGUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0FwaVRva2VuQ2FyZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RpbWVsaW5lLkl0ZW0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxUaW1lbGluZS5JdGVtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtX3RpdGxlPXtsb2NhbGl6ZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIk5hbWUgeW91ciB0b2tlbiBhbmQgY2xpY2sgb24gJ0NyZWF0ZScgdG8gZ2VuZXJhdGUgeW91ciB0b2tlbi5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2RhLWFwaS10b2tlbl9faW5wdXQtZ3JvdXAnPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxGaWVsZCBuYW1lPSd0b2tlbl9uYW1lJz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyh7IGZpZWxkIH06IEZpZWxkUHJvcHM8c3RyaW5nIHwgYm9vbGVhbj4pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxJbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsuLi5maWVsZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLWxwaWdub3JlPSd0cnVlJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9J3RleHQnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPSdkYS1hcGktdG9rZW5fX2lucHV0IGRjLWlucHV0X19pbnB1dC1ncm91cCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbD17bG9jYWxpemUoJ1Rva2VuIG5hbWUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZT17dmFsdWVzLnRva2VuX25hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2UgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRGaWVsZFRvdWNoZWQoJ3Rva2VuX25hbWUnLCB0cnVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGFuZGxlQ2hhbmdlKGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25CbHVyPXtoYW5kbGVCbHVyfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhpbnQ9e2xvY2FsaXplKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnTGVuZ3RoIG9mIHRva2VuIG5hbWUgbXVzdCBiZSBiZXR3ZWVuIDIgYW5kIDMyIGNoYXJhY3RlcnMuJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlcnJvcj17dG91Y2hlZC50b2tlbl9uYW1lICYmIGVycm9ycy50b2tlbl9uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0ZpZWxkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RjLWJ0bl9fYnV0dG9uLWdyb3VwJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdkYS1hcGktdG9rZW5fX2J1dHRvbicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ2RhLWFwaS10b2tlbl9fYnV0dG9uLS1zdWNjZXNzJzogaXNfc3VjY2VzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0nc3VibWl0J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc19kaXNhYmxlZD17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAhZGlydHkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzU3VibWl0dGluZyB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIWlzVmFsaWQgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICFzZWxlY3RlZFRva2VuU2NvcGUodmFsdWVzKS5sZW5ndGhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoYXNfZWZmZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlzX2xvYWRpbmc9e2lzU3VibWl0dGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNfc3VibWl0X3N1Y2Nlc3M9e2lzX3N1Y2Nlc3N9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ9e2xvY2FsaXplKCdDcmVhdGUnKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbWFyeVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXJnZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9UaW1lbGluZS5JdGVtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGltZWxpbmUuSXRlbVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbV90aXRsZT17bG9jYWxpemUoJ0NvcHkgYW5kIHBhc3RlIHRoZSB0b2tlbiBpbnRvIHRoZSBhcHAuJyl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxBcGlUb2tlblRhYmxlIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvVGltZWxpbmUuSXRlbT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1RpbWVsaW5lPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9Gb3JtPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvRm9ybWlrPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9UaGVtZWRTY3JvbGxiYXJzPlxuICAgICAgICAgICAgICAgICAgICAgICAgeyFpc19hcHBfc2V0dGluZ3MgJiYgaXNEZXNrdG9wKCkgJiYgPEFwaVRva2VuQXJ0aWNsZSAvPn1cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICAgIHtmb290ZXJfcmVmICYmIDxBcGlUb2tlbkZvb3RlciAvPn1cbiAgICAgICAgICAgICAgICB7b3ZlcmxheV9yZWYgJiYgaXNfb3ZlcmxheV9zaG93biAmJiA8QXBpVG9rZW5PdmVybGF5IC8+fVxuICAgICAgICAgICAgPC9BcGlUb2tlbkNvbnRleHQuUHJvdmlkZXI+XG4gICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IG9ic2VydmVyKEFwaVRva2VuKTtcbiIsImltcG9ydCBBcGlUb2tlbiBmcm9tICcuL2FwaS10b2tlbic7XG5cbmV4cG9ydCBkZWZhdWx0IEFwaVRva2VuO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./Components/api-token/index.ts\n");

/***/ }),

/***/ "./Components/icon-message-content/icon-message-content.tsx":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Z\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"../../../node_modules/classnames/index.js\");\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"@deriv/components\");\n/* harmony import */ var _deriv_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_deriv_components__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"@deriv/shared\");\n/* harmony import */ var _deriv_shared__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_deriv_shared__WEBPACK_IMPORTED_MODULE_3__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\nvar IconMessageContent = function IconMessageContent(_ref) {\n  var children = _ref.children,\n    className = _ref.className,\n    full_width = _ref.full_width,\n    icon = _ref.icon,\n    message = _ref.message,\n    text = _ref.text;\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Div100vhContainer, {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('account-management__message-wrapper', {\n      'account-management__message-wrapper-full-width': full_width\n    }),\n    is_disabled: (0,_deriv_shared__WEBPACK_IMPORTED_MODULE_3__.isDesktop)(),\n    height_offset: \"110px\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('account-management__message-content', _defineProperty({}, \"\".concat(className, \"__message-content\"), className))\n  }, icon && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('account-management__message-icon', _defineProperty({}, \"\".concat(className, \"__message-icon\"), className))\n  }, icon), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n    as: \"div\",\n    color: \"general\",\n    weight: \"bold\",\n    size: \"s\",\n    align: \"center\",\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()('account-management__message', _defineProperty({}, \"\".concat(className, \"__message\"), className))\n  }, message), text && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    className: \"account-management__text-container\"\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_deriv_components__WEBPACK_IMPORTED_MODULE_2__.Text, {\n    className: classnames__WEBPACK_IMPORTED_MODULE_1___default()(_defineProperty({}, \"\".concat(className, \"__text\"), className)),\n    as: \"p\",\n    size: \"xs\",\n    align: \"center\"\n  }, text)), children));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IconMessageContent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2ljb24tbWVzc2FnZS1jb250ZW50L2ljb24tbWVzc2FnZS1jb250ZW50LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQVVBO0FBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFHQTtBQUVBO0FBSUE7QUFFQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBS0E7QUFBQTtBQUVBO0FBR0E7QUFDQTtBQUNBO0FBQUE7QUFRQTtBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2ljb24tbWVzc2FnZS1jb250ZW50L2ljb24tbWVzc2FnZS1jb250ZW50LnRzeD8wMGUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IERpdjEwMHZoQ29udGFpbmVyLCBUZXh0IH0gZnJvbSAnQGRlcml2L2NvbXBvbmVudHMnO1xuaW1wb3J0IHsgaXNEZXNrdG9wIH0gZnJvbSAnQGRlcml2L3NoYXJlZCc7XG5cbnR5cGUgVEljb25NZXNzYWdlQ29udGVudCA9IHtcbiAgICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gICAgZnVsbF93aWR0aD86IGJvb2xlYW47XG4gICAgaWNvbjogUmVhY3QuUmVhY3RFbGVtZW50O1xuICAgIG1lc3NhZ2U6IFJlYWN0LlJlYWN0Tm9kZTtcbiAgICB0ZXh0Pzogc3RyaW5nIHwgUmVhY3QuUmVhY3RFbGVtZW50O1xufTtcblxuY29uc3QgSWNvbk1lc3NhZ2VDb250ZW50ID0gKHtcbiAgICBjaGlsZHJlbixcbiAgICBjbGFzc05hbWUsXG4gICAgZnVsbF93aWR0aCxcbiAgICBpY29uLFxuICAgIG1lc3NhZ2UsXG4gICAgdGV4dCxcbn06IFJlYWN0LlByb3BzV2l0aENoaWxkcmVuPFRJY29uTWVzc2FnZUNvbnRlbnQ+KSA9PiAoXG4gICAgPERpdjEwMHZoQ29udGFpbmVyXG4gICAgICAgIGNsYXNzTmFtZT17Y2xhc3NOYW1lcygnYWNjb3VudC1tYW5hZ2VtZW50X19tZXNzYWdlLXdyYXBwZXInLCB7XG4gICAgICAgICAgICAnYWNjb3VudC1tYW5hZ2VtZW50X19tZXNzYWdlLXdyYXBwZXItZnVsbC13aWR0aCc6IGZ1bGxfd2lkdGgsXG4gICAgICAgIH0pfVxuICAgICAgICBpc19kaXNhYmxlZD17aXNEZXNrdG9wKCl9XG4gICAgICAgIGhlaWdodF9vZmZzZXQ9JzExMHB4J1xuICAgID5cbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdhY2NvdW50LW1hbmFnZW1lbnRfX21lc3NhZ2UtY29udGVudCcsIHtcbiAgICAgICAgICAgICAgICBbYCR7Y2xhc3NOYW1lfV9fbWVzc2FnZS1jb250ZW50YF06IGNsYXNzTmFtZSxcbiAgICAgICAgICAgIH0pfVxuICAgICAgICA+XG4gICAgICAgICAgICB7aWNvbiAmJiAoXG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoJ2FjY291bnQtbWFuYWdlbWVudF9fbWVzc2FnZS1pY29uJywge1xuICAgICAgICAgICAgICAgICAgICAgICAgW2Ake2NsYXNzTmFtZX1fX21lc3NhZ2UtaWNvbmBdOiBjbGFzc05hbWUsXG4gICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge2ljb259XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAgPFRleHRcbiAgICAgICAgICAgICAgICBhcz0nZGl2J1xuICAgICAgICAgICAgICAgIGNvbG9yPSdnZW5lcmFsJ1xuICAgICAgICAgICAgICAgIHdlaWdodD0nYm9sZCdcbiAgICAgICAgICAgICAgICBzaXplPSdzJ1xuICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVzKCdhY2NvdW50LW1hbmFnZW1lbnRfX21lc3NhZ2UnLCB7XG4gICAgICAgICAgICAgICAgICAgIFtgJHtjbGFzc05hbWV9X19tZXNzYWdlYF06IGNsYXNzTmFtZSxcbiAgICAgICAgICAgICAgICB9KX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7bWVzc2FnZX1cbiAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgIHt0ZXh0ICYmIChcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT0nYWNjb3VudC1tYW5hZ2VtZW50X190ZXh0LWNvbnRhaW5lcic+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZXMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtgJHtjbGFzc05hbWV9X190ZXh0YF06IGNsYXNzTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgYXM9J3AnXG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplPSd4cydcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSdjZW50ZXInXG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIHt0ZXh0fVxuICAgICAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICA8L2Rpdj5cbiAgICA8L0RpdjEwMHZoQ29udGFpbmVyPlxuKTtcblxuZXhwb3J0IGRlZmF1bHQgSWNvbk1lc3NhZ2VDb250ZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./Components/icon-message-content/icon-message-content.tsx\n");

/***/ }),

/***/ "./Components/icon-message-content/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _icon_message_content__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./Components/icon-message-content/icon-message-content.tsx\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_icon_message_content__WEBPACK_IMPORTED_MODULE_0__/* [\"default\"] */ .Z);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2ljb24tbWVzc2FnZS1jb250ZW50L2luZGV4LnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi9Db21wb25lbnRzL2ljb24tbWVzc2FnZS1jb250ZW50L2luZGV4LnRzPzdmZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEljb25NZXNzYWdlQ29udGVudCBmcm9tICcuL2ljb24tbWVzc2FnZS1jb250ZW50JztcblxuZXhwb3J0IGRlZmF1bHQgSWNvbk1lc3NhZ2VDb250ZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./Components/icon-message-content/index.ts\n");

/***/ }),

/***/ "./Components/load-error-message/index.ts":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Components_load_error_message)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: ./Components/icon-message-content/index.ts\nvar icon_message_content = __webpack_require__(\"./Components/icon-message-content/index.ts\");\n;// CONCATENATED MODULE: ./Components/load-error-message/load-error-message.tsx\n\n\n\nvar LoadErrorMessage = function LoadErrorMessage(_ref) {\n  var error_message = _ref.error_message;\n  return /*#__PURE__*/external_react_default().createElement(icon_message_content[\"default\"], {\n    message: error_message,\n    icon: /*#__PURE__*/external_react_default().createElement(components_.Icon, {\n      icon: \"IcPoaLock\",\n      size: 128\n    })\n  });\n};\n/* harmony default export */ const load_error_message = (LoadErrorMessage);\n;// CONCATENATED MODULE: ./Components/load-error-message/index.ts\n\n/* harmony default export */ const Components_load_error_message = (load_error_message);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9Db21wb25lbnRzL2xvYWQtZXJyb3ItbWVzc2FnZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQU1BO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBR0E7O0FDWkE7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9sb2FkLWVycm9yLW1lc3NhZ2UvbG9hZC1lcnJvci1tZXNzYWdlLnRzeD9kZDZkIiwid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4vQ29tcG9uZW50cy9sb2FkLWVycm9yLW1lc3NhZ2UvaW5kZXgudHM/OWMyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSWNvbiB9IGZyb20gJ0BkZXJpdi9jb21wb25lbnRzJztcbmltcG9ydCBJY29uTWVzc2FnZUNvbnRlbnQgZnJvbSAnLi4vaWNvbi1tZXNzYWdlLWNvbnRlbnQnO1xuXG50eXBlIFRMb2FkRXJyb3JNZXNzYWdlID0ge1xuICAgIGVycm9yX21lc3NhZ2U6IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbmNvbnN0IExvYWRFcnJvck1lc3NhZ2UgPSAoeyBlcnJvcl9tZXNzYWdlIH06IFRMb2FkRXJyb3JNZXNzYWdlKSA9PiAoXG4gICAgPEljb25NZXNzYWdlQ29udGVudCBtZXNzYWdlPXtlcnJvcl9tZXNzYWdlfSBpY29uPXs8SWNvbiBpY29uPSdJY1BvYUxvY2snIHNpemU9ezEyOH0gLz59IC8+XG4pO1xuXG5leHBvcnQgZGVmYXVsdCBMb2FkRXJyb3JNZXNzYWdlO1xuIiwiaW1wb3J0IExvYWRFcnJvck1lc3NhZ2UgZnJvbSAnLi9sb2FkLWVycm9yLW1lc3NhZ2UnO1xuXG5leHBvcnQgZGVmYXVsdCBMb2FkRXJyb3JNZXNzYWdlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./Components/load-error-message/index.ts\n");

/***/ }),

/***/ "../../../node_modules/charenc/charenc.js":
/***/ ((module) => {

eval("var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NoYXJlbmMvY2hhcmVuYy5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY2hhcmVuYy9jaGFyZW5jLmpzPzNkZTEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNoYXJlbmMgPSB7XG4gIC8vIFVURi04IGVuY29kaW5nXG4gIHV0Zjg6IHtcbiAgICAvLyBDb252ZXJ0IGEgc3RyaW5nIHRvIGEgYnl0ZSBhcnJheVxuICAgIHN0cmluZ1RvQnl0ZXM6IGZ1bmN0aW9uKHN0cikge1xuICAgICAgcmV0dXJuIGNoYXJlbmMuYmluLnN0cmluZ1RvQnl0ZXModW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KHN0cikpKTtcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGJ5dGUgYXJyYXkgdG8gYSBzdHJpbmdcbiAgICBieXRlc1RvU3RyaW5nOiBmdW5jdGlvbihieXRlcykge1xuICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChlc2NhcGUoY2hhcmVuYy5iaW4uYnl0ZXNUb1N0cmluZyhieXRlcykpKTtcbiAgICB9XG4gIH0sXG5cbiAgLy8gQmluYXJ5IGVuY29kaW5nXG4gIGJpbjoge1xuICAgIC8vIENvbnZlcnQgYSBzdHJpbmcgdG8gYSBieXRlIGFycmF5XG4gICAgc3RyaW5nVG9CeXRlczogZnVuY3Rpb24oc3RyKSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBpID0gMDsgaSA8IHN0ci5sZW5ndGg7IGkrKylcbiAgICAgICAgYnl0ZXMucHVzaChzdHIuY2hhckNvZGVBdChpKSAmIDB4RkYpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBhIHN0cmluZ1xuICAgIGJ5dGVzVG9TdHJpbmc6IGZ1bmN0aW9uKGJ5dGVzKSB7XG4gICAgICBmb3IgKHZhciBzdHIgPSBbXSwgaSA9IDA7IGkgPCBieXRlcy5sZW5ndGg7IGkrKylcbiAgICAgICAgc3RyLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShieXRlc1tpXSkpO1xuICAgICAgcmV0dXJuIHN0ci5qb2luKCcnKTtcbiAgICB9XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gY2hhcmVuYztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/charenc/charenc.js\n");

/***/ }),

/***/ "../../../node_modules/classnames/index.js":
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/classnames/index.js\n");

/***/ }),

/***/ "../../../node_modules/crypt/crypt.js":
/***/ ((module) => {

eval("(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NyeXB0L2NyeXB0LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9jcnlwdC9jcnlwdC5qcz8xOGI2Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpIHtcbiAgdmFyIGJhc2U2NG1hcFxuICAgICAgPSAnQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLycsXG5cbiAgY3J5cHQgPSB7XG4gICAgLy8gQml0LXdpc2Ugcm90YXRpb24gbGVmdFxuICAgIHJvdGw6IGZ1bmN0aW9uKG4sIGIpIHtcbiAgICAgIHJldHVybiAobiA8PCBiKSB8IChuID4+PiAoMzIgLSBiKSk7XG4gICAgfSxcblxuICAgIC8vIEJpdC13aXNlIHJvdGF0aW9uIHJpZ2h0XG4gICAgcm90cjogZnVuY3Rpb24obiwgYikge1xuICAgICAgcmV0dXJuIChuIDw8ICgzMiAtIGIpKSB8IChuID4+PiBiKTtcbiAgICB9LFxuXG4gICAgLy8gU3dhcCBiaWctZW5kaWFuIHRvIGxpdHRsZS1lbmRpYW4gYW5kIHZpY2UgdmVyc2FcbiAgICBlbmRpYW46IGZ1bmN0aW9uKG4pIHtcbiAgICAgIC8vIElmIG51bWJlciBnaXZlbiwgc3dhcCBlbmRpYW5cbiAgICAgIGlmIChuLmNvbnN0cnVjdG9yID09IE51bWJlcikge1xuICAgICAgICByZXR1cm4gY3J5cHQucm90bChuLCA4KSAmIDB4MDBGRjAwRkYgfCBjcnlwdC5yb3RsKG4sIDI0KSAmIDB4RkYwMEZGMDA7XG4gICAgICB9XG5cbiAgICAgIC8vIEVsc2UsIGFzc3VtZSBhcnJheSBhbmQgc3dhcCBhbGwgaXRlbXNcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbi5sZW5ndGg7IGkrKylcbiAgICAgICAgbltpXSA9IGNyeXB0LmVuZGlhbihuW2ldKTtcbiAgICAgIHJldHVybiBuO1xuICAgIH0sXG5cbiAgICAvLyBHZW5lcmF0ZSBhbiBhcnJheSBvZiBhbnkgbGVuZ3RoIG9mIHJhbmRvbSBieXRlc1xuICAgIHJhbmRvbUJ5dGVzOiBmdW5jdGlvbihuKSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdOyBuID4gMDsgbi0tKVxuICAgICAgICBieXRlcy5wdXNoKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDI1NikpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBiaWctZW5kaWFuIDMyLWJpdCB3b3Jkc1xuICAgIGJ5dGVzVG9Xb3JkczogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIHdvcmRzID0gW10sIGkgPSAwLCBiID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrLCBiICs9IDgpXG4gICAgICAgIHdvcmRzW2IgPj4+IDVdIHw9IGJ5dGVzW2ldIDw8ICgyNCAtIGIgJSAzMik7XG4gICAgICByZXR1cm4gd29yZHM7XG4gICAgfSxcblxuICAgIC8vIENvbnZlcnQgYmlnLWVuZGlhbiAzMi1iaXQgd29yZHMgdG8gYSBieXRlIGFycmF5XG4gICAgd29yZHNUb0J5dGVzOiBmdW5jdGlvbih3b3Jkcykge1xuICAgICAgZm9yICh2YXIgYnl0ZXMgPSBbXSwgYiA9IDA7IGIgPCB3b3Jkcy5sZW5ndGggKiAzMjsgYiArPSA4KVxuICAgICAgICBieXRlcy5wdXNoKCh3b3Jkc1tiID4+PiA1XSA+Pj4gKDI0IC0gYiAlIDMyKSkgJiAweEZGKTtcbiAgICAgIHJldHVybiBieXRlcztcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGJ5dGUgYXJyYXkgdG8gYSBoZXggc3RyaW5nXG4gICAgYnl0ZXNUb0hleDogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIGhleCA9IFtdLCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGhleC5wdXNoKChieXRlc1tpXSA+Pj4gNCkudG9TdHJpbmcoMTYpKTtcbiAgICAgICAgaGV4LnB1c2goKGJ5dGVzW2ldICYgMHhGKS50b1N0cmluZygxNikpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGhleC5qb2luKCcnKTtcbiAgICB9LFxuXG4gICAgLy8gQ29udmVydCBhIGhleCBzdHJpbmcgdG8gYSBieXRlIGFycmF5XG4gICAgaGV4VG9CeXRlczogZnVuY3Rpb24oaGV4KSB7XG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBjID0gMDsgYyA8IGhleC5sZW5ndGg7IGMgKz0gMilcbiAgICAgICAgYnl0ZXMucHVzaChwYXJzZUludChoZXguc3Vic3RyKGMsIDIpLCAxNikpO1xuICAgICAgcmV0dXJuIGJ5dGVzO1xuICAgIH0sXG5cbiAgICAvLyBDb252ZXJ0IGEgYnl0ZSBhcnJheSB0byBhIGJhc2UtNjQgc3RyaW5nXG4gICAgYnl0ZXNUb0Jhc2U2NDogZnVuY3Rpb24oYnl0ZXMpIHtcbiAgICAgIGZvciAodmFyIGJhc2U2NCA9IFtdLCBpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSArPSAzKSB7XG4gICAgICAgIHZhciB0cmlwbGV0ID0gKGJ5dGVzW2ldIDw8IDE2KSB8IChieXRlc1tpICsgMV0gPDwgOCkgfCBieXRlc1tpICsgMl07XG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgNDsgaisrKVxuICAgICAgICAgIGlmIChpICogOCArIGogKiA2IDw9IGJ5dGVzLmxlbmd0aCAqIDgpXG4gICAgICAgICAgICBiYXNlNjQucHVzaChiYXNlNjRtYXAuY2hhckF0KCh0cmlwbGV0ID4+PiA2ICogKDMgLSBqKSkgJiAweDNGKSk7XG4gICAgICAgICAgZWxzZVxuICAgICAgICAgICAgYmFzZTY0LnB1c2goJz0nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBiYXNlNjQuam9pbignJyk7XG4gICAgfSxcblxuICAgIC8vIENvbnZlcnQgYSBiYXNlLTY0IHN0cmluZyB0byBhIGJ5dGUgYXJyYXlcbiAgICBiYXNlNjRUb0J5dGVzOiBmdW5jdGlvbihiYXNlNjQpIHtcbiAgICAgIC8vIFJlbW92ZSBub24tYmFzZS02NCBjaGFyYWN0ZXJzXG4gICAgICBiYXNlNjQgPSBiYXNlNjQucmVwbGFjZSgvW15BLVowLTkrXFwvXS9pZywgJycpO1xuXG4gICAgICBmb3IgKHZhciBieXRlcyA9IFtdLCBpID0gMCwgaW1vZDQgPSAwOyBpIDwgYmFzZTY0Lmxlbmd0aDtcbiAgICAgICAgICBpbW9kNCA9ICsraSAlIDQpIHtcbiAgICAgICAgaWYgKGltb2Q0ID09IDApIGNvbnRpbnVlO1xuICAgICAgICBieXRlcy5wdXNoKCgoYmFzZTY0bWFwLmluZGV4T2YoYmFzZTY0LmNoYXJBdChpIC0gMSkpXG4gICAgICAgICAgICAmIChNYXRoLnBvdygyLCAtMiAqIGltb2Q0ICsgOCkgLSAxKSkgPDwgKGltb2Q0ICogMikpXG4gICAgICAgICAgICB8IChiYXNlNjRtYXAuaW5kZXhPZihiYXNlNjQuY2hhckF0KGkpKSA+Pj4gKDYgLSBpbW9kNCAqIDIpKSk7XG4gICAgICB9XG4gICAgICByZXR1cm4gYnl0ZXM7XG4gICAgfVxuICB9O1xuXG4gIG1vZHVsZS5leHBvcnRzID0gY3J5cHQ7XG59KSgpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/crypt/crypt.js\n");

/***/ }),

/***/ "../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar reactIs = __webpack_require__(\"../../../node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkwY2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.groupby/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity]\n *  The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = groupBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.groupby/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.merge/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.merge/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.pickby/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick from.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, props, predicate) {\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key];\n\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Creates an array of the own and inherited enumerable symbol properties\n * of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  return object == null ? {} : basePickBy(object, getAllKeysIn(object), baseIteratee(predicate));\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = pickBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.pickby/index.js\n");

/***/ }),

/***/ "../../../node_modules/md5/md5.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("(function(){\r\n  var crypt = __webpack_require__(\"../../../node_modules/crypt/crypt.js\"),\r\n      utf8 = (__webpack_require__(\"../../../node_modules/charenc/charenc.js\").utf8),\r\n      isBuffer = __webpack_require__(\"../../../node_modules/md5/node_modules/is-buffer/index.js\"),\r\n      bin = (__webpack_require__(\"../../../node_modules/charenc/charenc.js\").bin),\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/md5/md5.js\n");

/***/ }),

/***/ "../../../node_modules/md5/node_modules/is-buffer/index.js":
/***/ ((module) => {

eval("/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL21kNS9ub2RlX21vZHVsZXMvaXMtYnVmZmVyL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9tZDUvbm9kZV9tb2R1bGVzL2lzLWJ1ZmZlci9pbmRleC5qcz83MTk0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogRGV0ZXJtaW5lIGlmIGFuIG9iamVjdCBpcyBhIEJ1ZmZlclxuICpcbiAqIEBhdXRob3IgICBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmc+XG4gKiBAbGljZW5zZSAgTUlUXG4gKi9cblxuLy8gVGhlIF9pc0J1ZmZlciBjaGVjayBpcyBmb3IgU2FmYXJpIDUtNyBzdXBwb3J0LCBiZWNhdXNlIGl0J3MgbWlzc2luZ1xuLy8gT2JqZWN0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvci4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqKSB7XG4gIHJldHVybiBvYmogIT0gbnVsbCAmJiAoaXNCdWZmZXIob2JqKSB8fCBpc1Nsb3dCdWZmZXIob2JqKSB8fCAhIW9iai5faXNCdWZmZXIpXG59XG5cbmZ1bmN0aW9uIGlzQnVmZmVyIChvYmopIHtcbiAgcmV0dXJuICEhb2JqLmNvbnN0cnVjdG9yICYmIHR5cGVvZiBvYmouY29uc3RydWN0b3IuaXNCdWZmZXIgPT09ICdmdW5jdGlvbicgJiYgb2JqLmNvbnN0cnVjdG9yLmlzQnVmZmVyKG9iailcbn1cblxuLy8gRm9yIE5vZGUgdjAuMTAgc3VwcG9ydC4gUmVtb3ZlIHRoaXMgZXZlbnR1YWxseS5cbmZ1bmN0aW9uIGlzU2xvd0J1ZmZlciAob2JqKSB7XG4gIHJldHVybiB0eXBlb2Ygb2JqLnJlYWRGbG9hdExFID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBvYmouc2xpY2UgPT09ICdmdW5jdGlvbicgJiYgaXNCdWZmZXIob2JqLnNsaWNlKDAsIDApKVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/md5/node_modules/is-buffer/index.js\n");

/***/ }),

/***/ "../../../node_modules/moment/moment.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            \"object\" !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = undefined;\n                Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/moment/moment.js\n");

/***/ }),

/***/ "../../../node_modules/react-fast-compare/index.js":
/***/ ((module) => {

"use strict";
eval("\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhc3QtY29tcGFyZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXN0LWNvbXBhcmUvaW5kZXguanM/NjZmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBrZXlMaXN0ID0gT2JqZWN0LmtleXM7XG52YXIgaGFzUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbmZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFyckEgPSBpc0FycmF5KGEpXG4gICAgICAsIGFyckIgPSBpc0FycmF5KGIpXG4gICAgICAsIGlcbiAgICAgICwgbGVuZ3RoXG4gICAgICAsIGtleTtcblxuICAgIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYXJyQSAhPSBhcnJCKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocmVnZXhwQSAmJiByZWdleHBCKSByZXR1cm4gYS50b1N0cmluZygpID09IGIudG9TdHJpbmcoKTtcblxuICAgIHZhciBrZXlzID0ga2V5TGlzdChhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcblxuICAgIGlmIChsZW5ndGggIT09IGtleUxpc3QoYikubGVuZ3RoKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbiAgICAvLyBzdGFydCByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCAmJiBiIGluc3RhbmNlb2YgRWxlbWVudClcbiAgICAgIHJldHVybiBhID09PSBiO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdFxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChrZXkgPT09ICdfb3duZXInICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lci5cbiAgICAgICAgLy8gIF9vd25lciBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzXG4gICAgICAgIC8vIGFuZCBpcyBub3QgbmVlZGVkIHdoZW4gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgYSByZWFjdCBlbGVtZW50XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgICBpZiAoIWVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBlbmQgcmVhY3QtZmFzdC1jb21wYXJlXG5cbiAgICAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXhwb3J0ZWRFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpIHx8IChlcnJvci5udW1iZXIgPT09IC0yMTQ2ODI4MjYwKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiByZWFjdC1mYXN0LWNvbXBhcmUgZG9lcyBub3QgaGFuZGxlIGNpcmN1bGFyIHJlZmVyZW5jZXMuJywgZXJyb3IubmFtZSwgZXJyb3IubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIHNvbWUgb3RoZXIgZXJyb3IuIHdlIHNob3VsZCBkZWZpbml0ZWx5IGtub3cgYWJvdXQgdGhlc2VcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-fast-compare/index.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/cjs/react-is.production.min.js":
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzPzBhOTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/cjs/react-is.production.min.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (true) {\n  module.exports = __webpack_require__(\"../../../node_modules/react-is/cjs/react-is.production.min.js\");\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NzZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/index.js\n");

/***/ }),

/***/ "@deriv/components":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;

/***/ }),

/***/ "@deriv/shared":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;

/***/ }),

/***/ "@deriv/translations":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;

/***/ }),

/***/ "mobx":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;

/***/ }),

/***/ "react":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./Components/api-token/index.ts");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});