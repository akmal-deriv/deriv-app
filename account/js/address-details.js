/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else if(typeof define === 'function' && define.amd)
		define(["@deriv/components", "@deriv/shared", "@deriv/translations", "mobx", "react", "react-dom"], factory);
	else if(typeof exports === 'object')
		exports["@deriv/account"] = factory(require("@deriv/components"), require("@deriv/shared"), require("@deriv/translations"), require("mobx"), require("react"), require("react-dom"));
	else
		root["@deriv/account"] = factory(root["@deriv/components"], root["@deriv/shared"], root["@deriv/translations"], root["mobx"], root["react"], root["react-dom"]);
})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../node_modules/@binary-com/binary-document-uploader/DocumentUploader.js":
/***/ (function(module) {

eval("(function(e,t){ true?module.exports=t():0})(this,function(){var e=Math.sqrt,t=String.fromCharCode,r=Math.LN2,n=Math.log,o=Math.pow,l=Math.abs,a=Math.exp,s=Math.expm1,i=Math.max,c=Math.ceil,p=Math.floor,d=Math.min;return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}var r={};return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var r=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(r,'a',r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='',t(t.s=100)}([function(e,t,r){var n=r(3),o=r(20),l=r(9),a=r(17),s=r(14),i='prototype',c=function(e,t,r){var p,d,u,g,h=e&c.F,y=e&c.G,f=e&c.S,m=e&c.P,E=e&c.B,_=y?n:f?n[t]||(n[t]={}):(n[t]||{})[i],x=y?o:o[t]||(o[t]={}),S=x[i]||(x[i]={});for(p in y&&(r=t),r)d=!h&&_&&void 0!==_[p],u=(d?_:r)[p],g=E&&d?s(u,n):m&&'function'==typeof u?s(Function.call,u):u,_&&a(_,p,u,e&c.U),x[p]!=u&&l(x,p,g),m&&S[p]!=u&&(S[p]=u)};n.core=o,c.F=1,c.G=2,c.S=4,c.P=8,c.B=16,c.W=32,c.U=64,c.R=128,e.exports=c},function(e){e.exports=function(e){return'object'==typeof e?null!==e:'function'==typeof e}},function(e,t,r){var n=r(1);e.exports=function(e){if(!n(e))throw TypeError(e+' is not an object!');return e}},function(e){var t=e.exports='undefined'!=typeof window&&window.Math==Math?window:'undefined'!=typeof self&&self.Math==Math?self:Function('return this')();'number'==typeof __g&&(__g=t)},function(e,t,r){var n=r(41)('wks'),o=r(22),l=r(3).Symbol,a='function'==typeof l,s=e.exports=function(e){return n[e]||(n[e]=a&&l[e]||(a?l:o)('Symbol.'+e))};s.store=n},function(e){e.exports=function(e){try{return!!e()}catch(t){return!0}}},function(e,t,r){var n=r(18);e.exports=function(e){return 0<e?d(n(e),9007199254740991):0}},function(e,t,r){var n=r(2),o=r(70),l=r(36),a=Object.defineProperty;t.f=r(8)?Object.defineProperty:function(e,t,r){if(n(e),t=l(t,!0),n(r),o)try{return a(e,t,r)}catch(t){}if('get'in r||'set'in r)throw TypeError('Accessors not supported!');return'value'in r&&(e[t]=r.value),e}},function(e,t,r){e.exports=!r(5)(function(){return 7!=Object.defineProperty({},'a',{get:function(){return 7}}).a})},function(e,t,r){var n=r(7),o=r(21);e.exports=r(8)?function(e,t,r){return n.f(e,t,o(1,r))}:function(e,t,r){return e[t]=r,e}},function(e){var t={}.hasOwnProperty;e.exports=function(e,r){return t.call(e,r)}},function(e,t,r){var n=r(54),o=r(25);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(25);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(0),o=r(20),l=r(5);e.exports=function(e,t){var r=(o.Object||{})[e]||Object[e],a={};a[e]=t(r),n(n.S+n.F*l(function(){r(1)}),'Object',a)}},function(e,t,r){var n=r(24);e.exports=function(e,t,r){return(n(e),void 0===t)?e:1===r?function(r){return e.call(t,r)}:2===r?function(r,n){return e.call(t,r,n)}:3===r?function(r,n,o){return e.call(t,r,n,o)}:function(){return e.apply(t,arguments)}}},function(e,t,r){'use strict';if(r(8)){var n=r(23),o=r(3),l=r(5),a=r(0),s=r(53),i=r(71),c=r(14),d=r(29),u=r(21),g=r(9),h=r(28),y=r(18),f=r(6),m=r(72),E=r(31),_=r(36),x=r(10),S=r(44),T=r(1),b=r(12),P=r(59),v=r(38),I=r(34),A=r(37).f,R=r(60),O=r(22),k=r(4),L=r(39),F=r(55),N=r(42),w=r(61),M=r(33),D=r(45),C=r(43),j=r(58),Y=r(78),B=r(7),G=r(16),U=B.f,H=G.f,W=o.RangeError,V=o.TypeError,z=o.Uint8Array,$='ArrayBuffer',K='Shared'+$,q='BYTES_PER_ELEMENT',X='prototype',Z=Array[X],J=i.ArrayBuffer,Q=i.DataView,ee=L(0),te=L(2),re=L(3),ne=L(4),oe=L(5),le=L(6),ae=F(!0),se=F(!1),ie=w.values,ce=w.keys,pe=w.entries,de=Z.lastIndexOf,ue=Z.reduce,ge=Z.reduceRight,he=Z.join,ye=Z.sort,fe=Z.slice,me=Z.toString,Ee=Z.toLocaleString,_e=k('iterator'),xe=k('toStringTag'),Se=O('typed_constructor'),Te=O('def_constructor'),be=s.CONSTR,Pe=s.TYPED,Oe=s.VIEW,ve='Wrong length!',Ie=L(1,function(e,t){return Fe(N(e,e[Te]),t)}),Ae=l(function(){return 1===new z(new Uint16Array([1]).buffer)[0]}),Re=!!z&&!!z[X].set&&l(function(){new z(1).set({})}),ke=function(e,t){var r=y(e);if(0>r||r%t)throw W('Wrong offset!');return r},Le=function(e){if(T(e)&&Pe in e)return e;throw V(e+' is not a typed array!')},Fe=function(e,t){if(!(T(e)&&Se in e))throw V('It is not a typed array constructor!');return new e(t)},Ne=function(e,t){return we(N(e,e[Te]),t)},we=function(e,t){for(var r=0,n=t.length,o=Fe(e,n);n>r;)o[r]=t[r++];return o},Me=function(e,t,r){U(e,t,{get:function(){return this._d[r]}})},De=function(e){var t,r,n,o,l,a,s=b(e),i=arguments.length,p=1<i?arguments[1]:void 0,d=p!==void 0,u=R(s);if(u!=void 0&&!P(u)){for(a=u.call(s),n=[],t=0;!(l=a.next()).done;t++)n.push(l.value);s=n}for(d&&2<i&&(p=c(p,arguments[2],2)),t=0,r=f(s.length),o=Fe(this,r);r>t;t++)o[t]=d?p(s[t],t):s[t];return o},Ce=function(){for(var e=0,t=arguments.length,r=Fe(this,t);t>e;)r[e]=arguments[e++];return r},je=!!z&&l(function(){Ee.call(new z(1))}),Ye=function(){return Ee.apply(je?fe.call(Le(this)):Le(this),arguments)},Be={copyWithin:function(e,t){return Y.call(Le(this),e,t,2<arguments.length?arguments[2]:void 0)},every:function(e){return ne(Le(this),e,1<arguments.length?arguments[1]:void 0)},fill:function(){return j.apply(Le(this),arguments)},filter:function(e){return Ne(this,te(Le(this),e,1<arguments.length?arguments[1]:void 0))},find:function(e){return oe(Le(this),e,1<arguments.length?arguments[1]:void 0)},findIndex:function(e){return le(Le(this),e,1<arguments.length?arguments[1]:void 0)},forEach:function(e){ee(Le(this),e,1<arguments.length?arguments[1]:void 0)},indexOf:function(e){return se(Le(this),e,1<arguments.length?arguments[1]:void 0)},includes:function(e){return ae(Le(this),e,1<arguments.length?arguments[1]:void 0)},join:function(){return he.apply(Le(this),arguments)},lastIndexOf:function(){return de.apply(Le(this),arguments)},map:function(e){return Ie(Le(this),e,1<arguments.length?arguments[1]:void 0)},reduce:function(){return ue.apply(Le(this),arguments)},reduceRight:function(){return ge.apply(Le(this),arguments)},reverse:function(){for(var e,t=this,r=Le(t).length,n=p(r/2),o=0;o<n;)e=t[o],t[o++]=t[--r],t[r]=e;return t},some:function(e){return re(Le(this),e,1<arguments.length?arguments[1]:void 0)},sort:function(e){return ye.call(Le(this),e)},subarray:function(e,t){var r=Le(this),n=r.length,o=E(e,n);return new(N(r,r[Te]))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,f((t===void 0?n:E(t,n))-o))}},Ge=function(e,t){return Ne(this,fe.call(Le(this),e,t))},Ue=function(e){Le(this);var t=ke(arguments[1],1),r=this.length,n=b(e),o=f(n.length),l=0;if(o+t>r)throw W(ve);for(;l<o;)this[t+l]=n[l++]},He={entries:function(){return pe.call(Le(this))},keys:function(){return ce.call(Le(this))},values:function(){return ie.call(Le(this))}},We=function(e,t){return T(e)&&e[Pe]&&'symbol'!=typeof t&&t in e&&+t+''==t+''},Ve=function(e,t){return We(e,t=_(t,!0))?u(2,e[t]):H(e,t)},ze=function(e,t,r){return We(e,t=_(t,!0))&&T(r)&&x(r,'value')&&!x(r,'get')&&!x(r,'set')&&!r.configurable&&(!x(r,'writable')||r.writable)&&(!x(r,'enumerable')||r.enumerable)?(e[t]=r.value,e):U(e,t,r)};be||(G.f=Ve,B.f=ze),a(a.S+a.F*!be,'Object',{getOwnPropertyDescriptor:Ve,defineProperty:ze}),l(function(){me.call({})})&&(me=Ee=function(){return he.call(this)});var $e=h({},Be);h($e,He),g($e,_e,He.values),h($e,{slice:Ge,set:Ue,constructor:function(){},toString:me,toLocaleString:Ye}),Me($e,'buffer','b'),Me($e,'byteOffset','o'),Me($e,'byteLength','l'),Me($e,'length','e'),U($e,xe,{get:function(){return this[Pe]}}),e.exports=function(e,t,r,i){i=!!i;var c=e+(i?'Clamped':'')+'Array',p=o[c],u=p||{},h=p&&I(p),y=!p||!s.ABV,E={},_=p&&p[X],x=function(r,n){var o=r._d;return o.v['get'+e](n*t+o.o,Ae)},b=function(r,n,o){var l=r._d;i&&(o=0>(o=Math.round(o))?0:255<o?255:255&o),l.v['set'+e](n*t+l.o,o,Ae)},P=function(e,t){U(e,t,{get:function(){return x(this,t)},set:function(e){return b(this,t,e)},enumerable:!0})};y?(p=r(function(e,r,n,o){d(e,p,c,'_d');var l,a,s,i,u=0,h=0;if(!T(r))s=m(r),a=s*t,l=new J(a);else if(r instanceof J||(i=S(r))==$||i==K){l=r,h=ke(n,t);var y=r.byteLength;if(void 0===o){if(y%t)throw W(ve);if(a=y-h,0>a)throw W(ve)}else if(a=f(o)*t,a+h>y)throw W(ve);s=a/t}else return Pe in r?we(p,r):De.call(p,r);for(g(e,'_d',{b:l,o:h,l:a,e:s,v:new Q(l)});u<s;)P(e,u++)}),_=p[X]=v($e),g(_,'constructor',p)):(!l(function(){p(1)})||!l(function(){new p(-1)})||!D(function(e){new p,new p(null),new p(1.5),new p(e)},!0))&&(p=r(function(e,r,n,o){d(e,p,c);var l;return T(r)?r instanceof J||(l=S(r))==$||l==K?void 0===o?void 0===n?new u(r):new u(r,ke(n,t)):new u(r,ke(n,t),o):Pe in r?we(p,r):De.call(p,r):new u(m(r))}),ee(h===Function.prototype?A(u):A(u).concat(A(h)),function(e){e in p||g(p,e,u[e])}),p[X]=_,!n&&(_.constructor=p));var O=_[_e],R=!!O&&('values'==O.name||O.name==void 0),k=He.values;g(p,Se,!0),g(_,Pe,c),g(_,Oe,!0),g(_,Te,p),(i?new p(1)[xe]!=c:!(xe in _))&&U(_,xe,{get:function(){return c}}),E[c]=p,a(a.G+a.W+a.F*(p!=u),E),a(a.S,c,{BYTES_PER_ELEMENT:t}),a(a.S+a.F*l(function(){u.of.call(p,1)}),c,{from:De,of:Ce}),q in _||g(_,q,t),a(a.P,c,Be),C(c),a(a.P+a.F*Re,c,{set:Ue}),a(a.P+a.F*!R,c,He),n||_.toString==me||(_.toString=me),a(a.P+a.F*l(function(){new p(1).slice()}),c,{slice:Ge}),a(a.P+a.F*(l(function(){return[1,2].toLocaleString()!=new p([1,2]).toLocaleString()})||!l(function(){_.toLocaleString.call([1,2])})),c,{toLocaleString:Ye}),M[c]=R?O:k,n||R||g(_,_e,k)}}else e.exports=function(){}},function(e,t,r){var n=r(40),o=r(21),l=r(11),a=r(36),s=r(10),i=r(70),c=Object.getOwnPropertyDescriptor;t.f=r(8)?c:function(e,t){if(e=l(e),t=a(t,!0),i)try{return c(e,t)}catch(t){}return s(e,t)?o(!n.f.call(e,t),e[t]):void 0}},function(e,t,r){var n=r(3),o=r(9),l=r(10),a=r(22)('src'),s=r(102),i='toString',c=(''+s).split(i);r(20).inspectSource=function(e){return s.call(e)},(e.exports=function(e,t,r,s){var i='function'==typeof r;i&&(l(r,'name')||o(r,'name',t));e[t]===r||(i&&(l(r,a)||o(r,a,e[t]?''+e[t]:c.join(t+''))),e===n?e[t]=r:s?e[t]?e[t]=r:o(e,t,r):(delete e[t],o(e,t,r)))})(Function.prototype,i,function(){return'function'==typeof this&&this[a]||s.call(this)})},function(e){e.exports=function(e){return isNaN(e=+e)?0:(0<e?p:c)(e)}},function(e,t,r){var n=r(22)('meta'),o=r(1),l=r(10),a=r(7).f,s=0,i=Object.isExtensible||function(){return!0},c=!r(5)(function(){return i(Object.preventExtensions({}))}),p=function(e){a(e,n,{value:{i:'O'+ ++s,w:{}}})},d=e.exports={KEY:n,NEED:!1,fastKey:function(e,t){if(!o(e))return'symbol'==typeof e?e:('string'==typeof e?'S':'P')+e;if(!l(e,n)){if(!i(e))return'F';if(!t)return'E';p(e)}return e[n].i},getWeak:function(e,t){if(!l(e,n)){if(!i(e))return!0;if(!t)return!1;p(e)}return e[n].w},onFreeze:function(e){return c&&d.NEED&&i(e)&&!l(e,n)&&p(e),e}}},function(e){var t=e.exports={version:'2.6.5'};'number'==typeof __e&&(__e=t)},function(e){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e){var t=0,r=Math.random();e.exports=function(e){return'Symbol('.concat(e===void 0?'':e,')_',(++t+r).toString(36))}},function(e){e.exports=!1},function(e){e.exports=function(e){if('function'!=typeof e)throw TypeError(e+' is not a function!');return e}},function(e){e.exports=function(e){if(e==void 0)throw TypeError('Can\\'t call method on  '+e);return e}},function(e,t,r){var n=r(73),o=r(57);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(1);e.exports=function(e,t){if(!n(e)||e._t!==t)throw TypeError('Incompatible receiver, '+t+' required!');return e}},function(e,t,r){var n=r(17);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e){e.exports=function(e,t,r,n){if(!(e instanceof t)||n!==void 0&&n in e)throw TypeError(r+': incorrect invocation!');return e}},function(e){var t={}.toString;e.exports=function(e){return t.call(e).slice(8,-1)}},function(e,t,r){var n=r(18);e.exports=function(e,t){return e=n(e),0>e?i(e+t,0):d(e,t)}},function(e,t,r){var n=r(7).f,o=r(10),l=r(4)('toStringTag');e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,l)&&n(e,l,{configurable:!0,value:t})}},function(e){e.exports={}},function(e,t,r){var n=r(10),o=r(12),l=r(56)('IE_PROTO'),a=Object.prototype;e.exports=Object.getPrototypeOf||function(e){return e=o(e),n(e,l)?e[l]:'function'==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,r){var n=r(4)('unscopables'),o=Array.prototype;o[n]==void 0&&r(9)(o,n,{}),e.exports=function(e){o[n][e]=!0}},function(e,t,r){var n=r(1);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&'function'==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if('function'==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&'function'==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError('Can\\'t convert object to primitive value')}},function(e,t,r){var n=r(73),o=r(57).concat('length','prototype');t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){var n=r(2),o=r(104),l=r(57),a=r(56)('IE_PROTO'),s=function(){},c='prototype',p=function(){var e,t=r(52)('iframe'),n=l.length,o='<',a='>';for(t.style.display='none',r(74).appendChild(t),t.src='javascript:',e=t.contentWindow.document,e.open(),e.write(o+'script'+a+'document.F=Object'+o+'/script'+a),e.close(),p=e.F;n--;)delete p[c][l[n]];return p()};e.exports=Object.create||function(e,t){var r;return null===e?r=p():(s[c]=n(e),r=new s,s[c]=null,r[a]=e),void 0===t?r:o(r,t)}},function(e,t,r){var n=r(14),o=r(54),l=r(12),a=r(6),s=r(105);e.exports=function(e,t){var r=1==e,i=4==e,c=6==e,p=t||s;return function(t,s,d){for(var u,g,h=l(t),y=o(h),m=n(s,d,3),f=a(y.length),E=0,_=r?p(t,f):2==e?p(t,0):void 0;f>E;E++)if((5==e||c||E in y)&&(u=y[E],g=m(u,E,h),e))if(r)_[E]=g;else if(g)switch(e){case 3:return!0;case 5:return u;case 6:return E;case 2:_.push(u);}else if(i)return!1;return c?-1:3==e||i?i:_}}},function(e,t){t.f={}.propertyIsEnumerable},function(e,t,r){var n=r(20),o=r(3),l='__core-js_shared__',a=o[l]||(o[l]={});(e.exports=function(e,t){return a[e]||(a[e]=t===void 0?{}:t)})('versions',[]).push({version:n.version,mode:r(23)?'pure':'global',copyright:'\\xA9 2019 Denis Pushkarev (zloirock.ru)'})},function(e,t,r){var n=r(2),o=r(24),l=r(4)('species');e.exports=function(e,t){var r,a=n(e).constructor;return a===void 0||(r=n(a)[l])==void 0?t:o(r)}},function(e,t,r){'use strict';var n=r(3),o=r(7),l=r(8),a=r(4)('species');e.exports=function(e){var t=n[e];l&&t&&!t[a]&&o.f(t,a,{configurable:!0,get:function(){return this}})}},function(e,t,r){var n=r(30),o=r(4)('toStringTag'),l='Arguments'==n(function(){return arguments}()),a=function(e,t){try{return e[t]}catch(t){}};e.exports=function(e){var t,r,s;return e===void 0?'Undefined':null===e?'Null':'string'==typeof(r=a(t=Object(e),o))?r:l?n(t):'Object'==(s=n(t))&&'function'==typeof t.callee?'Arguments':s}},function(e,t,r){var n=r(4)('iterator'),o=!1;try{var l=[7][n]();l['return']=function(){o=!0},Array.from(l,function(){throw 2})}catch(t){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var l=[7],a=l[n]();a.next=function(){return{done:r=!0}},l[n]=function(){return a},e(l)}catch(t){}return r}},function(e,t,r){var n=r(14),o=r(80),l=r(59),a=r(2),s=r(6),i=r(60),c={},p={},t=e.exports=function(e,t,r,d,u){var g,h,y,m,E=u?function(){return e}:i(e),_=n(r,d,t?2:1),f=0;if('function'!=typeof E)throw TypeError(e+' is not iterable!');if(l(E)){for(g=s(e.length);g>f;f++)if(m=t?_(a(h=e[f])[0],h[1]):_(e[f]),m===c||m===p)return m;}else for(y=E.call(e);!(h=y.next()).done;)if(m=o(y,_,h.value,t),m===c||m===p)return m};t.BREAK=c,t.RETURN=p},function(e,t,r){'use strict';var n=r(3),o=r(0),l=r(17),a=r(28),s=r(19),i=r(46),c=r(29),p=r(1),d=r(5),u=r(45),g=r(32),h=r(117);e.exports=function(e,t,r,y,f,m){var E=n[e],_=E,x=f?'set':'add',S=_&&_.prototype,T={},b=function(e){var t=S[e];l(S,e,'delete'==e?function(e){return m&&!p(e)?!1:t.call(this,0===e?0:e)}:'has'==e?function(e){return m&&!p(e)?!1:t.call(this,0===e?0:e)}:'get'==e?function(e){return m&&!p(e)?void 0:t.call(this,0===e?0:e)}:'add'==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if('function'!=typeof _||!(m||S.forEach&&!d(function(){new _().entries().next()})))_=y.getConstructor(t,e,f,x),a(_.prototype,r),s.NEED=!0;else{var P=new _,O=P[x](m?{}:-0,1)!=P,v=d(function(){P.has(1)}),I=u(function(e){new _(e)}),A=!m&&d(function(){for(var e=new _,t=5;t--;)e[x](t,t);return!e.has(-0)});I||(_=t(function(t,r){c(t,_,e);var n=h(new E,t,_);return void 0!=r&&i(r,f,n[x],n),n}),_.prototype=S,S.constructor=_),(v||A)&&(b('delete'),b('has'),f&&b('get')),(A||O)&&b(x),m&&S.clear&&delete S.clear}return g(_,e),T[e]=_,o(o.G+o.W+o.F*(_!=E),T),m||y.setStrong(_,e,f),_}},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(3),o=n.navigator;e.exports=o&&o.userAgent||''},function(e,t,r){'use strict';var n=r(44),o=RegExp.prototype.exec;e.exports=function(e,t){var r=e.exec;if('function'==typeof r){var l=r.call(e,t);if('object'!=typeof l)throw new TypeError('RegExp exec method returned something other than an Object or null');return l}if('RegExp'!==n(e))throw new TypeError('RegExp#exec called on incompatible receiver');return o.call(e,t)}},function(e,t,r){'use strict';r(164);var n=r(17),o=r(9),l=r(5),a=r(25),s=r(4),i=r(66),c=s('species'),p=!l(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:'7'},e},'7'!==''.replace(e,'$<a>')}),d=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r='ab'.split(e);return 2===r.length&&'a'===r[0]&&'b'===r[1]}();e.exports=function(e,t,r){var u=s(e),g=!l(function(){var t={};return t[u]=function(){return 7},7!=''[e](t)}),h=g?!l(function(){var t=!1,r=/a/;return r.exec=function(){return t=!0,null},'split'===e&&(r.constructor={},r.constructor[c]=function(){return r}),r[u](''),!t}):void 0;if(!g||!h||'replace'===e&&!p||'split'===e&&!d){var y=/./[u],f=r(a,u,''[e],function(e,t,r,n,o){return t.exec===i?g&&!o?{done:!0,value:y.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}}),m=f[0],E=f[1];n(String.prototype,e,m),o(RegExp.prototype,u,2==t?function(e,t){return E.call(e,this,t)}:function(e){return E.call(e,this)})}}},function(e,t,r){var n=r(1),o=r(3).document,l=n(o)&&n(o.createElement);e.exports=function(e){return l?o.createElement(e):{}}},function(e,t,r){for(var n,o=r(3),l=r(9),a=r(22),s=a('typed_array'),c=a('view'),p=!!(o.ArrayBuffer&&o.DataView),d=p,u=0,i=['Int8Array','Uint8Array','Uint8ClampedArray','Int16Array','Uint16Array','Int32Array','Uint32Array','Float32Array','Float64Array'];u<9;)(n=o[i[u++]])?(l(n.prototype,s,!0),l(n.prototype,c,!0)):d=!1;e.exports={ABV:p,CONSTR:d,TYPED:s,VIEW:c}},function(e,t,r){var n=r(30);e.exports=Object('z').propertyIsEnumerable(0)?Object:function(e){return'String'==n(e)?e.split(''):Object(e)}},function(e,t,r){var n=r(11),o=r(6),l=r(31);e.exports=function(e){return function(t,r,a){var s,i=n(t),c=o(i.length),p=l(a,c);if(e&&r!=r){for(;c>p;)if(s=i[p++],s!=s)return!0;}else for(;c>p;p++)if((e||p in i)&&i[p]===r)return e||p||0;return!e&&-1}}},function(e,t,r){var n=r(41)('keys'),o=r(22);e.exports=function(e){return n[e]||(n[e]=o(e))}},function(e){e.exports=['constructor','hasOwnProperty','isPrototypeOf','propertyIsEnumerable','toLocaleString','toString','valueOf']},function(e,t,r){'use strict';var n=r(12),o=r(31),l=r(6);e.exports=function(e){for(var t=n(this),r=l(t.length),a=arguments.length,s=o(1<a?arguments[1]:void 0,r),i=2<a?arguments[2]:void 0,c=void 0===i?r:o(i,r);c>s;)t[s++]=e;return t}},function(e,t,r){var n=r(33),o=r(4)('iterator'),l=Array.prototype;e.exports=function(e){return e!==void 0&&(n.Array===e||l[o]===e)}},function(e,t,r){var n=r(44),o=r(4)('iterator'),l=r(33);e.exports=r(20).getIteratorMethod=function(e){if(e!=void 0)return e[o]||e['@@iterator']||l[n(e)]}},function(e,t,r){'use strict';var n=r(35),o=r(76),l=r(33),a=r(11);e.exports=r(77)(Array,'Array',function(e,t){this._t=a(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,o(1)):'keys'==t?o(0,r):'values'==t?o(0,e[r]):o(0,[r,e[r]])},'values'),l.Arguments=l.Array,n('keys'),n('values'),n('entries')},function(e,t,r){var n,o,l,a=r(14),s=r(84),i=r(74),c=r(52),p=r(3),d=p.process,u=p.setImmediate,g=p.clearImmediate,h=p.MessageChannel,y=p.Dispatch,f=0,m={},E='onreadystatechange',_=function(){var e=+this;if(m.hasOwnProperty(e)){var t=m[e];delete m[e],t()}},x=function(e){_.call(e.data)};u&&g||(u=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return m[++f]=function(){s('function'==typeof e?e:Function(e),t)},n(f),f},g=function(e){delete m[e]},'process'==r(30)(d)?n=function(e){d.nextTick(a(_,e,1))}:y&&y.now?n=function(e){y.now(a(_,e,1))}:h?(o=new h,l=o.port2,o.port1.onmessage=x,n=a(l.postMessage,l,1)):p.addEventListener&&'function'==typeof postMessage&&!p.importScripts?(n=function(e){p.postMessage(e+'','*')},p.addEventListener('message',x,!1)):E in c('script')?n=function(e){i.appendChild(c('script'))[E]=function(){i.removeChild(this),_.call(e)}}:n=function(e){setTimeout(a(_,e,1),0)}),e.exports={set:u,clear:g}},function(e,t,r){var n=r(92),o=r(25);e.exports=function(e,t,r){if(n(t))throw TypeError('String#'+r+' doesn\\'t accept regex!');return o(e)+''}},function(e,t,r){var n=r(4)('match');e.exports=function(e){var t=/./;try{'/./'[e](t)}catch(r){try{return t[n]=!1,!'/./'[e](t)}catch(e){}}return!0}},function(e,t,r){'use strict';var n=r(90)(!0);e.exports=function(e,t,r){return t+(r?n(e,t).length:1)}},function(e,t,r){'use strict';var n=r(93),o=RegExp.prototype.exec,l=String.prototype.replace,a=o,s='lastIndex',c=function(){var e=/a/,t=/b*/g;return o.call(e,'a'),o.call(t,'a'),0!==e[s]||0!==t[s]}(),p=/()??/.exec('')[1]!==void 0;(c||p)&&(a=function(e){var t,r,a,d,i=this;return p&&(r=new RegExp('^'+i.source+'$(?!\\\\s)',n.call(i))),c&&(t=i[s]),a=o.call(i,e),c&&a&&(i[s]=i.global?a.index+a[0].length:t),p&&a&&1<a.length&&l.call(a[0],r,function(){for(d=1;d<arguments.length-2;d++)void 0===arguments[d]&&(a[d]=void 0)}),a}),e.exports=a},function(e,t,r){'use strict';var n=r(7),o=r(21);e.exports=function(e,t,r){t in e?n.f(e,t,o(0,r)):e[t]=r}},function(e){e.exports=Math.sign||function(e){return 0==(e=+e)||e!=e?e:0>e?-1:1}},function(e){var t=s;e.exports=!t||22025.465794806718<t(10)||22025.465794806718>t(10)||-2e-17!=t(-2e-17)?function(e){return 0==(e=+e)?e:-1e-6<e&&1e-6>e?e+e*e/2:a(e)-1}:t},function(e,t,r){e.exports=!r(8)&&!r(5)(function(){return 7!=Object.defineProperty(r(52)('div'),'a',{get:function(){return 7}}).a})},function(e,t,a){'use strict';function s(t,r,n){var o,l,a,c=Array(n),p=8*n-r-1,d=(1<<p)-1,u=d>>1,g=23===r?z(2,-24)-z(2,-77):0,h=0,i=0>t||0===t&&0>1/t?1:0;for(t=V(t),t!=t||t===H?(l=t==t?0:1,o=d):(o=$(K(t)/q),1>t*(a=z(2,-o))&&(o--,a*=2),t+=1<=o+u?g/a:g*z(2,1-u),2<=t*a&&(o++,a/=2),o+u>=d?(l=0,o=d):1<=o+u?(l=(t*a-1)*z(2,r),o+=u):(l=t*z(2,u-1)*z(2,r),o=0));8<=r;c[h++]=255&l,l/=256,r-=8);for(o=o<<r|l,p+=r;0<p;c[h++]=255&o,o/=256,p-=8);return c[--h]|=128*i,c}function i(t,r,n){var o,l=8*n-r-1,a=(1<<l)-1,c=a>>1,p=l-7,d=n-1,i=t[d--],s=127&i;for(i>>=7;0<p;s=256*s+t[d],d--,p-=8);for(o=s&(1<<-p)-1,s>>=-p,p+=r;0<p;o=256*o+t[d],d--,p-=8);if(0===s)s=1-c;else{if(s===a)return o?NaN:i?-H:H;o+=z(2,r),s-=c}return(i?-1:1)*o*z(2,s-r)}function c(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function d(e){return[255&e]}function u(e){return[255&e,255&e>>8]}function g(e){return[255&e,255&e>>8,255&e>>16,255&e>>24]}function h(e){return s(e,52,8)}function y(e){return s(e,23,4)}function f(e,t,r){L(e[D],t,{get:function(){return this[r]}})}function m(e,t,r,n){var o=R(+r);if(o+t>e[ee])throw U(C);var l=e[Q]._b,a=o+e[te],s=l.slice(a,a+t);return n?s:s.reverse()}function E(e,t,r,n,o,l){var a=R(+r);if(a+t>e[ee])throw U(C);for(var s=e[Q]._b,c=a+e[te],p=n(+o),d=0;d<t;d++)s[c+d]=p[l?d:t-d-1]}var _=a(3),x=a(8),S=a(23),T=a(53),b=a(9),P=a(28),O=a(5),v=a(29),I=a(18),A=a(6),R=a(72),k=a(37).f,L=a(7).f,F=a(58),N=a(32),w='ArrayBuffer',M='DataView',D='prototype',C='Wrong index!',Y=_[w],B=_[M],G=_.Math,U=_.RangeError,H=_.Infinity,W=Y,V=l,z=o,$=p,K=n,q=r,X='buffer',Z='byteLength',J='byteOffset',Q=x?'_b':X,ee=x?'_l':Z,te=x?'_o':J;if(!T.ABV)Y=function(e){v(this,Y,w);var t=R(e);this._b=F.call(Array(t),0),this[ee]=t},B=function(e,t,r){v(this,B,M),v(e,Y,M);var n=e[ee],o=I(t);if(0>o||o>n)throw U('Wrong offset!');if(r=void 0===r?n-o:A(r),o+r>n)throw U('Wrong length!');this[Q]=e,this[te]=o,this[ee]=r},x&&(f(Y,Z,'_l'),f(B,X,'_b'),f(B,Z,'_l'),f(B,J,'_o')),P(B[D],{getInt8:function(e){return m(this,1,e)[0]<<24>>24},getUint8:function(e){return m(this,1,e)[0]},getInt16:function(e){var t=m(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=m(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return c(m(this,4,e,arguments[1]))},getUint32:function(e){return c(m(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return i(m(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return i(m(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){E(this,1,e,d,t)},setUint8:function(e,t){E(this,1,e,d,t)},setInt16:function(e,t){E(this,2,e,u,t,arguments[2])},setUint16:function(e,t){E(this,2,e,u,t,arguments[2])},setInt32:function(e,t){E(this,4,e,g,t,arguments[2])},setUint32:function(e,t){E(this,4,e,g,t,arguments[2])},setFloat32:function(e,t){E(this,4,e,y,t,arguments[2])},setFloat64:function(e,t){E(this,8,e,h,t,arguments[2])}});else{if(!O(function(){Y(1)})||!O(function(){new Y(-1)})||O(function(){return new Y,new Y(1.5),new Y(NaN),Y.name!=w})){Y=function(e){return v(this,Y),new W(R(e))};for(var re,ne=Y[D]=W[D],oe=k(W),le=0;oe.length>le;)(re=oe[le++])in Y||b(Y,re,W[re]);S||(ne.constructor=Y)}var j=new B(new Y(2)),ae=B[D].setInt8;j.setInt8(0,2147483648),j.setInt8(1,2147483649),(j.getInt8(0)||!j.getInt8(1))&&P(B[D],{setInt8:function(e,t){ae.call(this,e,t<<24>>24)},setUint8:function(e,t){ae.call(this,e,t<<24>>24)}},!0)}N(Y,w),N(B,M),b(B[D],T.VIEW,!0),t[w]=Y,t[M]=B},function(e,t,r){var n=r(18),o=r(6);e.exports=function(e){if(e===void 0)return 0;var t=n(e),r=o(t);if(t!==r)throw RangeError('Wrong length!');return r}},function(e,t,r){var n=r(10),o=r(11),l=r(55)(!1),a=r(56)('IE_PROTO');e.exports=function(e,t){var r,s=o(e),c=0,i=[];for(r in s)r!=a&&n(s,r)&&i.push(r);for(;t.length>c;)n(s,r=t[c++])&&(~l(i,r)||i.push(r));return i}},function(e,t,r){var n=r(3).document;e.exports=n&&n.documentElement},function(e,t,r){var n=r(30);e.exports=Array.isArray||function(e){return'Array'==n(e)}},function(e){e.exports=function(e,t){return{value:t,done:!!e}}},function(e,t,r){'use strict';var n=r(23),o=r(0),l=r(17),a=r(9),s=r(33),i=r(107),c=r(32),p=r(34),d=r(4)('iterator'),u=!([].keys&&'next'in[].keys()),g='keys',h='values',y=function(){return this};e.exports=function(e,t,r,f,m,E,_){i(r,t,f);var x,S,T,b=function(e){return!u&&e in I?I[e]:e===g?function(){return new r(this,e)}:e===h?function(){return new r(this,e)}:function(){return new r(this,e)}},P=t+' Iterator',O=m==h,v=!1,I=e.prototype,A=I[d]||I['@@iterator']||m&&I[m],R=A||b(m),k=m?O?b('entries'):R:void 0,L='Array'==t?I.entries||A:A;if(L&&(T=p(L.call(new e)),T!==Object.prototype&&T.next&&(c(T,P,!0),!n&&'function'!=typeof T[d]&&a(T,d,y))),O&&A&&A.name!==h&&(v=!0,R=function(){return A.call(this)}),(!n||_)&&(u||v||!I[d])&&a(I,d,R),s[t]=R,s[P]=y,m)if(x={values:O?R:b(h),keys:E?R:b(g),entries:k},_)for(S in x)S in I||l(I,S,x[S]);else o(o.P+o.F*(u||v),t,x);return x}},function(e,t,r){'use strict';var n=r(12),o=r(31),l=r(6);e.exports=[].copyWithin||function(e,t){var r=n(this),a=l(r.length),s=o(e,a),i=o(t,a),c=2<arguments.length?arguments[2]:void 0,p=d((c===void 0?a:o(c,a))-i,a-s),u=1;for(i<s&&s<i+p&&(u=-1,i+=p-1,s+=p-1);0<p--;)i in r?r[s]=r[i]:delete r[s],s+=u,i+=u;return r}},function(e,t,r){'use strict';var n=r(7).f,o=r(38),l=r(28),a=r(14),s=r(29),i=r(46),c=r(77),p=r(76),d=r(43),u=r(8),g=r(19).fastKey,h=r(27),y=u?'_s':'size',f=function(e,t){var r,n=g(t);if('F'!==n)return e._i[n];for(r=e._f;r;r=r.n)if(r.k==t)return r};e.exports={getConstructor:function(e,t,r,c){var p=e(function(e,n){s(e,p,t,'_i'),e._t=t,e._i=o(null),e._f=void 0,e._l=void 0,e[y]=0,void 0!=n&&i(n,r,e[c],e)});return l(p.prototype,{clear:function(){for(var e=h(this,t),r=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];e._f=e._l=void 0,e[y]=0},delete:function(e){var r=h(this,t),n=f(r,e);if(n){var o=n.n,l=n.p;delete r._i[n.i],n.r=!0,l&&(l.n=o),o&&(o.p=l),r._f==n&&(r._f=o),r._l==n&&(r._l=l),r[y]--}return!!n},forEach:function(e){h(this,t);for(var r,n=a(e,1<arguments.length?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p},has:function(e){return!!f(h(this,t),e)}}),u&&n(p.prototype,'size',{get:function(){return h(this,t)[y]}}),p},def:function(e,t,r){var n,o,l=f(e,t);return l?l.v=r:(e._l=l={i:o=g(t,!0),k:t,v:r,p:n=e._l,n:void 0,r:!1},!e._f&&(e._f=l),n&&(n.n=l),e[y]++,'F'!==o&&(e._i[o]=l)),e},getEntry:f,setStrong:function(e,t,r){c(e,t,function(e,r){this._t=h(e,t),this._k=r,this._l=void 0},function(){for(var e=this,t=e._k,r=e._l;r&&r.r;)r=r.p;return e._t&&(e._l=r=r?r.n:e._t._f)?'keys'==t?p(0,r.k):'values'==t?p(0,r.v):p(0,[r.k,r.v]):(e._t=void 0,p(1))},r?'entries':'values',!r,!0),d(t)}}},function(e,t,r){var n=r(2);e.exports=function(t,e,r,o){try{return o?e(n(r)[0],r[1]):e(r)}catch(r){var l=t['return'];throw void 0!==l&&n(l.call(t)),r}}},function(e,t,r){var n=r(1),o=r(2),l=function(e,t){if(o(e),!n(t)&&null!==t)throw TypeError(t+': can\\'t set as prototype!')};e.exports={set:Object.setPrototypeOf||('__proto__'in{}?function(e,t,n){try{n=r(14)(Function.call,r(16).f(Object.prototype,'__proto__').set,2),n(e,[]),t=!(e instanceof Array)}catch(r){t=!0}return function(e,r){return l(e,r),t?e.__proto__=r:n(e,r),e}}({},!1):void 0),check:l}},function(e,t,r){'use strict';var n=r(26),o=r(48),l=r(40),a=r(12),s=r(54),i=Object.assign;e.exports=!i||r(5)(function(){var e={},t={},r=Symbol(),n='abcdefghijklmnopqrst';return e[r]=7,n.split('').forEach(function(e){t[e]=e}),7!=i({},e)[r]||Object.keys(i({},t)).join('')!=n})?function(e){for(var t=a(e),r=arguments.length,i=1,c=o.f,p=l.f;r>i;)for(var d,u=s(arguments[i++]),g=c?n(u).concat(c(u)):n(u),h=g.length,y=0;h>y;)p.call(u,d=g[y++])&&(t[d]=u[d]);return t}:i},function(e,t,r){'use strict';var n=r(28),o=r(19).getWeak,l=r(2),a=r(1),s=r(29),i=r(46),c=r(39),p=r(10),d=r(27),u=c(5),g=c(6),h=0,y=function(e){return e._l||(e._l=new f)},f=function(){this.a=[]},m=function(e,t){return u(e.a,function(e){return e[0]===t})};f.prototype={get:function(e){var t=m(this,e);if(t)return t[1]},has:function(e){return!!m(this,e)},set:function(e,t){var r=m(this,e);r?r[1]=t:this.a.push([e,t])},delete:function(e){var t=g(this.a,function(t){return t[0]===e});return~t&&this.a.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,l){var c=e(function(e,n){s(e,c,t,'_i'),e._t=t,e._i=h++,e._l=void 0,void 0!=n&&i(n,r,e[l],e)});return n(c.prototype,{delete:function(e){if(!a(e))return!1;var r=o(e);return!0===r?y(d(this,t))['delete'](e):r&&p(r,this._i)&&delete r[this._i]},has:function(e){if(!a(e))return!1;var r=o(e);return!0===r?y(d(this,t)).has(e):r&&p(r,this._i)}}),c},def:function(e,t,r){var n=o(l(t),!0);return!0===n?y(e).set(t,r):n[e._i]=r,e},ufstore:y}},function(e){e.exports=function(e,t,r){var n=r===void 0;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3]);}return e.apply(r,t)}},function(e,t,r){var n=r(37),o=r(48),l=r(2),a=r(3).Reflect;e.exports=a&&a.ownKeys||function(e){var t=n.f(l(e)),r=o.f;return r?t.concat(r(e)):t}},function(e,t,r){'use strict';function n(e){var t,r;this.promise=new e(function(e,n){if(t!=void 0||r!=void 0)throw TypeError('Bad Promise constructor');t=e,r=n}),this.resolve=o(t),this.reject=o(r)}var o=r(24);e.exports.f=function(e){return new n(e)}},function(e,t,r){t.f=r(4)},function(e,t,r){var n=r(11),o=r(37).f,l={}.toString,a='object'==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],s=function(e){try{return o(e)}catch(t){return a.slice()}};e.exports.f=function(e){return a&&'[object Window]'==l.call(e)?s(e):o(n(e))}},function(e){e.exports=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t}},function(e,t,r){var n=r(18),o=r(25);e.exports=function(e){return function(t,r){var c,a,p=o(t)+'',s=n(r),i=p.length;return 0>s||s>=i?e?'':void 0:(c=p.charCodeAt(s),55296>c||56319<c||s+1===i||56320>(a=p.charCodeAt(s+1))||57343<a?e?p.charAt(s):c:e?p.slice(s,s+2):(c-55296<<10)+(a-56320)+65536)}}},function(e,t,r){'use strict';var o=r(18),l=r(25);e.exports=function(e){var t=l(this)+'',r='',a=o(e);if(0>a||a==Infinity)throw RangeError('Count can\\'t be negative');for(;0<a;(a>>>=1)&&(t+=t))1&a&&(r+=t);return r}},function(e,t,r){var n=r(1),o=r(30),l=r(4)('match');e.exports=function(e){var t;return n(e)&&((t=e[l])===void 0?'RegExp'==o(e):!!t)}},function(e,t,r){'use strict';var n=r(2);e.exports=function(){var e=n(this),t='';return e.global&&(t+='g'),e.ignoreCase&&(t+='i'),e.multiline&&(t+='m'),e.unicode&&(t+='u'),e.sticky&&(t+='y'),t}},function(e,t,r){var n=r(1);e.exports=function(e){return!n(e)&&isFinite(e)&&p(e)===e}},function(e){e.exports=Math.log1p||function(e){return-1e-8<(e=+e)&&1e-8>e?e-e*e/2:n(1+e)}},function(e,t,r){var n=r(26),o=r(11),l=r(40).f;e.exports=function(e){return function(t){for(var r,a=o(t),s=n(a),c=s.length,p=0,i=[];c>p;)l.call(a,r=s[p++])&&i.push(e?[r,a[r]]:a[r]);return i}}},function(e,t,r){var n=r(6),o=r(91),l=r(25);e.exports=function(e,t,r,a){var s=l(e)+'',i=s.length,p=void 0===r?' ':r+'',d=n(t);if(d<=i||''==p)return s;var u=d-i,g=o.call(p,c(u/p.length));return g.length>u&&(g=g.slice(0,u)),a?g+s:s+g}},function(e,t){'use strict';function r(e,t,r){var n=new Error(t.message||t.message_to_client||t);return n.name=t.code||e,n.passthrough=r,n}function n(e,t){for(var r=new Uint8Array(e.length+t.length),n=0;n<e.length;n++)r[n]=e[n];for(var o=0;o<t.length;o++)r[o+e.length]=t[o];return r}function o(e){var t=new Uint8Array(l),r=new DataView(t.buffer);return r.setUint32(0,e),t}Object.defineProperty(t,'__esModule',{value:!0}),t.addMetadata=function(e,t){for(var r=t.uploadId,l=t.callType,a=o(r),s=o(l),i=e,c=function(e){var t=o(e.length),r=new Uint8Array([]);return r=n(r,s),r=n(r,a),r=n(r,t),r=n(r,e),r},p=[],d=0;d<i.length;d++)p.push(c(i[d],d,i));return p},t.log=function(e){var t;if(e){for(var r=arguments.length,n=Array(1<r?r-1:0),o=1;o<r;o++)n[o-1]=arguments[o];(t=console).log.apply(t,[new Date+':'].concat(n))}},t.createError=r,t.pushToBuffer=n,t.getFile=function(e){var t=Object.assign({},e);return t.buffer=new Uint8Array(e.buffer),t},t.checkOptions=function(e){if(!e)throw Error('Options is required');for(var t=['filename','buffer','documentType','documentFormat'],n=t,o=function(t){if(!(t in e))throw r('InvocationError','Required option <'+t+'> is not found in the given options')},l=0;l<n.length;l++)o(n[l],l,n);if(e.buffer.length>a)throw r('FileSizeError','The maximum acceptable file size is '+s)};var l=4,a=t.MAX_SIZE=8388608,s=t.HUMAN_READABLE_MAX_SIZE='8 MB',i=t.generateChunks=function(e,t){for(var r,n=t.chunkSize,o=n===void 0?16384:n,l=[],a=0;a<e.length;a++)r=e[a],0==a%o?l.push([r]):l[l.length-1].push(r);for(var s=l,i=function(e){return new Uint8Array(e)},c=[],p=0;p<s.length;p++)c.push(i(s[p],p,s));return c.concat(new Uint8Array([]))}},function(e){var r={utf8:{stringToBytes:function(e){return r.bin.stringToBytes(unescape(encodeURIComponent(e)))},bytesToString:function(e){return decodeURIComponent(escape(r.bin.bytesToString(e)))}},bin:{stringToBytes:function(e){for(var t=[],r=0;r<e.length;r++)t.push(255&e.charCodeAt(r));return t},bytesToString:function(e){for(var r=[],n=0;n<e.length;n++)r.push(t(e[n]));return r.join('')}}};e.exports=r},function(e,t,r){'use strict';function n(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}Object.defineProperty(t,'__esModule',{value:!0});var o=function(){function e(e,t){for(var r,n=0;n<t.length;n++)r=t[n],r.enumerable=r.enumerable||!1,r.configurable=!0,'value'in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();r(101),r(103),r(108),r(109),r(110),r(111),r(112),r(113),r(114),r(115),r(116),r(118),r(119),r(120),r(121),r(122),r(124),r(125),r(126),r(127),r(128),r(129),r(130),r(131),r(132),r(133),r(134),r(135),r(139),r(142),r(143),r(144),r(145),r(146),r(147),r(148),r(149),r(150),r(151),r(152),r(153),r(154),r(155),r(156),r(157),r(158),r(159),r(160),r(161),r(162),r(163),r(165),r(166),r(167),r(168),r(169),r(170),r(171),r(172),r(173),r(61),r(174),r(175),r(176),r(177),r(178),r(179),r(180),r(181),r(182),r(183),r(184),r(185),r(186),r(187),r(188),r(190),r(191),r(192),r(193),r(194),r(195),r(196),r(197),r(198),r(199),r(200),r(201),r(202),r(203),r(204),r(205),r(206),r(207),r(208);var l=r(98),a=r(209),s=function(e){return e&&e.__esModule?e:{default:e}}(a),i=0,c=function(){function e(t){n(this,e),this.config=t,this.clients={},this.wrapConnection()}return o(e,[{key:'upload',value:function(e){var t=this,r=this.config.debug,n=(0,l.getFile)(e);(0,l.checkOptions)(n),i+=1;var o=new s.default({send:this.send,file:n,reqId:i});return this.clients[i]={client:o},new Promise(function(e,a){t.clients[i].promise={resolve:e,reject:a},(0,l.log)(void 0!==r&&r,'Uploading started, File options:',n),o.requestUpload()})}},{key:'wrapConnection',value:function(){var e=this,t=this.config,r=t.connection,n=t.debug,o=void 0!==n&&n;if(!r||1!==r.readyState)throw(0,l.createError)('ConnectionError','Connection is not ready!');this.connection=r,this.send=function(e){(0,l.log)(o,'<Sent>:',e),r.send(e)};var a=r.onmessage;r.onmessage=function(t){var n=t.data;(0,l.log)(o,'<Received>:',n);var s=JSON.parse(n);if(a&&(!s.passthrough||!s.passthrough.document_upload))return void a.call(r,t);var i=s.passthrough.document_upload;if(a&&!i)return void a.call(r,t);if(s.req_id in e.clients){var c=e.clients[s.req_id],p=c.client,d=c.promise;try{var u=p.handleMessage(s);u&&((0,l.log)(o,'Upload successful, upload info:',u),d.resolve(u))}catch(t){d.reject(t),(0,l.log)(o,t)}}}}}]),e}();t.default=c},function(e,t,r){'use strict';var n=r(0),o=r(53),l=r(71),a=r(2),s=r(31),i=r(6),c=r(1),p=r(3).ArrayBuffer,d=r(42),u=l.ArrayBuffer,g=l.DataView,h=o.ABV&&p.isView,y=u.prototype.slice,f=o.VIEW,m='ArrayBuffer';n(n.G+n.W+n.F*(p!==u),{ArrayBuffer:u}),n(n.S+n.F*!o.CONSTR,m,{isView:function(e){return h&&h(e)||c(e)&&f in e}}),n(n.P+n.U+n.F*r(5)(function(){return!new u(2).slice(1,void 0).byteLength}),m,{slice:function(e,t){if(y!==void 0&&t===void 0)return y.call(a(this),e);for(var r=a(this).byteLength,n=s(e,r),o=s(void 0===t?r:t,r),l=new(d(this,u))(i(o-n)),c=new g(this),p=new g(l),h=0;n<o;)p.setUint8(h++,c.getUint8(n++));return l}}),r(43)(m)},function(e,t,r){e.exports=r(41)('native-function-to-string',Function.toString)},function(e,t,r){r(15)('Int8',1,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){var n=r(7),o=r(2),l=r(26);e.exports=r(8)?Object.defineProperties:function(e,t){o(e);for(var r,a=l(t),s=a.length,c=0;s>c;)n.f(e,r=a[c++],t[r]);return e}},function(e,t,r){var n=r(106);e.exports=function(e,t){return new(n(e))(t)}},function(e,t,r){var n=r(1),o=r(75),l=r(4)('species');e.exports=function(e){var t;return o(e)&&(t=e.constructor,'function'==typeof t&&(t===Array||o(t.prototype))&&(t=void 0),n(t)&&(t=t[l],null===t&&(t=void 0))),void 0===t?Array:t}},function(e,t,r){'use strict';var n=r(38),o=r(21),l=r(32),a={};r(9)(a,r(4)('iterator'),function(){return this}),e.exports=function(e,t,r){e.prototype=n(a,{next:o(1,r)}),l(e,t+' Iterator')}},function(e,t,r){r(15)('Uint8',1,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Uint8',1,function(e){return function(t,r,n){return e(this,t,r,n)}},!0)},function(e,t,r){r(15)('Int16',2,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Uint16',2,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Int32',4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Uint32',4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Float32',4,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){r(15)('Float64',8,function(e){return function(t,r,n){return e(this,t,r,n)}})},function(e,t,r){'use strict';var n=r(79),o=r(27),l='Map';e.exports=r(47)(l,function(e){return function(){return e(this,0<arguments.length?arguments[0]:void 0)}},{get:function(e){var t=n.getEntry(o(this,l),e);return t&&t.v},set:function(e,t){return n.def(o(this,l),0===e?0:e,t)}},n,!0)},function(e,t,r){var n=r(1),o=r(81).set;e.exports=function(e,t,r){var l,a=t.constructor;return a!==r&&'function'==typeof a&&(l=a.prototype)!==r.prototype&&n(l)&&o&&o(e,l),e}},function(e,t,r){'use strict';var n=r(79),o=r(27),l='Set';e.exports=r(47)(l,function(e){return function(){return e(this,0<arguments.length?arguments[0]:void 0)}},{add:function(e){return n.def(o(this,l),e=0===e?0:e,e)}},n)},function(e,t,r){'use strict';var n,o=r(3),l=r(39)(0),a=r(17),s=r(19),i=r(82),c=r(83),p=r(1),d=r(27),u=r(27),g=!o.ActiveXObject&&'ActiveXObject'in o,h='WeakMap',y=s.getWeak,f=Object.isExtensible,m=c.ufstore,E=function(e){return function(){return e(this,0<arguments.length?arguments[0]:void 0)}},_={get:function(e){if(p(e)){var t=y(e);return!0===t?m(d(this,h)).get(e):t?t[this._i]:void 0}},set:function(e,t){return c.def(d(this,h),e,t)}},x=e.exports=r(47)(h,E,_,c,!0,!0);u&&g&&(n=c.getConstructor(E,h),i(n.prototype,_),s.NEED=!0,l(['delete','has','get','set'],function(e){var t=x.prototype,r=t[e];a(t,e,function(t,o){if(p(t)&&!f(t)){this._f||(this._f=new n);var l=this._f[e](t,o);return'set'==e?this:l}return r.call(this,t,o)})}))},function(e,t,r){'use strict';var n=r(83),o=r(27),l='WeakSet';r(47)(l,function(e){return function(){return e(this,0<arguments.length?arguments[0]:void 0)}},{add:function(e){return n.def(o(this,l),e,!0)}},n,!1,!0)},function(e,t,r){var n=r(0),o=r(24),l=r(2),a=(r(3).Reflect||{}).apply,s=Function.apply;n(n.S+n.F*!r(5)(function(){a(function(){})}),'Reflect',{apply:function(e,t,r){var n=o(e),i=l(r);return a?a(n,t,i):s.call(n,t,i)}})},function(e,t,r){var n=r(0),o=r(38),l=r(24),a=r(2),s=r(1),i=r(5),c=r(123),p=(r(3).Reflect||{}).construct,d=i(function(){function e(){}return!(p(function(){},[],e)instanceof e)}),u=!i(function(){p(function(){})});n(n.S+n.F*(d||u),'Reflect',{construct:function(e,t){l(e),a(t);var r=3>arguments.length?e:l(arguments[2]);if(u&&!d)return p(e,t,r);if(e==r){switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);}var n=[null];return n.push.apply(n,t),new(c.apply(e,n))}var i=r.prototype,g=o(s(i)?i:Object.prototype),h=Function.apply.call(e,g,t);return s(h)?h:g}})},function(e,t,r){'use strict';var n=r(24),o=r(1),l=r(84),a=[].slice,s={},i=function(e,t,r){if(!(t in s)){for(var o=[],n=0;n<t;n++)o[n]='a['+n+']';s[t]=Function('F,a','return new F('+o.join(',')+')')}return s[t](e,r)};e.exports=Function.bind||function(e){var t=n(this),r=a.call(arguments,1),s=function(){var n=r.concat(a.call(arguments));return this instanceof s?i(t,n.length,n):l(t,n,e)};return o(t.prototype)&&(s.prototype=t.prototype),s}},function(e,t,r){var n=r(7),o=r(0),l=r(2),a=r(36);o(o.S+o.F*r(5)(function(){Reflect.defineProperty(n.f({},1,{value:1}),1,{value:2})}),'Reflect',{defineProperty:function(e,t,r){l(e),t=a(t,!0),l(r);try{return n.f(e,t,r),!0}catch(t){return!1}}})},function(e,t,r){var n=r(0),o=r(16).f,l=r(2);n(n.S,'Reflect',{deleteProperty:function(e,t){var r=o(l(e),t);return r&&!r.configurable?!1:delete e[t]}})},function(e,t,r){function n(e,t){var r,s,p=3>arguments.length?e:arguments[2];return c(e)===p?e[t]:(r=o.f(e,t))?a(r,'value')?r.value:void 0===r.get?void 0:r.get.call(p):i(s=l(e))?n(s,t,p):void 0}var o=r(16),l=r(34),a=r(10),s=r(0),i=r(1),c=r(2);s(s.S,'Reflect',{get:n})},function(e,t,r){var n=r(16),o=r(0),l=r(2);o(o.S,'Reflect',{getOwnPropertyDescriptor:function(e,t){return n.f(l(e),t)}})},function(e,t,r){var n=r(0),o=r(34),l=r(2);n(n.S,'Reflect',{getPrototypeOf:function(e){return o(l(e))}})},function(e,t,r){var n=r(0);n(n.S,'Reflect',{has:function(e,t){return t in e}})},function(e,t,r){var n=r(0),o=r(2),l=Object.isExtensible;n(n.S,'Reflect',{isExtensible:function(e){return o(e),!l||l(e)}})},function(e,t,r){var n=r(0);n(n.S,'Reflect',{ownKeys:r(85)})},function(e,t,r){var n=r(0),o=r(2),l=Object.preventExtensions;n(n.S,'Reflect',{preventExtensions:function(e){o(e);try{return l&&l(e),!0}catch(t){return!1}}})},function(e,t,r){function n(e,t,r){var i,u,g=4>arguments.length?e:arguments[3],h=l.f(p(e),t);if(!h){if(d(u=a(e)))return n(u,t,r,g);h=c(0)}if(s(h,'value')){if(!1===h.writable||!d(g))return!1;if(i=l.f(g,t)){if(i.get||i.set||!1===i.writable)return!1;i.value=r,o.f(g,t,i)}else o.f(g,t,c(0,r));return!0}return h.set!==void 0&&(h.set.call(g,r),!0)}var o=r(7),l=r(16),a=r(34),s=r(10),i=r(0),c=r(21),p=r(2),d=r(1);i(i.S,'Reflect',{set:n})},function(e,t,r){var n=r(0),o=r(81);o&&n(n.S,'Reflect',{setPrototypeOf:function(e,t){o.check(e,t);try{return o.set(e,t),!0}catch(t){return!1}}})},function(e,t,r){'use strict';var n,o,l,a,s=r(23),i=r(3),c=r(14),p=r(44),d=r(0),u=r(1),g=r(24),h=r(29),y=r(46),f=r(42),m=r(62).set,E=r(136)(),_=r(86),x=r(137),S=r(49),T=r(138),b='Promise',P=i.TypeError,O=i.process,v=O&&O.versions,I=v&&v.v8||'',A=i[b],R='process'==p(O),k=function(){},L=o=_.f,F=!!function(){try{var e=A.resolve(1),t=(e.constructor={})[r(4)('species')]=function(e){e(k,k)};return(R||'function'==typeof PromiseRejectionEvent)&&e.then(k)instanceof t&&0!==I.indexOf('6.6')&&-1===S.indexOf('Chrome/66')}catch(t){}}(),N=function(e){var t;return u(e)&&'function'==typeof(t=e.then)&&t},w=function(e,t){if(!e._n){e._n=!0;var r=e._c;E(function(){for(var n=e._v,o=1==e._s,l=0,a=function(t){var r,l,a,s=o?t.ok:t.fail,i=t.resolve,c=t.reject,p=t.domain;try{s?(!o&&(2==e._h&&C(e),e._h=1),!0===s?r=n:(p&&p.enter(),r=s(n),p&&(p.exit(),a=!0)),r===t.promise?c(P('Promise-chain cycle')):(l=N(r))?l.call(r,i,c):i(r)):c(n)}catch(t){p&&!a&&p.exit(),c(t)}};r.length>l;)a(r[l++]);e._c=[],e._n=!1,t&&!e._h&&M(e)})}},M=function(e){m.call(i,function(){var t,r,n,o=e._v,l=D(e);if(l&&(t=x(function(){R?O.emit('unhandledRejection',o,e):(r=i.onunhandledrejection)?r({promise:e,reason:o}):(n=i.console)&&n.error&&n.error('Unhandled promise rejection',o)}),e._h=R||D(e)?2:1),e._a=void 0,l&&t.e)throw t.v})},D=function(e){return 1!==e._h&&0===(e._a||e._c).length},C=function(e){m.call(i,function(){var t;R?O.emit('rejectionHandled',e):(t=i.onrejectionhandled)&&t({promise:e,reason:e._v})})},j=function(e){var t=this;t._d||(t._d=!0,t=t._w||t,t._v=e,t._s=2,!t._a&&(t._a=t._c.slice()),w(t,!0))},Y=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw P('Promise can\\'t be resolved itself');(t=N(e))?E(function(){var n={_w:r,_d:!1};try{t.call(e,c(Y,n,1),c(j,n,1))}catch(t){j.call(n,t)}}):(r._v=e,r._s=1,w(r,!1))}catch(t){j.call({_w:r,_d:!1},t)}}};F||(A=function(e){h(this,A,b,'_h'),g(e),n.call(this);try{e(c(Y,this,1),c(j,this,1))}catch(e){j.call(this,e)}},n=function(){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},n.prototype=r(28)(A.prototype,{then:function(e,t){var r=L(f(this,A));return r.ok='function'!=typeof e||e,r.fail='function'==typeof t&&t,r.domain=R?O.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&w(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),l=function(){var e=new n;this.promise=e,this.resolve=c(Y,e,1),this.reject=c(j,e,1)},_.f=L=function(e){return e===A||e===a?new l(e):o(e)}),d(d.G+d.W+d.F*!F,{Promise:A}),r(32)(A,b),r(43)(b),a=r(20)[b],d(d.S+d.F*!F,b,{reject:function(e){var t=L(this),r=t.reject;return r(e),t.promise}}),d(d.S+d.F*(s||!F),b,{resolve:function(e){return T(s&&this===a?A:this,e)}}),d(d.S+d.F*!(F&&r(45)(function(e){A.all(e)['catch'](k)})),b,{all:function(e){var t=this,r=L(t),n=r.resolve,o=r.reject,l=x(function(){var r=[],l=0,a=1;y(e,!1,function(e){var s=l++,i=!1;r.push(void 0),a++,t.resolve(e).then(function(e){i||(i=!0,r[s]=e,--a||n(r))},o)}),--a||n(r)});return l.e&&o(l.v),r.promise},race:function(e){var t=this,r=L(t),n=r.reject,o=x(function(){y(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}})},function(e,t,r){var n=r(3),o=r(62).set,l=n.MutationObserver||n.WebKitMutationObserver,a=n.process,s=n.Promise,i='process'==r(30)(a);e.exports=function(){var t,r,c,e=function(){var e,n;for(i&&(e=a.domain)&&e.exit();t;){n=t.fn,t=t.next;try{n()}catch(n){throw t?c():r=void 0,n}}r=void 0,e&&e.enter()};if(i)c=function(){a.nextTick(e)};else if(l&&!(n.navigator&&n.navigator.standalone)){var p=!0,d=document.createTextNode('');new l(e).observe(d,{characterData:!0}),c=function(){d.data=p=!p}}else if(s&&s.resolve){var u=s.resolve(void 0);c=function(){u.then(e)}}else c=function(){o.call(n,e)};return function(e){var n={fn:e,next:void 0};r&&(r.next=n),t||(t=n,c()),r=n}}},function(e){e.exports=function(e){try{return{e:!1,v:e()}}catch(t){return{e:!0,v:t}}}},function(e,t,r){var n=r(2),o=r(1),l=r(86);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=l.f(e),a=r.resolve;return a(t),r.promise}},function(e,t,r){'use strict';var n=r(3),o=r(10),l=r(8),a=r(0),s=r(17),c=r(19).KEY,i=r(5),p=r(41),d=r(32),u=r(22),g=r(4),h=r(87),y=r(140),f=r(141),m=r(75),E=r(2),_=r(1),x=r(11),S=r(36),T=r(21),b=r(38),P=r(88),O=r(16),v=r(7),I=r(26),A=O.f,R=v.f,L=P.f,F=n.Symbol,N=n.JSON,w=N&&N.stringify,M='prototype',C=g('_hidden'),D=g('toPrimitive'),Y={}.propertyIsEnumerable,B=p('symbol-registry'),G=p('symbols'),U=p('op-symbols'),H=Object[M],W='function'==typeof F,V=n.QObject,z=!V||!V[M]||!V[M].findChild,$=l&&i(function(){return 7!=b(R({},'a',{get:function(){return R(this,'a',{value:7}).a}})).a})?function(e,t,r){var n=A(H,t);n&&delete H[t],R(e,t,r),n&&e!==H&&R(H,t,n)}:R,K=function(e){var t=G[e]=b(F[M]);return t._k=e,t},q=W&&'symbol'==typeof F.iterator?function(e){return'symbol'==typeof e}:function(e){return e instanceof F},X=function(e,t,r){return e===H&&X(U,t,r),E(e),t=S(t,!0),E(r),o(G,t)?(r.enumerable?(o(e,C)&&e[C][t]&&(e[C][t]=!1),r=b(r,{enumerable:T(0,!1)})):(!o(e,C)&&R(e,C,T(1,{})),e[C][t]=!0),$(e,t,r)):R(e,t,r)},Z=function(e,t){E(e);for(var r,n=f(t=x(t)),o=0,a=n.length;a>o;)X(e,r=n[o++],t[r]);return e},J=function(e){var t=Y.call(this,e=S(e,!0));return this===H&&o(G,e)&&!o(U,e)?!1:t||!o(this,e)||!o(G,e)||o(this,C)&&this[C][e]?t:!0},Q=function(e,t){if(e=x(e),t=S(t,!0),e!==H||!o(G,t)||o(U,t)){var r=A(e,t);return r&&o(G,t)&&!(o(e,C)&&e[C][t])&&(r.enumerable=!0),r}},ee=function(e){for(var t,r=L(x(e)),n=[],l=0;r.length>l;)o(G,t=r[l++])||t==C||t==c||n.push(t);return n},te=function(e){for(var t,r=e===H,n=L(r?U:x(e)),l=[],a=0;n.length>a;)o(G,t=n[a++])&&(!r||o(H,t))&&l.push(G[t]);return l};W||(F=function(){if(this instanceof F)throw TypeError('Symbol is not a constructor!');var e=u(0<arguments.length?arguments[0]:void 0),t=function(r){this===H&&t.call(U,r),o(this,C)&&o(this[C],e)&&(this[C][e]=!1),$(this,e,T(1,r))};return l&&z&&$(H,e,{configurable:!0,set:t}),K(e)},s(F[M],'toString',function(){return this._k}),O.f=Q,v.f=X,r(37).f=P.f=ee,r(40).f=J,r(48).f=te,l&&!r(23)&&s(H,'propertyIsEnumerable',J,!0),h.f=function(e){return K(g(e))}),a(a.G+a.W+a.F*!W,{Symbol:F});for(var re=['hasInstance','isConcatSpreadable','iterator','match','replace','search','species','split','toPrimitive','toStringTag','unscopables'],ne=0;re.length>ne;)g(re[ne++]);for(var j=I(g.store),oe=0;j.length>oe;)y(j[oe++]);a(a.S+a.F*!W,'Symbol',{for:function(e){return o(B,e+='')?B[e]:B[e]=F(e)},keyFor:function(e){if(!q(e))throw TypeError(e+' is not a symbol!');for(var t in B)if(B[t]===e)return t},useSetter:function(){z=!0},useSimple:function(){z=!1}}),a(a.S+a.F*!W,'Object',{create:function(e,t){return t===void 0?b(e):Z(b(e),t)},defineProperty:X,defineProperties:Z,getOwnPropertyDescriptor:Q,getOwnPropertyNames:ee,getOwnPropertySymbols:te}),N&&a(a.S+a.F*(!W||i(function(){var e=F();return'[null]'!=w([e])||'{}'!=w({a:e})||'{}'!=w(Object(e))})),'JSON',{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(_(t)||void 0!==e)&&!q(e))return m(t)||(t=function(e,t){if('function'==typeof r&&(t=r.call(this,e,t)),!q(t))return t}),n[1]=t,w.apply(N,n)}}),F[M][D]||r(9)(F[M],D,F[M].valueOf),d(F,'Symbol'),d(Math,'Math',!0),d(n.JSON,'JSON',!0)},function(e,t,r){var n=r(3),o=r(20),l=r(23),a=r(87),s=r(7).f;e.exports=function(e){var t=o.Symbol||(o.Symbol=l?{}:n.Symbol||{});'_'==e.charAt(0)||e in t||s(t,e,{value:a.f(e)})}},function(e,t,r){var n=r(26),o=r(48),l=r(40);e.exports=function(e){var t=n(e),r=o.f;if(r)for(var a,s=r(e),c=l.f,p=0;s.length>p;)c.call(e,a=s[p++])&&t.push(a);return t}},function(e,t,r){var n=r(1),o=r(19).onFreeze;r(13)('freeze',function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(1),o=r(19).onFreeze;r(13)('seal',function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(1),o=r(19).onFreeze;r(13)('preventExtensions',function(e){return function(t){return e&&n(t)?e(o(t)):t}})},function(e,t,r){var n=r(1);r(13)('isFrozen',function(e){return function(t){return!n(t)||!!e&&e(t)}})},function(e,t,r){var n=r(1);r(13)('isSealed',function(e){return function(t){return!n(t)||!!e&&e(t)}})},function(e,t,r){var n=r(1);r(13)('isExtensible',function(e){return function(t){return!!n(t)&&(!e||e(t))}})},function(e,t,r){var n=r(11),o=r(16).f;r(13)('getOwnPropertyDescriptor',function(){return function(e,t){return o(n(e),t)}})},function(e,t,r){var n=r(12),o=r(34);r(13)('getPrototypeOf',function(){return function(e){return o(n(e))}})},function(e,t,r){var n=r(12),o=r(26);r(13)('keys',function(){return function(e){return o(n(e))}})},function(e,t,r){r(13)('getOwnPropertyNames',function(){return r(88).f})},function(e,t,r){var n=r(0);n(n.S+n.F,'Object',{assign:r(82)})},function(e,t,r){var n=r(0);n(n.S,'Object',{is:r(89)})},function(e,t,r){var n=r(7).f,o=Function.prototype,l=/^\\s*function ([^ (]*)/,a='name';a in o||r(8)&&n(o,a,{configurable:!0,get:function(){try{return(''+this).match(l)[1]}catch(t){return''}}})},function(e,t,r){var n=r(0),o=r(11),l=r(6);n(n.S,'String',{raw:function(e){for(var t=o(e.raw),r=l(t.length),n=arguments.length,a=[],s=0;r>s;)a.push(t[s++]+''),s<n&&a.push(arguments[s]+'');return a.join('')}})},function(e,r,n){var o=n(0),l=n(31),a=t,s=String.fromCodePoint;o(o.S+o.F*(!!s&&1!=s.length),'String',{fromCodePoint:function(){for(var e,t=[],r=arguments.length,n=0;r>n;){if(e=+arguments[n++],l(e,1114111)!==e)throw RangeError(e+' is not a valid code point');t.push(65536>e?a(e):a(((e-=65536)>>10)+55296,e%1024+56320))}return t.join('')}})},function(e,t,r){'use strict';var n=r(0),o=r(90)(!1);n(n.P,'String',{codePointAt:function(e){return o(this,e)}})},function(e,t,r){var n=r(0);n(n.P,'String',{repeat:r(91)})},function(e,t,r){'use strict';var n=r(0),o=r(6),l=r(63),a='startsWith',s=''[a];n(n.P+n.F*r(64)(a),'String',{startsWith:function(e){var t=l(this,e,a),r=o(d(1<arguments.length?arguments[1]:void 0,t.length)),n=e+'';return t.slice(r,r+n.length)===n}})},function(e,t,r){'use strict';var n=r(0),o=r(6),l=r(63),a='endsWith',s=''[a];n(n.P+n.F*r(64)(a),'String',{endsWith:function(e){var t=l(this,e,a),r=1<arguments.length?arguments[1]:void 0,n=o(t.length),s=r===void 0?n:d(o(r),n),i=e+'';return t.slice(s-i.length,s)===i}})},function(e,t,r){'use strict';var n=r(0),o=r(63),l='includes';n(n.P+n.F*r(64)(l),'String',{includes:function(e){return!!~o(this,e,l).indexOf(e,1<arguments.length?arguments[1]:void 0)}})},function(e,t,r){r(8)&&'g'!=/./g.flags&&r(7).f(RegExp.prototype,'flags',{configurable:!0,get:r(93)})},function(e,t,r){'use strict';var o=r(2),l=r(6),a=r(65),s=r(50);r(51)('match',1,function(e,t,r,i){return[function(r){var n=e(this),o=r==void 0?void 0:r[t];return o===void 0?new RegExp(r)[t](n+''):o.call(r,n)},function(e){var t=i(r,e,this);if(t.done)return t.value;var c=o(e),p=this+'';if(!c.global)return s(c,p);var d=c.unicode;c.lastIndex=0;for(var u,g=[],h=0;null!==(u=s(c,p));){var n=u[0]+'';g[h]=n,''===n&&(c.lastIndex=a(p,l(c.lastIndex),d)),h++}return 0==h?null:g}]})},function(e,t,r){'use strict';var n=r(66);r(0)({target:'RegExp',proto:!0,forced:n!==/./.exec},{exec:n})},function(e,t,r){'use strict';var n=r(2),o=r(12),l=r(6),a=r(18),s=r(65),c=r(50),u=/\\$([$&`']|\\d\\d?|<[^>]*>)/g,g=/\\$([$&`']|\\d\\d?)/g,h=function(e){return e===void 0?e:e+''};r(51)('replace',2,function(e,t,r,y){function f(e,t,l,a,s,n){var i=l+e.length,c=a.length,d=g;return void 0!==s&&(s=o(s),d=u),r.call(n,d,function(r,o){var d;switch(o.charAt(0)){case'$':return'$';case'&':return e;case'`':return t.slice(0,l);case'\\'':return t.slice(i);case'<':d=s[o.slice(1,-1)];break;default:var u=+o;if(0==u)return r;if(u>c){var n=p(u/10);return 0===n?r:n<=c?void 0===a[n-1]?o.charAt(1):a[n-1]+o.charAt(1):r}d=a[u-1];}return void 0===d?'':d})}return[function(n,o){var l=e(this),a=n==void 0?void 0:n[t];return a===void 0?r.call(l+'',n,o):a.call(n,l,o)},function(e,t){var o=y(r,e,this,t);if(o.done)return o.value;var p=n(e),u=this+'',g='function'==typeof t;g||(t=t+'');var m=p.global;if(m){var E=p.unicode;p.lastIndex=0}for(var _,x=[];(_=c(p,u),null!==_)&&!(x.push(_),!m);){var S=_[0]+'';''===S&&(p.lastIndex=s(u,l(p.lastIndex),E))}for(var T='',b=0,P=0;P<x.length;P++){_=x[P];for(var O=_[0]+'',v=i(d(a(_.index),u.length),0),I=[],A=1;A<_.length;A++)I.push(h(_[A]));var R=_.groups;if(g){var k=[O].concat(I,v,u);R!==void 0&&k.push(R);var L=t.apply(void 0,k)+''}else L=f(O,u,v,I,R,t);v>=b&&(T+=u.slice(b,v)+L,b=v+O.length)}return T+u.slice(b)}]})},function(e,t,r){'use strict';var n=r(92),o=r(2),l=r(42),a=r(65),s=r(6),c=r(50),i=r(66),p=r(5),u=[].push,g='split',h='length',y='lastIndex',f=4294967295,m=!p(function(){RegExp(f,'y')});r(51)('split',2,function(e,t,r,E){var _;return _='c'=='abbc'[g](/(b)*/)[1]||4!='test'[g](/(?:)/,-1)[h]||2!='ab'[g](/(?:ab)*/)[h]||4!='.'[g](/(.?)(.?)/)[h]||1<'.'[g](/()()/)[h]||''[g](/.?/)[h]?function(e,t){var o=this+'';if(void 0===e&&0===t)return[];if(!n(e))return r.call(o,e,t);for(var l,a,s,c=[],p=(e.ignoreCase?'i':'')+(e.multiline?'m':'')+(e.unicode?'u':'')+(e.sticky?'y':''),d=0,g=void 0===t?f:t>>>0,m=new RegExp(e.source,p+'g');(l=i.call(m,o))&&(a=m[y],!(a>d&&(c.push(o.slice(d,l.index)),1<l[h]&&l.index<o[h]&&u.apply(c,l.slice(1)),s=l[0][h],d=a,c[h]>=g)));)m[y]===l.index&&m[y]++;return d===o[h]?(s||!m.test(''))&&c.push(''):c.push(o.slice(d)),c[h]>g?c.slice(0,g):c}:'0'[g](void 0,0)[h]?function(e,t){return void 0===e&&0===t?[]:r.call(this,e,t)}:r,[function(r,n){var o=e(this),l=void 0==r?void 0:r[t];return void 0===l?_.call(o+'',r,n):l.call(r,o,n)},function(t,n){var u=E(_,t,this,n,_!==r);if(u.done)return u.value;var g=o(t),h=this+'',y=l(g,RegExp),x=g.unicode,S=(g.ignoreCase?'i':'')+(g.multiline?'m':'')+(g.unicode?'u':'')+(m?'y':'g'),T=new y(m?g:'^(?:'+g.source+')',S),b=void 0===n?f:n>>>0;if(0==b)return[];if(0===h.length)return null===c(T,h)?[h]:[];for(var P=0,p=0,O=[];p<h.length;){T.lastIndex=m?p:0;var v,e=c(T,m?h:h.slice(p));if(null===e||(v=d(s(T.lastIndex+(m?0:p)),h.length))===P)p=a(h,p,x);else{if(O.push(h.slice(P,p)),O.length===b)return O;for(var I=1;I<=e.length-1;I++)if(O.push(e[I]),O.length===b)return O;p=P=v}}return O.push(h.slice(P)),O}]})},function(e,t,r){'use strict';var n=r(2),o=r(89),l=r(50);r(51)('search',1,function(e,t,r,a){return[function(r){var n=e(this),o=r==void 0?void 0:r[t];return o===void 0?new RegExp(r)[t](n+''):o.call(r,n)},function(e){var t=a(r,e,this);if(t.done)return t.value;var s=n(e),i=this+'',c=s.lastIndex;o(c,0)||(s.lastIndex=0);var p=l(s,i);return o(s.lastIndex,c)||(s.lastIndex=c),null===p?-1:p.index}]})},function(e,t,r){'use strict';var n=r(14),o=r(0),l=r(12),a=r(80),s=r(59),i=r(6),c=r(67),p=r(60);o(o.S+o.F*!r(45)(function(e){Array.from(e)}),'Array',{from:function(e){var t,r,o,d,u=l(e),g='function'==typeof this?this:Array,h=arguments.length,y=1<h?arguments[1]:void 0,f=void 0!==y,m=0,E=p(u);if(f&&(y=n(y,2<h?arguments[2]:void 0,2)),void 0!=E&&!(g==Array&&s(E)))for(d=E.call(u),r=new g;!(o=d.next()).done;m++)c(r,m,f?a(d,y,[o.value,m],!0):o.value);else for(t=i(u.length),r=new g(t);t>m;m++)c(r,m,f?y(u[m],m):u[m]);return r.length=m,r}})},function(e,t,r){'use strict';var n=r(0),o=r(67);n(n.S+n.F*r(5)(function(){function e(){}return!(Array.of.call(e)instanceof e)}),'Array',{of:function(){for(var e=0,t=arguments.length,r=new('function'==typeof this?this:Array)(t);t>e;)o(r,e,arguments[e++]);return r.length=t,r}})},function(e,t,r){var n=r(0);n(n.P,'Array',{copyWithin:r(78)}),r(35)('copyWithin')},function(e,t,r){'use strict';var n=r(0),o=r(39)(5),l='find',a=!0;l in[]&&[,][l](function(){a=!1}),n(n.P+n.F*a,'Array',{find:function(e){return o(this,e,1<arguments.length?arguments[1]:void 0)}}),r(35)(l)},function(e,t,r){'use strict';var n=r(0),o=r(39)(6),l='findIndex',a=!0;l in[]&&[,][l](function(){a=!1}),n(n.P+n.F*a,'Array',{findIndex:function(e){return o(this,e,1<arguments.length?arguments[1]:void 0)}}),r(35)(l)},function(e,t,r){var n=r(0);n(n.P,'Array',{fill:r(58)}),r(35)('fill')},function(e,t,r){var n=r(0),o=r(3).isFinite;n(n.S,'Number',{isFinite:function(e){return'number'==typeof e&&o(e)}})},function(e,t,r){var n=r(0);n(n.S,'Number',{isInteger:r(94)})},function(e,t,r){var n=r(0),o=r(94);n(n.S,'Number',{isSafeInteger:function(e){return o(e)&&9007199254740991>=l(e)}})},function(e,t,r){var n=r(0);n(n.S,'Number',{isNaN:function(e){return e!=e}})},function(e,t,r){var n=r(0);n(n.S,'Number',{EPSILON:2.220446049250313e-16})},function(e,t,r){var n=r(0);n(n.S,'Number',{MIN_SAFE_INTEGER:-9007199254740991})},function(e,t,r){var n=r(0);n(n.S,'Number',{MAX_SAFE_INTEGER:9007199254740991})},function(t,o,l){var a=l(0),s=l(95),i=e,c=Math.acosh;a(a.S+a.F*!(c&&710==p(c(Number.MAX_VALUE))&&c(Infinity)==Infinity),'Math',{acosh:function(e){return 1>(e=+e)?NaN:94906265.62425156<e?n(e)+r:s(e-1+i(e-1)*i(e+1))}})},function(t,r,o){function l(t){return isFinite(t=+t)&&0!=t?0>t?-l(-t):n(t+e(t*t+1)):t}var a=o(0),s=Math.asinh;a(a.S+a.F*!(s&&0<1/s(0)),'Math',{asinh:l})},function(e,t,r){var o=r(0),l=Math.atanh;o(o.S+o.F*!(l&&0>1/l(-0)),'Math',{atanh:function(e){return 0==(e=+e)?e:n((1+e)/(1-e))/2}})},function(e,t,r){var n=r(0),a=r(68);n(n.S,'Math',{cbrt:function(e){return a(e=+e)*o(l(e),1/3)}})},function(e,t,r){var o=r(0);o(o.S,'Math',{clz32:function(e){return(e>>>=0)?31-p(n(e+0.5)*Math.LOG2E):32}})},function(e,t,r){var n=r(0),o=a;n(n.S,'Math',{cosh:function(e){return(o(e=+e)+o(-e))/2}})},function(e,t,r){var n=r(0),o=r(69);n(n.S+n.F*(o!=s),'Math',{expm1:o})},function(e,t,r){var n=r(0);n(n.S,'Math',{fround:r(189)})},function(e,t,r){var n=r(68),a=o,s=a(2,-52),i=a(2,-23),c=a(2,127)*(2-i),p=a(2,-126),d=function(e){return e+1/s-1/s};e.exports=Math.fround||function(e){var t,r,o=l(e),a=n(e);return o<p?a*d(o/p/i)*p*i:(t=(1+i/s)*o,r=t-(t-o),r>c||r!=r?a*Infinity:a*r)}},function(t,r,n){var o=n(0);o(o.S,'Math',{hypot:function(){for(var t,r,n=0,o=0,a=arguments.length,s=0;o<a;)t=l(arguments[o++]),s<t?(r=s/t,n=n*r*r+1,s=t):0<t?(r=t/s,n+=r*r):n+=t;return s==Infinity?Infinity:s*e(n)}})},function(e,t,r){var n=r(0),o=Math.imul;n(n.S+n.F*r(5)(function(){return-5!=o(4294967295,5)||2!=o.length}),'Math',{imul:function(e,t){var r=65535,n=+e,o=+t,l=r&n,a=r&o;return 0|l*a+((r&n>>>16)*a+l*(r&o>>>16)<<16>>>0)}})},function(e,t,r){var n=r(0);n(n.S,'Math',{log1p:r(95)})},function(e,t,r){var o=r(0);o(o.S,'Math',{log10:function(e){return n(e)*Math.LOG10E}})},function(e,t,o){var l=o(0);l(l.S,'Math',{log2:function(e){return n(e)/r}})},function(e,t,r){var n=r(0);n(n.S,'Math',{sign:r(68)})},function(e,t,r){var n=r(0),o=r(69),s=a;n(n.S+n.F*r(5)(function(){return!0}),'Math',{sinh:function(e){return 1>l(e=+e)?(o(e)-o(-e))/2:(s(e-1)-s(-e-1))*(Math.E/2)}})},function(e,t,r){var n=r(0),o=r(69),l=a;n(n.S,'Math',{tanh:function(e){var t=o(e=+e),r=o(-e);return t==Infinity?1:r==Infinity?-1:(t-r)/(l(e)+l(-e))}})},function(e,t,r){var n=r(0);n(n.S,'Math',{trunc:function(e){return(0<e?p:c)(e)}})},function(e,t,r){'use strict';var n=r(0),o=r(55)(!0);n(n.P,'Array',{includes:function(e){return o(this,e,1<arguments.length?arguments[1]:void 0)}}),r(35)('includes')},function(e,t,r){var n=r(0),o=r(96)(!1);n(n.S,'Object',{values:function(e){return o(e)}})},function(e,t,r){var n=r(0),o=r(96)(!0);n(n.S,'Object',{entries:function(e){return o(e)}})},function(e,t,r){var n=r(0),o=r(85),l=r(11),a=r(16),s=r(67);n(n.S,'Object',{getOwnPropertyDescriptors:function(e){for(var t,r,n=l(e),c=a.f,p=o(n),d={},u=0;p.length>u;)r=c(n,t=p[u++]),void 0!==r&&s(d,t,r);return d}})},function(e,t,r){'use strict';var n=r(0),o=r(97),l=r(49),a=/Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(l);n(n.P+n.F*a,'String',{padStart:function(e){return o(this,e,1<arguments.length?arguments[1]:void 0,!0)}})},function(e,t,r){'use strict';var n=r(0),o=r(97),l=r(49),a=/Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(l);n(n.P+n.F*a,'String',{padEnd:function(e){return o(this,e,1<arguments.length?arguments[1]:void 0,!1)}})},function(e,t,r){var n=r(3),o=r(0),l=r(49),a=[].slice,s=/MSIE .\\./.test(l),i=function(e){return function(t,r){var n=2<arguments.length,o=!!n&&a.call(arguments,2);return e(n?function(){('function'==typeof t?t:Function(t)).apply(this,o)}:t,r)}};o(o.G+o.B+o.F*s,{setTimeout:i(n.setTimeout),setInterval:i(n.setInterval)})},function(e,t,r){var n=r(0),o=r(62);n(n.G+n.B,{setImmediate:o.set,clearImmediate:o.clear})},function(e,t,r){for(var n=r(61),o=r(26),l=r(17),a=r(3),s=r(9),c=r(33),p=r(4),d=p('iterator'),u=p('toStringTag'),g=c.Array,h={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},y=o(h),f=0;f<y.length;f++){var i,m=y[f],E=h[m],_=a[m],x=_&&_.prototype;if(x&&(x[d]||s(x,d,g),x[u]||s(x,u,m),c[m]=g,E))for(i in n)x[i]||l(x,i,n[i],!0)}},function(e){!function(t){'use strict';function r(e,t,r,n){var l=t&&t.prototype instanceof o?t:o,a=Object.create(l.prototype),s=new g(n||[]);return a._invoke=c(e,r,s),a}function n(e,t,r){try{return{type:'normal',arg:e.call(t,r)}}catch(e){return{type:'throw',arg:e}}}function o(){}function l(){}function a(){}function s(e){['next','throw','return'].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function i(e){function t(r,o,l,a){var s=n(e[r],e,o);if('throw'===s.type)a(s.arg);else{var i=s.arg,c=i.value;return c&&'object'==typeof c&&m.call(c,'__await')?Promise.resolve(c.__await).then(function(e){t('next',e,l,a)},function(e){t('throw',e,l,a)}):Promise.resolve(c).then(function(e){i.value=e,l(i)},a)}}var r;this._invoke=function(e,n){function o(){return new Promise(function(r,o){t(e,n,r,o)})}return r=r?r.then(o,o):o()}}function c(e,t,r){var o=P;return function(l,a){if(o==v)throw new Error('Generator is already running');if(o==I){if('throw'===l)throw a;return y()}for(r.method=l,r.arg=a;;){var s=r.delegate;if(s){var i=p(s,r);if(i){if(i===A)continue;return i}}if('next'===r.method)r.sent=r._sent=r.arg;else if('throw'===r.method){if(o==P)throw o=I,r.arg;r.dispatchException(r.arg)}else'return'===r.method&&r.abrupt('return',r.arg);o=v;var c=n(e,t,r);if('normal'===c.type){if(o=r.done?I:O,c.arg===A)continue;return{value:c.arg,done:r.done}}'throw'===c.type&&(o=I,r.method='throw',r.arg=c.arg)}}}function p(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,'throw'===t.method){if(e.iterator.return&&(t.method='return',t.arg=void 0,p(e,t),'throw'===t.method))return A;t.method='throw',t.arg=new TypeError('The iterator does not provide a \\'throw\\' method')}return A}var o=n(r,e.iterator,t.arg);if('throw'===o.type)return t.method='throw',t.arg=o.arg,t.delegate=null,A;var l=o.arg;if(!l)return t.method='throw',t.arg=new TypeError('iterator result is not an object'),t.delegate=null,A;if(l.done)t[e.resultName]=l.value,t.next=e.nextLoc,'return'!==t.method&&(t.method='next',t.arg=void 0);else return l;return t.delegate=null,A}function d(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function u(e){var t=e.completion||{};t.type='normal',delete t.arg,e.completion=t}function g(e){this.tryEntries=[{tryLoc:'root'}],e.forEach(d,this),this.reset(!0)}function h(e){if(e){var t=e[_];if(t)return t.call(e);if('function'==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,n=function t(){for(;++r<e.length;)if(m.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return n.next=n}}return{next:y}}function y(){return{value:void 0,done:!0}}var f=Object.prototype,m=f.hasOwnProperty,E='function'==typeof Symbol?Symbol:{},_=E.iterator||'@@iterator',x=E.asyncIterator||'@@asyncIterator',S=E.toStringTag||'@@toStringTag',T='object'==typeof e,b=t.regeneratorRuntime;if(b)return void(T&&(e.exports=b));b=t.regeneratorRuntime=T?e.exports:{},b.wrap=r;var P='suspendedStart',O='suspendedYield',v='executing',I='completed',A={},R={};R[_]=function(){return this};var k=Object.getPrototypeOf,L=k&&k(k(h([])));L&&L!==f&&m.call(L,_)&&(R=L);var F=a.prototype=o.prototype=Object.create(R);l.prototype=F.constructor=a,a.constructor=l,a[S]=l.displayName='GeneratorFunction',b.isGeneratorFunction=function(e){var t='function'==typeof e&&e.constructor;return!!t&&(t===l||'GeneratorFunction'===(t.displayName||t.name))},b.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,a):(e.__proto__=a,!(S in e)&&(e[S]='GeneratorFunction')),e.prototype=Object.create(F),e},b.awrap=function(e){return{__await:e}},s(i.prototype),i.prototype[x]=function(){return this},b.AsyncIterator=i,b.async=function(e,t,n,o){var l=new i(r(e,t,n,o));return b.isGeneratorFunction(t)?l:l.next().then(function(e){return e.done?e.value:l.next()})},s(F),F[S]='Generator',F[_]=function(){return this},F.toString=function(){return'[object Generator]'},b.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},b.values=h,g.prototype={constructor:g,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method='next',this.arg=void 0,this.tryEntries.forEach(u),!e)for(var t in this)'t'===t.charAt(0)&&m.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0],t=e.completion;if('throw'===t.type)throw t.arg;return this.rval},dispatchException:function(e){function t(t,n){return l.type='throw',l.arg=e,r.next=t,n&&(r.method='next',r.arg=void 0),!!n}if(this.done)throw e;for(var r=this,n=this.tryEntries.length-1;0<=n;--n){var o=this.tryEntries[n],l=o.completion;if('root'===o.tryLoc)return t('end');if(o.tryLoc<=this.prev){var a=m.call(o,'catchLoc'),s=m.call(o,'finallyLoc');if(a&&s){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(a){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);}else if(!s)throw new Error('try statement without catch or finally');else if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}},abrupt:function(e,t){for(var r,n=this.tryEntries.length-1;0<=n;--n)if(r=this.tryEntries[n],r.tryLoc<=this.prev&&m.call(r,'finallyLoc')&&this.prev<r.finallyLoc){var o=r;break}o&&('break'===e||'continue'===e)&&o.tryLoc<=t&&t<=o.finallyLoc&&(o=null);var l=o?o.completion:{};return l.type=e,l.arg=t,o?(this.method='next',this.next=o.finallyLoc,A):this.complete(l)},complete:function(e,t){if('throw'===e.type)throw e.arg;return'break'===e.type||'continue'===e.type?this.next=e.arg:'return'===e.type?(this.rval=this.arg=e.arg,this.method='return',this.next='end'):'normal'===e.type&&t&&(this.next=t),A},finish:function(e){for(var t,r=this.tryEntries.length-1;0<=r;--r)if(t=this.tryEntries[r],t.finallyLoc===e)return this.complete(t.completion,t.afterLoc),u(t),A},catch:function(e){for(var t,r=this.tryEntries.length-1;0<=r;--r)if(t=this.tryEntries[r],t.tryLoc===e){var n=t.completion;if('throw'===n.type){var o=n.arg;u(t)}return o}throw new Error('illegal catch attempt')},delegateYield:function(e,t,r){return this.delegate={iterator:h(e),resultName:t,nextLoc:r},'next'===this.method&&(this.arg=void 0),A}}}(function(){return this}()||Function('return this')())},function(e,t,r){'use strict';function n(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')}Object.defineProperty(t,'__esModule',{value:!0});var o=function(){function e(e,t){for(var r,n=0;n<t.length;n++)r=t[n],r.enumerable=r.enumerable||!1,r.configurable=!0,'value'in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),l=r(210),a=function(e){return e&&e.__esModule?e:{default:e}}(l),s=r(98),i=function(){function e(t){var r=t.send,o=t.file,l=t.reqId;n(this,e),this.send=r,this.file=o,this.reqId=l;var s=o.buffer;this.checksum=(0,a.default)(Array.from(s)),this.size=s.length}return o(e,[{key:'requestUpload',value:function(){var e=this.file,t=e.documentType,r=e.documentFormat,n=e.documentId,o=e.expirationDate,l=e.lifetimeValid,a=e.pageType,s=e.buffer,i=e.proof_of_ownership,c=e.document_issuing_country,p=Object.assign(this.file.passthrough||{},{document_upload:!0}),d={req_id:this.reqId,passthrough:p,document_upload:1,document_type:t,document_format:r.toUpperCase(),expiration_date:o,document_id:n,file_size:s.length,expected_checksum:this.checksum};a&&(d.page_type=a),l&&(d.lifetime_valid=l),i&&(d.proof_of_ownership=i),c&&(d.document_issuing_country=c),this.send(JSON.stringify(d))}},{key:'handleMessage',value:function(e){var t=e.error,r=e.document_upload,n=e.passthrough;if(t)return{warning:t.code,message:t.message,passthrough:n};var o=r.checksum,l=r.size,a=r.upload_id,i=r.call_type;if(!o)return void this.startBinaryUpload(Object.assign({},this.file,{uploadId:a,callType:i}));if(l!==this.size)throw(0,s.createError)('SizeMismatch','File size does not match',n);if(o!==this.checksum)throw(0,s.createError)('ChecksumMismatch','Checksum does not match',n);return{document_upload:r,passthrough:n}}},{key:'startBinaryUpload',value:function(e){for(var t=this,r=(0,s.addMetadata)((0,s.generateChunks)(e.buffer,e),e),n=function(e){return t.send(e)},o=0;o<r.length;o++)n(r[o],o,r)}}]),e}();t.default=i},function(e,t,r){(function(){var t=r(211),n=r(99).utf8,o=r(212),s=r(99).bin,l=function(e,r){e.constructor==String?r&&'binary'===r.encoding?e=s.stringToBytes(e):e=n.stringToBytes(e):o(e)?e=Array.prototype.slice.call(e,0):!Array.isArray(e)&&(e=e.toString());for(var p=t.bytesToWords(e),u=8*e.length,g=1732584193,a=-271733879,h=-1732584194,c=271733878,d=0;d<p.length;d++)p[d]=16711935&(p[d]<<8|p[d]>>>24)|4278255360&(p[d]<<24|p[d]>>>8);p[u>>>5]|=128<<u%32,p[(u+64>>>9<<4)+14]=u;for(var i=l._ff,y=l._gg,f=l._hh,m=l._ii,d=0;d<p.length;d+=16){var E=g,_=a,x=h,S=c;g=i(g,a,h,c,p[d+0],7,-680876936),c=i(c,g,a,h,p[d+1],12,-389564586),h=i(h,c,g,a,p[d+2],17,606105819),a=i(a,h,c,g,p[d+3],22,-1044525330),g=i(g,a,h,c,p[d+4],7,-176418897),c=i(c,g,a,h,p[d+5],12,1200080426),h=i(h,c,g,a,p[d+6],17,-1473231341),a=i(a,h,c,g,p[d+7],22,-45705983),g=i(g,a,h,c,p[d+8],7,1770035416),c=i(c,g,a,h,p[d+9],12,-1958414417),h=i(h,c,g,a,p[d+10],17,-42063),a=i(a,h,c,g,p[d+11],22,-1990404162),g=i(g,a,h,c,p[d+12],7,1804603682),c=i(c,g,a,h,p[d+13],12,-40341101),h=i(h,c,g,a,p[d+14],17,-1502002290),a=i(a,h,c,g,p[d+15],22,1236535329),g=y(g,a,h,c,p[d+1],5,-165796510),c=y(c,g,a,h,p[d+6],9,-1069501632),h=y(h,c,g,a,p[d+11],14,643717713),a=y(a,h,c,g,p[d+0],20,-373897302),g=y(g,a,h,c,p[d+5],5,-701558691),c=y(c,g,a,h,p[d+10],9,38016083),h=y(h,c,g,a,p[d+15],14,-660478335),a=y(a,h,c,g,p[d+4],20,-405537848),g=y(g,a,h,c,p[d+9],5,568446438),c=y(c,g,a,h,p[d+14],9,-1019803690),h=y(h,c,g,a,p[d+3],14,-187363961),a=y(a,h,c,g,p[d+8],20,1163531501),g=y(g,a,h,c,p[d+13],5,-1444681467),c=y(c,g,a,h,p[d+2],9,-51403784),h=y(h,c,g,a,p[d+7],14,1735328473),a=y(a,h,c,g,p[d+12],20,-1926607734),g=f(g,a,h,c,p[d+5],4,-378558),c=f(c,g,a,h,p[d+8],11,-2022574463),h=f(h,c,g,a,p[d+11],16,1839030562),a=f(a,h,c,g,p[d+14],23,-35309556),g=f(g,a,h,c,p[d+1],4,-1530992060),c=f(c,g,a,h,p[d+4],11,1272893353),h=f(h,c,g,a,p[d+7],16,-155497632),a=f(a,h,c,g,p[d+10],23,-1094730640),g=f(g,a,h,c,p[d+13],4,681279174),c=f(c,g,a,h,p[d+0],11,-358537222),h=f(h,c,g,a,p[d+3],16,-722521979),a=f(a,h,c,g,p[d+6],23,76029189),g=f(g,a,h,c,p[d+9],4,-640364487),c=f(c,g,a,h,p[d+12],11,-421815835),h=f(h,c,g,a,p[d+15],16,530742520),a=f(a,h,c,g,p[d+2],23,-995338651),g=m(g,a,h,c,p[d+0],6,-198630844),c=m(c,g,a,h,p[d+7],10,1126891415),h=m(h,c,g,a,p[d+14],15,-1416354905),a=m(a,h,c,g,p[d+5],21,-57434055),g=m(g,a,h,c,p[d+12],6,1700485571),c=m(c,g,a,h,p[d+3],10,-1894986606),h=m(h,c,g,a,p[d+10],15,-1051523),a=m(a,h,c,g,p[d+1],21,-2054922799),g=m(g,a,h,c,p[d+8],6,1873313359),c=m(c,g,a,h,p[d+15],10,-30611744),h=m(h,c,g,a,p[d+6],15,-1560198380),a=m(a,h,c,g,p[d+13],21,1309151649),g=m(g,a,h,c,p[d+4],6,-145523070),c=m(c,g,a,h,p[d+11],10,-1120210379),h=m(h,c,g,a,p[d+2],15,718787259),a=m(a,h,c,g,p[d+9],21,-343485551),g=g+E>>>0,a=a+_>>>0,h=h+x>>>0,c=c+S>>>0}return t.endian([g,a,h,c])};l._ff=function(e,r,o,l,a,i,s){var t=e+(r&o|~r&l)+(a>>>0)+s;return(t<<i|t>>>32-i)+r},l._gg=function(e,r,o,l,a,i,s){var t=e+(r&l|o&~l)+(a>>>0)+s;return(t<<i|t>>>32-i)+r},l._hh=function(e,r,o,l,a,i,s){var t=e+(r^o^l)+(a>>>0)+s;return(t<<i|t>>>32-i)+r},l._ii=function(e,r,o,l,a,i,s){var t=e+(o^(r|~l))+(a>>>0)+s;return(t<<i|t>>>32-i)+r},l._blocksize=16,l._digestsize=16,e.exports=function(e,r){if(e===void 0||null===e)throw new Error('Illegal argument '+e);var n=t.wordsToBytes(l(e,r));return r&&r.asBytes?n:r&&r.asString?s.bytesToString(n):t.bytesToHex(n)}})()},function(e){(function(){var t='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',r={rotl:function(e,t){return e<<t|e>>>32-t},rotr:function(e,t){return e<<32-t|e>>>t},endian:function(e){if(e.constructor==Number)return 16711935&r.rotl(e,8)|4278255360&r.rotl(e,24);for(var t=0;t<e.length;t++)e[t]=r.endian(e[t]);return e},randomBytes:function(e){for(var t=[];0<e;e--)t.push(p(256*Math.random()));return t},bytesToWords:function(e){for(var t=[],r=0,n=0;r<e.length;r++,n+=8)t[n>>>5]|=e[r]<<24-n%32;return t},wordsToBytes:function(e){for(var t=[],r=0;r<32*e.length;r+=8)t.push(255&e[r>>>5]>>>24-r%32);return t},bytesToHex:function(e){for(var t=[],r=0;r<e.length;r++)t.push((e[r]>>>4).toString(16)),t.push((15&e[r]).toString(16));return t.join('')},hexToBytes:function(e){for(var t=[],r=0;r<e.length;r+=2)t.push(parseInt(e.substr(r,2),16));return t},bytesToBase64:function(e){for(var r,n=[],o=0;o<e.length;o+=3){r=e[o]<<16|e[o+1]<<8|e[o+2];for(var l=0;4>l;l++)8*o+6*l<=8*e.length?n.push(t.charAt(63&r>>>6*(3-l))):n.push('=')}return n.join('')},base64ToBytes:function(e){e=e.replace(/[^A-Z0-9+\\/]/ig,'');for(var r=[],n=0,l=0;n<e.length;l=++n%4)0!=l&&r.push((t.indexOf(e.charAt(n-1))&o(2,-2*l+8)-1)<<2*l|t.indexOf(e.charAt(n))>>>6-2*l);return r}};e.exports=r})()},function(e){function t(e){return!!e.constructor&&'function'==typeof e.constructor.isBuffer&&e.constructor.isBuffer(e)}function r(e){return'function'==typeof e.readFloatLE&&'function'==typeof e.slice&&t(e.slice(0,0))}e.exports=function(e){return null!=e&&(t(e)||r(e)||!!e._isBuffer)}}])['default']});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@binary-com/binary-document-uploader/DocumentUploader.js\n");

/***/ }),

/***/ "../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js":
/***/ (function(module) {

eval("!function(e,t){ true?module.exports=t():0}(\"undefined\"!=typeof self?self:this,(function(){return(()=>{var e={757:(e,t,r)=>{e.exports=r(666)},266:(e,t,r)=>{var n=\"undefined\"!=typeof JSON?JSON:r(418);e.exports=function(e,t){t||(t={}),\"function\"==typeof t&&(t={cmp:t});var r=t.space||\"\";\"number\"==typeof r&&(r=Array(r+1).join(\" \"));var o,u=\"boolean\"==typeof t.cycles&&t.cycles,c=t.replacer||function(e,t){return t},a=t.cmp&&(o=t.cmp,function(e){return function(t,r){var n={key:t,value:e[t]},i={key:r,value:e[r]};return o(n,i)}}),p=[];return function e(t,o,d,h){var y=r?\"\\n\"+new Array(h+1).join(r):\"\",l=r?\": \":\":\";if(d&&d.toJSON&&\"function\"==typeof d.toJSON&&(d=d.toJSON()),void 0!==(d=c.call(t,o,d))){if(\"object\"!=typeof d||null===d)return n.stringify(d);if(i(d)){for(var g=[],f=0;f<d.length;f++){var _=e(d,f,d[f],h+1)||n.stringify(null);g.push(y+r+_)}return\"[\"+g.join(\",\")+y+\"]\"}if(-1!==p.indexOf(d)){if(u)return n.stringify(\"__cycle__\");throw new TypeError(\"Converting circular structure to JSON\")}p.push(d);var m=s(d).sort(a&&a(d));for(g=[],f=0;f<m.length;f++){var v=e(d,o=m[f],d[o],h+1);if(v){var q=n.stringify(o)+l+v;g.push(y+r+q)}}return p.splice(p.indexOf(d),1),\"{\"+g.join(\",\")+y+\"}\"}}({\"\":e},\"\",e,0)};var i=Array.isArray||function(e){return\"[object Array]\"==={}.toString.call(e)},s=Object.keys||function(e){var t=Object.prototype.hasOwnProperty||function(){return!0},r=[];for(var n in e)t.call(e,n)&&r.push(n);return r}},418:(e,t,r)=>{t.parse=r(396),t.stringify=r(177)},396:e=>{var t,r,n,i,s={'\"':'\"',\"\\\\\":\"\\\\\",\"/\":\"/\",b:\"\\b\",f:\"\\f\",n:\"\\n\",r:\"\\r\",t:\"\\t\"},o=function(e){throw{name:\"SyntaxError\",message:e,at:t,text:n}},u=function(e){return e&&e!==r&&o(\"Expected '\"+e+\"' instead of '\"+r+\"'\"),r=n.charAt(t),t+=1,r},c=function(){var e,t=\"\";for(\"-\"===r&&(t=\"-\",u(\"-\"));r>=\"0\"&&r<=\"9\";)t+=r,u();if(\".\"===r)for(t+=\".\";u()&&r>=\"0\"&&r<=\"9\";)t+=r;if(\"e\"===r||\"E\"===r)for(t+=r,u(),\"-\"!==r&&\"+\"!==r||(t+=r,u());r>=\"0\"&&r<=\"9\";)t+=r,u();if(e=+t,isFinite(e))return e;o(\"Bad number\")},a=function(){var e,t,n,i=\"\";if('\"'===r)for(;u();){if('\"'===r)return u(),i;if(\"\\\\\"===r)if(u(),\"u\"===r){for(n=0,t=0;t<4&&(e=parseInt(u(),16),isFinite(e));t+=1)n=16*n+e;i+=String.fromCharCode(n)}else{if(\"string\"!=typeof s[r])break;i+=s[r]}else i+=r}o(\"Bad string\")},p=function(){for(;r&&r<=\" \";)u()};i=function(){switch(p(),r){case\"{\":return function(){var e,t={};if(\"{\"===r){if(u(\"{\"),p(),\"}\"===r)return u(\"}\"),t;for(;r;){if(e=a(),p(),u(\":\"),Object.hasOwnProperty.call(t,e)&&o('Duplicate key \"'+e+'\"'),t[e]=i(),p(),\"}\"===r)return u(\"}\"),t;u(\",\"),p()}}o(\"Bad object\")}();case\"[\":return function(){var e=[];if(\"[\"===r){if(u(\"[\"),p(),\"]\"===r)return u(\"]\"),e;for(;r;){if(e.push(i()),p(),\"]\"===r)return u(\"]\"),e;u(\",\"),p()}}o(\"Bad array\")}();case'\"':return a();case\"-\":return c();default:return r>=\"0\"&&r<=\"9\"?c():function(){switch(r){case\"t\":return u(\"t\"),u(\"r\"),u(\"u\"),u(\"e\"),!0;case\"f\":return u(\"f\"),u(\"a\"),u(\"l\"),u(\"s\"),u(\"e\"),!1;case\"n\":return u(\"n\"),u(\"u\"),u(\"l\"),u(\"l\"),null}o(\"Unexpected '\"+r+\"'\")}()}},e.exports=function(e,s){var u;return n=e,t=0,r=\" \",u=i(),p(),r&&o(\"Syntax error\"),\"function\"==typeof s?function e(t,r){var n,i,o=t[r];if(o&&\"object\"==typeof o)for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(void 0!==(i=e(o,n))?o[n]=i:delete o[n]);return s.call(t,r,o)}({\"\":u},\"\"):u}},177:e=>{var t,r,n,i=/[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,s={\"\\b\":\"\\\\b\",\"\\t\":\"\\\\t\",\"\\n\":\"\\\\n\",\"\\f\":\"\\\\f\",\"\\r\":\"\\\\r\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\"};function o(e){return i.lastIndex=0,i.test(e)?'\"'+e.replace(i,(function(e){var t=s[e];return\"string\"==typeof t?t:\"\\\\u\"+(\"0000\"+e.charCodeAt(0).toString(16)).slice(-4)}))+'\"':'\"'+e+'\"'}function u(e,i){var s,c,a,p,d,h=t,y=i[e];switch(y&&\"object\"==typeof y&&\"function\"==typeof y.toJSON&&(y=y.toJSON(e)),\"function\"==typeof n&&(y=n.call(i,e,y)),typeof y){case\"string\":return o(y);case\"number\":return isFinite(y)?String(y):\"null\";case\"boolean\":case\"null\":return String(y);case\"object\":if(!y)return\"null\";if(t+=r,d=[],\"[object Array]\"===Object.prototype.toString.apply(y)){for(p=y.length,s=0;s<p;s+=1)d[s]=u(s,y)||\"null\";return a=0===d.length?\"[]\":t?\"[\\n\"+t+d.join(\",\\n\"+t)+\"\\n\"+h+\"]\":\"[\"+d.join(\",\")+\"]\",t=h,a}if(n&&\"object\"==typeof n)for(p=n.length,s=0;s<p;s+=1)\"string\"==typeof(c=n[s])&&(a=u(c,y))&&d.push(o(c)+(t?\": \":\":\")+a);else for(c in y)Object.prototype.hasOwnProperty.call(y,c)&&(a=u(c,y))&&d.push(o(c)+(t?\": \":\":\")+a);return a=0===d.length?\"{}\":t?\"{\\n\"+t+d.join(\",\\n\"+t)+\"\\n\"+h+\"}\":\"{\"+d.join(\",\")+\"}\",t=h,a}}e.exports=function(e,i,s){var o;if(t=\"\",r=\"\",\"number\"==typeof s)for(o=0;o<s;o+=1)r+=\" \";else\"string\"==typeof s&&(r=s);if(n=i,i&&\"function\"!=typeof i&&(\"object\"!=typeof i||\"number\"!=typeof i.length))throw new Error(\"JSON.stringify\");return u(\"\",{\"\":e})}},666:e=>{var t=function(e){\"use strict\";var t,r=Object.prototype,n=r.hasOwnProperty,i=\"function\"==typeof Symbol?Symbol:{},s=i.iterator||\"@@iterator\",o=i.asyncIterator||\"@@asyncIterator\",u=i.toStringTag||\"@@toStringTag\";function c(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{c({},\"\")}catch(e){c=function(e,t,r){return e[t]=r}}function a(e,t,r,n){var i=t&&t.prototype instanceof f?t:f,s=Object.create(i.prototype),o=new O(n||[]);return s._invoke=function(e,t,r){var n=d;return function(i,s){if(n===y)throw new Error(\"Generator is already running\");if(n===l){if(\"throw\"===i)throw s;return E()}for(r.method=i,r.arg=s;;){var o=r.delegate;if(o){var u=x(o,r);if(u){if(u===g)continue;return u}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(n===d)throw n=l,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);n=y;var c=p(e,t,r);if(\"normal\"===c.type){if(n=r.done?l:h,c.arg===g)continue;return{value:c.arg,done:r.done}}\"throw\"===c.type&&(n=l,r.method=\"throw\",r.arg=c.arg)}}}(e,r,o),s}function p(e,t,r){try{return{type:\"normal\",arg:e.call(t,r)}}catch(e){return{type:\"throw\",arg:e}}}e.wrap=a;var d=\"suspendedStart\",h=\"suspendedYield\",y=\"executing\",l=\"completed\",g={};function f(){}function _(){}function m(){}var v={};c(v,s,(function(){return this}));var q=Object.getPrototypeOf,b=q&&q(q(S([])));b&&b!==r&&n.call(b,s)&&(v=b);var w=m.prototype=f.prototype=Object.create(v);function k(e){[\"next\",\"throw\",\"return\"].forEach((function(t){c(e,t,(function(e){return this._invoke(t,e)}))}))}function A(e,t){function r(i,s,o,u){var c=p(e[i],e,s);if(\"throw\"!==c.type){var a=c.arg,d=a.value;return d&&\"object\"==typeof d&&n.call(d,\"__await\")?t.resolve(d.__await).then((function(e){r(\"next\",e,o,u)}),(function(e){r(\"throw\",e,o,u)})):t.resolve(d).then((function(e){a.value=e,o(a)}),(function(e){return r(\"throw\",e,o,u)}))}u(c.arg)}var i;this._invoke=function(e,n){function s(){return new t((function(t,i){r(e,n,t,i)}))}return i=i?i.then(s,s):s()}}function x(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,\"throw\"===r.method){if(e.iterator.return&&(r.method=\"return\",r.arg=t,x(e,r),\"throw\"===r.method))return g;r.method=\"throw\",r.arg=new TypeError(\"The iterator does not provide a 'throw' method\")}return g}var i=p(n,e.iterator,r.arg);if(\"throw\"===i.type)return r.method=\"throw\",r.arg=i.arg,r.delegate=null,g;var s=i.arg;return s?s.done?(r[e.resultName]=s.value,r.next=e.nextLoc,\"return\"!==r.method&&(r.method=\"next\",r.arg=t),r.delegate=null,g):s:(r.method=\"throw\",r.arg=new TypeError(\"iterator result is not an object\"),r.delegate=null,g)}function R(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function M(e){var t=e.completion||{};t.type=\"normal\",delete t.arg,e.completion=t}function O(e){this.tryEntries=[{tryLoc:\"root\"}],e.forEach(R,this),this.reset(!0)}function S(e){if(e){var r=e[s];if(r)return r.call(e);if(\"function\"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,o=function r(){for(;++i<e.length;)if(n.call(e,i))return r.value=e[i],r.done=!1,r;return r.value=t,r.done=!0,r};return o.next=o}}return{next:E}}function E(){return{value:t,done:!0}}return _.prototype=m,c(w,\"constructor\",m),c(m,\"constructor\",_),_.displayName=c(m,u,\"GeneratorFunction\"),e.isGeneratorFunction=function(e){var t=\"function\"==typeof e&&e.constructor;return!!t&&(t===_||\"GeneratorFunction\"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,m):(e.__proto__=m,c(e,u,\"GeneratorFunction\")),e.prototype=Object.create(w),e},e.awrap=function(e){return{__await:e}},k(A.prototype),c(A.prototype,o,(function(){return this})),e.AsyncIterator=A,e.async=function(t,r,n,i,s){void 0===s&&(s=Promise);var o=new A(a(t,r,n,i),s);return e.isGeneratorFunction(r)?o:o.next().then((function(e){return e.done?e.value:o.next()}))},k(w),c(w,u,\"Generator\"),c(w,s,(function(){return this})),c(w,\"toString\",(function(){return\"[object Generator]\"})),e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=S,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(M),!e)for(var r in this)\"t\"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if(\"throw\"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function i(n,i){return u.type=\"throw\",u.arg=e,r.next=n,i&&(r.method=\"next\",r.arg=t),!!i}for(var s=this.tryEntries.length-1;s>=0;--s){var o=this.tryEntries[s],u=o.completion;if(\"root\"===o.tryLoc)return i(\"end\");if(o.tryLoc<=this.prev){var c=n.call(o,\"catchLoc\"),a=n.call(o,\"finallyLoc\");if(c&&a){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!a)throw new Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,\"finallyLoc\")&&this.prev<i.finallyLoc){var s=i;break}}s&&(\"break\"===e||\"continue\"===e)&&s.tryLoc<=t&&t<=s.finallyLoc&&(s=null);var o=s?s.completion:{};return o.type=e,o.arg=t,s?(this.method=\"next\",this.next=s.finallyLoc,g):this.complete(o)},complete:function(e,t){if(\"throw\"===e.type)throw e.arg;return\"break\"===e.type||\"continue\"===e.type?this.next=e.arg:\"return\"===e.type?(this.rval=this.arg=e.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),M(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if(\"throw\"===n.type){var i=n.arg;M(r)}return i}}throw new Error(\"illegal catch attempt\")},delegateYield:function(e,r,n){return this.delegate={iterator:S(e),resultName:r,nextLoc:n},\"next\"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){\"object\"==typeof globalThis?globalThis.regeneratorRuntime=t:Function(\"r\",\"regeneratorRuntime = r\")(t)}}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var s=t[n]={exports:{}};return e[n](s,s.exports,r),s.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var n={};return(()=>{\"use strict\";function e(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function t(e){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},t(e)}function i(e,t,r,n,i,s,o){try{var u=e[s](o),c=u.value}catch(e){return void r(e)}u.done?t(c):Promise.resolve(c).then(n,i)}function s(e){return function(){var t=this,r=arguments;return new Promise((function(n,s){var o=e.apply(t,r);function u(e){i(o,n,s,u,c,\"next\",e)}function c(e){i(o,n,s,u,c,\"throw\",e)}u(void 0)}))}}function o(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function u(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function c(e,t,r){return t&&u(e.prototype,t),r&&u(e,r),Object.defineProperty(e,\"prototype\",{writable:!1}),e}function a(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function d(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&p(e,t)}function h(e,r){if(r&&(\"object\"===t(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return a(e)}function y(e){return y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},y(e)}r.d(n,{default:()=>Fe});var l=r(757),g=r.n(l);function f(){return Error.call(this),this.message=\"no elements in sequence\",this.name=\"EmptyError\",this}f.prototype=Object.create(Error.prototype);var _=f,m=function(e,t){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])},m(e,t)};function v(e,t){function r(){this.constructor=e}m(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function q(e){return\"function\"==typeof e}var b=!1,w={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){e&&(new Error).stack,b=e},get useDeprecatedSynchronousErrorHandling(){return b}};function k(e){setTimeout((function(){throw e}),0)}var A={closed:!0,next:function(e){},error:function(e){if(w.useDeprecatedSynchronousErrorHandling)throw e;k(e)},complete:function(){}},x=Array.isArray||function(e){return e&&\"number\"==typeof e.length};function R(e){return Error.call(this),this.message=e?e.length+\" errors occurred during unsubscription:\\n\"+e.map((function(e,t){return t+1+\") \"+e.toString()})).join(\"\\n  \"):\"\",this.name=\"UnsubscriptionError\",this.errors=e,this}R.prototype=Object.create(Error.prototype);var M=R,O=function(){function e(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}return e.prototype.unsubscribe=function(){var t;if(!this.closed){var r,n=this,i=n._parentOrParents,s=n._unsubscribe,o=n._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,i instanceof e)i.remove(this);else if(null!==i)for(var u=0;u<i.length;++u)i[u].remove(this);if(q(s))try{s.call(this)}catch(e){t=e instanceof M?S(e.errors):[e]}if(x(o)){u=-1;for(var c=o.length;++u<c;){var a=o[u];if(null!==(r=a)&&\"object\"==typeof r)try{a.unsubscribe()}catch(e){t=t||[],e instanceof M?t=t.concat(S(e.errors)):t.push(e)}}}if(t)throw new M(t)}},e.prototype.add=function(t){var r=t;if(!t)return e.EMPTY;switch(typeof t){case\"function\":r=new e(t);case\"object\":if(r===this||r.closed||\"function\"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(!(r instanceof e)){var n=r;(r=new e)._subscriptions=[n]}break;default:throw new Error(\"unrecognized teardown \"+t+\" added to Subscription.\")}var i=r._parentOrParents;if(null===i)r._parentOrParents=this;else if(i instanceof e){if(i===this)return r;r._parentOrParents=[i,this]}else{if(-1!==i.indexOf(this))return r;i.push(this)}var s=this._subscriptions;return null===s?this._subscriptions=[r]:s.push(r),r},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var r=t.indexOf(e);-1!==r&&t.splice(r,1)}},e.EMPTY=function(e){return e.closed=!0,e}(new e),e}();function S(e){return e.reduce((function(e,t){return e.concat(t instanceof M?t.errors:t)}),[])}var E=\"function\"==typeof Symbol?Symbol(\"rxSubscriber\"):\"@@rxSubscriber_\"+Math.random(),j=function(e){function t(r,n,i){var s=e.call(this)||this;switch(s.syncErrorValue=null,s.syncErrorThrown=!1,s.syncErrorThrowable=!1,s.isStopped=!1,arguments.length){case 0:s.destination=A;break;case 1:if(!r){s.destination=A;break}if(\"object\"==typeof r){r instanceof t?(s.syncErrorThrowable=r.syncErrorThrowable,s.destination=r,r.add(s)):(s.syncErrorThrowable=!0,s.destination=new P(s,r));break}default:s.syncErrorThrowable=!0,s.destination=new P(s,r,n,i)}return s}return v(t,e),t.prototype[E]=function(){return this},t.create=function(e,r,n){var i=new t(e,r,n);return i.syncErrorThrowable=!1,i},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this},t}(O),P=function(e){function t(t,r,n,i){var s,o=e.call(this)||this;o._parentSubscriber=t;var u=o;return q(r)?s=r:r&&(s=r.next,n=r.error,i=r.complete,r!==A&&(q((u=Object.create(r)).unsubscribe)&&o.add(u.unsubscribe.bind(u)),u.unsubscribe=o.unsubscribe.bind(o))),o._context=u,o._next=s,o._error=n,o._complete=i,o}return v(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;w.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber,r=w.useDeprecatedSynchronousErrorHandling;if(this._error)r&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)r?(t.syncErrorValue=e,t.syncErrorThrown=!0):k(e),this.unsubscribe();else{if(this.unsubscribe(),r)throw e;k(e)}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var r=function(){return e._complete.call(e._context)};w.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){if(this.unsubscribe(),w.useDeprecatedSynchronousErrorHandling)throw e;k(e)}},t.prototype.__tryOrSetError=function(e,t,r){if(!w.useDeprecatedSynchronousErrorHandling)throw new Error(\"bad call\");try{t.call(this._context,r)}catch(t){return w.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=t,e.syncErrorThrown=!0,!0):(k(t),!0)}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(j);function C(e,t){return function(r){return r.lift(new T(e,t))}}var T=function(){function e(e,t){this.predicate=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new L(e,this.predicate,this.thisArg))},e}(),L=function(e){function t(t,r,n){var i=e.call(this,t)||this;return i.predicate=r,i.thisArg=n,i.count=0,i}return v(t,e),t.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},t}(j);function D(){return Error.call(this),this.message=\"argument out of range\",this.name=\"ArgumentOutOfRangeError\",this}D.prototype=Object.create(Error.prototype);var I=D,B=\"function\"==typeof Symbol&&Symbol.observable||\"@@observable\";function H(){}function N(e){return e?1===e.length?e[0]:function(t){return e.reduce((function(e,t){return t(e)}),t)}:H}var F=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var r=new e;return r.source=this,r.operator=t,r},e.prototype.subscribe=function(e,t,r){var n=this.operator,i=function(e,t,r){if(e){if(e instanceof j)return e;if(e[E])return e[E]()}return e||t||r?new j(e,t,r):new j(A)}(e,t,r);if(n?i.add(n.call(i,this.source)):i.add(this.source||w.useDeprecatedSynchronousErrorHandling&&!i.syncErrorThrowable?this._subscribe(i):this._trySubscribe(i)),w.useDeprecatedSynchronousErrorHandling&&i.syncErrorThrowable&&(i.syncErrorThrowable=!1,i.syncErrorThrown))throw i.syncErrorValue;return i},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){w.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),function(e){for(;e;){var t=e,r=t.closed,n=t.destination,i=t.isStopped;if(r||i)return!1;e=n&&n instanceof j?n:null}return!0}(e)?e.error(t):console.warn(t)}},e.prototype.forEach=function(e,t){var r=this;return new(t=U(t))((function(t,n){var i;i=r.subscribe((function(t){try{e(t)}catch(e){n(e),i&&i.unsubscribe()}}),n,t)}))},e.prototype._subscribe=function(e){var t=this.source;return t&&t.subscribe(e)},e.prototype[B]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 0===e.length?this:N(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=U(e))((function(e,r){var n;t.subscribe((function(e){return n=e}),(function(e){return r(e)}),(function(){return e(n)}))}))},e.create=function(t){return new e(t)},e}();function U(e){if(e||(e=w.Promise||Promise),!e)throw new Error(\"no Promise impl found\");return e}var V=new F((function(e){return e.complete()}));function G(e){return function(t){return 0===e?r?function(e){return new F((function(t){return e.schedule((function(){return t.complete()}))}))}(r):V:t.lift(new J(e));var r}}var J=function(){function e(e){if(this.total=e,this.total<0)throw new I}return e.prototype.call=function(e,t){return t.subscribe(new z(e,this.total))},e}(),z=function(e){function t(t,r){var n=e.call(this,t)||this;return n.total=r,n.count=0,n}return v(t,e),t.prototype._next=function(e){var t=this.total,r=++this.count;r<=t&&(this.destination.next(e),r===t&&(this.destination.complete(),this.unsubscribe()))},t}(j);function W(e){return void 0===e&&(e=null),function(t){return t.lift(new Y(e))}}var Y=function(){function e(e){this.defaultValue=e}return e.prototype.call=function(e,t){return t.subscribe(new K(e,this.defaultValue))},e}(),K=function(e){function t(t,r){var n=e.call(this,t)||this;return n.defaultValue=r,n.isEmpty=!0,n}return v(t,e),t.prototype._next=function(e){this.isEmpty=!1,this.destination.next(e)},t.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},t}(j);function $(e){return void 0===e&&(e=Z),function(t){return t.lift(new Q(e))}}var Q=function(){function e(e){this.errorFactory=e}return e.prototype.call=function(e,t){return t.subscribe(new X(e,this.errorFactory))},e}(),X=function(e){function t(t,r){var n=e.call(this,t)||this;return n.errorFactory=r,n.hasValue=!1,n}return v(t,e),t.prototype._next=function(e){this.hasValue=!0,this.destination.next(e)},t.prototype._complete=function(){if(this.hasValue)return this.destination.complete();var e=void 0;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)},t}(j);function Z(){return new _}function ee(e){return e}function te(e,t){var r=arguments.length>=2;return function(n){return n.pipe(e?C((function(t,r){return e(t,r,n)})):ee,G(1),r?W(t):$((function(){return new _})))}}function re(){return Error.call(this),this.message=\"object unsubscribed\",this.name=\"ObjectUnsubscribedError\",this}re.prototype=Object.create(Error.prototype);var ne=re,ie=function(e){function t(t,r){var n=e.call(this)||this;return n.subject=t,n.subscriber=r,n.closed=!1,n}return v(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var r=t.indexOf(this.subscriber);-1!==r&&t.splice(r,1)}}},t}(O),se=function(e){function t(t){var r=e.call(this,t)||this;return r.destination=t,r}return v(t,e),t}(j),oe=function(e){function t(){var t=e.call(this)||this;return t.observers=[],t.closed=!1,t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return v(t,e),t.prototype[E]=function(){return new se(this)},t.prototype.lift=function(e){var t=new ue(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new ne;if(!this.isStopped)for(var t=this.observers,r=t.length,n=t.slice(),i=0;i<r;i++)n[i].next(e)},t.prototype.error=function(e){if(this.closed)throw new ne;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,r=t.length,n=t.slice(),i=0;i<r;i++)n[i].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new ne;this.isStopped=!0;for(var e=this.observers,t=e.length,r=e.slice(),n=0;n<t;n++)r[n].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new ne;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new ne;return this.hasError?(e.error(this.thrownError),O.EMPTY):this.isStopped?(e.complete(),O.EMPTY):(this.observers.push(e),new ie(this,e))},t.prototype.asObservable=function(){var e=new F;return e.source=this,e},t.create=function(e,t){return new ue(e,t)},t}(F),ue=function(e){function t(t,r){var n=e.call(this)||this;return n.destination=t,n.source=r,n}return v(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):O.EMPTY},t}(oe);function ce(){return function(e){return e.lift(new ae(e))}}var ae=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var r=this.connectable;r._refCount++;var n=new pe(e,r),i=t.subscribe(n);return n.closed||(n.connection=r.connect()),i},e}(),pe=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return v(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._refCount;if(t<=0)this.connection=null;else if(e._refCount=t-1,t>1)this.connection=null;else{var r=this.connection,n=e._connection;this.connection=null,!n||r&&n!==r||n.unsubscribe()}}else this.connection=null},t}(j),de=function(e){function t(t,r){var n=e.call(this)||this;return n.source=t,n.subjectFactory=r,n._refCount=0,n._isComplete=!1,n}return v(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,(e=this._connection=new O).add(this.source.subscribe(new ye(this.getSubject(),this))),e.closed&&(this._connection=null,e=O.EMPTY)),e},t.prototype.refCount=function(){return ce()(this)},t}(F).prototype,he={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:de._subscribe},_isComplete:{value:de._isComplete,writable:!0},getSubject:{value:de.getSubject},connect:{value:de.connect},refCount:{value:de.refCount}},ye=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return v(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(se);function le(){return new oe}function ge(){return function(e){return ce()((t=le,function(e){var r;r=\"function\"==typeof t?t:function(){return t};var n=Object.create(e,he);return n.source=e,n.subjectFactory=r,n})(e));var t}}function fe(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var _e=function(){function e(){o(this,e)}return c(e,[{key:\"accountClosure\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_closure:{required:1,type:\"numeric\"},passthrough:{},reason:{required:1,type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"account_closure\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"accountSecurity\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_security:{required:1,type:\"numeric\"},otp:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},totp_action:{type:\"string\"}},r={method:\"account_security\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"accountStatistics\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_statistics:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"account_statistics\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"activeSymbols\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={active_symbols:{required:1,type:\"string\"},landing_company:{type:\"string\"},passthrough:{},product_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"active_symbols\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"affiliateAccountAdd\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address_city:{required:1,type:\"string\"},address_line_1:{required:1,type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{required:1,type:\"string\"},address_state:{required:1,type:\"string\"},affiliate_account_add:{required:1,type:\"numeric\"},country:{required:1,type:\"string\"},first_name:{required:1,type:\"string\"},last_name:{required:1,type:\"string\"},non_pep_declaration:{required:1,type:\"numeric\"},passthrough:{},password:{required:1,type:\"string\"},phone:{required:1,type:\"string\"},req_id:{type:\"numeric\"},tnc_accepted:{required:1,type:\"numeric\"},username:{required:1,type:\"string\"}},r={method:\"affiliate_account_add\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"apiToken\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={api_token:{required:1,type:\"numeric\"},delete_token:{type:\"string\"},new_token:{type:\"string\"},new_token_scopes:{},passthrough:{},req_id:{type:\"numeric\"},valid_for_current_ip_only:{type:\"numeric\"}},r={method:\"api_token\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appDelete\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_delete:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_delete\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appGet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_get:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_get\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"app_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appMarkupDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_id:{type:\"numeric\"},app_markup_details:{required:1,type:\"numeric\"},client_loginid:{type:\"string\"},date_from:{required:1,type:\"string\"},date_to:{required:1,type:\"string\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},sort:{type:\"string\"},sort_fields:{}},r={method:\"app_markup_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appRegister\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_markup_percentage:{type:\"numeric\"},app_register:{required:1,type:\"numeric\"},appstore:{type:\"string\"},github:{type:\"string\"},googleplay:{type:\"string\"},homepage:{type:\"string\"},name:{required:1,type:\"string\"},passthrough:{},redirect_uri:{type:\"string\"},req_id:{type:\"numeric\"},scopes:{required:1},verification_uri:{type:\"string\"}},r={method:\"app_register\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"appUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_markup_percentage:{type:\"numeric\"},app_update:{required:1,type:\"numeric\"},appstore:{type:\"string\"},github:{type:\"string\"},googleplay:{type:\"string\"},homepage:{type:\"string\"},name:{required:1,type:\"string\"},passthrough:{},redirect_uri:{type:\"string\"},req_id:{type:\"numeric\"},scopes:{required:1},verification_uri:{type:\"string\"}},r={method:\"app_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"assetIndex\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={asset_index:{required:1,type:\"numeric\"},landing_company:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"asset_index\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"authorize\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={add_to_login_history:{type:\"numeric\"},authorize:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"authorize\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"balance\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account:{type:\"string\"},balance:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"balance\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"buy\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={buy:{required:1,type:\"string\"},parameters:{amount:{type:\"numeric\"},app_markup_percentage:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},barrier_range:{type:\"string\"},basis:{type:\"string\"},cancellation:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},limit_order:{stop_loss:{type:\"numeric\"},take_profit:{type:\"numeric\"}},multiplier:{type:\"numeric\"},product_type:{type:\"string\"},selected_tick:{type:\"numeric\"},symbol:{required:1,type:\"string\"},trading_period_start:{type:\"numeric\"}},passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"buy\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"buyContractForMultipleAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={buy_contract_for_multiple_accounts:{required:1,type:\"string\"},parameters:{amount:{type:\"numeric\"},app_markup_percentage:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},basis:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},multiplier:{type:\"numeric\"},selected_tick:{type:\"numeric\"},symbol:{required:1,type:\"string\"}},passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},tokens:{required:1}},r={method:\"buy_contract_for_multiple_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cancel:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashier\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address:{type:\"string\"},amount:{type:\"numeric\"},cashier:{required:1,type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},provider:{type:\"string\"},req_id:{type:\"numeric\"},type:{type:\"string\"},verification_code:{type:\"string\"}},r={method:\"cashier\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashierPayments\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cashier_payments:{required:1,type:\"numeric\"},passthrough:{},provider:{type:\"string\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},transaction_type:{type:\"string\"}},r={method:\"cashier_payments\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cashierWithdrawalCancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={cashier_withdrawal_cancel:{required:1,type:\"numeric\"},id:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"cashier_withdrawal_cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"changeEmail\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={change_email:{required:1,type:\"string\"},new_email:{required:1,type:\"string\"},new_password:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"change_email\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"changePassword\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={change_password:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"change_password\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{required:1,type:\"numeric\"},contract_update:{required:1,type:\"numeric\"},limit_order:{stop_loss:{},take_profit:{}},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"contract_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractUpdateHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{required:1,type:\"numeric\"},contract_update_history:{required:1,type:\"numeric\"},limit:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"contract_update_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"contractsFor\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contracts_for:{required:1,type:\"string\"},currency:{type:\"string\"},landing_company:{type:\"string\"},passthrough:{},product_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"contracts_for\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copyStart\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={assets:{},copy_start:{required:1,type:\"string\"},max_trade_stake:{type:\"numeric\"},min_trade_stake:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},trade_types:{}},r={method:\"copy_start\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copyStop\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copy_stop:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"copy_stop\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copytradingList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copytrading_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"copytrading_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"copytradingStatistics\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={copytrading_statistics:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},trader_id:{required:1,type:\"string\"}},r={method:\"copytrading_statistics\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"cryptoConfig\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={crypto_config:{required:1,type:\"numeric\"},currency_code:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"crypto_config\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"documentUpload\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={document_format:{required:1,type:\"string\"},document_id:{type:\"string\"},document_issuing_country:{type:\"string\"},document_type:{required:1,type:\"string\"},document_upload:{required:1,type:\"numeric\"},expected_checksum:{required:1,type:\"string\"},expiration_date:{type:\"string\"},file_size:{required:1,type:\"numeric\"},lifetime_valid:{type:\"numeric\"},page_type:{type:\"string\"},passthrough:{},proof_of_ownership:{details:{required:1},id:{required:1,type:\"numeric\"}},req_id:{type:\"numeric\"}},r={method:\"document_upload\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"economicCalendar\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={currency:{type:\"string\"},economic_calendar:{required:1,type:\"numeric\"},end_date:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},start_date:{type:\"numeric\"}},r={method:\"economic_calendar\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"exchangeRates\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={base_currency:{required:1,type:\"string\"},exchange_rates:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},target_currency:{type:\"string\"}},r={method:\"exchange_rates\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"forget\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={forget:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"forget\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"forgetAll\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={forget_all:{required:1},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"forget_all\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAccountStatus\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_account_status:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_account_status\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAccountTypes\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_account_types:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_account_types\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getAvailableAccountsToTransfer\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_available_accounts_to_transfer:{required:1,type:\"numeric\"},loginid:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_available_accounts_to_transfer\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getFinancialAssessment\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_financial_assessment:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_financial_assessment\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getLimits\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_limits:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_limits\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getSelfExclusion\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_self_exclusion:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_self_exclusion\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"getSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={get_settings:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"get_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"identityVerificationDocumentAdd\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={document_number:{required:1,type:\"string\"},document_type:{required:1,type:\"string\"},identity_verification_document_add:{required:1,type:\"numeric\"},issuing_country:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"identity_verification_document_add\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"landingCompany\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"landing_company\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"landingCompanyDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company_details:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"landing_company_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"linkWallet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={client_id:{required:1,type:\"string\"},link_wallet:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},wallet_id:{required:1,type:\"string\"}},r={method:\"link_wallet\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"loginHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={limit:{type:\"numeric\"},login_history:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"login_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"logout\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={logout:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"logout\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5Deposit\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},from_binary:{type:\"string\"},mt5_deposit:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},to_mt5:{required:1,type:\"string\"}},r={method:\"mt5_deposit\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5GetSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_get_settings:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"mt5_get_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5LoginList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={mt5_login_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"mt5_login_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5NewAccount\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{required:1,type:\"string\"},address:{type:\"string\"},city:{type:\"string\"},company:{type:\"string\"},country:{type:\"string\"},currency:{type:\"string\"},dry_run:{type:\"numeric\"},email:{required:1,type:\"string\"},investPassword:{type:\"string\"},leverage:{required:1,type:\"numeric\"},mainPassword:{required:1,type:\"string\"},mt5_account_category:{type:\"string\"},mt5_account_type:{type:\"string\"},mt5_new_account:{required:1,type:\"numeric\"},name:{required:1,type:\"string\"},passthrough:{},phone:{type:\"string\"},phonePassword:{type:\"string\"},req_id:{type:\"numeric\"},server:{},state:{type:\"string\"},zipCode:{type:\"string\"}},r={method:\"mt5_new_account\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_change:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},password_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"mt5_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordCheck\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_check:{required:1,type:\"numeric\"},passthrough:{},password:{required:1,type:\"string\"},password_type:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"mt5_password_check\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5PasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={login:{required:1,type:\"string\"},mt5_password_reset:{required:1,type:\"numeric\"},new_password:{required:1,type:\"string\"},passthrough:{},password_type:{type:\"string\"},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"mt5_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"mt5Withdrawal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},from_mt5:{required:1,type:\"string\"},mt5_withdrawal:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},to_binary:{required:1,type:\"string\"}},r={method:\"mt5_withdrawal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountMaltainvest\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={accept_risk:{required:1,type:\"numeric\"},account_opening_reason:{type:\"string\"},account_turnover:{type:\"string\"},address_city:{required:1,type:\"string\"},address_line_1:{required:1,type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},affiliate_token:{type:\"string\"},binary_options_trading_experience:{type:\"string\"},binary_options_trading_frequency:{type:\"string\"},cfd_trading_experience:{type:\"string\"},cfd_trading_frequency:{type:\"string\"},citizen:{type:\"string\"},client_type:{type:\"string\"},currency:{type:\"string\"},date_of_birth:{required:1,type:\"string\"},education_level:{required:1,type:\"string\"},employment_industry:{required:1,type:\"string\"},employment_status:{type:\"string\"},estimated_worth:{required:1,type:\"string\"},first_name:{required:1,type:\"string\"},forex_trading_experience:{type:\"string\"},forex_trading_frequency:{type:\"string\"},income_source:{required:1,type:\"string\"},last_name:{required:1,type:\"string\"},net_income:{required:1,type:\"string\"},new_account_maltainvest:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},occupation:{required:1,type:\"string\"},other_instruments_trading_experience:{type:\"string\"},other_instruments_trading_frequency:{type:\"string\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},req_id:{type:\"numeric\"},residence:{required:1,type:\"string\"},salutation:{required:1,type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},source_of_wealth:{type:\"string\"},tax_identification_number:{required:1,type:\"string\"},tax_residence:{required:1,type:\"string\"}},r={method:\"new_account_maltainvest\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountReal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_opening_reason:{type:\"string\"},account_turnover:{type:\"string\"},address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},affiliate_token:{type:\"string\"},citizen:{},client_type:{type:\"string\"},currency:{type:\"string\"},date_of_birth:{type:\"string\"},first_name:{type:\"string\"},last_name:{type:\"string\"},new_account_real:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},req_id:{type:\"numeric\"},residence:{type:\"string\"},salutation:{type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},tax_identification_number:{type:\"string\"},tax_residence:{type:\"string\"}},r={method:\"new_account_real\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountVirtual\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_token:{type:\"string\"},client_password:{type:\"string\"},date_first_contact:{type:\"string\"},email_consent:{type:\"numeric\"},gclid_url:{type:\"string\"},new_account_virtual:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},residence:{type:\"string\"},signup_device:{type:\"string\"},type:{type:\"string\"},utm_ad_id:{},utm_adgroup_id:{},utm_adrollclk_id:{},utm_campaign:{},utm_campaign_id:{},utm_content:{},utm_fbcl_id:{},utm_gl_client_id:{},utm_medium:{},utm_msclk_id:{},utm_source:{},utm_term:{},verification_code:{type:\"string\"}},r={method:\"new_account_virtual\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"newAccountWallet\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{type:\"string\"},address_postcode:{type:\"string\"},address_state:{type:\"string\"},currency:{required:1,type:\"string\"},date_of_birth:{type:\"string\"},first_name:{type:\"string\"},last_name:{type:\"string\"},new_account_wallet:{required:1,type:\"numeric\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},payment_method:{required:1,type:\"string\"},phone:{type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"new_account_wallet\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"notificationEvent\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={args:{documents:{}},category:{required:1,type:\"string\"},event:{required:1,type:\"string\"},notification_event:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"notification_event\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"oauthApps\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={oauth_apps:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"oauth_apps\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},contact_info:{type:\"string\"},description:{type:\"string\"},local_currency:{type:\"string\"},max_order_amount:{required:1,type:\"numeric\"},min_order_amount:{required:1,type:\"numeric\"},p2p_advert_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method:{type:\"string\"},payment_method_ids:{},payment_method_names:{},rate:{required:1,type:\"numeric\"},rate_type:{type:\"string\"},req_id:{type:\"numeric\"},type:{required:1,type:\"string\"}},r={method:\"p2p_advert_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{type:\"string\"},p2p_advert_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},use_client_limits:{type:\"numeric\"}},r={method:\"p2p_advert_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={advertiser_id:{type:\"string\"},advertiser_name:{type:\"string\"},amount:{type:\"numeric\"},counterparty_type:{type:\"string\"},favourites_only:{type:\"numeric\"},limit:{type:\"numeric\"},local_currency:{type:\"string\"},offset:{type:\"numeric\"},p2p_advert_list:{required:1,type:\"numeric\"},passthrough:{},payment_method:{},req_id:{type:\"numeric\"},sort_by:{type:\"string\"},use_client_limits:{type:\"numeric\"}},r={method:\"p2p_advert_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},delete:{type:\"numeric\"},description:{type:\"string\"},id:{required:1,type:\"string\"},is_active:{type:\"numeric\"},local_currency:{type:\"string\"},max_order_amount:{type:\"numeric\"},min_order_amount:{type:\"numeric\"},p2p_advert_update:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method_ids:{},payment_method_names:{},rate:{type:\"numeric\"},rate_type:{type:\"string\"},remaining_amount:{type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"p2p_advert_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserAdverts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={limit:{type:\"numeric\"},offset:{type:\"numeric\"},p2p_advertiser_adverts:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_advertiser_adverts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},default_advert_description:{type:\"string\"},name:{required:1,type:\"string\"},p2p_advertiser_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_advertiser_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{type:\"string\"},p2p_advertiser_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_advertiser_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserPaymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={create:{},delete:{},p2p_advertiser_payment_methods:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},update:{}},r={method:\"p2p_advertiser_payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserRelations\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={add_blocked:{},add_favourites:{},p2p_advertiser_relations:{required:1,type:\"numeric\"},passthrough:{},remove_blocked:{},remove_favourites:{},req_id:{type:\"numeric\"}},r={method:\"p2p_advertiser_relations\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pAdvertiserUpdate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contact_info:{type:\"string\"},default_advert_description:{type:\"string\"},is_listed:{type:\"numeric\"},p2p_advertiser_update:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},req_id:{type:\"numeric\"},show_name:{type:\"numeric\"}},r={method:\"p2p_advertiser_update\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pChatCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={order_id:{required:1,type:\"string\"},p2p_chat_create:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_chat_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderCancel\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_cancel:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_cancel\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderConfirm\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_confirm:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_confirm\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={advert_id:{required:1,type:\"string\"},amount:{required:1,type:\"numeric\"},contact_info:{type:\"string\"},p2p_order_create:{required:1,type:\"numeric\"},passthrough:{},payment_info:{type:\"string\"},payment_method_ids:{},rate:{type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderDispute\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={dispute_reason:{required:1,type:\"string\"},id:{required:1,type:\"string\"},p2p_order_dispute:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_dispute\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderInfo\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={id:{required:1,type:\"string\"},p2p_order_info:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_info\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={active:{type:\"numeric\"},advert_id:{type:\"string\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},p2p_order_list:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"p2p_order_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pOrderReview\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={order_id:{required:1,type:\"string\"},p2p_order_review:{required:1,type:\"numeric\"},passthrough:{},rating:{required:1,type:\"numeric\"},recommended:{},req_id:{type:\"numeric\"}},r={method:\"p2p_order_review\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pPaymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={p2p_payment_methods:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"p2pPing\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={p2p_ping:{required:1,type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"}},r={method:\"p2p_ping\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentMethods\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={country:{type:\"string\"},passthrough:{},payment_methods:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"payment_methods\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentCreate\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_id:{type:\"string\"},code_of_conduct_approval:{required:1,type:\"numeric\"},commission_deposit:{required:1,type:\"numeric\"},commission_withdrawal:{required:1,type:\"numeric\"},email:{required:1,type:\"string\"},information:{required:1,type:\"string\"},passthrough:{},payment_agent_name:{required:1,type:\"string\"},paymentagent_create:{required:1,type:\"numeric\"},phone_numbers:{},req_id:{type:\"numeric\"},supported_payment_methods:{required:1},urls:{required:1}},r={method:\"paymentagent_create\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentDetails\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},paymentagent_details:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"paymentagent_details\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={currency:{type:\"string\"},passthrough:{},paymentagent_list:{required:1,type:\"string\"},req_id:{type:\"numeric\"}},r={method:\"paymentagent_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentTransfer\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},currency:{required:1,type:\"string\"},description:{type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},paymentagent_transfer:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},transfer_to:{required:1,type:\"string\"}},r={method:\"paymentagent_transfer\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"paymentagentWithdraw\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},currency:{required:1,type:\"string\"},description:{type:\"string\"},dry_run:{type:\"numeric\"},passthrough:{},paymentagent_loginid:{required:1,type:\"string\"},paymentagent_withdraw:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"paymentagent_withdraw\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"payoutCurrencies\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},payout_currencies:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"payout_currencies\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ping\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},ping:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"ping\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"portfolio\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_type:{},passthrough:{},portfolio:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"portfolio\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"profitTable\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_type:{},date_from:{type:\"string\"},date_to:{type:\"string\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},profit_table:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sort:{type:\"string\"}},r={method:\"profit_table\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"proposal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},barrier:{type:\"string\"},barrier2:{type:\"string\"},barrier_range:{type:\"string\"},basis:{type:\"string\"},cancellation:{type:\"string\"},contract_type:{required:1,type:\"string\"},currency:{required:1,type:\"string\"},date_expiry:{type:\"numeric\"},date_start:{type:\"numeric\"},duration:{type:\"numeric\"},duration_unit:{type:\"string\"},limit_order:{stop_loss:{type:\"numeric\"},take_profit:{type:\"numeric\"}},multiplier:{type:\"numeric\"},passthrough:{},product_type:{type:\"string\"},proposal:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},selected_tick:{type:\"numeric\"},subscribe:{type:\"numeric\"},symbol:{required:1,type:\"string\"},trading_period_start:{type:\"numeric\"}},r={method:\"proposal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"proposalOpenContract\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={contract_id:{type:\"numeric\"},passthrough:{},proposal_open_contract:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"}},r={method:\"proposal_open_contract\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"realityCheck\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},reality_check:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"}},r={method:\"reality_check\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"requestReport\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={date_from:{required:1,type:\"numeric\"},date_to:{required:1,type:\"numeric\"},passthrough:{},report_type:{required:1,type:\"string\"},req_id:{type:\"numeric\"},request_report:{required:1,type:\"numeric\"}},r={method:\"request_report\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"resetPassword\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={date_of_birth:{type:\"string\"},new_password:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},reset_password:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"reset_password\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"residenceList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},residence_list:{required:1,type:\"numeric\"}},r={method:\"residence_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"revokeOauthApp\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},revoke_oauth_app:{required:1,type:\"numeric\"}},r={method:\"revoke_oauth_app\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sell\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sell:{required:1,type:\"numeric\"}},r={method:\"sell\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sellContractForMultipleAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},price:{required:1,type:\"numeric\"},req_id:{type:\"numeric\"},sell_contract_for_multiple_accounts:{required:1,type:\"numeric\"},shortcode:{required:1,type:\"string\"},tokens:{required:1}},r={method:\"sell_contract_for_multiple_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"sellExpired\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},sell_expired:{required:1,type:\"numeric\"}},r={method:\"sell_expired\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"serviceToken\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={country:{type:\"string\"},passthrough:{},referrer:{type:\"string\"},req_id:{type:\"numeric\"},server:{type:\"string\"},service:{required:1},service_token:{required:1,type:\"numeric\"}},r={method:\"service_token\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setAccountCurrency\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},set_account_currency:{required:1,type:\"string\"}},r={method:\"set_account_currency\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setFinancialAssessment\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_turnover:{type:\"string\"},binary_options_trading_experience:{type:\"string\"},binary_options_trading_frequency:{type:\"string\"},cfd_trading_experience:{type:\"string\"},cfd_trading_frequency:{type:\"string\"},education_level:{required:1,type:\"string\"},employment_industry:{required:1,type:\"string\"},employment_status:{type:\"string\"},estimated_worth:{required:1,type:\"string\"},forex_trading_experience:{type:\"string\"},forex_trading_frequency:{type:\"string\"},income_source:{required:1,type:\"string\"},net_income:{required:1,type:\"string\"},occupation:{required:1,type:\"string\"},other_instruments_trading_experience:{type:\"string\"},other_instruments_trading_frequency:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},set_financial_assessment:{required:1,type:\"numeric\"},source_of_wealth:{type:\"string\"}},r={method:\"set_financial_assessment\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setSelfExclusion\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={exclude_until:{},max_30day_deposit:{},max_30day_losses:{},max_30day_turnover:{},max_7day_deposit:{},max_7day_losses:{},max_7day_turnover:{},max_balance:{},max_deposit:{},max_losses:{},max_open_bets:{},max_turnover:{},passthrough:{},req_id:{type:\"numeric\"},session_duration_limit:{},set_self_exclusion:{required:1,type:\"numeric\"},timeout_until:{}},r={method:\"set_self_exclusion\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"setSettings\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_opening_reason:{type:\"string\"},address_city:{type:\"string\"},address_line_1:{type:\"string\"},address_line_2:{},address_postcode:{type:\"string\"},address_state:{type:\"string\"},allow_copiers:{type:\"numeric\"},citizen:{},date_of_birth:{type:\"string\"},email_consent:{type:\"numeric\"},feature_flag:{wallet:{type:\"numeric\"}},first_name:{type:\"string\"},last_name:{type:\"string\"},non_pep_declaration:{type:\"numeric\"},passthrough:{},phone:{},place_of_birth:{type:\"string\"},preferred_language:{},req_id:{type:\"numeric\"},request_professional_status:{type:\"numeric\"},residence:{},salutation:{type:\"string\"},secret_answer:{type:\"string\"},secret_question:{type:\"string\"},set_settings:{required:1,type:\"numeric\"},tax_identification_number:{type:\"string\"},tax_residence:{type:\"string\"}},r={method:\"set_settings\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"statement\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={action_type:{type:\"string\"},date_from:{type:\"numeric\"},date_to:{type:\"numeric\"},description:{type:\"numeric\"},limit:{type:\"numeric\"},offset:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},statement:{required:1,type:\"numeric\"}},r={method:\"statement\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"statesList\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},states_list:{required:1,type:\"string\"}},r={method:\"states_list\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ticks\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},ticks:{required:1}},r={method:\"ticks\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"ticksHistory\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={adjust_start_time:{type:\"numeric\"},count:{type:\"numeric\"},end:{required:1,type:\"string\"},granularity:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},start:{type:\"numeric\"},style:{type:\"string\"},subscribe:{type:\"numeric\"},ticks_history:{required:1,type:\"string\"}},r={method:\"ticks_history\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"time\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},time:{required:1,type:\"numeric\"}},r={method:\"time\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tncApproval\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={affiliate_coc_agreement:{type:\"numeric\"},passthrough:{},req_id:{type:\"numeric\"},tnc_approval:{required:1,type:\"numeric\"},ukgc_funds_protection:{type:\"numeric\"}},r={method:\"tnc_approval\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"topupVirtual\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},topup_virtual:{required:1,type:\"numeric\"}},r={method:\"topup_virtual\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingDurations\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={landing_company:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},trading_durations:{required:1,type:\"numeric\"}},r={method:\"trading_durations\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_accounts:{required:1,type:\"numeric\"}},r={method:\"trading_platform_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformDeposit\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{type:\"numeric\"},from_account:{type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},to_account:{required:1,type:\"string\"},trading_platform_deposit:{required:1,type:\"numeric\"}},r={method:\"trading_platform_deposit\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformInvestorPasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_id:{required:1,type:\"string\"},new_password:{required:1,type:\"string\"},old_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_investor_password_change:{required:1,type:\"numeric\"}},r={method:\"trading_platform_investor_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformInvestorPasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_id:{required:1,type:\"string\"},new_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_investor_password_reset:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"trading_platform_investor_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformNewAccount\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{required:1,type:\"string\"},currency:{type:\"string\"},dry_run:{type:\"numeric\"},market_type:{required:1,type:\"string\"},passthrough:{},password:{required:1,type:\"string\"},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},sub_account_type:{type:\"string\"},trading_platform_new_account:{required:1,type:\"numeric\"}},r={method:\"trading_platform_new_account\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformPasswordChange\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={new_password:{required:1,type:\"string\"},old_password:{type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_password_change:{required:1,type:\"numeric\"}},r={method:\"trading_platform_password_change\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformPasswordReset\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={new_password:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},trading_platform_password_reset:{required:1,type:\"numeric\"},verification_code:{required:1,type:\"string\"}},r={method:\"trading_platform_password_reset\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformProductListing\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={app_id:{},country_code:{required:1,type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},trading_platform_product_listing:{required:1,type:\"numeric\"}},r={method:\"trading_platform_product_listing\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingPlatformWithdrawal\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={amount:{required:1,type:\"numeric\"},from_account:{required:1,type:\"string\"},passthrough:{},platform:{required:1,type:\"string\"},req_id:{type:\"numeric\"},to_account:{required:1,type:\"string\"},trading_platform_withdrawal:{required:1,type:\"numeric\"}},r={method:\"trading_platform_withdrawal\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingServers\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_type:{type:\"string\"},environment:{type:\"string\"},market_type:{type:\"string\"},passthrough:{},platform:{type:\"string\"},req_id:{type:\"numeric\"},trading_servers:{required:1,type:\"numeric\"}},r={method:\"trading_servers\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"tradingTimes\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},trading_times:{required:1,type:\"string\"}},r={method:\"trading_times\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"transaction\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{required:1,type:\"numeric\"},transaction:{required:1,type:\"numeric\"}},r={method:\"transaction\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"transferBetweenAccounts\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={account_from:{type:\"string\"},account_to:{type:\"string\"},accounts:{type:\"string\"},amount:{type:\"numeric\"},currency:{type:\"string\"},passthrough:{},req_id:{type:\"numeric\"},transfer_between_accounts:{required:1,type:\"numeric\"}},r={method:\"transfer_between_accounts\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"verifyEmail\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},type:{required:1,type:\"string\"},url_parameters:{affiliate_token:{type:\"string\"},date_first_contact:{type:\"string\"},gclid_url:{type:\"string\"},pa_amount:{type:\"numeric\"},pa_currency:{type:\"string\"},pa_loginid:{type:\"string\"},pa_remarks:{type:\"string\"},redirect_to:{type:\"numeric\"},signup_device:{type:\"string\"},utm_ad_id:{},utm_adgroup_id:{},utm_adrollclk_id:{},utm_campaign:{},utm_campaign_id:{},utm_content:{},utm_fbcl_id:{},utm_gl_client_id:{},utm_medium:{},utm_msclk_id:{},utm_source:{},utm_term:{}},verify_email:{required:1,type:\"string\"}},r={method:\"verify_email\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"websiteStatus\",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t={passthrough:{},req_id:{type:\"numeric\"},subscribe:{type:\"numeric\"},website_status:{required:1,type:\"numeric\"}},r={method:\"website_status\",needsMethodArg:\"1\",args:e,config:t};return this.processRequest(r)}},{key:\"processRequest\",value:function(e){var r=e.config,n=function(e){var t=e.config,r=e.args,n=e.method,i=e.needsMethodArg,s=r;return i&&!me(s)&&(s=fe({},n,s)),s[n]=s[n]||1,Object.keys(s).forEach((function(e){var r=s[e];e in t&&(\"string\"===t[e].type?s[e]=\"\".concat(r):\"numeric\"===t[e].type?s[e]=parseFloat(r):\"boolean\"===t[e].type&&(s[e]=+r))})),s}(e),i=function(e){var r=e.config,n=e.args;if(!me(n))return\"Requires an object but a \".concat(t(n),\" is passed.\");var i=[],s=Object.keys(r).filter((function(e){return(r[e]||{}).required&&!(e in n)}));return s.length&&i.push(\"Required parameters missing: \".concat(s.join(\", \"))),Object.keys(n).forEach((function(e){var s=n[e];if(e in r){var o=r[e].type;o&&(ve[o](s)||i.push(\"\".concat(o,\" value expected but found \").concat(t(s),\": \").concat(e)))}})),i.length?i.join(\" - \"):\"\"}({config:r,args:n});return i?Promise.reject(i):this.send(n)}}]),e}(),me=function(e){return e instanceof Object},ve={object:me,numeric:function(e){return!Number.isNaN(1*e)},string:function(e){return\"string\"==typeof e},boolean:function(e){return[!0,!1,0,1].includes(e)}};function qe(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}function be(e,t,r){return be=qe()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var i=new(Function.bind.apply(e,n));return r&&p(i,r.prototype),i},be.apply(null,arguments)}function we(e){var t=\"function\"==typeof Map?new Map:void 0;return we=function(e){if(null===e||(r=e,-1===Function.toString.call(r).indexOf(\"[native code]\")))return e;var r;if(\"function\"!=typeof e)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,n)}function n(){return be(e,arguments,y(this).constructor)}return n.prototype=Object.create(e.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),p(n,e)},we(e)}function ke(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=y(e);if(t){var i=y(this).constructor;r=Reflect.construct(n,arguments,i)}else r=n.apply(this,arguments);return h(this,r)}}function Ae(e){return function(t){d(n,t);var r=ke(n);function n(t){var i;return o(this,n),(i=r.call(this)).type=e,i.message=t,i}return c(n,[{key:\"toString\",value:function(){return\"\".concat(this.type,\": \").concat(this.message)}}]),n}(we(Error))}var xe=function(e){d(r,e);var t=ke(r);function r(){return o(this,r),t.apply(this,arguments)}return c(r)}(Ae(\"APIError\")),Re=function(e){d(r,e);var t=ke(r);function r(){return o(this,r),t.apply(this,arguments)}return c(r)}(Ae(\"ConstructionError\")),Me=r(266),Oe=r.n(Me);function Se(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Ee(e){var t=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Se(Object(r),!0).forEach((function(t){fe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Se(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({},e);return delete t.req_id,delete t.passthrough,delete t.subscribe,Oe()(t)}var je=function(e){d(f,e);var t,r,n,i,u,a,p,l=(a=f,p=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(a);if(p){var r=y(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return h(this,e)});function f(e,t){var r;if(o(this,f),!e)throw new Re(\"Cache object needs an API to work\");return(r=l.call(this)).api=e,r.storage=t,r}return c(f,[{key:\"send\",value:(u=s(g().mark((function e(t){var r;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.has(t);case 2:if(!e.sent){e.next=4;break}return e.abrupt(\"return\",this.get(t));case 4:return e.next=6,this.api.send(t);case 6:return r=e.sent,e.next=9,this.set(t,r);case 9:return e.abrupt(\"return\",r);case 10:case\"end\":return e.stop()}}),e,this)}))),function(e){return u.apply(this,arguments)})},{key:\"has\",value:(i=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.has(Ee(t)));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return i.apply(this,arguments)})},{key:\"get\",value:(n=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.get(Ee(t)));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:\"getByMsgType\",value:(r=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.getByMsgType(t));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return r.apply(this,arguments)})},{key:\"set\",value:(t=s(g().mark((function e(t,r){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.storage.set(Ee(t),r));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e,r){return t.apply(this,arguments)})}]),f}(_e);var Pe=function(e){d(i,e);var t,r,n=(t=i,r=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,n=y(t);if(r){var i=y(this).constructor;e=Reflect.construct(n,arguments,i)}else e=n.apply(this,arguments);return h(this,e)});function i(){var e,t,r,s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:function(){};return o(this,i),e=n.call(this,(function(e,n){t=e,r=n})),s(t,r),e.resolveCallback=t,e.rejectCallback=r,e.state=\"pending\",e}return c(i,[{key:\"resolve\",value:function(e){return this.resolveCallback(e),this.state=\"resolved\",this}},{key:\"reject\",value:function(e){return this.rejectCallback(e),this.state=\"rejected\",this}},{key:\"isPending\",value:function(){return\"pending\"===this.state}},{key:\"isRejected\",value:function(){return\"rejected\"===this.state}},{key:\"isResolved\",value:function(){return\"resolved\"===this.state}}],[{key:\"wrap\",value:function(e){if(e instanceof this)return e;var t=new this;return e.then(t.resolve.bind(t),t.reject.bind(t)),t}}]),i}(we(Promise)),Ce=function(){function e(){o(this,e),this.store={by_msg_type:{}}}return c(e,[{key:\"has\",value:function(e){return e in this.store}},{key:\"get\",value:function(e){return this.store[e]}},{key:\"getByMsgType\",value:function(e){return this.store.by_msg_type[e]}},{key:\"set\",value:function(e,t){this.store.by_msg_type[t.msg_type]=t,this.store[e]=t}}]),e}(),Te=function(){function e(e){this.callback=e}return e.prototype.call=function(e,t){return t.subscribe(new Le(e,this.callback))},e}(),Le=function(e){function t(t,r){var n=e.call(this,t)||this;return n.add(new O(r)),n}return v(t,e),t}(j);const De=[\"balance\",\"buy\",\"cashier_payments\",\"exchange_rates\",\"p2p_advert_info\",\"p2p_advertiser_create\",\"p2p_advertiser_info\",\"p2p_order_create\",\"p2p_order_info\",\"p2p_order_list\",\"proposal\",\"proposal_open_contract\",\"ticks\",\"ticks_history\",\"transaction\",\"website_status\"];function Ie(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function Be(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ie(Object(r),!0).forEach((function(t){fe(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ie(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}var He=function(){function e(t){o(this,e),this.api=t,this.sources={},this.subs_id_to_key={},this.key_to_subs_id={},this.buy_key_to_contract_id={},this.subs_per_msg_type=[],this.streams_list=De}return c(e,[{key:\"subscribe\",value:function(e){return this.sourceExists(e)?this.getSource(e):this.createNewSource(Be(Be({},e),{},{subscribe:1}))}},{key:\"getSource\",value:function(e){var t=Ne(e);if(t in this.sources)return this.sources[t];if(e.proposal_open_contract&&e.contract_id){var r=Object.values(this.buy_key_to_contract_id).find((function(t){return t.contract_id===e.contract_id}));if(r)return this.sources[r.buy_key]}}},{key:\"sourceExists\",value:function(e){return this.getSource(e)}},{key:\"createNewSource\",value:function(e){var t,r=this,n=Ne(e),i=this.api.sendAndGetSource(e).pipe((t=function(){n in r.key_to_subs_id&&r.forget(r.key_to_subs_id[n]).then((function(){}),(function(){}))},function(e){return e.lift(new Te(t))}),ge());return this.sources[n]=i,this.saveSubsPerMsgType(e,n),i.pipe(te()).toPromise().then((function(t){e.buy&&(r.buy_key_to_contract_id[n]={contract_id:t.buy.contract_id,buy_key:n}),r.saveSubsId(n,t)}),this.removeKeyOnError(n)),i}},{key:\"forget\",value:function(e){return this.completeSubsByIds(e),this.api.send({forget:e})}},{key:\"forgetAll\",value:function(){for(var e=this,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return r.forEach((function(t){(e.subs_per_msg_type[t]||[]).forEach((function(t){return e.completeSubsByKey(t)})),e.subs_per_msg_type[t]=[]})),this.api.send({forget_all:r})}},{key:\"completeSubsByIds\",value:function(){for(var e=this,t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];r.forEach((function(t){var r=e.subs_id_to_key[t];delete e.subs_id_to_key[t],e.completeSubsByKey(r)}))}},{key:\"saveSubsId\",value:function(e,t){var r=t.subscription;if(!r)return this.completeSubsByKey(e);var n=r.id;n in this.subs_id_to_key||(this.subs_id_to_key[n]=e,this.key_to_subs_id[e]=n)}},{key:\"saveSubsPerMsgType\",value:function(e,t){var r=this.getMsgType(e);r?(this.subs_per_msg_type[r]=this.subs_per_msg_type[r]||[],this.subs_per_msg_type[r].push(t)):this.api.sanityErrors.next(new xe(\"Subscription type is not found in deriv-api\"))}},{key:\"removeKeyOnError\",value:function(e){var t=this;return function(){return t.completeSubsByKey(e)}}},{key:\"completeSubsByKey\",value:function(e){if(e&&this.sources[e]){var t=this.sources[e];delete this.sources[e];var r=this.key_to_subs_id[e];delete this.subs_id_to_key[r],delete this.key_to_subs_id[e],delete this.buy_key_to_contract_id[e],t.complete()}}},{key:\"getMsgType\",value:function(e){return this.streams_list.find((function(t){return t in e}))}}]),e}();function Ne(e){return Ee(e)}var Fe=function(e){d(f,e);var t,r,n,i,u,p,l=(u=f,p=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(u);if(p){var r=y(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return h(this,e)});function f(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.storage,n=t.app_id,i=t.connection,s=t.cache,u=void 0===s?new Ce:s,c=t.endpoint,p=void 0===c?\"ws.binaryws.com\":c,d=t.lang,h=void 0===d?\"EN\":d,y=t.brand,g=void 0===y?\"\":y,_=t.middleware,m=void 0===_?{}:_;if(o(this,f),(e=l.call(this)).events=new oe,i)e.connection=i;else{if(!n)throw Error(\"An app_id is required to connect to the API\");e.shouldReconnect=!0,e.connectionArgs={app_id:n,endpointUrl:Ue(p),lang:h.toUpperCase(),brand:g.toLowerCase()},e.connect()}return e.lang=h,e.reqId=0,e.connected=new Pe,e.sanityErrors=new oe,e.middleware=m,e.pendingRequests={},e.expect_response_types={},e.subscription_manager=new He(a(e)),e.reconnect_timeout=!1,e.keep_alive_interval=!1,r&&(e.storage=new je(a(e),r)),e.cache=new je(e.storage?e.storage:a(e),u),e.connectionHandlers(),e}return c(f,[{key:\"connectionHandlers\",value:function(){this.connection.onopen=this.openHandler.bind(this),this.connection.onclose=this.closeHandler.bind(this),this.connection.onmessage=this.messageHandler.bind(this),this.connection.onerror=this.errorHandler.bind(this)}},{key:\"connect\",value:function(){if(!this.connectionArgs)throw new Re(\"Connection arguments are required to create a connection.\");this.events.next({name:\"connect\"});var e=this.connectionArgs,t=e.endpointUrl,r=e.lang,n=e.app_id,i=e.brand;this.connection=new WebSocket(\"\".concat(t.toString(),\"websockets/v3?app_id=\").concat(n,\"&l=\").concat(r,\"&brand=\").concat(i))}},{key:\"disconnect\",value:function(){this.shouldReconnect=!1,this.connection.close()}},{key:\"isConnectionClosed\",value:function(){return 2===this.connection.readyState||3===this.connection.readyState}},{key:\"sendAndGetSource\",value:function(e){var t=this,r=new oe;return e.req_id=e.req_id||++this.reqId,this.pendingRequests[e.req_id]=r,this.connected.then((function(){t.isConnectionClosed()||t.connection.send(JSON.stringify(e))})).catch((function(e){return r.error(e)})),r}},{key:\"send\",value:(i=s(g().mark((function e(){var t,r,n,i,s,o,u,c,a=this,p=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=p.length,r=new Array(t),n=0;n<t;n++)r[n]=p[n];if(!(i=this.callMiddleware(\"sendWillBeCalled\",{args:r}))){e.next=4;break}return e.abrupt(\"return\",i);case 4:if(s=r[0],o=this.callMiddleware(\"requestDataTransformer\",s)||s,this.events.next({name:\"send\",data:o}),this.deleteFromExpectResponse(o),(u=this.sendAndGetSource(o).pipe(te()).toPromise()).then((function(e){a.cache.set(o,e),a.storage&&a.storage.set(o,e)}),(function(){})),!(c=this.callMiddleware(\"sendIsCalled\",{response_promise:u,args:r}))){e.next=13;break}return e.abrupt(\"return\",c);case 13:return e.abrupt(\"return\",u);case 14:case\"end\":return e.stop()}}),e,this)}))),function(){return i.apply(this,arguments)})},{key:\"callMiddleware\",value:function(e,t){if(e in this.middleware)return this.middleware[e](t)}},{key:\"subscribe\",value:function(e){var t=this.callMiddleware(\"requestDataTransformer\",e)||e;return this.subscription_manager.subscribe(t)}},{key:\"forget\",value:(n=s(g().mark((function e(t){return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",this.subscription_manager.forget(t));case 1:case\"end\":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:\"forgetAll\",value:(r=s(g().mark((function e(){var t,r=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt(\"return\",(t=this.subscription_manager).forgetAll.apply(t,r));case 1:case\"end\":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})},{key:\"keepAlivePing\",value:function(){this.ping({ping:1}),this.reconnect_timeout=setTimeout(this.reconnect.bind(this),5e3)}},{key:\"pong\",value:function(){this.reconnect_timeout&&(clearTimeout(this.reconnect_timeout),this.reconnect_timeout=!1)}},{key:\"openHandler\",value:function(){this.events.next({name:\"open\"}),this.shouldReconnect&&(this.keep_alive_interval=setInterval(this.keepAlivePing.bind(this),3e4)),1===this.connection.readyState?this.connected.resolve():setTimeout(this.openHandler.bind(this),50)}},{key:\"messageHandler\",value:function(e){if(e.data){var t=JSON.parse(e.data);this.reconnect_timeout&&\"pong\"===t.ping&&this.pong(),this.events.next({name:\"message\",data:t});var r=t.req_id;if(r in this.pendingRequests){var n=this.expect_response_types[t.msg_type];n&&n.isPending()&&n.resolve(t);var i=t.echo_req,s=i&&i.proposal_open_contract&&!i.contract_id;if(t.error&&!s)this.pendingRequests[r].error(t);else if(this.pendingRequests[r].isStopped&&t.subscription){var o=t.subscription.id;this.forget(o)}else this.pendingRequests[r].next(t)}else this.sanityErrors.next(new xe(\"Extra response\"))}else this.sanityErrors.next(new xe(\"Something went wrong while receiving the response from API.\"))}},{key:\"closeHandler\",value:function(){this.events.next({name:\"close\"}),this.shouldReconnect&&(this.events.next({name:\"reconnecting\"}),this.reconnect())}},{key:\"reconnect\",value:function(){this.shouldReconnect&&(this.keep_alive_interval&&(clearInterval(this.keep_alive_interval),this.keep_alive_interval=!1),this.pong(),this.connect(),this.connectionHandlers())}},{key:\"errorHandler\",value:function(){this.sanityErrors.next(new xe(\"Something went wrong while receiving the response from API.\"))}},{key:\"onClose\",value:function(){return this.events.pipe(C((function(e){return\"close\"===e.name})),ge())}},{key:\"onOpen\",value:function(){return this.events.pipe(C((function(e){return\"open\"===e.name})),ge())}},{key:\"onMessage\",value:function(){return this.events.pipe(C((function(e){return\"message\"===e.name})),ge())}},{key:\"expectResponse\",value:(t=s(g().mark((function e(){var t,r,n,i=this,s=arguments;return g().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:for(t=s.length,r=new Array(t),n=0;n<t;n++)r[n]=s[n];if(r.forEach((function(e){e in i.expect_response_types||(i.expect_response_types[e]=Ve(i.cache.getByMsgType(e).then((function(t){return!t&&i.storage?i.storage.getByMsgType(e):t}))))})),1!==r.length){e.next=4;break}return e.abrupt(\"return\",this.expect_response_types[r[0]]);case 4:return e.abrupt(\"return\",Promise.all(r.map((function(e){return i.expect_response_types[e]}))));case 5:case\"end\":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:\"deleteFromExpectResponse\",value:function(e){var t=Object.keys(this.expect_response_types).find((function(t){return t in e}));this.expect_response_types[t]&&!this.expect_response_types[t].isPending()&&delete this.expect_response_types[t]}}]),f}(_e);function Ue(r){if(\"string\"!=typeof r)throw new Re(\"Endpoint must be a string, passed: \".concat(t(r)));var n,i,s;try{var o=(i=r.match(/((?:\\w*:\\/\\/)*)(.*)/),s=3,function(e){if(Array.isArray(e))return e}(i)||function(e,t){var r=null==e?null:\"undefined\"!=typeof Symbol&&e[Symbol.iterator]||e[\"@@iterator\"];if(null!=r){var n,i,s=[],o=!0,u=!1;try{for(r=r.call(e);!(o=(n=r.next()).done)&&(s.push(n.value),!t||s.length!==t);o=!0);}catch(e){u=!0,i=e}finally{try{o||null==r.return||r.return()}finally{if(u)throw i}}return s}}(i,s)||function(t,r){if(t){if(\"string\"==typeof t)return e(t,r);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?e(t,r):void 0}}(i,s)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()),u=(o[0],o[1]),c=o[2];n=new URL(\"\".concat(\"ws://\"===u?u:\"wss://\").concat(c))}catch(e){throw new Re(\"Invalid URL: \".concat(r))}return n}function Ve(e){return Pe.wrap(e.then((function(e){return e||new Pe})))}})(),n.default})()}));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\n");

/***/ }),

/***/ "./Components/address-details/index.js":
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": () => (/* binding */ Components_address_details)\n});\n\n// EXTERNAL MODULE: external \"react\"\nvar external_react_ = __webpack_require__(\"react\");\nvar external_react_default = /*#__PURE__*/__webpack_require__.n(external_react_);\n// EXTERNAL MODULE: ../../../node_modules/classnames/index.js\nvar classnames = __webpack_require__(\"../../../node_modules/classnames/index.js\");\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n;// CONCATENATED MODULE: ../../../node_modules/formik/node_modules/deepmerge/dist/es.js\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\n/* harmony default export */ const es = (deepmerge_1);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_freeGlobal.js\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/* harmony default export */ const _freeGlobal = (freeGlobal);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_root.js\n\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = _freeGlobal || freeSelf || Function('return this')();\n\n/* harmony default export */ const _root = (root);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Symbol.js\n\n\n/** Built-in value references. */\nvar _Symbol_Symbol = _root.Symbol;\n\n/* harmony default export */ const _Symbol = (_Symbol_Symbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getRawTag.js\n\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _getRawTag_hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = _getRawTag_hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _getRawTag = (getRawTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_objectToString.js\n/** Used for built-in method references. */\nvar _objectToString_objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar _objectToString_nativeObjectToString = _objectToString_objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return _objectToString_nativeObjectToString.call(value);\n}\n\n/* harmony default export */ const _objectToString = (objectToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetTag.js\n\n\n\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar _baseGetTag_symToStringTag = _Symbol ? _Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (_baseGetTag_symToStringTag && _baseGetTag_symToStringTag in Object(value))\n    ? _getRawTag(value)\n    : _objectToString(value);\n}\n\n/* harmony default export */ const _baseGetTag = (baseGetTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_overArg.js\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/* harmony default export */ const _overArg = (overArg);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getPrototype.js\n\n\n/** Built-in value references. */\nvar getPrototype = _overArg(Object.getPrototypeOf, Object);\n\n/* harmony default export */ const _getPrototype = (getPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObjectLike.js\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/* harmony default export */ const lodash_es_isObjectLike = (isObjectLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isPlainObject.js\n\n\n\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    isPlainObject_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar isPlainObject_hasOwnProperty = isPlainObject_objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!lodash_es_isObjectLike(value) || _baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = _getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = isPlainObject_hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/* harmony default export */ const lodash_es_isPlainObject = (isPlainObject);\n\n// EXTERNAL MODULE: ../../../node_modules/react-fast-compare/index.js\nvar react_fast_compare = __webpack_require__(\"../../../node_modules/react-fast-compare/index.js\");\nvar react_fast_compare_default = /*#__PURE__*/__webpack_require__.n(react_fast_compare);\n;// CONCATENATED MODULE: ../../../node_modules/tiny-warning/dist/tiny-warning.esm.js\nvar isProduction = \"production\" === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\n/* harmony default export */ const tiny_warning_esm = (warning);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheClear.js\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/* harmony default export */ const _listCacheClear = (listCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/eq.js\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/* harmony default export */ const lodash_es_eq = (eq);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assocIndexOf.js\n\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (lodash_es_eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/* harmony default export */ const _assocIndexOf = (assocIndexOf);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheDelete.js\n\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/* harmony default export */ const _listCacheDelete = (listCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheGet.js\n\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/* harmony default export */ const _listCacheGet = (listCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheHas.js\n\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return _assocIndexOf(this.__data__, key) > -1;\n}\n\n/* harmony default export */ const _listCacheHas = (listCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_listCacheSet.js\n\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = _assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n/* harmony default export */ const _listCacheSet = (listCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_ListCache.js\n\n\n\n\n\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = _listCacheClear;\nListCache.prototype['delete'] = _listCacheDelete;\nListCache.prototype.get = _listCacheGet;\nListCache.prototype.has = _listCacheHas;\nListCache.prototype.set = _listCacheSet;\n\n/* harmony default export */ const _ListCache = (ListCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackClear.js\n\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new _ListCache;\n  this.size = 0;\n}\n\n/* harmony default export */ const _stackClear = (stackClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackDelete.js\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/* harmony default export */ const _stackDelete = (stackDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackGet.js\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/* harmony default export */ const _stackGet = (stackGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackHas.js\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/* harmony default export */ const _stackHas = (stackHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isObject.js\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/* harmony default export */ const lodash_es_isObject = (isObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isFunction.js\n\n\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!lodash_es_isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = _baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/* harmony default export */ const lodash_es_isFunction = (isFunction);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_coreJsData.js\n\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = _root[\"__core-js_shared__\"];\n\n/* harmony default export */ const _coreJsData = (coreJsData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isMasked.js\n\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(_coreJsData && _coreJsData.keys && _coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/* harmony default export */ const _isMasked = (isMasked);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toSource.js\n/** Used for built-in method references. */\nvar _toSource_funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _toSource_funcToString = _toSource_funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return _toSource_funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/* harmony default export */ const _toSource = (toSource);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsNative.js\n\n\n\n\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar _baseIsNative_funcProto = Function.prototype,\n    _baseIsNative_objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar _baseIsNative_funcToString = _baseIsNative_funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar _baseIsNative_hasOwnProperty = _baseIsNative_objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  _baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!lodash_es_isObject(value) || _isMasked(value)) {\n    return false;\n  }\n  var pattern = lodash_es_isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(_toSource(value));\n}\n\n/* harmony default export */ const _baseIsNative = (baseIsNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getValue.js\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/* harmony default export */ const _getValue = (getValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getNative.js\n\n\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = _getValue(object, key);\n  return _baseIsNative(value) ? value : undefined;\n}\n\n/* harmony default export */ const _getNative = (getNative);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Map.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Map_Map = _getNative(_root, 'Map');\n\n/* harmony default export */ const _Map = (_Map_Map);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeCreate.js\n\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = _getNative(Object, 'create');\n\n/* harmony default export */ const _nativeCreate = (nativeCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashClear.js\n\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = _nativeCreate ? _nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/* harmony default export */ const _hashClear = (hashClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashDelete.js\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _hashDelete = (hashDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashGet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar _hashGet_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashGet_hasOwnProperty = _hashGet_objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (_nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return _hashGet_hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/* harmony default export */ const _hashGet = (hashGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashHas.js\n\n\n/** Used for built-in method references. */\nvar _hashHas_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _hashHas_hasOwnProperty = _hashHas_objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return _nativeCreate ? (data[key] !== undefined) : _hashHas_hasOwnProperty.call(data, key);\n}\n\n/* harmony default export */ const _hashHas = (hashHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_hashSet.js\n\n\n/** Used to stand-in for `undefined` hash values. */\nvar _hashSet_HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (_nativeCreate && value === undefined) ? _hashSet_HASH_UNDEFINED : value;\n  return this;\n}\n\n/* harmony default export */ const _hashSet = (hashSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Hash.js\n\n\n\n\n\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = _hashClear;\nHash.prototype['delete'] = _hashDelete;\nHash.prototype.get = _hashGet;\nHash.prototype.has = _hashHas;\nHash.prototype.set = _hashSet;\n\n/* harmony default export */ const _Hash = (Hash);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheClear.js\n\n\n\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new _Hash,\n    'map': new (_Map || _ListCache),\n    'string': new _Hash\n  };\n}\n\n/* harmony default export */ const _mapCacheClear = (mapCacheClear);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isKeyable.js\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/* harmony default export */ const _isKeyable = (isKeyable);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getMapData.js\n\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return _isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/* harmony default export */ const _getMapData = (getMapData);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheDelete.js\n\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = _getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/* harmony default export */ const _mapCacheDelete = (mapCacheDelete);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheGet.js\n\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return _getMapData(this, key).get(key);\n}\n\n/* harmony default export */ const _mapCacheGet = (mapCacheGet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheHas.js\n\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return _getMapData(this, key).has(key);\n}\n\n/* harmony default export */ const _mapCacheHas = (mapCacheHas);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_mapCacheSet.js\n\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = _getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n/* harmony default export */ const _mapCacheSet = (mapCacheSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_MapCache.js\n\n\n\n\n\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = _mapCacheClear;\nMapCache.prototype['delete'] = _mapCacheDelete;\nMapCache.prototype.get = _mapCacheGet;\nMapCache.prototype.has = _mapCacheHas;\nMapCache.prototype.set = _mapCacheSet;\n\n/* harmony default export */ const _MapCache = (MapCache);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stackSet.js\n\n\n\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof _ListCache) {\n    var pairs = data.__data__;\n    if (!_Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new _MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n/* harmony default export */ const _stackSet = (stackSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Stack.js\n\n\n\n\n\n\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new _ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = _stackClear;\nStack.prototype['delete'] = _stackDelete;\nStack.prototype.get = _stackGet;\nStack.prototype.has = _stackHas;\nStack.prototype.set = _stackSet;\n\n/* harmony default export */ const _Stack = (Stack);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayEach.js\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayEach = (arrayEach);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_defineProperty.js\n\n\nvar defineProperty = (function() {\n  try {\n    var func = _getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _defineProperty = (defineProperty);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignValue.js\n\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && _defineProperty) {\n    _defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/* harmony default export */ const _baseAssignValue = (baseAssignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_assignValue.js\n\n\n\n/** Used for built-in method references. */\nvar _assignValue_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _assignValue_hasOwnProperty = _assignValue_objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(_assignValue_hasOwnProperty.call(object, key) && lodash_es_eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    _baseAssignValue(object, key, value);\n  }\n}\n\n/* harmony default export */ const _assignValue = (assignValue);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyObject.js\n\n\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      _baseAssignValue(object, key, newValue);\n    } else {\n      _assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/* harmony default export */ const _copyObject = (copyObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseTimes.js\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseTimes = (baseTimes);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsArguments.js\n\n\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return lodash_es_isObjectLike(value) && _baseGetTag(value) == argsTag;\n}\n\n/* harmony default export */ const _baseIsArguments = (baseIsArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArguments.js\n\n\n\n/** Used for built-in method references. */\nvar isArguments_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar isArguments_hasOwnProperty = isArguments_objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = isArguments_objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = _baseIsArguments(function() { return arguments; }()) ? _baseIsArguments : function(value) {\n  return lodash_es_isObjectLike(value) && isArguments_hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/* harmony default export */ const lodash_es_isArguments = (isArguments);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArray.js\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/* harmony default export */ const lodash_es_isArray = (isArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubFalse.js\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\n/* harmony default export */ const lodash_es_stubFalse = (stubFalse);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isBuffer.js\n\n\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? _root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || lodash_es_stubFalse;\n\n/* harmony default export */ const lodash_es_isBuffer = (isBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isIndex.js\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/* harmony default export */ const _isIndex = (isIndex);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isLength.js\n/** Used as references for various `Number` constants. */\nvar isLength_MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= isLength_MAX_SAFE_INTEGER;\n}\n\n/* harmony default export */ const lodash_es_isLength = (isLength);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsTypedArray.js\n\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsTypedArray_argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    _baseIsTypedArray_funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    _baseIsTypedArray_objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[_baseIsTypedArray_argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[_baseIsTypedArray_funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[_baseIsTypedArray_objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return lodash_es_isObjectLike(value) &&\n    lodash_es_isLength(value.length) && !!typedArrayTags[_baseGetTag(value)];\n}\n\n/* harmony default export */ const _baseIsTypedArray = (baseIsTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseUnary.js\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/* harmony default export */ const _baseUnary = (baseUnary);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nodeUtil.js\n\n\n/** Detect free variable `exports`. */\nvar _nodeUtil_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _nodeUtil_freeModule = _nodeUtil_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _nodeUtil_moduleExports = _nodeUtil_freeModule && _nodeUtil_freeModule.exports === _nodeUtil_freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = _nodeUtil_moduleExports && _freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = _nodeUtil_freeModule && _nodeUtil_freeModule.require && _nodeUtil_freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* harmony default export */ const _nodeUtil = (nodeUtil);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isTypedArray.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = _nodeUtil && _nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? _baseUnary(nodeIsTypedArray) : _baseIsTypedArray;\n\n/* harmony default export */ const lodash_es_isTypedArray = (isTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayLikeKeys.js\n\n\n\n\n\n\n\n/** Used for built-in method references. */\nvar _arrayLikeKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _arrayLikeKeys_hasOwnProperty = _arrayLikeKeys_objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = lodash_es_isArray(value),\n      isArg = !isArr && lodash_es_isArguments(value),\n      isBuff = !isArr && !isArg && lodash_es_isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && lodash_es_isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? _baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || _arrayLikeKeys_hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           _isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayLikeKeys = (arrayLikeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_isPrototype.js\n/** Used for built-in method references. */\nvar _isPrototype_objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || _isPrototype_objectProto;\n\n  return value === proto;\n}\n\n/* harmony default export */ const _isPrototype = (isPrototype);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeys.js\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = _overArg(Object.keys, Object);\n\n/* harmony default export */ const _nativeKeys = (nativeKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeys.js\n\n\n\n/** Used for built-in method references. */\nvar _baseKeys_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeys_hasOwnProperty = _baseKeys_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!_isPrototype(object)) {\n    return _nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (_baseKeys_hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeys = (baseKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isArrayLike.js\n\n\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && lodash_es_isLength(value.length) && !lodash_es_isFunction(value);\n}\n\n/* harmony default export */ const lodash_es_isArrayLike = (isArrayLike);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keys.js\n\n\n\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object) : _baseKeys(object);\n}\n\n/* harmony default export */ const lodash_es_keys = (keys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssign.js\n\n\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && _copyObject(source, lodash_es_keys(source), object);\n}\n\n/* harmony default export */ const _baseAssign = (baseAssign);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_nativeKeysIn.js\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _nativeKeysIn = (nativeKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseKeysIn.js\n\n\n\n\n/** Used for built-in method references. */\nvar _baseKeysIn_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _baseKeysIn_hasOwnProperty = _baseKeysIn_objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!lodash_es_isObject(object)) {\n    return _nativeKeysIn(object);\n  }\n  var isProto = _isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !_baseKeysIn_hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _baseKeysIn = (baseKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/keysIn.js\n\n\n\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return lodash_es_isArrayLike(object) ? _arrayLikeKeys(object, true) : _baseKeysIn(object);\n}\n\n/* harmony default export */ const lodash_es_keysIn = (keysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseAssignIn.js\n\n\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && _copyObject(source, lodash_es_keysIn(source), object);\n}\n\n/* harmony default export */ const _baseAssignIn = (baseAssignIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneBuffer.js\n\n\n/** Detect free variable `exports`. */\nvar _cloneBuffer_freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar _cloneBuffer_freeModule = _cloneBuffer_freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar _cloneBuffer_moduleExports = _cloneBuffer_freeModule && _cloneBuffer_freeModule.exports === _cloneBuffer_freeExports;\n\n/** Built-in value references. */\nvar _cloneBuffer_Buffer = _cloneBuffer_moduleExports ? _root.Buffer : undefined,\n    allocUnsafe = _cloneBuffer_Buffer ? _cloneBuffer_Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/* harmony default export */ const _cloneBuffer = (cloneBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copyArray.js\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _copyArray = (copyArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayFilter.js\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayFilter = (arrayFilter);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/stubArray.js\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\n/* harmony default export */ const lodash_es_stubArray = (stubArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbols.js\n\n\n\n/** Used for built-in method references. */\nvar _getSymbols_objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar _getSymbols_propertyIsEnumerable = _getSymbols_objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return _arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return _getSymbols_propertyIsEnumerable.call(object, symbol);\n  });\n};\n\n/* harmony default export */ const _getSymbols = (getSymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbols.js\n\n\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return _copyObject(source, _getSymbols(source), object);\n}\n\n/* harmony default export */ const _copySymbols = (copySymbols);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayPush.js\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/* harmony default export */ const _arrayPush = (arrayPush);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getSymbolsIn.js\n\n\n\n\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar _getSymbolsIn_nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !_getSymbolsIn_nativeGetSymbols ? lodash_es_stubArray : function(object) {\n  var result = [];\n  while (object) {\n    _arrayPush(result, _getSymbols(object));\n    object = _getPrototype(object);\n  }\n  return result;\n};\n\n/* harmony default export */ const _getSymbolsIn = (getSymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_copySymbolsIn.js\n\n\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return _copyObject(source, _getSymbolsIn(source), object);\n}\n\n/* harmony default export */ const _copySymbolsIn = (copySymbolsIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseGetAllKeys.js\n\n\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return lodash_es_isArray(object) ? result : _arrayPush(result, symbolsFunc(object));\n}\n\n/* harmony default export */ const _baseGetAllKeys = (baseGetAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeys.js\n\n\n\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return _baseGetAllKeys(object, lodash_es_keys, _getSymbols);\n}\n\n/* harmony default export */ const _getAllKeys = (getAllKeys);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getAllKeysIn.js\n\n\n\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return _baseGetAllKeys(object, lodash_es_keysIn, _getSymbolsIn);\n}\n\n/* harmony default export */ const _getAllKeysIn = (getAllKeysIn);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_DataView.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar DataView = _getNative(_root, 'DataView');\n\n/* harmony default export */ const _DataView = (DataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Promise.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Promise_Promise = _getNative(_root, 'Promise');\n\n/* harmony default export */ const _Promise = (_Promise_Promise);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Set.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _Set_Set = _getNative(_root, 'Set');\n\n/* harmony default export */ const _Set = (_Set_Set);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_WeakMap.js\n\n\n\n/* Built-in method references that are verified to be native. */\nvar _WeakMap_WeakMap = _getNative(_root, 'WeakMap');\n\n/* harmony default export */ const _WeakMap = (_WeakMap_WeakMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_getTag.js\n\n\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _getTag_mapTag = '[object Map]',\n    _getTag_objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    _getTag_setTag = '[object Set]',\n    _getTag_weakMapTag = '[object WeakMap]';\n\nvar _getTag_dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = _toSource(_DataView),\n    mapCtorString = _toSource(_Map),\n    promiseCtorString = _toSource(_Promise),\n    setCtorString = _toSource(_Set),\n    weakMapCtorString = _toSource(_WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = _baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((_DataView && getTag(new _DataView(new ArrayBuffer(1))) != _getTag_dataViewTag) ||\n    (_Map && getTag(new _Map) != _getTag_mapTag) ||\n    (_Promise && getTag(_Promise.resolve()) != promiseTag) ||\n    (_Set && getTag(new _Set) != _getTag_setTag) ||\n    (_WeakMap && getTag(new _WeakMap) != _getTag_weakMapTag)) {\n  getTag = function(value) {\n    var result = _baseGetTag(value),\n        Ctor = result == _getTag_objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? _toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return _getTag_dataViewTag;\n        case mapCtorString: return _getTag_mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return _getTag_setTag;\n        case weakMapCtorString: return _getTag_weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/* harmony default export */ const _getTag = (getTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneArray.js\n/** Used for built-in method references. */\nvar _initCloneArray_objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar _initCloneArray_hasOwnProperty = _initCloneArray_objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && _initCloneArray_hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\n/* harmony default export */ const _initCloneArray = (initCloneArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_Uint8Array.js\n\n\n/** Built-in value references. */\nvar Uint8Array = _root.Uint8Array;\n\n/* harmony default export */ const _Uint8Array = (Uint8Array);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneArrayBuffer.js\n\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new _Uint8Array(result).set(new _Uint8Array(arrayBuffer));\n  return result;\n}\n\n/* harmony default export */ const _cloneArrayBuffer = (cloneArrayBuffer);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneDataView.js\n\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\n/* harmony default export */ const _cloneDataView = (cloneDataView);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneRegExp.js\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\n/* harmony default export */ const _cloneRegExp = (cloneRegExp);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneSymbol.js\n\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\n/* harmony default export */ const _cloneSymbol = (cloneSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_cloneTypedArray.js\n\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? _cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/* harmony default export */ const _cloneTypedArray = (cloneTypedArray);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneByTag.js\n\n\n\n\n\n\n/** `Object#toString` result references. */\nvar _initCloneByTag_boolTag = '[object Boolean]',\n    _initCloneByTag_dateTag = '[object Date]',\n    _initCloneByTag_mapTag = '[object Map]',\n    _initCloneByTag_numberTag = '[object Number]',\n    _initCloneByTag_regexpTag = '[object RegExp]',\n    _initCloneByTag_setTag = '[object Set]',\n    _initCloneByTag_stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar _initCloneByTag_arrayBufferTag = '[object ArrayBuffer]',\n    _initCloneByTag_dataViewTag = '[object DataView]',\n    _initCloneByTag_float32Tag = '[object Float32Array]',\n    _initCloneByTag_float64Tag = '[object Float64Array]',\n    _initCloneByTag_int8Tag = '[object Int8Array]',\n    _initCloneByTag_int16Tag = '[object Int16Array]',\n    _initCloneByTag_int32Tag = '[object Int32Array]',\n    _initCloneByTag_uint8Tag = '[object Uint8Array]',\n    _initCloneByTag_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _initCloneByTag_uint16Tag = '[object Uint16Array]',\n    _initCloneByTag_uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case _initCloneByTag_arrayBufferTag:\n      return _cloneArrayBuffer(object);\n\n    case _initCloneByTag_boolTag:\n    case _initCloneByTag_dateTag:\n      return new Ctor(+object);\n\n    case _initCloneByTag_dataViewTag:\n      return _cloneDataView(object, isDeep);\n\n    case _initCloneByTag_float32Tag: case _initCloneByTag_float64Tag:\n    case _initCloneByTag_int8Tag: case _initCloneByTag_int16Tag: case _initCloneByTag_int32Tag:\n    case _initCloneByTag_uint8Tag: case _initCloneByTag_uint8ClampedTag: case _initCloneByTag_uint16Tag: case _initCloneByTag_uint32Tag:\n      return _cloneTypedArray(object, isDeep);\n\n    case _initCloneByTag_mapTag:\n      return new Ctor;\n\n    case _initCloneByTag_numberTag:\n    case _initCloneByTag_stringTag:\n      return new Ctor(object);\n\n    case _initCloneByTag_regexpTag:\n      return _cloneRegExp(object);\n\n    case _initCloneByTag_setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return _cloneSymbol(object);\n  }\n}\n\n/* harmony default export */ const _initCloneByTag = (initCloneByTag);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseCreate.js\n\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!lodash_es_isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/* harmony default export */ const _baseCreate = (baseCreate);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_initCloneObject.js\n\n\n\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !_isPrototype(object))\n    ? _baseCreate(_getPrototype(object))\n    : {};\n}\n\n/* harmony default export */ const _initCloneObject = (initCloneObject);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsMap.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsMap_mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsMap_mapTag;\n}\n\n/* harmony default export */ const _baseIsMap = (baseIsMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isMap.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsMap = _nodeUtil && _nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? _baseUnary(nodeIsMap) : _baseIsMap;\n\n/* harmony default export */ const lodash_es_isMap = (isMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseIsSet.js\n\n\n\n/** `Object#toString` result references. */\nvar _baseIsSet_setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return lodash_es_isObjectLike(value) && _getTag(value) == _baseIsSet_setTag;\n}\n\n/* harmony default export */ const _baseIsSet = (baseIsSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSet.js\n\n\n\n\n/* Node.js helper references. */\nvar nodeIsSet = _nodeUtil && _nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? _baseUnary(nodeIsSet) : _baseIsSet;\n\n/* harmony default export */ const lodash_es_isSet = (isSet);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseClone.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar _baseClone_argsTag = '[object Arguments]',\n    _baseClone_arrayTag = '[object Array]',\n    _baseClone_boolTag = '[object Boolean]',\n    _baseClone_dateTag = '[object Date]',\n    _baseClone_errorTag = '[object Error]',\n    _baseClone_funcTag = '[object Function]',\n    _baseClone_genTag = '[object GeneratorFunction]',\n    _baseClone_mapTag = '[object Map]',\n    _baseClone_numberTag = '[object Number]',\n    _baseClone_objectTag = '[object Object]',\n    _baseClone_regexpTag = '[object RegExp]',\n    _baseClone_setTag = '[object Set]',\n    _baseClone_stringTag = '[object String]',\n    _baseClone_symbolTag = '[object Symbol]',\n    _baseClone_weakMapTag = '[object WeakMap]';\n\nvar _baseClone_arrayBufferTag = '[object ArrayBuffer]',\n    _baseClone_dataViewTag = '[object DataView]',\n    _baseClone_float32Tag = '[object Float32Array]',\n    _baseClone_float64Tag = '[object Float64Array]',\n    _baseClone_int8Tag = '[object Int8Array]',\n    _baseClone_int16Tag = '[object Int16Array]',\n    _baseClone_int32Tag = '[object Int32Array]',\n    _baseClone_uint8Tag = '[object Uint8Array]',\n    _baseClone_uint8ClampedTag = '[object Uint8ClampedArray]',\n    _baseClone_uint16Tag = '[object Uint16Array]',\n    _baseClone_uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[_baseClone_argsTag] = cloneableTags[_baseClone_arrayTag] =\ncloneableTags[_baseClone_arrayBufferTag] = cloneableTags[_baseClone_dataViewTag] =\ncloneableTags[_baseClone_boolTag] = cloneableTags[_baseClone_dateTag] =\ncloneableTags[_baseClone_float32Tag] = cloneableTags[_baseClone_float64Tag] =\ncloneableTags[_baseClone_int8Tag] = cloneableTags[_baseClone_int16Tag] =\ncloneableTags[_baseClone_int32Tag] = cloneableTags[_baseClone_mapTag] =\ncloneableTags[_baseClone_numberTag] = cloneableTags[_baseClone_objectTag] =\ncloneableTags[_baseClone_regexpTag] = cloneableTags[_baseClone_setTag] =\ncloneableTags[_baseClone_stringTag] = cloneableTags[_baseClone_symbolTag] =\ncloneableTags[_baseClone_uint8Tag] = cloneableTags[_baseClone_uint8ClampedTag] =\ncloneableTags[_baseClone_uint16Tag] = cloneableTags[_baseClone_uint32Tag] = true;\ncloneableTags[_baseClone_errorTag] = cloneableTags[_baseClone_funcTag] =\ncloneableTags[_baseClone_weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!lodash_es_isObject(value)) {\n    return value;\n  }\n  var isArr = lodash_es_isArray(value);\n  if (isArr) {\n    result = _initCloneArray(value);\n    if (!isDeep) {\n      return _copyArray(value, result);\n    }\n  } else {\n    var tag = _getTag(value),\n        isFunc = tag == _baseClone_funcTag || tag == _baseClone_genTag;\n\n    if (lodash_es_isBuffer(value)) {\n      return _cloneBuffer(value, isDeep);\n    }\n    if (tag == _baseClone_objectTag || tag == _baseClone_argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : _initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? _copySymbolsIn(value, _baseAssignIn(result, value))\n          : _copySymbols(value, _baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = _initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new _Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (lodash_es_isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (lodash_es_isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? _getAllKeysIn : _getAllKeys)\n    : (isFlat ? lodash_es_keysIn : lodash_es_keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  _arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    _assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\n/* harmony default export */ const _baseClone = (baseClone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/clone.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar clone_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return _baseClone(value, clone_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_clone = (clone);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_arrayMap.js\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\n/* harmony default export */ const _arrayMap = (arrayMap);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/isSymbol.js\n\n\n\n/** `Object#toString` result references. */\nvar isSymbol_symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (lodash_es_isObjectLike(value) && _baseGetTag(value) == isSymbol_symbolTag);\n}\n\n/* harmony default export */ const lodash_es_isSymbol = (isSymbol);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/memoize.js\n\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || _MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = _MapCache;\n\n/* harmony default export */ const lodash_es_memoize = (memoize);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_memoizeCapped.js\n\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = lodash_es_memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\n/* harmony default export */ const _memoizeCapped = (memoizeCapped);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_stringToPath.js\n\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = _memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/* harmony default export */ const _stringToPath = (stringToPath);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_toKey.js\n\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || lodash_es_isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _toKey = (toKey);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/_baseToString.js\n\n\n\n\n\n/** Used as references for various `Number` constants. */\nvar _baseToString_INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar _baseToString_symbolProto = _Symbol ? _Symbol.prototype : undefined,\n    symbolToString = _baseToString_symbolProto ? _baseToString_symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (lodash_es_isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return _arrayMap(value, baseToString) + '';\n  }\n  if (lodash_es_isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -_baseToString_INFINITY) ? '-0' : result;\n}\n\n/* harmony default export */ const _baseToString = (baseToString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toString.js\n\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString_toString(value) {\n  return value == null ? '' : _baseToString(value);\n}\n\n/* harmony default export */ const lodash_es_toString = (toString_toString);\n\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/toPath.js\n\n\n\n\n\n\n\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (lodash_es_isArray(value)) {\n    return _arrayMap(value, _toKey);\n  }\n  return lodash_es_isSymbol(value) ? [value] : _copyArray(_stringToPath(lodash_es_toString(value)));\n}\n\n/* harmony default export */ const lodash_es_toPath = (toPath);\n\n// EXTERNAL MODULE: ../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\nvar hoist_non_react_statics_cjs = __webpack_require__(\"../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\");\n;// CONCATENATED MODULE: ../../../node_modules/lodash-es/cloneDeep.js\n\n\n/** Used to compose bitmasks for cloning. */\nvar cloneDeep_CLONE_DEEP_FLAG = 1,\n    cloneDeep_CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return _baseClone(value, cloneDeep_CLONE_DEEP_FLAG | cloneDeep_CLONE_SYMBOLS_FLAG);\n}\n\n/* harmony default export */ const lodash_es_cloneDeep = (cloneDeep);\n\n;// CONCATENATED MODULE: ../../../node_modules/formik/dist/formik.esm.js\n\n\n\n\n\n\n\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nvar FormikContext = /*#__PURE__*/(0,external_react_.createContext)(undefined);\nFormikContext.displayName = 'FormikContext';\nvar FormikProvider = FormikContext.Provider;\nvar FormikConsumer = FormikContext.Consumer;\nfunction useFormikContext() {\n  var formik = (0,external_react_.useContext)(FormikContext);\n  !!!formik ?  false ? 0 : tiny_warning_esm(false) : void 0;\n  return formik;\n}\n\n/** @private is the value an empty array? */\n\nvar isEmptyArray = function isEmptyArray(value) {\n  return Array.isArray(value) && value.length === 0;\n};\n/** @private is the given object a Function? */\n\nvar formik_esm_isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n/** @private is the given object an Object? */\n\nvar formik_esm_isObject = function isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n};\n/** @private is the given object an integer? */\n\nvar isInteger = function isInteger(obj) {\n  return String(Math.floor(Number(obj))) === obj;\n};\n/** @private is the given object a string? */\n\nvar isString = function isString(obj) {\n  return Object.prototype.toString.call(obj) === '[object String]';\n};\n/** @private is the given object a NaN? */\n// eslint-disable-next-line no-self-compare\n\nvar isNaN$1 = function isNaN(obj) {\n  return obj !== obj;\n};\n/** @private Does a React component have exactly 0 children? */\n\nvar isEmptyChildren = function isEmptyChildren(children) {\n  return external_react_.Children.count(children) === 0;\n};\n/** @private is the given object/value a promise? */\n\nvar isPromise = function isPromise(value) {\n  return formik_esm_isObject(value) && formik_esm_isFunction(value.then);\n};\n/** @private is the given object/value a type of synthetic event? */\n\nvar isInputEvent = function isInputEvent(value) {\n  return value && formik_esm_isObject(value) && formik_esm_isObject(value.target);\n};\n/**\r\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\r\n * not safe to call document.activeElement if there is nothing focused.\r\n *\r\n * The activeElement will be null only if the document or document body is not\r\n * yet defined.\r\n *\r\n * @param {?Document} doc Defaults to current document.\r\n * @return {Element | null}\r\n * @see https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/dom/getActiveElement.js\r\n */\n\nfunction getActiveElement(doc) {\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n/**\r\n * Deeply get a value from an object via its path.\r\n */\n\nfunction getIn(obj, key, def, p) {\n  if (p === void 0) {\n    p = 0;\n  }\n\n  var path = lodash_es_toPath(key);\n\n  while (obj && p < path.length) {\n    obj = obj[path[p++]];\n  } // check if path is not in the end\n\n\n  if (p !== path.length && !obj) {\n    return def;\n  }\n\n  return obj === undefined ? def : obj;\n}\n/**\r\n * Deeply set a value from in object via it's path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\n\nfunction setIn(obj, path, value) {\n  var res = lodash_es_clone(obj); // this keeps inheritance when obj is a class\n\n  var resVal = res;\n  var i = 0;\n  var pathArray = lodash_es_toPath(path);\n\n  for (; i < pathArray.length - 1; i++) {\n    var currentPath = pathArray[i];\n    var currentObj = getIn(obj, pathArray.slice(0, i + 1));\n\n    if (currentObj && (formik_esm_isObject(currentObj) || Array.isArray(currentObj))) {\n      resVal = resVal[currentPath] = lodash_es_clone(currentObj);\n    } else {\n      var nextPath = pathArray[i + 1];\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\n    }\n  } // Return original object if new value is the same as current\n\n\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\n    return obj;\n  }\n\n  if (value === undefined) {\n    delete resVal[pathArray[i]];\n  } else {\n    resVal[pathArray[i]] = value;\n  } // If the path array has a single element, the loop did not run.\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\n\n\n  if (i === 0 && value === undefined) {\n    delete res[pathArray[i]];\n  }\n\n  return res;\n}\n/**\r\n * Recursively a set the same value for all keys and arrays nested object, cloning\r\n * @param object\r\n * @param value\r\n * @param visited\r\n * @param response\r\n */\n\nfunction setNestedObjectValues(object, value, visited, response) {\n  if (visited === void 0) {\n    visited = new WeakMap();\n  }\n\n  if (response === void 0) {\n    response = {};\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(object); _i < _Object$keys.length; _i++) {\n    var k = _Object$keys[_i];\n    var val = object[k];\n\n    if (formik_esm_isObject(val)) {\n      if (!visited.get(val)) {\n        visited.set(val, true); // In order to keep array values consistent for both dot path  and\n        // bracket syntax, we need to check if this is an array so that\n        // this will output  { friends: [true] } and not { friends: { \"0\": true } }\n\n        response[k] = Array.isArray(val) ? [] : {};\n        setNestedObjectValues(val, value, visited, response[k]);\n      }\n    } else {\n      response[k] = value;\n    }\n  }\n\n  return response;\n}\n\nfunction formikReducer(state, msg) {\n  switch (msg.type) {\n    case 'SET_VALUES':\n      return _extends({}, state, {\n        values: msg.payload\n      });\n\n    case 'SET_TOUCHED':\n      return _extends({}, state, {\n        touched: msg.payload\n      });\n\n    case 'SET_ERRORS':\n      if (react_fast_compare_default()(state.errors, msg.payload)) {\n        return state;\n      }\n\n      return _extends({}, state, {\n        errors: msg.payload\n      });\n\n    case 'SET_STATUS':\n      return _extends({}, state, {\n        status: msg.payload\n      });\n\n    case 'SET_ISSUBMITTING':\n      return _extends({}, state, {\n        isSubmitting: msg.payload\n      });\n\n    case 'SET_ISVALIDATING':\n      return _extends({}, state, {\n        isValidating: msg.payload\n      });\n\n    case 'SET_FIELD_VALUE':\n      return _extends({}, state, {\n        values: setIn(state.values, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_TOUCHED':\n      return _extends({}, state, {\n        touched: setIn(state.touched, msg.payload.field, msg.payload.value)\n      });\n\n    case 'SET_FIELD_ERROR':\n      return _extends({}, state, {\n        errors: setIn(state.errors, msg.payload.field, msg.payload.value)\n      });\n\n    case 'RESET_FORM':\n      return _extends({}, state, msg.payload);\n\n    case 'SET_FORMIK_STATE':\n      return msg.payload(state);\n\n    case 'SUBMIT_ATTEMPT':\n      return _extends({}, state, {\n        touched: setNestedObjectValues(state.values, true),\n        isSubmitting: true,\n        submitCount: state.submitCount + 1\n      });\n\n    case 'SUBMIT_FAILURE':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    case 'SUBMIT_SUCCESS':\n      return _extends({}, state, {\n        isSubmitting: false\n      });\n\n    default:\n      return state;\n  }\n} // Initial empty states // objects\n\n\nvar emptyErrors = {};\nvar emptyTouched = {};\nfunction useFormik(_ref) {\n  var _ref$validateOnChange = _ref.validateOnChange,\n      validateOnChange = _ref$validateOnChange === void 0 ? true : _ref$validateOnChange,\n      _ref$validateOnBlur = _ref.validateOnBlur,\n      validateOnBlur = _ref$validateOnBlur === void 0 ? true : _ref$validateOnBlur,\n      _ref$validateOnMount = _ref.validateOnMount,\n      validateOnMount = _ref$validateOnMount === void 0 ? false : _ref$validateOnMount,\n      isInitialValid = _ref.isInitialValid,\n      _ref$enableReinitiali = _ref.enableReinitialize,\n      enableReinitialize = _ref$enableReinitiali === void 0 ? false : _ref$enableReinitiali,\n      onSubmit = _ref.onSubmit,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"validateOnChange\", \"validateOnBlur\", \"validateOnMount\", \"isInitialValid\", \"enableReinitialize\", \"onSubmit\"]);\n\n  var props = _extends({\n    validateOnChange: validateOnChange,\n    validateOnBlur: validateOnBlur,\n    validateOnMount: validateOnMount,\n    onSubmit: onSubmit\n  }, rest);\n\n  var initialValues = (0,external_react_.useRef)(props.initialValues);\n  var initialErrors = (0,external_react_.useRef)(props.initialErrors || emptyErrors);\n  var initialTouched = (0,external_react_.useRef)(props.initialTouched || emptyTouched);\n  var initialStatus = (0,external_react_.useRef)(props.initialStatus);\n  var isMounted = (0,external_react_.useRef)(false);\n  var fieldRegistry = (0,external_react_.useRef)({});\n\n  if (false) {}\n\n  (0,external_react_.useEffect)(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n\n  var _React$useState = (0,external_react_.useState)(0),\n      setIteration = _React$useState[1];\n\n  var stateRef = (0,external_react_.useRef)({\n    values: props.initialValues,\n    errors: props.initialErrors || emptyErrors,\n    touched: props.initialTouched || emptyTouched,\n    status: props.initialStatus,\n    isSubmitting: false,\n    isValidating: false,\n    submitCount: 0\n  });\n  var state = stateRef.current;\n  var dispatch = (0,external_react_.useCallback)(function (action) {\n    var prev = stateRef.current;\n    stateRef.current = formikReducer(prev, action); // force rerender\n\n    if (prev !== stateRef.current) setIteration(function (x) {\n      return x + 1;\n    });\n  }, []);\n  var runValidateHandler = (0,external_react_.useCallback)(function (values, field) {\n    return new Promise(function (resolve, reject) {\n      var maybePromisedErrors = props.validate(values, field);\n\n      if (maybePromisedErrors == null) {\n        // use loose null check here on purpose\n        resolve(emptyErrors);\n      } else if (isPromise(maybePromisedErrors)) {\n        maybePromisedErrors.then(function (errors) {\n          resolve(errors || emptyErrors);\n        }, function (actualException) {\n          if (false) {}\n\n          reject(actualException);\n        });\n      } else {\n        resolve(maybePromisedErrors);\n      }\n    });\n  }, [props.validate]);\n  /**\r\n   * Run validation against a Yup schema and optionally run a function if successful\r\n   */\n\n  var runValidationSchema = (0,external_react_.useCallback)(function (values, field) {\n    var validationSchema = props.validationSchema;\n    var schema = formik_esm_isFunction(validationSchema) ? validationSchema(field) : validationSchema;\n    var promise = field && schema.validateAt ? schema.validateAt(field, values) : validateYupSchema(values, schema);\n    return new Promise(function (resolve, reject) {\n      promise.then(function () {\n        resolve(emptyErrors);\n      }, function (err) {\n        // Yup will throw a validation error if validation fails. We catch those and\n        // resolve them into Formik errors. We can sniff if something is a Yup error\n        // by checking error.name.\n        // @see https://github.com/jquense/yup#validationerrorerrors-string--arraystring-value-any-path-string\n        if (err.name === 'ValidationError') {\n          resolve(yupToFormErrors(err));\n        } else {\n          // We throw any other errors\n          if (false) {}\n\n          reject(err);\n        }\n      });\n    });\n  }, [props.validationSchema]);\n  var runSingleFieldLevelValidation = (0,external_react_.useCallback)(function (field, value) {\n    return new Promise(function (resolve) {\n      return resolve(fieldRegistry.current[field].validate(value));\n    });\n  }, []);\n  var runFieldLevelValidations = (0,external_react_.useCallback)(function (values) {\n    var fieldKeysWithValidation = Object.keys(fieldRegistry.current).filter(function (f) {\n      return formik_esm_isFunction(fieldRegistry.current[f].validate);\n    }); // Construct an array with all of the field validation functions\n\n    var fieldValidations = fieldKeysWithValidation.length > 0 ? fieldKeysWithValidation.map(function (f) {\n      return runSingleFieldLevelValidation(f, getIn(values, f));\n    }) : [Promise.resolve('DO_NOT_DELETE_YOU_WILL_BE_FIRED')]; // use special case ;)\n\n    return Promise.all(fieldValidations).then(function (fieldErrorsList) {\n      return fieldErrorsList.reduce(function (prev, curr, index) {\n        if (curr === 'DO_NOT_DELETE_YOU_WILL_BE_FIRED') {\n          return prev;\n        }\n\n        if (curr) {\n          prev = setIn(prev, fieldKeysWithValidation[index], curr);\n        }\n\n        return prev;\n      }, {});\n    });\n  }, [runSingleFieldLevelValidation]); // Run all validations and return the result\n\n  var runAllValidations = (0,external_react_.useCallback)(function (values) {\n    return Promise.all([runFieldLevelValidations(values), props.validationSchema ? runValidationSchema(values) : {}, props.validate ? runValidateHandler(values) : {}]).then(function (_ref2) {\n      var fieldErrors = _ref2[0],\n          schemaErrors = _ref2[1],\n          validateErrors = _ref2[2];\n      var combinedErrors = es.all([fieldErrors, schemaErrors, validateErrors], {\n        arrayMerge: arrayMerge\n      });\n      return combinedErrors;\n    });\n  }, [props.validate, props.validationSchema, runFieldLevelValidations, runValidateHandler, runValidationSchema]); // Run all validations methods and update state accordingly\n\n  var validateFormWithHighPriority = useEventCallback(function (values) {\n    if (values === void 0) {\n      values = state.values;\n    }\n\n    dispatch({\n      type: 'SET_ISVALIDATING',\n      payload: true\n    });\n    return runAllValidations(values).then(function (combinedErrors) {\n      if (!!isMounted.current) {\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n        dispatch({\n          type: 'SET_ERRORS',\n          payload: combinedErrors\n        });\n      }\n\n      return combinedErrors;\n    });\n  });\n  (0,external_react_.useEffect)(function () {\n    if (validateOnMount && isMounted.current === true && react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      validateFormWithHighPriority(initialValues.current);\n    }\n  }, [validateOnMount, validateFormWithHighPriority]);\n  var resetForm = (0,external_react_.useCallback)(function (nextState) {\n    var values = nextState && nextState.values ? nextState.values : initialValues.current;\n    var errors = nextState && nextState.errors ? nextState.errors : initialErrors.current ? initialErrors.current : props.initialErrors || {};\n    var touched = nextState && nextState.touched ? nextState.touched : initialTouched.current ? initialTouched.current : props.initialTouched || {};\n    var status = nextState && nextState.status ? nextState.status : initialStatus.current ? initialStatus.current : props.initialStatus;\n    initialValues.current = values;\n    initialErrors.current = errors;\n    initialTouched.current = touched;\n    initialStatus.current = status;\n\n    var dispatchFn = function dispatchFn() {\n      dispatch({\n        type: 'RESET_FORM',\n        payload: {\n          isSubmitting: !!nextState && !!nextState.isSubmitting,\n          errors: errors,\n          touched: touched,\n          status: status,\n          values: values,\n          isValidating: !!nextState && !!nextState.isValidating,\n          submitCount: !!nextState && !!nextState.submitCount && typeof nextState.submitCount === 'number' ? nextState.submitCount : 0\n        }\n      });\n    };\n\n    if (props.onReset) {\n      var maybePromisedOnReset = props.onReset(state.values, imperativeMethods);\n\n      if (isPromise(maybePromisedOnReset)) {\n        maybePromisedOnReset.then(dispatchFn);\n      } else {\n        dispatchFn();\n      }\n    } else {\n      dispatchFn();\n    }\n  }, [props.initialErrors, props.initialStatus, props.initialTouched, props.onReset]);\n  (0,external_react_.useEffect)(function () {\n    if (isMounted.current === true && !react_fast_compare_default()(initialValues.current, props.initialValues)) {\n      if (enableReinitialize) {\n        initialValues.current = props.initialValues;\n        resetForm();\n\n        if (validateOnMount) {\n          validateFormWithHighPriority(initialValues.current);\n        }\n      }\n    }\n  }, [enableReinitialize, props.initialValues, resetForm, validateOnMount, validateFormWithHighPriority]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialErrors.current, props.initialErrors)) {\n      initialErrors.current = props.initialErrors || emptyErrors;\n      dispatch({\n        type: 'SET_ERRORS',\n        payload: props.initialErrors || emptyErrors\n      });\n    }\n  }, [enableReinitialize, props.initialErrors]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialTouched.current, props.initialTouched)) {\n      initialTouched.current = props.initialTouched || emptyTouched;\n      dispatch({\n        type: 'SET_TOUCHED',\n        payload: props.initialTouched || emptyTouched\n      });\n    }\n  }, [enableReinitialize, props.initialTouched]);\n  (0,external_react_.useEffect)(function () {\n    if (enableReinitialize && isMounted.current === true && !react_fast_compare_default()(initialStatus.current, props.initialStatus)) {\n      initialStatus.current = props.initialStatus;\n      dispatch({\n        type: 'SET_STATUS',\n        payload: props.initialStatus\n      });\n    }\n  }, [enableReinitialize, props.initialStatus, props.initialTouched]);\n  var validateField = useEventCallback(function (name) {\n    // This will efficiently validate a single field by avoiding state\n    // changes if the validation function is synchronous. It's different from\n    // what is called when using validateForm.\n    if (fieldRegistry.current[name] && formik_esm_isFunction(fieldRegistry.current[name].validate)) {\n      var value = getIn(state.values, name);\n      var maybePromise = fieldRegistry.current[name].validate(value);\n\n      if (isPromise(maybePromise)) {\n        // Only flip isValidating if the function is async.\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: true\n        });\n        return maybePromise.then(function (x) {\n          return x;\n        }).then(function (error) {\n          dispatch({\n            type: 'SET_FIELD_ERROR',\n            payload: {\n              field: name,\n              value: error\n            }\n          });\n          dispatch({\n            type: 'SET_ISVALIDATING',\n            payload: false\n          });\n        });\n      } else {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: maybePromise\n          }\n        });\n        return Promise.resolve(maybePromise);\n      }\n    } else if (props.validationSchema) {\n      dispatch({\n        type: 'SET_ISVALIDATING',\n        payload: true\n      });\n      return runValidationSchema(state.values, name).then(function (x) {\n        return x;\n      }).then(function (error) {\n        dispatch({\n          type: 'SET_FIELD_ERROR',\n          payload: {\n            field: name,\n            value: getIn(error, name)\n          }\n        });\n        dispatch({\n          type: 'SET_ISVALIDATING',\n          payload: false\n        });\n      });\n    }\n\n    return Promise.resolve();\n  });\n  var registerField = (0,external_react_.useCallback)(function (name, _ref3) {\n    var validate = _ref3.validate;\n    fieldRegistry.current[name] = {\n      validate: validate\n    };\n  }, []);\n  var unregisterField = (0,external_react_.useCallback)(function (name) {\n    delete fieldRegistry.current[name];\n  }, []);\n  var setTouched = useEventCallback(function (touched, shouldValidate) {\n    dispatch({\n      type: 'SET_TOUCHED',\n      payload: touched\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var setErrors = (0,external_react_.useCallback)(function (errors) {\n    dispatch({\n      type: 'SET_ERRORS',\n      payload: errors\n    });\n  }, []);\n  var setValues = useEventCallback(function (values, shouldValidate) {\n    var resolvedValues = formik_esm_isFunction(values) ? values(state.values) : values;\n    dispatch({\n      type: 'SET_VALUES',\n      payload: resolvedValues\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(resolvedValues) : Promise.resolve();\n  });\n  var setFieldError = (0,external_react_.useCallback)(function (field, value) {\n    dispatch({\n      type: 'SET_FIELD_ERROR',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n  }, []);\n  var setFieldValue = useEventCallback(function (field, value, shouldValidate) {\n    dispatch({\n      type: 'SET_FIELD_VALUE',\n      payload: {\n        field: field,\n        value: value\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnChange : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(setIn(state.values, field, value)) : Promise.resolve();\n  });\n  var executeChange = (0,external_react_.useCallback)(function (eventOrTextValue, maybePath) {\n    // By default, assume that the first argument is a string. This allows us to use\n    // handleChange with React Native and React Native Web's onChangeText prop which\n    // provides just the value of the input.\n    var field = maybePath;\n    var val = eventOrTextValue;\n    var parsed; // If the first argument is not a string though, it has to be a synthetic React Event (or a fake one),\n    // so we handle like we would a normal HTML change event.\n\n    if (!isString(eventOrTextValue)) {\n      // If we can, persist the event\n      // @see https://reactjs.org/docs/events.html#event-pooling\n      if (eventOrTextValue.persist) {\n        eventOrTextValue.persist();\n      }\n\n      var target = eventOrTextValue.target ? eventOrTextValue.target : eventOrTextValue.currentTarget;\n      var type = target.type,\n          name = target.name,\n          id = target.id,\n          value = target.value,\n          checked = target.checked,\n          outerHTML = target.outerHTML,\n          options = target.options,\n          multiple = target.multiple;\n      field = maybePath ? maybePath : name ? name : id;\n\n      if (!field && \"production\" !== \"production\") {}\n\n      val = /number|range/.test(type) ? (parsed = parseFloat(value), isNaN(parsed) ? '' : parsed) : /checkbox/.test(type) // checkboxes\n      ? getValueForCheckbox(getIn(state.values, field), checked, value) : options && multiple // <select multiple>\n      ? getSelectedValues(options) : value;\n    }\n\n    if (field) {\n      // Set form fields by name\n      setFieldValue(field, val);\n    }\n  }, [setFieldValue, state.values]);\n  var handleChange = useEventCallback(function (eventOrPath) {\n    if (isString(eventOrPath)) {\n      return function (event) {\n        return executeChange(event, eventOrPath);\n      };\n    } else {\n      executeChange(eventOrPath);\n    }\n  });\n  var setFieldTouched = useEventCallback(function (field, touched, shouldValidate) {\n    if (touched === void 0) {\n      touched = true;\n    }\n\n    dispatch({\n      type: 'SET_FIELD_TOUCHED',\n      payload: {\n        field: field,\n        value: touched\n      }\n    });\n    var willValidate = shouldValidate === undefined ? validateOnBlur : shouldValidate;\n    return willValidate ? validateFormWithHighPriority(state.values) : Promise.resolve();\n  });\n  var executeBlur = (0,external_react_.useCallback)(function (e, path) {\n    if (e.persist) {\n      e.persist();\n    }\n\n    var _e$target = e.target,\n        name = _e$target.name,\n        id = _e$target.id,\n        outerHTML = _e$target.outerHTML;\n    var field = path ? path : name ? name : id;\n\n    if (!field && \"production\" !== \"production\") {}\n\n    setFieldTouched(field, true);\n  }, [setFieldTouched]);\n  var handleBlur = useEventCallback(function (eventOrString) {\n    if (isString(eventOrString)) {\n      return function (event) {\n        return executeBlur(event, eventOrString);\n      };\n    } else {\n      executeBlur(eventOrString);\n    }\n  });\n  var setFormikState = (0,external_react_.useCallback)(function (stateOrCb) {\n    if (formik_esm_isFunction(stateOrCb)) {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: stateOrCb\n      });\n    } else {\n      dispatch({\n        type: 'SET_FORMIK_STATE',\n        payload: function payload() {\n          return stateOrCb;\n        }\n      });\n    }\n  }, []);\n  var setStatus = (0,external_react_.useCallback)(function (status) {\n    dispatch({\n      type: 'SET_STATUS',\n      payload: status\n    });\n  }, []);\n  var setSubmitting = (0,external_react_.useCallback)(function (isSubmitting) {\n    dispatch({\n      type: 'SET_ISSUBMITTING',\n      payload: isSubmitting\n    });\n  }, []);\n  var submitForm = useEventCallback(function () {\n    dispatch({\n      type: 'SUBMIT_ATTEMPT'\n    });\n    return validateFormWithHighPriority().then(function (combinedErrors) {\n      // In case an error was thrown and passed to the resolved Promise,\n      // `combinedErrors` can be an instance of an Error. We need to check\n      // that and abort the submit.\n      // If we don't do that, calling `Object.keys(new Error())` yields an\n      // empty array, which causes the validation to pass and the form\n      // to be submitted.\n      var isInstanceOfError = combinedErrors instanceof Error;\n      var isActuallyValid = !isInstanceOfError && Object.keys(combinedErrors).length === 0;\n\n      if (isActuallyValid) {\n        // Proceed with submit...\n        //\n        // To respect sync submit fns, we can't simply wrap executeSubmit in a promise and\n        // _always_ dispatch SUBMIT_SUCCESS because isSubmitting would then always be false.\n        // This would be fine in simple cases, but make it impossible to disable submit\n        // buttons where people use callbacks or promises as side effects (which is basically\n        // all of v1 Formik code). Instead, recall that we are inside of a promise chain already,\n        //  so we can try/catch executeSubmit(), if it returns undefined, then just bail.\n        // If there are errors, throw em. Otherwise, wrap executeSubmit in a promise and handle\n        // cleanup of isSubmitting on behalf of the consumer.\n        var promiseOrUndefined;\n\n        try {\n          promiseOrUndefined = executeSubmit(); // Bail if it's sync, consumer is responsible for cleaning up\n          // via setSubmitting(false)\n\n          if (promiseOrUndefined === undefined) {\n            return;\n          }\n        } catch (error) {\n          throw error;\n        }\n\n        return Promise.resolve(promiseOrUndefined).then(function (result) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_SUCCESS'\n            });\n          }\n\n          return result;\n        })[\"catch\"](function (_errors) {\n          if (!!isMounted.current) {\n            dispatch({\n              type: 'SUBMIT_FAILURE'\n            }); // This is a legit error rejected by the onSubmit fn\n            // so we don't want to break the promise chain\n\n            throw _errors;\n          }\n        });\n      } else if (!!isMounted.current) {\n        // ^^^ Make sure Formik is still mounted before updating state\n        dispatch({\n          type: 'SUBMIT_FAILURE'\n        }); // throw combinedErrors;\n\n        if (isInstanceOfError) {\n          throw combinedErrors;\n        }\n      }\n\n      return;\n    });\n  });\n  var handleSubmit = useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    } // Warn if form submission is triggered by a <button> without a\n    // specified `type` attribute during development. This mitigates\n    // a common gotcha in forms with both reset and submit buttons,\n    // where the dev forgets to add type=\"button\" to the reset button.\n\n\n    if (false) { var activeElement; }\n\n    submitForm()[\"catch\"](function (reason) {\n      console.warn(\"Warning: An unhandled error was caught from submitForm()\", reason);\n    });\n  });\n  var imperativeMethods = {\n    resetForm: resetForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    setErrors: setErrors,\n    setFieldError: setFieldError,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    setFormikState: setFormikState,\n    submitForm: submitForm\n  };\n  var executeSubmit = useEventCallback(function () {\n    return onSubmit(state.values, imperativeMethods);\n  });\n  var handleReset = useEventCallback(function (e) {\n    if (e && e.preventDefault && formik_esm_isFunction(e.preventDefault)) {\n      e.preventDefault();\n    }\n\n    if (e && e.stopPropagation && formik_esm_isFunction(e.stopPropagation)) {\n      e.stopPropagation();\n    }\n\n    resetForm();\n  });\n  var getFieldMeta = (0,external_react_.useCallback)(function (name) {\n    return {\n      value: getIn(state.values, name),\n      error: getIn(state.errors, name),\n      touched: !!getIn(state.touched, name),\n      initialValue: getIn(initialValues.current, name),\n      initialTouched: !!getIn(initialTouched.current, name),\n      initialError: getIn(initialErrors.current, name)\n    };\n  }, [state.errors, state.touched, state.values]);\n  var getFieldHelpers = (0,external_react_.useCallback)(function (name) {\n    return {\n      setValue: function setValue(value, shouldValidate) {\n        return setFieldValue(name, value, shouldValidate);\n      },\n      setTouched: function setTouched(value, shouldValidate) {\n        return setFieldTouched(name, value, shouldValidate);\n      },\n      setError: function setError(value) {\n        return setFieldError(name, value);\n      }\n    };\n  }, [setFieldValue, setFieldTouched, setFieldError]);\n  var getFieldProps = (0,external_react_.useCallback)(function (nameOrOptions) {\n    var isAnObject = formik_esm_isObject(nameOrOptions);\n    var name = isAnObject ? nameOrOptions.name : nameOrOptions;\n    var valueState = getIn(state.values, name);\n    var field = {\n      name: name,\n      value: valueState,\n      onChange: handleChange,\n      onBlur: handleBlur\n    };\n\n    if (isAnObject) {\n      var type = nameOrOptions.type,\n          valueProp = nameOrOptions.value,\n          is = nameOrOptions.as,\n          multiple = nameOrOptions.multiple;\n\n      if (type === 'checkbox') {\n        if (valueProp === undefined) {\n          field.checked = !!valueState;\n        } else {\n          field.checked = !!(Array.isArray(valueState) && ~valueState.indexOf(valueProp));\n          field.value = valueProp;\n        }\n      } else if (type === 'radio') {\n        field.checked = valueState === valueProp;\n        field.value = valueProp;\n      } else if (is === 'select' && multiple) {\n        field.value = field.value || [];\n        field.multiple = true;\n      }\n    }\n\n    return field;\n  }, [handleBlur, handleChange, state.values]);\n  var dirty = (0,external_react_.useMemo)(function () {\n    return !react_fast_compare_default()(initialValues.current, state.values);\n  }, [initialValues.current, state.values]);\n  var isValid = (0,external_react_.useMemo)(function () {\n    return typeof isInitialValid !== 'undefined' ? dirty ? state.errors && Object.keys(state.errors).length === 0 : isInitialValid !== false && formik_esm_isFunction(isInitialValid) ? isInitialValid(props) : isInitialValid : state.errors && Object.keys(state.errors).length === 0;\n  }, [isInitialValid, dirty, state.errors, props]);\n\n  var ctx = _extends({}, state, {\n    initialValues: initialValues.current,\n    initialErrors: initialErrors.current,\n    initialTouched: initialTouched.current,\n    initialStatus: initialStatus.current,\n    handleBlur: handleBlur,\n    handleChange: handleChange,\n    handleReset: handleReset,\n    handleSubmit: handleSubmit,\n    resetForm: resetForm,\n    setErrors: setErrors,\n    setFormikState: setFormikState,\n    setFieldTouched: setFieldTouched,\n    setFieldValue: setFieldValue,\n    setFieldError: setFieldError,\n    setStatus: setStatus,\n    setSubmitting: setSubmitting,\n    setTouched: setTouched,\n    setValues: setValues,\n    submitForm: submitForm,\n    validateForm: validateFormWithHighPriority,\n    validateField: validateField,\n    isValid: isValid,\n    dirty: dirty,\n    unregisterField: unregisterField,\n    registerField: registerField,\n    getFieldProps: getFieldProps,\n    getFieldMeta: getFieldMeta,\n    getFieldHelpers: getFieldHelpers,\n    validateOnBlur: validateOnBlur,\n    validateOnChange: validateOnChange,\n    validateOnMount: validateOnMount\n  });\n\n  return ctx;\n}\nfunction Formik(props) {\n  var formikbag = useFormik(props);\n  var component = props.component,\n      children = props.children,\n      render = props.render,\n      innerRef = props.innerRef; // This allows folks to pass a ref to <Formik />\n\n  (0,external_react_.useImperativeHandle)(innerRef, function () {\n    return formikbag;\n  });\n\n  if (false) {}\n\n  return (0,external_react_.createElement)(FormikProvider, {\n    value: formikbag\n  }, component ? (0,external_react_.createElement)(component, formikbag) : render ? render(formikbag) : children // children come last, always called\n  ? formik_esm_isFunction(children) ? children(formikbag) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null);\n}\n\nfunction warnAboutMissingIdentifier(_ref4) {\n  var htmlContent = _ref4.htmlContent,\n      documentationAnchorLink = _ref4.documentationAnchorLink,\n      handlerName = _ref4.handlerName;\n  console.warn(\"Warning: Formik called `\" + handlerName + \"`, but you forgot to pass an `id` or `name` attribute to your input:\\n    \" + htmlContent + \"\\n    Formik cannot determine which value to update. For more info see https://formik.org/docs/api/formik#\" + documentationAnchorLink + \"\\n  \");\n}\n/**\r\n * Transform Yup ValidationError to a more usable object\r\n */\n\n\nfunction yupToFormErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return setIn(errors, yupError.path, yupError.message);\n    }\n\n    for (var _iterator = yupError.inner, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref5;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref5 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref5 = _i.value;\n      }\n\n      var err = _ref5;\n\n      if (!getIn(errors, err.path)) {\n        errors = setIn(errors, err.path, err.message);\n      }\n    }\n  }\n\n  return errors;\n}\n/**\r\n * Validate a yup schema.\r\n */\n\nfunction validateYupSchema(values, schema, sync, context) {\n  if (sync === void 0) {\n    sync = false;\n  }\n\n  var normalizedValues = prepareDataForValidation(values);\n  return schema[sync ? 'validateSync' : 'validate'](normalizedValues, {\n    abortEarly: false,\n    context: context || normalizedValues\n  });\n}\n/**\r\n * Recursively prepare values.\r\n */\n\nfunction prepareDataForValidation(values) {\n  var data = Array.isArray(values) ? [] : {};\n\n  for (var k in values) {\n    if (Object.prototype.hasOwnProperty.call(values, k)) {\n      var key = String(k);\n\n      if (Array.isArray(values[key]) === true) {\n        data[key] = values[key].map(function (value) {\n          if (Array.isArray(value) === true || lodash_es_isPlainObject(value)) {\n            return prepareDataForValidation(value);\n          } else {\n            return value !== '' ? value : undefined;\n          }\n        });\n      } else if (lodash_es_isPlainObject(values[key])) {\n        data[key] = prepareDataForValidation(values[key]);\n      } else {\n        data[key] = values[key] !== '' ? values[key] : undefined;\n      }\n    }\n  }\n\n  return data;\n}\n/**\r\n * deepmerge array merging algorithm\r\n * https://github.com/KyleAMathews/deepmerge#combine-array\r\n */\n\nfunction arrayMerge(target, source, options) {\n  var destination = target.slice();\n  source.forEach(function merge(e, i) {\n    if (typeof destination[i] === 'undefined') {\n      var cloneRequested = options.clone !== false;\n      var shouldClone = cloneRequested && options.isMergeableObject(e);\n      destination[i] = shouldClone ? es(Array.isArray(e) ? [] : {}, e, options) : e;\n    } else if (options.isMergeableObject(e)) {\n      destination[i] = es(target[i], e, options);\n    } else if (target.indexOf(e) === -1) {\n      destination.push(e);\n    }\n  });\n  return destination;\n}\n/** Return multi select values based on an array of options */\n\n\nfunction getSelectedValues(options) {\n  return Array.from(options).filter(function (el) {\n    return el.selected;\n  }).map(function (el) {\n    return el.value;\n  });\n}\n/** Return the next value for a checkbox */\n\n\nfunction getValueForCheckbox(currentValue, checked, valueProp) {\n  // If the current value was a boolean, return a boolean\n  if (typeof currentValue === 'boolean') {\n    return Boolean(checked);\n  } // If the currentValue was not a boolean we want to return an array\n\n\n  var currentArrayOfValues = [];\n  var isValueInArray = false;\n  var index = -1;\n\n  if (!Array.isArray(currentValue)) {\n    // eslint-disable-next-line eqeqeq\n    if (!valueProp || valueProp == 'true' || valueProp == 'false') {\n      return Boolean(checked);\n    }\n  } else {\n    // If the current value is already an array, use it\n    currentArrayOfValues = currentValue;\n    index = currentValue.indexOf(valueProp);\n    isValueInArray = index >= 0;\n  } // If the checkbox was checked and the value is not already present in the aray we want to add the new value to the array of values\n\n\n  if (checked && valueProp && !isValueInArray) {\n    return currentArrayOfValues.concat(valueProp);\n  } // If the checkbox was unchecked and the value is not in the array, simply return the already existing array of values\n\n\n  if (!isValueInArray) {\n    return currentArrayOfValues;\n  } // If the checkbox was unchecked and the value is in the array, remove the value and return the array\n\n\n  return currentArrayOfValues.slice(0, index).concat(currentArrayOfValues.slice(index + 1));\n} // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? external_react_.useLayoutEffect : external_react_.useEffect;\n\nfunction useEventCallback(fn) {\n  var ref = (0,external_react_.useRef)(fn); // we copy a ref to the callback scoped to the current state/props on each render\n\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return (0,external_react_.useCallback)(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nfunction useField(propsOrFieldName) {\n  var formik = useFormikContext();\n  var getFieldProps = formik.getFieldProps,\n      getFieldMeta = formik.getFieldMeta,\n      getFieldHelpers = formik.getFieldHelpers,\n      registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  var isAnObject = formik_esm_isObject(propsOrFieldName); // Normalize propsOrFieldName to FieldHookConfig<Val>\n\n  var props = isAnObject ? propsOrFieldName : {\n    name: propsOrFieldName\n  };\n  var fieldName = props.name,\n      validateFn = props.validate;\n  useEffect(function () {\n    if (fieldName) {\n      registerField(fieldName, {\n        validate: validateFn\n      });\n    }\n\n    return function () {\n      if (fieldName) {\n        unregisterField(fieldName);\n      }\n    };\n  }, [registerField, unregisterField, fieldName, validateFn]);\n\n  if (false) {}\n\n  !fieldName ?  false ? 0 : invariant(false) : void 0;\n  var fieldHelpers = useMemo(function () {\n    return getFieldHelpers(fieldName);\n  }, [getFieldHelpers, fieldName]);\n  return [getFieldProps(props), getFieldMeta(fieldName), fieldHelpers];\n}\nfunction formik_esm_Field(_ref) {\n  var validate = _ref.validate,\n      name = _ref.name,\n      render = _ref.render,\n      children = _ref.children,\n      is = _ref.as,\n      component = _ref.component,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"validate\", \"name\", \"render\", \"children\", \"as\", \"component\", \"className\"]);\n\n  var _useFormikContext = useFormikContext(),\n      formik = _objectWithoutPropertiesLoose(_useFormikContext, [\"validate\", \"validationSchema\"]);\n\n  if (false) {} // Register field and field-level validation with parent <Formik>\n\n\n  var registerField = formik.registerField,\n      unregisterField = formik.unregisterField;\n  (0,external_react_.useEffect)(function () {\n    registerField(name, {\n      validate: validate\n    });\n    return function () {\n      unregisterField(name);\n    };\n  }, [registerField, unregisterField, name, validate]);\n  var field = formik.getFieldProps(_extends({\n    name: name\n  }, props));\n  var meta = formik.getFieldMeta(name);\n  var legacyBag = {\n    field: field,\n    form: formik\n  };\n\n  if (render) {\n    return render(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (formik_esm_isFunction(children)) {\n    return children(_extends({}, legacyBag, {\n      meta: meta\n    }));\n  }\n\n  if (component) {\n    // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n    if (typeof component === 'string') {\n      var innerRef = props.innerRef,\n          rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(component, _extends({\n        ref: innerRef\n      }, field, rest, {\n        className: className\n      }), children);\n    } // We don't pass `meta` for backwards compat\n\n\n    return (0,external_react_.createElement)(component, _extends({\n      field: field,\n      form: formik\n    }, props, {\n      className: className\n    }), children);\n  } // default to input here so we can check for both `as` and `children` above\n\n\n  var asElement = is || 'input';\n\n  if (typeof asElement === 'string') {\n    var _innerRef = props.innerRef,\n        _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n    return (0,external_react_.createElement)(asElement, _extends({\n      ref: _innerRef\n    }, field, _rest, {\n      className: className\n    }), children);\n  }\n\n  return (0,external_react_.createElement)(asElement, _extends({}, field, props, {\n    className: className\n  }), children);\n}\n\nvar Form = /*#__PURE__*/(0,external_react_.forwardRef)(function (props, ref) {\n  // iOS needs an \"action\" attribute for nice input: https://stackoverflow.com/a/39485162/406725\n  // We default the action to \"#\" in case the preventDefault fails (just updates the URL hash)\n  var action = props.action,\n      rest = _objectWithoutPropertiesLoose(props, [\"action\"]);\n\n  var _action = action != null ? action : '#';\n\n  var _useFormikContext = useFormikContext(),\n      handleReset = _useFormikContext.handleReset,\n      handleSubmit = _useFormikContext.handleSubmit;\n\n  return (0,external_react_.createElement)(\"form\", _extends({\n    onSubmit: handleSubmit,\n    ref: ref,\n    onReset: handleReset,\n    action: _action\n  }, rest));\n});\nForm.displayName = 'Form';\n\n/**\r\n * A public higher-order component to access the imperative API\r\n */\n\nfunction withFormik(_ref) {\n  var _ref$mapPropsToValues = _ref.mapPropsToValues,\n      mapPropsToValues = _ref$mapPropsToValues === void 0 ? function (vanillaProps) {\n    var val = {};\n\n    for (var k in vanillaProps) {\n      if (vanillaProps.hasOwnProperty(k) && typeof vanillaProps[k] !== 'function') {\n        // @todo TypeScript fix\n        val[k] = vanillaProps[k];\n      }\n    }\n\n    return val;\n  } : _ref$mapPropsToValues,\n      config = _objectWithoutPropertiesLoose(_ref, [\"mapPropsToValues\"]);\n\n  return function createFormik(Component$1) {\n    var componentDisplayName = Component$1.displayName || Component$1.name || Component$1.constructor && Component$1.constructor.name || 'Component';\n    /**\r\n     * We need to use closures here for to provide the wrapped component's props to\r\n     * the respective withFormik config methods.\r\n     */\n\n    var C = /*#__PURE__*/function (_React$Component) {\n      _inheritsLoose(C, _React$Component);\n\n      function C() {\n        var _this;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n        _this.validate = function (values) {\n          return config.validate(values, _this.props);\n        };\n\n        _this.validationSchema = function () {\n          return formik_esm_isFunction(config.validationSchema) ? config.validationSchema(_this.props) : config.validationSchema;\n        };\n\n        _this.handleSubmit = function (values, actions) {\n          return config.handleSubmit(values, _extends({}, actions, {\n            props: _this.props\n          }));\n        };\n\n        _this.renderFormComponent = function (formikProps) {\n          return createElement(Component$1, _extends({}, _this.props, formikProps));\n        };\n\n        return _this;\n      }\n\n      var _proto = C.prototype;\n\n      _proto.render = function render() {\n        var _this$props = this.props,\n            props = _objectWithoutPropertiesLoose(_this$props, [\"children\"]);\n\n        return createElement(Formik, _extends({}, props, config, {\n          validate: config.validate && this.validate,\n          validationSchema: config.validationSchema && this.validationSchema,\n          initialValues: mapPropsToValues(this.props),\n          initialStatus: config.mapPropsToStatus && config.mapPropsToStatus(this.props),\n          initialErrors: config.mapPropsToErrors && config.mapPropsToErrors(this.props),\n          initialTouched: config.mapPropsToTouched && config.mapPropsToTouched(this.props),\n          onSubmit: this.handleSubmit,\n          children: this.renderFormComponent\n        }));\n      };\n\n      return C;\n    }(Component);\n\n    C.displayName = \"WithFormik(\" + componentDisplayName + \")\";\n    return hoistNonReactStatics(C, Component$1 // cast type to ComponentClass (even if SFC)\n    );\n  };\n}\n\n/**\r\n * Connect any component to Formik context, and inject as a prop called `formik`;\r\n * @param Comp React Component\r\n */\n\nfunction connect(Comp) {\n  var C = function C(props) {\n    return createElement(FormikConsumer, null, function (formik) {\n      !!!formik ?  false ? 0 : invariant(false) : void 0;\n      return createElement(Comp, _extends({}, props, {\n        formik: formik\n      }));\n    });\n  };\n\n  var componentDisplayName = Comp.displayName || Comp.name || Comp.constructor && Comp.constructor.name || 'Component'; // Assign Comp to C.WrappedComponent so we can access the inner component in tests\n  // For example, <Field.WrappedComponent /> gets us <FieldInner/>\n\n  C.WrappedComponent = Comp;\n  C.displayName = \"FormikConnect(\" + componentDisplayName + \")\";\n  return hoistNonReactStatics(C, Comp // cast type to ComponentClass (even if SFC)\n  );\n}\n\n/**\r\n * Some array helpers!\r\n */\n\nvar move = function move(array, from, to) {\n  var copy = copyArrayLike(array);\n  var value = copy[from];\n  copy.splice(from, 1);\n  copy.splice(to, 0, value);\n  return copy;\n};\nvar swap = function swap(arrayLike, indexA, indexB) {\n  var copy = copyArrayLike(arrayLike);\n  var a = copy[indexA];\n  copy[indexA] = copy[indexB];\n  copy[indexB] = a;\n  return copy;\n};\nvar insert = function insert(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy.splice(index, 0, value);\n  return copy;\n};\nvar replace = function replace(arrayLike, index, value) {\n  var copy = copyArrayLike(arrayLike);\n  copy[index] = value;\n  return copy;\n};\n\nvar copyArrayLike = function copyArrayLike(arrayLike) {\n  if (!arrayLike) {\n    return [];\n  } else if (Array.isArray(arrayLike)) {\n    return [].concat(arrayLike);\n  } else {\n    var maxIndex = Object.keys(arrayLike).map(function (key) {\n      return parseInt(key);\n    }).reduce(function (max, el) {\n      return el > max ? el : max;\n    }, 0);\n    return Array.from(_extends({}, arrayLike, {\n      length: maxIndex + 1\n    }));\n  }\n};\n\nvar createAlterationHandler = function createAlterationHandler(alteration, defaultFunction) {\n  var fn = typeof alteration === 'function' ? alteration : defaultFunction;\n  return function (data) {\n    if (Array.isArray(data) || formik_esm_isObject(data)) {\n      var clone = copyArrayLike(data);\n      return fn(clone);\n    } // This can be assumed to be a primitive, which\n    // is a case for top level validation errors\n\n\n    return data;\n  };\n};\n\nvar FieldArrayInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FieldArrayInner, _React$Component);\n\n  function FieldArrayInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // We need TypeScript generics on these, so we'll bind them in the constructor\n    // @todo Fix TS 3.2.1\n\n    _this.updateArrayField = function (fn, alterTouched, alterErrors) {\n      var _this$props = _this.props,\n          name = _this$props.name,\n          setFormikState = _this$props.formik.setFormikState;\n      setFormikState(function (prevState) {\n        var updateErrors = createAlterationHandler(alterErrors, fn);\n        var updateTouched = createAlterationHandler(alterTouched, fn); // values fn should be executed before updateErrors and updateTouched,\n        // otherwise it causes an error with unshift.\n\n        var values = setIn(prevState.values, name, fn(getIn(prevState.values, name)));\n        var fieldError = alterErrors ? updateErrors(getIn(prevState.errors, name)) : undefined;\n        var fieldTouched = alterTouched ? updateTouched(getIn(prevState.touched, name)) : undefined;\n\n        if (isEmptyArray(fieldError)) {\n          fieldError = undefined;\n        }\n\n        if (isEmptyArray(fieldTouched)) {\n          fieldTouched = undefined;\n        }\n\n        return _extends({}, prevState, {\n          values: values,\n          errors: alterErrors ? setIn(prevState.errors, name, fieldError) : prevState.errors,\n          touched: alterTouched ? setIn(prevState.touched, name, fieldTouched) : prevState.touched\n        });\n      });\n    };\n\n    _this.push = function (value) {\n      return _this.updateArrayField(function (arrayLike) {\n        return [].concat(copyArrayLike(arrayLike), [lodash_es_cloneDeep(value)]);\n      }, false, false);\n    };\n\n    _this.handlePush = function (value) {\n      return function () {\n        return _this.push(value);\n      };\n    };\n\n    _this.swap = function (indexA, indexB) {\n      return _this.updateArrayField(function (array) {\n        return swap(array, indexA, indexB);\n      }, true, true);\n    };\n\n    _this.handleSwap = function (indexA, indexB) {\n      return function () {\n        return _this.swap(indexA, indexB);\n      };\n    };\n\n    _this.move = function (from, to) {\n      return _this.updateArrayField(function (array) {\n        return move(array, from, to);\n      }, true, true);\n    };\n\n    _this.handleMove = function (from, to) {\n      return function () {\n        return _this.move(from, to);\n      };\n    };\n\n    _this.insert = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return insert(array, index, value);\n      }, function (array) {\n        return insert(array, index, null);\n      }, function (array) {\n        return insert(array, index, null);\n      });\n    };\n\n    _this.handleInsert = function (index, value) {\n      return function () {\n        return _this.insert(index, value);\n      };\n    };\n\n    _this.replace = function (index, value) {\n      return _this.updateArrayField(function (array) {\n        return replace(array, index, value);\n      }, false, false);\n    };\n\n    _this.handleReplace = function (index, value) {\n      return function () {\n        return _this.replace(index, value);\n      };\n    };\n\n    _this.unshift = function (value) {\n      var length = -1;\n\n      _this.updateArrayField(function (array) {\n        var arr = array ? [value].concat(array) : [value];\n        length = arr.length;\n        return arr;\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      }, function (array) {\n        return array ? [null].concat(array) : [null];\n      });\n\n      return length;\n    };\n\n    _this.handleUnshift = function (value) {\n      return function () {\n        return _this.unshift(value);\n      };\n    };\n\n    _this.handleRemove = function (index) {\n      return function () {\n        return _this.remove(index);\n      };\n    };\n\n    _this.handlePop = function () {\n      return function () {\n        return _this.pop();\n      };\n    };\n\n    _this.remove = _this.remove.bind(_assertThisInitialized(_this));\n    _this.pop = _this.pop.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = FieldArrayInner.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.validateOnChange && this.props.formik.validateOnChange && !react_fast_compare_default()(getIn(prevProps.formik.values, prevProps.name), getIn(this.props.formik.values, this.props.name))) {\n      this.props.formik.validateForm(this.props.formik.values);\n    }\n  };\n\n  _proto.remove = function remove(index) {\n    // We need to make sure we also remove relevant pieces of `touched` and `errors`\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var copy = array ? copyArrayLike(array) : [];\n\n      if (!result) {\n        result = copy[index];\n      }\n\n      if (formik_esm_isFunction(copy.splice)) {\n        copy.splice(index, 1);\n      } // if the array only includes undefined values we have to return an empty array\n\n\n      return formik_esm_isFunction(copy.every) ? copy.every(function (v) {\n        return v === undefined;\n      }) ? [] : copy : copy;\n    }, true, true);\n    return result;\n  };\n\n  _proto.pop = function pop() {\n    // Remove relevant pieces of `touched` and `errors` too!\n    var result;\n    this.updateArrayField( // so this gets call 3 times\n    function (array) {\n      var tmp = array.slice();\n\n      if (!result) {\n        result = tmp && tmp.pop && tmp.pop();\n      }\n\n      return tmp;\n    }, true, true);\n    return result;\n  };\n\n  _proto.render = function render() {\n    var arrayHelpers = {\n      push: this.push,\n      pop: this.pop,\n      swap: this.swap,\n      move: this.move,\n      insert: this.insert,\n      replace: this.replace,\n      unshift: this.unshift,\n      remove: this.remove,\n      handlePush: this.handlePush,\n      handlePop: this.handlePop,\n      handleSwap: this.handleSwap,\n      handleMove: this.handleMove,\n      handleInsert: this.handleInsert,\n      handleReplace: this.handleReplace,\n      handleUnshift: this.handleUnshift,\n      handleRemove: this.handleRemove\n    };\n\n    var _this$props2 = this.props,\n        component = _this$props2.component,\n        render = _this$props2.render,\n        children = _this$props2.children,\n        name = _this$props2.name,\n        _this$props2$formik = _this$props2.formik,\n        restOfFormik = _objectWithoutPropertiesLoose(_this$props2$formik, [\"validate\", \"validationSchema\"]);\n\n    var props = _extends({}, arrayHelpers, {\n      form: restOfFormik,\n      name: name\n    });\n\n    return component ? (0,external_react_.createElement)(component, props) : render ? render(props) : children // children come last, always called\n    ? typeof children === 'function' ? children(props) : !isEmptyChildren(children) ? external_react_.Children.only(children) : null : null;\n  };\n\n  return FieldArrayInner;\n}(external_react_.Component);\n\nFieldArrayInner.defaultProps = {\n  validateOnChange: true\n};\nvar FieldArray = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FieldArrayInner)));\n\nvar ErrorMessageImpl = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ErrorMessageImpl, _React$Component);\n\n  function ErrorMessageImpl() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ErrorMessageImpl.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (getIn(this.props.formik.errors, this.props.name) !== getIn(props.formik.errors, this.props.name) || getIn(this.props.formik.touched, this.props.name) !== getIn(props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        render = _this$props.render,\n        children = _this$props.children,\n        name = _this$props.name,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"formik\", \"render\", \"children\", \"name\"]);\n\n    var touch = getIn(formik.touched, name);\n    var error = getIn(formik.errors, name);\n    return !!touch && !!error ? render ? formik_esm_isFunction(render) ? render(error) : null : children ? formik_esm_isFunction(children) ? children(error) : null : component ? (0,external_react_.createElement)(component, rest, error) : error : null;\n  };\n\n  return ErrorMessageImpl;\n}(external_react_.Component);\n\nvar ErrorMessage = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(ErrorMessageImpl)));\n\n/**\r\n * Custom Field component for quickly hooking into Formik\r\n * context and wiring up forms.\r\n */\n\nvar FastFieldInner = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(FastFieldInner, _React$Component);\n\n  function FastFieldInner(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    var render = props.render,\n        children = props.children,\n        component = props.component,\n        is = props.as,\n        name = props.name;\n    !!render ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && render) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(is && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(component && children && formik_esm_isFunction(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    !!(render && children && !isEmptyChildren(children)) ?  false ? 0 : tiny_warning_esm(false) : void 0;\n    return _this;\n  }\n\n  var _proto = FastFieldInner.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.shouldUpdate) {\n      return this.props.shouldUpdate(props, this.props);\n    } else if (props.name !== this.props.name || getIn(props.formik.values, this.props.name) !== getIn(this.props.formik.values, this.props.name) || getIn(props.formik.errors, this.props.name) !== getIn(this.props.formik.errors, this.props.name) || getIn(props.formik.touched, this.props.name) !== getIn(this.props.formik.touched, this.props.name) || Object.keys(this.props).length !== Object.keys(props).length || props.formik.isSubmitting !== this.props.formik.isSubmitting) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Register the Field with the parent Formik. Parent will cycle through\n    // registered Field's validate fns right prior to submit\n    this.props.formik.registerField(this.props.name, {\n      validate: this.props.validate\n    });\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      this.props.formik.unregisterField(prevProps.name);\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n\n    if (this.props.validate !== prevProps.validate) {\n      this.props.formik.registerField(this.props.name, {\n        validate: this.props.validate\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.props.formik.unregisterField(this.props.name);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        name = _this$props.name,\n        render = _this$props.render,\n        is = _this$props.as,\n        children = _this$props.children,\n        component = _this$props.component,\n        formik = _this$props.formik,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"validate\", \"name\", \"render\", \"as\", \"children\", \"component\", \"shouldUpdate\", \"formik\"]);\n\n    var restOfFormik = _objectWithoutPropertiesLoose(formik, [\"validate\", \"validationSchema\"]);\n\n    var field = formik.getFieldProps(_extends({\n      name: name\n    }, props));\n    var meta = {\n      value: getIn(formik.values, name),\n      error: getIn(formik.errors, name),\n      touched: !!getIn(formik.touched, name),\n      initialValue: getIn(formik.initialValues, name),\n      initialTouched: !!getIn(formik.initialTouched, name),\n      initialError: getIn(formik.initialErrors, name)\n    };\n    var bag = {\n      field: field,\n      meta: meta,\n      form: restOfFormik\n    };\n\n    if (render) {\n      return render(bag);\n    }\n\n    if (formik_esm_isFunction(children)) {\n      return children(bag);\n    }\n\n    if (component) {\n      // This behavior is backwards compat with earlier Formik 0.9 to 1.x\n      if (typeof component === 'string') {\n        var innerRef = props.innerRef,\n            rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n        return (0,external_react_.createElement)(component, _extends({\n          ref: innerRef\n        }, field, rest), children);\n      } // We don't pass `meta` for backwards compat\n\n\n      return (0,external_react_.createElement)(component, _extends({\n        field: field,\n        form: formik\n      }, props), children);\n    } // default to input here so we can check for both `as` and `children` above\n\n\n    var asElement = is || 'input';\n\n    if (typeof asElement === 'string') {\n      var _innerRef = props.innerRef,\n          _rest = _objectWithoutPropertiesLoose(props, [\"innerRef\"]);\n\n      return (0,external_react_.createElement)(asElement, _extends({\n        ref: _innerRef\n      }, field, _rest), children);\n    }\n\n    return (0,external_react_.createElement)(asElement, _extends({}, field, props), children);\n  };\n\n  return FastFieldInner;\n}(external_react_.Component);\n\nvar FastField = /*#__PURE__*/(/* unused pure expression or super */ null && (connect(FastFieldInner)));\n\n\n//# sourceMappingURL=formik.esm.js.map\n\n// EXTERNAL MODULE: external \"@deriv/components\"\nvar components_ = __webpack_require__(\"@deriv/components\");\n// EXTERNAL MODULE: external \"mobx\"\nvar external_mobx_ = __webpack_require__(\"mobx\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/assertEnvironment.js\n\n\nif (!external_react_.useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\");\n}\nif (!external_mobx_.makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\");\n}\n//# sourceMappingURL=assertEnvironment.js.map\n// EXTERNAL MODULE: external \"react-dom\"\nvar external_react_dom_ = __webpack_require__(\"react-dom\");\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/reactBatchedUpdates.js\n\n//# sourceMappingURL=reactBatchedUpdates.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerBatching.js\n\nfunction defaultNoopBatch(callback) {\n    callback();\n}\nfunction observerBatching(reactionScheduler) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch;\n        if (false) {}\n    }\n    (0,external_mobx_.configure)({ reactionScheduler: reactionScheduler });\n}\nvar isObserverBatched = function () {\n    if (false) {}\n    return true;\n};\n//# sourceMappingURL=observerBatching.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/printDebugValue.js\n\nfunction printDebugValue(v) {\n    return (0,external_mobx_.getDependencyTree)(v);\n}\n//# sourceMappingURL=printDebugValue.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/UniversalFinalizationRegistry.js\nvar REGISTRY_FINALIZE_AFTER = 10000;\nvar REGISTRY_SWEEP_INTERVAL = 10000;\nvar TimerBasedFinalizationRegistry = /** @class */ (function () {\n    function TimerBasedFinalizationRegistry(finalize) {\n        var _this = this;\n        Object.defineProperty(this, \"finalize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: finalize\n        });\n        Object.defineProperty(this, \"registrations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        Object.defineProperty(this, \"sweepTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Bound so it can be used directly as setTimeout callback.\n        Object.defineProperty(this, \"sweep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function (maxAge) {\n                if (maxAge === void 0) { maxAge = REGISTRY_FINALIZE_AFTER; }\n                // cancel timeout so we can force sweep anytime\n                clearTimeout(_this.sweepTimeout);\n                _this.sweepTimeout = undefined;\n                var now = Date.now();\n                _this.registrations.forEach(function (registration, token) {\n                    if (now - registration.registeredAt >= maxAge) {\n                        _this.finalize(registration.value);\n                        _this.registrations.delete(token);\n                    }\n                });\n                if (_this.registrations.size > 0) {\n                    _this.scheduleSweep();\n                }\n            }\n        });\n        // Bound so it can be exported directly as clearTimers test utility.\n        Object.defineProperty(this, \"finalizeAllImmediately\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: function () {\n                _this.sweep(0);\n            }\n        });\n    }\n    // Token is actually required with this impl\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"register\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (target, value, token) {\n            this.registrations.set(token, {\n                value: value,\n                registeredAt: Date.now()\n            });\n            this.scheduleSweep();\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"unregister\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function (token) {\n            this.registrations.delete(token);\n        }\n    });\n    Object.defineProperty(TimerBasedFinalizationRegistry.prototype, \"scheduleSweep\", {\n        enumerable: false,\n        configurable: true,\n        writable: true,\n        value: function () {\n            if (this.sweepTimeout === undefined) {\n                this.sweepTimeout = setTimeout(this.sweep, REGISTRY_SWEEP_INTERVAL);\n            }\n        }\n    });\n    return TimerBasedFinalizationRegistry;\n}());\n\nvar UniversalFinalizationRegistry = typeof FinalizationRegistry !== \"undefined\"\n    ? FinalizationRegistry\n    : TimerBasedFinalizationRegistry;\n//# sourceMappingURL=UniversalFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/utils/observerFinalizationRegistry.js\n\nvar observerFinalizationRegistry = new UniversalFinalizationRegistry(function (adm) {\n    var _a;\n    (_a = adm.reaction) === null || _a === void 0 ? void 0 : _a.dispose();\n    adm.reaction = null;\n});\n//# sourceMappingURL=observerFinalizationRegistry.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/staticRendering.js\nvar globalIsUsingStaticRendering = false;\nfunction staticRendering_enableStaticRendering(enable) {\n    globalIsUsingStaticRendering = enable;\n}\nfunction isUsingStaticRendering() {\n    return globalIsUsingStaticRendering;\n}\n//# sourceMappingURL=staticRendering.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useObserver.js\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\n\n\nfunction observerComponentNameFor(baseComponentName) {\n    return \"observer\".concat(baseComponentName);\n}\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nvar ObjectToBeRetainedByReact = /** @class */ (function () {\n    function ObjectToBeRetainedByReact() {\n    }\n    return ObjectToBeRetainedByReact;\n}());\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact();\n}\nfunction useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (isUsingStaticRendering()) {\n        return fn();\n    }\n    var _a = __read(external_react_default().useState(objectToBeRetainedByReactFactory), 1), objectRetainedByReact = _a[0];\n    // Force update, see #2982\n    var _b = __read(external_react_default().useState(), 2), setState = _b[1];\n    var forceUpdate = function () { return setState([]); };\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    var admRef = external_react_default().useRef(null);\n    if (!admRef.current) {\n        // First render\n        admRef.current = {\n            reaction: null,\n            mounted: false,\n            changedBeforeMount: false\n        };\n    }\n    var adm = admRef.current;\n    if (!adm.reaction) {\n        // First render or component was not committed and reaction was disposed by registry\n        adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (adm.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate();\n            }\n            else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                adm.changedBeforeMount = true;\n            }\n        });\n        observerFinalizationRegistry.register(objectRetainedByReact, adm, adm);\n    }\n    external_react_default().useDebugValue(adm.reaction, printDebugValue);\n    external_react_default().useEffect(function () {\n        observerFinalizationRegistry.unregister(adm);\n        adm.mounted = true;\n        if (adm.reaction) {\n            if (adm.changedBeforeMount) {\n                // Got a change before mount, force an update\n                adm.changedBeforeMount = false;\n                forceUpdate();\n            }\n        }\n        else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n            // Re-create the reaction\n            adm.reaction = new external_mobx_.Reaction(observerComponentNameFor(baseComponentName), function () {\n                // We've definitely already been mounted at this point\n                forceUpdate();\n            });\n            forceUpdate();\n        }\n        return function () {\n            adm.reaction.dispose();\n            adm.reaction = null;\n            adm.mounted = false;\n            adm.changedBeforeMount = false;\n        };\n    }, []);\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    var rendering;\n    var exception;\n    adm.reaction.track(function () {\n        try {\n            rendering = fn();\n        }\n        catch (e) {\n            exception = e;\n        }\n    });\n    if (exception) {\n        throw exception; // re-throw any exceptions caught during rendering\n    }\n    return rendering;\n}\n//# sourceMappingURL=useObserver.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/observer.js\n\n\n\nvar warnObserverOptionsDeprecated = true;\nvar hasSymbol = typeof Symbol === \"function\" && Symbol.for;\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nvar ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof external_react_.forwardRef === \"function\" && (0,external_react_.forwardRef)(function (props) { return null; })[\"$$typeof\"];\nvar ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof external_react_.memo === \"function\" && (0,external_react_.memo)(function (props) { return null; })[\"$$typeof\"];\n// n.b. base case is not used for actual typings or exported in the typing files\nfunction observer(baseComponent, \n// TODO remove in next major\noptions) {\n    var _a;\n    if (false) {}\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\"[mobx-react-lite] You are trying to use `observer` on a function component wrapped in either another `observer` or `React.memo`. The observer already applies 'React.memo' for you.\");\n    }\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent;\n    }\n    var useForwardRef = (_a = options === null || options === void 0 ? void 0 : options.forwardRef) !== null && _a !== void 0 ? _a : false;\n    var render = baseComponent;\n    var baseComponentName = baseComponent.displayName || baseComponent.name;\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true;\n        render = baseComponent[\"render\"];\n        if (typeof render !== \"function\") {\n            throw new Error(\"[mobx-react-lite] `render` property of ForwardRef was not a function\");\n        }\n    }\n    var observerComponent = function (props, ref) {\n        return useObserver(function () { return render(props, ref); }, baseComponentName);\n    };\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;\n        observerComponent.displayName = baseComponentName;\n    }\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if (baseComponent.contextTypes) {\n        ;\n        observerComponent.contextTypes = baseComponent.contextTypes;\n    }\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = (0,external_react_.forwardRef)(observerComponent);\n    }\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = (0,external_react_.memo)(observerComponent);\n    copyStaticProperties(baseComponent, observerComponent);\n    if (false) {}\n    return observerComponent;\n}\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nvar hoistBlackList = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n};\nfunction copyStaticProperties(base, target) {\n    Object.keys(base).forEach(function (key) {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key));\n        }\n    });\n}\n//# sourceMappingURL=observer.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/ObserverComponent.js\n\nfunction ObserverComponent(_a) {\n    var children = _a.children, render = _a.render;\n    var component = children || render;\n    if (typeof component !== \"function\") {\n        return null;\n    }\n    return useObserver(component);\n}\nif (false) {}\nObserverComponent.displayName = \"Observer\";\n\nfunction ObserverPropsCheck(props, key, componentName, location, propFullName) {\n    var extraKey = key === \"children\" ? \"render\" : \"children\";\n    var hasProp = typeof props[key] === \"function\";\n    var hasExtraProp = typeof props[extraKey] === \"function\";\n    if (hasProp && hasExtraProp) {\n        return new Error(\"MobX Observer: Do not use children and render in the same time in`\" + componentName);\n    }\n    if (hasProp || hasExtraProp) {\n        return null;\n    }\n    return new Error(\"Invalid prop `\" +\n        propFullName +\n        \"` of type `\" +\n        typeof props[key] +\n        \"` supplied to\" +\n        \" `\" +\n        componentName +\n        \"`, expected `function`.\");\n}\n//# sourceMappingURL=ObserverComponent.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalObservable.js\n\n\nfunction useLocalObservable(initializer, annotations) {\n    return useState(function () { return observable(initializer(), annotations, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalObservable.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useAsObservableSource.js\nvar useAsObservableSource_read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\n\n\n\nfunction useAsObservableSource_useAsObservableSource(current) {\n    if (false)\n        {}\n    var _a = useAsObservableSource_read(useState(function () { return observable(current, {}, { deep: false }); }), 1), res = _a[0];\n    runInAction(function () {\n        Object.assign(res, current);\n    });\n    return res;\n}\n//# sourceMappingURL=useAsObservableSource.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/useLocalStore.js\n\n\n\n\nfunction useLocalStore(initializer, current) {\n    if (false)\n        {}\n    var source = current && useAsObservableSource(current);\n    return useState(function () { return observable(initializer(source), undefined, { autoBind: true }); })[0];\n}\n//# sourceMappingURL=useLocalStore.js.map\n;// CONCATENATED MODULE: ../../../node_modules/mobx-react-lite/es/index.js\nvar _a;\n\n\n\n\n\n\n\nobserverBatching(external_react_dom_.unstable_batchedUpdates);\n\n\n\n\n\n\nvar clearTimers = (_a = observerFinalizationRegistry.finalizeAllImmediately) !== null && _a !== void 0 ? _a : (function () { });\nfunction es_useObserver(fn, baseComponentName) {\n    if (baseComponentName === void 0) { baseComponentName = \"observed\"; }\n    if (false) {}\n    return useObserverOriginal(fn, baseComponentName);\n}\n\nfunction useStaticRendering(enable) {\n    if (false) {}\n    enableStaticRendering(enable);\n}\n//# sourceMappingURL=index.js.map\n// EXTERNAL MODULE: ../../../node_modules/lodash.merge/index.js\nvar lodash_merge = __webpack_require__(\"../../../node_modules/lodash.merge/index.js\");\nvar lodash_merge_default = /*#__PURE__*/__webpack_require__.n(lodash_merge);\n;// CONCATENATED MODULE: ../../stores/src/mockStore.ts\n\nvar mock = function mock() {\n  var common_store_error = {\n    app_routing_history: [],\n    header: '',\n    message: '',\n    type: '',\n    redirect_label: '',\n    redirect_to: '',\n    should_clear_error_on_click: false,\n    should_show_refresh: false,\n    redirectOnClick: jest.fn()\n  };\n  return {\n    is_mock: true,\n    client: {\n      account_settings: {},\n      account_type: 'virtual',\n      accounts: {},\n      active_account_landing_company: '',\n      trading_platform_available_accounts: [],\n      account_limits: {},\n      account_status: {\n        authentication: {\n          attempts: {\n            count: 1,\n            history: [{\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }],\n            latest: {\n              country_code: 'id',\n              id: '8919',\n              service: 'manual',\n              status: 'verified',\n              timestamp: 1674633681\n            }\n          },\n          document: {\n            status: 'verified'\n          },\n          identity: {\n            services: {\n              idv: {\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              },\n              manual: {\n                status: 'none'\n              },\n              onfido: {\n                country_code: 'IDN',\n                documents_supported: ['Driving Licence', 'National Identity Card', 'Passport', 'Residence Permit'],\n                is_country_supported: 1,\n                last_rejected: [],\n                reported_properties: {},\n                status: 'none',\n                submissions_left: 3\n              }\n            },\n            status: 'verified'\n          },\n          income: {\n            status: 'none'\n          },\n          needs_verification: [],\n          ownership: {\n            requests: [],\n            status: 'none'\n          }\n        },\n        currency_config: {\n          USD: {\n            is_deposit_suspended: 0,\n            is_withdrawal_suspended: 0\n          }\n        },\n        p2p_status: 'none',\n        prompt_client_to_authenticate: 0,\n        risk_classification: 'low',\n        status: ['age_verification', 'allow_document_upload', 'authenticated', 'dxtrade_password_not_set', 'financial_information_not_complete', 'idv_disallowed', 'mt5_password_not_set', 'trading_experience_not_complete']\n      },\n      balance: '',\n      can_change_fiat_currency: false,\n      clients_country: '',\n      country_standpoint: {\n        is_belgium: false,\n        is_france: false,\n        is_isle_of_man: false,\n        is_other_eu: false,\n        is_rest_of_eu: false,\n        is_united_kingdom: false\n      },\n      currency: '',\n      currencies_list: [{\n        text: '',\n        value: '',\n        has_tool_tip: false\n      }],\n      current_currency_type: '',\n      current_fiat_currency: '',\n      cfd_score: 0,\n      ctrader_accounts_list: [],\n      setCFDScore: jest.fn(),\n      getLimits: jest.fn(),\n      has_active_real_account: false,\n      has_fiat: false,\n      has_logged_out: false,\n      has_maltainvest_account: false,\n      has_restricted_mt5_account: false,\n      initialized_broadcast: false,\n      is_account_setting_loaded: false,\n      is_authorize: false,\n      is_deposit_lock: false,\n      is_dxtrade_allowed: false,\n      is_dxtrade_password_not_set: false,\n      is_eu: false,\n      is_eu_country: false,\n      has_residence: false,\n      is_financial_account: false,\n      is_financial_assessment_needed: false,\n      is_financial_information_incomplete: false,\n      is_low_risk: false,\n      is_identity_verification_needed: false,\n      is_landing_company_loaded: false,\n      is_logged_in: false,\n      is_logging_in: false,\n      is_mt5_password_not_set: false,\n      is_pending_proof_of_ownership: false,\n      is_populating_dxtrade_account_list: false,\n      is_social_signup: false,\n      is_single_currency: false,\n      is_switching: false,\n      is_tnc_needed: false,\n      is_high_risk: false,\n      is_trading_experience_incomplete: false,\n      is_unwelcome: false,\n      is_virtual: false,\n      is_withdrawal_lock: false,\n      is_populating_account_list: false,\n      landing_company_shortcode: '',\n      local_currency_config: {\n        currency: '',\n        decimal_places: 0\n      },\n      loginid: '',\n      pre_switch_broadcast: false,\n      residence: '',\n      is_svg: false,\n      responseMt5LoginList: jest.fn(),\n      responseTradingPlatformAccountsList: jest.fn(),\n      setFinancialAndTradingAssessment: jest.fn(),\n      standpoint: {\n        financial_company: '',\n        gaming_company: '',\n        maltainvest: false,\n        svg: false,\n        iom: false,\n        malta: false\n      },\n      switchAccount: jest.fn(),\n      verification_code: {\n        payment_agent_withdraw: '',\n        payment_withdraw: '',\n        request_email: '',\n        reset_password: '',\n        signup: '',\n        system_email_change: '',\n        trading_platform_dxtrade_password_reset: '',\n        trading_platform_mt5_password_reset: ''\n      },\n      email: '',\n      setVerificationCode: jest.fn(),\n      updateAccountStatus: jest.fn(),\n      is_authentication_needed: false,\n      authentication_status: {\n        document_status: '',\n        identity_status: ''\n      },\n      mt5_login_list: [],\n      logout: jest.fn(),\n      should_allow_authentication: false,\n      active_accounts: [],\n      account_list: [],\n      available_crypto_currencies: [],\n      selectCurrency: jest.fn(),\n      setAccountStatus: jest.fn(),\n      setBalanceOtherAccounts: jest.fn(),\n      setInitialized: jest.fn(),\n      setLogout: jest.fn(),\n      setVisibilityRealityCheck: jest.fn(),\n      setP2pAdvertiserInfo: jest.fn(),\n      setPreSwitchAccount: jest.fn(),\n      social_identity_provider: '',\n      switched: false,\n      switch_broadcast: false,\n      switchEndSignal: jest.fn(),\n      is_uk: false,\n      isEligibleForMoreRealMt5: jest.fn(),\n      isEligibleForMoreDemoMt5Svg: jest.fn(),\n      updateMT5Status: jest.fn(),\n      fetchResidenceList: jest.fn(),\n      residence_list: [],\n      should_restrict_bvi_account_creation: false,\n      should_restrict_vanuatu_account_creation: false,\n      fetchAccountSettings: jest.fn(),\n      setAccountSettings: jest.fn(),\n      upgradeable_landing_companies: [],\n      is_populating_mt5_account_list: false,\n      landing_companies: {},\n      landing_company: {},\n      upgradeable_currencies: [],\n      getChangeableFields: jest.fn(),\n      isAccountOfTypeDisabled: jest.fn(),\n      is_mt5_allowed: false,\n      mt5_disabled_signup_types: {\n        real: false,\n        demo: false\n      },\n      dxtrade_disabled_signup_types: {\n        real: false,\n        demo: false\n      },\n      dxtrade_accounts_list_error: null,\n      has_account_error_in_mt5_demo_list: false,\n      has_account_error_in_mt5_real_list: false,\n      has_account_error_in_dxtrade_demo_list: false,\n      has_account_error_in_dxtrade_real_list: false,\n      website_status: {\n        dx_trade_status: {\n          all: 0,\n          demo: 0,\n          real: 0\n        },\n        mt5_status: {\n          real: [],\n          demo: []\n        }\n      },\n      is_fully_authenticated: false,\n      states_list: [],\n      fetchStatesList: jest.fn(),\n      is_crypto: jest.fn(),\n      dxtrade_accounts_list: [],\n      derivez_accounts_list: [],\n      default_currency: 'USD',\n      resetVirtualBalance: jest.fn(),\n      has_enabled_two_fa: false,\n      setTwoFAStatus: jest.fn(),\n      has_changed_two_fa: false,\n      setTwoFAChangedStatus: jest.fn(),\n      real_account_creation_unlock_date: '',\n      has_any_real_account: false,\n      setPrevAccountType: jest.fn(),\n      prev_account_type: 'demo',\n      is_beta_chart: true,\n      setLoginInformation: jest.fn(),\n      init: jest.fn(),\n      setLoginId: jest.fn(),\n      resetLocalStorageValues: jest.fn()\n    },\n    common: {\n      error: common_store_error,\n      current_language: 'EN',\n      isCurrentLanguage: jest.fn(),\n      is_from_derivgo: false,\n      is_socket_opened: false,\n      has_error: false,\n      platform: '',\n      routeBackInApp: jest.fn(),\n      routeTo: jest.fn(),\n      changeCurrentLanguage: jest.fn(),\n      changeSelectedLanguage: jest.fn(),\n      is_network_online: false,\n      network_status: {},\n      services_error: {},\n      server_time: new Date(),\n      setError: jest.fn(),\n      setSelectedContractType: jest.fn(),\n      setServicesError: jest.fn(),\n      showError: jest.fn(),\n      is_language_changing: false,\n      setAppstorePlatform: jest.fn(),\n      app_routing_history: [],\n      getExchangeRate: jest.fn()\n    },\n    ui: {\n      advanced_duration_unit: 't',\n      account_switcher_disabled_message: '',\n      app_contents_scroll_ref: {\n        current: null\n      },\n      current_focus: null,\n      is_account_settings_visible: false,\n      is_advanced_duration: false,\n      is_loading: false,\n      is_cashier_visible: false,\n      is_wallet_modal_visible: false,\n      is_chart_layout_default: false,\n      is_closing_create_real_account_modal: false,\n      is_dark_mode_on: false,\n      is_language_settings_modal_on: false,\n      is_desktop: false,\n      is_app_disabled: false,\n      has_only_forward_starting_contracts: false,\n      header_extension: null,\n      is_link_expired_modal_visible: false,\n      is_mobile: false,\n      is_tablet: false,\n      is_mobile_language_menu_open: false,\n      is_positions_drawer_on: false,\n      is_reports_visible: false,\n      is_route_modal_on: false,\n      is_services_error_visible: false,\n      is_unsupported_contract_modal_visible: false,\n      disableApp: jest.fn(),\n      enableApp: jest.fn(),\n      setCurrentFocus: jest.fn(),\n      toggleAccountsDialog: jest.fn(),\n      toggleAccountSettings: jest.fn(),\n      toggleCashier: jest.fn(),\n      setDarkMode: jest.fn(),\n      setReportsTabIndex: jest.fn(),\n      has_real_account_signup_ended: false,\n      real_account_signup_target: '',\n      real_account_signup: {\n        active_modal_index: -1,\n        previous_currency: '',\n        current_currency: '',\n        success_message: '',\n        error_message: ''\n      },\n      resetRealAccountSignupParams: jest.fn(),\n      notification_messages_ui: jest.fn(),\n      openPositionsDrawer: jest.fn(),\n      openRealAccountSignup: jest.fn(),\n      setIsWalletModalVisible: jest.fn(),\n      setHasOnlyForwardingContracts: jest.fn(),\n      setIsClosingCreateRealAccountModal: jest.fn(),\n      setMobileLanguageMenuOpen: jest.fn(),\n      setRealAccountSignupEnd: jest.fn(),\n      setPurchaseState: jest.fn(),\n      setAppContentsScrollRef: jest.fn(),\n      shouldNavigateAfterChooseCrypto: jest.fn(),\n      toggleLanguageSettingsModal: jest.fn(),\n      togglePositionsDrawer: jest.fn(),\n      toggleLinkExpiredModal: jest.fn(),\n      toggleServicesErrorModal: jest.fn(),\n      toggleSetCurrencyModal: jest.fn(),\n      addToast: jest.fn(),\n      removeToast: jest.fn(),\n      reports_route_tab_index: 1,\n      resetPurchaseStates: jest.fn(),\n      should_show_cancellation_warning: false,\n      toggleCancellationWarning: jest.fn(),\n      toggleUnsupportedContractModal: jest.fn(),\n      toggleReports: jest.fn(),\n      setSubSectionIndex: jest.fn(),\n      sub_section_index: 0,\n      toggleReadyToDepositModal: jest.fn(),\n      is_ready_to_deposit_modal_visible: false,\n      is_real_acc_signup_on: false,\n      is_need_real_account_for_cashier_modal_visible: false,\n      toggleNeedRealAccountForCashierModal: jest.fn(),\n      is_switch_to_deriv_account_modal_visible: false,\n      openSwitchToRealAccountModal: jest.fn(),\n      is_top_up_virtual_open: false,\n      is_top_up_virtual_in_progress: false,\n      is_top_up_virtual_success: false,\n      closeTopUpModal: jest.fn(),\n      closeSuccessTopUpModal: jest.fn(),\n      is_cfd_reset_password_modal_enabled: false,\n      setCFDPasswordResetModal: jest.fn(),\n      openDerivRealAccountNeededModal: jest.fn(),\n      populateHeaderExtensions: jest.fn(),\n      populateSettingsExtensions: jest.fn(),\n      purchase_states: [],\n      setShouldShowCooldownModal: jest.fn(),\n      populateFooterExtensions: jest.fn(),\n      openAccountNeededModal: jest.fn(),\n      is_accounts_switcher_on: false,\n      openTopUpModal: jest.fn(),\n      toggleShouldShowRealAccountsList: jest.fn(),\n      is_reset_trading_password_modal_visible: false,\n      setResetTradingPasswordModalOpen: jest.fn(),\n      vanilla_trade_type: 'VANILLALONGCALL',\n      is_additional_kyc_info_modal_open: false,\n      toggleAdditionalKycInfoModal: jest.fn(),\n      is_kyc_information_submitted_modal_open: false,\n      toggleKycInformationSubmittedModal: jest.fn()\n    },\n    traders_hub: {\n      getAccount: jest.fn(),\n      closeModal: jest.fn(),\n      combined_cfd_mt5_accounts: [],\n      available_cfd_accounts: [],\n      content_flag: '',\n      CFDs_restricted_countries: false,\n      openModal: jest.fn(),\n      selected_account: {\n        login: '',\n        account_id: ''\n      },\n      is_eu_user: false,\n      is_demo: false,\n      setIsOnboardingVisited: jest.fn(),\n      is_real: false,\n      selectRegion: jest.fn(),\n      setSelectedAccount: jest.fn(),\n      is_low_risk_cr_eu_real: false,\n      is_real_wallets_upgrade_on: false,\n      toggleWalletsUpgrade: jest.fn(),\n      show_eu_related_content: false,\n      platform_real_balance: {\n        currency: '',\n        balance: 0\n      },\n      cfd_demo_balance: {\n        currency: '',\n        balance: 0\n      },\n      platform_demo_balance: {\n        currency: '',\n        balance: 0\n      },\n      cfd_real_balance: {\n        currency: '',\n        balance: 0\n      },\n      closeAccountTransferModal: jest.fn(),\n      toggleRegulatorsCompareModal: jest.fn(),\n      financial_restricted_countries: false,\n      selected_account_type: 'real',\n      no_CR_account: false,\n      no_MF_account: false,\n      modal_data: {\n        active_modal: '',\n        data: {}\n      },\n      multipliers_account_status: '',\n      openFailedVerificationModal: jest.fn(),\n      setTogglePlatformType: jest.fn(),\n      toggleAccountTransferModal: jest.fn(),\n      selectAccountType: jest.fn(),\n      is_wallet_migration_failed: false,\n      setWalletsMigrationFailedPopup: jest.fn(),\n      selected_platform_type: '',\n      available_platforms: [],\n      selected_region: 'All',\n      getExistingAccounts: jest.fn(),\n      available_dxtrade_accounts: [],\n      toggleAccountTypeModalVisibility: jest.fn(),\n      active_modal_tab: 'Deposit',\n      setWalletModalActiveTab: jest.fn(),\n      active_modal_wallet_id: '',\n      setWalletModalActiveWalletID: jest.fn(),\n      available_ctrader_accounts: [],\n      toggleIsTourOpen: jest.fn(),\n      is_demo_low_risk: false,\n      is_mt5_notification_modal_visible: false,\n      setMT5NotificationModal: jest.fn(),\n      available_derivez_accounts: [],\n      has_any_real_account: false,\n      startTrade: jest.fn(),\n      showTopUpModal: jest.fn()\n    },\n    notifications: {\n      addNotificationMessage: jest.fn(),\n      addNotificationMessageByKey: jest.fn(),\n      client_notifications: {},\n      is_notifications_empty: true,\n      is_notifications_visible: false,\n      filterNotificationMessages: jest.fn(),\n      notifications: [],\n      refreshNotifications: jest.fn(),\n      removeAllNotificationMessages: jest.fn(),\n      removeNotifications: jest.fn(),\n      removeNotificationByKey: jest.fn(),\n      removeNotificationMessage: jest.fn(),\n      removeNotificationMessageByKey: jest.fn(),\n      setP2POrderProps: jest.fn(),\n      setP2PRedirectTo: jest.fn(),\n      showAccountSwitchToRealNotification: jest.fn(),\n      setShouldShowPopups: jest.fn(),\n      toggleNotificationsModal: jest.fn()\n    },\n    portfolio: {\n      active_positions: [],\n      active_positions_count: 0,\n      all_positions: [],\n      barriers: [],\n      error: '',\n      getPositionById: jest.fn(),\n      is_loading: false,\n      is_accumulator: false,\n      is_multiplier: false,\n      is_turbos: false,\n      onHoverPosition: jest.fn(),\n      onBuyResponse: jest.fn(),\n      onClickCancel: jest.fn(),\n      onClickSell: jest.fn(),\n      onMount: jest.fn(),\n      open_accu_contract: null,\n      positions: [],\n      removePositionById: jest.fn(),\n      setContractType: jest.fn()\n    },\n    contract_trade: {\n      accountSwitchListener: jest.fn(),\n      accu_barriers_timeout_id: null,\n      accumulator_barriers_data: {},\n      accumulator_contract_barriers_data: {},\n      addContract: jest.fn(),\n      chart_type: '',\n      clearAccumulatorBarriersData: jest.fn(),\n      clearError: jest.fn(),\n      contracts: [],\n      error_message: '',\n      getContractById: jest.fn(),\n      granularity: 0,\n      has_crossed_accu_barriers: false,\n      has_error: false,\n      last_contract: {},\n      markers_array: [],\n      onUnmount: jest.fn(),\n      prev_chart_type: '',\n      prev_granularity: null,\n      removeContract: jest.fn(),\n      savePreviousChartMode: jest.fn(),\n      setNewAccumulatorBarriersData: jest.fn(),\n      updateAccumulatorBarriersData: jest.fn(),\n      updateChartType: jest.fn(),\n      updateGranularity: jest.fn(),\n      updateProposal: jest.fn()\n    },\n    modules: {},\n    exchange_rates: {\n      data: undefined,\n      update: jest.fn(),\n      unmount: jest.fn()\n    },\n    feature_flags: {\n      data: undefined,\n      update: jest.fn(),\n      unmount: jest.fn()\n    },\n    gtm: {\n      is_gtm_applicable: false,\n      visitorId: 'visitorId',\n      common_variables: {\n        language: 'en',\n        theme: 'dark',\n        platform: 'DBot',\n        loggedIn: false\n      },\n      accountSwitcherListener: jest.fn(),\n      pushDataLayer: jest.fn(),\n      pushTransactionData: jest.fn(),\n      eventHandler: jest.fn(),\n      setLoginFlag: jest.fn()\n    },\n    pushwoosh: {},\n    contract_replay: {\n      contract_store: {\n        contract_info: {},\n        digits_info: {},\n        display_status: '',\n        is_digit_contract: false,\n        is_ended: false\n      }\n    },\n    chart_barrier_store: {},\n    active_symbols: {\n      active_symbols: [],\n      setActiveSymbols: jest.fn()\n    }\n  };\n};\nvar mockStore = function mockStore(override) {\n  return merge(mock(), override);\n};\n/* harmony default export */ const src_mockStore = ((/* unused pure expression or super */ null && (mockStore)));\n;// CONCATENATED MODULE: ../../stores/src/storeContext.ts\n\nvar storeContext_StoreContext = /*#__PURE__*/(0,external_react_.createContext)(null);\n/* harmony default export */ const storeContext = (storeContext_StoreContext);\n;// CONCATENATED MODULE: ../../api/src/APIContext.ts\n\n\n// Don't need to type `deriv_api` here, We will be using these methods inside\n// the `useQuery`, `useMutation` and `useSubscription` hook to make it type-safe.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar APIContext_APIContext = /*#__PURE__*/(0,external_react_.createContext)(null);\n/* harmony default export */ const src_APIContext = (APIContext_APIContext);\n;// CONCATENATED MODULE: ../../api/src/useAPI.ts\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { useAPI_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAPI_defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\nvar useAPI_useAPI = function useAPI() {\n  var api = (0,external_react_.useContext)(src_APIContext);\n  var send = (0,external_react_.useCallback)( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name, payload) {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api === null || api === void 0 ? void 0 : api.send(_objectSpread(useAPI_defineProperty({}, name, 1), payload || {}));\n            case 2:\n              response = _context.sent;\n              if (!response.error) {\n                _context.next = 5;\n                break;\n              }\n              throw response.error;\n            case 5:\n              return _context.abrupt(\"return\", response);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [api]);\n  var subscribe = (0,external_react_.useCallback)(function (name, payload) {\n    var _objectSpread3;\n    return api === null || api === void 0 ? void 0 : api.subscribe(_objectSpread((_objectSpread3 = {}, useAPI_defineProperty(_objectSpread3, name, 1), useAPI_defineProperty(_objectSpread3, \"subscribe\", 1), _objectSpread3), payload || {}));\n  }, [api]);\n  return {\n    send: send,\n    subscribe: subscribe\n  };\n};\n/* harmony default export */ const src_useAPI = (useAPI_useAPI);\n;// CONCATENATED MODULE: ../../api/src/useInfiniteQuery.ts\nfunction useInfiniteQuery_typeof(obj) { \"@babel/helpers - typeof\"; return useInfiniteQuery_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useInfiniteQuery_typeof(obj); }\nfunction useInfiniteQuery_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useInfiniteQuery_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useInfiniteQuery_ownKeys(Object(source), !0).forEach(function (key) { useInfiniteQuery_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useInfiniteQuery_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useInfiniteQuery_defineProperty(obj, key, value) { key = useInfiniteQuery_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useInfiniteQuery_toPropertyKey(arg) { var key = useInfiniteQuery_toPrimitive(arg, \"string\"); return useInfiniteQuery_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useInfiniteQuery_toPrimitive(input, hint) { if (useInfiniteQuery_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useInfiniteQuery_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\nvar useInfiniteQuery_useInfiniteQuery = function useInfiniteQuery(name) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var _useAPI = useAPI(),\n    send = _useAPI.send;\n  var initial_offset = (payload === null || payload === void 0 ? void 0 : payload.offset) || 0;\n  var limit = (payload === null || payload === void 0 ? void 0 : payload.limit) || 50;\n  return _useInfiniteQuery(getQueryKeys(name, payload), function (_ref) {\n    var _ref$pageParam = _ref.pageParam,\n      pageParam = _ref$pageParam === void 0 ? 0 : _ref$pageParam;\n    return send(name, useInfiniteQuery_objectSpread(useInfiniteQuery_objectSpread({}, payload), {}, {\n      limit: limit,\n      offset: pageParam * limit + initial_offset\n    }));\n  }, useInfiniteQuery_objectSpread(useInfiniteQuery_objectSpread({}, options), {}, {\n    getNextPageParam: options !== null && options !== void 0 && options.getNextPageParam ? options.getNextPageParam : function (_lastPage, pages) {\n      return pages.length;\n    }\n  }));\n};\n/* harmony default export */ const src_useInfiniteQuery = ((/* unused pure expression or super */ null && (useInfiniteQuery_useInfiniteQuery)));\n;// CONCATENATED MODULE: ../../api/src/useMutation.ts\nfunction useMutation_typeof(obj) { \"@babel/helpers - typeof\"; return useMutation_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useMutation_typeof(obj); }\nvar _excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useMutation_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useMutation_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useMutation_ownKeys(Object(source), !0).forEach(function (key) { useMutation_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useMutation_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useMutation_defineProperty(obj, key, value) { key = useMutation_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useMutation_toPropertyKey(arg) { var key = useMutation_toPrimitive(arg, \"string\"); return useMutation_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useMutation_toPrimitive(input, hint) { if (useMutation_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useMutation_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useMutation_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useMutation_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useMutation_useMutation = function useMutation(name, options) {\n  var _useAPI = useAPI(),\n    send = _useAPI.send;\n  var _useMutation2 = _useMutation(function (props) {\n      var prop = props === null || props === void 0 ? void 0 : props[0];\n      var payload = prop && 'payload' in prop ? prop.payload : undefined;\n      return send(name, payload);\n    }, options),\n    _mutate = _useMutation2.mutate,\n    rest = _objectWithoutProperties(_useMutation2, _excluded);\n  var mutate = useCallback(function () {\n    for (var _len = arguments.length, payload = new Array(_len), _key = 0; _key < _len; _key++) {\n      payload[_key] = arguments[_key];\n    }\n    return _mutate(payload);\n  }, [_mutate]);\n  return useMutation_objectSpread({\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const src_useMutation = ((/* unused pure expression or super */ null && (useMutation_useMutation)));\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/utils.mjs\n// TYPES\n// UTILS\nconst isServer = typeof window === 'undefined' || 'Deno' in window;\nfunction noop() {\n  return undefined;\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === 'function' ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === 'number' && value >= 0 && value !== Infinity;\n}\nfunction difference(array1, array2) {\n  return array1.filter(x => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n\n  if (typeof arg2 === 'function') {\n    return { ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n\n  return { ...arg2,\n    queryKey: arg1\n  };\n}\nfunction parseMutationArgs(arg1, arg2, arg3) {\n  if (isQueryKey(arg1)) {\n    if (typeof arg2 === 'function') {\n      return { ...arg3,\n        mutationKey: arg1,\n        mutationFn: arg2\n      };\n    }\n\n    return { ...arg2,\n      mutationKey: arg1\n    };\n  }\n\n  if (typeof arg1 === 'function') {\n    return { ...arg2,\n      mutationFn: arg1\n    };\n  }\n\n  return { ...arg1\n  };\n}\nfunction parseFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    queryKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction parseMutationFilterArgs(arg1, arg2, arg3) {\n  return isQueryKey(arg1) ? [{ ...arg2,\n    mutationKey: arg1\n  }, arg3] : [arg1 || {}, arg2];\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = 'all',\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n\n  if (isQueryKey(queryKey)) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n\n  if (type !== 'all') {\n    const isActive = query.isActive();\n\n    if (type === 'active' && !isActive) {\n      return false;\n    }\n\n    if (type === 'inactive' && isActive) {\n      return false;\n    }\n  }\n\n  if (typeof stale === 'boolean' && query.isStale() !== stale) {\n    return false;\n  }\n\n  if (typeof fetchStatus !== 'undefined' && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    fetching,\n    predicate,\n    mutationKey\n  } = filters;\n\n  if (isQueryKey(mutationKey)) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n\n    if (exact) {\n      if (hashQueryKey(mutation.options.mutationKey) !== hashQueryKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n\n  if (typeof fetching === 'boolean' && mutation.state.status === 'loading' !== fetching) {\n    return false;\n  }\n\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = (options == null ? void 0 : options.queryKeyHashFn) || hashQueryKey;\n  return hashFn(queryKey);\n}\n/**\n * Default query keys hash function.\n * Hashes the value into a stable hash.\n */\n\nfunction hashQueryKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => utils_isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\n/**\n * Checks if key `b` partially matches with key `a`.\n */\n\nfunction partialMatchKey(a, b) {\n  return partialDeepEqual(a, b);\n}\n/**\n * Checks if `b` partially matches with `a`.\n */\n\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n\n  return false;\n}\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between JSON values for example.\n */\n\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n\n  const array = isPlainArray(a) && isPlainArray(b);\n\n  if (array || utils_isPlainObject(a) && utils_isPlainObject(b)) {\n    const aSize = array ? a.length : Object.keys(a).length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      copy[key] = replaceEqualDeep(a[key], b[key]);\n\n      if (copy[key] === a[key]) {\n        equalItems++;\n      }\n    }\n\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n\n  return b;\n}\n/**\n * Shallow compare objects. Only works with objects that always have the same properties.\n */\n\nfunction shallowEqualObjects(a, b) {\n  if (a && !b || b && !a) {\n    return false;\n  }\n\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n} // Copied from: https://github.com/jonschlinkert/is-plain-object\n\nfunction utils_isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  } // If has modified constructor\n\n\n  const ctor = o.constructor;\n\n  if (typeof ctor === 'undefined') {\n    return true;\n  } // If has modified prototype\n\n\n  const prot = ctor.prototype;\n\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  } // If constructor does not have an Object-specific method\n\n\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  } // Most likely a plain Object\n\n\n  return true;\n}\n\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isError(value) {\n  return value instanceof Error;\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    setTimeout(resolve, timeout);\n  });\n}\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\n\nfunction scheduleMicrotask(callback) {\n  sleep(0).then(callback);\n}\nfunction getAbortController() {\n  if (typeof AbortController === 'function') {\n    return new AbortController();\n  }\n\n  return;\n}\nfunction replaceData(prevData, data, options) {\n  // Use prev data if an isDataEqual function is defined and returns `true`\n  if (options.isDataEqual != null && options.isDataEqual(prevData, data)) {\n    return prevData;\n  } else if (typeof options.structuralSharing === 'function') {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    // Structurally share data between prev and new data if needed\n    return replaceEqualDeep(prevData, data);\n  }\n\n  return data;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/notifyManager.mjs\n\n\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n\n  let notifyFn = callback => {\n    callback();\n  };\n\n  let batchNotifyFn = callback => {\n    callback();\n  };\n\n  const batch = callback => {\n    let result;\n    transactions++;\n\n    try {\n      result = callback();\n    } finally {\n      transactions--;\n\n      if (!transactions) {\n        flush();\n      }\n    }\n\n    return result;\n  };\n\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleMicrotask(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  /**\n   * All calls to the wrapped function will be batched.\n   */\n\n\n  const batchCalls = callback => {\n    return (...args) => {\n      schedule(() => {\n        callback(...args);\n      });\n    };\n  };\n\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n\n    if (originalQueue.length) {\n      scheduleMicrotask(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  /**\n   * Use this method to set a custom notify function.\n   * This can be used to for example wrap notifications with `React.act` while running tests.\n   */\n\n\n  const setNotifyFunction = fn => {\n    notifyFn = fn;\n  };\n  /**\n   * Use this method to set a custom function to batch notifications together into a single tick.\n   * By default React Query will use the batch function provided by ReactDOM or React Native.\n   */\n\n\n  const setBatchNotifyFunction = fn => {\n    batchNotifyFn = fn;\n  };\n\n  return {\n    batch,\n    batchCalls,\n    schedule,\n    setNotifyFunction,\n    setBatchNotifyFunction\n  };\n} // SINGLETON\n\nconst notifyManager = createNotifyManager();\n\n\n//# sourceMappingURL=notifyManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/subscribable.mjs\nclass Subscribable {\n  constructor() {\n    this.listeners = new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n\n  subscribe(listener) {\n    const identity = {\n      listener\n    };\n    this.listeners.add(identity);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(identity);\n      this.onUnsubscribe();\n    };\n  }\n\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n\n  onSubscribe() {// Do nothing\n  }\n\n  onUnsubscribe() {// Do nothing\n  }\n\n}\n\n\n//# sourceMappingURL=subscribable.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/focusManager.mjs\n\n\n\nclass FocusManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onFocus => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus(); // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(focused => {\n      if (typeof focused === 'boolean') {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n\n  setFocused(focused) {\n    const changed = this.focused !== focused;\n\n    if (changed) {\n      this.focused = focused;\n      this.onFocus();\n    }\n  }\n\n  onFocus() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  }\n\n}\nconst focusManager = new FocusManager();\n\n\n//# sourceMappingURL=focusManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/onlineManager.mjs\n\n\n\nconst onlineEvents = ['online', 'offline'];\nclass OnlineManager extends Subscribable {\n  constructor() {\n    super();\n\n    this.setup = onOnline => {\n      // addEventListener does not exist in React Native, but window does\n      // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n      if (!isServer && window.addEventListener) {\n        const listener = () => onOnline(); // Listen to online\n\n\n        onlineEvents.forEach(event => {\n          window.addEventListener(event, listener, false);\n        });\n        return () => {\n          // Be sure to unsubscribe if a new handler is set\n          onlineEvents.forEach(event => {\n            window.removeEventListener(event, listener);\n          });\n        };\n      }\n\n      return;\n    };\n  }\n\n  onSubscribe() {\n    if (!this.cleanup) {\n      this.setEventListener(this.setup);\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      var _this$cleanup;\n\n      (_this$cleanup = this.cleanup) == null ? void 0 : _this$cleanup.call(this);\n      this.cleanup = undefined;\n    }\n  }\n\n  setEventListener(setup) {\n    var _this$cleanup2;\n\n    this.setup = setup;\n    (_this$cleanup2 = this.cleanup) == null ? void 0 : _this$cleanup2.call(this);\n    this.cleanup = setup(online => {\n      if (typeof online === 'boolean') {\n        this.setOnline(online);\n      } else {\n        this.onOnline();\n      }\n    });\n  }\n\n  setOnline(online) {\n    const changed = this.online !== online;\n\n    if (changed) {\n      this.online = online;\n      this.onOnline();\n    }\n  }\n\n  onOnline() {\n    this.listeners.forEach(({\n      listener\n    }) => {\n      listener();\n    });\n  }\n\n  isOnline() {\n    if (typeof this.online === 'boolean') {\n      return this.online;\n    }\n\n    if (typeof navigator === 'undefined' || typeof navigator.onLine === 'undefined') {\n      return true;\n    }\n\n    return navigator.onLine;\n  }\n\n}\nconst onlineManager = new OnlineManager();\n\n\n//# sourceMappingURL=onlineManager.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/retryer.mjs\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * 2 ** failureCount, 30000);\n}\n\nfunction canFetch(networkMode) {\n  return (networkMode != null ? networkMode : 'online') === 'online' ? onlineManager.isOnline() : true;\n}\nclass CancelledError {\n  constructor(options) {\n    this.revert = options == null ? void 0 : options.revert;\n    this.silent = options == null ? void 0 : options.silent;\n  }\n\n}\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  let promiseResolve;\n  let promiseReject;\n  const promise = new Promise((outerResolve, outerReject) => {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  const cancel = cancelOptions => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort == null ? void 0 : config.abort();\n    }\n  };\n\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n\n  const shouldPause = () => !focusManager.isFocused() || config.networkMode !== 'always' && !onlineManager.isOnline();\n\n  const resolve = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess == null ? void 0 : config.onSuccess(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseResolve(value);\n    }\n  };\n\n  const reject = value => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError == null ? void 0 : config.onError(value);\n      continueFn == null ? void 0 : continueFn();\n      promiseReject(value);\n    }\n  };\n\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        const canContinue = isResolved || !shouldPause();\n\n        if (canContinue) {\n          continueResolve(value);\n        }\n\n        return canContinue;\n      };\n\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(() => {\n      continueFn = undefined;\n\n      if (!isResolved) {\n        config.onContinue == null ? void 0 : config.onContinue();\n      }\n    });\n  }; // Create loop function\n\n\n  const run = () => {\n    // Do nothing if already resolved\n    if (isResolved) {\n      return;\n    }\n\n    let promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      const retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      const retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      const delay = typeof retryDelay === 'function' ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === 'number' && failureCount < retry || typeof retry === 'function' && retry(failureCount, error);\n\n      if (isRetryCancelled || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(() => {\n        if (shouldPause()) {\n          return pause();\n        }\n\n        return;\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  if (canFetch(config.networkMode)) {\n    run();\n  } else {\n    pause().then(run);\n  }\n\n  return {\n    promise,\n    cancel,\n    continue: () => {\n      const didContinue = continueFn == null ? void 0 : continueFn();\n      return didContinue ? promise : Promise.resolve();\n    },\n    cancelRetry,\n    continueRetry\n  };\n}\n\n\n//# sourceMappingURL=retryer.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryObserver.mjs\n\n\n\n\n\n\nclass QueryObserver extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.client = client;\n    this.options = options;\n    this.trackedProps = new Set();\n    this.selectError = null;\n    this.bindMethods();\n    this.setOptions(options);\n  }\n\n  bindMethods() {\n    this.remove = this.remove.bind(this);\n    this.refetch = this.refetch.bind(this);\n  }\n\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.currentQuery.addObserver(this);\n\n      if (shouldFetchOnMount(this.currentQuery, this.options)) {\n        this.executeFetch();\n      }\n\n      this.updateTimers();\n    }\n  }\n\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnReconnect);\n  }\n\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(this.currentQuery, this.options, this.options.refetchOnWindowFocus);\n  }\n\n  destroy() {\n    this.listeners = new Set();\n    this.clearStaleTimeout();\n    this.clearRefetchInterval();\n    this.currentQuery.removeObserver(this);\n  }\n\n  setOptions(options, notifyOptions) {\n    const prevOptions = this.options;\n    const prevQuery = this.currentQuery;\n    this.options = this.client.defaultQueryOptions(options);\n\n    if (false) {}\n\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.client.getQueryCache().notify({\n        type: 'observerOptionsUpdated',\n        query: this.currentQuery,\n        observer: this\n      });\n    }\n\n    if (typeof this.options.enabled !== 'undefined' && typeof this.options.enabled !== 'boolean') {\n      throw new Error('Expected enabled to be a boolean');\n    } // Keep previous query key if the user does not supply one\n\n\n    if (!this.options.queryKey) {\n      this.options.queryKey = prevOptions.queryKey;\n    }\n\n    this.updateQuery();\n    const mounted = this.hasListeners(); // Fetch if there are subscribers\n\n    if (mounted && shouldFetchOptionally(this.currentQuery, prevQuery, this.options, prevOptions)) {\n      this.executeFetch();\n    } // Update result\n\n\n    this.updateResult(notifyOptions); // Update stale interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime)) {\n      this.updateStaleTimeout();\n    }\n\n    const nextRefetchInterval = this.computeRefetchInterval(); // Update refetch interval if needed\n\n    if (mounted && (this.currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.currentRefetchInterval)) {\n      this.updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n\n  getOptimisticResult(options) {\n    const query = this.client.getQueryCache().build(this.client, options);\n    const result = this.createResult(query, options);\n\n    if (shouldAssignObserverCurrentProperties(this, result, options)) {\n      // this assigns the optimistic result to the current Observer\n      // because if the query function changes, useQuery will be performing\n      // an effect where it would fetch again.\n      // When the fetch finishes, we perform a deep data cloning in order\n      // to reuse objects references. This deep data clone is performed against\n      // the `observer.currentResult.data` property\n      // When QueryKey changes, we refresh the query and get new `optimistic`\n      // result, while we leave the `observer.currentResult`, so when new data\n      // arrives, it finds the old `observer.currentResult` which is related\n      // to the old QueryKey. Which means that currentResult and selectData are\n      // out of sync already.\n      // To solve this, we move the cursor of the currentResult everytime\n      // an observer reads an optimistic value.\n      // When keeping the previous data, the result doesn't change until new\n      // data arrives.\n      this.currentResult = result;\n      this.currentResultOptions = this.options;\n      this.currentResultState = this.currentQuery.state;\n    }\n\n    return result;\n  }\n\n  getCurrentResult() {\n    return this.currentResult;\n  }\n\n  trackResult(result) {\n    const trackedResult = {};\n    Object.keys(result).forEach(key => {\n      Object.defineProperty(trackedResult, key, {\n        configurable: false,\n        enumerable: true,\n        get: () => {\n          this.trackedProps.add(key);\n          return result[key];\n        }\n      });\n    });\n    return trackedResult;\n  }\n\n  getCurrentQuery() {\n    return this.currentQuery;\n  }\n\n  remove() {\n    this.client.getQueryCache().remove(this.currentQuery);\n  }\n\n  refetch({\n    refetchPage,\n    ...options\n  } = {}) {\n    return this.fetch({ ...options,\n      meta: {\n        refetchPage\n      }\n    });\n  }\n\n  fetchOptimistic(options) {\n    const defaultedOptions = this.client.defaultQueryOptions(options);\n    const query = this.client.getQueryCache().build(this.client, defaultedOptions);\n    query.isFetchingOptimistic = true;\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n\n  fetch(fetchOptions) {\n    var _fetchOptions$cancelR;\n\n    return this.executeFetch({ ...fetchOptions,\n      cancelRefetch: (_fetchOptions$cancelR = fetchOptions.cancelRefetch) != null ? _fetchOptions$cancelR : true\n    }).then(() => {\n      this.updateResult();\n      return this.currentResult;\n    });\n  }\n\n  executeFetch(fetchOptions) {\n    // Make sure we reference the latest query as the current one might have been removed\n    this.updateQuery(); // Fetch\n\n    let promise = this.currentQuery.fetch(this.options, fetchOptions);\n\n    if (!(fetchOptions != null && fetchOptions.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  updateStaleTimeout() {\n    this.clearStaleTimeout();\n\n    if (isServer || this.currentResult.isStale || !isValidTimeout(this.options.staleTime)) {\n      return;\n    }\n\n    const time = timeUntilStale(this.currentResult.dataUpdatedAt, this.options.staleTime); // The timeout is sometimes triggered 1 ms before the stale time expiration.\n    // To mitigate this issue we always add 1 ms to the timeout.\n\n    const timeout = time + 1;\n    this.staleTimeoutId = setTimeout(() => {\n      if (!this.currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n\n  computeRefetchInterval() {\n    var _this$options$refetch;\n\n    return typeof this.options.refetchInterval === 'function' ? this.options.refetchInterval(this.currentResult.data, this.currentQuery) : (_this$options$refetch = this.options.refetchInterval) != null ? _this$options$refetch : false;\n  }\n\n  updateRefetchInterval(nextInterval) {\n    this.clearRefetchInterval();\n    this.currentRefetchInterval = nextInterval;\n\n    if (isServer || this.options.enabled === false || !isValidTimeout(this.currentRefetchInterval) || this.currentRefetchInterval === 0) {\n      return;\n    }\n\n    this.refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.executeFetch();\n      }\n    }, this.currentRefetchInterval);\n  }\n\n  updateTimers() {\n    this.updateStaleTimeout();\n    this.updateRefetchInterval(this.computeRefetchInterval());\n  }\n\n  clearStaleTimeout() {\n    if (this.staleTimeoutId) {\n      clearTimeout(this.staleTimeoutId);\n      this.staleTimeoutId = undefined;\n    }\n  }\n\n  clearRefetchInterval() {\n    if (this.refetchIntervalId) {\n      clearInterval(this.refetchIntervalId);\n      this.refetchIntervalId = undefined;\n    }\n  }\n\n  createResult(query, options) {\n    const prevQuery = this.currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.currentResult;\n    const prevResultState = this.currentResultState;\n    const prevResultOptions = this.currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.currentQueryInitialState;\n    const prevQueryResult = queryChange ? this.currentResult : this.previousQueryResult;\n    const {\n      state\n    } = query;\n    let {\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      fetchStatus,\n      status\n    } = state;\n    let isPreviousData = false;\n    let isPlaceholderData = false;\n    let data; // Optimistically set result in fetching state if needed\n\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n\n      if (fetchOnMount || fetchOptionally) {\n        fetchStatus = canFetch(query.options.networkMode) ? 'fetching' : 'paused';\n\n        if (!dataUpdatedAt) {\n          status = 'loading';\n        }\n      }\n\n      if (options._optimisticResults === 'isRestoring') {\n        fetchStatus = 'idle';\n      }\n    } // Keep previous data if needed\n\n\n    if (options.keepPreviousData && !state.dataUpdatedAt && prevQueryResult != null && prevQueryResult.isSuccess && status !== 'error') {\n      data = prevQueryResult.data;\n      dataUpdatedAt = prevQueryResult.dataUpdatedAt;\n      status = prevQueryResult.status;\n      isPreviousData = true;\n    } // Select data if needed\n    else if (options.select && typeof state.data !== 'undefined') {\n      // Memoize select result\n      if (prevResult && state.data === (prevResultState == null ? void 0 : prevResultState.data) && options.select === this.selectFn) {\n        data = this.selectResult;\n      } else {\n        try {\n          this.selectFn = options.select;\n          data = options.select(state.data);\n          data = replaceData(prevResult == null ? void 0 : prevResult.data, data, options);\n          this.selectResult = data;\n          this.selectError = null;\n        } catch (selectError) {\n          if (false) {}\n\n          this.selectError = selectError;\n        }\n      }\n    } // Use query data\n    else {\n      data = state.data;\n    } // Show placeholder data if needed\n\n\n    if (typeof options.placeholderData !== 'undefined' && typeof data === 'undefined' && status === 'loading') {\n      let placeholderData; // Memoize placeholder data\n\n      if (prevResult != null && prevResult.isPlaceholderData && options.placeholderData === (prevResultOptions == null ? void 0 : prevResultOptions.placeholderData)) {\n        placeholderData = prevResult.data;\n      } else {\n        placeholderData = typeof options.placeholderData === 'function' ? options.placeholderData() : options.placeholderData;\n\n        if (options.select && typeof placeholderData !== 'undefined') {\n          try {\n            placeholderData = options.select(placeholderData);\n            this.selectError = null;\n          } catch (selectError) {\n            if (false) {}\n\n            this.selectError = selectError;\n          }\n        }\n      }\n\n      if (typeof placeholderData !== 'undefined') {\n        status = 'success';\n        data = replaceData(prevResult == null ? void 0 : prevResult.data, placeholderData, options);\n        isPlaceholderData = true;\n      }\n    }\n\n    if (this.selectError) {\n      error = this.selectError;\n      data = this.selectResult;\n      errorUpdatedAt = Date.now();\n      status = 'error';\n    }\n\n    const isFetching = fetchStatus === 'fetching';\n    const isLoading = status === 'loading';\n    const isError = status === 'error';\n    const result = {\n      status,\n      fetchStatus,\n      isLoading,\n      isSuccess: status === 'success',\n      isError,\n      isInitialLoading: isLoading && isFetching,\n      data,\n      dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: state.fetchFailureCount,\n      failureReason: state.fetchFailureReason,\n      errorUpdateCount: state.errorUpdateCount,\n      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,\n      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isLoading,\n      isLoadingError: isError && state.dataUpdatedAt === 0,\n      isPaused: fetchStatus === 'paused',\n      isPlaceholderData,\n      isPreviousData,\n      isRefetchError: isError && state.dataUpdatedAt !== 0,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      remove: this.remove\n    };\n    return result;\n  }\n\n  updateResult(notifyOptions) {\n    const prevResult = this.currentResult;\n    const nextResult = this.createResult(this.currentQuery, this.options);\n    this.currentResultState = this.currentQuery.state;\n    this.currentResultOptions = this.options; // Only notify and update result if something has changed\n\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n\n    this.currentResult = nextResult; // Determine which callbacks to trigger\n\n    const defaultNotifyOptions = {\n      cache: true\n    };\n\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n\n      const {\n        notifyOnChangeProps\n      } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === 'function' ? notifyOnChangeProps() : notifyOnChangeProps;\n\n      if (notifyOnChangePropsValue === 'all' || !notifyOnChangePropsValue && !this.trackedProps.size) {\n        return true;\n      }\n\n      const includedProps = new Set(notifyOnChangePropsValue != null ? notifyOnChangePropsValue : this.trackedProps);\n\n      if (this.options.useErrorBoundary) {\n        includedProps.add('error');\n      }\n\n      return Object.keys(this.currentResult).some(key => {\n        const typedKey = key;\n        const changed = this.currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n\n    if ((notifyOptions == null ? void 0 : notifyOptions.listeners) !== false && shouldNotifyListeners()) {\n      defaultNotifyOptions.listeners = true;\n    }\n\n    this.notify({ ...defaultNotifyOptions,\n      ...notifyOptions\n    });\n  }\n\n  updateQuery() {\n    const query = this.client.getQueryCache().build(this.client, this.options);\n\n    if (query === this.currentQuery) {\n      return;\n    }\n\n    const prevQuery = this.currentQuery;\n    this.currentQuery = query;\n    this.currentQueryInitialState = query.state;\n    this.previousQueryResult = this.currentResult;\n\n    if (this.hasListeners()) {\n      prevQuery == null ? void 0 : prevQuery.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n\n  onQueryUpdate(action) {\n    const notifyOptions = {};\n\n    if (action.type === 'success') {\n      notifyOptions.onSuccess = !action.manual;\n    } else if (action.type === 'error' && !isCancelledError(action.error)) {\n      notifyOptions.onError = true;\n    }\n\n    this.updateResult(notifyOptions);\n\n    if (this.hasListeners()) {\n      this.updateTimers();\n    }\n  }\n\n  notify(notifyOptions) {\n    notifyManager.batch(() => {\n      // First trigger the configuration callbacks\n      if (notifyOptions.onSuccess) {\n        var _this$options$onSucce, _this$options, _this$options$onSettl, _this$options2;\n\n        (_this$options$onSucce = (_this$options = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options, this.currentResult.data);\n        (_this$options$onSettl = (_this$options2 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options2, this.currentResult.data, null);\n      } else if (notifyOptions.onError) {\n        var _this$options$onError, _this$options3, _this$options$onSettl2, _this$options4;\n\n        (_this$options$onError = (_this$options3 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options3, this.currentResult.error);\n        (_this$options$onSettl2 = (_this$options4 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options4, undefined, this.currentResult.error);\n      } // Then trigger the listeners\n\n\n      if (notifyOptions.listeners) {\n        this.listeners.forEach(({\n          listener\n        }) => {\n          listener(this.currentResult);\n        });\n      } // Then the cache listeners\n\n\n      if (notifyOptions.cache) {\n        this.client.getQueryCache().notify({\n          query: this.currentQuery,\n          type: 'observerResultsUpdated'\n        });\n      }\n    });\n  }\n\n}\n\nfunction shouldLoadOnMount(query, options) {\n  return options.enabled !== false && !query.state.dataUpdatedAt && !(query.state.status === 'error' && options.retryOnMount === false);\n}\n\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\n\nfunction shouldFetchOn(query, options, field) {\n  if (options.enabled !== false) {\n    const value = typeof field === 'function' ? field(query) : field;\n    return value === 'always' || value !== false && isStale(query, options);\n  }\n\n  return false;\n}\n\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return options.enabled !== false && (query !== prevQuery || prevOptions.enabled === false) && (!options.suspense || query.state.status !== 'error') && isStale(query, options);\n}\n\nfunction isStale(query, options) {\n  return query.isStaleByTime(options.staleTime);\n} // this function would decide if we will update the observer's 'current'\n// properties after an optimistic reading via getOptimisticResult\n\n\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult, options) {\n  // it is important to keep this condition like this for three reasons:\n  // 1. It will get removed in the v5\n  // 2. it reads: don't update the properties if we want to keep the previous\n  // data.\n  // 3. The opposite condition (!options.keepPreviousData) would fallthrough\n  // and will result in a bad decision\n  if (options.keepPreviousData) {\n    return false;\n  } // this means we want to put some placeholder data when pending and queryKey\n  // changed.\n\n\n  if (options.placeholderData !== undefined) {\n    // re-assign properties only if current data is placeholder data\n    // which means that data did not arrive yet, so, if there is some cached data\n    // we need to \"prepare\" to receive it\n    return optimisticResult.isPlaceholderData;\n  } // if the newly created result isn't what the observer is holding as current,\n  // then we'll need to update the properties as well\n\n\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  } // basically, just keep previous properties if nothing changed\n\n\n  return false;\n}\n\n\n//# sourceMappingURL=queryObserver.mjs.map\n\n// EXTERNAL MODULE: ../../../node_modules/use-sync-external-store/shim/index.js\nvar shim = __webpack_require__(\"../../../node_modules/use-sync-external-store/shim/index.js\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/useSyncExternalStore.mjs\n'use client';\n\n\nconst useSyncExternalStore = shim.useSyncExternalStore;\n\n\n//# sourceMappingURL=useSyncExternalStore.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/QueryErrorResetBoundary.mjs\n'use client';\n\n\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\n\nconst QueryErrorResetBoundaryContext = /*#__PURE__*/external_react_.createContext(createValue()); // HOOK\n\nconst useQueryErrorResetBoundary = () => external_react_.useContext(QueryErrorResetBoundaryContext); // COMPONENT\n\nconst QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /*#__PURE__*/React.createElement(QueryErrorResetBoundaryContext.Provider, {\n    value: value\n  }, typeof children === 'function' ? children(value) : children);\n};\n\n\n//# sourceMappingURL=QueryErrorResetBoundary.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/QueryClientProvider.mjs\n'use client';\n\n\nconst defaultContext = /*#__PURE__*/external_react_.createContext(undefined);\nconst QueryClientSharingContext = /*#__PURE__*/external_react_.createContext(false); // If we are given a context, we will use it.\n// Otherwise, if contextSharing is on, we share the first and at least one\n// instance of the context across the window\n// to ensure that if React Query is used across\n// different bundles or microfrontends they will\n// all use the same **instance** of context, regardless\n// of module scoping.\n\nfunction getQueryClientContext(context, contextSharing) {\n  if (context) {\n    return context;\n  }\n\n  if (contextSharing && typeof window !== 'undefined') {\n    if (!window.ReactQueryClientContext) {\n      window.ReactQueryClientContext = defaultContext;\n    }\n\n    return window.ReactQueryClientContext;\n  }\n\n  return defaultContext;\n}\n\nconst QueryClientProvider_useQueryClient = ({\n  context\n} = {}) => {\n  const queryClient = external_react_.useContext(getQueryClientContext(context, external_react_.useContext(QueryClientSharingContext)));\n\n  if (!queryClient) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one');\n  }\n\n  return queryClient;\n};\nconst QueryClientProvider_QueryClientProvider = ({\n  client,\n  children,\n  context,\n  contextSharing = false\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n\n  if (false) {}\n\n  const Context = getQueryClientContext(context, contextSharing);\n  return /*#__PURE__*/React.createElement(QueryClientSharingContext.Provider, {\n    value: !context && contextSharing\n  }, /*#__PURE__*/React.createElement(Context.Provider, {\n    value: client\n  }, children));\n};\n\n\n//# sourceMappingURL=QueryClientProvider.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/isRestoring.mjs\n'use client';\n\n\nconst IsRestoringContext = /*#__PURE__*/external_react_.createContext(false);\nconst useIsRestoring = () => external_react_.useContext(IsRestoringContext);\nconst IsRestoringProvider = IsRestoringContext.Provider;\n\n\n//# sourceMappingURL=isRestoring.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/utils.mjs\nfunction shouldThrowError(_useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary(...params);\n  }\n\n  return !!_useErrorBoundary;\n}\n\n\n//# sourceMappingURL=utils.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/errorBoundaryUtils.mjs\n'use client';\n\n\n\nconst ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.useErrorBoundary) {\n    // Prevent retrying failed query if the error boundary has not been reset yet\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nconst useClearResetErrorBoundary = errorResetBoundary => {\n  external_react_.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nconst getHasError = ({\n  result,\n  errorResetBoundary,\n  useErrorBoundary,\n  query\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(useErrorBoundary, [result.error, query]);\n};\n\n\n//# sourceMappingURL=errorBoundaryUtils.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/suspense.mjs\nconst ensureStaleTime = defaultedOptions => {\n  if (defaultedOptions.suspense) {\n    // Always set stale time when using suspense to prevent\n    // fetching again when directly mounting after suspending\n    if (typeof defaultedOptions.staleTime !== 'number') {\n      defaultedOptions.staleTime = 1000;\n    }\n  }\n};\nconst willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nconst shouldSuspend = (defaultedOptions, result, isRestoring) => (defaultedOptions == null ? void 0 : defaultedOptions.suspense) && willFetch(result, isRestoring);\nconst fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).then(({\n  data\n}) => {\n  defaultedOptions.onSuccess == null ? void 0 : defaultedOptions.onSuccess(data);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(data, null);\n}).catch(error => {\n  errorResetBoundary.clearReset();\n  defaultedOptions.onError == null ? void 0 : defaultedOptions.onError(error);\n  defaultedOptions.onSettled == null ? void 0 : defaultedOptions.onSettled(undefined, error);\n});\n\n\n//# sourceMappingURL=suspense.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/useBaseQuery.mjs\n'use client';\n\n\n\n\n\n\n\n\n\nfunction useBaseQuery(options, Observer) {\n  const queryClient = QueryClientProvider_useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions(options); // Make sure results are optimistically set in fetching state before subscribing or updating options\n\n  defaultedOptions._optimisticResults = isRestoring ? 'isRestoring' : 'optimistic'; // Include callbacks in batch renders\n\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n\n  ensureStaleTime(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = external_react_.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore(external_react_.useCallback(onStoreChange => {\n    const unsubscribe = isRestoring ? () => undefined : observer.subscribe(notifyManager.batchCalls(onStoreChange)); // Update result to make sure we did not miss any query updates\n    // between creating the observer and subscribing to it.\n\n    observer.updateResult();\n    return unsubscribe;\n  }, [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  external_react_.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]); // Handle suspense\n\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  } // Handle error boundary\n\n\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    useErrorBoundary: defaultedOptions.useErrorBoundary,\n    query: observer.getCurrentQuery()\n  })) {\n    throw result.error;\n  } // Handle result property usage tracking\n\n\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\n\n\n//# sourceMappingURL=useBaseQuery.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/react-query/build/lib/useQuery.mjs\n'use client';\n\n\n\nfunction useQuery_useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  return useBaseQuery(parsedOptions, QueryObserver);\n}\n\n\n//# sourceMappingURL=useQuery.mjs.map\n\n;// CONCATENATED MODULE: ../../api/src/utils/query-utils.ts\nvar query_utils_getQueryKeys = function getQueryKeys(name, props) {\n  if (!props) return [name];\n  delete props.req_id;\n  if (name && props[name] === 1) delete props[name];\n  if (Object.keys(props).length === 0) return [name];\n  var ordered_props = Object.keys(props).sort(function (a, b) {\n    return a.localeCompare(b);\n  }).reduce(function (obj, key) {\n    obj[key] = props[key];\n    return obj;\n  }, {});\n  var query_props = JSON.stringify(ordered_props);\n  return [name, query_props];\n};\n;// CONCATENATED MODULE: ../../api/src/useQuery.ts\n\n\n\nvar src_useQuery_useQuery = function useQuery(name) {\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var _useAPI = src_useAPI(),\n    send = _useAPI.send;\n  return useQuery_useQuery(query_utils_getQueryKeys(name, payload), function () {\n    return send(name, payload);\n  }, options);\n};\n/* harmony default export */ const src_useQuery = (src_useQuery_useQuery);\n// EXTERNAL MODULE: ../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\nvar dist_DerivAPIBasic = __webpack_require__(\"../../../node_modules/@deriv/deriv-api/dist/DerivAPIBasic.js\");\n// EXTERNAL MODULE: external \"@deriv/shared\"\nvar shared_ = __webpack_require__(\"@deriv/shared\");\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/logger.mjs\nconst defaultLogger = console;\n\n\n//# sourceMappingURL=logger.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/removable.mjs\n\n\nclass Removable {\n  destroy() {\n    this.clearGcTimeout();\n  }\n\n  scheduleGc() {\n    this.clearGcTimeout();\n\n    if (isValidTimeout(this.cacheTime)) {\n      this.gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.cacheTime);\n    }\n  }\n\n  updateCacheTime(newCacheTime) {\n    // Default to 5 minutes (Infinity for server-side) if no cache time is set\n    this.cacheTime = Math.max(this.cacheTime || 0, newCacheTime != null ? newCacheTime : isServer ? Infinity : 5 * 60 * 1000);\n  }\n\n  clearGcTimeout() {\n    if (this.gcTimeout) {\n      clearTimeout(this.gcTimeout);\n      this.gcTimeout = undefined;\n    }\n  }\n\n}\n\n\n//# sourceMappingURL=removable.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/query.mjs\n\n\n\n\n\n\n// CLASS\nclass Query extends Removable {\n  constructor(config) {\n    super();\n    this.abortSignalConsumed = false;\n    this.defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.cache = config.cache;\n    this.logger = config.logger || defaultLogger;\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.initialState = config.state || getDefaultState(this.options);\n    this.state = this.initialState;\n    this.scheduleGc();\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === 'idle') {\n      this.cache.remove(this);\n    }\n  }\n\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options); // Set data and mark it as cached\n\n    this.dispatch({\n      data,\n      type: 'success',\n      dataUpdatedAt: options == null ? void 0 : options.updatedAt,\n      manual: options == null ? void 0 : options.manual\n    });\n    return data;\n  }\n\n  setState(state, setStateOptions) {\n    this.dispatch({\n      type: 'setState',\n      state,\n      setStateOptions\n    });\n  }\n\n  cancel(options) {\n    var _this$retryer;\n\n    const promise = this.promise;\n    (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n\n  reset() {\n    this.destroy();\n    this.setState(this.initialState);\n  }\n\n  isActive() {\n    return this.observers.some(observer => observer.options.enabled !== false);\n  }\n\n  isDisabled() {\n    return this.getObserversCount() > 0 && !this.isActive();\n  }\n\n  isStale() {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.observers.some(observer => observer.getCurrentResult().isStale);\n  }\n\n  isStaleByTime(staleTime = 0) {\n    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n\n  onFocus() {\n    var _this$retryer2;\n\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer2 = this.retryer) == null ? void 0 : _this$retryer2.continue();\n  }\n\n  onOnline() {\n    var _this$retryer3;\n\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n\n    if (observer) {\n      observer.refetch({\n        cancelRefetch: false\n      });\n    } // Continue fetch if currently paused\n\n\n    (_this$retryer3 = this.retryer) == null ? void 0 : _this$retryer3.continue();\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the query from being garbage collected\n\n      this.clearGcTimeout();\n      this.cache.notify({\n        type: 'observerAdded',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n\n      if (!this.observers.length) {\n        // If the transport layer does not support cancellation\n        // we'll let the query continue so the result can be cached\n        if (this.retryer) {\n          if (this.abortSignalConsumed) {\n            this.retryer.cancel({\n              revert: true\n            });\n          } else {\n            this.retryer.cancelRetry();\n          }\n        }\n\n        this.scheduleGc();\n      }\n\n      this.cache.notify({\n        type: 'observerRemoved',\n        query: this,\n        observer\n      });\n    }\n  }\n\n  getObserversCount() {\n    return this.observers.length;\n  }\n\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.dispatch({\n        type: 'invalidate'\n      });\n    }\n  }\n\n  fetch(options, fetchOptions) {\n    var _this$options$behavio, _context$fetchOptions;\n\n    if (this.state.fetchStatus !== 'idle') {\n      if (this.state.dataUpdatedAt && fetchOptions != null && fetchOptions.cancelRefetch) {\n        // Silently cancel current fetch if the user wants to cancel refetches\n        this.cancel({\n          silent: true\n        });\n      } else if (this.promise) {\n        var _this$retryer4;\n\n        // make sure that retries that were potentially cancelled due to unmounts can continue\n        (_this$retryer4 = this.retryer) == null ? void 0 : _this$retryer4.continueRetry(); // Return current promise if we are already fetching\n\n        return this.promise;\n      }\n    } // Update config if passed, otherwise the config from the last execution is used\n\n\n    if (options) {\n      this.setOptions(options);\n    } // Use the options from the first observer with a query function if no function is found.\n    // This can happen when the query is hydrated or created with setQueryData.\n\n\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n\n    if (false) {}\n\n    const abortController = getAbortController(); // Create query function context\n\n    const queryFnContext = {\n      queryKey: this.queryKey,\n      pageParam: undefined,\n      meta: this.meta\n    }; // Adds an enumerable signal property to the object that\n    // which sets abortSignalConsumed to true when the signal\n    // is read.\n\n    const addSignalProperty = object => {\n      Object.defineProperty(object, 'signal', {\n        enumerable: true,\n        get: () => {\n          if (abortController) {\n            this.abortSignalConsumed = true;\n            return abortController.signal;\n          }\n\n          return undefined;\n        }\n      });\n    };\n\n    addSignalProperty(queryFnContext); // Create fetch function\n\n    const fetchFn = () => {\n      if (!this.options.queryFn) {\n        return Promise.reject(\"Missing queryFn for queryKey '\" + this.options.queryHash + \"'\");\n      }\n\n      this.abortSignalConsumed = false;\n      return this.options.queryFn(queryFnContext);\n    }; // Trigger behavior hook\n\n\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    (_this$options$behavio = this.options.behavior) == null ? void 0 : _this$options$behavio.onFetch(context); // Store state in case the current fetch needs to be reverted\n\n    this.revertState = this.state; // Set to fetching state if not already in it\n\n    if (this.state.fetchStatus === 'idle' || this.state.fetchMeta !== ((_context$fetchOptions = context.fetchOptions) == null ? void 0 : _context$fetchOptions.meta)) {\n      var _context$fetchOptions2;\n\n      this.dispatch({\n        type: 'fetch',\n        meta: (_context$fetchOptions2 = context.fetchOptions) == null ? void 0 : _context$fetchOptions2.meta\n      });\n    }\n\n    const onError = error => {\n      // Optimistically update state if needed\n      if (!(isCancelledError(error) && error.silent)) {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n\n      if (!isCancelledError(error)) {\n        var _this$cache$config$on, _this$cache$config, _this$cache$config$on2, _this$cache$config2;\n\n        // Notify cache callback\n        (_this$cache$config$on = (_this$cache$config = this.cache.config).onError) == null ? void 0 : _this$cache$config$on.call(_this$cache$config, error, this);\n        (_this$cache$config$on2 = (_this$cache$config2 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on2.call(_this$cache$config2, this.state.data, error, this);\n\n        if (false) {}\n      }\n\n      if (!this.isFetchingOptimistic) {\n        // Schedule query gc after fetching\n        this.scheduleGc();\n      }\n\n      this.isFetchingOptimistic = false;\n    }; // Try to fetch the data\n\n\n    this.retryer = createRetryer({\n      fn: context.fetchFn,\n      abort: abortController == null ? void 0 : abortController.abort.bind(abortController),\n      onSuccess: data => {\n        var _this$cache$config$on3, _this$cache$config3, _this$cache$config$on4, _this$cache$config4;\n\n        if (typeof data === 'undefined') {\n          if (false) {}\n\n          onError(new Error(this.queryHash + \" data is undefined\"));\n          return;\n        }\n\n        this.setData(data); // Notify cache callback\n\n        (_this$cache$config$on3 = (_this$cache$config3 = this.cache.config).onSuccess) == null ? void 0 : _this$cache$config$on3.call(_this$cache$config3, data, this);\n        (_this$cache$config$on4 = (_this$cache$config4 = this.cache.config).onSettled) == null ? void 0 : _this$cache$config$on4.call(_this$cache$config4, data, this.state.error, this);\n\n        if (!this.isFetchingOptimistic) {\n          // Schedule query gc after fetching\n          this.scheduleGc();\n        }\n\n        this.isFetchingOptimistic = false;\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.dispatch({\n          type: 'failed',\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        this.dispatch({\n          type: 'pause'\n        });\n      },\n      onContinue: () => {\n        this.dispatch({\n          type: 'continue'\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode\n    });\n    this.promise = this.retryer.promise;\n    return this.promise;\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      var _action$meta, _action$dataUpdatedAt;\n\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            fetchStatus: 'paused'\n          };\n\n        case 'continue':\n          return { ...state,\n            fetchStatus: 'fetching'\n          };\n\n        case 'fetch':\n          return { ...state,\n            fetchFailureCount: 0,\n            fetchFailureReason: null,\n            fetchMeta: (_action$meta = action.meta) != null ? _action$meta : null,\n            fetchStatus: canFetch(this.options.networkMode) ? 'fetching' : 'paused',\n            ...(!state.dataUpdatedAt && {\n              error: null,\n              status: 'loading'\n            })\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: (_action$dataUpdatedAt = action.dataUpdatedAt) != null ? _action$dataUpdatedAt : Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: 'success',\n            ...(!action.manual && {\n              fetchStatus: 'idle',\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            })\n          };\n\n        case 'error':\n          const error = action.error;\n\n          if (isCancelledError(error) && error.revert && this.revertState) {\n            return { ...this.revertState,\n              fetchStatus: 'idle'\n            };\n          }\n\n          return { ...state,\n            error: error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: 'idle',\n            status: 'error'\n          };\n\n        case 'invalidate':\n          return { ...state,\n            isInvalidated: true\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onQueryUpdate(action);\n      });\n      this.cache.notify({\n        query: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\n\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === 'function' ? options.initialData() : options.initialData;\n  const hasData = typeof data !== 'undefined';\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === 'function' ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt != null ? initialDataUpdatedAt : Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? 'success' : 'loading',\n    fetchStatus: 'idle'\n  };\n}\n\n\n//# sourceMappingURL=query.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryCache.mjs\n\n\n\n\n\n// CLASS\nclass QueryCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.queries = [];\n    this.queriesMap = {};\n  }\n\n  build(client, options, state) {\n    var _options$queryHash;\n\n    const queryKey = options.queryKey;\n    const queryHash = (_options$queryHash = options.queryHash) != null ? _options$queryHash : hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n\n    if (!query) {\n      query = new Query({\n        cache: this,\n        logger: client.getLogger(),\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n\n    return query;\n  }\n\n  add(query) {\n    if (!this.queriesMap[query.queryHash]) {\n      this.queriesMap[query.queryHash] = query;\n      this.queries.push(query);\n      this.notify({\n        type: 'added',\n        query\n      });\n    }\n  }\n\n  remove(query) {\n    const queryInMap = this.queriesMap[query.queryHash];\n\n    if (queryInMap) {\n      query.destroy();\n      this.queries = this.queries.filter(x => x !== query);\n\n      if (queryInMap === query) {\n        delete this.queriesMap[query.queryHash];\n      }\n\n      this.notify({\n        type: 'removed',\n        query\n      });\n    }\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n\n  get(queryHash) {\n    return this.queriesMap[queryHash];\n  }\n\n  getAll() {\n    return this.queries;\n  }\n\n  find(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.queries.find(query => matchQuery(filters, query));\n  }\n\n  findAll(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    return Object.keys(filters).length > 0 ? this.queries.filter(query => matchQuery(filters, query)) : this.queries;\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  onFocus() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n\n  onOnline() {\n    notifyManager.batch(() => {\n      this.queries.forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n\n}\n\n\n//# sourceMappingURL=queryCache.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutation.mjs\n\n\n\n\n\n// CLASS\nclass Mutation extends Removable {\n  constructor(config) {\n    super();\n    this.defaultOptions = config.defaultOptions;\n    this.mutationId = config.mutationId;\n    this.mutationCache = config.mutationCache;\n    this.logger = config.logger || defaultLogger;\n    this.observers = [];\n    this.state = config.state || mutation_getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n\n  setOptions(options) {\n    this.options = { ...this.defaultOptions,\n      ...options\n    };\n    this.updateCacheTime(this.options.cacheTime);\n  }\n\n  get meta() {\n    return this.options.meta;\n  }\n\n  setState(state) {\n    this.dispatch({\n      type: 'setState',\n      state\n    });\n  }\n\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer); // Stop the mutation from being garbage collected\n\n      this.clearGcTimeout();\n      this.mutationCache.notify({\n        type: 'observerAdded',\n        mutation: this,\n        observer\n      });\n    }\n  }\n\n  removeObserver(observer) {\n    this.observers = this.observers.filter(x => x !== observer);\n    this.scheduleGc();\n    this.mutationCache.notify({\n      type: 'observerRemoved',\n      mutation: this,\n      observer\n    });\n  }\n\n  optionalRemove() {\n    if (!this.observers.length) {\n      if (this.state.status === 'loading') {\n        this.scheduleGc();\n      } else {\n        this.mutationCache.remove(this);\n      }\n    }\n  }\n\n  continue() {\n    var _this$retryer$continu, _this$retryer;\n\n    return (_this$retryer$continu = (_this$retryer = this.retryer) == null ? void 0 : _this$retryer.continue()) != null ? _this$retryer$continu : this.execute();\n  }\n\n  async execute() {\n    const executeMutation = () => {\n      var _this$options$retry;\n\n      this.retryer = createRetryer({\n        fn: () => {\n          if (!this.options.mutationFn) {\n            return Promise.reject('No mutationFn found');\n          }\n\n          return this.options.mutationFn(this.state.variables);\n        },\n        onFail: (failureCount, error) => {\n          this.dispatch({\n            type: 'failed',\n            failureCount,\n            error\n          });\n        },\n        onPause: () => {\n          this.dispatch({\n            type: 'pause'\n          });\n        },\n        onContinue: () => {\n          this.dispatch({\n            type: 'continue'\n          });\n        },\n        retry: (_this$options$retry = this.options.retry) != null ? _this$options$retry : 0,\n        retryDelay: this.options.retryDelay,\n        networkMode: this.options.networkMode\n      });\n      return this.retryer.promise;\n    };\n\n    const restored = this.state.status === 'loading';\n\n    try {\n      var _this$mutationCache$c3, _this$mutationCache$c4, _this$options$onSucce, _this$options2, _this$mutationCache$c5, _this$mutationCache$c6, _this$options$onSettl, _this$options3;\n\n      if (!restored) {\n        var _this$mutationCache$c, _this$mutationCache$c2, _this$options$onMutat, _this$options;\n\n        this.dispatch({\n          type: 'loading',\n          variables: this.options.variables\n        }); // Notify cache callback\n\n        await ((_this$mutationCache$c = (_this$mutationCache$c2 = this.mutationCache.config).onMutate) == null ? void 0 : _this$mutationCache$c.call(_this$mutationCache$c2, this.state.variables, this));\n        const context = await ((_this$options$onMutat = (_this$options = this.options).onMutate) == null ? void 0 : _this$options$onMutat.call(_this$options, this.state.variables));\n\n        if (context !== this.state.context) {\n          this.dispatch({\n            type: 'loading',\n            context,\n            variables: this.state.variables\n          });\n        }\n      }\n\n      const data = await executeMutation(); // Notify cache callback\n\n      await ((_this$mutationCache$c3 = (_this$mutationCache$c4 = this.mutationCache.config).onSuccess) == null ? void 0 : _this$mutationCache$c3.call(_this$mutationCache$c4, data, this.state.variables, this.state.context, this));\n      await ((_this$options$onSucce = (_this$options2 = this.options).onSuccess) == null ? void 0 : _this$options$onSucce.call(_this$options2, data, this.state.variables, this.state.context)); // Notify cache callback\n\n      await ((_this$mutationCache$c5 = (_this$mutationCache$c6 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c5.call(_this$mutationCache$c6, data, null, this.state.variables, this.state.context, this));\n      await ((_this$options$onSettl = (_this$options3 = this.options).onSettled) == null ? void 0 : _this$options$onSettl.call(_this$options3, data, null, this.state.variables, this.state.context));\n      this.dispatch({\n        type: 'success',\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        var _this$mutationCache$c7, _this$mutationCache$c8, _this$options$onError, _this$options4, _this$mutationCache$c9, _this$mutationCache$c10, _this$options$onSettl2, _this$options5;\n\n        // Notify cache callback\n        await ((_this$mutationCache$c7 = (_this$mutationCache$c8 = this.mutationCache.config).onError) == null ? void 0 : _this$mutationCache$c7.call(_this$mutationCache$c8, error, this.state.variables, this.state.context, this));\n\n        if (false) {}\n\n        await ((_this$options$onError = (_this$options4 = this.options).onError) == null ? void 0 : _this$options$onError.call(_this$options4, error, this.state.variables, this.state.context)); // Notify cache callback\n\n        await ((_this$mutationCache$c9 = (_this$mutationCache$c10 = this.mutationCache.config).onSettled) == null ? void 0 : _this$mutationCache$c9.call(_this$mutationCache$c10, undefined, error, this.state.variables, this.state.context, this));\n        await ((_this$options$onSettl2 = (_this$options5 = this.options).onSettled) == null ? void 0 : _this$options$onSettl2.call(_this$options5, undefined, error, this.state.variables, this.state.context));\n        throw error;\n      } finally {\n        this.dispatch({\n          type: 'error',\n          error: error\n        });\n      }\n    }\n  }\n\n  dispatch(action) {\n    const reducer = state => {\n      switch (action.type) {\n        case 'failed':\n          return { ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n\n        case 'pause':\n          return { ...state,\n            isPaused: true\n          };\n\n        case 'continue':\n          return { ...state,\n            isPaused: false\n          };\n\n        case 'loading':\n          return { ...state,\n            context: action.context,\n            data: undefined,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: !canFetch(this.options.networkMode),\n            status: 'loading',\n            variables: action.variables\n          };\n\n        case 'success':\n          return { ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: 'success',\n            isPaused: false\n          };\n\n        case 'error':\n          return { ...state,\n            data: undefined,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: 'error'\n          };\n\n        case 'setState':\n          return { ...state,\n            ...action.state\n          };\n      }\n    };\n\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach(observer => {\n        observer.onMutationUpdate(action);\n      });\n      this.mutationCache.notify({\n        mutation: this,\n        type: 'updated',\n        action\n      });\n    });\n  }\n\n}\nfunction mutation_getDefaultState() {\n  return {\n    context: undefined,\n    data: undefined,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: 'idle',\n    variables: undefined\n  };\n}\n\n\n//# sourceMappingURL=mutation.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/mutationCache.mjs\n\n\n\n\n\n// CLASS\nclass MutationCache extends Subscribable {\n  constructor(config) {\n    super();\n    this.config = config || {};\n    this.mutations = [];\n    this.mutationId = 0;\n  }\n\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      logger: client.getLogger(),\n      mutationId: ++this.mutationId,\n      options: client.defaultMutationOptions(options),\n      state,\n      defaultOptions: options.mutationKey ? client.getMutationDefaults(options.mutationKey) : undefined\n    });\n    this.add(mutation);\n    return mutation;\n  }\n\n  add(mutation) {\n    this.mutations.push(mutation);\n    this.notify({\n      type: 'added',\n      mutation\n    });\n  }\n\n  remove(mutation) {\n    this.mutations = this.mutations.filter(x => x !== mutation);\n    this.notify({\n      type: 'removed',\n      mutation\n    });\n  }\n\n  clear() {\n    notifyManager.batch(() => {\n      this.mutations.forEach(mutation => {\n        this.remove(mutation);\n      });\n    });\n  }\n\n  getAll() {\n    return this.mutations;\n  }\n\n  find(filters) {\n    if (typeof filters.exact === 'undefined') {\n      filters.exact = true;\n    }\n\n    return this.mutations.find(mutation => matchMutation(filters, mutation));\n  }\n\n  findAll(filters) {\n    return this.mutations.filter(mutation => matchMutation(filters, mutation));\n  }\n\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach(({\n        listener\n      }) => {\n        listener(event);\n      });\n    });\n  }\n\n  resumePausedMutations() {\n    var _this$resuming;\n\n    this.resuming = ((_this$resuming = this.resuming) != null ? _this$resuming : Promise.resolve()).then(() => {\n      const pausedMutations = this.mutations.filter(x => x.state.isPaused);\n      return notifyManager.batch(() => pausedMutations.reduce((promise, mutation) => promise.then(() => mutation.continue().catch(noop)), Promise.resolve()));\n    }).then(() => {\n      this.resuming = undefined;\n    });\n    return this.resuming;\n  }\n\n}\n\n\n//# sourceMappingURL=mutationCache.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/infiniteQueryBehavior.mjs\nfunction infiniteQueryBehavior() {\n  return {\n    onFetch: context => {\n      context.fetchFn = () => {\n        var _context$fetchOptions, _context$fetchOptions2, _context$fetchOptions3, _context$fetchOptions4, _context$state$data, _context$state$data2;\n\n        const refetchPage = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.refetchPage;\n        const fetchMore = (_context$fetchOptions3 = context.fetchOptions) == null ? void 0 : (_context$fetchOptions4 = _context$fetchOptions3.meta) == null ? void 0 : _context$fetchOptions4.fetchMore;\n        const pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        const isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        const isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        const oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        const oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        let newPageParams = oldPageParams;\n        let cancelled = false;\n\n        const addSignalProperty = object => {\n          Object.defineProperty(object, 'signal', {\n            enumerable: true,\n            get: () => {\n              var _context$signal;\n\n              if ((_context$signal = context.signal) != null && _context$signal.aborted) {\n                cancelled = true;\n              } else {\n                var _context$signal2;\n\n                (_context$signal2 = context.signal) == null ? void 0 : _context$signal2.addEventListener('abort', () => {\n                  cancelled = true;\n                });\n              }\n\n              return context.signal;\n            }\n          });\n        }; // Get query function\n\n\n        const queryFn = context.options.queryFn || (() => Promise.reject(\"Missing queryFn for queryKey '\" + context.options.queryHash + \"'\"));\n\n        const buildNewPages = (pages, param, page, previous) => {\n          newPageParams = previous ? [param, ...newPageParams] : [...newPageParams, param];\n          return previous ? [page, ...pages] : [...pages, page];\n        }; // Create function to fetch a page\n\n\n        const fetchPage = (pages, manual, param, previous) => {\n          if (cancelled) {\n            return Promise.reject('Cancelled');\n          }\n\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          const queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param,\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const queryFnResult = queryFn(queryFnContext);\n          const promise = Promise.resolve(queryFnResult).then(page => buildNewPages(pages, param, page, previous));\n          return promise;\n        };\n\n        let promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          const manual = typeof pageParam !== 'undefined';\n          const param = manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param, true);\n        } // Refetch pages\n        else {\n          newPageParams = [];\n          const manual = typeof context.options.getNextPageParam === 'undefined';\n          const shouldFetchFirstPage = refetchPage && oldPages[0] ? refetchPage(oldPages[0], 0, oldPages) : true; // Fetch first page\n\n          promise = shouldFetchFirstPage ? fetchPage([], manual, oldPageParams[0]) : Promise.resolve(buildNewPages([], oldPageParams[0], oldPages[0])); // Fetch remaining pages\n\n          for (let i = 1; i < oldPages.length; i++) {\n            promise = promise.then(pages => {\n              const shouldFetchNextPage = refetchPage && oldPages[i] ? refetchPage(oldPages[i], i, oldPages) : true;\n\n              if (shouldFetchNextPage) {\n                const param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              }\n\n              return Promise.resolve(buildNewPages(pages, oldPageParams[i], oldPages[i]));\n            });\n          }\n        }\n\n        const finalPromise = promise.then(pages => ({\n          pages,\n          pageParams: newPageParams\n        }));\n        return finalPromise;\n      };\n    }\n  };\n}\nfunction getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nfunction getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    const nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n\n  return;\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nfunction hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    const previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n\n  return;\n}\n\n\n//# sourceMappingURL=infiniteQueryBehavior.mjs.map\n\n;// CONCATENATED MODULE: ../../../node_modules/@tanstack/query-core/build/lib/queryClient.mjs\n\n\n\n\n\n\n\n\n\n// CLASS\nclass QueryClient {\n  constructor(config = {}) {\n    this.queryCache = config.queryCache || new QueryCache();\n    this.mutationCache = config.mutationCache || new MutationCache();\n    this.logger = config.logger || defaultLogger;\n    this.defaultOptions = config.defaultOptions || {};\n    this.queryDefaults = [];\n    this.mutationDefaults = [];\n    this.mountCount = 0;\n\n    if (false) {}\n  }\n\n  mount() {\n    this.mountCount++;\n    if (this.mountCount !== 1) return;\n    this.unsubscribeFocus = focusManager.subscribe(() => {\n      if (focusManager.isFocused()) {\n        this.resumePausedMutations();\n        this.queryCache.onFocus();\n      }\n    });\n    this.unsubscribeOnline = onlineManager.subscribe(() => {\n      if (onlineManager.isOnline()) {\n        this.resumePausedMutations();\n        this.queryCache.onOnline();\n      }\n    });\n  }\n\n  unmount() {\n    var _this$unsubscribeFocu, _this$unsubscribeOnli;\n\n    this.mountCount--;\n    if (this.mountCount !== 0) return;\n    (_this$unsubscribeFocu = this.unsubscribeFocus) == null ? void 0 : _this$unsubscribeFocu.call(this);\n    this.unsubscribeFocus = undefined;\n    (_this$unsubscribeOnli = this.unsubscribeOnline) == null ? void 0 : _this$unsubscribeOnli.call(this);\n    this.unsubscribeOnline = undefined;\n  }\n\n  isFetching(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    filters.fetchStatus = 'fetching';\n    return this.queryCache.findAll(filters).length;\n  }\n\n  isMutating(filters) {\n    return this.mutationCache.findAll({ ...filters,\n      fetching: true\n    }).length;\n  }\n\n  getQueryData(queryKey, filters) {\n    var _this$queryCache$find;\n\n    return (_this$queryCache$find = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find.state.data;\n  }\n\n  ensureQueryData(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const cachedData = this.getQueryData(parsedOptions.queryKey);\n    return cachedData ? Promise.resolve(cachedData) : this.fetchQuery(parsedOptions);\n  }\n\n  getQueriesData(queryKeyOrFilters) {\n    return this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n\n  setQueryData(queryKey, updater, options) {\n    const query = this.queryCache.find(queryKey);\n    const prevData = query == null ? void 0 : query.state.data;\n    const data = functionalUpdate(updater, prevData);\n\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    const parsedOptions = parseQueryArgs(queryKey);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions);\n    return this.queryCache.build(this, defaultedOptions).setData(data, { ...options,\n      manual: true\n    });\n  }\n\n  setQueriesData(queryKeyOrFilters, updater, options) {\n    return notifyManager.batch(() => this.getQueryCache().findAll(queryKeyOrFilters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n\n  getQueryState(queryKey, filters) {\n    var _this$queryCache$find2;\n\n    return (_this$queryCache$find2 = this.queryCache.find(queryKey, filters)) == null ? void 0 : _this$queryCache$find2.state;\n  }\n\n  removeQueries(arg1, arg2) {\n    const [filters] = parseFilterArgs(arg1, arg2);\n    const queryCache = this.queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n\n  resetQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const queryCache = this.queryCache;\n    const refetchFilters = {\n      type: 'active',\n      ...filters\n    };\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  cancelQueries(arg1, arg2, arg3) {\n    const [filters, cancelOptions = {}] = parseFilterArgs(arg1, arg2, arg3);\n\n    if (typeof cancelOptions.revert === 'undefined') {\n      cancelOptions.revert = true;\n    }\n\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).map(query => query.cancel(cancelOptions)));\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n\n  invalidateQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    return notifyManager.batch(() => {\n      var _ref, _filters$refetchType;\n\n      this.queryCache.findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n\n      if (filters.refetchType === 'none') {\n        return Promise.resolve();\n      }\n\n      const refetchFilters = { ...filters,\n        type: (_ref = (_filters$refetchType = filters.refetchType) != null ? _filters$refetchType : filters.type) != null ? _ref : 'active'\n      };\n      return this.refetchQueries(refetchFilters, options);\n    });\n  }\n\n  refetchQueries(arg1, arg2, arg3) {\n    const [filters, options] = parseFilterArgs(arg1, arg2, arg3);\n    const promises = notifyManager.batch(() => this.queryCache.findAll(filters).filter(query => !query.isDisabled()).map(query => {\n      var _options$cancelRefetc;\n\n      return query.fetch(undefined, { ...options,\n        cancelRefetch: (_options$cancelRefetc = options == null ? void 0 : options.cancelRefetch) != null ? _options$cancelRefetc : true,\n        meta: {\n          refetchPage: filters.refetchPage\n        }\n      });\n    }));\n    let promise = Promise.all(promises).then(noop);\n\n    if (!(options != null && options.throwOnError)) {\n      promise = promise.catch(noop);\n    }\n\n    return promise;\n  }\n\n  fetchQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    const defaultedOptions = this.defaultQueryOptions(parsedOptions); // https://github.com/tannerlinsley/react-query/issues/652\n\n    if (typeof defaultedOptions.retry === 'undefined') {\n      defaultedOptions.retry = false;\n    }\n\n    const query = this.queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n\n  prefetchQuery(arg1, arg2, arg3) {\n    return this.fetchQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  fetchInfiniteQuery(arg1, arg2, arg3) {\n    const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n    parsedOptions.behavior = infiniteQueryBehavior();\n    return this.fetchQuery(parsedOptions);\n  }\n\n  prefetchInfiniteQuery(arg1, arg2, arg3) {\n    return this.fetchInfiniteQuery(arg1, arg2, arg3).then(noop).catch(noop);\n  }\n\n  resumePausedMutations() {\n    return this.mutationCache.resumePausedMutations();\n  }\n\n  getQueryCache() {\n    return this.queryCache;\n  }\n\n  getMutationCache() {\n    return this.mutationCache;\n  }\n\n  getLogger() {\n    return this.logger;\n  }\n\n  getDefaultOptions() {\n    return this.defaultOptions;\n  }\n\n  setDefaultOptions(options) {\n    this.defaultOptions = options;\n  }\n\n  setQueryDefaults(queryKey, options) {\n    const result = this.queryDefaults.find(x => hashQueryKey(queryKey) === hashQueryKey(x.queryKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.queryDefaults.push({\n        queryKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getQueryDefaults(queryKey) {\n    if (!queryKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.queryDefaults.find(x => partialMatchKey(queryKey, x.queryKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  setMutationDefaults(mutationKey, options) {\n    const result = this.mutationDefaults.find(x => hashQueryKey(mutationKey) === hashQueryKey(x.mutationKey));\n\n    if (result) {\n      result.defaultOptions = options;\n    } else {\n      this.mutationDefaults.push({\n        mutationKey,\n        defaultOptions: options\n      });\n    }\n  }\n\n  getMutationDefaults(mutationKey) {\n    if (!mutationKey) {\n      return undefined;\n    } // Get the first matching defaults\n\n\n    const firstMatchingDefaults = this.mutationDefaults.find(x => partialMatchKey(mutationKey, x.mutationKey)); // Additional checks and error in dev mode\n\n    if (false) {}\n\n    return firstMatchingDefaults == null ? void 0 : firstMatchingDefaults.defaultOptions;\n  }\n\n  defaultQueryOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    const defaultedOptions = { ...this.defaultOptions.queries,\n      ...this.getQueryDefaults(options == null ? void 0 : options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n\n    if (!defaultedOptions.queryHash && defaultedOptions.queryKey) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(defaultedOptions.queryKey, defaultedOptions);\n    } // dependent default values\n\n\n    if (typeof defaultedOptions.refetchOnReconnect === 'undefined') {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== 'always';\n    }\n\n    if (typeof defaultedOptions.useErrorBoundary === 'undefined') {\n      defaultedOptions.useErrorBoundary = !!defaultedOptions.suspense;\n    }\n\n    return defaultedOptions;\n  }\n\n  defaultMutationOptions(options) {\n    if (options != null && options._defaulted) {\n      return options;\n    }\n\n    return { ...this.defaultOptions.mutations,\n      ...this.getMutationDefaults(options == null ? void 0 : options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n\n  clear() {\n    this.queryCache.clear();\n    this.mutationCache.clear();\n  }\n\n}\n\n\n//# sourceMappingURL=queryClient.mjs.map\n\n;// CONCATENATED MODULE: ../../api/src/APIProvider.tsx\n\n// @ts-expect-error `@deriv/deriv-api` is not in TypeScript, Hence we ignore the TS error.\n\n\n\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\n// This is a temporary workaround to share a single `QueryClient` instance between all the packages.\n// Later once we have each package separated we won't need this anymore and can remove this.\nvar getSharedQueryClientContext = function getSharedQueryClientContext() {\n  if (!window.ReactQueryClient) {\n    window.ReactQueryClient = new QueryClient();\n  }\n  return window.ReactQueryClient;\n};\n\n// This is a temporary workaround to share a single `DerivAPIBasic` instance for every unique URL.\n// Later once we have each package separated we won't need this anymore and can remove this.\nvar getDerivAPIInstance = function getDerivAPIInstance() {\n  var _window$DerivAPI, _window$DerivAPI2;\n  var endpoint = getSocketURL();\n  var app_id = getAppId();\n  var language = 'EN'; // Need to use the language from the app context.\n  var brand = 'deriv';\n  var wss = \"wss://\".concat(endpoint, \"/websockets/v3?app_id=\").concat(app_id, \"&l=\").concat(language, \"&brand=\").concat(brand);\n  if (!window.DerivAPI) {\n    window.DerivAPI = {};\n  }\n  if (!((_window$DerivAPI = window.DerivAPI) !== null && _window$DerivAPI !== void 0 && _window$DerivAPI[wss])) {\n    window.DerivAPI[wss] = new DerivAPIBasic({\n      connection: new WebSocket(wss)\n    });\n  }\n  return (_window$DerivAPI2 = window.DerivAPI) === null || _window$DerivAPI2 === void 0 ? void 0 : _window$DerivAPI2[wss];\n};\nvar queryClient = getSharedQueryClientContext();\nvar APIProvider_APIProvider = function APIProvider(_ref) {\n  var children = _ref.children,\n    _ref$standalone = _ref.standalone,\n    standalone = _ref$standalone === void 0 ? false : _ref$standalone;\n  var WS = useWS();\n  // Use the new API instance if the `standalone` prop is set to true,\n  // else use the legacy socket connection.\n  var active_connection = standalone ? getDerivAPIInstance() : WS;\n  return /*#__PURE__*/React.createElement(APIContext.Provider, {\n    value: active_connection\n  }, /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient\n  }, children));\n};\n/* harmony default export */ const src_APIProvider = ((/* unused pure expression or super */ null && (APIProvider_APIProvider)));\n// EXTERNAL MODULE: ../../../node_modules/lodash.groupby/index.js\nvar lodash_groupby = __webpack_require__(\"../../../node_modules/lodash.groupby/index.js\");\n// EXTERNAL MODULE: ../../../node_modules/lodash.pickby/index.js\nvar lodash_pickby = __webpack_require__(\"../../../node_modules/lodash.pickby/index.js\");\n// EXTERNAL MODULE: ../../../node_modules/moment/moment.js\nvar moment_moment = __webpack_require__(\"../../../node_modules/moment/moment.js\");\n;// CONCATENATED MODULE: ../../utils/src/groupTransactionsByDay.ts\n\n\n\nvar groupTransactionsByDay = function groupTransactionsByDay(transactions) {\n  var grouped_transactions = pickBy(groupBy(transactions, function (transaction) {\n    return transaction.transaction_time ? moment(transaction.transaction_time * 1000).startOf('day').format('DD MMM YYYY') : null;\n  }), function (value, key) {\n    return key !== null;\n  });\n  return grouped_transactions;\n};\n/* harmony default export */ const src_groupTransactionsByDay = ((/* unused pure expression or super */ null && (groupTransactionsByDay)));\n;// CONCATENATED MODULE: ../../utils/src/index.ts\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../api/src/useInvalidateQuery.ts\n\n\nvar useInvalidateQuery_useInvalidateQuery = function useInvalidateQuery() {\n  var queryClient = useQueryClient();\n  var invalidate = useCallback(function (name, options) {\n    return queryClient.invalidateQueries(Array.isArray(name) ? name : [name], options);\n  }, [queryClient]);\n  return invalidate;\n};\n/* harmony default export */ const src_useInvalidateQuery = ((/* unused pure expression or super */ null && (useInvalidateQuery_useInvalidateQuery)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAuthorize.ts\nfunction useAuthorize_typeof(obj) { \"@babel/helpers - typeof\"; return useAuthorize_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAuthorize_typeof(obj); }\nvar useAuthorize_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAuthorize_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAuthorize_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAuthorize_ownKeys(Object(source), !0).forEach(function (key) { useAuthorize_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAuthorize_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAuthorize_defineProperty(obj, key, value) { key = useAuthorize_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAuthorize_toPropertyKey(arg) { var key = useAuthorize_toPrimitive(arg, \"string\"); return useAuthorize_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAuthorize_toPrimitive(input, hint) { if (useAuthorize_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAuthorize_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAuthorize_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAuthorize_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAuthorize_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that authorize the user with the given token. If no token is given,\n * it will use the current token from localStorage.\n */\nvar useAuthorize_useAuthorize = function useAuthorize() {\n  var current_token = getActiveAuthTokenIDFromLocalStorage();\n  var invalidate = useInvalidateQuery();\n  var _useQuery = useQuery('authorize', {\n      payload: {\n        authorize: current_token || ''\n      },\n      options: {\n        enabled: Boolean(current_token)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAuthorize_objectWithoutProperties(_useQuery, useAuthorize_excluded);\n\n  // Add additional information to the authorize response.\n  var modified_authorize = useMemo(function () {\n    return useAuthorize_objectSpread({}, data === null || data === void 0 ? void 0 : data.authorize);\n  }, [data === null || data === void 0 ? void 0 : data.authorize]);\n  var switchAccount = useCallback(function (loginid) {\n    var active_loginid = getActiveLoginIDFromLocalStorage();\n    if (active_loginid !== loginid) {\n      localStorage.setItem('active_loginid', loginid);\n      invalidate('authorize');\n    }\n  }, [invalidate]);\n  return useAuthorize_objectSpread({\n    /** The authorize response. */\n    data: modified_authorize,\n    /** Function to switch to another account */\n    switchAccount: switchAccount\n  }, rest);\n};\n/* harmony default export */ const hooks_useAuthorize = ((/* unused pure expression or super */ null && (useAuthorize_useAuthorize)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountLimits.ts\nfunction useAccountLimits_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountLimits_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountLimits_typeof(obj); }\nvar useAccountLimits_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountLimits_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountLimits_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountLimits_ownKeys(Object(source), !0).forEach(function (key) { useAccountLimits_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountLimits_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountLimits_defineProperty(obj, key, value) { key = useAccountLimits_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountLimits_toPropertyKey(arg) { var key = useAccountLimits_toPrimitive(arg, \"string\"); return useAccountLimits_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountLimits_toPrimitive(input, hint) { if (useAccountLimits_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountLimits_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountLimits_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountLimits_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountLimits_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get account limits */\nvar useAccountLimits = function useAccountLimits() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('get_limits', {\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAccountLimits_objectWithoutProperties(_useQuery, useAccountLimits_excluded);\n  return useAccountLimits_objectSpread({\n    /** Account limits response */\n    data: data === null || data === void 0 ? void 0 : data.get_limits\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountLimits = ((/* unused pure expression or super */ null && (useAccountLimits)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useGetAccountStatus.ts\nfunction useGetAccountStatus_typeof(obj) { \"@babel/helpers - typeof\"; return useGetAccountStatus_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useGetAccountStatus_typeof(obj); }\nvar useGetAccountStatus_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useGetAccountStatus_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useGetAccountStatus_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useGetAccountStatus_ownKeys(Object(source), !0).forEach(function (key) { useGetAccountStatus_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useGetAccountStatus_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useGetAccountStatus_defineProperty(obj, key, value) { key = useGetAccountStatus_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useGetAccountStatus_toPropertyKey(arg) { var key = useGetAccountStatus_toPrimitive(arg, \"string\"); return useGetAccountStatus_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useGetAccountStatus_toPrimitive(input, hint) { if (useGetAccountStatus_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useGetAccountStatus_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useGetAccountStatus_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useGetAccountStatus_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useGetAccountStatus_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to retrieves the account status for the current user. */\nvar useGetAccountStatus_useGetAccountStatus = function useGetAccountStatus() {\n  var _useQuery = useQuery('get_account_status'),\n    get_account_status_data = _useQuery.data,\n    rest = useGetAccountStatus_objectWithoutProperties(_useQuery, useGetAccountStatus_excluded);\n\n  // Add additional information to the account status response.\n  var modified_account_status = useMemo(function () {\n    if (!(get_account_status_data !== null && get_account_status_data !== void 0 && get_account_status_data.get_account_status)) return;\n    return useGetAccountStatus_objectSpread(useGetAccountStatus_objectSpread({}, get_account_status_data.get_account_status), {}, {\n      /** Indicates whether the client should be prompted to authenticate their account. */\n      should_prompt_client_to_authenticate: Boolean(get_account_status_data.get_account_status.prompt_client_to_authenticate)\n    });\n  }, [get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.get_account_status]);\n  return useGetAccountStatus_objectSpread({\n    /** The account status response. */\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useGetAccountStatus = ((/* unused pure expression or super */ null && (useGetAccountStatus_useGetAccountStatus)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountStatus.ts\nfunction useAccountStatus_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountStatus_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountStatus_typeof(obj); }\nvar useAccountStatus_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountStatus_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountStatus_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountStatus_ownKeys(Object(source), !0).forEach(function (key) { useAccountStatus_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountStatus_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountStatus_defineProperty(obj, key, value) { key = useAccountStatus_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountStatus_toPropertyKey(arg) { var key = useAccountStatus_toPrimitive(arg, \"string\"); return useAccountStatus_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountStatus_toPrimitive(input, hint) { if (useAccountStatus_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountStatus_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountStatus_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountStatus_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountStatus_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to check the account status for the current user. */\nvar useAccountStatus = function useAccountStatus() {\n  var _useGetAccountStatus = useGetAccountStatus(),\n    get_account_status_data = _useGetAccountStatus.data,\n    rest = useAccountStatus_objectWithoutProperties(_useGetAccountStatus, useAccountStatus_excluded);\n\n  // Add additional information to the account status response.\n  var modified_account_status = useMemo(function () {\n    if (!(get_account_status_data !== null && get_account_status_data !== void 0 && get_account_status_data.status)) return;\n    var status = new Set(get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status);\n    return {\n      /** Account status. */\n      status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status,\n      /** client's address is verified by third party services. */\n      is_address_verified: status.has('address_verified'),\n      /** client is allowed to upload documents. */\n      is_allow_document_upload: status.has('allow_document_upload'),\n      /** client is age-verified. */\n      is_age_verification: status.has('age_verification'),\n      /** client is fully authenticated. */\n      is_authenticated: status.has('authenticated'),\n      /** cashier is locked. */\n      is_cashier_locked: status.has('cashier_locked'),\n      /** client has updated tax related information. */\n      is_crs_tin_information: status.has('crs_tin_information'),\n      /** deposit is not allowed. */\n      is_deposit_locked: status.has('deposit_locked'),\n      /** account is disabled. */\n      is_disabled: status.has('disabled'),\n      /** client's submitted proof-of-identity documents have expired. */\n      is_document_expired: status.has('document_expired'),\n      /** client's submitted proof-of-identity documents are expiring within a month. */\n      is_document_expiring_soon: status.has('document_expiring_soon'),\n      /** Deriv X password is not set. */\n      is_dxtrade_password_not_set: status.has('dxtrade_password_not_set'),\n      /** client should complete their financial assessment. */\n      is_financial_assessment_not_complete: status.has('financial_assessment_not_complete'),\n      /** client has not completed financial assessment. */\n      is_financial_information_not_complete: status.has('financial_information_not_complete'),\n      /** client has accepted financial risk disclosure. */\n      is_financial_risk_approval: status.has('financial_risk_approval'),\n      /** client has not set financial limits on their account. Applies to UK and Malta clients. */\n      is_max_turnover_limit_not_set: status.has('max_turnover_limit_not_set'),\n      /** MT5 password is not set. */\n      is_mt5_password_not_set: status.has('mt5_password_not_set'),\n      /** MT5 deposits allowed, but withdrawal is not allowed. */\n      is_mt5_withdrawal_locked: status.has('mt5_withdrawal_locked'),\n      /** user must approve the Affiliate's Code of Conduct Agreement. */\n      is_needs_affiliate_coc_approval: status.has('needs_affiliate_coc_approval'),\n      /** trading is disabled. */\n      is_no_trading: status.has('no_trading'),\n      /** client cannot trade or withdraw but can deposit. */\n      is_no_withdrawal_or_trading: status.has('no_withdrawal_or_trading'),\n      /** p2p is blocked for the current payment agent client. */\n      is_p2p_blocked_for_pa: status.has('p2p_blocked_for_pa'),\n      /** withdrawal through payment agent is allowed. */\n      is_pa_withdrawal_explicitly_allowed: status.has('pa_withdrawal_explicitly_allowed'),\n      /** this client must reset their password. */\n      is_password_reset_required: status.has('password_reset_required'),\n      /** this client has opted for a professional account. */\n      is_professional: status.has('professional'),\n      /** this client has requested for a professional account. */\n      is_professional_requested: status.has('professional_requested'),\n      /** this client's request for a professional account has been rejected. */\n      is_professional_rejected: status.has('professional_rejected'),\n      /** this client is using social signup. */\n      is_social_signup: status.has('social_signup'),\n      /** client has not completed the trading experience questionnaire. */\n      is_trading_experience_not_complete: status.has('trading_experience_not_complete'),\n      /** client has acknowledged UKGC funds protection notice. */\n      is_ukgc_funds_protection: status.has('ukgc_funds_protection'),\n      /** client cannot deposit or buy contracts, but can withdraw or sell contracts. */\n      is_unwelcome: status.has('unwelcome'),\n      /** deposits allowed but withdrawals are not allowed. */\n      is_withdrawal_locked: status.has('withdrawal_locked'),\n      /** this prevent a client from changing the account currency after deposit attempt. */\n      is_deposit_attempt: status.has('deposit_attempt'),\n      /** client POI documents name mismatch. */\n      is_poi_name_mismatch: status.has('poi_name_mismatch'),\n      /** the client can resubmit POA documents. */\n      is_allow_poa_resubmission: status.has('allow_poa_resubmission'),\n      /** the client can resubmit POI documents. */\n      is_allow_poi_resubmission: status.has('allow_poi_resubmission'),\n      /** the client has been sharing payment methods. */\n      is_shared_payment_method: status.has('shared_payment_method'),\n      /** client is not allowed to edit personal profile details. */\n      is_personal_details_locked: status.has('personal_details_locked'),\n      /** it block any transfer between two accounts. */\n      is_transfers_blocked: status.has('transfers_blocked'),\n      /** the DF deposit will be blocked until the client gets age verified. */\n      is_df_deposit_requires_poi: status.has('df_deposit_requires_poi'),\n      /** the client has been fully authenticated by IDV. */\n      is_authenticated_with_idv_photoid: status.has('authenticated_with_idv_photoid'),\n      /** the client used to be fully authenticated by IDV but it was taken away due to compliance criteria. */\n      is_idv_revoked: status.has('idv_revoked')\n    };\n  }, [get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status]);\n  return useAccountStatus_objectSpread({\n    /** The account status response. */\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountStatus = ((/* unused pure expression or super */ null && (useAccountStatus)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountTypes.ts\nfunction useAccountTypes_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountTypes_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountTypes_typeof(obj); }\nvar useAccountTypes_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountTypes_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountTypes_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountTypes_ownKeys(Object(source), !0).forEach(function (key) { useAccountTypes_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountTypes_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountTypes_defineProperty(obj, key, value) { key = useAccountTypes_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountTypes_toPropertyKey(arg) { var key = useAccountTypes_toPrimitive(arg, \"string\"); return useAccountTypes_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountTypes_toPrimitive(input, hint) { if (useAccountTypes_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountTypes_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountTypes_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountTypes_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountTypes_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get available account types for a specific landing company. */\nvar useAccountTypes_useAccountTypes = function useAccountTypes(landing_company) {\n  var _useQuery = useQuery('get_account_types', {\n      payload: {\n        company: landing_company\n      },\n      options: {\n        enabled: Boolean(landing_company)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useAccountTypes_objectWithoutProperties(_useQuery, useAccountTypes_excluded);\n\n  // Add additional information to the account types response.\n  var modified_account_types = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.get_account_types)) return;\n    return useAccountTypes_objectSpread(useAccountTypes_objectSpread({}, data.get_account_types), {}, {\n      /** Landing company for the account types */\n      landing_company: landing_company\n    });\n  }, [data === null || data === void 0 ? void 0 : data.get_account_types, landing_company]);\n  return useAccountTypes_objectSpread({\n    /** The account types response. */\n    data: modified_account_types\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountTypes = ((/* unused pure expression or super */ null && (useAccountTypes_useAccountTypes)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useBalance.ts\nfunction useBalance_typeof(obj) { \"@babel/helpers - typeof\"; return useBalance_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useBalance_typeof(obj); }\nvar useBalance_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useBalance_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useBalance_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useBalance_ownKeys(Object(source), !0).forEach(function (key) { useBalance_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useBalance_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useBalance_defineProperty(obj, key, value) { key = useBalance_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useBalance_toPropertyKey(arg) { var key = useBalance_toPrimitive(arg, \"string\"); return useBalance_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useBalance_toPrimitive(input, hint) { if (useBalance_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useBalance_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useBalance_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useBalance_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useBalance_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that gets the balance for all the user accounts. */\nvar useBalance_useBalance = function useBalance() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('balance', {\n      payload: {\n        account: 'all'\n      },\n      options: {\n        enabled: isSuccess,\n        refetchInterval: 30000 // Refetch every 30 seconds to simulate subscription.\n      }\n    }),\n    balance_data = _useQuery.data,\n    rest = useBalance_objectWithoutProperties(_useQuery, useBalance_excluded);\n\n  // Add additional information to the balance data.\n  var modified_balance = useMemo(function () {\n    return useBalance_objectSpread({}, balance_data === null || balance_data === void 0 ? void 0 : balance_data.balance);\n  }, [balance_data === null || balance_data === void 0 ? void 0 : balance_data.balance]);\n  return useBalance_objectSpread({\n    /** The balance response. */\n    data: modified_balance\n  }, rest);\n};\n/* harmony default export */ const hooks_useBalance = ((/* unused pure expression or super */ null && (useBalance_useBalance)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCurrencyConfig.ts\nfunction useCurrencyConfig_typeof(obj) { \"@babel/helpers - typeof\"; return useCurrencyConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCurrencyConfig_typeof(obj); }\nvar useCurrencyConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCurrencyConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCurrencyConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCurrencyConfig_ownKeys(Object(source), !0).forEach(function (key) { useCurrencyConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCurrencyConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCurrencyConfig_defineProperty(obj, key, value) { key = useCurrencyConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCurrencyConfig_toPropertyKey(arg) { var key = useCurrencyConfig_toPrimitive(arg, \"string\"); return useCurrencyConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCurrencyConfig_toPrimitive(input, hint) { if (useCurrencyConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCurrencyConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCurrencyConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the currency config information from `website_status` endpoint and `crypto_config` endpoint. */\nvar useCurrencyConfig_useCurrencyConfig = function useCurrencyConfig() {\n  var _website_status_data$2, _crypto_config_data$c2;\n  var _useQuery = useQuery('website_status'),\n    website_status_data = _useQuery.data,\n    rest = useCurrencyConfig_objectWithoutProperties(_useQuery, useCurrencyConfig_excluded);\n  var _useQuery2 = useQuery('crypto_config'),\n    crypto_config_data = _useQuery2.data;\n\n  // Add additional information to the currency config.\n  var modified_currencies_config = useMemo(function () {\n    var _website_status_data$;\n    if (!(website_status_data !== null && website_status_data !== void 0 && (_website_status_data$ = website_status_data.website_status) !== null && _website_status_data$ !== void 0 && _website_status_data$.currencies_config)) return undefined;\n    var website_status_currencies_config = website_status_data.website_status.currencies_config;\n    return Object.keys(website_status_currencies_config).map(function (currency) {\n      var currency_config = website_status_currencies_config[currency];\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, currency_config), {}, {\n        /** determine if the currency is a `crypto` currency */\n        is_crypto: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'crypto',\n        /** determine if the currency is a `fiat` currency */\n        is_fiat: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'fiat',\n        /** determine if the currency is `Australian Dollar` */\n        is_AUD: currency === 'AUD',\n        /** determine if the currency is `US Dollar` */\n        is_USD: currency === 'USD',\n        /** determine if the currency is `Euro` */\n        is_EUR: currency === 'EUR',\n        /** determine if the currency is `Pound Sterling` */\n        is_GBP: currency === 'GBP',\n        /** determine if the currency is `Bitcoin` */\n        is_BTC: currency === 'BTC',\n        /** determine if the currency is `Ethereum` */\n        is_ETH: currency === 'ETH',\n        /** determine if the currency is `Litecoin` */\n        is_LTC: currency === 'LTC',\n        /** determine if the currency is `Multi-Collateral DAI` */\n        is_DAI: currency === 'DAI',\n        /** determine if the currency is `IDK` */\n        is_IDK: currency === 'IDK',\n        /** determine if the currency is `Paxos Standard` */\n        is_PAX: currency === 'PAX',\n        /** determine if the currency is `Binary Coin` */\n        is_USB: currency === 'USB',\n        /** determine if the currency is `Tether Omni` */\n        is_USDT: currency === 'UST',\n        /** determine if the currency is `True USD` */\n        is_TUSD: currency === 'TUSD',\n        /** determine if the currency is `Binance USD` */\n        is_BUSD: currency === 'BUSD',\n        /** determine if the currency is `STATIS Euro` */\n        is_EURS: currency === 'EURS',\n        /** determine if the currency is `Tether ERC20` */\n        is_eUSDT: currency === 'eUSDT',\n        /** determine if the currency is `Tether TRC20` */\n        is_tUSDT: currency === 'tUSDT',\n        /** determine if the currency is `USD Coin` */\n        is_USDC: currency === 'USDC',\n        /** determine if the currency is `USDK` */\n        is_USDK: currency === 'USDK',\n        /** Currency code */\n        code: currency,\n        /** Currency display code */\n        display_code: currency === 'UST' ? 'USDT' : currency\n      });\n    });\n  }, [website_status_data === null || website_status_data === void 0 ? void 0 : (_website_status_data$2 = website_status_data.website_status) === null || _website_status_data$2 === void 0 ? void 0 : _website_status_data$2.currencies_config]);\n\n  // Add additional information to the crypto config.\n  var modified_crypto_config = useMemo(function () {\n    return modified_currencies_config === null || modified_currencies_config === void 0 ? void 0 : modified_currencies_config.map(function (currency_config) {\n      var _crypto_config_data$c;\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, currency_config), crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c = crypto_config_data.crypto_config) === null || _crypto_config_data$c === void 0 ? void 0 : _crypto_config_data$c.currencies_config[currency_config.code]);\n    });\n  }, [crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c2 = crypto_config_data.crypto_config) === null || _crypto_config_data$c2 === void 0 ? void 0 : _crypto_config_data$c2.currencies_config, modified_currencies_config]);\n\n  // Transform the currency config array into a record object.\n  var transformed_currencies_config = useMemo(function () {\n    return modified_crypto_config === null || modified_crypto_config === void 0 ? void 0 : modified_crypto_config.reduce(function (previous, current) {\n      return useCurrencyConfig_objectSpread(useCurrencyConfig_objectSpread({}, previous), {}, useCurrencyConfig_defineProperty({}, current.code, current));\n    }, {});\n  }, [modified_crypto_config]);\n  var getConfig = useCallback(function (currency) {\n    return transformed_currencies_config === null || transformed_currencies_config === void 0 ? void 0 : transformed_currencies_config[currency];\n  }, [transformed_currencies_config]);\n  return useCurrencyConfig_objectSpread({\n    /** Available currencies and their information */\n    data: transformed_currencies_config,\n    /** Returns the currency config object for the given currency */\n    getConfig: getConfig\n  }, rest);\n};\n/* harmony default export */ const hooks_useCurrencyConfig = ((/* unused pure expression or super */ null && (useCurrencyConfig_useCurrencyConfig)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAccountsList.ts\nfunction useAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAccountsList_typeof(obj); }\nvar useAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAccountsList_defineProperty(obj, key, value) { key = useAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAccountsList_toPropertyKey(arg) { var key = useAccountsList_toPrimitive(arg, \"string\"); return useAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAccountsList_toPrimitive(input, hint) { if (useAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that returns the list of accounts for the current user. */\nvar useAccountsList_useAccountsList = function useAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    rest = useAccountsList_objectWithoutProperties(_useAuthorize, useAccountsList_excluded);\n  var _useBalance = useBalance(),\n    balance_data = _useBalance.data;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  // Add additional information to the authorize response.\n  var modified_accounts = useMemo(function () {\n    var _authorize_data$accou;\n    return (_authorize_data$accou = authorize_data.account_list) === null || _authorize_data$accou === void 0 ? void 0 : _authorize_data$accou.map(function (account) {\n      return useAccountsList_objectSpread(useAccountsList_objectSpread({}, account), {}, {\n        /** Creation time of the account. */\n        created_at: account.created_at ? new Date(account.created_at) : undefined,\n        /** Date till client has excluded him/herself from the website, only present if client is self excluded. */\n        excluded_until: account.excluded_until ? new Date(account.excluded_until) : undefined,\n        /** Indicating whether the wallet is the currently active account. */\n        is_active: account.loginid === authorize_data.loginid,\n        /** indicating whether the account is a virtual-money account. */\n        is_virtual: Boolean(account.is_virtual),\n        /** indicating whether the account is marked as disabled or not. */\n        is_disabled: Boolean(account.is_disabled),\n        /** indicating whether the account is a trading account. */\n        is_trading: account.account_category === 'trading',\n        /** indicating whether the account is a wallet account. */\n        is_wallet: account.account_category === 'wallet',\n        /** The account ID of specified account. */\n        loginid: \"\".concat(account.loginid),\n        /** Account's currency config information */\n        currency_config: account.currency ? getConfig(account.currency) : undefined\n      });\n    });\n  }, [authorize_data.account_list, authorize_data.loginid, getConfig]);\n\n  // Add balance to each account\n  var modified_accounts_with_balance = useMemo(function () {\n    return modified_accounts === null || modified_accounts === void 0 ? void 0 : modified_accounts.map(function (account) {\n      var _balance_data$account, _balance_data$account2, _account$currency_con, _account$currency_con2, _account$currency_con3;\n      var balance = (balance_data === null || balance_data === void 0 ? void 0 : (_balance_data$account = balance_data.accounts) === null || _balance_data$account === void 0 ? void 0 : (_balance_data$account2 = _balance_data$account[account.loginid]) === null || _balance_data$account2 === void 0 ? void 0 : _balance_data$account2.balance) || 0;\n      return useAccountsList_objectSpread(useAccountsList_objectSpread({}, account), {}, {\n        /** The balance of the account. */\n        balance: balance,\n        /** The balance of the account in currency format. */\n        display_balance: \"\".concat(Intl.NumberFormat((authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language) || 'en-US', {\n          minimumFractionDigits: ((_account$currency_con = account.currency_config) === null || _account$currency_con === void 0 ? void 0 : _account$currency_con.fractional_digits) || 2,\n          maximumFractionDigits: ((_account$currency_con2 = account.currency_config) === null || _account$currency_con2 === void 0 ? void 0 : _account$currency_con2.fractional_digits) || 2,\n          minimumIntegerDigits: 1\n        }).format(balance), \" \").concat(((_account$currency_con3 = account.currency_config) === null || _account$currency_con3 === void 0 ? void 0 : _account$currency_con3.display_code) || 'USD')\n      });\n    });\n  }, [balance_data === null || balance_data === void 0 ? void 0 : balance_data.accounts, modified_accounts, authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language]);\n  return useAccountsList_objectSpread({\n    /** The list of accounts for the current user. */\n    data: modified_accounts_with_balance\n  }, rest);\n};\n/* harmony default export */ const hooks_useAccountsList = ((/* unused pure expression or super */ null && (useAccountsList_useAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveAccount.ts\nfunction useActiveAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveAccount_typeof(obj); }\nvar useActiveAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveAccount_defineProperty(obj, key, value) { key = useActiveAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveAccount_toPropertyKey(arg) { var key = useActiveAccount_toPrimitive(arg, \"string\"); return useActiveAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveAccount_toPrimitive(input, hint) { if (useActiveAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the account object for the current active account. */\nvar useActiveAccount_useActiveAccount = function useActiveAccount() {\n  var _useAccountsList = useAccountsList(),\n    data = _useAccountsList.data,\n    rest = useActiveAccount_objectWithoutProperties(_useAccountsList, useActiveAccount_excluded);\n  var active_account = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (account) {\n      return account.is_active;\n    });\n  }, [data]);\n  return useActiveAccount_objectSpread({\n    /** User's current active account. */\n    data: active_account\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveAccount = ((/* unused pure expression or super */ null && (useActiveAccount_useActiveAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingAccountsList.ts\nfunction useTradingAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingAccountsList_typeof(obj); }\nvar useTradingAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useTradingAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useTradingAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingAccountsList_defineProperty(obj, key, value) { key = useTradingAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingAccountsList_toPropertyKey(arg) { var key = useTradingAccountsList_toPrimitive(arg, \"string\"); return useTradingAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingAccountsList_toPrimitive(input, hint) { if (useTradingAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the list of all trading accounts for the current user. */\nvar useTradingAccountsList_useTradingAccountsList = function useTradingAccountsList() {\n  var _useAccountsList = useAccountsList(),\n    account_list_data = _useAccountsList.data,\n    rest = useTradingAccountsList_objectWithoutProperties(_useAccountsList, useTradingAccountsList_excluded);\n\n  // Filter out non-trading accounts.\n  var filtered_accounts = useMemo(function () {\n    return account_list_data === null || account_list_data === void 0 ? void 0 : account_list_data.filter(function (account) {\n      return account.is_trading;\n    });\n  }, [account_list_data]);\n\n  // Add additional information to each trading account.\n  var modified_accounts = useMemo(function () {\n    return filtered_accounts === null || filtered_accounts === void 0 ? void 0 : filtered_accounts.map(function (trading) {\n      return useTradingAccountsList_objectSpread({}, trading);\n    });\n  }, [filtered_accounts]);\n  return useTradingAccountsList_objectSpread({\n    /** The list of trading accounts for the current user. */\n    data: modified_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingAccountsList = ((/* unused pure expression or super */ null && (useTradingAccountsList_useTradingAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveTradingAccount.ts\nfunction useActiveTradingAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveTradingAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveTradingAccount_typeof(obj); }\nvar useActiveTradingAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveTradingAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveTradingAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveTradingAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveTradingAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveTradingAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveTradingAccount_defineProperty(obj, key, value) { key = useActiveTradingAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveTradingAccount_toPropertyKey(arg) { var key = useActiveTradingAccount_toPrimitive(arg, \"string\"); return useActiveTradingAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveTradingAccount_toPrimitive(input, hint) { if (useActiveTradingAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveTradingAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveTradingAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveTradingAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveTradingAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the trading object for the current active trading. */\nvar useActiveTradingAccount = function useActiveTradingAccount() {\n  var _useTradingAccountsLi = useTradingAccountsList(),\n    data = _useTradingAccountsLi.data,\n    rest = useActiveTradingAccount_objectWithoutProperties(_useTradingAccountsLi, useActiveTradingAccount_excluded);\n  var active_trading = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (trading) {\n      return trading.is_active;\n    });\n  }, [data]);\n  return useActiveTradingAccount_objectSpread({\n    /** User's current active trading. */\n    data: active_trading\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveTradingAccount = ((/* unused pure expression or super */ null && (useActiveTradingAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useWalletAccountsList.ts\nfunction useWalletAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useWalletAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useWalletAccountsList_typeof(obj); }\nvar useWalletAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useWalletAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useWalletAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useWalletAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useWalletAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useWalletAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useWalletAccountsList_defineProperty(obj, key, value) { key = useWalletAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useWalletAccountsList_toPropertyKey(arg) { var key = useWalletAccountsList_toPrimitive(arg, \"string\"); return useWalletAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useWalletAccountsList_toPrimitive(input, hint) { if (useWalletAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useWalletAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useWalletAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useWalletAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useWalletAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the list of all wallet accounts for the current user. */\nvar useWalletAccountsList_useWalletAccountsList = function useWalletAccountsList() {\n  var _useAccountsList = useAccountsList(),\n    account_list_data = _useAccountsList.data,\n    rest = useWalletAccountsList_objectWithoutProperties(_useAccountsList, useWalletAccountsList_excluded);\n\n  // Filter out non-wallet accounts.\n  var filtered_accounts = useMemo(function () {\n    return account_list_data === null || account_list_data === void 0 ? void 0 : account_list_data.filter(function (account) {\n      return account.is_wallet;\n    });\n  }, [account_list_data]);\n\n  // Add additional information to each wallet account.\n  var modified_accounts = useMemo(function () {\n    return filtered_accounts === null || filtered_accounts === void 0 ? void 0 : filtered_accounts.map(function (wallet) {\n      var _wallet$linked_to, _wallet$linked_to$fin, _wallet$landing_compa, _wallet$currency_conf;\n      var wallet_currency_type = wallet.is_virtual ? 'Demo' : wallet.currency || '';\n      var dtrade_loginid = (_wallet$linked_to = wallet.linked_to) === null || _wallet$linked_to === void 0 ? void 0 : (_wallet$linked_to$fin = _wallet$linked_to.find(function (account) {\n        return account.platform === 'dtrade';\n      })) === null || _wallet$linked_to$fin === void 0 ? void 0 : _wallet$linked_to$fin.loginid;\n      return useWalletAccountsList_objectSpread(useWalletAccountsList_objectSpread({}, wallet), {}, {\n        /** Returns the wallet's currency type. ex: `Demo`, `USD`, etc. */\n        wallet_currency_type: wallet_currency_type,\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: (_wallet$landing_compa = wallet.landing_company_name) === null || _wallet$landing_compa === void 0 ? void 0 : _wallet$landing_compa.replace('maltainvest', 'malta'),\n        /** Indicating whether the wallet is a maltainvest wallet. */\n        is_malta_wallet: wallet.landing_company_name === 'malta',\n        /** The DTrade account ID of this wallet */\n        dtrade_loginid: dtrade_loginid,\n        /** Returns if the wallet is a crypto wallet. */\n        is_crypto: (_wallet$currency_conf = wallet.currency_config) === null || _wallet$currency_conf === void 0 ? void 0 : _wallet$currency_conf.is_crypto\n      });\n    });\n  }, [filtered_accounts]);\n\n  // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n  var sorted_accounts = useMemo(function () {\n    if (!modified_accounts) return;\n    return _toConsumableArray(modified_accounts).sort(function (a, b) {\n      var _a$currency_config, _b$currency_config;\n      if (a.is_virtual !== b.is_virtual) {\n        return a.is_virtual ? 1 : -1;\n      } else if (((_a$currency_config = a.currency_config) === null || _a$currency_config === void 0 ? void 0 : _a$currency_config.is_crypto) !== ((_b$currency_config = b.currency_config) === null || _b$currency_config === void 0 ? void 0 : _b$currency_config.is_crypto)) {\n        var _a$currency_config2;\n        return (_a$currency_config2 = a.currency_config) !== null && _a$currency_config2 !== void 0 && _a$currency_config2.is_crypto ? 1 : -1;\n      }\n      return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n    });\n  }, [modified_accounts]);\n  return useWalletAccountsList_objectSpread({\n    /** The list of wallet accounts for the current user. */\n    data: sorted_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useWalletAccountsList = ((/* unused pure expression or super */ null && (useWalletAccountsList_useWalletAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useActiveWalletAccount.ts\nfunction useActiveWalletAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useActiveWalletAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useActiveWalletAccount_typeof(obj); }\nvar useActiveWalletAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useActiveWalletAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useActiveWalletAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useActiveWalletAccount_ownKeys(Object(source), !0).forEach(function (key) { useActiveWalletAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useActiveWalletAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useActiveWalletAccount_defineProperty(obj, key, value) { key = useActiveWalletAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useActiveWalletAccount_toPropertyKey(arg) { var key = useActiveWalletAccount_toPrimitive(arg, \"string\"); return useActiveWalletAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useActiveWalletAccount_toPrimitive(input, hint) { if (useActiveWalletAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useActiveWalletAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useActiveWalletAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useActiveWalletAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useActiveWalletAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the wallet object for the current active wallet. */\nvar useActiveWalletAccount_useActiveWalletAccount = function useActiveWalletAccount() {\n  var _useWalletAccountsLis = useWalletAccountsList(),\n    data = _useWalletAccountsLis.data,\n    rest = useActiveWalletAccount_objectWithoutProperties(_useWalletAccountsLis, useActiveWalletAccount_excluded);\n  var active_wallet = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (wallet) {\n      return wallet.is_active;\n    });\n  }, [data]);\n  return useActiveWalletAccount_objectSpread({\n    /** User's current active wallet. */\n    data: active_wallet\n  }, rest);\n};\n/* harmony default export */ const hooks_useActiveWalletAccount = ((/* unused pure expression or super */ null && (useActiveWalletAccount_useActiveWalletAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useSettings.ts\nfunction useSettings_typeof(obj) { \"@babel/helpers - typeof\"; return useSettings_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useSettings_typeof(obj); }\nvar useSettings_excluded = (/* unused pure expression or super */ null && ([\"data\"])),\n  _excluded2 = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useSettings_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useSettings_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSettings_ownKeys(Object(source), !0).forEach(function (key) { useSettings_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSettings_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useSettings_defineProperty(obj, key, value) { key = useSettings_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useSettings_toPropertyKey(arg) { var key = useSettings_toPrimitive(arg, \"string\"); return useSettings_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useSettings_toPrimitive(input, hint) { if (useSettings_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useSettings_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useSettings_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useSettings_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useSettings_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to get and update the user settings. */\nvar useSettings_useSettings = function useSettings() {\n  var _useQuery = useQuery('get_settings'),\n    data = _useQuery.data,\n    rest = useSettings_objectWithoutProperties(_useQuery, useSettings_excluded);\n  var _useMutation = useMutation('set_settings', {\n      onSuccess: function onSuccess() {\n        return invalidate('get_settings');\n      }\n    }),\n    mutate = _useMutation.mutate,\n    mutate_rest = useSettings_objectWithoutProperties(_useMutation, _excluded2);\n  var invalidate = useInvalidateQuery();\n  var update = useCallback(function (payload) {\n    return mutate({\n      payload: payload\n    });\n  }, [mutate]);\n\n  // Add additional information to the settings response.\n  var modified_settings = useMemo(function () {\n    return useSettings_objectSpread({}, data === null || data === void 0 ? void 0 : data.get_settings);\n  }, [data === null || data === void 0 ? void 0 : data.get_settings]);\n  return useSettings_objectSpread({\n    /** The settings response. */\n    data: modified_settings,\n    /** Function to update user settings */\n    update: update,\n    /** The mutation related information */\n    mutation: mutate_rest\n  }, rest);\n};\n/* harmony default export */ const hooks_useSettings = ((/* unused pure expression or super */ null && (useSettings_useSettings)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useLandingCompany.ts\nfunction useLandingCompany_typeof(obj) { \"@babel/helpers - typeof\"; return useLandingCompany_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useLandingCompany_typeof(obj); }\nvar useLandingCompany_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useLandingCompany_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useLandingCompany_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useLandingCompany_ownKeys(Object(source), !0).forEach(function (key) { useLandingCompany_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useLandingCompany_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useLandingCompany_defineProperty(obj, key, value) { key = useLandingCompany_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useLandingCompany_toPropertyKey(arg) { var key = useLandingCompany_toPrimitive(arg, \"string\"); return useLandingCompany_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useLandingCompany_toPrimitive(input, hint) { if (useLandingCompany_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useLandingCompany_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useLandingCompany_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useLandingCompany_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useLandingCompany_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that returns the available landing companies of the user's country. */\nvar useLandingCompany_useLandingCompany = function useLandingCompany() {\n  var _useSettings = useSettings(),\n    settings_data = _useSettings.data;\n  var _useQuery = useQuery('landing_company', {\n      payload: {\n        landing_company: (settings_data === null || settings_data === void 0 ? void 0 : settings_data.country_code) || ''\n      },\n      options: {\n        enabled: Boolean(settings_data === null || settings_data === void 0 ? void 0 : settings_data.country_code)\n      }\n    }),\n    data = _useQuery.data,\n    rest = useLandingCompany_objectWithoutProperties(_useQuery, useLandingCompany_excluded);\n\n  // Add additional information to the landing company response.\n  var modified_landing_company = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.landing_company)) return;\n    return useLandingCompany_objectSpread({}, data.landing_company);\n  }, [data === null || data === void 0 ? void 0 : data.landing_company]);\n  return useLandingCompany_objectSpread({\n    /** The landing company response. */\n    data: modified_landing_company\n  }, rest);\n};\n/* harmony default export */ const hooks_useLandingCompany = ((/* unused pure expression or super */ null && (useLandingCompany_useLandingCompany)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAllAvailableAccounts.ts\nfunction useAllAvailableAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return useAllAvailableAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAllAvailableAccounts_typeof(obj); }\nvar useAllAvailableAccounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAllAvailableAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAllAvailableAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAllAvailableAccounts_ownKeys(Object(source), !0).forEach(function (key) { useAllAvailableAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAllAvailableAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAllAvailableAccounts_defineProperty(obj, key, value) { key = useAllAvailableAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAllAvailableAccounts_toPropertyKey(arg) { var key = useAllAvailableAccounts_toPrimitive(arg, \"string\"); return useAllAvailableAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAllAvailableAccounts_toPrimitive(input, hint) { if (useAllAvailableAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAllAvailableAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAllAvailableAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAllAvailableAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAllAvailableAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to get all available accounts that user can have. */\nvar useAllAvailableAccounts_useAllAvailableAccounts = function useAllAvailableAccounts() {\n  var _landing_company_data;\n  var _useLandingCompany = useLandingCompany(),\n    landing_company_data = _useLandingCompany.data;\n  var _useAccountTypes = useAccountTypes(landing_company_data === null || landing_company_data === void 0 ? void 0 : (_landing_company_data = landing_company_data.financial_company) === null || _landing_company_data === void 0 ? void 0 : _landing_company_data.shortcode),\n    account_types_data = _useAccountTypes.data,\n    rest = useAllAvailableAccounts_objectWithoutProperties(_useAccountTypes, useAllAvailableAccounts_excluded);\n\n  // Add additional information to the account types response.\n  var modified_account_types_data = useMemo(function () {\n    if (!account_types_data) return;\n    return useAllAvailableAccounts_objectSpread({}, account_types_data);\n  }, [account_types_data]);\n  return useAllAvailableAccounts_objectSpread({\n    /** The account types response. */\n    data: modified_account_types_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useAllAvailableAccounts = ((/* unused pure expression or super */ null && (useAllAvailableAccounts_useAllAvailableAccounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAuthentication.ts\nfunction useAuthentication_typeof(obj) { \"@babel/helpers - typeof\"; return useAuthentication_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAuthentication_typeof(obj); }\nvar useAuthentication_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAuthentication_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAuthentication_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAuthentication_ownKeys(Object(source), !0).forEach(function (key) { useAuthentication_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAuthentication_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAuthentication_defineProperty(obj, key, value) { key = useAuthentication_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAuthentication_toPropertyKey(arg) { var key = useAuthentication_toPrimitive(arg, \"string\"); return useAuthentication_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAuthentication_toPrimitive(input, hint) { if (useAuthentication_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAuthentication_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAuthentication_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAuthentication_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAuthentication_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the verification status (basically any poi, poa, poinc, poo) of the current user. */\nvar useAuthentication_useAuthentication = function useAuthentication() {\n  var _useGetAccountStatus = useGetAccountStatus(),\n    get_account_status_data = _useGetAccountStatus.data,\n    rest = useAuthentication_objectWithoutProperties(_useGetAccountStatus, useAuthentication_excluded);\n  var modified_account_status = useMemo(function () {\n    var _get_account_status_d, _get_account_status_d2, _get_account_status_d3, _get_account_status_d4, _get_account_status_d5, _get_account_status_d6, _get_account_status_d7, _get_account_status_d8, _get_account_status_d9;\n    if (!get_account_status_data) return;\n    var needs_verification = new Set((_get_account_status_d = get_account_status_data.authentication) === null || _get_account_status_d === void 0 ? void 0 : _get_account_status_d.needs_verification);\n    var account_status = new Set(get_account_status_data === null || get_account_status_data === void 0 ? void 0 : get_account_status_data.status);\n    return useAuthentication_objectSpread(useAuthentication_objectSpread({}, get_account_status_data.authentication), {}, {\n      /** client is required to verify their document (proof of address) */\n      is_poa_needed: needs_verification.has('document'),\n      /** client is required to verify their identity */\n      is_poi_needed: needs_verification.has('identity'),\n      /** client has been age-verified */\n      is_age_verified: account_status.has('age_verification'),\n      /** client is prevented from verifying from idv */\n      is_idv_disallowed: account_status.has('idv_disallowed'),\n      /** client is allowed to perform POI and POA (allow uploading documents) */\n      is_allow_document_upload: account_status.has('is_allow_document_upload'),\n      /** client can resubmit POI documents */\n      is_poi_resubmission_allowed: account_status.has('allow_poi_resubmission'),\n      /** client can resubmit POA documents */\n      is_poa_resubmission_allowed: account_status.has('allow_poa_resubmission'),\n      /** client's name in POI documents does not match */\n      is_poi_name_mismatch: account_status.has('poi_name_mismatch'),\n      /** client's name in POA documents does not match */\n      is_poa_address_mismatch: account_status.has('poa_address_mismatch'),\n      /** client has attempted POI before */\n      has_poa_been_attempted: (get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d2 = get_account_status_data.authentication) === null || _get_account_status_d2 === void 0 ? void 0 : (_get_account_status_d3 = _get_account_status_d2.document) === null || _get_account_status_d3 === void 0 ? void 0 : _get_account_status_d3.status) !== 'none',\n      /** client has attempted POA before */\n      has_poi_been_attempted: (get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d4 = get_account_status_data.authentication) === null || _get_account_status_d4 === void 0 ? void 0 : (_get_account_status_d5 = _get_account_status_d4.identity) === null || _get_account_status_d5 === void 0 ? void 0 : _get_account_status_d5.status) !== 'none',\n      /** client's poi verification status */\n      poi_status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d6 = get_account_status_data.authentication) === null || _get_account_status_d6 === void 0 ? void 0 : (_get_account_status_d7 = _get_account_status_d6.identity) === null || _get_account_status_d7 === void 0 ? void 0 : _get_account_status_d7.status,\n      /** client's poa verification status */\n      poa_status: get_account_status_data === null || get_account_status_data === void 0 ? void 0 : (_get_account_status_d8 = get_account_status_data.authentication) === null || _get_account_status_d8 === void 0 ? void 0 : (_get_account_status_d9 = _get_account_status_d8.document) === null || _get_account_status_d9 === void 0 ? void 0 : _get_account_status_d9.status\n    });\n  }, [get_account_status_data]);\n  return useAuthentication_objectSpread({\n    data: modified_account_status\n  }, rest);\n};\n/* harmony default export */ const hooks_useAuthentication = ((/* unused pure expression or super */ null && (useAuthentication_useAuthentication)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAvailableMT5Accounts.ts\nfunction useAvailableMT5Accounts_typeof(obj) { \"@babel/helpers - typeof\"; return useAvailableMT5Accounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAvailableMT5Accounts_typeof(obj); }\nvar useAvailableMT5Accounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAvailableMT5Accounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAvailableMT5Accounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAvailableMT5Accounts_ownKeys(Object(source), !0).forEach(function (key) { useAvailableMT5Accounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAvailableMT5Accounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAvailableMT5Accounts_defineProperty(obj, key, value) { key = useAvailableMT5Accounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAvailableMT5Accounts_toPropertyKey(arg) { var key = useAvailableMT5Accounts_toPrimitive(arg, \"string\"); return useAvailableMT5Accounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAvailableMT5Accounts_toPrimitive(input, hint) { if (useAvailableMT5Accounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAvailableMT5Accounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAvailableMT5Accounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAvailableMT5Accounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAvailableMT5Accounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar market_type_to_leverage_mapper = {\n  gaming: 500,\n  financial: 1000,\n  all: 100\n};\n\n/** A custom hook to get the list of available MT5 accounts. */\nvar useAvailableMT5Accounts_useAvailableMT5Accounts = function useAvailableMT5Accounts() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_available_accounts', {\n      payload: {\n        platform: 'mt5'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    mt5_available_accounts = _useQuery.data,\n    rest = useAvailableMT5Accounts_objectWithoutProperties(_useQuery, useAvailableMT5Accounts_excluded);\n  var modified_mt5_available_accounts = useMemo(function () {\n    var _mt5_available_accoun;\n    return mt5_available_accounts === null || mt5_available_accounts === void 0 ? void 0 : (_mt5_available_accoun = mt5_available_accounts.trading_platform_available_accounts) === null || _mt5_available_accoun === void 0 ? void 0 : _mt5_available_accoun.map(function (account) {\n      return useAvailableMT5Accounts_objectSpread(useAvailableMT5Accounts_objectSpread({}, account), {}, {\n        /** The market type for the account */\n        market_type: account.market_type === 'gaming' ? 'synthetic' : account.market_type,\n        /** The platform for the account */\n        platform: 'mt5',\n        /** Leverage for the account */\n        leverage: market_type_to_leverage_mapper[account.market_type]\n      });\n    });\n  }, [mt5_available_accounts === null || mt5_available_accounts === void 0 ? void 0 : mt5_available_accounts.trading_platform_available_accounts]);\n  return useAvailableMT5Accounts_objectSpread({\n    /** The available MT5 accounts */\n    data: modified_mt5_available_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useAvailableMT5Accounts = ((/* unused pure expression or super */ null && (useAvailableMT5Accounts_useAvailableMT5Accounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useAvailableWallets.ts\nfunction useAvailableWallets_typeof(obj) { \"@babel/helpers - typeof\"; return useAvailableWallets_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useAvailableWallets_typeof(obj); }\nvar useAvailableWallets_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useAvailableWallets_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useAvailableWallets_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useAvailableWallets_ownKeys(Object(source), !0).forEach(function (key) { useAvailableWallets_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useAvailableWallets_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useAvailableWallets_defineProperty(obj, key, value) { key = useAvailableWallets_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useAvailableWallets_toPropertyKey(arg) { var key = useAvailableWallets_toPrimitive(arg, \"string\"); return useAvailableWallets_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useAvailableWallets_toPrimitive(input, hint) { if (useAvailableWallets_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useAvailableWallets_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useAvailableWallets_toConsumableArray(arr) { return useAvailableWallets_arrayWithoutHoles(arr) || useAvailableWallets_iterableToArray(arr) || useAvailableWallets_unsupportedIterableToArray(arr) || useAvailableWallets_nonIterableSpread(); }\nfunction useAvailableWallets_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useAvailableWallets_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useAvailableWallets_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useAvailableWallets_arrayLikeToArray(o, minLen); }\nfunction useAvailableWallets_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useAvailableWallets_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useAvailableWallets_arrayLikeToArray(arr); }\nfunction useAvailableWallets_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useAvailableWallets_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useAvailableWallets_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useAvailableWallets_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that gets the list of available wallets. */\nvar useAvailableWallets = function useAvailableWallets() {\n  var _useAllAvailableAccou = useAllAvailableAccounts(),\n    account_type_data = _useAllAvailableAccou.data,\n    rest = useAvailableWallets_objectWithoutProperties(_useAllAvailableAccou, useAvailableWallets_excluded);\n  var _useWalletAccountsLis = useWalletAccountsList(),\n    added_wallets = _useWalletAccountsLis.data;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n\n  /** Get the available wallets for the wallet account type */\n  var modified_available_wallets = useMemo(function () {\n    if (!account_type_data) return;\n    var _ref = (account_type_data === null || account_type_data === void 0 ? void 0 : account_type_data.wallet) || {},\n      crypto = _ref.crypto,\n      doughflow = _ref.doughflow;\n    var crypto_currencies = crypto === null || crypto === void 0 ? void 0 : crypto.currencies;\n    var fiat_currencies = doughflow === null || doughflow === void 0 ? void 0 : doughflow.currencies;\n    if (!crypto_currencies || !fiat_currencies) return [];\n    var available_currencies = [].concat(useAvailableWallets_toConsumableArray(fiat_currencies), useAvailableWallets_toConsumableArray(crypto_currencies));\n    var non_virtual_wallets = added_wallets === null || added_wallets === void 0 ? void 0 : added_wallets.filter(function (wallet) {\n      return !wallet.is_virtual;\n    });\n\n    /** Compare the available wallets with the added wallets and add `is_added` flag */\n    var modified_wallets = non_virtual_wallets === null || non_virtual_wallets === void 0 ? void 0 : non_virtual_wallets.map(function (wallet) {\n      return {\n        currency: wallet.currency,\n        landing_company_name: wallet.landing_company_name,\n        is_added: true\n      };\n    });\n\n    /** Compare the available wallets with the added wallets and add `is_added` flag */\n    var available_wallets = available_currencies.filter(function (currency) {\n      return !(modified_wallets !== null && modified_wallets !== void 0 && modified_wallets.some(function (wallet) {\n        return wallet.currency === currency;\n      }));\n    }).map(function (currency) {\n      return {\n        currency: currency,\n        landing_company_name: account_type_data === null || account_type_data === void 0 ? void 0 : account_type_data.landing_company,\n        is_added: false\n      };\n    });\n    return [].concat(useAvailableWallets_toConsumableArray(available_wallets), useAvailableWallets_toConsumableArray(modified_wallets || []));\n  }, [account_type_data, added_wallets]);\n\n  /** Sort the available wallets by fiat, crypto, then virtual */\n  var sorted_available_wallets = useMemo(function () {\n    if (!modified_available_wallets) return;\n    var getConfigIsCrypto = function getConfigIsCrypto(currency) {\n      var _getConfig;\n      return (_getConfig = getConfig(currency)) === null || _getConfig === void 0 ? void 0 : _getConfig.is_crypto;\n    };\n\n    // Sort the non-added wallets alphabetically by fiat, crypto, then virtual\n    modified_available_wallets.sort(function (a, b) {\n      var a_config = getConfigIsCrypto(a.currency || 'BTC');\n      var b_config = getConfigIsCrypto(b.currency || 'BTC');\n      if (a_config !== b_config) return a.currency ? 1 : -1;\n      return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n    });\n\n    // Sort the added wallets alphabetically by fiat, crypto, then virtual (if any)\n    if (Array.isArray(modified_available_wallets)) {\n      modified_available_wallets === null || modified_available_wallets === void 0 ? void 0 : modified_available_wallets.sort(function (a, b) {\n        var a_config = getConfigIsCrypto(a.currency || 'BTC');\n        var b_config = getConfigIsCrypto(b.currency || 'BTC');\n        if (a_config !== b_config) return a_config ? 1 : -1;\n        return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n      });\n    }\n    return useAvailableWallets_toConsumableArray(modified_available_wallets);\n  }, [modified_available_wallets, getConfig]);\n  return useAvailableWallets_objectSpread({\n    /** Sorted available wallets */\n    data: sorted_available_wallets\n  }, rest);\n};\n/* harmony default export */ const hooks_useAvailableWallets = ((/* unused pure expression or super */ null && (useAvailableWallets)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useMT5AccountsList.ts\nfunction useMT5AccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useMT5AccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useMT5AccountsList_typeof(obj); }\nvar useMT5AccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useMT5AccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useMT5AccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useMT5AccountsList_ownKeys(Object(source), !0).forEach(function (key) { useMT5AccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useMT5AccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useMT5AccountsList_defineProperty(obj, key, value) { key = useMT5AccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useMT5AccountsList_toPropertyKey(arg) { var key = useMT5AccountsList_toPrimitive(arg, \"string\"); return useMT5AccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useMT5AccountsList_toPrimitive(input, hint) { if (useMT5AccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useMT5AccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useMT5AccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useMT5AccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useMT5AccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook that gets the list created MT5 accounts of the user. */\nvar useMT5AccountsList_useMT5AccountsList = function useMT5AccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useActiveWalletAccou = useActiveWalletAccount(),\n    wallet = _useActiveWalletAccou.data;\n  var _useQuery = useQuery('mt5_login_list', {\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    mt5_accounts = _useQuery.data,\n    mt5_accounts_rest = useMT5AccountsList_objectWithoutProperties(_useQuery, useMT5AccountsList_excluded);\n\n  /**\n   * @description The list of created MT5 accounts\n   */\n  var modified_mt5_accounts = useMemo(function () {\n    var _mt5_accounts$mt5_log;\n    /** Adding the neccesary properties to the response */\n    var getAccountInfo = function getAccountInfo(login) {\n      var _wallet$linked_to, _wallet$linked_to$fin;\n      return {\n        /** The platform of the account linked to the wallet */\n        platform: wallet === null || wallet === void 0 ? void 0 : (_wallet$linked_to = wallet.linked_to) === null || _wallet$linked_to === void 0 ? void 0 : (_wallet$linked_to$fin = _wallet$linked_to.find(function (linked) {\n          return linked.loginid === login;\n        })) === null || _wallet$linked_to$fin === void 0 ? void 0 : _wallet$linked_to$fin.platform,\n        /** The formatted display login of the account */\n        display_login: login === null || login === void 0 ? void 0 : login.replace(/^(MT[DR]?)/, '')\n      };\n    };\n    var displayBalanceFormat = function displayBalanceFormat(balance, currency) {\n      try {\n        return \"\".concat(Intl.NumberFormat((authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language) || 'en-US', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n          minimumIntegerDigits: 1\n        }).format(balance), \" \").concat(currency || 'USD');\n      } catch (error) {\n        return \"\".concat(balance, \" \").concat(currency || 'USD');\n      }\n    };\n    return mt5_accounts === null || mt5_accounts === void 0 ? void 0 : (_mt5_accounts$mt5_log = mt5_accounts.mt5_login_list) === null || _mt5_accounts$mt5_log === void 0 ? void 0 : _mt5_accounts$mt5_log.map(function (account) {\n      return useMT5AccountsList_objectSpread(useMT5AccountsList_objectSpread(useMT5AccountsList_objectSpread({}, account), getAccountInfo(account.login)), {}, {\n        /** The id of the account */\n        loginid: account.login,\n        /** The platform of the account */\n        platform: 'mt5',\n        /** The balance of the account in currency format. */\n        display_balance: displayBalanceFormat(account.balance || 0, account.currency || 'USD')\n      });\n    });\n  }, [authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language, mt5_accounts === null || mt5_accounts === void 0 ? void 0 : mt5_accounts.mt5_login_list, wallet === null || wallet === void 0 ? void 0 : wallet.linked_to]);\n  return useMT5AccountsList_objectSpread({\n    /** The list of created MT5 accounts */\n    data: modified_mt5_accounts\n  }, mt5_accounts_rest);\n};\n/* harmony default export */ const hooks_useMT5AccountsList = ((/* unused pure expression or super */ null && (useMT5AccountsList_useMT5AccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDxtradeAccountsList.ts\nfunction useDxtradeAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useDxtradeAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDxtradeAccountsList_typeof(obj); }\nvar useDxtradeAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDxtradeAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDxtradeAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDxtradeAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useDxtradeAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDxtradeAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDxtradeAccountsList_defineProperty(obj, key, value) { key = useDxtradeAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDxtradeAccountsList_toPropertyKey(arg) { var key = useDxtradeAccountsList_toPrimitive(arg, \"string\"); return useDxtradeAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDxtradeAccountsList_toPrimitive(input, hint) { if (useDxtradeAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDxtradeAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDxtradeAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDxtradeAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDxtradeAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that gets the list of created Deriv X accounts. */\nvar useDxtradeAccountsList_useDxtradeAccountsList = function useDxtradeAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_accounts', {\n      payload: {\n        platform: 'dxtrade'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    dxtrade_accounts = _useQuery.data,\n    rest = useDxtradeAccountsList_objectWithoutProperties(_useQuery, useDxtradeAccountsList_excluded);\n\n  /** Adding necessary properties to Deriv X accounts */\n  var modified_dxtrade_accounts = useMemo(function () {\n    var _dxtrade_accounts$tra;\n    return dxtrade_accounts === null || dxtrade_accounts === void 0 ? void 0 : (_dxtrade_accounts$tra = dxtrade_accounts.trading_platform_accounts) === null || _dxtrade_accounts$tra === void 0 ? void 0 : _dxtrade_accounts$tra.map(function (account) {\n      return useDxtradeAccountsList_objectSpread(useDxtradeAccountsList_objectSpread({}, account), {}, {\n        /** The balance of the account in currency format. */\n        display_balance: \"\".concat(Intl.NumberFormat((authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language) || 'en-US', {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n          minimumIntegerDigits: 1\n        }).format((account === null || account === void 0 ? void 0 : account.balance) || 0), \" \").concat((account === null || account === void 0 ? void 0 : account.currency) || 'USD')\n      });\n    });\n  }, [authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.preferred_language, dxtrade_accounts === null || dxtrade_accounts === void 0 ? void 0 : dxtrade_accounts.trading_platform_accounts]);\n  return useDxtradeAccountsList_objectSpread({\n    /** List of all created Deriv X accounts */\n    data: modified_dxtrade_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useDxtradeAccountsList = ((/* unused pure expression or super */ null && (useDxtradeAccountsList_useDxtradeAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDerivezServiceToken.ts\nfunction useDerivezServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useDerivezServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDerivezServiceToken_typeof(obj); }\nvar useDerivezServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDerivezServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDerivezServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDerivezServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useDerivezServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDerivezServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDerivezServiceToken_defineProperty(obj, key, value) { key = useDerivezServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDerivezServiceToken_toPropertyKey(arg) { var key = useDerivezServiceToken_toPrimitive(arg, \"string\"); return useDerivezServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDerivezServiceToken_toPrimitive(input, hint) { if (useDerivezServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDerivezServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDerivezServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDerivezServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDerivezServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that get Service Token for DerivEz Platform. */\nvar useDerivezServiceToken_useDerivezServiceToken = function useDerivezServiceToken() {\n  var _derivez_token$servic, _derivez_token$servic2;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'pandats',\n        server: account !== null && account !== void 0 && account.is_virtual ? 'demo' : 'real'\n      }\n    }),\n    derivez_token = _useQuery.data,\n    rest = useDerivezServiceToken_objectWithoutProperties(_useQuery, useDerivezServiceToken_excluded);\n  return useDerivezServiceToken_objectSpread({\n    /** return the DerivEz account token */\n    data: derivez_token === null || derivez_token === void 0 ? void 0 : (_derivez_token$servic = derivez_token.service_token) === null || _derivez_token$servic === void 0 ? void 0 : (_derivez_token$servic2 = _derivez_token$servic.pandats) === null || _derivez_token$servic2 === void 0 ? void 0 : _derivez_token$servic2.token\n  }, rest);\n};\n/* harmony default export */ const hooks_useDerivezServiceToken = ((/* unused pure expression or super */ null && (useDerivezServiceToken_useDerivezServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDerivezAccountsList.ts\nfunction useDerivezAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useDerivezAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDerivezAccountsList_typeof(obj); }\nfunction useDerivezAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDerivezAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDerivezAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useDerivezAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDerivezAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDerivezAccountsList_defineProperty(obj, key, value) { key = useDerivezAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDerivezAccountsList_toPropertyKey(arg) { var key = useDerivezAccountsList_toPrimitive(arg, \"string\"); return useDerivezAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDerivezAccountsList_toPrimitive(input, hint) { if (useDerivezAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDerivezAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\n/** A custom hook that gets the list of created DerivEz accounts. */\nvar useDerivezAccountsList_useDerivezAccountsList = function useDerivezAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_accounts', {\n      payload: {\n        platform: 'derivez'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    derivez_accounts = _useQuery.data;\n  var _useDerivezServiceTok = useDerivezServiceToken(),\n    token = _useDerivezServiceTok.data;\n\n  /** Adding necessary properties to DerivEz accounts */\n  var modified_derivez_accounts = useMemo(function () {\n    var _derivez_accounts$tra;\n    return derivez_accounts === null || derivez_accounts === void 0 ? void 0 : (_derivez_accounts$tra = derivez_accounts.trading_platform_accounts) === null || _derivez_accounts$tra === void 0 ? void 0 : _derivez_accounts$tra.map(function (account) {\n      return useDerivezAccountsList_objectSpread(useDerivezAccountsList_objectSpread({}, account), {}, {\n        /** The id for the account */\n        loginid: account.account_id,\n        /** The token for the account */\n        token: token\n      });\n    });\n  }, [derivez_accounts === null || derivez_accounts === void 0 ? void 0 : derivez_accounts.trading_platform_accounts, token]);\n  return {\n    /** List of all created DerivEz accounts */\n    data: modified_derivez_accounts\n  };\n};\n/* harmony default export */ const hooks_useDerivezAccountsList = ((/* unused pure expression or super */ null && (useDerivezAccountsList_useDerivezAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCtraderAccountsList.ts\nfunction useCtraderAccountsList_typeof(obj) { \"@babel/helpers - typeof\"; return useCtraderAccountsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCtraderAccountsList_typeof(obj); }\nvar useCtraderAccountsList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCtraderAccountsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCtraderAccountsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCtraderAccountsList_ownKeys(Object(source), !0).forEach(function (key) { useCtraderAccountsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCtraderAccountsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCtraderAccountsList_defineProperty(obj, key, value) { key = useCtraderAccountsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCtraderAccountsList_toPropertyKey(arg) { var key = useCtraderAccountsList_toPrimitive(arg, \"string\"); return useCtraderAccountsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCtraderAccountsList_toPrimitive(input, hint) { if (useCtraderAccountsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCtraderAccountsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCtraderAccountsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCtraderAccountsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCtraderAccountsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that gets the list of created cTrader accounts. */\nvar useCtraderAccountsList_useCtraderAccountsList = function useCtraderAccountsList() {\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n  var _useQuery = useQuery('trading_platform_accounts', {\n      payload: {\n        platform: 'ctrader'\n      },\n      options: {\n        enabled: isSuccess\n      }\n    }),\n    ctrader_accounts = _useQuery.data,\n    rest = useCtraderAccountsList_objectWithoutProperties(_useQuery, useCtraderAccountsList_excluded);\n\n  /** Adding neccesary properties to cTrader accounts */\n  var modified_ctrader_accounts = useMemo(function () {\n    var _ctrader_accounts$tra;\n    return ctrader_accounts === null || ctrader_accounts === void 0 ? void 0 : (_ctrader_accounts$tra = ctrader_accounts.trading_platform_accounts) === null || _ctrader_accounts$tra === void 0 ? void 0 : _ctrader_accounts$tra.map(function (account) {\n      return useCtraderAccountsList_objectSpread(useCtraderAccountsList_objectSpread({}, account), {}, {\n        /** The id of the cTrader account */\n        id: account.account_id\n      });\n    });\n  }, [ctrader_accounts === null || ctrader_accounts === void 0 ? void 0 : ctrader_accounts.trading_platform_accounts]);\n  return useCtraderAccountsList_objectSpread({\n    /** List of all created cTrader accounts */\n    data: modified_ctrader_accounts\n  }, rest);\n};\n/* harmony default export */ const hooks_useCtraderAccountsList = ((/* unused pure expression or super */ null && (useCtraderAccountsList_useCtraderAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCFDAccountsList.ts\n\n\n\n\n\n\n/** A custom hook that gets the list all created CFD accounts of the user. */\nvar useCFDAccountsList = function useCFDAccountsList() {\n  var _useMT5AccountsList = useMT5AccountsList(),\n    mt5_accounts = _useMT5AccountsList.data;\n  var _useDxtradeAccountsLi = useDxtradeAccountsList(),\n    dxtrade_accounts = _useDxtradeAccountsLi.data;\n  var _useDerivezAccountsLi = useDerivezAccountsList(),\n    derivez_accounts = _useDerivezAccountsLi.data;\n  var _useCtraderAccountsLi = useCtraderAccountsList(),\n    ctrader_accounts = _useCtraderAccountsLi.data;\n  var data = useMemo(function () {\n    if (!mt5_accounts || !dxtrade_accounts || !derivez_accounts || !ctrader_accounts) return;\n    return {\n      mt5_accounts: mt5_accounts || [],\n      dxtrade_accounts: dxtrade_accounts || [],\n      derivez_accounts: derivez_accounts || [],\n      ctrader_accounts: ctrader_accounts || []\n    };\n  }, [mt5_accounts, dxtrade_accounts, derivez_accounts, ctrader_accounts]);\n  return {\n    /** The list of created MT5 and Non-MT5 accounts */\n    data: data\n  };\n};\n/* harmony default export */ const hooks_useCFDAccountsList = ((/* unused pure expression or super */ null && (useCFDAccountsList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCancelCryptoTransaction.ts\nfunction useCancelCryptoTransaction_typeof(obj) { \"@babel/helpers - typeof\"; return useCancelCryptoTransaction_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCancelCryptoTransaction_typeof(obj); }\nvar useCancelCryptoTransaction_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useCancelCryptoTransaction_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCancelCryptoTransaction_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCancelCryptoTransaction_ownKeys(Object(source), !0).forEach(function (key) { useCancelCryptoTransaction_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCancelCryptoTransaction_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCancelCryptoTransaction_defineProperty(obj, key, value) { key = useCancelCryptoTransaction_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCancelCryptoTransaction_toPropertyKey(arg) { var key = useCancelCryptoTransaction_toPrimitive(arg, \"string\"); return useCancelCryptoTransaction_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCancelCryptoTransaction_toPrimitive(input, hint) { if (useCancelCryptoTransaction_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCancelCryptoTransaction_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCancelCryptoTransaction_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCancelCryptoTransaction_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCancelCryptoTransaction_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hooks for cancelling crypto transaction  */\nvar useCancelCryptoTransaction = function useCancelCryptoTransaction() {\n  var _useMutation = useMutation('cashier_withdrawal_cancel'),\n    data = _useMutation.data,\n    mutate = _useMutation.mutate,\n    rest = useCancelCryptoTransaction_objectWithoutProperties(_useMutation, useCancelCryptoTransaction_excluded);\n  return useCancelCryptoTransaction_objectSpread({\n    /** The cancel crypto transaction response */\n    data: data === null || data === void 0 ? void 0 : data.cashier_withdrawal_cancel,\n    /** Function to cancel crypto transaction */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCancelCryptoTransaction = ((/* unused pure expression or super */ null && (useCancelCryptoTransaction)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCashierFiatAddress.ts\nfunction useCashierFiatAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useCashierFiatAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCashierFiatAddress_typeof(obj); }\nvar useCashierFiatAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useCashierFiatAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCashierFiatAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCashierFiatAddress_ownKeys(Object(source), !0).forEach(function (key) { useCashierFiatAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCashierFiatAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCashierFiatAddress_defineProperty(obj, key, value) { key = useCashierFiatAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCashierFiatAddress_toPropertyKey(arg) { var key = useCashierFiatAddress_toPrimitive(arg, \"string\"); return useCashierFiatAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCashierFiatAddress_toPrimitive(input, hint) { if (useCashierFiatAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCashierFiatAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCashierFiatAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCashierFiatAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCashierFiatAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook to get the deposit and withdrawal fiat address. */\nvar useCashierFiatAddress = function useCashierFiatAddress() {\n  var _useMutation = useMutation('cashier'),\n    data = _useMutation.data,\n    _mutate = _useMutation.mutate,\n    rest = useCashierFiatAddress_objectWithoutProperties(_useMutation, useCashierFiatAddress_excluded);\n  var iframe_url = typeof (data === null || data === void 0 ? void 0 : data.cashier) === 'string' ? data === null || data === void 0 ? void 0 : data.cashier : undefined;\n  var mutate = useCallback(function (cashier, payload) {\n    return _mutate({\n      payload: useCashierFiatAddress_objectSpread({\n        cashier: cashier,\n        provider: 'doughflow'\n      }, payload)\n    });\n  }, [_mutate]);\n  return useCashierFiatAddress_objectSpread({\n    /** The deposit/withdrawal fiat iframe */\n    data: iframe_url,\n    /** Function to get deposit/withdrawal fiat address */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCashierFiatAddress = ((/* unused pure expression or super */ null && (useCashierFiatAddress)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCountryConfig.ts\nfunction useCountryConfig_typeof(obj) { \"@babel/helpers - typeof\"; return useCountryConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCountryConfig_typeof(obj); }\nvar useCountryConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCountryConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCountryConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCountryConfig_ownKeys(Object(source), !0).forEach(function (key) { useCountryConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCountryConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCountryConfig_defineProperty(obj, key, value) { key = useCountryConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCountryConfig_toPropertyKey(arg) { var key = useCountryConfig_toPrimitive(arg, \"string\"); return useCountryConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCountryConfig_toPrimitive(input, hint) { if (useCountryConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCountryConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCountryConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCountryConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCountryConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the country config information from `residence_list` endpoint. */\nvar useCountryConfig = function useCountryConfig() {\n  var _useQuery = useQuery('residence_list'),\n    residence_list_data = _useQuery.data,\n    rest = useCountryConfig_objectWithoutProperties(_useQuery, useCountryConfig_excluded);\n\n  // Add additional information to the country config.\n  var modified_residence_list = useMemo(function () {\n    var _residence_list_data$;\n    return residence_list_data === null || residence_list_data === void 0 ? void 0 : (_residence_list_data$ = residence_list_data.residence_list) === null || _residence_list_data$ === void 0 ? void 0 : _residence_list_data$.map(function (country_config) {\n      var _country_config$ident, _country_config$ident2, _country_config$ident3, _country_config$ident4, _country_config$ident5, _country_config$ident6;\n      return useCountryConfig_objectSpread(useCountryConfig_objectSpread({}, country_config), {}, {\n        /** Determine if the country is disabled */\n        is_disabled: country_config.disabled !== undefined,\n        /** 2-letter country code */\n        code: \"\".concat(country_config.value).toUpperCase(),\n        /** Country name */\n        name: \"\".concat(country_config.text),\n        /** Determine if the IDV service is supported for the country */\n        is_idv_supported: ((_country_config$ident = country_config.identity) === null || _country_config$ident === void 0 ? void 0 : (_country_config$ident2 = _country_config$ident.services) === null || _country_config$ident2 === void 0 ? void 0 : (_country_config$ident3 = _country_config$ident2.idv) === null || _country_config$ident3 === void 0 ? void 0 : _country_config$ident3.is_country_supported) === 1,\n        /** Determine if the Onfido service is supported for the country */\n        is_onfido_supported: ((_country_config$ident4 = country_config.identity) === null || _country_config$ident4 === void 0 ? void 0 : (_country_config$ident5 = _country_config$ident4.services) === null || _country_config$ident5 === void 0 ? void 0 : (_country_config$ident6 = _country_config$ident5.onfido) === null || _country_config$ident6 === void 0 ? void 0 : _country_config$ident6.is_country_supported) === 1\n      });\n    });\n  }, [residence_list_data === null || residence_list_data === void 0 ? void 0 : residence_list_data.residence_list]);\n\n  // Transform the country config array into a record object.\n  var transformed_residence_list = useMemo(function () {\n    return modified_residence_list === null || modified_residence_list === void 0 ? void 0 : modified_residence_list.reduce(function (previous, current) {\n      return useCountryConfig_objectSpread(useCountryConfig_objectSpread({}, previous), {}, useCountryConfig_defineProperty({}, current.code, current));\n    }, {});\n  }, [modified_residence_list]);\n  var getConfig = useCallback(function (currency) {\n    return transformed_residence_list === null || transformed_residence_list === void 0 ? void 0 : transformed_residence_list[currency];\n  }, [transformed_residence_list]);\n  return useCountryConfig_objectSpread({\n    /** Available countries and their information */\n    data: transformed_residence_list,\n    /** Returns the country config object for the given country code */\n    getConfig: getConfig\n  }, rest);\n};\n/* harmony default export */ const hooks_useCountryConfig = ((/* unused pure expression or super */ null && (useCountryConfig)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateMT5Account.ts\nfunction useCreateMT5Account_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateMT5Account_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateMT5Account_typeof(obj); }\nvar useCreateMT5Account_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateMT5Account_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateMT5Account_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateMT5Account_ownKeys(Object(source), !0).forEach(function (key) { useCreateMT5Account_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateMT5Account_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateMT5Account_defineProperty(obj, key, value) { key = useCreateMT5Account_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateMT5Account_toPropertyKey(arg) { var key = useCreateMT5Account_toPrimitive(arg, \"string\"); return useCreateMT5Account_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateMT5Account_toPrimitive(input, hint) { if (useCreateMT5Account_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateMT5Account_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateMT5Account_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateMT5Account_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateMT5Account_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to create MT5 accounts. */\nvar useCreateMT5Account = function useCreateMT5Account() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('mt5_new_account', {\n      onSuccess: function onSuccess() {\n        invalidate('mt5_login_list');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateMT5Account_objectWithoutProperties(_useMutation, useCreateMT5Account_excluded);\n\n  // Add additional information to the create MT5 account response.\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.mt5_new_account)) return undefined;\n    return useCreateMT5Account_objectSpread({}, data === null || data === void 0 ? void 0 : data.mt5_new_account);\n  }, [data]);\n  return useCreateMT5Account_objectSpread({\n    /** The response and the mutation of the create MT5 account API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateMT5Account = ((/* unused pure expression or super */ null && (useCreateMT5Account)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateNewRealAccount.ts\nfunction useCreateNewRealAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateNewRealAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateNewRealAccount_typeof(obj); }\nvar useCreateNewRealAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateNewRealAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateNewRealAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateNewRealAccount_ownKeys(Object(source), !0).forEach(function (key) { useCreateNewRealAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateNewRealAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateNewRealAccount_defineProperty(obj, key, value) { key = useCreateNewRealAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateNewRealAccount_toPropertyKey(arg) { var key = useCreateNewRealAccount_toPrimitive(arg, \"string\"); return useCreateNewRealAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateNewRealAccount_toPrimitive(input, hint) { if (useCreateNewRealAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateNewRealAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateNewRealAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateNewRealAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateNewRealAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that creates a new real trading account. */\nvar useCreateNewRealAccount = function useCreateNewRealAccount() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('new_account_real', {\n      onSuccess: function onSuccess() {\n        invalidate('authorize');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateNewRealAccount_objectWithoutProperties(_useMutation, useCreateNewRealAccount_excluded);\n\n  // Add additional information to the new real trading account response.\n  var modified_data = useMemo(function () {\n    if (!(data !== null && data !== void 0 && data.new_account_real)) return;\n    return useCreateNewRealAccount_objectSpread({}, data === null || data === void 0 ? void 0 : data.new_account_real);\n  }, [data]);\n  return useCreateNewRealAccount_objectSpread({\n    /** The response and the mutation of the new account real API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateNewRealAccount = ((/* unused pure expression or super */ null && (useCreateNewRealAccount)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCreateOtherCFDAccount.ts\nfunction useCreateOtherCFDAccount_typeof(obj) { \"@babel/helpers - typeof\"; return useCreateOtherCFDAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCreateOtherCFDAccount_typeof(obj); }\nvar useCreateOtherCFDAccount_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCreateOtherCFDAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCreateOtherCFDAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCreateOtherCFDAccount_ownKeys(Object(source), !0).forEach(function (key) { useCreateOtherCFDAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCreateOtherCFDAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCreateOtherCFDAccount_defineProperty(obj, key, value) { key = useCreateOtherCFDAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCreateOtherCFDAccount_toPropertyKey(arg) { var key = useCreateOtherCFDAccount_toPrimitive(arg, \"string\"); return useCreateOtherCFDAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCreateOtherCFDAccount_toPrimitive(input, hint) { if (useCreateOtherCFDAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCreateOtherCFDAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCreateOtherCFDAccount_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCreateOtherCFDAccount_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCreateOtherCFDAccount_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to create third party CFD accounts. */\nvar useCreateOtherCFDAccount = function useCreateOtherCFDAccount() {\n  var invalidate = useInvalidateQuery();\n  var _useMutation = useMutation('trading_platform_new_account', {\n      onSuccess: function onSuccess() {\n        invalidate('trading_platform_accounts');\n      }\n    }),\n    data = _useMutation.data,\n    rest = useCreateOtherCFDAccount_objectWithoutProperties(_useMutation, useCreateOtherCFDAccount_excluded);\n\n  // Add additional information to the create Other CFD account response.\n  var modified_data = useMemo(function () {\n    if (!data) return undefined;\n    return useCreateOtherCFDAccount_objectSpread({}, data);\n  }, [data]);\n  return useCreateOtherCFDAccount_objectSpread({\n    /** The response and the mutation of the create third party CFDs API request */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useCreateOtherCFDAccount = ((/* unused pure expression or super */ null && (useCreateOtherCFDAccount)));\n;// CONCATENATED MODULE: ../../api/src/useSubscription.ts\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || useSubscription_unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useSubscription_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useSubscription_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useSubscription_arrayLikeToArray(o, minLen); }\nfunction useSubscription_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useSubscription_useSubscription = function useSubscription(name) {\n  var _useState = (0,external_react_.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isLoading = _useState2[0],\n    setIsLoading = _useState2[1];\n  var _useState3 = (0,external_react_.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isSubscribed = _useState4[0],\n    setSubscribed = _useState4[1];\n  var _useState5 = (0,external_react_.useState)(),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var _useState7 = (0,external_react_.useState)(),\n    _useState8 = _slicedToArray(_useState7, 2),\n    data = _useState8[0],\n    setData = _useState8[1];\n  var subscriber = (0,external_react_.useRef)();\n  var _useAPI = src_useAPI(),\n    _subscribe = _useAPI.subscribe;\n  var subscribe = (0,external_react_.useCallback)(function () {\n    for (var _len = arguments.length, props = new Array(_len), _key = 0; _key < _len; _key++) {\n      props[_key] = arguments[_key];\n    }\n    var prop = props === null || props === void 0 ? void 0 : props[0];\n    var payload = prop && 'payload' in prop ? prop.payload : undefined;\n    setIsLoading(true);\n    setSubscribed(true);\n    try {\n      subscriber.current = _subscribe(name, payload).subscribe(function (response) {\n        setData(response);\n        setIsLoading(false);\n      }, function (response) {\n        setError(response.error);\n        setIsLoading(false);\n      });\n    } catch (e) {\n      setError(e);\n    }\n  }, [_subscribe, name]);\n  var unsubscribe = (0,external_react_.useCallback)(function () {\n    var _subscriber$current, _subscriber$current$u;\n    (_subscriber$current = subscriber.current) === null || _subscriber$current === void 0 ? void 0 : (_subscriber$current$u = _subscriber$current.unsubscribe) === null || _subscriber$current$u === void 0 ? void 0 : _subscriber$current$u.call(_subscriber$current);\n    setSubscribed(false);\n  }, []);\n  (0,external_react_.useEffect)(function () {\n    return function () {\n      unsubscribe();\n    };\n  }, [unsubscribe]);\n  return {\n    subscribe: subscribe,\n    unsubscribe: unsubscribe,\n    isLoading: isLoading,\n    isSubscribed: isSubscribed,\n    error: error,\n    data: data\n  };\n};\n/* harmony default export */ const src_useSubscription = (useSubscription_useSubscription);\n;// CONCATENATED MODULE: ../../api/src/hooks/useCryptoTransactions.ts\nfunction useCryptoTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return useCryptoTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCryptoTransactions_typeof(obj); }\nvar useCryptoTransactions_excluded = (/* unused pure expression or super */ null && ([\"subscribe\", \"data\"]));\nfunction useCryptoTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCryptoTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCryptoTransactions_ownKeys(Object(source), !0).forEach(function (key) { useCryptoTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCryptoTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCryptoTransactions_defineProperty(obj, key, value) { key = useCryptoTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCryptoTransactions_toPropertyKey(arg) { var key = useCryptoTransactions_toPrimitive(arg, \"string\"); return useCryptoTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCryptoTransactions_toPrimitive(input, hint) { if (useCryptoTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCryptoTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCryptoTransactions_toConsumableArray(arr) { return useCryptoTransactions_arrayWithoutHoles(arr) || useCryptoTransactions_iterableToArray(arr) || useCryptoTransactions_unsupportedIterableToArray(arr) || useCryptoTransactions_nonIterableSpread(); }\nfunction useCryptoTransactions_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCryptoTransactions_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useCryptoTransactions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useCryptoTransactions_arrayLikeToArray(arr); }\nfunction useCryptoTransactions_slicedToArray(arr, i) { return useCryptoTransactions_arrayWithHoles(arr) || useCryptoTransactions_iterableToArrayLimit(arr, i) || useCryptoTransactions_unsupportedIterableToArray(arr, i) || useCryptoTransactions_nonIterableRest(); }\nfunction useCryptoTransactions_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCryptoTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useCryptoTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCryptoTransactions_arrayLikeToArray(o, minLen); }\nfunction useCryptoTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useCryptoTransactions_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useCryptoTransactions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction useCryptoTransactions_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nvar useCryptoTransactions = function useCryptoTransactions() {\n  var _data$cashier_payment2;\n  var _useSubscription = useSubscription('cashier_payments'),\n    subscribe = _useSubscription.subscribe,\n    data = _useSubscription.data,\n    rest = useCryptoTransactions_objectWithoutProperties(_useSubscription, useCryptoTransactions_excluded);\n  var _useState = useState(),\n    _useState2 = useCryptoTransactions_slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n\n  // Reset transactions data\n  var resetData = useCallback(function () {\n    return setTransactions(undefined);\n  }, []);\n  useEffect(function () {\n    setTransactions(function (old_transactions) {\n      var _data$cashier_payment;\n      var new_transactions = data === null || data === void 0 ? void 0 : (_data$cashier_payment = data.cashier_payments) === null || _data$cashier_payment === void 0 ? void 0 : _data$cashier_payment.crypto;\n      if (!new_transactions) return old_transactions;\n      if (!old_transactions) return new_transactions;\n      var updated_transactions = useCryptoTransactions_toConsumableArray(old_transactions);\n\n      // For each new transaction, check if it exists in the old transactions.\n      new_transactions.forEach(function (new_transaction) {\n        // Find the index of the new transaction in the old transactions if exists.\n        var index = updated_transactions.findIndex(function (old_transaction) {\n          return old_transaction.id === new_transaction.id;\n        });\n\n        // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n        if (index === -1) {\n          updated_transactions.push(new_transaction);\n        } else {\n          updated_transactions[index] = new_transaction;\n        }\n      });\n      return updated_transactions;\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$cashier_payment2 = data.cashier_payments) === null || _data$cashier_payment2 === void 0 ? void 0 : _data$cashier_payment2.crypto]);\n\n  // Add additional information to each transaction.\n  var modified_transactions = useMemo(function () {\n    if (!transactions || !transactions.length) return undefined;\n    return transactions.map(function (transaction) {\n      return useCryptoTransactions_objectSpread(useCryptoTransactions_objectSpread({}, transaction), {}, {\n        /** Formatted transaction hash */\n        formatted_transaction_hash: transaction.transaction_hash ? getTruncatedString(transaction.transaction_hash, {\n          type: 'middle'\n        }) : 'NA',\n        /** Formatted address hash */\n        formatted_address_hash: transaction.address_hash ? getTruncatedString(transaction.address_hash, {\n          type: 'middle'\n        }) : 'NA',\n        /** Formatted confirmations status */\n        formatted_confirmations: transaction.status_code === 'CONFIRMED' ? 'Confirmed' : transaction.confirmations || 'Pending',\n        /** Determine if the transaction is a deposit or not. */\n        is_deposit: transaction.transaction_type === 'deposit',\n        /** Determine if the transaction is a withdrawal or not. */\n        is_withdrawal: transaction.transaction_type === 'withdrawal'\n      });\n    });\n  }, [transactions]);\n\n  // Sort transactions by submit time.\n  var sorted_transactions = useMemo(function () {\n    return modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions.sort(function (a, b) {\n      return b.submit_date - a.submit_date;\n    });\n  }, [modified_transactions]);\n  // Get the last transaction if exists.\n  var last_transaction = modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions[0];\n  return useCryptoTransactions_objectSpread({\n    /** List of user transactions sorted by submit time. */\n    data: sorted_transactions,\n    /** Returns the last transaction if exists. */\n    last_transaction: last_transaction,\n    /** Reset transactions data */\n    resetData: resetData,\n    subscribe: subscribe\n  }, rest);\n};\n/* harmony default export */ const hooks_useCryptoTransactions = ((/* unused pure expression or super */ null && (useCryptoTransactions)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCryptoWithdrawal.ts\nfunction useCryptoWithdrawal_typeof(obj) { \"@babel/helpers - typeof\"; return useCryptoWithdrawal_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCryptoWithdrawal_typeof(obj); }\nvar useCryptoWithdrawal_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useCryptoWithdrawal_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCryptoWithdrawal_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCryptoWithdrawal_ownKeys(Object(source), !0).forEach(function (key) { useCryptoWithdrawal_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCryptoWithdrawal_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCryptoWithdrawal_defineProperty(obj, key, value) { key = useCryptoWithdrawal_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCryptoWithdrawal_toPropertyKey(arg) { var key = useCryptoWithdrawal_toPrimitive(arg, \"string\"); return useCryptoWithdrawal_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCryptoWithdrawal_toPrimitive(input, hint) { if (useCryptoWithdrawal_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCryptoWithdrawal_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCryptoWithdrawal_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCryptoWithdrawal_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCryptoWithdrawal_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that used for crypto withdrawal */\nvar useCryptoWithdrawal = function useCryptoWithdrawal() {\n  var _useMutation = useMutation('cashier'),\n    _mutate = _useMutation.mutate,\n    rest = useCryptoWithdrawal_objectWithoutProperties(_useMutation, useCryptoWithdrawal_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: useCryptoWithdrawal_objectSpread({\n        cashier: 'withdraw',\n        provider: 'crypto',\n        type: 'api'\n      }, payload)\n    });\n  }, [_mutate]);\n  return useCryptoWithdrawal_objectSpread({\n    /** Function to request for crypto withdrawal */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useCryptoWithdrawal = ((/* unused pure expression or super */ null && (useCryptoWithdrawal)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useCtraderServiceToken.ts\nfunction useCtraderServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useCtraderServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useCtraderServiceToken_typeof(obj); }\nvar useCtraderServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useCtraderServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useCtraderServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useCtraderServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useCtraderServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useCtraderServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useCtraderServiceToken_defineProperty(obj, key, value) { key = useCtraderServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useCtraderServiceToken_toPropertyKey(arg) { var key = useCtraderServiceToken_toPrimitive(arg, \"string\"); return useCtraderServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useCtraderServiceToken_toPrimitive(input, hint) { if (useCtraderServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useCtraderServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useCtraderServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useCtraderServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useCtraderServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that get Service Token for CTrader Platform. */\nvar useCtraderServiceToken = function useCtraderServiceToken() {\n  var _ctrader_token$servic, _ctrader_token$servic2;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'ctrader',\n        server: account !== null && account !== void 0 && account.is_virtual ? 'demo' : 'real'\n      }\n    }),\n    ctrader_token = _useQuery.data,\n    rest = useCtraderServiceToken_objectWithoutProperties(_useQuery, useCtraderServiceToken_excluded);\n  return useCtraderServiceToken_objectSpread({\n    /** return the ctrader account token */\n    data: ctrader_token === null || ctrader_token === void 0 ? void 0 : (_ctrader_token$servic = ctrader_token.service_token) === null || _ctrader_token$servic === void 0 ? void 0 : (_ctrader_token$servic2 = _ctrader_token$servic.ctrader) === null || _ctrader_token$servic2 === void 0 ? void 0 : _ctrader_token$servic2.token\n  }, rest);\n};\n/* harmony default export */ const hooks_useCtraderServiceToken = ((/* unused pure expression or super */ null && (useCtraderServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDepositCryptoAddress.ts\nfunction useDepositCryptoAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useDepositCryptoAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDepositCryptoAddress_typeof(obj); }\nvar useDepositCryptoAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useDepositCryptoAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDepositCryptoAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDepositCryptoAddress_ownKeys(Object(source), !0).forEach(function (key) { useDepositCryptoAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDepositCryptoAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDepositCryptoAddress_defineProperty(obj, key, value) { key = useDepositCryptoAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDepositCryptoAddress_toPropertyKey(arg) { var key = useDepositCryptoAddress_toPrimitive(arg, \"string\"); return useDepositCryptoAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDepositCryptoAddress_toPrimitive(input, hint) { if (useDepositCryptoAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDepositCryptoAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDepositCryptoAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook to get the deposit crypto address. */\nvar useDepositCryptoAddress = function useDepositCryptoAddress() {\n  var _data$cashier, _data$cashier$deposit;\n  var _useMutation = useMutation('cashier'),\n    data = _useMutation.data,\n    _mutate = _useMutation.mutate,\n    rest = useDepositCryptoAddress_objectWithoutProperties(_useMutation, useDepositCryptoAddress_excluded);\n  var deposit_address = typeof (data === null || data === void 0 ? void 0 : data.cashier) !== 'string' ? data === null || data === void 0 ? void 0 : (_data$cashier = data.cashier) === null || _data$cashier === void 0 ? void 0 : (_data$cashier$deposit = _data$cashier.deposit) === null || _data$cashier$deposit === void 0 ? void 0 : _data$cashier$deposit.address : undefined;\n  var mutate = useCallback(function () {\n    return _mutate({\n      payload: {\n        cashier: 'deposit',\n        provider: 'crypto',\n        type: 'api'\n      }\n    });\n  }, [_mutate]);\n  return useDepositCryptoAddress_objectSpread(useDepositCryptoAddress_objectSpread({}, rest), {}, {\n    mutate: mutate,\n    data: deposit_address\n  });\n};\n/* harmony default export */ const hooks_useDepositCryptoAddress = ((/* unused pure expression or super */ null && (useDepositCryptoAddress)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDynamicLeverage.ts\n// TODO: hardcoded dynamic leverage values, to be replaced with API call\nvar dynamic_leverages = [{\n  key: 'forex',\n  title: 'Forex majors',\n  description: '',\n  leverage: 'Up to 1:1500',\n  data: [{\n    from: 0.01,\n    to: 1,\n    leverage: 1500\n  }, {\n    from: 1.01,\n    to: 5,\n    leverage: 1000\n  }, {\n    from: 5.01,\n    to: 10,\n    leverage: 500\n  }, {\n    from: 10.01,\n    to: 15,\n    leverage: 100\n  }]\n}, {\n  key: 'metals',\n  title: 'Metals',\n  description: '(XAUUSD, XAGUSD)',\n  leverage: 'Up to 1:1000',\n  data: [{\n    from: 0.01,\n    to: 1,\n    leverage: 1000\n  }, {\n    from: 1.01,\n    to: 5,\n    leverage: 500\n  }, {\n    from: 5.01,\n    to: 10,\n    leverage: 100\n  }, {\n    from: 10.01,\n    to: 15,\n    leverage: 50\n  }]\n}, {\n  key: 'cryptocurrencies',\n  title: 'Cryptocurrencies',\n  description: '(BTCUSD, ETHUSD)',\n  leverage: 'Up to 1:300',\n  data: [{\n    from: 0.01,\n    to: 1,\n    leverage: 300\n  }, {\n    from: 1.01,\n    to: 3,\n    leverage: 200\n  }, {\n    from: 3.01,\n    to: 5,\n    leverage: 100\n  }, {\n    from: 5.01,\n    to: 10,\n    leverage: 50\n  }]\n}, {\n  key: 'stock_indices',\n  title: 'Stock indices',\n  description: '(US_30, US_100, US_500)',\n  leverage: 'Up to 1:300',\n  data: [{\n    from: 0.1,\n    to: 5,\n    leverage: 300\n  }, {\n    from: 5.1,\n    to: 50,\n    leverage: 200\n  }, {\n    from: 50.1,\n    to: 5,\n    leverage: 100\n  }]\n}];\n\n/** A custom hook that gets dynamic leverage values. */\nvar useDynamicLeverage = function useDynamicLeverage() {\n  // TODO: replace with API call once the endpoint is ready.\n\n  return {\n    data: dynamic_leverages\n  };\n};\n/* harmony default export */ const hooks_useDynamicLeverage = ((/* unused pure expression or super */ null && (useDynamicLeverage)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useExchangeRate.ts\nfunction useExchangeRate_typeof(obj) { \"@babel/helpers - typeof\"; return useExchangeRate_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useExchangeRate_typeof(obj); }\nvar useExchangeRate_excluded = (/* unused pure expression or super */ null && ([\"data\", \"subscribe\"]));\nfunction useExchangeRate_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useExchangeRate_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useExchangeRate_ownKeys(Object(source), !0).forEach(function (key) { useExchangeRate_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useExchangeRate_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useExchangeRate_defineProperty(obj, key, value) { key = useExchangeRate_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useExchangeRate_toPropertyKey(arg) { var key = useExchangeRate_toPrimitive(arg, \"string\"); return useExchangeRate_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useExchangeRate_toPrimitive(input, hint) { if (useExchangeRate_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useExchangeRate_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useExchangeRate_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useExchangeRate_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useExchangeRate_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that gets exchange rates from base currency to target currency */\nvar useExchangeRate_useExchangeRate = function useExchangeRate() {\n  var _useSubscription = useSubscription('exchange_rates'),\n    data = _useSubscription.data,\n    _subscribe = _useSubscription.subscribe,\n    rest = useExchangeRate_objectWithoutProperties(_useSubscription, useExchangeRate_excluded);\n  var subscribe = useCallback(function (payload) {\n    _subscribe({\n      payload: payload\n    });\n  }, [_subscribe]);\n  return useExchangeRate_objectSpread({\n    /** The exchange rates response */\n    data: data === null || data === void 0 ? void 0 : data.exchange_rates,\n    /** Function to subscribe to exchange rates */\n    subscribe: subscribe\n  }, rest);\n};\n/* harmony default export */ const hooks_useExchangeRate = ((/* unused pure expression or super */ null && (useExchangeRate_useExchangeRate)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useResidenceList.ts\nfunction useResidenceList_typeof(obj) { \"@babel/helpers - typeof\"; return useResidenceList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useResidenceList_typeof(obj); }\nvar useResidenceList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useResidenceList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useResidenceList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useResidenceList_ownKeys(Object(source), !0).forEach(function (key) { useResidenceList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useResidenceList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useResidenceList_defineProperty(obj, key, value) { key = useResidenceList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useResidenceList_toPropertyKey(arg) { var key = useResidenceList_toPrimitive(arg, \"string\"); return useResidenceList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useResidenceList_toPrimitive(input, hint) { if (useResidenceList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useResidenceList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useResidenceList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useResidenceList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useResidenceList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that gets the residence list. */\nvar useResidenceList_useResidenceList = function useResidenceList() {\n  var _useQuery = useQuery('residence_list'),\n    data = _useQuery.data,\n    residence_list_rest = useResidenceList_objectWithoutProperties(_useQuery, useResidenceList_excluded);\n\n  /** Modify the residence list data. */\n  var modified_residence_list = useMemo(function () {\n    if (!data || !data.residence_list) return [];\n    return data.residence_list.map(function (residence) {\n      return useResidenceList_objectSpread({}, residence);\n    });\n  }, [data]);\n  return useResidenceList_objectSpread({\n    /** The residence list */\n    data: modified_residence_list\n  }, residence_list_rest);\n};\n/* harmony default export */ const hooks_useResidenceList = ((/* unused pure expression or super */ null && (useResidenceList_useResidenceList)));\n;// CONCATENATED MODULE: ../../api/src/hooks/usePOI.ts\nfunction usePOI_typeof(obj) { \"@babel/helpers - typeof\"; return usePOI_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePOI_typeof(obj); }\nvar usePOI_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePOI_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePOI_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePOI_ownKeys(Object(source), !0).forEach(function (key) { usePOI_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePOI_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePOI_defineProperty(obj, key, value) { key = usePOI_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePOI_toPropertyKey(arg) { var key = usePOI_toPrimitive(arg, \"string\"); return usePOI_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePOI_toPrimitive(input, hint) { if (usePOI_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePOI_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePOI_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePOI_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePOI_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n/** A custom hook to get the proof of identity verification info of the current user. */\nvar usePOI = function usePOI() {\n  var _authentication_data$2, _authentication_data$4, _authentication_data$6;\n  var _useAuthentication = useAuthentication(),\n    authentication_data = _useAuthentication.data,\n    rest = usePOI_objectWithoutProperties(_useAuthentication, usePOI_excluded);\n  var _useResidenceList = useResidenceList(),\n    residence_list_data = _useResidenceList.data;\n  var _useSettings = useSettings(),\n    get_settings_data = _useSettings.data;\n  var previous_service = useMemo(function () {\n    var _authentication_data$;\n    var latest_poi_attempt = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$ = authentication_data.attempts) === null || _authentication_data$ === void 0 ? void 0 : _authentication_data$.latest;\n    return latest_poi_attempt === null || latest_poi_attempt === void 0 ? void 0 : latest_poi_attempt.service;\n  }, [authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$2 = authentication_data.attempts) === null || _authentication_data$2 === void 0 ? void 0 : _authentication_data$2.latest]);\n\n  /**\n   * @description Get the previous POI attempts details (if any)\n   */\n  var previous_poi = useMemo(function () {\n    var _authentication_data$3;\n    if (!previous_service) {\n      return null;\n    }\n    var services = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$3 = authentication_data.identity) === null || _authentication_data$3 === void 0 ? void 0 : _authentication_data$3.services;\n    if (services && services.manual) {\n      return {\n        service: previous_service,\n        status: services.manual.status\n      };\n    }\n    var current_service = services === null || services === void 0 ? void 0 : services[previous_service];\n    return {\n      service: previous_service,\n      status: current_service === null || current_service === void 0 ? void 0 : current_service.status,\n      reported_properties: current_service === null || current_service === void 0 ? void 0 : current_service.reported_properties,\n      last_rejected: current_service === null || current_service === void 0 ? void 0 : current_service.last_rejected,\n      submissions_left: (current_service === null || current_service === void 0 ? void 0 : current_service.submissions_left) || 0\n    };\n  }, [previous_service, authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$4 = authentication_data.identity) === null || _authentication_data$4 === void 0 ? void 0 : _authentication_data$4.services]);\n\n  /**\n   * @description Get the next step based on a few check. Returns configuration for document validation as well\n   */\n  var next_poi = useMemo(function () {\n    var _matching_residence_d, _matching_residence_d2, _matching_residence_d3, _matching_residence_d4, _matching_residence_d5, _matching_residence_d6, _authentication_data$5, _services$idv$submiss, _services$idv, _services$onfido$subm, _services$onfido;\n    var user_country_code = (get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.citizen) || (get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.country_code);\n    var matching_residence_data = residence_list_data === null || residence_list_data === void 0 ? void 0 : residence_list_data.find(function (r) {\n      return r.value === user_country_code;\n    });\n    var is_idv_supported = matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d = matching_residence_data.identity) === null || _matching_residence_d === void 0 ? void 0 : (_matching_residence_d2 = _matching_residence_d.services) === null || _matching_residence_d2 === void 0 ? void 0 : (_matching_residence_d3 = _matching_residence_d2.idv) === null || _matching_residence_d3 === void 0 ? void 0 : _matching_residence_d3.is_country_supported;\n    var is_onfido_supported = matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d4 = matching_residence_data.identity) === null || _matching_residence_d4 === void 0 ? void 0 : (_matching_residence_d5 = _matching_residence_d4.services) === null || _matching_residence_d5 === void 0 ? void 0 : (_matching_residence_d6 = _matching_residence_d5.onfido) === null || _matching_residence_d6 === void 0 ? void 0 : _matching_residence_d6.documents_supported;\n    var services = authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$5 = authentication_data.identity) === null || _authentication_data$5 === void 0 ? void 0 : _authentication_data$5.services;\n    var idv_submission_left = (_services$idv$submiss = services === null || services === void 0 ? void 0 : (_services$idv = services.idv) === null || _services$idv === void 0 ? void 0 : _services$idv.submissions_left) !== null && _services$idv$submiss !== void 0 ? _services$idv$submiss : 0;\n    var onfido_submission_left = (_services$onfido$subm = services === null || services === void 0 ? void 0 : (_services$onfido = services.onfido) === null || _services$onfido === void 0 ? void 0 : _services$onfido.submissions_left) !== null && _services$onfido$subm !== void 0 ? _services$onfido$subm : 0;\n    if (is_idv_supported && idv_submission_left && !(authentication_data !== null && authentication_data !== void 0 && authentication_data.is_idv_disallowed)) {\n      var _matching_residence_d7, _matching_residence_d8, _matching_residence_d9;\n      return {\n        service: 'idv',\n        submission_left: idv_submission_left,\n        document_supported: matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d7 = matching_residence_data.identity) === null || _matching_residence_d7 === void 0 ? void 0 : (_matching_residence_d8 = _matching_residence_d7.services) === null || _matching_residence_d8 === void 0 ? void 0 : (_matching_residence_d9 = _matching_residence_d8.idv) === null || _matching_residence_d9 === void 0 ? void 0 : _matching_residence_d9.documents_supported\n      };\n    } else if (is_onfido_supported && onfido_submission_left) {\n      var _matching_residence_d10, _matching_residence_d11, _matching_residence_d12;\n      return {\n        service: 'onfido',\n        submission_left: onfido_submission_left,\n        document_supported: matching_residence_data === null || matching_residence_data === void 0 ? void 0 : (_matching_residence_d10 = matching_residence_data.identity) === null || _matching_residence_d10 === void 0 ? void 0 : (_matching_residence_d11 = _matching_residence_d10.services) === null || _matching_residence_d11 === void 0 ? void 0 : (_matching_residence_d12 = _matching_residence_d11.onfido) === null || _matching_residence_d12 === void 0 ? void 0 : _matching_residence_d12.documents_supported\n      };\n    }\n    return {\n      service: 'manual'\n    };\n  }, [get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.citizen, get_settings_data === null || get_settings_data === void 0 ? void 0 : get_settings_data.country_code, residence_list_data, authentication_data === null || authentication_data === void 0 ? void 0 : (_authentication_data$6 = authentication_data.identity) === null || _authentication_data$6 === void 0 ? void 0 : _authentication_data$6.services, authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.is_idv_disallowed]);\n  var modified_verification_data = useMemo(function () {\n    if (!authentication_data) return;\n    return usePOI_objectSpread(usePOI_objectSpread({}, authentication_data === null || authentication_data === void 0 ? void 0 : authentication_data.identity), {}, {\n      previous: previous_poi,\n      next: next_poi\n    });\n  }, [authentication_data, next_poi, previous_poi]);\n  return usePOI_objectSpread({\n    data: modified_verification_data\n  }, rest);\n};\n/* harmony default export */ const hooks_usePOI = ((/* unused pure expression or super */ null && (usePOI)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useSortedMT5Accounts.ts\nfunction useSortedMT5Accounts_typeof(obj) { \"@babel/helpers - typeof\"; return useSortedMT5Accounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useSortedMT5Accounts_typeof(obj); }\nvar useSortedMT5Accounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useSortedMT5Accounts_toConsumableArray(arr) { return useSortedMT5Accounts_arrayWithoutHoles(arr) || useSortedMT5Accounts_iterableToArray(arr) || useSortedMT5Accounts_unsupportedIterableToArray(arr) || useSortedMT5Accounts_nonIterableSpread(); }\nfunction useSortedMT5Accounts_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useSortedMT5Accounts_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useSortedMT5Accounts_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useSortedMT5Accounts_arrayLikeToArray(o, minLen); }\nfunction useSortedMT5Accounts_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useSortedMT5Accounts_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useSortedMT5Accounts_arrayLikeToArray(arr); }\nfunction useSortedMT5Accounts_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useSortedMT5Accounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useSortedMT5Accounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useSortedMT5Accounts_ownKeys(Object(source), !0).forEach(function (key) { useSortedMT5Accounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useSortedMT5Accounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useSortedMT5Accounts_defineProperty(obj, key, value) { key = useSortedMT5Accounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useSortedMT5Accounts_toPropertyKey(arg) { var key = useSortedMT5Accounts_toPrimitive(arg, \"string\"); return useSortedMT5Accounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useSortedMT5Accounts_toPrimitive(input, hint) { if (useSortedMT5Accounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useSortedMT5Accounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useSortedMT5Accounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useSortedMT5Accounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useSortedMT5Accounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook to get the sorted added and non-added MT5 accounts. */\nvar useSortedMT5Accounts = function useSortedMT5Accounts() {\n  var _useAvailableMT5Accou = useAvailableMT5Accounts(),\n    all_available_mt5_accounts = _useAvailableMT5Accou.data;\n  var _useMT5AccountsList = useMT5AccountsList(),\n    mt5_accounts = _useMT5AccountsList.data,\n    rest = useSortedMT5Accounts_objectWithoutProperties(_useMT5AccountsList, useSortedMT5Accounts_excluded);\n  var modified_data = useMemo(function () {\n    if (!all_available_mt5_accounts || !mt5_accounts) return;\n    return all_available_mt5_accounts === null || all_available_mt5_accounts === void 0 ? void 0 : all_available_mt5_accounts.map(function (available_account) {\n      var created_account = mt5_accounts === null || mt5_accounts === void 0 ? void 0 : mt5_accounts.find(function (account) {\n        return available_account.market_type === account.market_type && available_account.shortcode === account.landing_company_short;\n      });\n      if (created_account) return useSortedMT5Accounts_objectSpread(useSortedMT5Accounts_objectSpread({}, created_account), {}, {\n        /** Determine if the account is added or not */\n        is_added: true\n      });\n      return useSortedMT5Accounts_objectSpread(useSortedMT5Accounts_objectSpread({}, available_account), {}, {\n        /** Determine if the account is added or not */\n        is_added: false\n      });\n    });\n  }, [all_available_mt5_accounts, mt5_accounts]);\n\n  // // Reduce out the added and non added accounts to make sure only one of each market_type is shown for not added\n  var filtered_data = useMemo(function () {\n    if (!modified_data) return;\n    var added_accounts = modified_data.filter(function (account) {\n      return account.is_added;\n    });\n    var non_added_accounts = modified_data.filter(function (account) {\n      return !account.is_added;\n    });\n    var filtered_non_added_accounts = non_added_accounts.reduce(function (acc, account) {\n      var existing_account = acc.find(function (acc_account) {\n        return acc_account.market_type === account.market_type;\n      });\n      var added_account = added_accounts.find(function (acc_account) {\n        return acc_account.market_type === account.market_type;\n      });\n      if (existing_account || added_account) return acc;\n      return [].concat(useSortedMT5Accounts_toConsumableArray(acc), [account]);\n    }, []);\n    return [].concat(useSortedMT5Accounts_toConsumableArray(added_accounts), useSortedMT5Accounts_toConsumableArray(filtered_non_added_accounts));\n  }, [modified_data]);\n\n  // Sort the data by market_type to make sure the order is 'synthetic', 'financial', 'all'\n  var sorted_data = useMemo(function () {\n    var market_type_order = ['synthetic', 'financial', 'all'];\n    if (!filtered_data) return;\n    var sorted_data = market_type_order.reduce(function (acc, market_type) {\n      var accounts = filtered_data.filter(function (account) {\n        return account.market_type === market_type;\n      });\n      if (!accounts.length) return acc;\n      return [].concat(useSortedMT5Accounts_toConsumableArray(acc), useSortedMT5Accounts_toConsumableArray(accounts));\n    }, []);\n    return sorted_data;\n  }, [filtered_data]);\n  return useSortedMT5Accounts_objectSpread({\n    data: sorted_data\n  }, rest);\n};\n/* harmony default export */ const hooks_useSortedMT5Accounts = ((/* unused pure expression or super */ null && (useSortedMT5Accounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformInvestorPasswordChange.ts\nfunction useTradingPlatformInvestorPasswordChange_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformInvestorPasswordChange_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformInvestorPasswordChange_typeof(obj); }\nvar useTradingPlatformInvestorPasswordChange_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useTradingPlatformInvestorPasswordChange_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformInvestorPasswordChange_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformInvestorPasswordChange_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformInvestorPasswordChange_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformInvestorPasswordChange_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformInvestorPasswordChange_defineProperty(obj, key, value) { key = useTradingPlatformInvestorPasswordChange_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformInvestorPasswordChange_toPropertyKey(arg) { var key = useTradingPlatformInvestorPasswordChange_toPrimitive(arg, \"string\"); return useTradingPlatformInvestorPasswordChange_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformInvestorPasswordChange_toPrimitive(input, hint) { if (useTradingPlatformInvestorPasswordChange_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformInvestorPasswordChange_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformInvestorPasswordChange_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformInvestorPasswordChange_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformInvestorPasswordChange_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that change the Trading Platform Investor Password. */\nvar useTradingPlatformInvestorPasswordChange = function useTradingPlatformInvestorPasswordChange() {\n  var _useMutation = useMutation('trading_platform_investor_password_change'),\n    _mutate = _useMutation.mutate,\n    rest = useTradingPlatformInvestorPasswordChange_objectWithoutProperties(_useMutation, useTradingPlatformInvestorPasswordChange_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useTradingPlatformInvestorPasswordChange_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformInvestorPasswordChange = ((/* unused pure expression or super */ null && (useTradingPlatformInvestorPasswordChange)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformInvestorPasswordReset.ts\nfunction useTradingPlatformInvestorPasswordReset_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformInvestorPasswordReset_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformInvestorPasswordReset_typeof(obj); }\nvar useTradingPlatformInvestorPasswordReset_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useTradingPlatformInvestorPasswordReset_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformInvestorPasswordReset_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformInvestorPasswordReset_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformInvestorPasswordReset_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformInvestorPasswordReset_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformInvestorPasswordReset_defineProperty(obj, key, value) { key = useTradingPlatformInvestorPasswordReset_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformInvestorPasswordReset_toPropertyKey(arg) { var key = useTradingPlatformInvestorPasswordReset_toPrimitive(arg, \"string\"); return useTradingPlatformInvestorPasswordReset_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformInvestorPasswordReset_toPrimitive(input, hint) { if (useTradingPlatformInvestorPasswordReset_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformInvestorPasswordReset_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformInvestorPasswordReset_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformInvestorPasswordReset_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformInvestorPasswordReset_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that reset the Trading Platform Investor Password. */\nvar useTradingPlatformInvestorPasswordReset = function useTradingPlatformInvestorPasswordReset() {\n  var _useMutation = useMutation('trading_platform_investor_password_reset'),\n    _mutate = _useMutation.mutate,\n    rest = useTradingPlatformInvestorPasswordReset_objectWithoutProperties(_useMutation, useTradingPlatformInvestorPasswordReset_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useTradingPlatformInvestorPasswordReset_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformInvestorPasswordReset = ((/* unused pure expression or super */ null && (useTradingPlatformInvestorPasswordReset)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTradingPlatformPasswordChange.ts\nfunction useTradingPlatformPasswordChange_typeof(obj) { \"@babel/helpers - typeof\"; return useTradingPlatformPasswordChange_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTradingPlatformPasswordChange_typeof(obj); }\nvar useTradingPlatformPasswordChange_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useTradingPlatformPasswordChange_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTradingPlatformPasswordChange_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTradingPlatformPasswordChange_ownKeys(Object(source), !0).forEach(function (key) { useTradingPlatformPasswordChange_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTradingPlatformPasswordChange_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTradingPlatformPasswordChange_defineProperty(obj, key, value) { key = useTradingPlatformPasswordChange_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTradingPlatformPasswordChange_toPropertyKey(arg) { var key = useTradingPlatformPasswordChange_toPrimitive(arg, \"string\"); return useTradingPlatformPasswordChange_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTradingPlatformPasswordChange_toPrimitive(input, hint) { if (useTradingPlatformPasswordChange_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTradingPlatformPasswordChange_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTradingPlatformPasswordChange_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTradingPlatformPasswordChange_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTradingPlatformPasswordChange_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that change the Trading Platform Password. */\nvar useTradingPlatformPasswordChange = function useTradingPlatformPasswordChange() {\n  var _useMutation = useMutation('trading_platform_password_change'),\n    _mutate = _useMutation.mutate,\n    rest = useTradingPlatformPasswordChange_objectWithoutProperties(_useMutation, useTradingPlatformPasswordChange_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useTradingPlatformPasswordChange_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useTradingPlatformPasswordChange = ((/* unused pure expression or super */ null && (useTradingPlatformPasswordChange)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTransactions.ts\nfunction useTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return useTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTransactions_typeof(obj); }\nvar useTransactions_excluded = (/* unused pure expression or super */ null && ([\"data\", \"fetchNextPage\", \"remove\"]));\nfunction useTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTransactions_ownKeys(Object(source), !0).forEach(function (key) { useTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTransactions_defineProperty(obj, key, value) { key = useTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTransactions_toPropertyKey(arg) { var key = useTransactions_toPrimitive(arg, \"string\"); return useTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTransactions_toPrimitive(input, hint) { if (useTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTransactions_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTransactions_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTransactions_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction useTransactions_slicedToArray(arr, i) { return useTransactions_arrayWithHoles(arr) || useTransactions_iterableToArrayLimit(arr, i) || useTransactions_unsupportedIterableToArray(arr, i) || useTransactions_nonIterableRest(); }\nfunction useTransactions_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useTransactions_arrayLikeToArray(o, minLen); }\nfunction useTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useTransactions_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useTransactions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\n/** A custom hook to get the summary of account transactions */\nvar useTransactions = function useTransactions() {\n  var _useAuthorize = useAuthorize(),\n    isFetching = _useAuthorize.isFetching,\n    isSuccess = _useAuthorize.isSuccess;\n  var _useState = useState(),\n    _useState2 = useTransactions_slicedToArray(_useState, 2),\n    filter = _useState2[0],\n    setFilter = _useState2[1];\n  var invalidate = useInvalidateQuery();\n  var _useInfiniteQuery = useInfiniteQuery('statement', {\n      options: {\n        enabled: !isFetching && isSuccess,\n        getNextPageParam: function getNextPageParam(lastPage, pages) {\n          var _lastPage$statement;\n          if (!(lastPage !== null && lastPage !== void 0 && (_lastPage$statement = lastPage.statement) !== null && _lastPage$statement !== void 0 && _lastPage$statement.count)) return;\n          return pages.length;\n        }\n      },\n      payload: {\n        action_type: filter\n      }\n    }),\n    data = _useInfiniteQuery.data,\n    fetchNextPage = _useInfiniteQuery.fetchNextPage,\n    remove = _useInfiniteQuery.remove,\n    rest = useTransactions_objectWithoutProperties(_useInfiniteQuery, useTransactions_excluded);\n  useEffect(function () {\n    invalidate('statement');\n  }, [filter, invalidate]);\n  useEffect(function () {\n    return function () {\n      remove();\n    };\n  }, [remove]);\n\n  // Flatten the data array.\n  var flatten_data = useMemo(function () {\n    var _data$pages, _data$pages2;\n    if (!(data !== null && data !== void 0 && (_data$pages = data.pages) !== null && _data$pages !== void 0 && _data$pages.length)) return;\n    return data === null || data === void 0 ? void 0 : (_data$pages2 = data.pages) === null || _data$pages2 === void 0 ? void 0 : _data$pages2.flatMap(function (page) {\n      var _page$statement;\n      return page === null || page === void 0 ? void 0 : (_page$statement = page.statement) === null || _page$statement === void 0 ? void 0 : _page$statement.transactions;\n    });\n  }, [data === null || data === void 0 ? void 0 : data.pages]);\n\n  // Modify the data.\n  var modified_data = useMemo(function () {\n    if (!(flatten_data !== null && flatten_data !== void 0 && flatten_data.length)) return;\n    return flatten_data === null || flatten_data === void 0 ? void 0 : flatten_data.map(function (transaction) {\n      return useTransactions_objectSpread({}, transaction);\n    });\n  }, [flatten_data]);\n  return useTransactions_objectSpread({\n    /** List of account transactions */\n    data: modified_data,\n    /** Fetch the next page of transactions */\n    fetchNextPage: fetchNextPage,\n    /** Filter the transactions by type */\n    setFilter: setFilter\n  }, rest);\n};\n/* harmony default export */ const hooks_useTransactions = ((/* unused pure expression or super */ null && (useTransactions)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useTransferBetweenAccounts.ts\nfunction useTransferBetweenAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return useTransferBetweenAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useTransferBetweenAccounts_typeof(obj); }\nvar useTransferBetweenAccounts_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useTransferBetweenAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useTransferBetweenAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useTransferBetweenAccounts_ownKeys(Object(source), !0).forEach(function (key) { useTransferBetweenAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useTransferBetweenAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useTransferBetweenAccounts_defineProperty(obj, key, value) { key = useTransferBetweenAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useTransferBetweenAccounts_toPropertyKey(arg) { var key = useTransferBetweenAccounts_toPrimitive(arg, \"string\"); return useTransferBetweenAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useTransferBetweenAccounts_toPrimitive(input, hint) { if (useTransferBetweenAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useTransferBetweenAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTransferBetweenAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook used to transfer money between client accounts */\nvar useTransferBetweenAccounts_useTransferBetweenAccounts = function useTransferBetweenAccounts() {\n  var _useMutation = useMutation('transfer_between_accounts'),\n    _mutate = _useMutation.mutate,\n    rest = useTransferBetweenAccounts_objectWithoutProperties(_useMutation, useTransferBetweenAccounts_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useTransferBetweenAccounts_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useTransferBetweenAccounts = ((/* unused pure expression or super */ null && (useTransferBetweenAccounts_useTransferBetweenAccounts)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useVerifyEmail.ts\nfunction useVerifyEmail_typeof(obj) { \"@babel/helpers - typeof\"; return useVerifyEmail_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useVerifyEmail_typeof(obj); }\nvar useVerifyEmail_excluded = (/* unused pure expression or super */ null && ([\"mutate\"]));\nfunction useVerifyEmail_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useVerifyEmail_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useVerifyEmail_ownKeys(Object(source), !0).forEach(function (key) { useVerifyEmail_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useVerifyEmail_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useVerifyEmail_defineProperty(obj, key, value) { key = useVerifyEmail_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useVerifyEmail_toPropertyKey(arg) { var key = useVerifyEmail_toPrimitive(arg, \"string\"); return useVerifyEmail_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useVerifyEmail_toPrimitive(input, hint) { if (useVerifyEmail_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useVerifyEmail_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useVerifyEmail_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useVerifyEmail_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useVerifyEmail_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook for verifying email address */\nvar useVerifyEmail = function useVerifyEmail() {\n  var _useMutation = useMutation('verify_email'),\n    _mutate = _useMutation.mutate,\n    rest = useVerifyEmail_objectWithoutProperties(_useMutation, useVerifyEmail_excluded);\n  var mutate = useCallback(function (payload) {\n    return _mutate({\n      payload: payload\n    });\n  }, [_mutate]);\n  return useVerifyEmail_objectSpread({\n    /** The mutation function that accepts a payload and sends it to the server */\n    mutate: mutate\n  }, rest);\n};\n/* harmony default export */ const hooks_useVerifyEmail = ((/* unused pure expression or super */ null && (useVerifyEmail)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useWalletMigration.ts\n\n\n\n\n\n\n/** A custom hook to get the status of wallet_migration API and to start/reset the migration process */\nvar useWalletMigration = function useWalletMigration() {\n  var _data$wallet_migratio;\n  var invalidate = useInvalidateQuery();\n\n  /** Make a request to wallet_migration API and onSuccess it will invalidate the cached data  */\n  var _useMutation = useMutation('wallet_migration', {\n      onSuccess: function onSuccess() {\n        return invalidate('wallet_migration');\n      }\n    }),\n    mutate = _useMutation.mutate;\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n\n  /** Fetch the wallet_migration API and refetch it every second if the status is in_progress */\n  var _useQuery = useQuery('wallet_migration', {\n      payload: {\n        wallet_migration: 'state'\n      },\n      options: {\n        refetchInterval: function refetchInterval(response) {\n          var _response$wallet_migr;\n          return (response === null || response === void 0 ? void 0 : (_response$wallet_migr = response.wallet_migration) === null || _response$wallet_migr === void 0 ? void 0 : _response$wallet_migr.state) === 'in_progress' ? 500 : false;\n        },\n        enabled: isSuccess\n      }\n    }),\n    data = _useQuery.data;\n  var startMigration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'start'\n      }\n    });\n  }, [mutate]);\n  var resetMigration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'reset'\n      }\n    });\n  }, [mutate]);\n  var state = data === null || data === void 0 ? void 0 : (_data$wallet_migratio = data.wallet_migration) === null || _data$wallet_migratio === void 0 ? void 0 : _data$wallet_migratio.state;\n  return {\n    /** The status of the wallet_migration API */\n    state: state,\n    /** A boolean to check if the status is not_eligible */\n    is_ineligible: state === 'ineligible',\n    /** A boolean to check if the status is eligible */\n    is_eligible: state === 'eligible',\n    /** A boolean to check if the status is in_progress */\n    is_in_progress: state === 'in_progress',\n    /** A boolean to check if the status is completed */\n    is_migrated: state === 'migrated',\n    /** A boolean to check if the status is failed */\n    is_failed: state === 'failed',\n    /** Sends a request to wallet_migration API to start the migration process */\n    startMigration: startMigration,\n    /** Sends a request to wallet_migration API to reset the migration process */\n    resetMigration: resetMigration\n  };\n};\n/* harmony default export */ const hooks_useWalletMigration = ((/* unused pure expression or super */ null && (useWalletMigration)));\n;// CONCATENATED MODULE: ../../api/src/hooks/useDxtradeServiceToken.ts\nfunction useDxtradeServiceToken_typeof(obj) { \"@babel/helpers - typeof\"; return useDxtradeServiceToken_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDxtradeServiceToken_typeof(obj); }\nvar useDxtradeServiceToken_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useDxtradeServiceToken_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDxtradeServiceToken_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDxtradeServiceToken_ownKeys(Object(source), !0).forEach(function (key) { useDxtradeServiceToken_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDxtradeServiceToken_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDxtradeServiceToken_defineProperty(obj, key, value) { key = useDxtradeServiceToken_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDxtradeServiceToken_toPropertyKey(arg) { var key = useDxtradeServiceToken_toPrimitive(arg, \"string\"); return useDxtradeServiceToken_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDxtradeServiceToken_toPrimitive(input, hint) { if (useDxtradeServiceToken_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDxtradeServiceToken_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDxtradeServiceToken_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDxtradeServiceToken_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDxtradeServiceToken_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** A custom hook that get Service Token for Deriv X Platform. */\nvar useDxtradeServiceToken = function useDxtradeServiceToken() {\n  var _dxtrade_token$servic, _dxtrade_token$servic2;\n  var _useActiveAccount = useActiveAccount(),\n    account = _useActiveAccount.data;\n  var _useQuery = useQuery('service_token', {\n      payload: {\n        service: 'dxtrade',\n        server: account !== null && account !== void 0 && account.is_virtual ? 'demo' : 'real'\n      }\n    }),\n    dxtrade_token = _useQuery.data,\n    rest = useDxtradeServiceToken_objectWithoutProperties(_useQuery, useDxtradeServiceToken_excluded);\n  return useDxtradeServiceToken_objectSpread({\n    /** return the Deriv X account token */\n    data: dxtrade_token === null || dxtrade_token === void 0 ? void 0 : (_dxtrade_token$servic = dxtrade_token.service_token) === null || _dxtrade_token$servic === void 0 ? void 0 : (_dxtrade_token$servic2 = _dxtrade_token$servic.dxtrade) === null || _dxtrade_token$servic2 === void 0 ? void 0 : _dxtrade_token$servic2.token\n  }, rest);\n};\n/* harmony default export */ const hooks_useDxtradeServiceToken = ((/* unused pure expression or super */ null && (useDxtradeServiceToken)));\n;// CONCATENATED MODULE: ../../api/src/hooks/index.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../api/src/usePaginatedFetch.ts\nfunction usePaginatedFetch_typeof(obj) { \"@babel/helpers - typeof\"; return usePaginatedFetch_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaginatedFetch_typeof(obj); }\nvar usePaginatedFetch_excluded = (/* unused pure expression or super */ null && ([\"remove\"]));\nfunction usePaginatedFetch_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaginatedFetch_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaginatedFetch_ownKeys(Object(source), !0).forEach(function (key) { usePaginatedFetch_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaginatedFetch_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaginatedFetch_defineProperty(obj, key, value) { key = usePaginatedFetch_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaginatedFetch_toPropertyKey(arg) { var key = usePaginatedFetch_toPrimitive(arg, \"string\"); return usePaginatedFetch_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaginatedFetch_toPrimitive(input, hint) { if (usePaginatedFetch_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaginatedFetch_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaginatedFetch_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaginatedFetch_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaginatedFetch_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nfunction usePaginatedFetch_slicedToArray(arr, i) { return usePaginatedFetch_arrayWithHoles(arr) || usePaginatedFetch_iterableToArrayLimit(arr, i) || usePaginatedFetch_unsupportedIterableToArray(arr, i) || usePaginatedFetch_nonIterableRest(); }\nfunction usePaginatedFetch_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction usePaginatedFetch_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return usePaginatedFetch_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return usePaginatedFetch_arrayLikeToArray(o, minLen); }\nfunction usePaginatedFetch_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction usePaginatedFetch_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction usePaginatedFetch_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar usePaginatedFetch_usePaginatedFetch = function usePaginatedFetch(name) {\n  var _payload$payload, _payload$payload2;\n  for (var _len = arguments.length, props = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    props[_key - 1] = arguments[_key];\n  }\n  var prop = props === null || props === void 0 ? void 0 : props[0];\n  var payload = prop && 'payload' in prop ? prop.payload : undefined;\n  var options = prop && 'options' in prop ? prop.options : undefined;\n  var limit = (payload === null || payload === void 0 ? void 0 : (_payload$payload = payload.payload) === null || _payload$payload === void 0 ? void 0 : _payload$payload.limit) || 10;\n  var _useState = useState((payload === null || payload === void 0 ? void 0 : (_payload$payload2 = payload.payload) === null || _payload$payload2 === void 0 ? void 0 : _payload$payload2.offset) || 0),\n    _useState2 = usePaginatedFetch_slicedToArray(_useState, 2),\n    offset = _useState2[0],\n    setOffset = _useState2[1];\n\n  // @ts-expect-error It's safe to ignore the TS error here since the\n  // exact type of the payload is not determined at this point.\n  var _useQuery = useQuery(name, {\n      payload: usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, payload), {}, {\n        offset: offset,\n        limit: limit\n      }),\n      options: usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, options), {}, {\n        keepPreviousData: !!offset\n      })\n    }),\n    remove = _useQuery.remove,\n    rest = usePaginatedFetch_objectWithoutProperties(_useQuery, usePaginatedFetch_excluded);\n  var loadMore = useCallback(function () {\n    return setOffset(function (prev) {\n      return prev + limit;\n    });\n  }, [limit]);\n  var reset = useCallback(function () {\n    remove();\n    setOffset(0);\n  }, [remove]);\n  return usePaginatedFetch_objectSpread(usePaginatedFetch_objectSpread({}, rest), {}, {\n    remove: remove,\n    loadMore: loadMore,\n    reset: reset\n  });\n};\n/* harmony default export */ const src_usePaginatedFetch = ((/* unused pure expression or super */ null && (usePaginatedFetch_usePaginatedFetch)));\n;// CONCATENATED MODULE: ../../api/src/index.ts\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../stores/src/useStore.ts\n\n\nvar useStore_useStore = function useStore() {\n  var store = (0,external_react_.useContext)(storeContext);\n  if (!store) {\n    throw new Error('useStore must be used within StoreProvider');\n  }\n  return store;\n};\n/* harmony default export */ const src_useStore = (useStore_useStore);\n;// CONCATENATED MODULE: ../../stores/src/providers/ExchangeRatesProvider.tsx\n\n\n\n\n\nvar ExchangeRatesProvider_ExchangeRatesProvider = observer(function (_ref) {\n  var children = _ref.children;\n  var _useSubscription = src_useSubscription('exchange_rates'),\n    data = _useSubscription.data,\n    subscribe = _useSubscription.subscribe;\n  var _useStore = src_useStore(),\n    update = _useStore.exchange_rates.update;\n  (0,external_react_.useEffect)(function () {\n    subscribe({\n      payload: {\n        base_currency: 'USD'\n      }\n    });\n  }, [subscribe]);\n  (0,external_react_.useEffect)(function () {\n    if (data) {\n      var exchange_rates = data.exchange_rates;\n      if (exchange_rates) update(function (prev) {\n        return lodash_merge_default()(prev, exchange_rates);\n      });\n    }\n  }, [update, data]);\n  return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, children);\n});\n/* harmony default export */ const providers_ExchangeRatesProvider = ((/* unused pure expression or super */ null && (ExchangeRatesProvider_ExchangeRatesProvider)));\n;// CONCATENATED MODULE: ../../stores/src/providers/index.ts\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStoreMap.js\n/* eslint-disable-next-line @typescript-eslint/no-explicit-any */\nvar PersistStoreMap_PersistStoreMap = new Map();\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/clearPersistedStore.js\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar clearPersistedStore = function (target) { return __awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.clearPersistedStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/configurePersistable.js\nvar mpsConfig = {};\nvar mpsReactionOptions = {};\nvar configurePersistable = function (config, reactionOptions) {\n    if (reactionOptions === void 0) { reactionOptions = {}; }\n    mpsConfig = config;\n    mpsReactionOptions = reactionOptions;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/getPersistedStore.js\nvar getPersistedStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar getPersistedStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar getPersistedStore = function (target) { return getPersistedStore_awaiter(void 0, void 0, void 0, function () {\n    var _a, _b;\n    return getPersistedStore_generator(this, function (_c) {\n        return [2 /*return*/, (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.getPersistedStore()) !== null && _b !== void 0 ? _b : null];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/hydrateStore.js\nvar hydrateStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar hydrateStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar hydrateStore = function (target) { return hydrateStore_awaiter(void 0, void 0, void 0, function () {\n    var _a;\n    return hydrateStore_generator(this, function (_b) {\n        switch (_b.label) {\n            case 0: return [4 /*yield*/, ((_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.hydrateStore())];\n            case 1:\n                _b.sent();\n                return [2 /*return*/];\n        }\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isHydrated.js\n\nvar isHydrated = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isHydrated) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/isPersisting.js\n\nvar isPersisting = function (target) {\n    var _a, _b;\n    return (_b = (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.isPersisting) !== null && _b !== void 0 ? _b : false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/utils.js\nvar buildExpireTimestamp = function (milliseconds) {\n    return new Date().getTime() + milliseconds;\n};\nvar hasTimestampExpired = function (milliseconds) {\n    var dateTimeNow = new Date().getTime();\n    var dateTimeExpiration = new Date(milliseconds).getTime();\n    return dateTimeExpiration <= dateTimeNow;\n};\nvar isDefined = function (t) { return t != null; };\n/**\n * Check if the data is an object.\n */\nvar utils_isObject = function (data) {\n    return Boolean(data) && Array.isArray(data) === false && typeof data === 'object';\n};\n/**\n * Check the data is an object with properties.\n */\nvar isObjectWithProperties = function (data) {\n    return utils_isObject(data) && Object.keys(data).length > 0;\n};\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nvar utils_isFunction = function (functionToCheck) {\n    return functionToCheck && functionToCheck instanceof Function;\n};\nvar isStorageControllerLike = function (value) {\n    // \"typeof Storage\" fixes issue with React Native\n    if (typeof Storage !== 'undefined' && value instanceof Storage) {\n        return true;\n    }\n    return [\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('getItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('removeItem'),\n        value === null || value === void 0 ? void 0 : value.hasOwnProperty('setItem'),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.getItem),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.removeItem),\n        utils_isFunction(value === null || value === void 0 ? void 0 : value.setItem),\n    ].every(Boolean);\n};\nvar isBrowser = typeof window !== 'undefined';\nvar isNotProductionBuild = \"production\" !== 'production';\nvar invalidStorageAdaptorWarningIf = function (storageAdaptor, storageName) {\n    if (isBrowser && isNotProductionBuild && !isStorageControllerLike(storageAdaptor)) {\n        console.warn(\"mobx-persist-store: \".concat(storageName, \" does not have a valid storage adaptor.\\n\\n* Make sure the storage controller has 'getItem', 'setItem' and 'removeItem' methods.\\\"\"));\n    }\n};\nvar duplicatedStoreWarningIf = function (hasPersistedStoreAlready, storageName) {\n    if (isBrowser && isNotProductionBuild && hasPersistedStoreAlready) {\n        console.warn(\"mobx-persist-store: 'makePersistable' was called was called with the same storage name \\\"\".concat(storageName, \"\\\".\\n\\n * Make sure you call \\\"stopPersisting\\\" before recreating \\\"\").concat(storageName, \"\\\" to avoid memory leaks. \\n * Or double check you did not have two stores with the same name.\"));\n    }\n};\nvar computedPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is computed and will not persist.\"));\n    }\n};\nvar actionPersistWarningIf = function (isComputedProperty, propertyName) {\n    if (isBrowser && isNotProductionBuild && isComputedProperty) {\n        console.warn(\"mobx-persist-store: The property '\".concat(propertyName, \"' is an action and will not persist.\"));\n    }\n};\nvar consoleDebug = function (isDebugMode, message, content) {\n    if (content === void 0) { content = ''; }\n    if (isDebugMode && isBrowser && isNotProductionBuild) {\n        console.info(\"%c mobx-persist-store: (Debug Mode) \".concat(message, \" \"), 'background: #4B8CC5; color: black; display: block;', content);\n    }\n};\nvar isArrayForMap = function (value) {\n    if (Array.isArray(value)) {\n        return value.every(function (v) { return Array.isArray(v); });\n    }\n    return false;\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/StorageAdapter.js\nvar StorageAdapter_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar StorageAdapter_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\nvar StorageAdapter = /** @class */ (function () {\n    function StorageAdapter(options) {\n        this.options = options;\n    }\n    StorageAdapter.prototype.setItem = function (key, item) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, _c, stringify, _d, debugMode, data, content;\n            return StorageAdapter_generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _b = this.options, _c = _b.stringify, stringify = _c === void 0 ? true : _c, _d = _b.debugMode, debugMode = _d === void 0 ? false : _d;\n                        data = this.options.expireIn\n                            ? Object.assign({}, item, {\n                                __mps__: {\n                                    expireInTimestamp: buildExpireTimestamp(this.options.expireIn),\n                                },\n                            })\n                            : item;\n                        content = stringify ? JSON.stringify(data) : data;\n                        consoleDebug(debugMode, \"\".concat(key, \" - setItem:\"), content);\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.setItem(key, content))];\n                    case 1:\n                        _e.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.getItem = function (key) {\n        var _a, _b;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _c, _d, removeOnExpiration, _e, debugMode, storageData, parsedData, hasExpired;\n            return StorageAdapter_generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _c = this.options, _d = _c.removeOnExpiration, removeOnExpiration = _d === void 0 ? true : _d, _e = _c.debugMode, debugMode = _e === void 0 ? false : _e;\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.getItem(key))];\n                    case 1:\n                        storageData = _f.sent();\n                        try {\n                            parsedData = JSON.parse(storageData) || {};\n                        }\n                        catch (error) {\n                            parsedData = storageData || {};\n                        }\n                        hasExpired = hasTimestampExpired((_b = parsedData.__mps__) === null || _b === void 0 ? void 0 : _b.expireInTimestamp);\n                        consoleDebug(debugMode, \"\".concat(key, \" - hasExpired\"), hasExpired);\n                        if (!(hasExpired && removeOnExpiration)) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this.removeItem(key)];\n                    case 2:\n                        _f.sent();\n                        _f.label = 3;\n                    case 3:\n                        parsedData = hasExpired ? {} : parsedData;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (getItem):\"), parsedData);\n                        return [2 /*return*/, parsedData];\n                }\n            });\n        });\n    };\n    StorageAdapter.prototype.removeItem = function (key) {\n        var _a;\n        return StorageAdapter_awaiter(this, void 0, void 0, function () {\n            var _b, debugMode;\n            return StorageAdapter_generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _b = this.options.debugMode, debugMode = _b === void 0 ? false : _b;\n                        consoleDebug(debugMode, \"\".concat(key, \" - (removeItem): storage was removed\"));\n                        return [4 /*yield*/, ((_a = this.options.storage) === null || _a === void 0 ? void 0 : _a.removeItem(key))];\n                    case 1:\n                        _c.sent();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return StorageAdapter;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/serializableProperty.js\n\n\nvar isSerializableProperty = function (obj) {\n    var keys = ['key', 'serialize', 'deserialize'];\n    if (!utils_isObject(obj)) {\n        consoleDebug(!!mpsConfig.debugMode, 'passed value is not an object', { obj: obj });\n        return false;\n    }\n    return keys.every(function (key) {\n        if (obj.hasOwnProperty(key) && typeof key !== 'undefined') {\n            return true;\n        }\n        ;\n        consoleDebug(!!mpsConfig.debugMode, \"\".concat(key, \" not found in SerializableProperty\"), { key: key, obj: obj });\n        return false;\n    });\n};\nvar makeSerializableProperties = function (properties) {\n    return properties.reduce(function (acc, curr) {\n        if (typeof curr === 'string') {\n            acc.push({\n                key: curr,\n                serialize: function (value) { return value; },\n                deserialize: function (value) { return value; }\n            });\n            return acc;\n        }\n        if (isSerializableProperty(curr)) {\n            acc.push(curr);\n            return acc;\n        }\n        return acc;\n    }, []);\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/PersistStore.js\nvar PersistStore_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar PersistStore_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\n\n\n\nvar PersistStore = /** @class */ (function () {\n    function PersistStore(target, options, reactionOptions) {\n        if (reactionOptions === void 0) { reactionOptions = {}; }\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n        this.debugMode = false;\n        this.isHydrated = false;\n        this.isPersisting = false;\n        this.storageName = '';\n        this.target = target;\n        this.storageName = options.name;\n        this.properties = makeSerializableProperties(options.properties);\n        this.reactionOptions = Object.assign({ fireImmediately: true }, mpsReactionOptions, reactionOptions);\n        this.debugMode = (_b = (_a = options.debugMode) !== null && _a !== void 0 ? _a : mpsConfig.debugMode) !== null && _b !== void 0 ? _b : false;\n        this.storageAdapter = new StorageAdapter({\n            expireIn: (_c = options.expireIn) !== null && _c !== void 0 ? _c : mpsConfig.expireIn,\n            removeOnExpiration: (_e = (_d = options.removeOnExpiration) !== null && _d !== void 0 ? _d : mpsConfig.removeOnExpiration) !== null && _e !== void 0 ? _e : true,\n            stringify: (_g = (_f = options.stringify) !== null && _f !== void 0 ? _f : mpsConfig.stringify) !== null && _g !== void 0 ? _g : true,\n            storage: options.storage ? options.storage : mpsConfig.storage,\n            debugMode: this.debugMode,\n        });\n        (0,external_mobx_.makeObservable)(this, {\n            clearPersistedStore: external_mobx_.action,\n            hydrateStore: external_mobx_.action,\n            isHydrated: external_mobx_.observable,\n            isPersisting: external_mobx_.observable,\n            pausePersisting: external_mobx_.action,\n            startPersisting: external_mobx_.action,\n            stopPersisting: external_mobx_.action,\n        }, { autoBind: true, deep: false });\n        invalidStorageAdaptorWarningIf(this.storageAdapter.options.storage, this.storageName);\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (makePersistable)\"), {\n            properties: this.properties,\n            storageAdapter: this.storageAdapter,\n            reactionOptions: this.reactionOptions,\n        });\n    }\n    PersistStore.prototype.init = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.hydrateStore()];\n                    case 1:\n                        _a.sent();\n                        this.startPersisting();\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.hydrateStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            var isBeingWatched, data_1, target_1;\n            var _this = this;\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        isBeingWatched = Boolean(this.cancelWatch);\n                        if (this.isPersisting) {\n                            this.pausePersisting();\n                        }\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = false;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - (hydrateStore) isHydrated:\"), _this.isHydrated);\n                        });\n                        if (!(this.storageAdapter && this.target)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.getItem(this.storageName)];\n                    case 1:\n                        data_1 = _a.sent();\n                        target_1 = this.target;\n                        if (data_1) {\n                            (0,external_mobx_.runInAction)(function () {\n                                _this.properties.forEach(function (property) {\n                                    var allowPropertyHydration = [\n                                        target_1.hasOwnProperty(property.key),\n                                        typeof data_1[property.key] !== 'undefined',\n                                    ].every(Boolean);\n                                    if (allowPropertyHydration) {\n                                        var propertyData = data_1[property.key];\n                                        if (target_1[property.key] instanceof external_mobx_.ObservableMap && isArrayForMap(propertyData)) {\n                                            target_1[property.key] = property.deserialize(new Map(propertyData));\n                                        }\n                                        else {\n                                            target_1[property.key] = property.deserialize(propertyData);\n                                        }\n                                    }\n                                });\n                            });\n                        }\n                        _a.label = 2;\n                    case 2:\n                        (0,external_mobx_.runInAction)(function () {\n                            _this.isHydrated = true;\n                            consoleDebug(_this.debugMode, \"\".concat(_this.storageName, \" - isHydrated:\"), _this.isHydrated);\n                        });\n                        if (isBeingWatched) {\n                            this.startPersisting();\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.startPersisting = function () {\n        var _this = this;\n        if (!this.storageAdapter || !this.target || this.cancelWatch) {\n            return;\n        }\n        // Reassigning so TypeScript doesn't complain (Object is possibly 'null') about and this.target within reaction\n        var target = this.target;\n        this.cancelWatch = (0,external_mobx_.reaction)(function () {\n            var propertiesToWatch = {};\n            _this.properties.forEach(function (property) {\n                var isComputedProperty = (0,external_mobx_.isComputedProp)(target, property.key);\n                var isActionProperty = (0,external_mobx_.isAction)(target[property.key]);\n                computedPersistWarningIf(isComputedProperty, String(property.key));\n                actionPersistWarningIf(isActionProperty, String(property.key));\n                if (!isComputedProperty && !isActionProperty) {\n                    var propertyData = property.serialize(target[property.key]);\n                    if (propertyData instanceof external_mobx_.ObservableMap) {\n                        var mapArray_1 = [];\n                        propertyData.forEach(function (v, k) {\n                            mapArray_1.push([k, (0,external_mobx_.toJS)(v)]);\n                        });\n                        propertyData = mapArray_1;\n                    }\n                    propertiesToWatch[property.key] = (0,external_mobx_.toJS)(propertyData);\n                }\n            });\n            return propertiesToWatch;\n        }, function (dataToSave) { return PersistStore_awaiter(_this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.storageAdapter.setItem(this.storageName, dataToSave)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        }); }, this.reactionOptions);\n        this.isPersisting = true;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (startPersisting) isPersisting:\"), this.isPersisting);\n    };\n    PersistStore.prototype.pausePersisting = function () {\n        this.isPersisting = false;\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - pausePersisting (isPersisting):\"), this.isPersisting);\n        if (this.cancelWatch) {\n            this.cancelWatch();\n            this.cancelWatch = null;\n        }\n    };\n    PersistStore.prototype.stopPersisting = function () {\n        this.pausePersisting();\n        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (stopPersisting)\"));\n        PersistStoreMap_PersistStoreMap[\"delete\"](this.target);\n        this.cancelWatch = null;\n        this.properties = [];\n        this.reactionOptions = {};\n        this.storageAdapter = null;\n        this.target = null;\n    };\n    PersistStore.prototype.clearPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.storageAdapter) return [3 /*break*/, 2];\n                        consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (clearPersistedStore)\"));\n                        return [4 /*yield*/, this.storageAdapter.removeItem(this.storageName)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    PersistStore.prototype.getPersistedStore = function () {\n        return PersistStore_awaiter(this, void 0, void 0, function () {\n            return PersistStore_generator(this, function (_a) {\n                if (this.storageAdapter) {\n                    consoleDebug(this.debugMode, \"\".concat(this.storageName, \" - (getPersistedStore)\"));\n                    // @ts-ignore\n                    return [2 /*return*/, this.storageAdapter.getItem(this.storageName)];\n                }\n                return [2 /*return*/, null];\n            });\n        });\n    };\n    return PersistStore;\n}());\n\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/makePersistable.js\nvar makePersistable_awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar makePersistable_generator = (undefined && undefined.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\n\n\n\nvar makePersistable = function (target, storageOptions, reactionOptions) { return makePersistable_awaiter(void 0, void 0, void 0, function () {\n    var mobxPersistStore, hasPersistedStoreAlready;\n    return makePersistable_generator(this, function (_a) {\n        mobxPersistStore = new PersistStore(target, storageOptions, reactionOptions);\n        hasPersistedStoreAlready = Array.from(PersistStoreMap_PersistStoreMap.values())\n            .map(function (item) { return item.storageName; })\n            .includes(mobxPersistStore.storageName);\n        duplicatedStoreWarningIf(hasPersistedStoreAlready, mobxPersistStore.storageName);\n        PersistStoreMap_PersistStoreMap.set(target, mobxPersistStore);\n        return [2 /*return*/, mobxPersistStore.init()];\n    });\n}); };\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/pausePersisting.js\n\nvar pausePersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.pausePersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/startPersisting.js\n\nvar startPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.startPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/stopPersisting.js\n\nvar stopPersisting = function (target) {\n    var _a;\n    (_a = PersistStoreMap_PersistStoreMap.get(target)) === null || _a === void 0 ? void 0 : _a.stopPersisting();\n};\n\n;// CONCATENATED MODULE: ../../../node_modules/mobx-persist-store/lib/esm5/index.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;// CONCATENATED MODULE: ../../stores/src/stores/BaseStore.ts\nfunction BaseStore_typeof(obj) { \"@babel/helpers - typeof\"; return BaseStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, BaseStore_typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, BaseStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction BaseStore_toPropertyKey(arg) { var key = BaseStore_toPrimitive(arg, \"string\"); return BaseStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction BaseStore_toPrimitive(input, hint) { if (BaseStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (BaseStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar BaseStore = /*#__PURE__*/function () {\n  function BaseStore(name, onHydrationDone) {\n    _classCallCheck(this, BaseStore);\n    this.data = undefined;\n    (0,external_mobx_.makeObservable)(this, {\n      data: external_mobx_.observable,\n      update: external_mobx_.action.bound,\n      unmount: external_mobx_.action.bound\n    });\n    makePersistable(this, {\n      name: name,\n      properties: ['data'],\n      storage: window.localStorage\n    }).then(function () {\n      return onHydrationDone === null || onHydrationDone === void 0 ? void 0 : onHydrationDone();\n    });\n  }\n  _createClass(BaseStore, [{\n    key: \"update\",\n    value: function update(data) {\n      this.data = data instanceof Function ? data(this.data) : data;\n    }\n  }, {\n    key: \"unmount\",\n    value: function unmount() {\n      stopPersisting(this);\n    }\n  }]);\n  return BaseStore;\n}();\n\n;// CONCATENATED MODULE: ../../stores/src/stores/ExchangeRatesStore.ts\nfunction ExchangeRatesStore_typeof(obj) { \"@babel/helpers - typeof\"; return ExchangeRatesStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, ExchangeRatesStore_typeof(obj); }\nfunction ExchangeRatesStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, ExchangeRatesStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction ExchangeRatesStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) ExchangeRatesStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) ExchangeRatesStore_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction ExchangeRatesStore_toPropertyKey(arg) { var key = ExchangeRatesStore_toPrimitive(arg, \"string\"); return ExchangeRatesStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction ExchangeRatesStore_toPrimitive(input, hint) { if (ExchangeRatesStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (ExchangeRatesStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction ExchangeRatesStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (ExchangeRatesStore_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return ExchangeRatesStore_assertThisInitialized(self); }\nfunction ExchangeRatesStore_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar ExchangeRatesStore_ExchangeRatesStore = /*#__PURE__*/function (_BaseStore) {\n  _inherits(ExchangeRatesStore, _BaseStore);\n  var _super = _createSuper(ExchangeRatesStore);\n  function ExchangeRatesStore() {\n    ExchangeRatesStore_classCallCheck(this, ExchangeRatesStore);\n    return _super.call(this, 'ExchangeRatesStore');\n  }\n  return ExchangeRatesStore_createClass(ExchangeRatesStore);\n}(BaseStore);\n\n;// CONCATENATED MODULE: ../../stores/src/stores/FeatureFlagsStore.ts\nfunction FeatureFlagsStore_typeof(obj) { \"@babel/helpers - typeof\"; return FeatureFlagsStore_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, FeatureFlagsStore_typeof(obj); }\nfunction FeatureFlagsStore_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, FeatureFlagsStore_toPropertyKey(descriptor.key), descriptor); } }\nfunction FeatureFlagsStore_createClass(Constructor, protoProps, staticProps) { if (protoProps) FeatureFlagsStore_defineProperties(Constructor.prototype, protoProps); if (staticProps) FeatureFlagsStore_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction FeatureFlagsStore_toPropertyKey(arg) { var key = FeatureFlagsStore_toPrimitive(arg, \"string\"); return FeatureFlagsStore_typeof(key) === \"symbol\" ? key : String(key); }\nfunction FeatureFlagsStore_toPrimitive(input, hint) { if (FeatureFlagsStore_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (FeatureFlagsStore_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction FeatureFlagsStore_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction FeatureFlagsStore_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) FeatureFlagsStore_setPrototypeOf(subClass, superClass); }\nfunction FeatureFlagsStore_setPrototypeOf(o, p) { FeatureFlagsStore_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return FeatureFlagsStore_setPrototypeOf(o, p); }\nfunction FeatureFlagsStore_createSuper(Derived) { var hasNativeReflectConstruct = FeatureFlagsStore_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = FeatureFlagsStore_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = FeatureFlagsStore_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return FeatureFlagsStore_possibleConstructorReturn(this, result); }; }\nfunction FeatureFlagsStore_possibleConstructorReturn(self, call) { if (call && (FeatureFlagsStore_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return FeatureFlagsStore_assertThisInitialized(self); }\nfunction FeatureFlagsStore_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction FeatureFlagsStore_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction FeatureFlagsStore_getPrototypeOf(o) { FeatureFlagsStore_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return FeatureFlagsStore_getPrototypeOf(o); }\n\nvar FLAGS = {\n  wallet: false,\n  next_wallet: false,\n  sharkfin: false\n};\nvar FeatureFlagsStore_FeatureFlagsStore = /*#__PURE__*/function (_BaseStore) {\n  FeatureFlagsStore_inherits(FeatureFlagsStore, _BaseStore);\n  var _super = FeatureFlagsStore_createSuper(FeatureFlagsStore);\n  function FeatureFlagsStore() {\n    var _this;\n    FeatureFlagsStore_classCallCheck(this, FeatureFlagsStore);\n    _this = _super.call(this, 'FeatureFlagsStore', function () {\n      // Set the default values for the first time.\n      if (!_this.data) _this.update(FLAGS);\n\n      // Update the store data if a new flag was added or removed.\n      if (_this.data && Object.keys(_this.data).length !== Object.keys(FLAGS).length) {\n        _this.update(function (old) {\n          var data = FLAGS;\n          Object.keys(FLAGS).forEach(function (flag) {\n            // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n            if (old[flag] !== undefined) data[flag] = old[flag];\n          });\n          return data;\n        });\n      }\n    });\n    _this.data = FLAGS;\n    return _this;\n  }\n  return FeatureFlagsStore_createClass(FeatureFlagsStore);\n}(BaseStore);\n\n;// CONCATENATED MODULE: ../../stores/src/stores/index.ts\n\n\n;// CONCATENATED MODULE: ../../stores/src/storeProvider.tsx\nfunction storeProvider_typeof(obj) { \"@babel/helpers - typeof\"; return storeProvider_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, storeProvider_typeof(obj); }\nfunction storeProvider_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction storeProvider_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? storeProvider_ownKeys(Object(source), !0).forEach(function (key) { storeProvider_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : storeProvider_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction storeProvider_defineProperty(obj, key, value) { key = storeProvider_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction storeProvider_toPropertyKey(arg) { var key = storeProvider_toPrimitive(arg, \"string\"); return storeProvider_typeof(key) === \"symbol\" ? key : String(key); }\nfunction storeProvider_toPrimitive(input, hint) { if (storeProvider_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (storeProvider_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n\n\n\nvar StoreProvider = function StoreProvider(_ref) {\n  var children = _ref.children,\n    store = _ref.store;\n  var memoizedValue = useMemo(function () {\n    // If the store is mocked for testing purposes, then return the mocked value.\n    if ('is_mock' in store && store.is_mock) return store;\n\n    // Otherwise, instantiate store and return it.\n    return storeProvider_objectSpread(storeProvider_objectSpread({}, store), {}, {\n      exchange_rates: new ExchangeRatesStore(),\n      feature_flags: new FeatureFlagsStore()\n    });\n  }, [store]);\n  useEffect(function () {\n    return function () {\n      Object.values(memoizedValue).forEach(function (value) {\n        if (storeProvider_typeof(value) === 'object' && 'unmount' in value) value.unmount();\n      });\n    };\n  }, [memoizedValue]);\n  return /*#__PURE__*/React.createElement(APIProvider, null, /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: memoizedValue\n  }, /*#__PURE__*/React.createElement(ExchangeRatesProvider, null, children)));\n};\n/* harmony default export */ const storeProvider = ((/* unused pure expression or super */ null && (StoreProvider)));\n;// CONCATENATED MODULE: ../../stores/src/index.ts\n\n\n\n\n\n;// CONCATENATED MODULE: ../../hooks/src/useHasMaltaInvestAccount.ts\n\nvar useHasMaltaInvestAccount_useHasMaltaInvestAccount = function useHasMaltaInvestAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_malta_invest_account = active_accounts.some(function (account) {\n    return account.landing_company_shortcode === 'maltainvest';\n  });\n  return has_malta_invest_account;\n};\n/* harmony default export */ const src_useHasMaltaInvestAccount = ((/* unused pure expression or super */ null && (useHasMaltaInvestAccount_useHasMaltaInvestAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useAccountTransferVisible.ts\n\n\nvar useAccountTransferVisible = function useAccountTransferVisible() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var landing_company_shortcode = client.landing_company_shortcode,\n    residence = client.residence;\n  var has_malta_invest_account = useHasMaltaInvestAccount();\n  var is_account_transfer_visible = residence !== 'im' && (landing_company_shortcode !== 'malta' || has_malta_invest_account);\n  return is_account_transfer_visible;\n};\n/* harmony default export */ const src_useAccountTransferVisible = ((/* unused pure expression or super */ null && (useAccountTransferVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/useAuthorize.ts\nfunction src_useAuthorize_typeof(obj) { \"@babel/helpers - typeof\"; return src_useAuthorize_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useAuthorize_typeof(obj); }\nvar src_useAuthorize_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction src_useAuthorize_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useAuthorize_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useAuthorize_ownKeys(Object(source), !0).forEach(function (key) { src_useAuthorize_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useAuthorize_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useAuthorize_defineProperty(obj, key, value) { key = src_useAuthorize_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useAuthorize_toPropertyKey(arg) { var key = src_useAuthorize_toPrimitive(arg, \"string\"); return src_useAuthorize_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useAuthorize_toPrimitive(input, hint) { if (src_useAuthorize_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useAuthorize_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction src_useAuthorize_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useAuthorize_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useAuthorize_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/** A custom hook that authorize the user with the given token. If no token is given, it will use the current token. */\nvar src_useAuthorize_useAuthorize = function useAuthorize(token) {\n  var _accounts;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var accounts = client.accounts,\n    _client$loginid = client.loginid,\n    loginid = _client$loginid === void 0 ? '' : _client$loginid;\n  var current_token = (_accounts = accounts[loginid || '']) === null || _accounts === void 0 ? void 0 : _accounts.token;\n  var _useFetch = useFetch('authorize', {\n      payload: {\n        authorize: token !== null && token !== void 0 ? token : current_token\n      },\n      options: {\n        enabled: Boolean(token !== null && token !== void 0 ? token : current_token)\n      }\n    }),\n    data = _useFetch.data,\n    rest = src_useAuthorize_objectWithoutProperties(_useFetch, src_useAuthorize_excluded);\n\n  // Add additional information to the authorize response.\n  var modified_authorize = useMemo(function () {\n    return src_useAuthorize_objectSpread({}, data === null || data === void 0 ? void 0 : data.authorize);\n  }, [data === null || data === void 0 ? void 0 : data.authorize]);\n  return src_useAuthorize_objectSpread({\n    /** The authorize response. */\n    data: modified_authorize\n  }, rest);\n};\n/* harmony default export */ const src_useAuthorize = ((/* unused pure expression or super */ null && (src_useAuthorize_useAuthorize)));\n;// CONCATENATED MODULE: ../../hooks/src/useCurrencyConfig.ts\nfunction src_useCurrencyConfig_typeof(obj) { \"@babel/helpers - typeof\"; return src_useCurrencyConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useCurrencyConfig_typeof(obj); }\nvar src_useCurrencyConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction src_useCurrencyConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useCurrencyConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useCurrencyConfig_ownKeys(Object(source), !0).forEach(function (key) { src_useCurrencyConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useCurrencyConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useCurrencyConfig_defineProperty(obj, key, value) { key = src_useCurrencyConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useCurrencyConfig_toPropertyKey(arg) { var key = src_useCurrencyConfig_toPrimitive(arg, \"string\"); return src_useCurrencyConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useCurrencyConfig_toPrimitive(input, hint) { if (src_useCurrencyConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useCurrencyConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction src_useCurrencyConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useCurrencyConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/** @deprecated Use `useCurrencyConfig` from `@deriv/api` package instead. */\nvar src_useCurrencyConfig_useCurrencyConfig = function useCurrencyConfig() {\n  var _crypto_config_data$c2, _website_status_data$2;\n  var _useFetch = useFetch('website_status'),\n    website_status_data = _useFetch.data;\n  var _useFetch2 = useFetch('crypto_config'),\n    crypto_config_data = _useFetch2.data,\n    rest = src_useCurrencyConfig_objectWithoutProperties(_useFetch2, src_useCurrencyConfig_excluded);\n  var currencies_config = useMemo(function () {\n    var _website_status_data$;\n    if (!(website_status_data !== null && website_status_data !== void 0 && (_website_status_data$ = website_status_data.website_status) !== null && _website_status_data$ !== void 0 && _website_status_data$.currencies_config)) return undefined;\n    var website_status_currencies_config = website_status_data.website_status.currencies_config;\n    var modified_currencies_config = Object.keys(website_status_currencies_config).map(function (currency) {\n      var _crypto_config_data$c;\n      var currency_config = website_status_currencies_config[currency];\n      var crypto_config = crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c = crypto_config_data.crypto_config) === null || _crypto_config_data$c === void 0 ? void 0 : _crypto_config_data$c.currencies_config[currency];\n      return src_useCurrencyConfig_objectSpread(src_useCurrencyConfig_objectSpread(src_useCurrencyConfig_objectSpread({}, currency_config), crypto_config), {}, {\n        /** determine if the currency is a `crypto` currency */\n        is_crypto: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'crypto',\n        /** determine if the currency is a `fiat` currency */\n        is_fiat: (currency_config === null || currency_config === void 0 ? void 0 : currency_config.type) === 'fiat',\n        /** determine if the currency is `Australian Dollar` */\n        is_AUD: currency === 'AUD',\n        /** determine if the currency is `US Dollar` */\n        is_USD: currency === 'USD',\n        /** determine if the currency is `Euro` */\n        is_EUR: currency === 'EUR',\n        /** determine if the currency is `Pound Sterling` */\n        is_GBP: currency === 'GBP',\n        /** determine if the currency is `Bitcoin` */\n        is_BTC: currency === 'BTC',\n        /** determine if the currency is `Ethereum` */\n        is_ETH: currency === 'ETH',\n        /** determine if the currency is `Litecoin` */\n        is_LTC: currency === 'LTC',\n        /** determine if the currency is `Multi-Collateral DAI` */\n        is_DAI: currency === 'DAI',\n        /** determine if the currency is `IDK` */\n        is_IDK: currency === 'IDK',\n        /** determine if the currency is `Paxos Standard` */\n        is_PAX: currency === 'PAX',\n        /** determine if the currency is `Binary Coin` */\n        is_USB: currency === 'USB',\n        /** determine if the currency is `Tether Omni` */\n        is_USDT: currency === 'UST',\n        /** determine if the currency is `True USD` */\n        is_TUSD: currency === 'TUSD',\n        /** determine if the currency is `Binance USD` */\n        is_BUSD: currency === 'BUSD',\n        /** determine if the currency is `STATIS Euro` */\n        is_EURS: currency === 'EURS',\n        /** determine if the currency is `Tether ERC20` */\n        is_eUSDT: currency === 'eUSDT',\n        /** determine if the currency is `Tether TRC20` */\n        is_tUSDT: currency === 'tUSDT',\n        /** determine if the currency is `USD Coin` */\n        is_USDC: currency === 'USDC',\n        /** determine if the currency is `USDK` */\n        is_USDK: currency === 'USDK',\n        /** Currency code */\n        code: currency,\n        /** Currency display code */\n        display_code: currency === 'UST' ? 'USDT' : currency,\n        /** Local asset name for the currency icon. ex: `IcCurrencyUsd` for `USD` */\n        icon: \"IcCurrency\".concat(currency[0].toUpperCase() + currency.slice(1).toLowerCase())\n      });\n    });\n    return modified_currencies_config.reduce(function (previous, current) {\n      return src_useCurrencyConfig_objectSpread(src_useCurrencyConfig_objectSpread({}, previous), {}, src_useCurrencyConfig_defineProperty({}, current.code, current));\n    }, {});\n  }, [crypto_config_data === null || crypto_config_data === void 0 ? void 0 : (_crypto_config_data$c2 = crypto_config_data.crypto_config) === null || _crypto_config_data$c2 === void 0 ? void 0 : _crypto_config_data$c2.currencies_config, website_status_data === null || website_status_data === void 0 ? void 0 : (_website_status_data$2 = website_status_data.website_status) === null || _website_status_data$2 === void 0 ? void 0 : _website_status_data$2.currencies_config]);\n  var getConfig = useCallback(function (currency) {\n    return currencies_config === null || currencies_config === void 0 ? void 0 : currencies_config[currency];\n  }, [currencies_config]);\n  return src_useCurrencyConfig_objectSpread({\n    /** Returns the currency config object for the given currency */\n    getConfig: getConfig,\n    /** Available currencies and their information */\n    currencies_config: currencies_config\n  }, rest);\n};\n/* harmony default export */ const src_useCurrencyConfig = ((/* unused pure expression or super */ null && (src_useCurrencyConfig_useCurrencyConfig)));\n;// CONCATENATED MODULE: ../../hooks/src/useWalletsList.ts\nfunction useWalletsList_typeof(obj) { \"@babel/helpers - typeof\"; return useWalletsList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useWalletsList_typeof(obj); }\nvar useWalletsList_excluded = (/* unused pure expression or super */ null && ([\"data\", \"isSuccess\"]));\nfunction useWalletsList_toConsumableArray(arr) { return useWalletsList_arrayWithoutHoles(arr) || useWalletsList_iterableToArray(arr) || useWalletsList_unsupportedIterableToArray(arr) || useWalletsList_nonIterableSpread(); }\nfunction useWalletsList_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useWalletsList_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useWalletsList_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useWalletsList_arrayLikeToArray(o, minLen); }\nfunction useWalletsList_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useWalletsList_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useWalletsList_arrayLikeToArray(arr); }\nfunction useWalletsList_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useWalletsList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useWalletsList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useWalletsList_ownKeys(Object(source), !0).forEach(function (key) { useWalletsList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useWalletsList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useWalletsList_defineProperty(obj, key, value) { key = useWalletsList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useWalletsList_toPropertyKey(arg) { var key = useWalletsList_toPrimitive(arg, \"string\"); return useWalletsList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useWalletsList_toPrimitive(input, hint) { if (useWalletsList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useWalletsList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useWalletsList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useWalletsList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useWalletsList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\nvar currency_to_icon_mapper = {\n  Demo: {\n    dark: 'IcWalletDerivDemoDark',\n    light: 'IcWalletDerivDemoLight'\n  },\n  USD: {\n    dark: 'IcWalletCurrencyUsd',\n    light: 'IcWalletCurrencyUsd'\n  },\n  EUR: {\n    dark: 'IcWalletCurrencyEur',\n    light: 'IcWalletCurrencyEur'\n  },\n  AUD: {\n    dark: 'IcWalletCurrencyAud',\n    light: 'IcWalletCurrencyAud'\n  },\n  GBP: {\n    dark: 'IcWalletCurrencyGbp',\n    light: 'IcWalletCurrencyGbp'\n  },\n  BTC: {\n    dark: 'IcWalletBitcoinDark',\n    light: 'IcWalletBitcoinLight'\n  },\n  ETH: {\n    dark: 'IcWalletEthereumDark',\n    light: 'IcWalletEthereumLight'\n  },\n  USDT: {\n    dark: 'IcWalletTetherDark',\n    light: 'IcWalletTetherLight'\n  },\n  eUSDT: {\n    dark: 'IcWalletTetherDark',\n    light: 'IcWalletTetherLight'\n  },\n  tUSDT: {\n    dark: 'IcWalletTetherDark',\n    light: 'IcWalletTetherLight'\n  },\n  UST: {\n    dark: 'IcWalletTetherDark',\n    light: 'IcWalletTetherLight'\n  },\n  LTC: {\n    dark: 'IcWalletLiteCoinDark',\n    light: 'IcWalletLiteCoinLight'\n  },\n  USDC: {\n    dark: 'IcWalletUsdCoinDark',\n    light: 'IcWalletUsdCoinLight'\n  }\n};\n\n/** A custom hook to get the list of wallets for the current user. */\nvar useWalletsList_useWalletsList = function useWalletsList() {\n  var _balance_data$balance4;\n  var _useStore = useStore(),\n    ui = _useStore.ui,\n    client = _useStore.client;\n  var is_dark_mode_on = ui.is_dark_mode_on;\n  var is_authorize = client.is_authorize;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var _useAuthorize = useAuthorize(),\n    authorize_data = _useAuthorize.data,\n    isSuccess = _useAuthorize.isSuccess,\n    rest = useWalletsList_objectWithoutProperties(_useAuthorize, useWalletsList_excluded);\n  var _useFetch = useFetch('balance', {\n      payload: {\n        account: 'all'\n      },\n      options: {\n        enabled: is_authorize && isSuccess\n      }\n    }),\n    balance_data = _useFetch.data;\n\n  // Filter out non-wallet accounts.\n  var wallets = useMemo(function () {\n    var _authorize_data$accou;\n    return authorize_data === null || authorize_data === void 0 ? void 0 : (_authorize_data$accou = authorize_data.account_list) === null || _authorize_data$accou === void 0 ? void 0 : _authorize_data$accou.filter(function (account) {\n      return account.account_category === 'wallet';\n    });\n  }, [authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.account_list]);\n\n  // Add balance to each wallet.\n  var wallets_with_balance = useMemo(function () {\n    return wallets === null || wallets === void 0 ? void 0 : wallets.map(function (wallet) {\n      var _balance_data$balance, _balance_data$balance2, _balance_data$balance3;\n      return useWalletsList_objectSpread(useWalletsList_objectSpread({}, wallet), {}, {\n        /** Wallet balance */\n        balance: (balance_data === null || balance_data === void 0 ? void 0 : (_balance_data$balance = balance_data.balance) === null || _balance_data$balance === void 0 ? void 0 : (_balance_data$balance2 = _balance_data$balance.accounts) === null || _balance_data$balance2 === void 0 ? void 0 : (_balance_data$balance3 = _balance_data$balance2[wallet.loginid || '']) === null || _balance_data$balance3 === void 0 ? void 0 : _balance_data$balance3.balance) || 0\n      });\n    });\n  }, [balance_data === null || balance_data === void 0 ? void 0 : (_balance_data$balance4 = balance_data.balance) === null || _balance_data$balance4 === void 0 ? void 0 : _balance_data$balance4.accounts, wallets]);\n\n  // Add additional information to each wallet.\n  var modified_wallets = useMemo(function () {\n    return wallets_with_balance === null || wallets_with_balance === void 0 ? void 0 : wallets_with_balance.map(function (wallet) {\n      var _wallet$landing_compa;\n      var wallet_currency_type = wallet.is_virtual === 1 ? 'Demo' : wallet.currency || '';\n      var wallet_gradient_class_name = \"\".concat(wallet_currency_type.toLowerCase(), \"-bg\").concat(is_dark_mode_on ? '--dark' : '');\n      var wallet_icon = currency_to_icon_mapper[wallet_currency_type];\n      return useWalletsList_objectSpread(useWalletsList_objectSpread({}, wallet), {}, {\n        /** Indicating whether the wallet is the currently selected wallet. */\n        is_selected: wallet.loginid === (authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.loginid),\n        /** Indicating whether the wallet is a virtual-money wallet. */\n        is_demo: wallet.is_virtual === 1,\n        /** Returns the wallet's currency type. ex: `Demo`, `USD`, etc. */\n        wallet_currency_type: wallet_currency_type,\n        /** Landing company shortcode the account belongs to. */\n        landing_company_name: (_wallet$landing_compa = wallet.landing_company_name) === null || _wallet$landing_compa === void 0 ? void 0 : _wallet$landing_compa.replace('maltainvest', 'malta'),\n        /** Indicating whether the wallet is a maltainvest wallet. */\n        is_malta_wallet: wallet.landing_company_name === 'malta',\n        /** The gradient class name for the wallet header background. */\n        gradient_header_class: \"wallet-header__\".concat(wallet_gradient_class_name),\n        /** The gradient class name for the wallet card background. */\n        gradient_card_class: \"wallet-card__\".concat(wallet_gradient_class_name),\n        /** Wallet's currency config information */\n        currency_config: wallet.currency ? getConfig(wallet.currency) : undefined,\n        /** Local asset name for the wallet icon. ex: `IcWalletCurrencyUsd` for `USD`  */\n        icon: is_dark_mode_on ? wallet_icon.dark : wallet_icon.light\n      });\n    });\n  }, [getConfig, is_dark_mode_on, authorize_data === null || authorize_data === void 0 ? void 0 : authorize_data.loginid, wallets_with_balance]);\n\n  // Sort wallets alphabetically by fiat, crypto, then virtual.\n  var sorted_wallets = useMemo(function () {\n    if (!modified_wallets) return [];\n    return useWalletsList_toConsumableArray(modified_wallets).sort(function (a, b) {\n      var _a$currency_config, _b$currency_config;\n      if (a.is_virtual !== b.is_virtual) {\n        return a.is_virtual ? 1 : -1;\n      } else if (((_a$currency_config = a.currency_config) === null || _a$currency_config === void 0 ? void 0 : _a$currency_config.is_crypto) !== ((_b$currency_config = b.currency_config) === null || _b$currency_config === void 0 ? void 0 : _b$currency_config.is_crypto)) {\n        var _a$currency_config2;\n        return (_a$currency_config2 = a.currency_config) !== null && _a$currency_config2 !== void 0 && _a$currency_config2.is_crypto ? 1 : -1;\n      }\n      return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n    });\n  }, [modified_wallets]);\n  return useWalletsList_objectSpread({\n    /** List of wallets for current user. */\n    data: sorted_wallets,\n    /** Indicating whether the user has a wallet */\n    has_wallet: sorted_wallets && sorted_wallets.length > 0\n  }, rest);\n};\n/* harmony default export */ const src_useWalletsList = ((/* unused pure expression or super */ null && (useWalletsList_useWalletsList)));\n;// CONCATENATED MODULE: ../../hooks/src/useActiveWallet.ts\n\n\n\n/** A custom hook that returns the wallet object for the current active wallet. */\nvar useActiveWallet_useActiveWallet = function useActiveWallet() {\n  var _useWalletsList = useWalletsList(),\n    data = _useWalletsList.data;\n  var active_wallet = useMemo(function () {\n    return data === null || data === void 0 ? void 0 : data.find(function (wallet) {\n      return wallet.is_selected;\n    });\n  }, [data]);\n\n  /** User's current active wallet. */\n  return active_wallet;\n};\n/* harmony default export */ const src_useActiveWallet = ((/* unused pure expression or super */ null && (useActiveWallet_useActiveWallet)));\n;// CONCATENATED MODULE: ../../hooks/src/useAvailableWallets.ts\nfunction src_useAvailableWallets_typeof(obj) { \"@babel/helpers - typeof\"; return src_useAvailableWallets_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useAvailableWallets_typeof(obj); }\nvar src_useAvailableWallets_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction src_useAvailableWallets_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useAvailableWallets_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useAvailableWallets_ownKeys(Object(source), !0).forEach(function (key) { src_useAvailableWallets_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useAvailableWallets_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useAvailableWallets_defineProperty(obj, key, value) { key = src_useAvailableWallets_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useAvailableWallets_toPropertyKey(arg) { var key = src_useAvailableWallets_toPrimitive(arg, \"string\"); return src_useAvailableWallets_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useAvailableWallets_toPrimitive(input, hint) { if (src_useAvailableWallets_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useAvailableWallets_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction src_useAvailableWallets_toConsumableArray(arr) { return src_useAvailableWallets_arrayWithoutHoles(arr) || src_useAvailableWallets_iterableToArray(arr) || src_useAvailableWallets_unsupportedIterableToArray(arr) || src_useAvailableWallets_nonIterableSpread(); }\nfunction src_useAvailableWallets_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction src_useAvailableWallets_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return src_useAvailableWallets_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return src_useAvailableWallets_arrayLikeToArray(o, minLen); }\nfunction src_useAvailableWallets_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction src_useAvailableWallets_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return src_useAvailableWallets_arrayLikeToArray(arr); }\nfunction src_useAvailableWallets_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction src_useAvailableWallets_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useAvailableWallets_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useAvailableWallets_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\nvar useAvailableWallets_useAvailableWallets = function useAvailableWallets() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    ui = _useStore.ui;\n  var is_dark_mode_on = ui.is_dark_mode_on;\n  var is_crypto = client.is_crypto;\n  var _useAuthorize = useAuthorize(),\n    data = _useAuthorize.data;\n  var _useFetch = useFetch('get_account_types', {\n      payload: {\n        company: (data === null || data === void 0 ? void 0 : data.landing_company_name) === 'virtual' ? 'svg' : data === null || data === void 0 ? void 0 : data.landing_company_name\n      },\n      options: {\n        enabled: Boolean(data === null || data === void 0 ? void 0 : data.landing_company_name)\n      }\n    }),\n    account_type_data = _useFetch.data,\n    rest = src_useAvailableWallets_objectWithoutProperties(_useFetch, src_useAvailableWallets_excluded);\n  var _useWalletsList = useWalletsList(),\n    added_wallets = _useWalletsList.data;\n  var sortedWallets = React.useMemo(function () {\n    var _account_type_data$ge;\n    if (!account_type_data) return null;\n    var _ref = (account_type_data === null || account_type_data === void 0 ? void 0 : (_account_type_data$ge = account_type_data.get_account_types) === null || _account_type_data$ge === void 0 ? void 0 : _account_type_data$ge.wallet) || {},\n      crypto = _ref.crypto,\n      doughflow = _ref.doughflow;\n    var crypto_currencies = crypto === null || crypto === void 0 ? void 0 : crypto.currencies;\n    var fiat_currencies = doughflow === null || doughflow === void 0 ? void 0 : doughflow.currencies;\n    if (!crypto_currencies || !fiat_currencies) return null;\n    var available_currencies = [].concat(src_useAvailableWallets_toConsumableArray(fiat_currencies), src_useAvailableWallets_toConsumableArray(crypto_currencies));\n    var non_virtual_wallets = added_wallets === null || added_wallets === void 0 ? void 0 : added_wallets.filter(function (wallet) {\n      return !wallet.is_virtual;\n    });\n    var modified_wallets = non_virtual_wallets === null || non_virtual_wallets === void 0 ? void 0 : non_virtual_wallets.map(function (wallet) {\n      return {\n        currency: wallet.currency,\n        landing_company_name: wallet.landing_company_name,\n        is_added: true,\n        gradient_card_class: wallet.gradient_card_class\n      };\n    });\n    var available_wallets = available_currencies.filter(function (currency) {\n      return !(modified_wallets !== null && modified_wallets !== void 0 && modified_wallets.some(function (wallet) {\n        return wallet.currency === currency;\n      }));\n    }).map(function (currency) {\n      return {\n        currency: currency,\n        landing_company_name: (data === null || data === void 0 ? void 0 : data.landing_company_name) === 'virtual' ? 'svg' : data === null || data === void 0 ? void 0 : data.landing_company_name,\n        is_added: false,\n        gradient_card_class: \"wallet-card__\".concat(currency.toLowerCase(), \"-bg\").concat(is_dark_mode_on ? '--dark' : '')\n      };\n    });\n\n    // Sort the unadded wallets alphabetically by fiat, crypto, then virtual\n    available_wallets === null || available_wallets === void 0 ? void 0 : available_wallets.sort(function (a, b) {\n      if (is_crypto(a.currency) !== is_crypto(b.currency)) {\n        return is_crypto(a.currency) ? 1 : -1;\n      }\n      return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n    });\n\n    // Sort the added wallets alphabetically by fiat, crypto, then virtual (if any)\n    if (Array.isArray(modified_wallets)) {\n      modified_wallets === null || modified_wallets === void 0 ? void 0 : modified_wallets.sort(function (a, b) {\n        if (is_crypto(a.currency) !== is_crypto(b.currency)) {\n          return is_crypto(a.currency) ? 1 : -1;\n        }\n        return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n      });\n      return [].concat(src_useAvailableWallets_toConsumableArray(available_wallets), src_useAvailableWallets_toConsumableArray(modified_wallets));\n    }\n    return src_useAvailableWallets_toConsumableArray(available_wallets);\n  }, [added_wallets, account_type_data, data === null || data === void 0 ? void 0 : data.landing_company_name, is_dark_mode_on, is_crypto]);\n  return src_useAvailableWallets_objectSpread(src_useAvailableWallets_objectSpread({}, rest), {}, {\n    data: sortedWallets\n  });\n};\n/* harmony default export */ const src_useAvailableWallets = ((/* unused pure expression or super */ null && (useAvailableWallets_useAvailableWallets)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDAllAccounts.ts\nfunction useCFDAllAccounts_toConsumableArray(arr) { return useCFDAllAccounts_arrayWithoutHoles(arr) || useCFDAllAccounts_iterableToArray(arr) || useCFDAllAccounts_unsupportedIterableToArray(arr) || useCFDAllAccounts_nonIterableSpread(); }\nfunction useCFDAllAccounts_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCFDAllAccounts_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useCFDAllAccounts_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCFDAllAccounts_arrayLikeToArray(o, minLen); }\nfunction useCFDAllAccounts_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useCFDAllAccounts_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useCFDAllAccounts_arrayLikeToArray(arr); }\nfunction useCFDAllAccounts_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n/** @deprecated Use `useMT5AccountsList` for MT5 accounts and `useDxtradeAccountsList` for Other CFD accounts from `@deriv/api` instead. */\nvar useCFDAllAccounts_useCFDAllAccounts = function useCFDAllAccounts() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var dxtrade_accounts_list = client.dxtrade_accounts_list,\n    mt5_login_list = client.mt5_login_list,\n    derivez_accounts_list = client.derivez_accounts_list,\n    ctrader_accounts_list = client.ctrader_accounts_list;\n  var cfd_accounts = [];\n  if (Array.isArray(mt5_login_list)) {\n    cfd_accounts = [].concat(useCFDAllAccounts_toConsumableArray(cfd_accounts), useCFDAllAccounts_toConsumableArray(mt5_login_list));\n  }\n  if (Array.isArray(dxtrade_accounts_list)) {\n    cfd_accounts = [].concat(useCFDAllAccounts_toConsumableArray(cfd_accounts), useCFDAllAccounts_toConsumableArray(dxtrade_accounts_list));\n  }\n  if (Array.isArray(ctrader_accounts_list)) {\n    cfd_accounts = [].concat(useCFDAllAccounts_toConsumableArray(cfd_accounts), useCFDAllAccounts_toConsumableArray(ctrader_accounts_list));\n  }\n  if (Array.isArray(derivez_accounts_list)) {\n    cfd_accounts = [].concat(useCFDAllAccounts_toConsumableArray(cfd_accounts), useCFDAllAccounts_toConsumableArray(derivez_accounts_list));\n  }\n  return cfd_accounts;\n};\n/* harmony default export */ const src_useCFDAllAccounts = ((/* unused pure expression or super */ null && (useCFDAllAccounts_useCFDAllAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDDemoAccounts.ts\n\n\n/**\n *  we can use this hook to get the CFD demo accounts.\n *  it loops through the all of user's CFD accounts, finds and returns demo accounts\n */\nvar useCFDDemoAccounts_useCFDDemoAccounts = function useCFDDemoAccounts() {\n  var cfd_accounts = useCFDAllAccounts();\n  var cfd_demo_accounts = cfd_accounts.filter(function (account) {\n    return account.account_type === 'demo';\n  });\n  return cfd_demo_accounts;\n};\n/* harmony default export */ const src_useCFDDemoAccounts = ((/* unused pure expression or super */ null && (useCFDDemoAccounts_useCFDDemoAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDRealAccounts.ts\n\n\n\n/**\n * we can use this hook to get the real CFD accounts for both Eu and Non-Eu regions.\n * it loops through the all of user's CFD accounts, finds and returns real accounts\n */\nvar useCFDRealAccounts_useCFDRealAccounts = function useCFDRealAccounts() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var is_eu_user = traders_hub.is_eu_user;\n  var cfd_accounts = useCFDAllAccounts();\n  var cfd_real_accounts = cfd_accounts.filter(function (account) {\n    var is_demo = account.account_type === 'demo';\n    var is_maltainvest = account.landing_company_short === 'maltainvest';\n    if (is_demo) return false;\n    if (!is_eu_user) return !is_maltainvest;\n    return is_maltainvest;\n  });\n  return cfd_real_accounts;\n};\n/* harmony default export */ const src_useCFDRealAccounts = ((/* unused pure expression or super */ null && (useCFDRealAccounts_useCFDRealAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDAccounts.ts\n\n\n\n\n/**\n * this is a wrapper hook for useCFDDemoAccounts and useCFDRealAccounts\n * and it returns different cfd account types which are demo, real, and all\n */\n\nvar useCFDAccounts = function useCFDAccounts() {\n  var all_cfd_accounts = useCFDAllAccounts();\n  var cfd_demo_accounts = useCFDDemoAccounts();\n  var cfd_real_accounts = useCFDRealAccounts();\n  return {\n    all: all_cfd_accounts,\n    demo: cfd_demo_accounts,\n    real: cfd_real_accounts\n  };\n};\n/* harmony default export */ const src_useCFDAccounts = ((/* unused pure expression or super */ null && (useCFDAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useCashierLocked.ts\n\nvar useCashierLocked = function useCashierLocked() {\n  var _account_status$statu;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_status = client.account_status;\n  var is_cashier_locked = ((_account_status$statu = account_status.status) === null || _account_status$statu === void 0 ? void 0 : _account_status$statu.some(function (status) {\n    return status === 'cashier_locked';\n  })) || false;\n  return is_cashier_locked;\n};\n/* harmony default export */ const src_useCashierLocked = ((/* unused pure expression or super */ null && (useCashierLocked)));\n;// CONCATENATED MODULE: ../../hooks/src/useContentFlag.ts\n\nvar useContentFlag = function useContentFlag() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var content_flag = traders_hub.content_flag;\n  return {\n    is_low_risk_cr_non_eu: content_flag === 'low_risk_cr_non_eu',\n    is_low_risk_cr_eu: content_flag === 'low_risk_cr_eu',\n    is_high_risk_cr: content_flag === 'high_risk_cr',\n    is_cr_demo: content_flag === 'cr_demo',\n    is_eu_demo: content_flag === 'eu_demo',\n    is_eu_real: content_flag === 'eu_real'\n  };\n};\n/* harmony default export */ const src_useContentFlag = ((/* unused pure expression or super */ null && (useContentFlag)));\n;// CONCATENATED MODULE: ../../hooks/src/useCountdown.ts\nfunction useCountdown_slicedToArray(arr, i) { return useCountdown_arrayWithHoles(arr) || useCountdown_iterableToArrayLimit(arr, i) || useCountdown_unsupportedIterableToArray(arr, i) || useCountdown_nonIterableRest(); }\nfunction useCountdown_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useCountdown_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useCountdown_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useCountdown_arrayLikeToArray(o, minLen); }\nfunction useCountdown_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useCountdown_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useCountdown_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar ONE_SECOND = 1000;\nvar useCountdown_useCountdown = function useCountdown(_ref) {\n  var from = _ref.from,\n    _ref$to = _ref.to,\n    to = _ref$to === void 0 ? 0 : _ref$to,\n    _ref$increment = _ref.increment,\n    increment = _ref$increment === void 0 ? false : _ref$increment;\n  var _useState = useState(from),\n    _useState2 = useCountdown_slicedToArray(_useState, 2),\n    count = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = useCountdown_slicedToArray(_useState3, 2),\n    is_running = _useState4[0],\n    setIsRunning = _useState4[1];\n  useEffect(function () {\n    var timer;\n    if (is_running) {\n      timer = setTimeout(function () {\n        if (count === to) {\n          pause();\n        } else {\n          setCount(function (old) {\n            return increment ? old + 1 : old - 1;\n          });\n        }\n      }, ONE_SECOND);\n    }\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [count, is_running, to, increment]);\n  var start = function start() {\n    return setIsRunning(true);\n  };\n  var pause = function pause() {\n    return setIsRunning(false);\n  };\n  var reset = function reset() {\n    return setCount(from);\n  };\n  var stop = function stop() {\n    pause();\n    reset();\n  };\n  return {\n    count: count,\n    is_running: is_running,\n    start: start,\n    pause: pause,\n    reset: reset,\n    stop: stop\n  };\n};\n/* harmony default export */ const src_useCountdown = ((/* unused pure expression or super */ null && (useCountdown_useCountdown)));\n;// CONCATENATED MODULE: ../../hooks/src/useCryptoTransactions.ts\nfunction src_useCryptoTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return src_useCryptoTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useCryptoTransactions_typeof(obj); }\nvar src_useCryptoTransactions_excluded = (/* unused pure expression or super */ null && ([\"subscribe\", \"data\"]));\nfunction src_useCryptoTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useCryptoTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useCryptoTransactions_ownKeys(Object(source), !0).forEach(function (key) { src_useCryptoTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useCryptoTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useCryptoTransactions_defineProperty(obj, key, value) { key = src_useCryptoTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useCryptoTransactions_toPropertyKey(arg) { var key = src_useCryptoTransactions_toPrimitive(arg, \"string\"); return src_useCryptoTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useCryptoTransactions_toPrimitive(input, hint) { if (src_useCryptoTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useCryptoTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction src_useCryptoTransactions_toConsumableArray(arr) { return src_useCryptoTransactions_arrayWithoutHoles(arr) || src_useCryptoTransactions_iterableToArray(arr) || src_useCryptoTransactions_unsupportedIterableToArray(arr) || src_useCryptoTransactions_nonIterableSpread(); }\nfunction src_useCryptoTransactions_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction src_useCryptoTransactions_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction src_useCryptoTransactions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return src_useCryptoTransactions_arrayLikeToArray(arr); }\nfunction src_useCryptoTransactions_slicedToArray(arr, i) { return src_useCryptoTransactions_arrayWithHoles(arr) || src_useCryptoTransactions_iterableToArrayLimit(arr, i) || src_useCryptoTransactions_unsupportedIterableToArray(arr, i) || src_useCryptoTransactions_nonIterableRest(); }\nfunction src_useCryptoTransactions_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction src_useCryptoTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return src_useCryptoTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return src_useCryptoTransactions_arrayLikeToArray(o, minLen); }\nfunction src_useCryptoTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction src_useCryptoTransactions_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction src_useCryptoTransactions_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction src_useCryptoTransactions_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useCryptoTransactions_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nvar useCryptoTransactions_useCryptoTransactions = function useCryptoTransactions() {\n  var _data$cashier_payment2;\n  var _useSubscription = useSubscription('cashier_payments'),\n    subscribe = _useSubscription.subscribe,\n    data = _useSubscription.data,\n    rest = src_useCryptoTransactions_objectWithoutProperties(_useSubscription, src_useCryptoTransactions_excluded);\n  var _useState = useState(),\n    _useState2 = src_useCryptoTransactions_slicedToArray(_useState, 2),\n    transactions = _useState2[0],\n    setTransactions = _useState2[1];\n  useEffect(function () {\n    subscribe();\n  }, [subscribe]);\n  useEffect(function () {\n    setTransactions(function (old_transactions) {\n      var _data$cashier_payment;\n      // Get the list of the crypto transactions.\n      var new_transactions = data === null || data === void 0 ? void 0 : (_data$cashier_payment = data.cashier_payments) === null || _data$cashier_payment === void 0 ? void 0 : _data$cashier_payment.crypto;\n\n      // If there are no new transactions, return the old transactions.\n      if (!new_transactions) return old_transactions;\n\n      // If there are no old transactions, return the new transactions.\n      if (!old_transactions) return new_transactions;\n\n      // Make a copy of the old transactions.\n      var updated_transactions = src_useCryptoTransactions_toConsumableArray(old_transactions);\n\n      // For each new transaction, check if it exists in the old transactions.\n      new_transactions.forEach(function (new_transaction) {\n        // Find the index of the new transaction in the old transactions if exists.\n        var index = updated_transactions.findIndex(function (old_transaction) {\n          return old_transaction.id === new_transaction.id;\n        });\n\n        // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n        if (index === -1) {\n          updated_transactions.push(new_transaction);\n        } else {\n          updated_transactions[index] = new_transaction;\n        }\n      });\n\n      // Return the updated transactions.\n      return updated_transactions;\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$cashier_payment2 = data.cashier_payments) === null || _data$cashier_payment2 === void 0 ? void 0 : _data$cashier_payment2.crypto]);\n\n  // Add additional information to each transaction.\n  var modified_transactions = useMemo(function () {\n    return transactions === null || transactions === void 0 ? void 0 : transactions.map(function (transaction) {\n      return src_useCryptoTransactions_objectSpread(src_useCryptoTransactions_objectSpread({}, transaction), {}, {\n        /** Determine if the transaction is a deposit or not. */\n        is_deposit: transaction.transaction_type === 'deposit',\n        /** Determine if the transaction is a withdrawal or not. */\n        is_withdrawal: transaction.transaction_type === 'withdrawal'\n      });\n    });\n  }, [transactions]);\n\n  // Sort transactions by submit time.\n  var sorted_transactions = useMemo(function () {\n    return modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions.sort(function (a, b) {\n      return b.submit_date - a.submit_date;\n    });\n  }, [modified_transactions]);\n\n  // Determine if the user has any transactions or not.\n  var has_transactions = modified_transactions && modified_transactions.length > 0;\n\n  // Get the last transaction if exists.\n  var last_transaction = modified_transactions === null || modified_transactions === void 0 ? void 0 : modified_transactions[0];\n  return src_useCryptoTransactions_objectSpread({\n    /** List of user transactions sorted by submit time. */\n    data: sorted_transactions,\n    /** Returns the last transaction if exists. */\n    last_transaction: last_transaction,\n    /** Determine is the user has any transactions or not. */\n    has_transactions: has_transactions,\n    subscribe: subscribe\n  }, rest);\n};\n/* harmony default export */ const src_useCryptoTransactions = ((/* unused pure expression or super */ null && (useCryptoTransactions_useCryptoTransactions)));\n;// CONCATENATED MODULE: ../../hooks/src/useCurrentAccountDetails.ts\n\nvar useCurrentAccountDetails = function useCurrentAccountDetails() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    loginid = client.loginid;\n  return account_list.find(function (account) {\n    return loginid === account.loginid;\n  });\n};\n/* harmony default export */ const src_useCurrentAccountDetails = ((/* unused pure expression or super */ null && (useCurrentAccountDetails)));\n;// CONCATENATED MODULE: ../../hooks/src/useCurrentCurrencyConfig.ts\n\n\n\n/** A custom hook to get the currency config information for the user's current currency. */\nvar useCurrentCurrencyConfig = function useCurrentCurrencyConfig() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var currency = client.currency;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var currency_config = getConfig(currency);\n\n  // Safe to do null assertion here because the user's currency is always\n  // available in the currency config object so it can't be null.\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return currency_config;\n};\n/* harmony default export */ const src_useCurrentCurrencyConfig = ((/* unused pure expression or super */ null && (useCurrentCurrencyConfig)));\n;// CONCATENATED MODULE: ../../hooks/src/useDepositCryptoAddress.ts\nfunction src_useDepositCryptoAddress_typeof(obj) { \"@babel/helpers - typeof\"; return src_useDepositCryptoAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useDepositCryptoAddress_typeof(obj); }\nvar src_useDepositCryptoAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction src_useDepositCryptoAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useDepositCryptoAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useDepositCryptoAddress_ownKeys(Object(source), !0).forEach(function (key) { src_useDepositCryptoAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useDepositCryptoAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useDepositCryptoAddress_defineProperty(obj, key, value) { key = src_useDepositCryptoAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useDepositCryptoAddress_toPropertyKey(arg) { var key = src_useDepositCryptoAddress_toPrimitive(arg, \"string\"); return src_useDepositCryptoAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useDepositCryptoAddress_toPrimitive(input, hint) { if (src_useDepositCryptoAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useDepositCryptoAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction src_useDepositCryptoAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useDepositCryptoAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar useDepositCryptoAddress_useDepositCryptoAddress = function useDepositCryptoAddress() {\n  var _data$cashier, _data$cashier$deposit;\n  var _useRequest = useRequest('cashier'),\n    data = _useRequest.data,\n    mutate = _useRequest.mutate,\n    rest = src_useDepositCryptoAddress_objectWithoutProperties(_useRequest, src_useDepositCryptoAddress_excluded);\n  var deposit_address = typeof (data === null || data === void 0 ? void 0 : data.cashier) !== 'string' ? data === null || data === void 0 ? void 0 : (_data$cashier = data.cashier) === null || _data$cashier === void 0 ? void 0 : (_data$cashier$deposit = _data$cashier.deposit) === null || _data$cashier$deposit === void 0 ? void 0 : _data$cashier$deposit.address : undefined;\n  var send = useCallback(function () {\n    return mutate({\n      payload: {\n        cashier: 'deposit',\n        provider: 'crypto',\n        type: 'api'\n      }\n    });\n  }, [mutate]);\n  useEffect(function () {\n    send();\n  }, [send]);\n  return src_useDepositCryptoAddress_objectSpread(src_useDepositCryptoAddress_objectSpread({}, rest), {}, {\n    resend: send,\n    data: deposit_address\n  });\n};\n/* harmony default export */ const src_useDepositCryptoAddress = ((/* unused pure expression or super */ null && (useDepositCryptoAddress_useDepositCryptoAddress)));\n;// CONCATENATED MODULE: ../../hooks/src/useDepositFiatAddress.ts\nfunction useDepositFiatAddress_typeof(obj) { \"@babel/helpers - typeof\"; return useDepositFiatAddress_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useDepositFiatAddress_typeof(obj); }\nvar useDepositFiatAddress_excluded = (/* unused pure expression or super */ null && ([\"data\", \"mutate\"]));\nfunction useDepositFiatAddress_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useDepositFiatAddress_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useDepositFiatAddress_ownKeys(Object(source), !0).forEach(function (key) { useDepositFiatAddress_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useDepositFiatAddress_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useDepositFiatAddress_defineProperty(obj, key, value) { key = useDepositFiatAddress_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useDepositFiatAddress_toPropertyKey(arg) { var key = useDepositFiatAddress_toPrimitive(arg, \"string\"); return useDepositFiatAddress_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useDepositFiatAddress_toPrimitive(input, hint) { if (useDepositFiatAddress_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useDepositFiatAddress_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useDepositFiatAddress_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useDepositFiatAddress_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useDepositFiatAddress_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useDepositFiatAddress = function useDepositFiatAddress() {\n  var _useStore = useStore(),\n    ui = _useStore.ui;\n  var is_dark_mode_on = ui.is_dark_mode_on;\n  var _useRequest = useRequest('cashier'),\n    data = _useRequest.data,\n    mutate = _useRequest.mutate,\n    rest = useDepositFiatAddress_objectWithoutProperties(_useRequest, useDepositFiatAddress_excluded);\n  var deposit_iframe_url = typeof (data === null || data === void 0 ? void 0 : data.cashier) === 'string' ? \"\".concat(data === null || data === void 0 ? void 0 : data.cashier, \"&DarkMode=\").concat(is_dark_mode_on ? 'on' : 'off') : undefined;\n  var send = useCallback(function () {\n    return mutate({\n      payload: {\n        cashier: 'deposit',\n        provider: 'doughflow'\n      }\n    });\n  }, [mutate]);\n  useEffect(function () {\n    send();\n  }, [send]);\n  return useDepositFiatAddress_objectSpread(useDepositFiatAddress_objectSpread({}, rest), {}, {\n    resend: send,\n    data: deposit_iframe_url\n  });\n};\n/* harmony default export */ const src_useDepositFiatAddress = ((/* unused pure expression or super */ null && (useDepositFiatAddress)));\n;// CONCATENATED MODULE: ../../hooks/src/useNeedAuthentication.ts\n\nvar useNeedAuthentication_useNeedAuthentication = function useNeedAuthentication() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var is_authentication_needed = client.is_authentication_needed;\n  var is_low_risk_cr_eu_real = traders_hub.is_low_risk_cr_eu_real;\n  var is_need_authentication = is_authentication_needed && is_low_risk_cr_eu_real;\n  return is_need_authentication;\n};\n/* harmony default export */ const src_useNeedAuthentication = ((/* unused pure expression or super */ null && (useNeedAuthentication_useNeedAuthentication)));\n;// CONCATENATED MODULE: ../../hooks/src/useNeedFinancialAssessment.ts\n\nvar useNeedFinancialAssessment_useNeedFinancialAssessment = function useNeedFinancialAssessment() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_financial_account = client.is_financial_account,\n    is_financial_information_incomplete = client.is_financial_information_incomplete,\n    is_trading_experience_incomplete = client.is_trading_experience_incomplete;\n  var is_need_financial_assessment = is_financial_account && (is_financial_information_incomplete || is_trading_experience_incomplete);\n  return is_need_financial_assessment;\n};\n/* harmony default export */ const src_useNeedFinancialAssessment = ((/* unused pure expression or super */ null && (useNeedFinancialAssessment_useNeedFinancialAssessment)));\n;// CONCATENATED MODULE: ../../hooks/src/useRealSTPAccount.ts\n\nvar useRealSTPAccount_useRealSTPAccount = function useRealSTPAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var mt5_login_list = client.mt5_login_list;\n  var has_real_stp_account = mt5_login_list.some(function (item) {\n    return item.account_type === 'real' && item.sub_account_type === 'financial_stp';\n  });\n  return has_real_stp_account;\n};\n/* harmony default export */ const src_useRealSTPAccount = ((/* unused pure expression or super */ null && (useRealSTPAccount_useRealSTPAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useNeedTNC.ts\n\n\nvar useNeedTNC_useNeedTNC = function useNeedTNC() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_eu = client.is_eu,\n    is_tnc_needed = client.is_tnc_needed;\n  var has_real_stp_account = useRealSTPAccount();\n  var is_need_tnc = (is_eu || has_real_stp_account) && is_tnc_needed;\n  return is_need_tnc;\n};\n/* harmony default export */ const src_useNeedTNC = ((/* unused pure expression or super */ null && (useNeedTNC_useNeedTNC)));\n;// CONCATENATED MODULE: ../../hooks/src/useDepositLocked.ts\n\n\n\n\nvar useDepositLocked = function useDepositLocked() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_deposit_lock = client.is_deposit_lock,\n    is_trading_experience_incomplete = client.is_trading_experience_incomplete,\n    landing_company_shortcode = client.landing_company_shortcode;\n  var is_need_authentication = useNeedAuthentication();\n  var is_need_tnc = useNeedTNC();\n  var is_need_financial_assessment = useNeedFinancialAssessment();\n  var is_malta_invest = landing_company_shortcode === 'maltainvest';\n  var is_trading_experience_incomplete_or_need_financial_assessment = is_malta_invest ? is_trading_experience_incomplete : is_need_financial_assessment;\n  var is_deposit_locked = is_deposit_lock || is_need_authentication || is_need_tnc || is_trading_experience_incomplete_or_need_financial_assessment;\n  return is_deposit_locked;\n};\n/* harmony default export */ const src_useDepositLocked = ((/* unused pure expression or super */ null && (useDepositLocked)));\n;// CONCATENATED MODULE: ../../hooks/src/useExchangeRate.ts\n\n\n\n/**\n * we can use this hook to get the exchange rate for the given currency.\n * exchange_rates comes from store and includes the rates for all currencies based on USD.\n */\nvar src_useExchangeRate_useExchangeRate = function useExchangeRate() {\n  var _useStore = useStore(),\n    exchange_rates = _useStore.exchange_rates;\n  var data = exchange_rates.data;\n  var rates = data === null || data === void 0 ? void 0 : data.rates;\n  var getRate = useCallback(function (currency) {\n    return (rates === null || rates === void 0 ? void 0 : rates[currency]) || 1;\n  }, [rates]);\n  return {\n    getRate: getRate,\n    last_update: data === null || data === void 0 ? void 0 : data.date,\n    base_currency: (data === null || data === void 0 ? void 0 : data.base_currency) || 'USD'\n  };\n};\n/* harmony default export */ const src_useExchangeRate = ((/* unused pure expression or super */ null && (src_useExchangeRate_useExchangeRate)));\n;// CONCATENATED MODULE: ../../hooks/src/useExistingCFDAccounts.ts\nfunction useExistingCFDAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return useExistingCFDAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useExistingCFDAccounts_typeof(obj); }\nvar useExistingCFDAccounts_excluded = (/* unused pure expression or super */ null && ([\"data\"])),\n  useExistingCFDAccounts_excluded2 = (/* unused pure expression or super */ null && ([\"data\"])),\n  _excluded3 = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useExistingCFDAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useExistingCFDAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useExistingCFDAccounts_ownKeys(Object(source), !0).forEach(function (key) { useExistingCFDAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useExistingCFDAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useExistingCFDAccounts_defineProperty(obj, key, value) { key = useExistingCFDAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useExistingCFDAccounts_toPropertyKey(arg) { var key = useExistingCFDAccounts_toPrimitive(arg, \"string\"); return useExistingCFDAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useExistingCFDAccounts_toPrimitive(input, hint) { if (useExistingCFDAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useExistingCFDAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useExistingCFDAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useExistingCFDAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useExistingCFDAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\nvar getAccountIcon = function getAccountIcon(_ref) {\n  var cfd_type = _ref.cfd_type,\n    market_type = _ref.market_type;\n  switch (cfd_type) {\n    case 'mt5':\n      {\n        switch (market_type) {\n          case 'financial':\n            return 'IcRebrandingMt5FinancialDashboard';\n          case 'synthetic':\n            return 'IcRebrandingMt5DerivedDashboard';\n          case 'all':\n            return 'IcRebrandingMt5SwapFree';\n          default:\n            return 'IcRebrandingDmt5Dashboard';\n        }\n      }\n    case 'derivez':\n      return 'IcRebrandingDerivEz';\n    case 'dxtrade':\n      return 'IcRebrandingDerivX';\n    default:\n      return '';\n  }\n};\n\n/**\n * @description This hook is used to get the created CFD accounts of the user.\n */\nvar useExistingCFDAccounts_useExistingCFDAccounts = function useExistingCFDAccounts() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var combined_cfd_mt5_accounts = traders_hub.combined_cfd_mt5_accounts;\n  var wallet = useActiveWallet();\n  var _useFetch = useFetch('mt5_login_list'),\n    mt5 = _useFetch.data,\n    mt5_rest = useExistingCFDAccounts_objectWithoutProperties(_useFetch, useExistingCFDAccounts_excluded);\n  var _useFetch2 = useFetch('trading_platform_accounts', {\n      payload: {\n        platform: 'derivez'\n      }\n    }),\n    derivez = _useFetch2.data,\n    derivez_rest = useExistingCFDAccounts_objectWithoutProperties(_useFetch2, useExistingCFDAccounts_excluded2);\n  var _useFetch3 = useFetch('trading_platform_accounts', {\n      payload: {\n        platform: 'dxtrade'\n      }\n    }),\n    dxtrade = _useFetch3.data,\n    dxtrade_rest = useExistingCFDAccounts_objectWithoutProperties(_useFetch3, _excluded3);\n\n  /**\n   *\n   * @description This is the modified MT5 accounts that will be used in the CFD account creation.\n   */\n  var modified_mt5_accounts = useMemo(function () {\n    var _mt5$mt5_login_list;\n    var getAccountInfo = function getAccountInfo(login) {\n      var _wallet$linked_to, _wallet$linked_to$fin, _combined_cfd_mt5_acc, _combined_cfd_mt5_acc2, _combined_cfd_mt5_acc3, _combined_cfd_mt5_acc4;\n      return {\n        platform: wallet === null || wallet === void 0 ? void 0 : (_wallet$linked_to = wallet.linked_to) === null || _wallet$linked_to === void 0 ? void 0 : (_wallet$linked_to$fin = _wallet$linked_to.find(function (linked) {\n          return linked.loginid === login;\n        })) === null || _wallet$linked_to$fin === void 0 ? void 0 : _wallet$linked_to$fin.platform,\n        icon: combined_cfd_mt5_accounts === null || combined_cfd_mt5_accounts === void 0 ? void 0 : (_combined_cfd_mt5_acc = combined_cfd_mt5_accounts.find(function (cfd) {\n          return cfd.login === login;\n        })) === null || _combined_cfd_mt5_acc === void 0 ? void 0 : _combined_cfd_mt5_acc.icon,\n        description: combined_cfd_mt5_accounts === null || combined_cfd_mt5_accounts === void 0 ? void 0 : (_combined_cfd_mt5_acc2 = combined_cfd_mt5_accounts.find(function (cfd) {\n          return cfd.login === login;\n        })) === null || _combined_cfd_mt5_acc2 === void 0 ? void 0 : _combined_cfd_mt5_acc2.description,\n        name: combined_cfd_mt5_accounts === null || combined_cfd_mt5_accounts === void 0 ? void 0 : (_combined_cfd_mt5_acc3 = combined_cfd_mt5_accounts.find(function (cfd) {\n          return cfd.login === login;\n        })) === null || _combined_cfd_mt5_acc3 === void 0 ? void 0 : _combined_cfd_mt5_acc3.name,\n        sub_title: combined_cfd_mt5_accounts === null || combined_cfd_mt5_accounts === void 0 ? void 0 : (_combined_cfd_mt5_acc4 = combined_cfd_mt5_accounts.find(function (cfd) {\n          return cfd.login === login;\n        })) === null || _combined_cfd_mt5_acc4 === void 0 ? void 0 : _combined_cfd_mt5_acc4.sub_title,\n        action_type: 'multi-action'\n      };\n    };\n    return mt5 === null || mt5 === void 0 ? void 0 : (_mt5$mt5_login_list = mt5.mt5_login_list) === null || _mt5$mt5_login_list === void 0 ? void 0 : _mt5$mt5_login_list.map(function (account) {\n      return useExistingCFDAccounts_objectSpread(useExistingCFDAccounts_objectSpread(useExistingCFDAccounts_objectSpread({}, account), getAccountInfo(account.login)), {}, {\n        loginid: account.login,\n        transfer_icon: getAccountIcon(useExistingCFDAccounts_objectSpread({\n          cfd_type: 'mt5'\n        }, account))\n      });\n    });\n  }, [mt5 === null || mt5 === void 0 ? void 0 : mt5.mt5_login_list, wallet === null || wallet === void 0 ? void 0 : wallet.linked_to, combined_cfd_mt5_accounts]);\n  var modified_derivez_accounts = useMemo(function () {\n    var _derivez$trading_plat;\n    return derivez === null || derivez === void 0 ? void 0 : (_derivez$trading_plat = derivez.trading_platform_accounts) === null || _derivez$trading_plat === void 0 ? void 0 : _derivez$trading_plat.map(function (account) {\n      return useExistingCFDAccounts_objectSpread(useExistingCFDAccounts_objectSpread({}, account), {}, {\n        loginid: account.login,\n        transfer_icon: getAccountIcon({\n          cfd_type: 'derivez'\n        })\n      });\n    });\n  }, [derivez === null || derivez === void 0 ? void 0 : derivez.trading_platform_accounts]);\n  var modified_dxtrade_accounts = useMemo(function () {\n    var _dxtrade$trading_plat;\n    return dxtrade === null || dxtrade === void 0 ? void 0 : (_dxtrade$trading_plat = dxtrade.trading_platform_accounts) === null || _dxtrade$trading_plat === void 0 ? void 0 : _dxtrade$trading_plat.map(function (account) {\n      return useExistingCFDAccounts_objectSpread(useExistingCFDAccounts_objectSpread({}, account), {}, {\n        loginid: account.account_id,\n        transfer_icon: getAccountIcon({\n          cfd_type: 'dxtrade'\n        })\n      });\n    });\n  }, [dxtrade === null || dxtrade === void 0 ? void 0 : dxtrade.trading_platform_accounts]);\n  var data = useMemo(function () {\n    return {\n      mt5_accounts: modified_mt5_accounts || [],\n      dxtrade_accounts: modified_dxtrade_accounts || [],\n      derivez_accounts: modified_derivez_accounts || []\n    };\n  }, [modified_mt5_accounts, modified_dxtrade_accounts, modified_derivez_accounts]);\n  return {\n    data: data,\n    isSuccess: [mt5_rest.isSuccess, dxtrade_rest.isSuccess, derivez_rest.isSuccess].every(Boolean)\n  };\n};\n/* harmony default export */ const src_useExistingCFDAccounts = ((/* unused pure expression or super */ null && (useExistingCFDAccounts_useExistingCFDAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useFeatureFlags.ts\nfunction useFeatureFlags_typeof(obj) { \"@babel/helpers - typeof\"; return useFeatureFlags_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useFeatureFlags_typeof(obj); }\nfunction useFeatureFlags_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useFeatureFlags_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useFeatureFlags_ownKeys(Object(source), !0).forEach(function (key) { useFeatureFlags_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useFeatureFlags_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useFeatureFlags_defineProperty(obj, key, value) { key = useFeatureFlags_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useFeatureFlags_toPropertyKey(arg) { var key = useFeatureFlags_toPrimitive(arg, \"string\"); return useFeatureFlags_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useFeatureFlags_toPrimitive(input, hint) { if (useFeatureFlags_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useFeatureFlags_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\nvar useFeatureFlags = function useFeatureFlags() {\n  var _useStore = useStore(),\n    feature_flags = _useStore.feature_flags;\n  var result = useMemo(function () {\n    // Safe to do null assertions here as we are setting default values in the store.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var flags = feature_flags.data;\n    return Object.keys(flags).reduce(function (previous, current) {\n      return useFeatureFlags_objectSpread(useFeatureFlags_objectSpread({}, previous), {}, useFeatureFlags_defineProperty({}, \"is_\".concat(current, \"_enabled\"), Boolean(flags[current])));\n    }, {});\n  }, [feature_flags.data]);\n  return result;\n};\n/* harmony default export */ const src_useFeatureFlags = ((/* unused pure expression or super */ null && (useFeatureFlags)));\n;// CONCATENATED MODULE: ../../hooks/src/useFiatAccountList.ts\n\nvar useFiatAccountList = function useFiatAccountList() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    is_crypto = client.is_crypto;\n  var fiat_account_list = account_list.filter(function (account) {\n    return !account.is_virtual && !is_crypto(account.title || '');\n  });\n  return fiat_account_list;\n};\n/* harmony default export */ const src_useFiatAccountList = ((/* unused pure expression or super */ null && (useFiatAccountList)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasActiveRealAccount.ts\n\nvar useHasActiveRealAccount_useHasActiveRealAccount = function useHasActiveRealAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_active_real_account = active_accounts.some(function (account) {\n    return account.is_virtual === 0;\n  });\n  return has_active_real_account;\n};\n/* harmony default export */ const src_useHasActiveRealAccount = ((/* unused pure expression or super */ null && (useHasActiveRealAccount_useHasActiveRealAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasCryptoCurrency.ts\n\nvar useHasCryptoCurrency = function useHasCryptoCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list,\n    is_crypto = client.is_crypto;\n  var has_crypto_currency = account_list.some(function (account) {\n    return is_crypto(account.title || 'USD');\n  });\n  return has_crypto_currency;\n};\n/* harmony default export */ const src_useHasCryptoCurrency = ((/* unused pure expression or super */ null && (useHasCryptoCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasFiatCurrency.ts\n\n\nvar useHasFiatCurrency = function useHasFiatCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var has_fiat_currency = account_list.some(function (account) {\n    var _getConfig;\n    return account.title !== 'Real' && ((_getConfig = getConfig(account.title || '')) === null || _getConfig === void 0 ? void 0 : _getConfig.is_fiat);\n  });\n  return has_fiat_currency;\n};\n/* harmony default export */ const src_useHasFiatCurrency = ((/* unused pure expression or super */ null && (useHasFiatCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PConfig.ts\nfunction useP2PConfig_typeof(obj) { \"@babel/helpers - typeof\"; return useP2PConfig_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useP2PConfig_typeof(obj); }\nvar useP2PConfig_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useP2PConfig_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useP2PConfig_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useP2PConfig_ownKeys(Object(source), !0).forEach(function (key) { useP2PConfig_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useP2PConfig_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useP2PConfig_defineProperty(obj, key, value) { key = useP2PConfig_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useP2PConfig_toPropertyKey(arg) { var key = useP2PConfig_toPrimitive(arg, \"string\"); return useP2PConfig_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useP2PConfig_toPrimitive(input, hint) { if (useP2PConfig_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useP2PConfig_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useP2PConfig_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useP2PConfig_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useP2PConfig_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/**\n * A custom hook to get the p2p_config information from `website_status` endpoint\n */\nvar useP2PConfig_useP2PConfig = function useP2PConfig() {\n  var _data$website_status2;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize,\n    loginid = client.loginid;\n  var _useFetch = useFetch('website_status', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = useP2PConfig_objectWithoutProperties(_useFetch, useP2PConfig_excluded);\n  var invalidate = useInvalidateQuery();\n\n  // Add additional information to the p2p config data.\n  var modified_p2p_config = React.useMemo(function () {\n    var _data$website_status;\n    var p2p_config = data === null || data === void 0 ? void 0 : (_data$website_status = data.website_status) === null || _data$website_status === void 0 ? void 0 : _data$website_status.p2p_config;\n    if (!p2p_config) return undefined;\n    return useP2PConfig_objectSpread(useP2PConfig_objectSpread({}, p2p_config), {}, {\n      /** Indicates if the payment methods feature is enabled. */\n      is_payment_methods_enabled: Boolean(p2p_config === null || p2p_config === void 0 ? void 0 : p2p_config.payment_methods_enabled)\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$website_status2 = data.website_status) === null || _data$website_status2 === void 0 ? void 0 : _data$website_status2.p2p_config]);\n  React.useEffect(function () {\n    invalidate('website_status');\n  }, [invalidate, loginid]);\n  return useP2PConfig_objectSpread({\n    /** The p2p config response. */\n    data: modified_p2p_config\n  }, rest);\n};\n/* harmony default export */ const src_useP2PConfig = ((/* unused pure expression or super */ null && (useP2PConfig_useP2PConfig)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasP2PSupportedCurrencies.ts\nfunction useHasP2PSupportedCurrencies_typeof(obj) { \"@babel/helpers - typeof\"; return useHasP2PSupportedCurrencies_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useHasP2PSupportedCurrencies_typeof(obj); }\nvar useHasP2PSupportedCurrencies_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useHasP2PSupportedCurrencies_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useHasP2PSupportedCurrencies_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useHasP2PSupportedCurrencies_ownKeys(Object(source), !0).forEach(function (key) { useHasP2PSupportedCurrencies_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useHasP2PSupportedCurrencies_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useHasP2PSupportedCurrencies_defineProperty(obj, key, value) { key = useHasP2PSupportedCurrencies_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useHasP2PSupportedCurrencies_toPropertyKey(arg) { var key = useHasP2PSupportedCurrencies_toPrimitive(arg, \"string\"); return useHasP2PSupportedCurrencies_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useHasP2PSupportedCurrencies_toPrimitive(input, hint) { if (useHasP2PSupportedCurrencies_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useHasP2PSupportedCurrencies_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useHasP2PSupportedCurrencies_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useHasP2PSupportedCurrencies_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useHasP2PSupportedCurrencies_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar useHasP2PSupportedCurrencies = function useHasP2PSupportedCurrencies() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var _useP2PConfig = useP2PConfig(),\n    data = _useP2PConfig.data,\n    rest = useHasP2PSupportedCurrencies_objectWithoutProperties(_useP2PConfig, useHasP2PSupportedCurrencies_excluded);\n  var real_account_currencies_list = active_accounts.filter(function (account) {\n    return !account.is_virtual;\n  }).map(function (account) {\n    var _account$currency;\n    return (_account$currency = account.currency) === null || _account$currency === void 0 ? void 0 : _account$currency.toLowerCase();\n  });\n  var has_p2p_supported_currencies = Boolean(data === null || data === void 0 ? void 0 : data.supported_currencies.some(function (currency) {\n    return real_account_currencies_list.includes(currency);\n  }));\n  return useHasP2PSupportedCurrencies_objectSpread(useHasP2PSupportedCurrencies_objectSpread({}, rest), {}, {\n    data: has_p2p_supported_currencies\n  });\n};\n/* harmony default export */ const src_useHasP2PSupportedCurrencies = ((/* unused pure expression or super */ null && (useHasP2PSupportedCurrencies)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSetCurrency.ts\n\n\nvar useHasSetCurrency = function useHasSetCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list;\n  var has_active_real_account = useHasActiveRealAccount();\n  var has_real_account = account_list.filter(function (account) {\n    return !account.is_virtual;\n  }).some(function (account) {\n    return account.title !== 'Real' && account.title !== 'Investment';\n  });\n  var has_set_currency = has_real_account || !has_active_real_account;\n  return has_set_currency;\n};\n/* harmony default export */ const src_useHasSetCurrency = ((/* unused pure expression or super */ null && (useHasSetCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSvgAccount.ts\n\nvar useHasSvgAccount_useHasSvgAccount = function useHasSvgAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var active_accounts = client.active_accounts;\n  var has_svg_account = active_accounts.some(function (account) {\n    return account.landing_company_shortcode === 'svg';\n  });\n  return has_svg_account;\n};\n/* harmony default export */ const src_useHasSvgAccount = ((/* unused pure expression or super */ null && (useHasSvgAccount_useHasSvgAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasSwapFreeAccount.ts\n\n\n/**\n * This hook is used to check if the client has a Swap-Free account.\n * It checks for availability of market_type 'all' in trading_platform_available_accounts API response\n */\nvar useHasSwapFreeAccount = function useHasSwapFreeAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var trading_platform_available_accounts = client.trading_platform_available_accounts;\n  var has_swap_free_account = trading_platform_available_accounts.some(function (available_account) {\n    return available_account.market_type === 'all';\n  });\n  return has_swap_free_account;\n};\n/* harmony default export */ const src_useHasSwapFreeAccount = ((/* unused pure expression or super */ null && (useHasSwapFreeAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/useHasUSDCurrency.ts\n\nvar useHasUSDCurrency = function useHasUSDCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_list = client.account_list;\n  var has_usd_currency = account_list.some(function (account) {\n    return account.title === 'USD';\n  });\n  return has_usd_currency;\n};\n/* harmony default export */ const src_useHasUSDCurrency = ((/* unused pure expression or super */ null && (useHasUSDCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useInputDecimalFormatter.ts\nfunction useInputDecimalFormatter_slicedToArray(arr, i) { return useInputDecimalFormatter_arrayWithHoles(arr) || useInputDecimalFormatter_iterableToArrayLimit(arr, i) || useInputDecimalFormatter_unsupportedIterableToArray(arr, i) || useInputDecimalFormatter_nonIterableRest(); }\nfunction useInputDecimalFormatter_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useInputDecimalFormatter_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useInputDecimalFormatter_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useInputDecimalFormatter_arrayLikeToArray(o, minLen); }\nfunction useInputDecimalFormatter_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useInputDecimalFormatter_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useInputDecimalFormatter_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar useInputDecimalFormatter_useInputDecimalFormatter = function useInputDecimalFormatter(initial, options) {\n  var _useState = useState(''),\n    _useState2 = useInputDecimalFormatter_slicedToArray(_useState, 2),\n    value = _useState2[0],\n    setValue = _useState2[1];\n  var _ref = options || {},\n    _ref$fraction_digits = _ref.fraction_digits,\n    fraction_digits = _ref$fraction_digits === void 0 ? 2 : _ref$fraction_digits,\n    _ref$with_sign = _ref.with_sign,\n    with_sign = _ref$with_sign === void 0 ? false : _ref$with_sign;\n  var onChange = useCallback(function (e) {\n    setValue(function (old_value) {\n      var _e$target;\n      var new_value = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '';\n      var isEmpty = new_value === '';\n\n      // The field has been cleared, So we return the new value.\n      if (isEmpty) return new_value;\n      var text = with_sign ? new_value : new_value.replaceAll(/[+-]/g, '');\n      var inputs = text.split('.');\n\n      // The field contains more than one dot, So we return the old value as only one dot\n      // is allowed.\n      if (inputs.length > 2) return old_value;\n      var left = inputs[0];\n      var right = inputs.length > 1 ? inputs[1] : null;\n      var has_right = right !== null && right !== '';\n\n      // The field value is positive or negative sign, So we return the new value without\n      // any calculations.\n      if ((left === '-' || left === '+') && !has_right) return new_value;\n\n      // The field value is 0, So we return the new value without any calculations.\n      if (left === '0' && !has_right) return new_value;\n      var is_number = !isNaN(Number(new_value));\n\n      // The input value is not a valid number, So we return the old value.\n      if (!is_number) return old_value;\n      var new_left = left.replaceAll(/[+-]/g, '');\n      var has_decimal = new_value.includes('.');\n\n      // The field starts with 0 but doesn't have decimal point, So we return the old value\n      // as the only valid input at this step is decimal point.\n      if (new_left.startsWith('0') && new_left.length !== 1 && !has_decimal) return old_value;\n\n      // The field have a decimal point and decimal places are already as allowed fraction\n      // digits, So we remove the extra decimal digits from the right and return the new value.\n      if (has_right && right.length > fraction_digits) {\n        var new_right = right.substring(0, fraction_digits);\n        return \"\".concat(left, \".\").concat(new_right);\n      }\n      return new_value;\n    });\n  }, [fraction_digits, with_sign]);\n  useEffect(function () {\n    if (initial) onChange({\n      target: {\n        value: \"\".concat(initial)\n      }\n    });\n  }, [initial, onChange]);\n  return {\n    value: value,\n    onChange: onChange\n  };\n};\n/* harmony default export */ const src_useInputDecimalFormatter = ((/* unused pure expression or super */ null && (useInputDecimalFormatter_useInputDecimalFormatter)));\n;// CONCATENATED MODULE: ../../hooks/src/useInputATMFormatter.ts\n\n\n\nvar useInputATMFormatter = function useInputATMFormatter(initial, options) {\n  var is_pasting = useRef(false);\n  var _useInputDecimalForma = useInputDecimalFormatter(undefined, options),\n    value = _useInputDecimalForma.value,\n    onChangeDecimal = _useInputDecimalForma.onChange;\n  var _ref = options || {},\n    locale = _ref.locale,\n    _ref$fraction_digits = _ref.fraction_digits,\n    fraction_digits = _ref$fraction_digits === void 0 ? 2 : _ref$fraction_digits;\n  var formatted_value = useMemo(function () {\n    return \"\".concat(Number(value).toLocaleString(locale, {\n      minimumFractionDigits: fraction_digits\n    }));\n  }, [fraction_digits, locale, value]);\n  var onChange = useCallback(function (e) {\n    var _e$target, _unformatted$split, _unformatted$split$;\n    var new_value = (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '';\n    var unformatted = unFormatLocaleString(new_value, locale);\n    // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n    var shifted = Math.fround(unformatted * 10).toFixed(fraction_digits);\n    // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n    var un_shifted = Math.fround(unformatted / 10).toFixed(fraction_digits);\n    var unformatted_fraction = ((_unformatted$split = unformatted.split('.')) === null || _unformatted$split === void 0 ? void 0 : (_unformatted$split$ = _unformatted$split[1]) === null || _unformatted$split$ === void 0 ? void 0 : _unformatted$split$.length) || fraction_digits;\n\n    // If the user is pasting, we don't need to shift the decimal point,\n    // We just need to format the value.\n    if (is_pasting.current) {\n      is_pasting.current = false;\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has one more decimal places than the fraction_digits,\n    // so we need to shift the decimal point to the left.\n    if (unformatted_fraction - 1 === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: shifted\n        }\n      });\n    }\n\n    // The new value has one less decimal places than the fraction_digits,\n    // so we need to shift the decimal point to the right.\n    if (unformatted_fraction + 1 === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: un_shifted\n        }\n      });\n    }\n\n    // The new value has the same number of decimal places as the fraction_digits,\n    // so we don't need to shift the decimal point.\n    if (unformatted_fraction === fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has more decimal places than the fraction_digits,\n    // so we chop the extra decimal points.\n    if (unformatted_fraction - 1 > fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n\n    // The new value has less decimal places than the fraction_digits,\n    // so we add the missing extra decimal point.\n    if (unformatted_fraction + 1 < fraction_digits) {\n      return onChangeDecimal({\n        target: {\n          value: unformatted\n        }\n      });\n    }\n    return onChangeDecimal({\n      target: {\n        value: unformatted\n      }\n    });\n  }, [locale, fraction_digits, onChangeDecimal]);\n  var onPaste = useCallback(function (e) {\n    return is_pasting.current = e.type === 'paste';\n  }, []);\n  useEffect(function () {\n    if (initial) {\n      is_pasting.current = true;\n      onChange({\n        target: {\n          value: \"\".concat(Number(initial).toLocaleString(locale, {\n            minimumFractionDigits: fraction_digits\n          }))\n        }\n      });\n    }\n  }, [fraction_digits, initial, locale, onChange]);\n  return {\n    value: formatted_value,\n    onChange: onChange,\n    onPaste: onPaste\n  };\n};\n/* harmony default export */ const src_useInputATMFormatter = ((/* unused pure expression or super */ null && (useInputATMFormatter)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsAccountStatusPresent.ts\n\n\nvar AccountStatusList = (/* unused pure expression or super */ null && (['address_verified', 'age_verification', 'allow_document_upload', 'allow_poa_resubmission', 'allow_poi_resubmission', 'authenticated', 'authenticated_with_idv_photoid', 'cashier_locked', 'crs_tin_information', 'deposit_attempt', 'deposit_locked', 'df_deposit_requires_poi', 'disabled', 'document_expired', 'document_expiring_soon', 'document_under_review', 'dxtrade_password_not_set', 'financial_assessment_not_complete', 'financial_information_not_complete', 'financial_risk_approval', 'idv_revoked', 'max_turnover_limit_not_set', 'mt5_password_not_set', 'mt5_withdrawal_locked', 'needs_affiliate_coc_approval', 'no_trading', 'no_withdrawal_or_trading', 'p2p_blocked_for_pa', 'pa_withdrawal_explicitly_allowed', 'password_reset_required', 'personal_details_locked', 'poi_name_mismatch', 'professional', 'professional_requested', 'professional_rejected', 'shared_payment_method', 'social_signup', 'transfers_blocked', 'trading_experience_not_complete', 'ukgc_funds_protection', 'unwelcome', 'withdrawal_locked']));\n/**\n * Custom hook to check if a particular account status is present.\n * @name useIsAccountStatusPresent\n * @param status of the account to check\n * @returns boolean\n */\nvar useIsAccountStatusPresent = function useIsAccountStatusPresent(status) {\n  var _useStore = useStore(),\n    account_status = _useStore.client.account_status;\n  var status_list = account_status === null || account_status === void 0 ? void 0 : account_status.status;\n  return React.useMemo(function () {\n    var _status_list$includes;\n    return (_status_list$includes = status_list === null || status_list === void 0 ? void 0 : status_list.includes(status)) !== null && _status_list$includes !== void 0 ? _status_list$includes : false;\n  }, [status_list, status]);\n};\n/* harmony default export */ const src_useIsAccountStatusPresent = ((/* unused pure expression or super */ null && (useIsAccountStatusPresent)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsP2PEnabled.ts\nfunction useIsP2PEnabled_typeof(obj) { \"@babel/helpers - typeof\"; return useIsP2PEnabled_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useIsP2PEnabled_typeof(obj); }\nvar useIsP2PEnabled_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useIsP2PEnabled_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useIsP2PEnabled_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useIsP2PEnabled_ownKeys(Object(source), !0).forEach(function (key) { useIsP2PEnabled_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useIsP2PEnabled_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useIsP2PEnabled_defineProperty(obj, key, value) { key = useIsP2PEnabled_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useIsP2PEnabled_toPropertyKey(arg) { var key = useIsP2PEnabled_toPrimitive(arg, \"string\"); return useIsP2PEnabled_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useIsP2PEnabled_toPrimitive(input, hint) { if (useIsP2PEnabled_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useIsP2PEnabled_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useIsP2PEnabled_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useIsP2PEnabled_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useIsP2PEnabled_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar useIsP2PEnabled = function useIsP2PEnabled() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  // Todo: to replace it with useAuthorize hook\n  var currency = client.currency,\n    is_virtual = client.is_virtual;\n  var is_low_risk_cr_eu_real = traders_hub.is_low_risk_cr_eu_real;\n  var _useP2PConfig = useP2PConfig(),\n    data = _useP2PConfig.data,\n    rest = useIsP2PEnabled_objectWithoutProperties(_useP2PConfig, useIsP2PEnabled_excluded);\n  var is_p2p_supported_currency = Boolean(data === null || data === void 0 ? void 0 : data.supported_currencies.includes(currency.toLocaleLowerCase()));\n  var is_p2p_enabled = is_p2p_supported_currency && !is_virtual && !is_low_risk_cr_eu_real;\n\n  // Todo: should replace with the next line instead once BE is fixed.\n  // const is_p2p_enabled = data?.disabled === 0;\n\n  return useIsP2PEnabled_objectSpread(useIsP2PEnabled_objectSpread({}, rest), {}, {\n    data: is_p2p_enabled\n  });\n};\n/* harmony default export */ const src_useIsP2PEnabled = ((/* unused pure expression or super */ null && (useIsP2PEnabled)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsRealAccountNeededForCashier.ts\n\n\n\nvar useIsRealAccountNeededForCashier = function useIsRealAccountNeededForCashier() {\n  var _useStore = useStore(),\n    traders_hub = _useStore.traders_hub;\n  var is_eu_user = traders_hub.is_eu_user,\n    is_real = traders_hub.is_real;\n  var has_svg_account = useHasSvgAccount();\n  var has_maltainvest_account = useHasMaltaInvestAccount();\n  var no_real_mf_account = has_svg_account && !has_maltainvest_account && is_eu_user;\n  var no_real_cr_account = !has_svg_account && has_maltainvest_account && !is_eu_user;\n  var is_real_account_needed = no_real_mf_account || no_real_cr_account;\n  var is_real_account_needed_for_cashier = is_real_account_needed && is_real;\n  return is_real_account_needed_for_cashier;\n};\n/* harmony default export */ const src_useIsRealAccountNeededForCashier = ((/* unused pure expression or super */ null && (useIsRealAccountNeededForCashier)));\n;// CONCATENATED MODULE: ../../hooks/src/useIsSystemMaintenance.ts\n\nvar useIsSystemMaintenance = function useIsSystemMaintenance() {\n  var _account_status$cashi;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var account_status = client.account_status;\n  var is_system_maintenance = ((_account_status$cashi = account_status.cashier_validation) === null || _account_status$cashi === void 0 ? void 0 : _account_status$cashi.some(function (validation) {\n    return validation === 'system_maintenance';\n  })) || false;\n  return is_system_maintenance;\n};\n/* harmony default export */ const src_useIsSystemMaintenance = ((/* unused pure expression or super */ null && (useIsSystemMaintenance)));\n;// CONCATENATED MODULE: ../../hooks/src/useLocalStorageData.ts\nfunction useLocalStorageData_slicedToArray(arr, i) { return useLocalStorageData_arrayWithHoles(arr) || useLocalStorageData_iterableToArrayLimit(arr, i) || useLocalStorageData_unsupportedIterableToArray(arr, i) || useLocalStorageData_nonIterableRest(); }\nfunction useLocalStorageData_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useLocalStorageData_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useLocalStorageData_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useLocalStorageData_arrayLikeToArray(o, minLen); }\nfunction useLocalStorageData_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useLocalStorageData_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useLocalStorageData_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n/**\n * Hook that manages a localStorage value as a React state.\n * @template T - The generic type of the localStorage value.\n * @param {string} key - The localStorage key.\n * @param {T} [fallback_value] - Optional fallback value if the key does not exist or has no value.\n * @returns - An array containing the current value, a function to update the value, and a function to clear the value.\n */\nvar useLocalStorageData = function useLocalStorageData(key, fallback_value) {\n  var _ref, _getLocalStorage;\n  var _React$useState = React.useState((_ref = (_getLocalStorage = getLocalStorage(key)) !== null && _getLocalStorage !== void 0 ? _getLocalStorage : fallback_value) !== null && _ref !== void 0 ? _ref : null),\n    _React$useState2 = useLocalStorageData_slicedToArray(_React$useState, 2),\n    data = _React$useState2[0],\n    setData = _React$useState2[1];\n  React.useEffect(function () {\n    localStorage.setItem(key, JSON.stringify(data));\n  }, [key, data]);\n  var clearData = function clearData() {\n    localStorage.removeItem(key);\n    setData(fallback_value !== null && fallback_value !== void 0 ? fallback_value : null);\n  };\n  return [data, setData, clearData];\n};\n/* harmony default export */ const src_useLocalStorageData = ((/* unused pure expression or super */ null && (useLocalStorageData)));\n;// CONCATENATED MODULE: ../../hooks/src/useNeedPOI.ts\n\nvar useNeedPOI = function useNeedPOI() {\n  var _client$account_statu;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var authentication = (_client$account_statu = client.account_status) === null || _client$account_statu === void 0 ? void 0 : _client$account_statu.authentication;\n  return authentication === null || authentication === void 0 ? void 0 : authentication.needs_verification.includes('identity');\n};\n/* harmony default export */ const src_useNeedPOI = ((/* unused pure expression or super */ null && (useNeedPOI)));\n;// CONCATENATED MODULE: ../../hooks/src/useOnrampVisible.ts\n\nvar useOnrampVisible = function useOnrampVisible() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_virtual = client.is_virtual,\n    is_crypto = client.is_crypto;\n  var is_onramp_visible = !is_virtual && is_crypto();\n  return is_onramp_visible;\n};\n/* harmony default export */ const src_useOnrampVisible = ((/* unused pure expression or super */ null && (useOnrampVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PAdvertiserPaymentMethods.ts\nfunction useP2PAdvertiserPaymentMethods_typeof(obj) { \"@babel/helpers - typeof\"; return useP2PAdvertiserPaymentMethods_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useP2PAdvertiserPaymentMethods_typeof(obj); }\nvar useP2PAdvertiserPaymentMethods_excluded = (/* unused pure expression or super */ null && ([\"mutate\"])),\n  useP2PAdvertiserPaymentMethods_excluded2 = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useP2PAdvertiserPaymentMethods_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useP2PAdvertiserPaymentMethods_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useP2PAdvertiserPaymentMethods_ownKeys(Object(source), !0).forEach(function (key) { useP2PAdvertiserPaymentMethods_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useP2PAdvertiserPaymentMethods_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useP2PAdvertiserPaymentMethods_defineProperty(obj, key, value) { key = useP2PAdvertiserPaymentMethods_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useP2PAdvertiserPaymentMethods_toPropertyKey(arg) { var key = useP2PAdvertiserPaymentMethods_toPrimitive(arg, \"string\"); return useP2PAdvertiserPaymentMethods_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useP2PAdvertiserPaymentMethods_toPrimitive(input, hint) { if (useP2PAdvertiserPaymentMethods_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useP2PAdvertiserPaymentMethods_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useP2PAdvertiserPaymentMethods_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useP2PAdvertiserPaymentMethods_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useP2PAdvertiserPaymentMethods_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar type_to_icon_mapper = {\n  bank: 'IcCashierBankTransfer',\n  other: 'IcCashierOther',\n  ewallet: 'IcCashierEwallet'\n};\n\n/** A custom hook to fetch, create, update, and delete p2p advertiser payment methods */\nvar useP2PAdvertiserPaymentMethods = function useP2PAdvertiserPaymentMethods() {\n  var invalidate = useInvalidateQuery();\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize;\n  var _useRequest = useRequest('p2p_advertiser_payment_methods', {\n      onSuccess: function onSuccess() {\n        return invalidate('p2p_advertiser_payment_methods');\n      }\n    }),\n    mutate = _useRequest.mutate,\n    mutate_rest = useP2PAdvertiserPaymentMethods_objectWithoutProperties(_useRequest, useP2PAdvertiserPaymentMethods_excluded);\n  var _useFetch = useFetch('p2p_advertiser_payment_methods', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = useP2PAdvertiserPaymentMethods_objectWithoutProperties(_useFetch, useP2PAdvertiserPaymentMethods_excluded2);\n\n  // Modify the response to add additional informations\n  var modified_data = useMemo(function () {\n    var p2p_advertiser_payment_methods = data === null || data === void 0 ? void 0 : data.p2p_advertiser_payment_methods;\n    if (!p2p_advertiser_payment_methods) return undefined;\n    return Object.keys(p2p_advertiser_payment_methods).map(function (key) {\n      var advertiser_payment_method = p2p_advertiser_payment_methods[key];\n      return useP2PAdvertiserPaymentMethods_objectSpread(useP2PAdvertiserPaymentMethods_objectSpread({}, advertiser_payment_method), {}, {\n        /** Icon for each payment method based on the type */\n        icon: type_to_icon_mapper[advertiser_payment_method.type],\n        /** The id of payment method */\n        id: key\n      });\n    });\n  }, [data]);\n  var create = useCallback(function (values) {\n    return mutate({\n      payload: {\n        create: [useP2PAdvertiserPaymentMethods_objectSpread({}, values)]\n      }\n    });\n  }, [mutate]);\n  var update = useCallback(function (id, values) {\n    return mutate({\n      payload: {\n        update: useP2PAdvertiserPaymentMethods_defineProperty({}, id, useP2PAdvertiserPaymentMethods_objectSpread({}, values))\n      }\n    });\n  }, [mutate]);\n  var delete_payment_method = useCallback(function (id) {\n    return mutate({\n      payload: {\n        \"delete\": [id]\n      }\n    });\n  }, [mutate]);\n  return useP2PAdvertiserPaymentMethods_objectSpread(useP2PAdvertiserPaymentMethods_objectSpread({\n    /** The list of p2p advertiser payment methods */\n    data: modified_data,\n    /** Sends a request to create new p2p advertiser payment method */\n    create: create,\n    /** Sends a request to update existing p2p advertiser payment method */\n    update: update,\n    /** Sends a request to delete existing p2p advertiser payment method */\n    \"delete\": delete_payment_method\n  }, rest), {}, {\n    mutation: mutate_rest\n  });\n};\n/* harmony default export */ const src_useP2PAdvertiserPaymentMethods = ((/* unused pure expression or super */ null && (useP2PAdvertiserPaymentMethods)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PAdvertList.ts\nfunction useP2PAdvertList_typeof(obj) { \"@babel/helpers - typeof\"; return useP2PAdvertList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useP2PAdvertList_typeof(obj); }\nvar useP2PAdvertList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useP2PAdvertList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useP2PAdvertList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useP2PAdvertList_ownKeys(Object(source), !0).forEach(function (key) { useP2PAdvertList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useP2PAdvertList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useP2PAdvertList_defineProperty(obj, key, value) { key = useP2PAdvertList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useP2PAdvertList_toPropertyKey(arg) { var key = useP2PAdvertList_toPrimitive(arg, \"string\"); return useP2PAdvertList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useP2PAdvertList_toPrimitive(input, hint) { if (useP2PAdvertList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useP2PAdvertList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useP2PAdvertList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useP2PAdvertList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useP2PAdvertList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/**\n * This custom hook returns available adverts for use with 'p2p_order_create' by calling 'p2p_advert_list' endpoint\n */\nvar useP2PAdvertList = function useP2PAdvertList(payload) {\n  var _data$p2p_advert_list2;\n  var _useExchangeRate = useExchangeRate(),\n    getRate = _useExchangeRate.getRate;\n  var _usePaginatedFetch = usePaginatedFetch('p2p_advert_list', {\n      payload: payload\n    }),\n    data = _usePaginatedFetch.data,\n    rest = useP2PAdvertList_objectWithoutProperties(_usePaginatedFetch, useP2PAdvertList_excluded);\n\n  // Add additional information to the 'p2p_advert_list' data\n  var modified_data = React.useMemo(function () {\n    var _data$p2p_advert_list;\n    var advert_list = data === null || data === void 0 ? void 0 : (_data$p2p_advert_list = data.p2p_advert_list) === null || _data$p2p_advert_list === void 0 ? void 0 : _data$p2p_advert_list.list;\n    if (!advert_list) return undefined;\n    return advert_list.map(function (advert) {\n      return useP2PAdvertList_objectSpread(useP2PAdvertList_objectSpread({}, advert), {}, {\n        /** Conversion rate from account currency to local currency, using current market rate if applicable. */\n        effective_rate: getRate(advert.local_currency || ''),\n        /** Determine if the rate is floating or fixed */\n        is_floating: advert.rate_type === 'float',\n        /** The advert creation time in epoch. */\n        created_time: new Date(advert.created_time)\n      });\n    });\n  }, [data === null || data === void 0 ? void 0 : (_data$p2p_advert_list2 = data.p2p_advert_list) === null || _data$p2p_advert_list2 === void 0 ? void 0 : _data$p2p_advert_list2.list, getRate]);\n  return useP2PAdvertList_objectSpread({\n    /** The 'p2p_advert_list' response. */\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const src_useP2PAdvertList = ((/* unused pure expression or super */ null && (useP2PAdvertList)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PNotificationCount.ts\nfunction useP2PNotificationCount_slicedToArray(arr, i) { return useP2PNotificationCount_arrayWithHoles(arr) || useP2PNotificationCount_iterableToArrayLimit(arr, i) || useP2PNotificationCount_unsupportedIterableToArray(arr, i) || useP2PNotificationCount_nonIterableRest(); }\nfunction useP2PNotificationCount_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useP2PNotificationCount_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useP2PNotificationCount_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useP2PNotificationCount_arrayLikeToArray(o, minLen); }\nfunction useP2PNotificationCount_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useP2PNotificationCount_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useP2PNotificationCount_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useP2PNotificationCount = function useP2PNotificationCount() {\n  var _p2p_settings$loginid;\n  var _useState = useState(JSON.parse(localStorage.getItem('p2p_settings') || '{}')),\n    _useState2 = useP2PNotificationCount_slicedToArray(_useState, 2),\n    p2p_settings = _useState2[0],\n    setP2PSettings = _useState2[1];\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var loginid = client.loginid;\n  var notifications = loginid ? (_p2p_settings$loginid = p2p_settings[loginid]) === null || _p2p_settings$loginid === void 0 ? void 0 : _p2p_settings$loginid.notifications : null;\n  useEffect(function () {\n    var onStorageChanged = function onStorageChanged() {\n      var data = localStorage.getItem('p2p_settings');\n      if (data) {\n        setP2PSettings(JSON.parse(data));\n      }\n    };\n    window.addEventListener('storage', onStorageChanged);\n    return function () {\n      window.removeEventListener('storage', onStorageChanged);\n    };\n  }, []);\n  var p2p_notification_count = (notifications === null || notifications === void 0 ? void 0 : notifications.filter(function (notification) {\n    return !notification.is_seen;\n  }).length) || 0;\n  return p2p_notification_count;\n};\n/* harmony default export */ const src_useP2PNotificationCount = ((/* unused pure expression or super */ null && (useP2PNotificationCount)));\n;// CONCATENATED MODULE: ../../hooks/src/useP2PPaymentMethods.ts\nfunction useP2PPaymentMethods_typeof(obj) { \"@babel/helpers - typeof\"; return useP2PPaymentMethods_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useP2PPaymentMethods_typeof(obj); }\nvar useP2PPaymentMethods_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction useP2PPaymentMethods_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useP2PPaymentMethods_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useP2PPaymentMethods_ownKeys(Object(source), !0).forEach(function (key) { useP2PPaymentMethods_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useP2PPaymentMethods_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useP2PPaymentMethods_defineProperty(obj, key, value) { key = useP2PPaymentMethods_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useP2PPaymentMethods_toPropertyKey(arg) { var key = useP2PPaymentMethods_toPrimitive(arg, \"string\"); return useP2PPaymentMethods_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useP2PPaymentMethods_toPrimitive(input, hint) { if (useP2PPaymentMethods_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useP2PPaymentMethods_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useP2PPaymentMethods_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useP2PPaymentMethods_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useP2PPaymentMethods_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\nvar useP2PPaymentMethods_type_to_icon_mapper = {\n  bank: 'IcCashierBankTransfer',\n  other: 'IcCashierOther',\n  ewallet: 'IcCashierEwallet'\n};\n\n/** A custom hook that return the list of P2P available payment methods */\nvar useP2PPaymentMethods = function useP2PPaymentMethods() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize;\n  var _useFetch = useFetch('p2p_payment_methods', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = useP2PPaymentMethods_objectWithoutProperties(_useFetch, useP2PPaymentMethods_excluded);\n\n  // Modify the data to add additional information.\n  var modified_data = React.useMemo(function () {\n    var p2p_payment_methods = data === null || data === void 0 ? void 0 : data.p2p_payment_methods;\n    if (!p2p_payment_methods) return undefined;\n    return Object.keys(p2p_payment_methods).map(function (key) {\n      var payment_method = p2p_payment_methods[key];\n      var fields = Object.keys(payment_method.fields).map(function (field_key) {\n        return payment_method.fields[field_key];\n      });\n      return useP2PPaymentMethods_objectSpread(useP2PPaymentMethods_objectSpread({}, payment_method), {}, {\n        /** Payment method field definitions. */\n        fields: fields,\n        /** Icon for each payment method based on the type */\n        icon: useP2PPaymentMethods_type_to_icon_mapper[payment_method.type],\n        /** Payment method id */\n        id: key\n      });\n    });\n  }, [data]);\n  return useP2PPaymentMethods_objectSpread({\n    data: modified_data\n  }, rest);\n};\n/* harmony default export */ const src_useP2PPaymentMethods = ((/* unused pure expression or super */ null && (useP2PPaymentMethods)));\n;// CONCATENATED MODULE: ../../hooks/src/usePaymentAgentList.ts\nfunction usePaymentAgentList_typeof(obj) { \"@babel/helpers - typeof\"; return usePaymentAgentList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaymentAgentList_typeof(obj); }\nvar usePaymentAgentList_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePaymentAgentList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaymentAgentList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaymentAgentList_ownKeys(Object(source), !0).forEach(function (key) { usePaymentAgentList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaymentAgentList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaymentAgentList_defineProperty(obj, key, value) { key = usePaymentAgentList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaymentAgentList_toPropertyKey(arg) { var key = usePaymentAgentList_toPrimitive(arg, \"string\"); return usePaymentAgentList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaymentAgentList_toPrimitive(input, hint) { if (usePaymentAgentList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaymentAgentList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaymentAgentList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaymentAgentList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaymentAgentList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar usePaymentAgentList = function usePaymentAgentList(currency) {\n  var _data$paymentagent_li;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var residence = client.residence;\n  var _useFetch = useFetch('paymentagent_list', {\n      payload: {\n        paymentagent_list: residence,\n        currency: currency\n      },\n      options: {\n        enabled: Boolean(residence)\n      }\n    }),\n    data = _useFetch.data,\n    rest = usePaymentAgentList_objectWithoutProperties(_useFetch, usePaymentAgentList_excluded);\n  return usePaymentAgentList_objectSpread({\n    data: data === null || data === void 0 ? void 0 : (_data$paymentagent_li = data.paymentagent_list) === null || _data$paymentagent_li === void 0 ? void 0 : _data$paymentagent_li.list\n  }, rest);\n};\n/* harmony default export */ const src_usePaymentAgentList = ((/* unused pure expression or super */ null && (usePaymentAgentList)));\n;// CONCATENATED MODULE: ../../hooks/src/usePaymentAgentTransferVisible.ts\nfunction usePaymentAgentTransferVisible_typeof(obj) { \"@babel/helpers - typeof\"; return usePaymentAgentTransferVisible_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePaymentAgentTransferVisible_typeof(obj); }\nvar usePaymentAgentTransferVisible_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction usePaymentAgentTransferVisible_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePaymentAgentTransferVisible_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePaymentAgentTransferVisible_ownKeys(Object(source), !0).forEach(function (key) { usePaymentAgentTransferVisible_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePaymentAgentTransferVisible_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePaymentAgentTransferVisible_defineProperty(obj, key, value) { key = usePaymentAgentTransferVisible_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePaymentAgentTransferVisible_toPropertyKey(arg) { var key = usePaymentAgentTransferVisible_toPrimitive(arg, \"string\"); return usePaymentAgentTransferVisible_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePaymentAgentTransferVisible_toPrimitive(input, hint) { if (usePaymentAgentTransferVisible_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePaymentAgentTransferVisible_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction usePaymentAgentTransferVisible_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = usePaymentAgentTransferVisible_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction usePaymentAgentTransferVisible_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\nvar usePaymentAgentTransferVisible = function usePaymentAgentTransferVisible() {\n  var _data$get_settings;\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize;\n  var _useFetch = useFetch('get_settings', {\n      options: {\n        enabled: is_authorize\n      }\n    }),\n    data = _useFetch.data,\n    rest = usePaymentAgentTransferVisible_objectWithoutProperties(_useFetch, usePaymentAgentTransferVisible_excluded);\n  var is_payment_agent_transfer_visible = Boolean(data === null || data === void 0 ? void 0 : (_data$get_settings = data.get_settings) === null || _data$get_settings === void 0 ? void 0 : _data$get_settings.is_authenticated_payment_agent);\n  return usePaymentAgentTransferVisible_objectSpread({\n    data: is_payment_agent_transfer_visible\n  }, rest);\n};\n/* harmony default export */ const src_usePaymentAgentTransferVisible = ((/* unused pure expression or super */ null && (usePaymentAgentTransferVisible)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformDemoAccount.ts\nfunction usePlatformDemoAccount_typeof(obj) { \"@babel/helpers - typeof\"; return usePlatformDemoAccount_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePlatformDemoAccount_typeof(obj); }\nfunction usePlatformDemoAccount_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePlatformDemoAccount_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePlatformDemoAccount_ownKeys(Object(source), !0).forEach(function (key) { usePlatformDemoAccount_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePlatformDemoAccount_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePlatformDemoAccount_defineProperty(obj, key, value) { key = usePlatformDemoAccount_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePlatformDemoAccount_toPropertyKey(arg) { var key = usePlatformDemoAccount_toPrimitive(arg, \"string\"); return usePlatformDemoAccount_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePlatformDemoAccount_toPrimitive(input, hint) { if (usePlatformDemoAccount_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePlatformDemoAccount_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n/**\n * we can use this hook to get the platform demo account.\n * it loops through the all of user's accounts, finds and returns demo account\n */\n\nvar usePlatformDemoAccount_usePlatformDemoAccount = function usePlatformDemoAccount() {\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var accounts = client.accounts;\n  var account_list = Object.keys(accounts).map(function (loginid) {\n    return usePlatformDemoAccount_objectSpread(usePlatformDemoAccount_objectSpread({}, accounts[loginid]), {}, {\n      loginid: loginid\n    });\n  });\n  var platform_demo_account = account_list.find(function (account) {\n    return account.is_virtual;\n  });\n  return platform_demo_account;\n};\n/* harmony default export */ const src_usePlatformDemoAccount = ((/* unused pure expression or super */ null && (usePlatformDemoAccount_usePlatformDemoAccount)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformRealAccounts.ts\nfunction usePlatformRealAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return usePlatformRealAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, usePlatformRealAccounts_typeof(obj); }\nfunction usePlatformRealAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction usePlatformRealAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? usePlatformRealAccounts_ownKeys(Object(source), !0).forEach(function (key) { usePlatformRealAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : usePlatformRealAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction usePlatformRealAccounts_defineProperty(obj, key, value) { key = usePlatformRealAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction usePlatformRealAccounts_toPropertyKey(arg) { var key = usePlatformRealAccounts_toPrimitive(arg, \"string\"); return usePlatformRealAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction usePlatformRealAccounts_toPrimitive(input, hint) { if (usePlatformRealAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (usePlatformRealAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n/**\n * we can use this hook to get all real accounts for both Eu and Non-Eu regions.\n * it loops through the accounts list and returns all real accounts\n */\n\nvar usePlatformRealAccounts_usePlatformRealAccounts = function usePlatformRealAccounts() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var accounts = client.accounts;\n  var is_eu_user = traders_hub.is_eu_user;\n  var account_list = Object.keys(accounts).map(function (loginid) {\n    return usePlatformRealAccounts_objectSpread(usePlatformRealAccounts_objectSpread({}, accounts[loginid]), {}, {\n      loginid: loginid\n    });\n  });\n  var platform_real_accounts = account_list.filter(function (account) {\n    var is_maltainvest = 'landing_company_shortcode' in account && account.landing_company_shortcode === 'maltainvest';\n    if (account.is_virtual) return false;\n    if (!is_eu_user) return !is_maltainvest;\n    return is_maltainvest;\n  });\n  return platform_real_accounts;\n};\n/* harmony default export */ const src_usePlatformRealAccounts = ((/* unused pure expression or super */ null && (usePlatformRealAccounts_usePlatformRealAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/usePlatformAccounts.ts\n\n\n\n/**\n * this is a wrapper hook for usePlatformDemoAccount and usePlatformRealAccounts\n * and it returns different platform accounts which are demo, and real\n */\nvar usePlatformAccounts_usePlatformAccounts = function usePlatformAccounts() {\n  var platform_demo_account = usePlatformDemoAccount();\n  var platform_real_accounts = usePlatformRealAccounts();\n  return {\n    demo: platform_demo_account,\n    real: platform_real_accounts\n  };\n};\n/* harmony default export */ const src_usePlatformAccounts = ((/* unused pure expression or super */ null && (usePlatformAccounts_usePlatformAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useTotalAssetCurrency.ts\n\n\nvar useTotalAssetCurrency_useRealTotalAssetCurrency = function useRealTotalAssetCurrency() {\n  var _useStore = useStore(),\n    client = _useStore.client,\n    traders_hub = _useStore.traders_hub;\n  var current_fiat_currency = client.current_fiat_currency,\n    is_crypto = client.is_crypto,\n    currency = client.currency,\n    default_currency = client.default_currency;\n  var is_eu_user = traders_hub.is_eu_user;\n  var _usePlatformAccounts = usePlatformAccounts(),\n    platform_real_accounts = _usePlatformAccounts.real;\n  if (!platform_real_accounts.length) return default_currency;\n  var non_crypto_accounts = platform_real_accounts.find(function (account) {\n    return !is_crypto(account.currency || 'USD');\n  });\n  if (non_crypto_accounts) return (non_crypto_accounts === null || non_crypto_accounts === void 0 ? void 0 : non_crypto_accounts.currency) || '';\n  var currency_if_is_crypto = is_eu_user ? current_fiat_currency || default_currency : platform_real_accounts[0].currency;\n  return is_crypto() ? currency_if_is_crypto : currency;\n};\n/* harmony default export */ const useTotalAssetCurrency = ((/* unused pure expression or super */ null && (useTotalAssetCurrency_useRealTotalAssetCurrency)));\n;// CONCATENATED MODULE: ../../hooks/src/useTotalAccountBalance.ts\n\n\n/**\n * we can use this hook to get the total balance of the given accounts list.\n * it loops through the accounts list and adds the balance of each account\n * to the total balance, it also converts the balance to the currency of the\n * first account in the list\n */\n\nvar useTotalAccountBalance = function useTotalAccountBalance(accounts) {\n  var total_assets_real_currency = useRealTotalAssetCurrency();\n  var _useExchangeRate = useExchangeRate(),\n    getRate = _useExchangeRate.getRate;\n  if (!accounts.length) return {\n    balance: 0,\n    currency: total_assets_real_currency\n  };\n  var balance = accounts.reduce(function (total, account) {\n    var base_rate = (account === null || account === void 0 ? void 0 : account.account_type) === 'demo' ? 1 : getRate(total_assets_real_currency || '');\n    var rate = getRate(account.currency || total_assets_real_currency || '');\n    var exchange_rate = base_rate / rate;\n    return total + (account.balance || 0) * exchange_rate;\n  }, 0);\n  return {\n    balance: balance,\n    currency: total_assets_real_currency\n  };\n};\n/* harmony default export */ const src_useTotalAccountBalance = ((/* unused pure expression or super */ null && (useTotalAccountBalance)));\n;// CONCATENATED MODULE: ../../hooks/src/useTransferBetweenAccounts.ts\nfunction src_useTransferBetweenAccounts_typeof(obj) { \"@babel/helpers - typeof\"; return src_useTransferBetweenAccounts_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, src_useTransferBetweenAccounts_typeof(obj); }\nvar src_useTransferBetweenAccounts_excluded = (/* unused pure expression or super */ null && ([\"data\"]));\nfunction src_useTransferBetweenAccounts_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction src_useTransferBetweenAccounts_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? src_useTransferBetweenAccounts_ownKeys(Object(source), !0).forEach(function (key) { src_useTransferBetweenAccounts_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : src_useTransferBetweenAccounts_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction src_useTransferBetweenAccounts_defineProperty(obj, key, value) { key = src_useTransferBetweenAccounts_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction src_useTransferBetweenAccounts_toPropertyKey(arg) { var key = src_useTransferBetweenAccounts_toPrimitive(arg, \"string\"); return src_useTransferBetweenAccounts_typeof(key) === \"symbol\" ? key : String(key); }\nfunction src_useTransferBetweenAccounts_toPrimitive(input, hint) { if (src_useTransferBetweenAccounts_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (src_useTransferBetweenAccounts_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useTransferBetweenAccounts_toConsumableArray(arr) { return useTransferBetweenAccounts_arrayWithoutHoles(arr) || useTransferBetweenAccounts_iterableToArray(arr) || useTransferBetweenAccounts_unsupportedIterableToArray(arr) || useTransferBetweenAccounts_nonIterableSpread(); }\nfunction useTransferBetweenAccounts_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useTransferBetweenAccounts_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useTransferBetweenAccounts_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useTransferBetweenAccounts_arrayLikeToArray(o, minLen); }\nfunction useTransferBetweenAccounts_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useTransferBetweenAccounts_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useTransferBetweenAccounts_arrayLikeToArray(arr); }\nfunction useTransferBetweenAccounts_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction src_useTransferBetweenAccounts_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = src_useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction src_useTransferBetweenAccounts_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\nvar src_useTransferBetweenAccounts_useTransferBetweenAccounts = function useTransferBetweenAccounts() {\n  var _useStore = useStore(),\n    ui = _useStore.ui;\n  var is_dark_mode_on = ui.is_dark_mode_on;\n  var active_wallet = useActiveWallet();\n  var _useWalletsList = useWalletsList(),\n    wallets = _useWalletsList.data;\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var trading_apps_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n  var _useExistingCFDAccoun = useExistingCFDAccounts(),\n    _useExistingCFDAccoun2 = _useExistingCFDAccoun.data,\n    derivez_accounts = _useExistingCFDAccoun2.derivez_accounts,\n    dxtrade_accounts = _useExistingCFDAccoun2.dxtrade_accounts,\n    mt5_accounts = _useExistingCFDAccoun2.mt5_accounts,\n    is_cfd_accounts_loaded = _useExistingCFDAccoun.isSuccess;\n  var _useFetch = useFetch('transfer_between_accounts', {\n      payload: {\n        accounts: 'all'\n      },\n      options: {\n        enabled: is_cfd_accounts_loaded\n      }\n    }),\n    data = _useFetch.data,\n    rest = src_useTransferBetweenAccounts_objectWithoutProperties(_useFetch, src_useTransferBetweenAccounts_excluded);\n  var modified_transfer_accounts = useMemo(function () {\n    var _data$accounts;\n    var all_linked_cfd_accounts = [].concat(useTransferBetweenAccounts_toConsumableArray(derivez_accounts), useTransferBetweenAccounts_toConsumableArray(dxtrade_accounts), useTransferBetweenAccounts_toConsumableArray(mt5_accounts));\n    var getAccountType = function getAccountType(is_demo, currency) {\n      var _getConfig;\n      if (is_demo) return 'demo';\n      return (_getConfig = getConfig(currency || '')) !== null && _getConfig !== void 0 && _getConfig.is_crypto ? 'crypto' : 'fiat';\n    };\n    var accounts = data === null || data === void 0 ? void 0 : (_data$accounts = data.accounts) === null || _data$accounts === void 0 ? void 0 : _data$accounts.map(function (account) {\n      var _getConfig2, _getConfig3;\n      return src_useTransferBetweenAccounts_objectSpread(src_useTransferBetweenAccounts_objectSpread({}, account), {}, {\n        active_wallet_icon: active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.icon,\n        balance: parseFloat(Number(account.balance).toFixed((_getConfig2 = getConfig(account.currency || '')) === null || _getConfig2 === void 0 ? void 0 : _getConfig2.fractional_digits)),\n        display_currency_code: (_getConfig3 = getConfig(account.currency || '')) === null || _getConfig3 === void 0 ? void 0 : _getConfig3.display_code,\n        is_demo: Boolean(account === null || account === void 0 ? void 0 : account.demo_account),\n        shortcode: active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.landing_company_name,\n        type: getAccountType(account.demo_account, account.currency)\n      });\n    });\n    return {\n      trading_accounts: (accounts === null || accounts === void 0 ? void 0 : accounts.reduce(function (trading_accounts, account) {\n        var _all_linked_cfd_accou, _mt5_accounts$find;\n        if (account.account_type === 'wallet') return trading_accounts;\n        if (!account.loginid) return trading_accounts;\n        var cfd_icon = (_all_linked_cfd_accou = all_linked_cfd_accounts.find(function (cfd_account) {\n          var _cfd_account$loginid;\n          return account.loginid && ((_cfd_account$loginid = cfd_account.loginid) === null || _cfd_account$loginid === void 0 ? void 0 : _cfd_account$loginid.includes(account.loginid));\n        })) === null || _all_linked_cfd_accou === void 0 ? void 0 : _all_linked_cfd_accou.transfer_icon;\n        trading_accounts[account.loginid] = src_useTransferBetweenAccounts_objectSpread(src_useTransferBetweenAccounts_objectSpread({}, account), {}, {\n          gradient_class: active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.gradient_card_class,\n          icon: account.account_type === 'trading' ? trading_apps_icon : cfd_icon\n        }, account.account_type === 'mt5' && {\n          mt5_market_type: mt5_accounts === null || mt5_accounts === void 0 ? void 0 : (_mt5_accounts$find = mt5_accounts.find(function (mt5_account) {\n            var _mt5_account$loginid;\n            return account.loginid && ((_mt5_account$loginid = mt5_account.loginid) === null || _mt5_account$loginid === void 0 ? void 0 : _mt5_account$loginid.includes(account.loginid));\n          })) === null || _mt5_accounts$find === void 0 ? void 0 : _mt5_accounts$find.market_type\n        });\n        return trading_accounts;\n      }, {})) || {},\n      wallet_accounts: (accounts === null || accounts === void 0 ? void 0 : accounts.reduce(function (wallet_accounts, wallet) {\n        if (wallet.account_type !== 'wallet') return wallet_accounts;\n        if (!wallet.loginid) return wallet_accounts;\n        var available_wallet = wallets === null || wallets === void 0 ? void 0 : wallets.find(function (acc) {\n          return acc.loginid === wallet.loginid;\n        });\n        wallet_accounts[wallet.loginid] = src_useTransferBetweenAccounts_objectSpread(src_useTransferBetweenAccounts_objectSpread({}, wallet), {}, {\n          icon: available_wallet === null || available_wallet === void 0 ? void 0 : available_wallet.icon,\n          gradient_class: available_wallet === null || available_wallet === void 0 ? void 0 : available_wallet.gradient_card_class\n        });\n        return wallet_accounts;\n      }, {})) || {}\n    };\n  }, [active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.gradient_card_class, active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.icon, active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.landing_company_name, data === null || data === void 0 ? void 0 : data.accounts, derivez_accounts, dxtrade_accounts, getConfig, mt5_accounts, trading_apps_icon, wallets]);\n  var modified_active_wallet = useMemo(function () {\n    return active_wallet !== null && active_wallet !== void 0 && active_wallet.loginid ? src_useTransferBetweenAccounts_objectSpread({}, modified_transfer_accounts.wallet_accounts[active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid]) : undefined;\n  }, [active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid, modified_transfer_accounts.wallet_accounts]);\n  return src_useTransferBetweenAccounts_objectSpread(src_useTransferBetweenAccounts_objectSpread({}, rest), {}, {\n    active_wallet: modified_active_wallet,\n    trading_accounts: modified_transfer_accounts.trading_accounts,\n    wallet_accounts: modified_transfer_accounts.wallet_accounts\n  });\n};\n/* harmony default export */ const src_useTransferBetweenAccounts = ((/* unused pure expression or super */ null && (src_useTransferBetweenAccounts_useTransferBetweenAccounts)));\n;// CONCATENATED MODULE: ../../hooks/src/useVerifyEmail.ts\nfunction useVerifyEmail_slicedToArray(arr, i) { return useVerifyEmail_arrayWithHoles(arr) || useVerifyEmail_iterableToArrayLimit(arr, i) || useVerifyEmail_unsupportedIterableToArray(arr, i) || useVerifyEmail_nonIterableRest(); }\nfunction useVerifyEmail_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useVerifyEmail_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useVerifyEmail_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useVerifyEmail_arrayLikeToArray(o, minLen); }\nfunction useVerifyEmail_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useVerifyEmail_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useVerifyEmail_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar RESEND_COUNTDOWN = 60;\n\n/**\n * @deprecated Please use useVerifyEmail from @deriv/api instead\n */\nvar useVerifyEmail_useVerifyEmail = function useVerifyEmail(type) {\n  var WS = useRequest('verify_email');\n  var counter = useCountdown({\n    from: RESEND_COUNTDOWN\n  });\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var _useState = useState(0),\n    _useState2 = useVerifyEmail_slicedToArray(_useState, 2),\n    sent_count = _useState2[0],\n    setSentCount = _useState2[1];\n  var send = useCallback(function (email) {\n    var request_email = email !== null && email !== void 0 ? email : client.email;\n    if (!request_email) return;\n    if (counter.is_running) return;\n    counter.reset();\n    counter.start();\n    setSentCount(function (count) {\n      return count + 1;\n    });\n    WS.mutate({\n      payload: {\n        verify_email: request_email,\n        type: type\n      }\n    });\n  }, [WS, client.email, counter, type]);\n  return {\n    is_loading: WS.isLoading,\n    error: WS.error,\n    data: WS.data,\n    counter: counter.count,\n    is_counter_running: counter.is_running,\n    sent_count: sent_count,\n    has_been_sent: sent_count !== 0,\n    send: send\n  };\n};\n/* harmony default export */ const src_useVerifyEmail = ((/* unused pure expression or super */ null && (useVerifyEmail_useVerifyEmail)));\n;// CONCATENATED MODULE: ../../hooks/src/useWalletMigration.ts\n\n\n\n\n/** A custom hook to get the status of wallet_migration API and to start/reset the migration process\n * @deprecated This hook is deprecated. Please use the hook from @deriv/api instead.\n */\nvar useWalletMigration_useWalletMigration = function useWalletMigration() {\n  var _data$wallet_migratio;\n  // TODO: delete it later, it's a temporary solution\n  // because we have to check for authorize from client store before doing API call\n  // This hook will be refactored later for subscribe when BE is ready\n  var _useStore = useStore(),\n    client = _useStore.client;\n  var is_authorize = client.is_authorize;\n  var invalidate = useInvalidateQuery();\n\n  /** Make a request to wallet_migration API and onSuccess it will invalidate the cached data  */\n  var _useRequest = useRequest('wallet_migration', {\n      onSuccess: function onSuccess() {\n        return invalidate('wallet_migration');\n      }\n    }),\n    mutate = _useRequest.mutate;\n  var _useAuthorize = useAuthorize(),\n    isSuccess = _useAuthorize.isSuccess;\n\n  /** Fetch the wallet_migration API and refetch it every second if the status is in_progress */\n  var _useFetch = useFetch('wallet_migration', {\n      payload: {\n        wallet_migration: 'state'\n      },\n      options: {\n        refetchInterval: function refetchInterval(response) {\n          var _response$wallet_migr;\n          return (response === null || response === void 0 ? void 0 : (_response$wallet_migr = response.wallet_migration) === null || _response$wallet_migr === void 0 ? void 0 : _response$wallet_migr.state) === 'in_progress' ? 500 : false;\n        },\n        // delete it later\n        enabled: is_authorize && isSuccess\n      }\n    }),\n    data = _useFetch.data;\n  var start_migration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'start'\n      }\n    });\n  }, [mutate]);\n  var reset_migration = useCallback(function () {\n    return mutate({\n      payload: {\n        wallet_migration: 'reset'\n      }\n    });\n  }, [mutate]);\n  var state = data === null || data === void 0 ? void 0 : (_data$wallet_migratio = data.wallet_migration) === null || _data$wallet_migratio === void 0 ? void 0 : _data$wallet_migratio.state;\n  return {\n    /** The status of the wallet_migration API */\n    state: state,\n    /** A boolean to check if the status is not_eligible */\n    is_ineligible: state === 'ineligible',\n    /** A boolean to check if the status is eligible */\n    is_eligible: state === 'eligible',\n    /** A boolean to check if the status is in_progress */\n    is_in_progress: state === 'in_progress',\n    /** A boolean to check if the status is completed */\n    is_migrated: state === 'migrated',\n    /** A boolean to check if the status is failed */\n    is_failed: state === 'failed',\n    /** Sends a request to wallet_migration API to start the migration process */\n    start_migration: start_migration,\n    /** Sends a request to wallet_migration API to reset the migration process */\n    reset_migration: reset_migration\n  };\n};\n/* harmony default export */ const src_useWalletMigration = ((/* unused pure expression or super */ null && (useWalletMigration_useWalletMigration)));\n;// CONCATENATED MODULE: ../../hooks/src/useWalletTransactions.ts\nfunction useWalletTransactions_typeof(obj) { \"@babel/helpers - typeof\"; return useWalletTransactions_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useWalletTransactions_typeof(obj); }\nfunction useWalletTransactions_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useWalletTransactions_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useWalletTransactions_ownKeys(Object(source), !0).forEach(function (key) { useWalletTransactions_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useWalletTransactions_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useWalletTransactions_defineProperty(obj, key, value) { key = useWalletTransactions_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useWalletTransactions_toPropertyKey(arg) { var key = useWalletTransactions_toPrimitive(arg, \"string\"); return useWalletTransactions_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useWalletTransactions_toPrimitive(input, hint) { if (useWalletTransactions_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useWalletTransactions_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useWalletTransactions_toConsumableArray(arr) { return useWalletTransactions_arrayWithoutHoles(arr) || useWalletTransactions_iterableToArray(arr) || useWalletTransactions_unsupportedIterableToArray(arr) || useWalletTransactions_nonIterableSpread(); }\nfunction useWalletTransactions_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useWalletTransactions_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useWalletTransactions_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useWalletTransactions_arrayLikeToArray(o, minLen); }\nfunction useWalletTransactions_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction useWalletTransactions_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return useWalletTransactions_arrayLikeToArray(arr); }\nfunction useWalletTransactions_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\nvar trading_accounts_display_prefixes = {\n  standard: 'Deriv Apps',\n  mt5: 'MT5',\n  dxtrade: 'Deriv X',\n  binary: 'Binary'\n};\nvar landing_company_display_shortcodes = {\n  svg: 'SVG',\n  malta: 'Malta'\n};\nvar useWalletTransactions = function useWalletTransactions(action_type) {\n  var _useStore = useStore(),\n    _useStore$client = _useStore.client,\n    loginid = _useStore$client.loginid,\n    shortcode = _useStore$client.landing_company_shortcode,\n    is_dark_mode_on = _useStore.ui.is_dark_mode_on;\n  var _useWalletsList = useWalletsList(),\n    wallets = _useWalletsList.data;\n  var current_wallet = useActiveWallet();\n  var _usePlatformAccounts = usePlatformAccounts(),\n    demo_platform_account = _usePlatformAccounts.demo;\n  var _usePlatformAccounts2 = usePlatformAccounts(),\n    real_platform_accounts = _usePlatformAccounts2.real;\n\n  // TODO remove these mocks when we're to switch to API data\n  demo_platform_account = {\n    account_category: 'trading',\n    account_type: 'standard',\n    currency: 'USD',\n    loginid: 'VRTCMOCK0001',\n    is_virtual: 1,\n    landing_company_shortcode: shortcode,\n    token: ''\n  };\n  real_platform_accounts.push({\n    account_category: 'trading',\n    account_type: 'standard',\n    currency: 'USD',\n    loginid: 'CRMOCK0001',\n    is_virtual: 0,\n    landing_company_shortcode: shortcode,\n    token: ''\n  });\n  if (wallets && current_wallet) wallets.push({\n    account_type: 'crypto',\n    balance: 0,\n    currency: 'BTC',\n    gradient_header_class: 'wallet-header__btc-bg',\n    gradient_card_class: \"wallet-card__btc-bg\".concat(is_dark_mode_on ? '--dark' : ''),\n    is_demo: !!current_wallet.is_virtual,\n    is_disabled: 0,\n    is_malta_wallet: false,\n    is_selected: false,\n    is_virtual: current_wallet.is_virtual,\n    landing_company_name: 'svg',\n    loginid: 'CRWMOCK00042',\n    currency_config: undefined,\n    icon: 'IcWalletCurrencyBtc',\n    wallet_currency_type: 'BTC'\n  });\n  var accounts = useMemo(function () {\n    return [demo_platform_account].concat(useWalletTransactions_toConsumableArray(real_platform_accounts));\n  }, [demo_platform_account, real_platform_accounts]);\n  var _useCurrencyConfig = useCurrencyConfig(),\n    getConfig = _useCurrencyConfig.getConfig;\n  var getTradingAccountName = useCallback(function (account_type, is_virtual, landing_company_shortcode) {\n    return \"\".concat(trading_accounts_display_prefixes[account_type], \" \").concat(is_virtual ? 'Demo' : \"(\".concat(landing_company_display_shortcodes[landing_company_shortcode], \")\"), \" account\");\n  }, []);\n\n  // TODO remove this mock when we're to switch to API data\n  var mock_transactions = current_wallet !== null && current_wallet !== void 0 && current_wallet.is_virtual ? [{\n    action_type: 'transfer',\n    amount: 5,\n    from: {\n      loginid: loginid\n    },\n    to: {\n      loginid: 'VRTCMOCK0001'\n    },\n    app_id: {},\n    balance_after: 9995,\n    transaction_id: 17494415484,\n    transaction_time: 1685942139\n  }, {\n    action_type: 'reset_balance',\n    amount: 350,\n    balance_after: 10000,\n    transaction_id: 13693003421,\n    transaction_time: 1685942138\n  }, {\n    action_type: 'transfer',\n    amount: 200,\n    from: {\n      loginid: 'VRTCMOCK0001'\n    },\n    to: {\n      loginid: loginid\n    },\n    balance_after: 9650,\n    transaction_id: 17494415483,\n    transaction_time: 1685855740\n  }, {\n    action_type: 'transfer',\n    amount: 550,\n    from: {\n      loginid: loginid\n    },\n    to: {\n      loginid: 'VRTCMOCK0001'\n    },\n    app_id: {},\n    balance_after: 9450,\n    transaction_id: 17494415482,\n    transaction_time: 1685855739\n  }, {\n    action_type: 'initial_fund',\n    amount: 10000,\n    balance_after: 10000,\n    transaction_id: 13693011401,\n    transaction_time: 1685855738\n  }] : [{\n    action_type: 'transfer',\n    amount: 5,\n    from: {\n      loginid: loginid\n    },\n    to: {\n      loginid: 'CRMOCK0001'\n    },\n    balance_after: 0,\n    transaction_id: 17494117541,\n    transaction_time: 1685942138\n  }, {\n    action_type: 'transfer',\n    amount: 20,\n    from: {\n      loginid: loginid\n    },\n    to: {\n      loginid: 'CRWMOCK00042'\n    },\n    balance_after: 5,\n    transaction_id: 17494415489,\n    transaction_time: 1685942137\n  }, {\n    action_type: 'deposit',\n    amount: 25,\n    balance_after: 25,\n    transaction_id: 17494415481,\n    transaction_time: 1685942136\n  }, {\n    action_type: 'withdrawal',\n    amount: 750,\n    balance_after: 0,\n    transaction_id: 17494415480,\n    transaction_time: 1685942135\n  }, {\n    action_type: 'transfer',\n    amount: 100,\n    from: {\n      loginid: 'CRMOCK0001'\n    },\n    to: {\n      loginid: loginid\n    },\n    balance_after: 750,\n    transaction_id: 17494415479,\n    transaction_time: 1685855738\n  }, {\n    action_type: 'transfer',\n    amount: 200,\n    from: {\n      loginid: 'CRWMOCK00042'\n    },\n    to: {\n      loginid: loginid\n    },\n    balance_after: 650,\n    transaction_id: 17494117541,\n    transaction_time: 1685855737\n  }, {\n    action_type: 'transfer',\n    amount: 550,\n    from: {\n      loginid: loginid\n    },\n    to: {\n      loginid: 'CRMOCK0001'\n    },\n    balance_after: 450,\n    transaction_id: 17494117540,\n    transaction_time: 1685855736\n  }, {\n    action_type: 'deposit',\n    amount: 1000,\n    balance_after: 1000,\n    transaction_id: 17494117539,\n    transaction_time: 1685769338\n  }];\n\n  // const { isLoading, isSuccess } = useFetch('statement', {\n  //     options: { keepPreviousData: true },\n  //     payload: { action_type: },\n  // });\n\n  // TODO: un-comment this code when we're to switch to API data\n  // const transactions = data?.statement?.transactions?.filter(\n  //     el =>\n  //         !!el.action_type &&\n  //         ['deposit', 'withdrawal', 'initial_fund', 'reset_balance', 'transfer'].includes(el.action_type)\n  // ) as TWalletTransaction[];\n\n  var transactions = useMemo(function () {\n    return mock_transactions.filter(function (el) {\n      return !action_type || el.action_type === action_type;\n    });\n  }, [action_type, mock_transactions]);\n  var getTransferAccountName = useCallback(function (other_account) {\n    if (other_account.account_category === 'wallet') {\n      var wallet = wallets === null || wallets === void 0 ? void 0 : wallets.find(function (el) {\n        return el.loginid === other_account.loginid;\n      });\n      return \"\".concat(wallet !== null && wallet !== void 0 && wallet.is_virtual ? 'Demo ' : '').concat(wallet === null || wallet === void 0 ? void 0 : wallet.currency, \" \", 'Wallet');\n    }\n    return getTradingAccountName(other_account.account_type, !!other_account.is_virtual, other_account.landing_company_shortcode);\n  }, [getTradingAccountName, wallets]);\n  var modified_transactions = useMemo(function () {\n    return wallets && current_wallet ? transactions.map(function (transaction) {\n      if (transaction.amount === undefined || transaction.balance_after === undefined || transaction.action_type === undefined) return null;\n      var account_category = 'wallet';\n      var account_type = current_wallet.account_type;\n      var account_name = \"\".concat(current_wallet.is_virtual ? 'Demo ' : '').concat(current_wallet.currency, \" \", 'Wallet');\n      var account_currency = current_wallet.currency;\n      var gradient_class = current_wallet.gradient_card_class;\n      var icon = getWalletCurrencyIcon(current_wallet.is_virtual ? 'demo' : current_wallet.currency || 'USD', is_dark_mode_on);\n      if (transaction.action_type === 'transfer') {\n        var _transaction$to, _transaction$from, _transaction$to2, _other_account$curren;\n        var other_loginid = ((_transaction$to = transaction.to) === null || _transaction$to === void 0 ? void 0 : _transaction$to.loginid) === loginid ? (_transaction$from = transaction.from) === null || _transaction$from === void 0 ? void 0 : _transaction$from.loginid : (_transaction$to2 = transaction.to) === null || _transaction$to2 === void 0 ? void 0 : _transaction$to2.loginid;\n        if (!other_loginid) return null;\n        var other_account = accounts.find(function (el) {\n          return (el === null || el === void 0 ? void 0 : el.loginid) === other_loginid;\n        });\n        if (!(other_account !== null && other_account !== void 0 && other_account.currency) || !(other_account !== null && other_account !== void 0 && other_account.account_type)) return null;\n        account_category = other_account.account_category || 'wallet';\n        account_currency = other_account.currency;\n        account_name = getTransferAccountName(other_account);\n        account_type = other_account.account_type;\n        gradient_class = \"wallet-card__\".concat(other_account.is_virtual === 1 ? 'demo' : other_account === null || other_account === void 0 ? void 0 : (_other_account$curren = other_account.currency) === null || _other_account$curren === void 0 ? void 0 : _other_account$curren.toLowerCase(), \"-bg\").concat(is_dark_mode_on ? '--dark' : '');\n        icon = getWalletCurrencyIcon(other_account.is_virtual ? 'demo' : other_account.currency || '', is_dark_mode_on, false);\n      }\n      var currency_config = getConfig(account_currency || '');\n      var is_crypto = currency_config === null || currency_config === void 0 ? void 0 : currency_config.is_crypto;\n      var icon_type = is_crypto || current_wallet.is_virtual ? 'crypto' : 'fiat';\n      return useWalletTransactions_objectSpread(useWalletTransactions_objectSpread({}, transaction), {}, {\n        account_category: account_category,\n        account_currency: account_currency,\n        account_name: account_name,\n        account_type: account_type,\n        gradient_class: gradient_class,\n        icon: icon,\n        icon_type: icon_type\n      });\n    }).filter(function (value) {\n      return value !== null;\n    }) : [];\n  }, [accounts, current_wallet, getConfig, getTransferAccountName, is_dark_mode_on, loginid, transactions, wallets]);\n  return {\n    transactions: modified_transactions,\n    isLoading: false,\n    isSuccess: true\n  };\n};\n/* harmony default export */ const src_useWalletTransactions = ((/* unused pure expression or super */ null && (useWalletTransactions)));\n;// CONCATENATED MODULE: ../../hooks/src/useWalletTransfer.ts\nfunction useWalletTransfer_typeof(obj) { \"@babel/helpers - typeof\"; return useWalletTransfer_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useWalletTransfer_typeof(obj); }\nfunction useWalletTransfer_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useWalletTransfer_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useWalletTransfer_ownKeys(Object(source), !0).forEach(function (key) { useWalletTransfer_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useWalletTransfer_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useWalletTransfer_defineProperty(obj, key, value) { key = useWalletTransfer_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useWalletTransfer_toPropertyKey(arg) { var key = useWalletTransfer_toPrimitive(arg, \"string\"); return useWalletTransfer_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useWalletTransfer_toPrimitive(input, hint) { if (useWalletTransfer_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useWalletTransfer_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useWalletTransfer_slicedToArray(arr, i) { return useWalletTransfer_arrayWithHoles(arr) || useWalletTransfer_iterableToArrayLimit(arr, i) || useWalletTransfer_unsupportedIterableToArray(arr, i) || useWalletTransfer_nonIterableRest(); }\nfunction useWalletTransfer_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useWalletTransfer_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useWalletTransfer_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useWalletTransfer_arrayLikeToArray(o, minLen); }\nfunction useWalletTransfer_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useWalletTransfer_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useWalletTransfer_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar useWalletTransfer = function useWalletTransfer() {\n  var _useTransferBetweenAc = useTransferBetweenAccounts(),\n    active_wallet = _useTransferBetweenAc.active_wallet,\n    trading_accounts = _useTransferBetweenAc.trading_accounts,\n    wallet_accounts = _useTransferBetweenAc.wallet_accounts,\n    is_accounts_loading = _useTransferBetweenAc.isLoading;\n  var _useState = useState(),\n    _useState2 = useWalletTransfer_slicedToArray(_useState, 2),\n    from_account = _useState2[0],\n    setFromAccount = _useState2[1];\n  var _useState3 = useState(),\n    _useState4 = useWalletTransfer_slicedToArray(_useState3, 2),\n    to_account = _useState4[0],\n    setToAccount = _useState4[1];\n  var to_account_list = useMemo(function () {\n    if (!(from_account !== null && from_account !== void 0 && from_account.loginid)) return {\n      trading_accounts: {},\n      wallet_accounts: {}\n    };\n    if (!(active_wallet !== null && active_wallet !== void 0 && active_wallet.loginid)) return {\n      trading_accounts: {},\n      wallet_accounts: {}\n    };\n    if ((from_account === null || from_account === void 0 ? void 0 : from_account.loginid) === (active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid)) {\n      return {\n        trading_accounts: trading_accounts,\n        wallet_accounts: Object.fromEntries(Object.entries(wallet_accounts).filter(function (_ref) {\n          var _ref2 = useWalletTransfer_slicedToArray(_ref, 1),\n            key = _ref2[0];\n          return (active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid) && !key.includes(active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid);\n        }))\n      };\n    }\n    return {\n      trading_accounts: {},\n      wallet_accounts: useWalletTransfer_defineProperty({}, active_wallet === null || active_wallet === void 0 ? void 0 : active_wallet.loginid, active_wallet)\n    };\n  }, [active_wallet, from_account === null || from_account === void 0 ? void 0 : from_account.loginid, trading_accounts, wallet_accounts]);\n\n  //this useEffect populates from/to accounts with updated values, if they were updated in the background\n  useEffect(function () {\n    setFromAccount(function (acc) {\n      return acc !== null && acc !== void 0 && acc.loginid ? useWalletTransfer_objectSpread(useWalletTransfer_objectSpread({}, trading_accounts), wallet_accounts)[acc === null || acc === void 0 ? void 0 : acc.loginid] : undefined;\n    });\n    setToAccount(function (acc) {\n      return acc !== null && acc !== void 0 && acc.loginid ? useWalletTransfer_objectSpread(useWalletTransfer_objectSpread({}, trading_accounts), wallet_accounts)[acc === null || acc === void 0 ? void 0 : acc.loginid] : undefined;\n    });\n  }, [setFromAccount, setToAccount, trading_accounts, wallet_accounts]);\n  return {\n    active_wallet: active_wallet,\n    is_accounts_loading: is_accounts_loading,\n    from_account: from_account,\n    to_account: to_account,\n    to_account_list: to_account_list,\n    transfer_accounts: {\n      trading_accounts: trading_accounts,\n      wallet_accounts: wallet_accounts\n    },\n    setFromAccount: setFromAccount,\n    setToAccount: setToAccount\n  };\n};\n/* harmony default export */ const src_useWalletTransfer = ((/* unused pure expression or super */ null && (useWalletTransfer)));\n;// CONCATENATED MODULE: ../../hooks/src/useStatesList.ts\nfunction useStatesList_typeof(obj) { \"@babel/helpers - typeof\"; return useStatesList_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useStatesList_typeof(obj); }\nvar useStatesList_excluded = [\"data\"];\nfunction useStatesList_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction useStatesList_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? useStatesList_ownKeys(Object(source), !0).forEach(function (key) { useStatesList_defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : useStatesList_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction useStatesList_defineProperty(obj, key, value) { key = useStatesList_toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction useStatesList_toPropertyKey(arg) { var key = useStatesList_toPrimitive(arg, \"string\"); return useStatesList_typeof(key) === \"symbol\" ? key : String(key); }\nfunction useStatesList_toPrimitive(input, hint) { if (useStatesList_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (useStatesList_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction useStatesList_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = useStatesList_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction useStatesList_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Custom hook to get states list for a particular country.\n * @returns an object with the states list and the options to manage API response.\n */\nvar useStatesList = function useStatesList(country) {\n  var _data$states_list;\n  var _useFetch = src_useQuery('states_list', {\n      // @ts-expect-error The `states_list` type from `@deriv/api-types` is not correct.\n      // The type should be `string`, but it's an alias to string type.\n      payload: {\n        states_list: country\n      }\n    }),\n    data = _useFetch.data,\n    rest = useStatesList_objectWithoutProperties(_useFetch, useStatesList_excluded);\n  return useStatesList_objectSpread(useStatesList_objectSpread({}, rest), {}, {\n    data: (_data$states_list = data === null || data === void 0 ? void 0 : data.states_list) !== null && _data$states_list !== void 0 ? _data$states_list : []\n  });\n};\n/* harmony default export */ const src_useStatesList = (useStatesList);\n;// CONCATENATED MODULE: ../../hooks/src/useIsClientHighRiskForMT5.ts\n\n\n/**\n * Checks if a client is considered high risk for MT5 trading based on their available trading accounts.\n * @returns `true` if the client is high risk for MT5 trading, `false` otherwise.\n */\nvar useIsClientHighRiskForMT5_useIsClientHighRiskForMT5 = function useIsClientHighRiskForMT5() {\n  var _useStore = useStore(),\n    trading_platform_available_accounts = _useStore.client.trading_platform_available_accounts;\n  var financial_available_accounts = trading_platform_available_accounts.filter(function (available_account) {\n    return available_account.market_type === 'financial';\n  });\n  var synthetic_available_accounts = trading_platform_available_accounts.filter(function (available_account) {\n    return available_account.market_type === 'gaming';\n  });\n  return financial_available_accounts.length === 1 && financial_available_accounts.every(function (acc) {\n    return acc.shortcode === 'svg';\n  }) && synthetic_available_accounts.length === 1 && synthetic_available_accounts.every(function (acc) {\n    return acc.shortcode === 'svg';\n  });\n};\n/* harmony default export */ const src_useIsClientHighRiskForMT5 = ((/* unused pure expression or super */ null && (useIsClientHighRiskForMT5_useIsClientHighRiskForMT5)));\n;// CONCATENATED MODULE: ../../hooks/src/useCFDCanGetMoreMT5Accounts.ts\n\n\n\nvar ACCOUNT_TYPES = (/* unused pure expression or super */ null && (['synthetic', 'financial', 'all']));\n\n/**\n * Custom hook to determine whether a client is eligible to get more MT5 CFD accounts.\n * @returns `true` if the client is eligible to get more MT5 CFD accounts, false otherwise.\n */\nvar useCFDCanGetMoreMT5Accounts = function useCFDCanGetMoreMT5Accounts() {\n  var _useStore = useStore(),\n    isEligibleForMoreRealMt5 = _useStore.client.isEligibleForMoreRealMt5,\n    _useStore$traders_hub = _useStore.traders_hub,\n    is_eu_user = _useStore$traders_hub.is_eu_user,\n    is_real = _useStore$traders_hub.is_real,\n    cfd = _useStore.modules.cfd;\n  var is_high_risk_client_for_mt5 = useIsClientHighRiskForMT5();\n\n  /**\n   * Check if the client has a specific type of MT5 CFD account.\n   */\n  var hasCFDAccount = function hasCFDAccount(type) {\n    var current_list_keys = Object.keys(cfd.current_list);\n    return current_list_keys.some(function (key) {\n      return key.startsWith(\"\".concat(CFD_PLATFORMS.MT5, \".real.\").concat(type));\n    });\n  };\n  return is_real && !is_eu_user && ACCOUNT_TYPES.some(function (type) {\n    return hasCFDAccount(type);\n  }) && ACCOUNT_TYPES.some(function (type) {\n    return isEligibleForMoreRealMt5(type);\n  }) && !is_high_risk_client_for_mt5;\n};\n/* harmony default export */ const src_useCFDCanGetMoreMT5Accounts = ((/* unused pure expression or super */ null && (useCFDCanGetMoreMT5Accounts)));\n// EXTERNAL MODULE: ../../../node_modules/@binary-com/binary-document-uploader/DocumentUploader.js\nvar binary_document_uploader_DocumentUploader = __webpack_require__(\"../../../node_modules/@binary-com/binary-document-uploader/DocumentUploader.js\");\n;// CONCATENATED MODULE: ../../hooks/src/useFileUploader.ts\nfunction useFileUploader_typeof(obj) { \"@babel/helpers - typeof\"; return useFileUploader_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, useFileUploader_typeof(obj); }\nfunction useFileUploader_regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ useFileUploader_regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == useFileUploader_typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction useFileUploader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction useFileUploader_asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { useFileUploader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { useFileUploader_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction useFileUploader_slicedToArray(arr, i) { return useFileUploader_arrayWithHoles(arr) || useFileUploader_iterableToArrayLimit(arr, i) || useFileUploader_unsupportedIterableToArray(arr, i) || useFileUploader_nonIterableRest(); }\nfunction useFileUploader_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction useFileUploader_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return useFileUploader_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return useFileUploader_arrayLikeToArray(o, minLen); }\nfunction useFileUploader_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction useFileUploader_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction useFileUploader_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\nvar fileReadErrorMessage = function fileReadErrorMessage(filename) {\n  return \"Unable to read file \".concat(filename);\n};\n\n/**\n * Custom hook to handle file uploading with the binary-document-uploader package\n */\nvar useFileUploader = function useFileUploader() {\n  var _useState = useState(null),\n    _useState2 = useFileUploader_slicedToArray(_useState, 2),\n    error = _useState2[0],\n    setError = _useState2[1];\n  var uploader_instance = useMemo(function () {\n    return new DocumentUploader({\n      connection: WS.getSocket()\n    });\n  }, []);\n  var upload = useCallback( /*#__PURE__*/function () {\n    var _ref = useFileUploader_asyncToGenerator( /*#__PURE__*/useFileUploader_regeneratorRuntime().mark(function _callee2(files, settings, onError) {\n      return useFileUploader_regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (files !== null && files !== void 0 && files.length) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", Promise.reject(new Error('No files selected')));\n            case 2:\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var is_any_file_error = false;\n                var file_error = null;\n                useFileUploader_asyncToGenerator( /*#__PURE__*/useFileUploader_regeneratorRuntime().mark(function _callee() {\n                  var compressed_files, processed_files, _file_error, response;\n                  return useFileUploader_regeneratorRuntime().wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          _context.prev = 0;\n                          _context.next = 3;\n                          return compressImageFiles(files);\n                        case 3:\n                          compressed_files = _context.sent;\n                          _context.next = 6;\n                          return readFiles(compressed_files, fileReadErrorMessage, settings !== null && settings !== void 0 ? settings : {});\n                        case 6:\n                          processed_files = _context.sent;\n                          processed_files.forEach(function (file) {\n                            if (file && 'message' in file) {\n                              is_any_file_error = true;\n                              file_error = file.message;\n                              reject(file.message);\n                            }\n                          });\n                          if (!(is_any_file_error || !processed_files.length)) {\n                            _context.next = 11;\n                            break;\n                          }\n                          onError === null || onError === void 0 ? void 0 : onError();\n                          return _context.abrupt(\"return\", reject(new Error((_file_error = file_error) !== null && _file_error !== void 0 ? _file_error : 'Something went wrong!')));\n                        case 11:\n                          _context.next = 13;\n                          return uploader_instance.upload(processed_files[0]);\n                        case 13:\n                          response = _context.sent;\n                          resolve(response);\n                          _context.next = 21;\n                          break;\n                        case 17:\n                          _context.prev = 17;\n                          _context.t0 = _context[\"catch\"](0);\n                          setError(_context.t0);\n                          reject(_context.t0);\n                        case 21:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[0, 17]]);\n                }))();\n              }));\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return function (_x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [uploader_instance]);\n  return {\n    /**\n     * Error message from the file uploader\n     */\n    error: error,\n    /**\n     * Uploads a file to the server with the binary-document-uploader package after compressing and reading the file with meta data\n     */\n    upload: upload,\n    /**\n     * Instance of the binary-document-uploader\n     */\n    uploader_instance: uploader_instance\n  };\n};\n/* harmony default export */ const src_useFileUploader = ((/* unused pure expression or super */ null && (useFileUploader)));\n;// CONCATENATED MODULE: ../../hooks/src/index.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// EXTERNAL MODULE: external \"@deriv/translations\"\nvar translations_ = __webpack_require__(\"@deriv/translations\");\n;// CONCATENATED MODULE: ./Components/forms/form-fields/form-input-field.tsx\nvar form_input_field_excluded = [\"name\", \"warn\"];\nfunction form_input_field_extends() { form_input_field_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return form_input_field_extends.apply(this, arguments); }\nfunction form_input_field_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = form_input_field_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction form_input_field_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n/**\n * FormInputField is a wrapper around Input that can be used with Formik.\n * @name FormInputField\n * @param name - Name of the field\n * @param [optional] - Whether the field is optional\n * @param [warn] - Display a warning message\n * @param [props] - Other props to pass to Input\n * @returns ReactNode\n */\nvar FormInputField = function FormInputField(_ref) {\n  var name = _ref.name,\n    warn = _ref.warn,\n    rest = form_input_field_objectWithoutProperties(_ref, form_input_field_excluded);\n  return /*#__PURE__*/external_react_default().createElement(formik_esm_Field, {\n    name: name\n  }, function (_ref2) {\n    var field = _ref2.field,\n      _ref2$form = _ref2.form,\n      errors = _ref2$form.errors,\n      touched = _ref2$form.touched;\n    return /*#__PURE__*/external_react_default().createElement(components_.Input, form_input_field_extends({}, field, rest, {\n      type: \"text\",\n      autoComplete: \"off\",\n      error: touched[field.name] && errors[field.name] ? errors[field.name] : undefined,\n      warn: warn\n    }));\n  });\n};\n/* harmony default export */ const form_input_field = (FormInputField);\n;// CONCATENATED MODULE: ./Components/forms/form-fields/date-of-birth-field.tsx\nvar date_of_birth_field_excluded = (/* unused pure expression or super */ null && ([\"name\", \"portal_id\"]));\nfunction date_of_birth_field_extends() { date_of_birth_field_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return date_of_birth_field_extends.apply(this, arguments); }\nfunction date_of_birth_field_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = date_of_birth_field_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction date_of_birth_field_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n/**\n * DateOfBirthField is a wrapper around DateOfBirthPicker that can be used with Formik.\n * @name DateOfBirthField\n * @param name - Name of the field\n * @param portal_id - Portal ID\n * @param [props] - Other props to pass to DateOfBirthPicker\n * @returns {React.ReactNode}\n */\nvar DateOfBirthField = function DateOfBirthField(_ref) {\n  var name = _ref.name,\n    portal_id = _ref.portal_id,\n    rest = date_of_birth_field_objectWithoutProperties(_ref, date_of_birth_field_excluded);\n  return /*#__PURE__*/React.createElement(Field, {\n    name: name\n  }, function (_ref2) {\n    var field = _ref2.field,\n      setFieldValue = _ref2.form.setFieldValue,\n      _ref2$meta = _ref2.meta,\n      error = _ref2$meta.error,\n      touched = _ref2$meta.touched;\n    return /*#__PURE__*/React.createElement(DateOfBirthPicker, date_of_birth_field_extends({}, rest, field, {\n      error: touched ? error : undefined,\n      name: name,\n      onChange: function onChange(_ref3) {\n        var target = _ref3.target;\n        return setFieldValue(name, target !== null && target !== void 0 && target.value ? toMoment(target.value).format('YYYY-MM-DD') : '', true);\n      },\n      portal_id: portal_id\n    }));\n  });\n};\n/* harmony default export */ const date_of_birth_field = ((/* unused pure expression or super */ null && (DateOfBirthField)));\n;// CONCATENATED MODULE: ./Components/forms/form-fields/index.ts\n\n\n\n;// CONCATENATED MODULE: ./Components/forms/scroll-to-field-with-error.tsx\nfunction scroll_to_field_with_error_toConsumableArray(arr) { return scroll_to_field_with_error_arrayWithoutHoles(arr) || scroll_to_field_with_error_iterableToArray(arr) || scroll_to_field_with_error_unsupportedIterableToArray(arr) || scroll_to_field_with_error_nonIterableSpread(); }\nfunction scroll_to_field_with_error_nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction scroll_to_field_with_error_iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction scroll_to_field_with_error_arrayWithoutHoles(arr) { if (Array.isArray(arr)) return scroll_to_field_with_error_arrayLikeToArray(arr); }\nfunction scroll_to_field_with_error_slicedToArray(arr, i) { return scroll_to_field_with_error_arrayWithHoles(arr) || scroll_to_field_with_error_iterableToArrayLimit(arr, i) || scroll_to_field_with_error_unsupportedIterableToArray(arr, i) || scroll_to_field_with_error_nonIterableRest(); }\nfunction scroll_to_field_with_error_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction scroll_to_field_with_error_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return scroll_to_field_with_error_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return scroll_to_field_with_error_arrayLikeToArray(o, minLen); }\nfunction scroll_to_field_with_error_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction scroll_to_field_with_error_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction scroll_to_field_with_error_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\nvar ScrollToFieldWithError = function ScrollToFieldWithError(_ref) {\n  var fields_to_scroll_top = _ref.fields_to_scroll_top,\n    fields_to_scroll_bottom = _ref.fields_to_scroll_bottom,\n    _ref$should_recollect = _ref.should_recollect_inputs_names,\n    should_recollect_inputs_names = _ref$should_recollect === void 0 ? false : _ref$should_recollect;\n  var _React$useState = external_react_default().useState([]),\n    _React$useState2 = scroll_to_field_with_error_slicedToArray(_React$useState, 2),\n    all_page_inputs_names = _React$useState2[0],\n    setAllPageInputsNames = _React$useState2[1];\n  var _useFormikContext = useFormikContext(),\n    errors = _useFormikContext.errors,\n    isSubmitting = _useFormikContext.isSubmitting;\n  var scrollToElement = function scrollToElement(element_name) {\n    var _ref2, _el$parentElement;\n    var block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'center';\n    if (!element_name) return;\n    var el = document.querySelector(\"[name=\\\"\".concat(element_name, \"\\\"]\"));\n    (_ref2 = (_el$parentElement = el === null || el === void 0 ? void 0 : el.parentElement) !== null && _el$parentElement !== void 0 ? _el$parentElement : el) === null || _ref2 === void 0 ? void 0 : _ref2.scrollIntoView({\n      behavior: 'smooth',\n      block: block\n    });\n    if ((el === null || el === void 0 ? void 0 : el.type) !== 'radio') el === null || el === void 0 ? void 0 : el.focus();\n  };\n  external_react_default().useEffect(function () {\n    var inputs = scroll_to_field_with_error_toConsumableArray(document.querySelectorAll('input, select'));\n    setAllPageInputsNames(inputs.map(function (input) {\n      return input.name;\n    }));\n  }, [should_recollect_inputs_names]);\n  external_react_default().useEffect(function () {\n    var current_error_field_name = all_page_inputs_names.find(function (input_name) {\n      return Object.hasOwn(errors, input_name);\n    }) || '';\n    if (fields_to_scroll_top !== null && fields_to_scroll_top !== void 0 && fields_to_scroll_top.includes(current_error_field_name)) {\n      scrollToElement(current_error_field_name, 'start');\n    } else if (fields_to_scroll_bottom !== null && fields_to_scroll_bottom !== void 0 && fields_to_scroll_bottom.includes(current_error_field_name)) {\n      scrollToElement(current_error_field_name, 'end');\n    } else {\n      scrollToElement(current_error_field_name);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isSubmitting]);\n  return null;\n};\n/* harmony default export */ const scroll_to_field_with_error = (ScrollToFieldWithError);\n;// CONCATENATED MODULE: ./Components/real-account-signup/helpers/utils.ts\n/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values) {\n  var warnings = {};\n  var errors = {};\n  Object.keys(values).forEach(function (field) {\n    var item = values[field];\n    if (Array.isArray(item)) {\n      if (item[0] === 'warn') {\n        warnings[field] = item[1];\n      } else if (item[0] === 'error') {\n        errors[field] = item[1];\n      }\n    }\n  });\n  return {\n    warnings: warnings,\n    errors: errors\n  };\n}\n\n;// CONCATENATED MODULE: ./Components/address-details/address-details.tsx\nvar address_details_excluded = [\"getCurrentStep\", \"onSave\", \"onCancel\", \"goToNextStep\", \"goToPreviousStep\", \"validate\", \"onSubmit\", \"is_gb_residence\", \"disabled_items\", \"has_real_account\"];\nfunction address_details_extends() { address_details_extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return address_details_extends.apply(this, arguments); }\nfunction address_details_slicedToArray(arr, i) { return address_details_arrayWithHoles(arr) || address_details_iterableToArrayLimit(arr, i) || address_details_unsupportedIterableToArray(arr, i) || address_details_nonIterableRest(); }\nfunction address_details_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction address_details_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return address_details_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return address_details_arrayLikeToArray(o, minLen); }\nfunction address_details_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction address_details_iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0) { ; } } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction address_details_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction address_details_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = address_details_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction address_details_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Component to display address details form\n * @name AddressDetails\n * @param getCurrentStep - function to get current step\n * @param states_list - array of states for the selected residence country\n * @param onSave - function to save form values\n * @param onCancel - function to cancel form values\n * @param goToNextStep - function to go to next step\n * @param goToPreviousStep - function to go to previous step\n * @param validate - function to validate form values\n * @param onSubmit - function to submit form values\n * @param is_gb_residence - is residence Great Britan\n * @param value - form values\n * @param disabled_items - array of disabled fields\n * @param has_real_account - has real account\n * @returns react node\n */\nvar AddressDetails = observer(function (_ref) {\n  var getCurrentStep = _ref.getCurrentStep,\n    onSave = _ref.onSave,\n    onCancel = _ref.onCancel,\n    goToNextStep = _ref.goToNextStep,\n    goToPreviousStep = _ref.goToPreviousStep,\n    validate = _ref.validate,\n    onSubmit = _ref.onSubmit,\n    is_gb_residence = _ref.is_gb_residence,\n    disabled_items = _ref.disabled_items,\n    has_real_account = _ref.has_real_account,\n    props = address_details_objectWithoutProperties(_ref, address_details_excluded);\n  var _React$useState = external_react_default().useState(''),\n    _React$useState2 = address_details_slicedToArray(_React$useState, 2),\n    address_state_to_display = _React$useState2[0],\n    setAddressStateToDisplay = _React$useState2[1];\n  var _useStore = src_useStore(),\n    ui = _useStore.ui,\n    residence = _useStore.client.residence;\n  var is_desktop = ui.is_desktop,\n    is_mobile = ui.is_mobile;\n  var _useStatesList = src_useStatesList(residence),\n    states_list = _useStatesList.data,\n    isFetched = _useStatesList.isFetched;\n  var handleCancel = function handleCancel(values) {\n    var current_step = ((getCurrentStep === null || getCurrentStep === void 0 ? void 0 : getCurrentStep()) || 1) - 1;\n    onSave(current_step, values);\n    onCancel(current_step, goToPreviousStep);\n  };\n  var handleValidate = function handleValidate(values) {\n    var _splitValidationResul = splitValidationResultTypes(validate(values)),\n      errors = _splitValidationResul.errors;\n    return errors;\n  };\n  var handleSubmitData = function handleSubmitData(values, actions) {\n    if (values.address_state && states_list.length) {\n      values.address_state = address_state_to_display ? (0,shared_.getLocation)(states_list, address_state_to_display, 'value') : (0,shared_.getLocation)(states_list, values.address_state, 'value');\n    }\n    onSubmit(((getCurrentStep === null || getCurrentStep === void 0 ? void 0 : getCurrentStep()) || 1) - 1, values, actions.setSubmitting, goToNextStep);\n  };\n  return /*#__PURE__*/external_react_default().createElement(Formik, {\n    initialValues: props.value,\n    validate: handleValidate,\n    validateOnMount: true,\n    onSubmit: handleSubmitData\n  }, function (_ref2) {\n    var handleSubmit = _ref2.handleSubmit,\n      isSubmitting = _ref2.isSubmitting,\n      values = _ref2.values,\n      setFieldValue = _ref2.setFieldValue,\n      handleChange = _ref2.handleChange,\n      setFieldTouched = _ref2.setFieldTouched;\n    return /*#__PURE__*/external_react_default().createElement(components_.AutoHeightWrapper, {\n      default_height: 350,\n      height_offset: is_desktop ? 80 : null\n    }, function (_ref3) {\n      var _props$value, _props$value2, _props$value3, _props$value6, _props$value7;\n      var setRef = _ref3.setRef,\n        height = _ref3.height;\n      return (\n        /*#__PURE__*/\n        //noValidate here is for skipping default browser validation\n        external_react_default().createElement(\"form\", {\n          ref: setRef,\n          onSubmit: handleSubmit,\n          noValidate: true\n        }, /*#__PURE__*/external_react_default().createElement(components_.Div100vhContainer, {\n          className: \"details-form\",\n          height_offset: \"90px\",\n          is_disabled: is_desktop\n        }, /*#__PURE__*/external_react_default().createElement(scroll_to_field_with_error, null), /*#__PURE__*/external_react_default().createElement(components_.Text, {\n          as: \"p\",\n          align: \"left\",\n          size: \"xxs\",\n          line_height: \"l\",\n          className: \"details-form__description\"\n        }, /*#__PURE__*/external_react_default().createElement(\"strong\", null, /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"Only use an address for which you have proof of residence - \"\n        })), /*#__PURE__*/external_react_default().createElement(translations_.Localize, {\n          i18n_default_text: \"a recent utility bill (e.g. electricity, water, gas, landline, or internet), bank statement, or government-issued letter with your name and this address.\"\n        })), /*#__PURE__*/external_react_default().createElement(components_.ThemedScrollbars, {\n          height: height,\n          className: \"details-form__scrollbar\"\n        }, /*#__PURE__*/external_react_default().createElement(\"div\", {\n          className: classnames_default()('details-form__elements', 'address-details-form ')\n        }, /*#__PURE__*/external_react_default().createElement(form_input_field, {\n          name: \"address_line_1\",\n          required: true,\n          label: (0,translations_.localize)('First line of address*'),\n          maxLength: 255,\n          placeholder: (0,translations_.localize)('First line of address'),\n          disabled: disabled_items.includes('address_line_1') || !!((_props$value = props.value) !== null && _props$value !== void 0 && _props$value.address_line_1) && has_real_account\n        }), /*#__PURE__*/external_react_default().createElement(form_input_field, {\n          name: \"address_line_2\",\n          label: (0,translations_.localize)('Second line of address'),\n          maxLength: 255,\n          placeholder: (0,translations_.localize)('Second line of address'),\n          disabled: disabled_items.includes('address_line_2') || !!((_props$value2 = props.value) !== null && _props$value2 !== void 0 && _props$value2.address_line_2) && has_real_account\n        }), /*#__PURE__*/external_react_default().createElement(form_input_field, {\n          name: \"address_city\",\n          required: true,\n          label: (0,translations_.localize)('Town/City*'),\n          placeholder: (0,translations_.localize)('Town/City'),\n          disabled: disabled_items.includes('address_city') || !!((_props$value3 = props.value) !== null && _props$value3 !== void 0 && _props$value3.address_city) && has_real_account\n        }), !isFetched && /*#__PURE__*/external_react_default().createElement(\"div\", {\n          className: \"details-form__loader\"\n        }, /*#__PURE__*/external_react_default().createElement(components_.Loading, {\n          is_fullscreen: false\n        })), (states_list === null || states_list === void 0 ? void 0 : states_list.length) > 0 ? /*#__PURE__*/external_react_default().createElement(formik_esm_Field, {\n          name: \"address_state\"\n        }, function (_ref4) {\n          var _props$value4, _props$value5;\n          var field = _ref4.field;\n          return /*#__PURE__*/external_react_default().createElement((external_react_default()).Fragment, null, /*#__PURE__*/external_react_default().createElement(components_.DesktopWrapper, null, /*#__PURE__*/external_react_default().createElement(components_.Autocomplete, address_details_extends({}, field, address_state_to_display && {\n            value: address_state_to_display\n          }, {\n            \"data-lpignore\": \"true\",\n            autoComplete: \"new-password\" // prevent chrome autocomplete\n            ,\n            type: \"text\",\n            label: (0,translations_.localize)('State/Province'),\n            list_items: states_list,\n            onItemSelection: function onItemSelection(_ref5) {\n              var value = _ref5.value,\n                text = _ref5.text;\n              setFieldValue('address_state', value ? text : '', true);\n              setAddressStateToDisplay('');\n            },\n            list_portal_id: \"modal_root\",\n            disabled: disabled_items.includes('address_state') || ((_props$value4 = props.value) === null || _props$value4 === void 0 ? void 0 : _props$value4.address_state) && has_real_account\n          }))), /*#__PURE__*/external_react_default().createElement(components_.MobileWrapper, null, /*#__PURE__*/external_react_default().createElement(components_.SelectNative, {\n            placeholder: (0,translations_.localize)('Please select'),\n            label: (0,translations_.localize)('State/Province'),\n            value: address_state_to_display || values.address_state,\n            list_items: states_list,\n            use_text: true,\n            onChange: function onChange(e) {\n              setFieldValue('address_state', e.target.value, true);\n              setAddressStateToDisplay('');\n            },\n            disabled: disabled_items.includes('address_state') || !!((_props$value5 = props.value) !== null && _props$value5 !== void 0 && _props$value5.address_state) && has_real_account\n          })));\n        }) :\n        /*#__PURE__*/\n        // Fallback to input field when states list is empty / unavailable for country\n        external_react_default().createElement(form_input_field, {\n          name: \"address_state\",\n          label: (0,translations_.localize)('State/Province'),\n          placeholder: (0,translations_.localize)('State/Province'),\n          disabled: disabled_items.includes('address_state') || !!((_props$value6 = props.value) !== null && _props$value6 !== void 0 && _props$value6.address_state) && has_real_account\n        }), /*#__PURE__*/external_react_default().createElement(form_input_field, {\n          name: \"address_postcode\",\n          required: !!is_gb_residence,\n          label: (0,translations_.localize)('Postal/ZIP Code'),\n          placeholder: (0,translations_.localize)('Postal/ZIP Code'),\n          onChange: function onChange(e) {\n            setFieldTouched('address_postcode', true);\n            handleChange(e);\n          },\n          disabled: disabled_items.includes('address_postcode') || !!((_props$value7 = props.value) !== null && _props$value7 !== void 0 && _props$value7.address_postcode) && has_real_account\n        })))), /*#__PURE__*/external_react_default().createElement(components_.Modal.Footer, {\n          has_separator: true,\n          is_bypassed: is_mobile\n        }, /*#__PURE__*/external_react_default().createElement(components_.FormSubmitButton, {\n          is_disabled: isSubmitting,\n          label: (0,translations_.localize)('Next'),\n          is_absolute: is_mobile,\n          has_cancel: true,\n          cancel_label: (0,translations_.localize)('Previous'),\n          onCancel: function onCancel() {\n            return handleCancel(values);\n          }\n        })))\n      );\n    });\n  });\n});\n/* harmony default export */ const address_details = (AddressDetails);\n;// CONCATENATED MODULE: ./Components/address-details/index.js\n\n/* harmony default export */ const Components_address_details = (address_details);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./Components/address-details/index.js\n");

/***/ }),

/***/ "../../../node_modules/classnames/index.js":
/***/ ((module, exports) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif ( true && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (true) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n\t\t\treturn classNames;\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else {}\n}());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2NsYXNzbmFtZXMvaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFHQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9jbGFzc25hbWVzL2luZGV4LmpzPzNkY2QiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXG5cdENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxuXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UgKE1JVCksIHNlZVxuXHRodHRwOi8vamVkd2F0c29uLmdpdGh1Yi5pby9jbGFzc25hbWVzXG4qL1xuLyogZ2xvYmFsIGRlZmluZSAqL1xuXG4oZnVuY3Rpb24gKCkge1xuXHQndXNlIHN0cmljdCc7XG5cblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xuXHR2YXIgbmF0aXZlQ29kZVN0cmluZyA9ICdbbmF0aXZlIGNvZGVdJztcblxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xuXHRcdHZhciBjbGFzc2VzID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGFyZyA9IGFyZ3VtZW50c1tpXTtcblx0XHRcdGlmICghYXJnKSBjb250aW51ZTtcblxuXHRcdFx0dmFyIGFyZ1R5cGUgPSB0eXBlb2YgYXJnO1xuXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZyk7XG5cdFx0XHR9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoYXJnKSkge1xuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xuXHRcdFx0XHRcdHZhciBpbm5lciA9IGNsYXNzTmFtZXMuYXBwbHkobnVsbCwgYXJnKTtcblx0XHRcdFx0XHRpZiAoaW5uZXIpIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdGlmIChhcmcudG9TdHJpbmcgIT09IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcgJiYgIWFyZy50b1N0cmluZy50b1N0cmluZygpLmluY2x1ZGVzKCdbbmF0aXZlIGNvZGVdJykpIHtcblx0XHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnLnRvU3RyaW5nKCkpO1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xuXHRcdFx0XHRcdGlmIChoYXNPd24uY2FsbChhcmcsIGtleSkgJiYgYXJnW2tleV0pIHtcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChrZXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBjbGFzc2VzLmpvaW4oJyAnKTtcblx0fVxuXG5cdGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykge1xuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBjbGFzc05hbWVzO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGRlZmluZS5hbWQgPT09ICdvYmplY3QnICYmIGRlZmluZS5hbWQpIHtcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXG5cdFx0ZGVmaW5lKCdjbGFzc25hbWVzJywgW10sIGZ1bmN0aW9uICgpIHtcblx0XHRcdHJldHVybiBjbGFzc05hbWVzO1xuXHRcdH0pO1xuXHR9IGVsc2Uge1xuXHRcdHdpbmRvdy5jbGFzc05hbWVzID0gY2xhc3NOYW1lcztcblx0fVxufSgpKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/classnames/index.js\n");

/***/ }),

/***/ "../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar reactIs = __webpack_require__(\"../../../node_modules/react-is/index.js\");\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzL2Rpc3QvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MuY2pzLmpzPzkwY2YiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.groupby/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity]\n *  The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    result[key] = [value];\n  }\n});\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = groupBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC5ncm91cGJ5L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGRlcml2L2FjY291bnQvLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2xvZGFzaC5ncm91cGJ5L2luZGV4LmpzPzBiNmUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBsb2Rhc2ggKEN1c3RvbSBCdWlsZCkgPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBCdWlsZDogYGxvZGFzaCBtb2R1bGFyaXplIGV4cG9ydHM9XCJucG1cIiAtbyAuL2BcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzIDxodHRwczovL2pxdWVyeS5vcmcvPlxuICogUmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UgPGh0dHBzOi8vbG9kYXNoLmNvbS9saWNlbnNlPlxuICogQmFzZWQgb24gVW5kZXJzY29yZS5qcyAxLjguMyA8aHR0cDovL3VuZGVyc2NvcmVqcy5vcmcvTElDRU5TRT5cbiAqIENvcHlyaWdodCBKZXJlbXkgQXNoa2VuYXMsIERvY3VtZW50Q2xvdWQgYW5kIEludmVzdGlnYXRpdmUgUmVwb3J0ZXJzICYgRWRpdG9yc1xuICovXG5cbi8qKiBVc2VkIGFzIHRoZSBzaXplIHRvIGVuYWJsZSBsYXJnZSBhcnJheSBvcHRpbWl6YXRpb25zLiAqL1xudmFyIExBUkdFX0FSUkFZX1NJWkUgPSAyMDA7XG5cbi8qKiBVc2VkIGFzIHRoZSBgVHlwZUVycm9yYCBtZXNzYWdlIGZvciBcIkZ1bmN0aW9uc1wiIG1ldGhvZHMuICovXG52YXIgRlVOQ19FUlJPUl9URVhUID0gJ0V4cGVjdGVkIGEgZnVuY3Rpb24nO1xuXG4vKiogVXNlZCB0byBzdGFuZC1pbiBmb3IgYHVuZGVmaW5lZGAgaGFzaCB2YWx1ZXMuICovXG52YXIgSEFTSF9VTkRFRklORUQgPSAnX19sb2Rhc2hfaGFzaF91bmRlZmluZWRfXyc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgYml0bWFza3MgZm9yIGNvbXBhcmlzb24gc3R5bGVzLiAqL1xudmFyIFVOT1JERVJFRF9DT01QQVJFX0ZMQUcgPSAxLFxuICAgIFBBUlRJQUxfQ09NUEFSRV9GTEFHID0gMjtcblxuLyoqIFVzZWQgYXMgcmVmZXJlbmNlcyBmb3IgdmFyaW91cyBgTnVtYmVyYCBjb25zdGFudHMuICovXG52YXIgSU5GSU5JVFkgPSAxIC8gMCxcbiAgICBNQVhfU0FGRV9JTlRFR0VSID0gOTAwNzE5OTI1NDc0MDk5MTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIGFyZ3NUYWcgPSAnW29iamVjdCBBcmd1bWVudHNdJyxcbiAgICBhcnJheVRhZyA9ICdbb2JqZWN0IEFycmF5XScsXG4gICAgYm9vbFRhZyA9ICdbb2JqZWN0IEJvb2xlYW5dJyxcbiAgICBkYXRlVGFnID0gJ1tvYmplY3QgRGF0ZV0nLFxuICAgIGVycm9yVGFnID0gJ1tvYmplY3QgRXJyb3JdJyxcbiAgICBmdW5jVGFnID0gJ1tvYmplY3QgRnVuY3Rpb25dJyxcbiAgICBnZW5UYWcgPSAnW29iamVjdCBHZW5lcmF0b3JGdW5jdGlvbl0nLFxuICAgIG1hcFRhZyA9ICdbb2JqZWN0IE1hcF0nLFxuICAgIG51bWJlclRhZyA9ICdbb2JqZWN0IE51bWJlcl0nLFxuICAgIG9iamVjdFRhZyA9ICdbb2JqZWN0IE9iamVjdF0nLFxuICAgIHByb21pc2VUYWcgPSAnW29iamVjdCBQcm9taXNlXScsXG4gICAgcmVnZXhwVGFnID0gJ1tvYmplY3QgUmVnRXhwXScsXG4gICAgc2V0VGFnID0gJ1tvYmplY3QgU2V0XScsXG4gICAgc3RyaW5nVGFnID0gJ1tvYmplY3QgU3RyaW5nXScsXG4gICAgc3ltYm9sVGFnID0gJ1tvYmplY3QgU3ltYm9sXScsXG4gICAgd2Vha01hcFRhZyA9ICdbb2JqZWN0IFdlYWtNYXBdJztcblxudmFyIGFycmF5QnVmZmVyVGFnID0gJ1tvYmplY3QgQXJyYXlCdWZmZXJdJyxcbiAgICBkYXRhVmlld1RhZyA9ICdbb2JqZWN0IERhdGFWaWV3XScsXG4gICAgZmxvYXQzMlRhZyA9ICdbb2JqZWN0IEZsb2F0MzJBcnJheV0nLFxuICAgIGZsb2F0NjRUYWcgPSAnW29iamVjdCBGbG9hdDY0QXJyYXldJyxcbiAgICBpbnQ4VGFnID0gJ1tvYmplY3QgSW50OEFycmF5XScsXG4gICAgaW50MTZUYWcgPSAnW29iamVjdCBJbnQxNkFycmF5XScsXG4gICAgaW50MzJUYWcgPSAnW29iamVjdCBJbnQzMkFycmF5XScsXG4gICAgdWludDhUYWcgPSAnW29iamVjdCBVaW50OEFycmF5XScsXG4gICAgdWludDhDbGFtcGVkVGFnID0gJ1tvYmplY3QgVWludDhDbGFtcGVkQXJyYXldJyxcbiAgICB1aW50MTZUYWcgPSAnW29iamVjdCBVaW50MTZBcnJheV0nLFxuICAgIHVpbnQzMlRhZyA9ICdbb2JqZWN0IFVpbnQzMkFycmF5XSc7XG5cbi8qKiBVc2VkIHRvIG1hdGNoIHByb3BlcnR5IG5hbWVzIHdpdGhpbiBwcm9wZXJ0eSBwYXRocy4gKi9cbnZhciByZUlzRGVlcFByb3AgPSAvXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLFxuICAgIHJlSXNQbGFpblByb3AgPSAvXlxcdyokLyxcbiAgICByZUxlYWRpbmdEb3QgPSAvXlxcLi8sXG4gICAgcmVQcm9wTmFtZSA9IC9bXi5bXFxdXSt8XFxbKD86KC0/XFxkKyg/OlxcLlxcZCspPyl8KFtcIiddKSgoPzooPyFcXDIpW15cXFxcXXxcXFxcLikqPylcXDIpXFxdfCg/PSg/OlxcLnxcXFtcXF0pKD86XFwufFxcW1xcXXwkKSkvZztcblxuLyoqXG4gKiBVc2VkIHRvIG1hdGNoIGBSZWdFeHBgXG4gKiBbc3ludGF4IGNoYXJhY3RlcnNdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXBhdHRlcm5zKS5cbiAqL1xudmFyIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggYmFja3NsYXNoZXMgaW4gcHJvcGVydHkgcGF0aHMuICovXG52YXIgcmVFc2NhcGVDaGFyID0gL1xcXFwoXFxcXCk/L2c7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBob3N0IGNvbnN0cnVjdG9ycyAoU2FmYXJpKS4gKi9cbnZhciByZUlzSG9zdEN0b3IgPSAvXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvO1xuXG4vKiogVXNlZCB0byBkZXRlY3QgdW5zaWduZWQgaW50ZWdlciB2YWx1ZXMuICovXG52YXIgcmVJc1VpbnQgPSAvXig/OjB8WzEtOV1cXGQqKSQvO1xuXG4vKiogVXNlZCB0byBpZGVudGlmeSBgdG9TdHJpbmdUYWdgIHZhbHVlcyBvZiB0eXBlZCBhcnJheXMuICovXG52YXIgdHlwZWRBcnJheVRhZ3MgPSB7fTtcbnR5cGVkQXJyYXlUYWdzW2Zsb2F0MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbZmxvYXQ2NFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50OFRhZ10gPSB0eXBlZEFycmF5VGFnc1tpbnQxNlRhZ10gPVxudHlwZWRBcnJheVRhZ3NbaW50MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDhUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50MTZUYWddID1cbnR5cGVkQXJyYXlUYWdzW3VpbnQzMlRhZ10gPSB0cnVlO1xudHlwZWRBcnJheVRhZ3NbYXJnc1RhZ10gPSB0eXBlZEFycmF5VGFnc1thcnJheVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbYXJyYXlCdWZmZXJUYWddID0gdHlwZWRBcnJheVRhZ3NbYm9vbFRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZGF0YVZpZXdUYWddID0gdHlwZWRBcnJheVRhZ3NbZGF0ZVRhZ10gPVxudHlwZWRBcnJheVRhZ3NbZXJyb3JUYWddID0gdHlwZWRBcnJheVRhZ3NbZnVuY1RhZ10gPVxudHlwZWRBcnJheVRhZ3NbbWFwVGFnXSA9IHR5cGVkQXJyYXlUYWdzW251bWJlclRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbb2JqZWN0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3JlZ2V4cFRhZ10gPVxudHlwZWRBcnJheVRhZ3Nbc2V0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW3N0cmluZ1RhZ10gPVxudHlwZWRBcnJheVRhZ3Nbd2Vha01hcFRhZ10gPSBmYWxzZTtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBnbG9iYWxgIGZyb20gTm9kZS5qcy4gKi9cbnZhciBmcmVlR2xvYmFsID0gdHlwZW9mIGdsb2JhbCA9PSAnb2JqZWN0JyAmJiBnbG9iYWwgJiYgZ2xvYmFsLk9iamVjdCA9PT0gT2JqZWN0ICYmIGdsb2JhbDtcblxuLyoqIERldGVjdCBmcmVlIHZhcmlhYmxlIGBzZWxmYC4gKi9cbnZhciBmcmVlU2VsZiA9IHR5cGVvZiBzZWxmID09ICdvYmplY3QnICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmO1xuXG4vKiogVXNlZCBhcyBhIHJlZmVyZW5jZSB0byB0aGUgZ2xvYmFsIG9iamVjdC4gKi9cbnZhciByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGV4cG9ydHNgLiAqL1xudmFyIGZyZWVFeHBvcnRzID0gdHlwZW9mIGV4cG9ydHMgPT0gJ29iamVjdCcgJiYgZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYG1vZHVsZWAuICovXG52YXIgZnJlZU1vZHVsZSA9IGZyZWVFeHBvcnRzICYmIHR5cGVvZiBtb2R1bGUgPT0gJ29iamVjdCcgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlO1xuXG4vKiogRGV0ZWN0IHRoZSBwb3B1bGFyIENvbW1vbkpTIGV4dGVuc2lvbiBgbW9kdWxlLmV4cG9ydHNgLiAqL1xudmFyIG1vZHVsZUV4cG9ydHMgPSBmcmVlTW9kdWxlICYmIGZyZWVNb2R1bGUuZXhwb3J0cyA9PT0gZnJlZUV4cG9ydHM7XG5cbi8qKiBEZXRlY3QgZnJlZSB2YXJpYWJsZSBgcHJvY2Vzc2AgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVQcm9jZXNzID0gbW9kdWxlRXhwb3J0cyAmJiBmcmVlR2xvYmFsLnByb2Nlc3M7XG5cbi8qKiBVc2VkIHRvIGFjY2VzcyBmYXN0ZXIgTm9kZS5qcyBoZWxwZXJzLiAqL1xudmFyIG5vZGVVdGlsID0gKGZ1bmN0aW9uKCkge1xuICB0cnkge1xuICAgIHJldHVybiBmcmVlUHJvY2VzcyAmJiBmcmVlUHJvY2Vzcy5iaW5kaW5nKCd1dGlsJyk7XG4gIH0gY2F0Y2ggKGUpIHt9XG59KCkpO1xuXG4vKiBOb2RlLmpzIGhlbHBlciByZWZlcmVuY2VzLiAqL1xudmFyIG5vZGVJc1R5cGVkQXJyYXkgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1R5cGVkQXJyYXk7XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlQWdncmVnYXRvcmAgZm9yIGFycmF5cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2V0dGVyIFRoZSBmdW5jdGlvbiB0byBzZXQgYGFjY3VtdWxhdG9yYCB2YWx1ZXMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgaXRlcmF0ZWUgdG8gdHJhbnNmb3JtIGtleXMuXG4gKiBAcGFyYW0ge09iamVjdH0gYWNjdW11bGF0b3IgVGhlIGluaXRpYWwgYWdncmVnYXRlZCBvYmplY3QuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgYGFjY3VtdWxhdG9yYC5cbiAqL1xuZnVuY3Rpb24gYXJyYXlBZ2dyZWdhdG9yKGFycmF5LCBzZXR0ZXIsIGl0ZXJhdGVlLCBhY2N1bXVsYXRvcikge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcbiAgICBzZXR0ZXIoYWNjdW11bGF0b3IsIHZhbHVlLCBpdGVyYXRlZSh2YWx1ZSksIGFycmF5KTtcbiAgfVxuICByZXR1cm4gYWNjdW11bGF0b3I7XG59XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBfLnNvbWVgIGZvciBhcnJheXMgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZVxuICogc2hvcnRoYW5kcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gW2FycmF5XSBUaGUgYXJyYXkgdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gcHJlZGljYXRlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYW55IGVsZW1lbnQgcGFzc2VzIHRoZSBwcmVkaWNhdGUgY2hlY2ssXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBhcnJheVNvbWUoYXJyYXksIHByZWRpY2F0ZSkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5ID8gYXJyYXkubGVuZ3RoIDogMDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIGlmIChwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnByb3BlcnR5YCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZXAgcGF0aHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VQcm9wZXJ0eShrZXkpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xuICB9O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnRpbWVzYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHNcbiAqIG9yIG1heCBhcnJheSBsZW5ndGggY2hlY2tzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge251bWJlcn0gbiBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIGludm9rZSBgaXRlcmF0ZWVgLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaXRlcmF0ZWUgVGhlIGZ1bmN0aW9uIGludm9rZWQgcGVyIGl0ZXJhdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcmVzdWx0cy5cbiAqL1xuZnVuY3Rpb24gYmFzZVRpbWVzKG4sIGl0ZXJhdGVlKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobik7XG5cbiAgd2hpbGUgKCsraW5kZXggPCBuKSB7XG4gICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLnVuYXJ5YCB3aXRob3V0IHN1cHBvcnQgZm9yIHN0b3JpbmcgbWV0YWRhdGEuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGNhcCBhcmd1bWVudHMgZm9yLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgY2FwcGVkIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlVW5hcnkoZnVuYykge1xuICByZXR1cm4gZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gZnVuYyh2YWx1ZSk7XG4gIH07XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYGtleWAgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcHJvcGVydHkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IG9iamVjdFtrZXldO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QgaW4gSUUgPCA5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgaG9zdCBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNIb3N0T2JqZWN0KHZhbHVlKSB7XG4gIC8vIE1hbnkgaG9zdCBvYmplY3RzIGFyZSBgT2JqZWN0YCBvYmplY3RzIHRoYXQgY2FuIGNvZXJjZSB0byBzdHJpbmdzXG4gIC8vIGRlc3BpdGUgaGF2aW5nIGltcHJvcGVybHkgZGVmaW5lZCBgdG9TdHJpbmdgIG1ldGhvZHMuXG4gIHZhciByZXN1bHQgPSBmYWxzZTtcbiAgaWYgKHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlLnRvU3RyaW5nICE9ICdmdW5jdGlvbicpIHtcbiAgICB0cnkge1xuICAgICAgcmVzdWx0ID0gISEodmFsdWUgKyAnJyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGBtYXBgIHRvIGl0cyBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBtYXAgVGhlIG1hcCB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBrZXktdmFsdWUgcGFpcnMuXG4gKi9cbmZ1bmN0aW9uIG1hcFRvQXJyYXkobWFwKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgcmVzdWx0ID0gQXJyYXkobWFwLnNpemUpO1xuXG4gIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSB1bmFyeSBmdW5jdGlvbiB0aGF0IGludm9rZXMgYGZ1bmNgIHdpdGggaXRzIGFyZ3VtZW50IHRyYW5zZm9ybWVkLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byB3cmFwLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gdHJhbnNmb3JtIFRoZSBhcmd1bWVudCB0cmFuc2Zvcm0uXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gb3ZlckFyZyhmdW5jLCB0cmFuc2Zvcm0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKGFyZykge1xuICAgIHJldHVybiBmdW5jKHRyYW5zZm9ybShhcmcpKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgc2V0YCB0byBhbiBhcnJheSBvZiBpdHMgdmFsdWVzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gc2V0IFRoZSBzZXQgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgdmFsdWVzLlxuICovXG5mdW5jdGlvbiBzZXRUb0FycmF5KHNldCkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IEFycmF5KHNldC5zaXplKTtcblxuICBzZXQuZm9yRWFjaChmdW5jdGlvbih2YWx1ZSkge1xuICAgIHJlc3VsdFsrK2luZGV4XSA9IHZhbHVlO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGUsXG4gICAgZnVuY1Byb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlLFxuICAgIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG92ZXJyZWFjaGluZyBjb3JlLWpzIHNoaW1zLiAqL1xudmFyIGNvcmVKc0RhdGEgPSByb290WydfX2NvcmUtanNfc2hhcmVkX18nXTtcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IG1ldGhvZHMgbWFzcXVlcmFkaW5nIGFzIG5hdGl2ZS4gKi9cbnZhciBtYXNrU3JjS2V5ID0gKGZ1bmN0aW9uKCkge1xuICB2YXIgdWlkID0gL1teLl0rJC8uZXhlYyhjb3JlSnNEYXRhICYmIGNvcmVKc0RhdGEua2V5cyAmJiBjb3JlSnNEYXRhLmtleXMuSUVfUFJPVE8gfHwgJycpO1xuICByZXR1cm4gdWlkID8gKCdTeW1ib2woc3JjKV8xLicgKyB1aWQpIDogJyc7XG59KCkpO1xuXG4vKiogVXNlZCB0byByZXNvbHZlIHRoZSBkZWNvbXBpbGVkIHNvdXJjZSBvZiBmdW5jdGlvbnMuICovXG52YXIgZnVuY1RvU3RyaW5nID0gZnVuY1Byb3RvLnRvU3RyaW5nO1xuXG4vKiogVXNlZCB0byBjaGVjayBvYmplY3RzIGZvciBvd24gcHJvcGVydGllcy4gKi9cbnZhciBoYXNPd25Qcm9wZXJ0eSA9IG9iamVjdFByb3RvLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgb2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqIFVzZWQgdG8gZGV0ZWN0IGlmIGEgbWV0aG9kIGlzIG5hdGl2ZS4gKi9cbnZhciByZUlzTmF0aXZlID0gUmVnRXhwKCdeJyArXG4gIGZ1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwgJ1xcXFwkJicpXG4gIC5yZXBsYWNlKC9oYXNPd25Qcm9wZXJ0eXwoZnVuY3Rpb24pLio/KD89XFxcXFxcKCl8IGZvciAuKz8oPz1cXFxcXFxdKS9nLCAnJDEuKj8nKSArICckJ1xuKTtcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2wsXG4gICAgVWludDhBcnJheSA9IHJvb3QuVWludDhBcnJheSxcbiAgICBwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IG9iamVjdFByb3RvLnByb3BlcnR5SXNFbnVtZXJhYmxlLFxuICAgIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlO1xuXG4vKiBCdWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcyBmb3IgdGhvc2Ugd2l0aCB0aGUgc2FtZSBuYW1lIGFzIG90aGVyIGBsb2Rhc2hgIG1ldGhvZHMuICovXG52YXIgbmF0aXZlS2V5cyA9IG92ZXJBcmcoT2JqZWN0LmtleXMsIE9iamVjdCk7XG5cbi8qIEJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzIHRoYXQgYXJlIHZlcmlmaWVkIHRvIGJlIG5hdGl2ZS4gKi9cbnZhciBEYXRhVmlldyA9IGdldE5hdGl2ZShyb290LCAnRGF0YVZpZXcnKSxcbiAgICBNYXAgPSBnZXROYXRpdmUocm9vdCwgJ01hcCcpLFxuICAgIFByb21pc2UgPSBnZXROYXRpdmUocm9vdCwgJ1Byb21pc2UnKSxcbiAgICBTZXQgPSBnZXROYXRpdmUocm9vdCwgJ1NldCcpLFxuICAgIFdlYWtNYXAgPSBnZXROYXRpdmUocm9vdCwgJ1dlYWtNYXAnKSxcbiAgICBuYXRpdmVDcmVhdGUgPSBnZXROYXRpdmUoT2JqZWN0LCAnY3JlYXRlJyk7XG5cbi8qKiBVc2VkIHRvIGRldGVjdCBtYXBzLCBzZXRzLCBhbmQgd2Vha21hcHMuICovXG52YXIgZGF0YVZpZXdDdG9yU3RyaW5nID0gdG9Tb3VyY2UoRGF0YVZpZXcpLFxuICAgIG1hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShNYXApLFxuICAgIHByb21pc2VDdG9yU3RyaW5nID0gdG9Tb3VyY2UoUHJvbWlzZSksXG4gICAgc2V0Q3RvclN0cmluZyA9IHRvU291cmNlKFNldCksXG4gICAgd2Vha01hcEN0b3JTdHJpbmcgPSB0b1NvdXJjZShXZWFrTWFwKTtcblxuLyoqIFVzZWQgdG8gY29udmVydCBzeW1ib2xzIHRvIHByaW1pdGl2ZXMgYW5kIHN0cmluZ3MuICovXG52YXIgc3ltYm9sUHJvdG8gPSBTeW1ib2wgPyBTeW1ib2wucHJvdG90eXBlIDogdW5kZWZpbmVkLFxuICAgIHN5bWJvbFZhbHVlT2YgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnZhbHVlT2YgOiB1bmRlZmluZWQsXG4gICAgc3ltYm9sVG9TdHJpbmcgPSBzeW1ib2xQcm90byA/IHN5bWJvbFByb3RvLnRvU3RyaW5nIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBoYXNoIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge0FycmF5fSBbZW50cmllc10gVGhlIGtleS12YWx1ZSBwYWlycyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gSGFzaChlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA/IGVudHJpZXMubGVuZ3RoIDogMDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGhhc2guXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgSGFzaFxuICovXG5mdW5jdGlvbiBoYXNoQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuYXRpdmVDcmVhdGUgPyBuYXRpdmVDcmVhdGUobnVsbCkgOiB7fTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgaGFzaC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgSGFzaFxuICogQHBhcmFtIHtPYmplY3R9IGhhc2ggVGhlIGhhc2ggdG8gbW9kaWZ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc2hEZWxldGUoa2V5KSB7XG4gIHJldHVybiB0aGlzLmhhcyhrZXkpICYmIGRlbGV0ZSB0aGlzLl9fZGF0YV9fW2tleV07XG59XG5cbi8qKlxuICogR2V0cyB0aGUgaGFzaCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIEhhc2hcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGVudHJ5IHZhbHVlLlxuICovXG5mdW5jdGlvbiBoYXNoR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGlmIChuYXRpdmVDcmVhdGUpIHtcbiAgICB2YXIgcmVzdWx0ID0gZGF0YVtrZXldO1xuICAgIHJldHVybiByZXN1bHQgPT09IEhBU0hfVU5ERUZJTkVEID8gdW5kZWZpbmVkIDogcmVzdWx0O1xuICB9XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSkgPyBkYXRhW2tleV0gOiB1bmRlZmluZWQ7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgaGFzaCB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICByZXR1cm4gbmF0aXZlQ3JlYXRlID8gZGF0YVtrZXldICE9PSB1bmRlZmluZWQgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgaGFzaCBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBIYXNoXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGhhc2ggaW5zdGFuY2UuXG4gKi9cbmZ1bmN0aW9uIGhhc2hTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gIGRhdGFba2V5XSA9IChuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCkgPyBIQVNIX1VOREVGSU5FRCA6IHZhbHVlO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYEhhc2hgLlxuSGFzaC5wcm90b3R5cGUuY2xlYXIgPSBoYXNoQ2xlYXI7XG5IYXNoLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBoYXNoRGVsZXRlO1xuSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldDtcbkhhc2gucHJvdG90eXBlLmhhcyA9IGhhc2hIYXM7XG5IYXNoLnByb3RvdHlwZS5zZXQgPSBoYXNoU2V0O1xuXG4vKipcbiAqIENyZWF0ZXMgYW4gbGlzdCBjYWNoZSBvYmplY3QuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIExpc3RDYWNoZShlbnRyaWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gZW50cmllcyA/IGVudHJpZXMubGVuZ3RoIDogMDtcblxuICB0aGlzLmNsZWFyKCk7XG4gIHdoaWxlICgrK2luZGV4IDwgbGVuZ3RoKSB7XG4gICAgdmFyIGVudHJ5ID0gZW50cmllc1tpbmRleF07XG4gICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGNsZWFyXG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUNsZWFyKCkge1xuICB0aGlzLl9fZGF0YV9fID0gW107XG59XG5cbi8qKlxuICogUmVtb3ZlcyBga2V5YCBhbmQgaXRzIHZhbHVlIGZyb20gdGhlIGxpc3QgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGRlbGV0ZVxuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZURlbGV0ZShrZXkpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBsYXN0SW5kZXggPSBkYXRhLmxlbmd0aCAtIDE7XG4gIGlmIChpbmRleCA9PSBsYXN0SW5kZXgpIHtcbiAgICBkYXRhLnBvcCgpO1xuICB9IGVsc2Uge1xuICAgIHNwbGljZS5jYWxsKGRhdGEsIGluZGV4LCAxKTtcbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZ2V0XG4gKiBAbWVtYmVyT2YgTGlzdENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sXG4gICAgICBpbmRleCA9IGFzc29jSW5kZXhPZihkYXRhLCBrZXkpO1xuXG4gIHJldHVybiBpbmRleCA8IDAgPyB1bmRlZmluZWQgOiBkYXRhW2luZGV4XVsxXTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBsaXN0IGNhY2hlIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIExpc3RDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGxpc3RDYWNoZUhhcyhrZXkpIHtcbiAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbGlzdCBjYWNoZSBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBMaXN0Q2FjaGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gc2V0LlxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2V0LlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgbGlzdCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLFxuICAgICAgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcblxuICBpZiAoaW5kZXggPCAwKSB7XG4gICAgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSk7XG4gIH0gZWxzZSB7XG4gICAgZGF0YVtpbmRleF1bMV0gPSB2YWx1ZTtcbiAgfVxuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYExpc3RDYWNoZWAuXG5MaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyID0gbGlzdENhY2hlQ2xlYXI7XG5MaXN0Q2FjaGUucHJvdG90eXBlWydkZWxldGUnXSA9IGxpc3RDYWNoZURlbGV0ZTtcbkxpc3RDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbGlzdENhY2hlR2V0O1xuTGlzdENhY2hlLnByb3RvdHlwZS5oYXMgPSBsaXN0Q2FjaGVIYXM7XG5MaXN0Q2FjaGUucHJvdG90eXBlLnNldCA9IGxpc3RDYWNoZVNldDtcblxuLyoqXG4gKiBDcmVhdGVzIGEgbWFwIGNhY2hlIG9iamVjdCB0byBzdG9yZSBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW2VudHJpZXNdIFRoZSBrZXktdmFsdWUgcGFpcnMgdG8gY2FjaGUuXG4gKi9cbmZ1bmN0aW9uIE1hcENhY2hlKGVudHJpZXMpIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBlbnRyaWVzID8gZW50cmllcy5sZW5ndGggOiAwO1xuXG4gIHRoaXMuY2xlYXIoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICB0aGlzLnNldChlbnRyeVswXSwgZW50cnlbMV0pO1xuICB9XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbGwga2V5LXZhbHVlIGVudHJpZXMgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSB7XG4gICAgJ2hhc2gnOiBuZXcgSGFzaCxcbiAgICAnbWFwJzogbmV3IChNYXAgfHwgTGlzdENhY2hlKSxcbiAgICAnc3RyaW5nJzogbmV3IEhhc2hcbiAgfTtcbn1cblxuLyoqXG4gKiBSZW1vdmVzIGBrZXlgIGFuZCBpdHMgdmFsdWUgZnJvbSB0aGUgbWFwLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBkZWxldGVcbiAqIEBtZW1iZXJPZiBNYXBDYWNoZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byByZW1vdmUuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGVudHJ5IHdhcyByZW1vdmVkLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIG1hcENhY2hlRGVsZXRlKGtleSkge1xuICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpWydkZWxldGUnXShrZXkpO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIG1hcCB2YWx1ZSBmb3IgYGtleWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGdldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIGdldC5cbiAqIEByZXR1cm5zIHsqfSBSZXR1cm5zIHRoZSBlbnRyeSB2YWx1ZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZ2V0KGtleSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGEgbWFwIHZhbHVlIGZvciBga2V5YCBleGlzdHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGhhc1xuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIGVudHJ5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGFuIGVudHJ5IGZvciBga2V5YCBleGlzdHMsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVIYXMoa2V5KSB7XG4gIHJldHVybiBnZXRNYXBEYXRhKHRoaXMsIGtleSkuaGFzKGtleSk7XG59XG5cbi8qKlxuICogU2V0cyB0aGUgbWFwIGBrZXlgIHRvIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIHNldFxuICogQG1lbWJlck9mIE1hcENhY2hlXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSBrZXkgb2YgdGhlIHZhbHVlIHRvIHNldC5cbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHNldC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIG1hcCBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gbWFwQ2FjaGVTZXQoa2V5LCB2YWx1ZSkge1xuICBnZXRNYXBEYXRhKHRoaXMsIGtleSkuc2V0KGtleSwgdmFsdWUpO1xuICByZXR1cm4gdGhpcztcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYE1hcENhY2hlYC5cbk1hcENhY2hlLnByb3RvdHlwZS5jbGVhciA9IG1hcENhY2hlQ2xlYXI7XG5NYXBDYWNoZS5wcm90b3R5cGVbJ2RlbGV0ZSddID0gbWFwQ2FjaGVEZWxldGU7XG5NYXBDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbWFwQ2FjaGVHZXQ7XG5NYXBDYWNoZS5wcm90b3R5cGUuaGFzID0gbWFwQ2FjaGVIYXM7XG5NYXBDYWNoZS5wcm90b3R5cGUuc2V0ID0gbWFwQ2FjaGVTZXQ7XG5cbi8qKlxuICpcbiAqIENyZWF0ZXMgYW4gYXJyYXkgY2FjaGUgb2JqZWN0IHRvIHN0b3JlIHVuaXF1ZSB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtBcnJheX0gW3ZhbHVlc10gVGhlIHZhbHVlcyB0byBjYWNoZS5cbiAqL1xuZnVuY3Rpb24gU2V0Q2FjaGUodmFsdWVzKSB7XG4gIHZhciBpbmRleCA9IC0xLFxuICAgICAgbGVuZ3RoID0gdmFsdWVzID8gdmFsdWVzLmxlbmd0aCA6IDA7XG5cbiAgdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICB0aGlzLmFkZCh2YWx1ZXNbaW5kZXhdKTtcbiAgfVxufVxuXG4vKipcbiAqIEFkZHMgYHZhbHVlYCB0byB0aGUgYXJyYXkgY2FjaGUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBuYW1lIGFkZFxuICogQG1lbWJlck9mIFNldENhY2hlXG4gKiBAYWxpYXMgcHVzaFxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2FjaGUuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc2V0Q2FjaGVBZGQodmFsdWUpIHtcbiAgdGhpcy5fX2RhdGFfXy5zZXQodmFsdWUsIEhBU0hfVU5ERUZJTkVEKTtcbiAgcmV0dXJuIHRoaXM7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgaW4gdGhlIGFycmF5IGNhY2hlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBTZXRDYWNoZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gc2VhcmNoIGZvci5cbiAqIEByZXR1cm5zIHtudW1iZXJ9IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgZm91bmQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gc2V0Q2FjaGVIYXModmFsdWUpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX18uaGFzKHZhbHVlKTtcbn1cblxuLy8gQWRkIG1ldGhvZHMgdG8gYFNldENhY2hlYC5cblNldENhY2hlLnByb3RvdHlwZS5hZGQgPSBTZXRDYWNoZS5wcm90b3R5cGUucHVzaCA9IHNldENhY2hlQWRkO1xuU2V0Q2FjaGUucHJvdG90eXBlLmhhcyA9IHNldENhY2hlSGFzO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBzdGFjayBjYWNoZSBvYmplY3QgdG8gc3RvcmUga2V5LXZhbHVlIHBhaXJzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7QXJyYXl9IFtlbnRyaWVzXSBUaGUga2V5LXZhbHVlIHBhaXJzIHRvIGNhY2hlLlxuICovXG5mdW5jdGlvbiBTdGFjayhlbnRyaWVzKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKGVudHJpZXMpO1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYWxsIGtleS12YWx1ZSBlbnRyaWVzIGZyb20gdGhlIHN0YWNrLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBjbGVhclxuICogQG1lbWJlck9mIFN0YWNrXG4gKi9cbmZ1bmN0aW9uIHN0YWNrQ2xlYXIoKSB7XG4gIHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlO1xufVxuXG4vKipcbiAqIFJlbW92ZXMgYGtleWAgYW5kIGl0cyB2YWx1ZSBmcm9tIHRoZSBzdGFjay5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgZGVsZXRlXG4gKiBAbWVtYmVyT2YgU3RhY2tcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgVGhlIGtleSBvZiB0aGUgdmFsdWUgdG8gcmVtb3ZlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBlbnRyeSB3YXMgcmVtb3ZlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBzdGFja0RlbGV0ZShrZXkpIHtcbiAgcmV0dXJuIHRoaXMuX19kYXRhX19bJ2RlbGV0ZSddKGtleSk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgc3RhY2sgdmFsdWUgZm9yIGBrZXlgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBnZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgZW50cnkgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrR2V0KGtleSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5nZXQoa2V5KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBzdGFjayB2YWx1ZSBmb3IgYGtleWAgZXhpc3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBoYXNcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBlbnRyeSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBhbiBlbnRyeSBmb3IgYGtleWAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIHN0YWNrSGFzKGtleSkge1xuICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXMoa2V5KTtcbn1cblxuLyoqXG4gKiBTZXRzIHRoZSBzdGFjayBga2V5YCB0byBgdmFsdWVgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAbmFtZSBzZXRcbiAqIEBtZW1iZXJPZiBTdGFja1xuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBzZXQuXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBzdGFjayBjYWNoZSBpbnN0YW5jZS5cbiAqL1xuZnVuY3Rpb24gc3RhY2tTZXQoa2V5LCB2YWx1ZSkge1xuICB2YXIgY2FjaGUgPSB0aGlzLl9fZGF0YV9fO1xuICBpZiAoY2FjaGUgaW5zdGFuY2VvZiBMaXN0Q2FjaGUpIHtcbiAgICB2YXIgcGFpcnMgPSBjYWNoZS5fX2RhdGFfXztcbiAgICBpZiAoIU1hcCB8fCAocGFpcnMubGVuZ3RoIDwgTEFSR0VfQVJSQVlfU0laRSAtIDEpKSB7XG4gICAgICBwYWlycy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgY2FjaGUgPSB0aGlzLl9fZGF0YV9fID0gbmV3IE1hcENhY2hlKHBhaXJzKTtcbiAgfVxuICBjYWNoZS5zZXQoa2V5LCB2YWx1ZSk7XG4gIHJldHVybiB0aGlzO1xufVxuXG4vLyBBZGQgbWV0aG9kcyB0byBgU3RhY2tgLlxuU3RhY2sucHJvdG90eXBlLmNsZWFyID0gc3RhY2tDbGVhcjtcblN0YWNrLnByb3RvdHlwZVsnZGVsZXRlJ10gPSBzdGFja0RlbGV0ZTtcblN0YWNrLnByb3RvdHlwZS5nZXQgPSBzdGFja0dldDtcblN0YWNrLnByb3RvdHlwZS5oYXMgPSBzdGFja0hhcztcblN0YWNrLnByb3RvdHlwZS5zZXQgPSBzdGFja1NldDtcblxuLyoqXG4gKiBDcmVhdGVzIGFuIGFycmF5IG9mIHRoZSBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIHRoZSBhcnJheS1saWtlIGB2YWx1ZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtib29sZWFufSBpbmhlcml0ZWQgU3BlY2lmeSByZXR1cm5pbmcgaW5oZXJpdGVkIHByb3BlcnR5IG5hbWVzLlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBhcnJheSBvZiBwcm9wZXJ0eSBuYW1lcy5cbiAqL1xuZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gIC8vIFNhZmFyaSA4LjEgbWFrZXMgYGFyZ3VtZW50cy5jYWxsZWVgIGVudW1lcmFibGUgaW4gc3RyaWN0IG1vZGUuXG4gIC8vIFNhZmFyaSA5IG1ha2VzIGBhcmd1bWVudHMubGVuZ3RoYCBlbnVtZXJhYmxlIGluIHN0cmljdCBtb2RlLlxuICB2YXIgcmVzdWx0ID0gKGlzQXJyYXkodmFsdWUpIHx8IGlzQXJndW1lbnRzKHZhbHVlKSlcbiAgICA/IGJhc2VUaW1lcyh2YWx1ZS5sZW5ndGgsIFN0cmluZylcbiAgICA6IFtdO1xuXG4gIHZhciBsZW5ndGggPSByZXN1bHQubGVuZ3RoLFxuICAgICAgc2tpcEluZGV4ZXMgPSAhIWxlbmd0aDtcblxuICBmb3IgKHZhciBrZXkgaW4gdmFsdWUpIHtcbiAgICBpZiAoKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJlxuICAgICAgICAhKHNraXBJbmRleGVzICYmIChrZXkgPT0gJ2xlbmd0aCcgfHwgaXNJbmRleChrZXksIGxlbmd0aCkpKSkge1xuICAgICAgcmVzdWx0LnB1c2goa2V5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBHZXRzIHRoZSBpbmRleCBhdCB3aGljaCB0aGUgYGtleWAgaXMgZm91bmQgaW4gYGFycmF5YCBvZiBrZXktdmFsdWUgcGFpcnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHsqfSBrZXkgVGhlIGtleSB0byBzZWFyY2ggZm9yLlxuICogQHJldHVybnMge251bWJlcn0gUmV0dXJucyB0aGUgaW5kZXggb2YgdGhlIG1hdGNoZWQgdmFsdWUsIGVsc2UgYC0xYC5cbiAqL1xuZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgaWYgKGVxKGFycmF5W2xlbmd0aF1bMF0sIGtleSkpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICB9XG4gIHJldHVybiAtMTtcbn1cblxuLyoqXG4gKiBBZ2dyZWdhdGVzIGVsZW1lbnRzIG9mIGBjb2xsZWN0aW9uYCBvbiBgYWNjdW11bGF0b3JgIHdpdGgga2V5cyB0cmFuc2Zvcm1lZFxuICogYnkgYGl0ZXJhdGVlYCBhbmQgdmFsdWVzIHNldCBieSBgc2V0dGVyYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R9IGNvbGxlY3Rpb24gVGhlIGNvbGxlY3Rpb24gdG8gaXRlcmF0ZSBvdmVyLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2V0dGVyIFRoZSBmdW5jdGlvbiB0byBzZXQgYGFjY3VtdWxhdG9yYCB2YWx1ZXMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgaXRlcmF0ZWUgdG8gdHJhbnNmb3JtIGtleXMuXG4gKiBAcGFyYW0ge09iamVjdH0gYWNjdW11bGF0b3IgVGhlIGluaXRpYWwgYWdncmVnYXRlZCBvYmplY3QuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgYGFjY3VtdWxhdG9yYC5cbiAqL1xuZnVuY3Rpb24gYmFzZUFnZ3JlZ2F0b3IoY29sbGVjdGlvbiwgc2V0dGVyLCBpdGVyYXRlZSwgYWNjdW11bGF0b3IpIHtcbiAgYmFzZUVhY2goY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbikge1xuICAgIHNldHRlcihhY2N1bXVsYXRvciwgdmFsdWUsIGl0ZXJhdGVlKHZhbHVlKSwgY29sbGVjdGlvbik7XG4gIH0pO1xuICByZXR1cm4gYWNjdW11bGF0b3I7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yRWFjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fE9iamVjdH0gY29sbGVjdGlvbiBUaGUgY29sbGVjdGlvbiB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge0FycmF5fE9iamVjdH0gUmV0dXJucyBgY29sbGVjdGlvbmAuXG4gKi9cbnZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pO1xuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBiYXNlRm9yT3duYCB3aGljaCBpdGVyYXRlcyBvdmVyIGBvYmplY3RgXG4gKiBwcm9wZXJ0aWVzIHJldHVybmVkIGJ5IGBrZXlzRnVuY2AgYW5kIGludm9rZXMgYGl0ZXJhdGVlYCBmb3IgZWFjaCBwcm9wZXJ0eS5cbiAqIEl0ZXJhdGVlIGZ1bmN0aW9ucyBtYXkgZXhpdCBpdGVyYXRpb24gZWFybHkgYnkgZXhwbGljaXRseSByZXR1cm5pbmcgYGZhbHNlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBrZXlzRnVuYyBUaGUgZnVuY3Rpb24gdG8gZ2V0IHRoZSBrZXlzIG9mIGBvYmplY3RgLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xudmFyIGJhc2VGb3IgPSBjcmVhdGVCYXNlRm9yKCk7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uZm9yT3duYCB3aXRob3V0IHN1cHBvcnQgZm9yIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBpdGVyYXRlIG92ZXIuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBpdGVyYXRlZSBUaGUgZnVuY3Rpb24gaW52b2tlZCBwZXIgaXRlcmF0aW9uLlxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gYmFzZUZvck93bihvYmplY3QsIGl0ZXJhdGVlKSB7XG4gIHJldHVybiBvYmplY3QgJiYgYmFzZUZvcihvYmplY3QsIGl0ZXJhdGVlLCBrZXlzKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5nZXRgIHdpdGhvdXQgc3VwcG9ydCBmb3IgZGVmYXVsdCB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyB0aGUgcmVzb2x2ZWQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXQob2JqZWN0LCBwYXRoKSB7XG4gIHBhdGggPSBpc0tleShwYXRoLCBvYmplY3QpID8gW3BhdGhdIDogY2FzdFBhdGgocGF0aCk7XG5cbiAgdmFyIGluZGV4ID0gMCxcbiAgICAgIGxlbmd0aCA9IHBhdGgubGVuZ3RoO1xuXG4gIHdoaWxlIChvYmplY3QgIT0gbnVsbCAmJiBpbmRleCA8IGxlbmd0aCkge1xuICAgIG9iamVjdCA9IG9iamVjdFt0b0tleShwYXRoW2luZGV4KytdKV07XG4gIH1cbiAgcmV0dXJuIChpbmRleCAmJiBpbmRleCA9PSBsZW5ndGgpID8gb2JqZWN0IDogdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBnZXRUYWdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgcmV0dXJuIG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmhhc0luYCB3aXRob3V0IHN1cHBvcnQgZm9yIGRlZXAgcGF0aHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtBcnJheXxzdHJpbmd9IGtleSBUaGUga2V5IHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGBrZXlgIGV4aXN0cywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSGFzSW4ob2JqZWN0LCBrZXkpIHtcbiAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGtleSBpbiBPYmplY3Qob2JqZWN0KTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc0VxdWFsYCB3aGljaCBzdXBwb3J0cyBwYXJ0aWFsIGNvbXBhcmlzb25zXG4gKiBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb21wYXJlLlxuICogQHBhcmFtIHsqfSBvdGhlciBUaGUgb3RoZXIgdmFsdWUgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtjdXN0b21pemVyXSBUaGUgZnVuY3Rpb24gdG8gY3VzdG9taXplIGNvbXBhcmlzb25zLlxuICogQHBhcmFtIHtib29sZWFufSBbYml0bWFza10gVGhlIGJpdG1hc2sgb2YgY29tcGFyaXNvbiBmbGFncy5cbiAqICBUaGUgYml0bWFzayBtYXkgYmUgY29tcG9zZWQgb2YgdGhlIGZvbGxvd2luZyBmbGFnczpcbiAqICAgICAxIC0gVW5vcmRlcmVkIGNvbXBhcmlzb25cbiAqICAgICAyIC0gUGFydGlhbCBjb21wYXJpc29uXG4gKiBAcGFyYW0ge09iamVjdH0gW3N0YWNrXSBUcmFja3MgdHJhdmVyc2VkIGB2YWx1ZWAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgdmFsdWVzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VJc0VxdWFsKHZhbHVlLCBvdGhlciwgY3VzdG9taXplciwgYml0bWFzaywgc3RhY2spIHtcbiAgaWYgKHZhbHVlID09PSBvdGhlcikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIGlmICh2YWx1ZSA9PSBudWxsIHx8IG90aGVyID09IG51bGwgfHwgKCFpc09iamVjdCh2YWx1ZSkgJiYgIWlzT2JqZWN0TGlrZShvdGhlcikpKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXI7XG4gIH1cbiAgcmV0dXJuIGJhc2VJc0VxdWFsRGVlcCh2YWx1ZSwgb3RoZXIsIGJhc2VJc0VxdWFsLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjayk7XG59XG5cbi8qKlxuICogQSBzcGVjaWFsaXplZCB2ZXJzaW9uIG9mIGBiYXNlSXNFcXVhbGAgZm9yIGFycmF5cyBhbmQgb2JqZWN0cyB3aGljaCBwZXJmb3Jtc1xuICogZGVlcCBjb21wYXJpc29ucyBhbmQgdHJhY2tzIHRyYXZlcnNlZCBvYmplY3RzIGVuYWJsaW5nIG9iamVjdHMgd2l0aCBjaXJjdWxhclxuICogcmVmZXJlbmNlcyB0byBiZSBjb21wYXJlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge09iamVjdH0gb3RoZXIgVGhlIG90aGVyIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gZXF1YWxGdW5jIFRoZSBmdW5jdGlvbiB0byBkZXRlcm1pbmUgZXF1aXZhbGVudHMgb2YgdmFsdWVzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge251bWJlcn0gW2JpdG1hc2tdIFRoZSBiaXRtYXNrIG9mIGNvbXBhcmlzb24gZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgXG4gKiAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbc3RhY2tdIFRyYWNrcyB0cmF2ZXJzZWQgYG9iamVjdGAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgb2JqZWN0cyBhcmUgZXF1aXZhbGVudCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNFcXVhbERlZXAob2JqZWN0LCBvdGhlciwgZXF1YWxGdW5jLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjaykge1xuICB2YXIgb2JqSXNBcnIgPSBpc0FycmF5KG9iamVjdCksXG4gICAgICBvdGhJc0FyciA9IGlzQXJyYXkob3RoZXIpLFxuICAgICAgb2JqVGFnID0gYXJyYXlUYWcsXG4gICAgICBvdGhUYWcgPSBhcnJheVRhZztcblxuICBpZiAoIW9iaklzQXJyKSB7XG4gICAgb2JqVGFnID0gZ2V0VGFnKG9iamVjdCk7XG4gICAgb2JqVGFnID0gb2JqVGFnID09IGFyZ3NUYWcgPyBvYmplY3RUYWcgOiBvYmpUYWc7XG4gIH1cbiAgaWYgKCFvdGhJc0Fycikge1xuICAgIG90aFRhZyA9IGdldFRhZyhvdGhlcik7XG4gICAgb3RoVGFnID0gb3RoVGFnID09IGFyZ3NUYWcgPyBvYmplY3RUYWcgOiBvdGhUYWc7XG4gIH1cbiAgdmFyIG9iaklzT2JqID0gb2JqVGFnID09IG9iamVjdFRhZyAmJiAhaXNIb3N0T2JqZWN0KG9iamVjdCksXG4gICAgICBvdGhJc09iaiA9IG90aFRhZyA9PSBvYmplY3RUYWcgJiYgIWlzSG9zdE9iamVjdChvdGhlciksXG4gICAgICBpc1NhbWVUYWcgPSBvYmpUYWcgPT0gb3RoVGFnO1xuXG4gIGlmIChpc1NhbWVUYWcgJiYgIW9iaklzT2JqKSB7XG4gICAgc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKTtcbiAgICByZXR1cm4gKG9iaklzQXJyIHx8IGlzVHlwZWRBcnJheShvYmplY3QpKVxuICAgICAgPyBlcXVhbEFycmF5cyhvYmplY3QsIG90aGVyLCBlcXVhbEZ1bmMsIGN1c3RvbWl6ZXIsIGJpdG1hc2ssIHN0YWNrKVxuICAgICAgOiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIG9ialRhZywgZXF1YWxGdW5jLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjayk7XG4gIH1cbiAgaWYgKCEoYml0bWFzayAmIFBBUlRJQUxfQ09NUEFSRV9GTEFHKSkge1xuICAgIHZhciBvYmpJc1dyYXBwZWQgPSBvYmpJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgJ19fd3JhcHBlZF9fJyksXG4gICAgICAgIG90aElzV3JhcHBlZCA9IG90aElzT2JqICYmIGhhc093blByb3BlcnR5LmNhbGwob3RoZXIsICdfX3dyYXBwZWRfXycpO1xuXG4gICAgaWYgKG9iaklzV3JhcHBlZCB8fCBvdGhJc1dyYXBwZWQpIHtcbiAgICAgIHZhciBvYmpVbndyYXBwZWQgPSBvYmpJc1dyYXBwZWQgPyBvYmplY3QudmFsdWUoKSA6IG9iamVjdCxcbiAgICAgICAgICBvdGhVbndyYXBwZWQgPSBvdGhJc1dyYXBwZWQgPyBvdGhlci52YWx1ZSgpIDogb3RoZXI7XG5cbiAgICAgIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gICAgICByZXR1cm4gZXF1YWxGdW5jKG9ialVud3JhcHBlZCwgb3RoVW53cmFwcGVkLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjayk7XG4gICAgfVxuICB9XG4gIGlmICghaXNTYW1lVGFnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHN0YWNrIHx8IChzdGFjayA9IG5ldyBTdGFjayk7XG4gIHJldHVybiBlcXVhbE9iamVjdHMob2JqZWN0LCBvdGhlciwgZXF1YWxGdW5jLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjayk7XG59XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uaXNNYXRjaGAgd2l0aG91dCBzdXBwb3J0IGZvciBpdGVyYXRlZSBzaG9ydGhhbmRzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gaW5zcGVjdC5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gKiBAcGFyYW0ge0FycmF5fSBtYXRjaERhdGEgVGhlIHByb3BlcnR5IG5hbWVzLCB2YWx1ZXMsIGFuZCBjb21wYXJlIGZsYWdzIHRvIG1hdGNoLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2N1c3RvbWl6ZXJdIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYG9iamVjdGAgaXMgYSBtYXRjaCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhLCBjdXN0b21pemVyKSB7XG4gIHZhciBpbmRleCA9IG1hdGNoRGF0YS5sZW5ndGgsXG4gICAgICBsZW5ndGggPSBpbmRleCxcbiAgICAgIG5vQ3VzdG9taXplciA9ICFjdXN0b21pemVyO1xuXG4gIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgIHJldHVybiAhbGVuZ3RoO1xuICB9XG4gIG9iamVjdCA9IE9iamVjdChvYmplY3QpO1xuICB3aGlsZSAoaW5kZXgtLSkge1xuICAgIHZhciBkYXRhID0gbWF0Y2hEYXRhW2luZGV4XTtcbiAgICBpZiAoKG5vQ3VzdG9taXplciAmJiBkYXRhWzJdKVxuICAgICAgICAgID8gZGF0YVsxXSAhPT0gb2JqZWN0W2RhdGFbMF1dXG4gICAgICAgICAgOiAhKGRhdGFbMF0gaW4gb2JqZWN0KVxuICAgICAgICApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBkYXRhID0gbWF0Y2hEYXRhW2luZGV4XTtcbiAgICB2YXIga2V5ID0gZGF0YVswXSxcbiAgICAgICAgb2JqVmFsdWUgPSBvYmplY3Rba2V5XSxcbiAgICAgICAgc3JjVmFsdWUgPSBkYXRhWzFdO1xuXG4gICAgaWYgKG5vQ3VzdG9taXplciAmJiBkYXRhWzJdKSB7XG4gICAgICBpZiAob2JqVmFsdWUgPT09IHVuZGVmaW5lZCAmJiAhKGtleSBpbiBvYmplY3QpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHN0YWNrID0gbmV3IFN0YWNrO1xuICAgICAgaWYgKGN1c3RvbWl6ZXIpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IGN1c3RvbWl6ZXIob2JqVmFsdWUsIHNyY1ZhbHVlLCBrZXksIG9iamVjdCwgc291cmNlLCBzdGFjayk7XG4gICAgICB9XG4gICAgICBpZiAoIShyZXN1bHQgPT09IHVuZGVmaW5lZFxuICAgICAgICAgICAgPyBiYXNlSXNFcXVhbChzcmNWYWx1ZSwgb2JqVmFsdWUsIGN1c3RvbWl6ZXIsIFVOT1JERVJFRF9DT01QQVJFX0ZMQUcgfCBQQVJUSUFMX0NPTVBBUkVfRkxBRywgc3RhY2spXG4gICAgICAgICAgICA6IHJlc3VsdFxuICAgICAgICAgICkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pc05hdGl2ZWAgd2l0aG91dCBiYWQgc2hpbSBjaGVja3MuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBuYXRpdmUgZnVuY3Rpb24sXG4gKiAgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNOYXRpdmUodmFsdWUpIHtcbiAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwYXR0ZXJuID0gKGlzRnVuY3Rpb24odmFsdWUpIHx8IGlzSG9zdE9iamVjdCh2YWx1ZSkpID8gcmVJc05hdGl2ZSA6IHJlSXNIb3N0Q3RvcjtcbiAgcmV0dXJuIHBhdHRlcm4udGVzdCh0b1NvdXJjZSh2YWx1ZSkpO1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLmlzVHlwZWRBcnJheWAgd2l0aG91dCBOb2RlLmpzIG9wdGltaXphdGlvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSB0eXBlZCBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBiYXNlSXNUeXBlZEFycmF5KHZhbHVlKSB7XG4gIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmXG4gICAgaXNMZW5ndGgodmFsdWUubGVuZ3RoKSAmJiAhIXR5cGVkQXJyYXlUYWdzW29iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpXTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5pdGVyYXRlZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gW3ZhbHVlPV8uaWRlbnRpdHldIFRoZSB2YWx1ZSB0byBjb252ZXJ0IHRvIGFuIGl0ZXJhdGVlLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBpdGVyYXRlZS5cbiAqL1xuZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKHZhbHVlKSB7XG4gIC8vIERvbid0IHN0b3JlIHRoZSBgdHlwZW9mYCByZXN1bHQgaW4gYSB2YXJpYWJsZSB0byBhdm9pZCBhIEpJVCBidWcgaW4gU2FmYXJpIDkuXG4gIC8vIFNlZSBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTU2MDM0IGZvciBtb3JlIGRldGFpbHMuXG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ2Z1bmN0aW9uJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgIHJldHVybiBpZGVudGl0eTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbHVlID09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpXG4gICAgICA/IGJhc2VNYXRjaGVzUHJvcGVydHkodmFsdWVbMF0sIHZhbHVlWzFdKVxuICAgICAgOiBiYXNlTWF0Y2hlcyh2YWx1ZSk7XG4gIH1cbiAgcmV0dXJuIHByb3BlcnR5KHZhbHVlKTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5rZXlzYCB3aGljaCBkb2Vzbid0IHRyZWF0IHNwYXJzZSBhcnJheXMgYXMgZGVuc2UuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKi9cbmZ1bmN0aW9uIGJhc2VLZXlzKG9iamVjdCkge1xuICBpZiAoIWlzUHJvdG90eXBlKG9iamVjdCkpIHtcbiAgICByZXR1cm4gbmF0aXZlS2V5cyhvYmplY3QpO1xuICB9XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIga2V5IGluIE9iamVjdChvYmplY3QpKSB7XG4gICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpICYmIGtleSAhPSAnY29uc3RydWN0b3InKSB7XG4gICAgICByZXN1bHQucHVzaChrZXkpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIFRoZSBiYXNlIGltcGxlbWVudGF0aW9uIG9mIGBfLm1hdGNoZXNgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNvdXJjZWAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBzb3VyY2UgVGhlIG9iamVjdCBvZiBwcm9wZXJ0eSB2YWx1ZXMgdG8gbWF0Y2guXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBzcGVjIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiYXNlTWF0Y2hlcyhzb3VyY2UpIHtcbiAgdmFyIG1hdGNoRGF0YSA9IGdldE1hdGNoRGF0YShzb3VyY2UpO1xuICBpZiAobWF0Y2hEYXRhLmxlbmd0aCA9PSAxICYmIG1hdGNoRGF0YVswXVsyXSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZShtYXRjaERhdGFbMF1bMF0sIG1hdGNoRGF0YVswXVsxXSk7XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgPT09IHNvdXJjZSB8fCBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy5tYXRjaGVzUHJvcGVydHlgIHdoaWNoIGRvZXNuJ3QgY2xvbmUgYHNyY1ZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IHBhdGggVGhlIHBhdGggb2YgdGhlIHByb3BlcnR5IHRvIGdldC5cbiAqIEBwYXJhbSB7Kn0gc3JjVmFsdWUgVGhlIHZhbHVlIHRvIG1hdGNoLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgc3BlYyBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gYmFzZU1hdGNoZXNQcm9wZXJ0eShwYXRoLCBzcmNWYWx1ZSkge1xuICBpZiAoaXNLZXkocGF0aCkgJiYgaXNTdHJpY3RDb21wYXJhYmxlKHNyY1ZhbHVlKSkge1xuICAgIHJldHVybiBtYXRjaGVzU3RyaWN0Q29tcGFyYWJsZSh0b0tleShwYXRoKSwgc3JjVmFsdWUpO1xuICB9XG4gIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICB2YXIgb2JqVmFsdWUgPSBnZXQob2JqZWN0LCBwYXRoKTtcbiAgICByZXR1cm4gKG9ialZhbHVlID09PSB1bmRlZmluZWQgJiYgb2JqVmFsdWUgPT09IHNyY1ZhbHVlKVxuICAgICAgPyBoYXNJbihvYmplY3QsIHBhdGgpXG4gICAgICA6IGJhc2VJc0VxdWFsKHNyY1ZhbHVlLCBvYmpWYWx1ZSwgdW5kZWZpbmVkLCBVTk9SREVSRURfQ09NUEFSRV9GTEFHIHwgUEFSVElBTF9DT01QQVJFX0ZMQUcpO1xuICB9O1xufVxuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZVByb3BlcnR5YCB3aGljaCBzdXBwb3J0cyBkZWVwIHBhdGhzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCBvZiB0aGUgcHJvcGVydHkgdG8gZ2V0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWNjZXNzb3IgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGJhc2VQcm9wZXJ0eURlZXAocGF0aCkge1xuICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgcmV0dXJuIGJhc2VHZXQob2JqZWN0LCBwYXRoKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBUaGUgYmFzZSBpbXBsZW1lbnRhdGlvbiBvZiBgXy50b1N0cmluZ2Agd2hpY2ggZG9lc24ndCBjb252ZXJ0IG51bGxpc2hcbiAqIHZhbHVlcyB0byBlbXB0eSBzdHJpbmdzLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RyaW5nLlxuICovXG5mdW5jdGlvbiBiYXNlVG9TdHJpbmcodmFsdWUpIHtcbiAgLy8gRXhpdCBlYXJseSBmb3Igc3RyaW5ncyB0byBhdm9pZCBhIHBlcmZvcm1hbmNlIGhpdCBpbiBzb21lIGVudmlyb25tZW50cy5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PSAnc3RyaW5nJykge1xuICAgIHJldHVybiB2YWx1ZTtcbiAgfVxuICBpZiAoaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHN5bWJvbFRvU3RyaW5nID8gc3ltYm9sVG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgfVxuICB2YXIgcmVzdWx0ID0gKHZhbHVlICsgJycpO1xuICByZXR1cm4gKHJlc3VsdCA9PSAnMCcgJiYgKDEgLyB2YWx1ZSkgPT0gLUlORklOSVRZKSA/ICctMCcgOiByZXN1bHQ7XG59XG5cbi8qKlxuICogQ2FzdHMgYHZhbHVlYCB0byBhIHBhdGggYXJyYXkgaWYgaXQncyBub3Qgb25lLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBpbnNwZWN0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjYXN0IHByb3BlcnR5IHBhdGggYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGNhc3RQYXRoKHZhbHVlKSB7XG4gIHJldHVybiBpc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogc3RyaW5nVG9QYXRoKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgZnVuY3Rpb24gbGlrZSBgXy5ncm91cEJ5YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gc2V0dGVyIFRoZSBmdW5jdGlvbiB0byBzZXQgYWNjdW11bGF0b3IgdmFsdWVzLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gW2luaXRpYWxpemVyXSBUaGUgYWNjdW11bGF0b3Igb2JqZWN0IGluaXRpYWxpemVyLlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYWdncmVnYXRvciBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQWdncmVnYXRvcihzZXR0ZXIsIGluaXRpYWxpemVyKSB7XG4gIHJldHVybiBmdW5jdGlvbihjb2xsZWN0aW9uLCBpdGVyYXRlZSkge1xuICAgIHZhciBmdW5jID0gaXNBcnJheShjb2xsZWN0aW9uKSA/IGFycmF5QWdncmVnYXRvciA6IGJhc2VBZ2dyZWdhdG9yLFxuICAgICAgICBhY2N1bXVsYXRvciA9IGluaXRpYWxpemVyID8gaW5pdGlhbGl6ZXIoKSA6IHt9O1xuXG4gICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgc2V0dGVyLCBiYXNlSXRlcmF0ZWUoaXRlcmF0ZWUsIDIpLCBhY2N1bXVsYXRvcik7XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGBiYXNlRWFjaGAgb3IgYGJhc2VFYWNoUmlnaHRgIGZ1bmN0aW9uLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlYWNoRnVuYyBUaGUgZnVuY3Rpb24gdG8gaXRlcmF0ZSBvdmVyIGEgY29sbGVjdGlvbi5cbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsIGZyb21SaWdodCkge1xuICByZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbiwgaXRlcmF0ZWUpIHtcbiAgICBpZiAoY29sbGVjdGlvbiA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gY29sbGVjdGlvbjtcbiAgICB9XG4gICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSkge1xuICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGl0ZXJhdGVlKTtcbiAgICB9XG4gICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuICAgICAgICBpbmRleCA9IGZyb21SaWdodCA/IGxlbmd0aCA6IC0xLFxuICAgICAgICBpdGVyYWJsZSA9IE9iamVjdChjb2xsZWN0aW9uKTtcblxuICAgIHdoaWxlICgoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpKSB7XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVbaW5kZXhdLCBpbmRleCwgaXRlcmFibGUpID09PSBmYWxzZSkge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbGxlY3Rpb247XG4gIH07XG59XG5cbi8qKlxuICogQ3JlYXRlcyBhIGJhc2UgZnVuY3Rpb24gZm9yIG1ldGhvZHMgbGlrZSBgXy5mb3JJbmAgYW5kIGBfLmZvck93bmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW2Zyb21SaWdodF0gU3BlY2lmeSBpdGVyYXRpbmcgZnJvbSByaWdodCB0byBsZWZ0LlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBSZXR1cm5zIHRoZSBuZXcgYmFzZSBmdW5jdGlvbi5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlQmFzZUZvcihmcm9tUmlnaHQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCwgaXRlcmF0ZWUsIGtleXNGdW5jKSB7XG4gICAgdmFyIGluZGV4ID0gLTEsXG4gICAgICAgIGl0ZXJhYmxlID0gT2JqZWN0KG9iamVjdCksXG4gICAgICAgIHByb3BzID0ga2V5c0Z1bmMob2JqZWN0KSxcbiAgICAgICAgbGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xuXG4gICAgd2hpbGUgKGxlbmd0aC0tKSB7XG4gICAgICB2YXIga2V5ID0gcHJvcHNbZnJvbVJpZ2h0ID8gbGVuZ3RoIDogKytpbmRleF07XG4gICAgICBpZiAoaXRlcmF0ZWUoaXRlcmFibGVba2V5XSwga2V5LCBpdGVyYWJsZSkgPT09IGZhbHNlKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0O1xuICB9O1xufVxuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3IgYXJyYXlzIHdpdGggc3VwcG9ydCBmb3JcbiAqIHBhcnRpYWwgZGVlcCBjb21wYXJpc29ucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge0FycmF5fSBvdGhlciBUaGUgb3RoZXIgYXJyYXkgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIG9mIGNvbXBhcmlzb24gZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgXG4gKiAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBhcnJheWAgYW5kIGBvdGhlcmAgb2JqZWN0cy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiB0aGUgYXJyYXlzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGVxdWFsQXJyYXlzKGFycmF5LCBvdGhlciwgZXF1YWxGdW5jLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjaykge1xuICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIFBBUlRJQUxfQ09NUEFSRV9GTEFHLFxuICAgICAgYXJyTGVuZ3RoID0gYXJyYXkubGVuZ3RoLFxuICAgICAgb3RoTGVuZ3RoID0gb3RoZXIubGVuZ3RoO1xuXG4gIGlmIChhcnJMZW5ndGggIT0gb3RoTGVuZ3RoICYmICEoaXNQYXJ0aWFsICYmIG90aExlbmd0aCA+IGFyckxlbmd0aCkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgLy8gQXNzdW1lIGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLlxuICB2YXIgc3RhY2tlZCA9IHN0YWNrLmdldChhcnJheSk7XG4gIGlmIChzdGFja2VkICYmIHN0YWNrLmdldChvdGhlcikpIHtcbiAgICByZXR1cm4gc3RhY2tlZCA9PSBvdGhlcjtcbiAgfVxuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIHJlc3VsdCA9IHRydWUsXG4gICAgICBzZWVuID0gKGJpdG1hc2sgJiBVTk9SREVSRURfQ09NUEFSRV9GTEFHKSA/IG5ldyBTZXRDYWNoZSA6IHVuZGVmaW5lZDtcblxuICBzdGFjay5zZXQoYXJyYXksIG90aGVyKTtcbiAgc3RhY2suc2V0KG90aGVyLCBhcnJheSk7XG5cbiAgLy8gSWdub3JlIG5vbi1pbmRleCBwcm9wZXJ0aWVzLlxuICB3aGlsZSAoKytpbmRleCA8IGFyckxlbmd0aCkge1xuICAgIHZhciBhcnJWYWx1ZSA9IGFycmF5W2luZGV4XSxcbiAgICAgICAgb3RoVmFsdWUgPSBvdGhlcltpbmRleF07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgYXJyVmFsdWUsIGluZGV4LCBvdGhlciwgYXJyYXksIHN0YWNrKVxuICAgICAgICA6IGN1c3RvbWl6ZXIoYXJyVmFsdWUsIG90aFZhbHVlLCBpbmRleCwgYXJyYXksIG90aGVyLCBzdGFjayk7XG4gICAgfVxuICAgIGlmIChjb21wYXJlZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBpZiAoY29tcGFyZWQpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICByZXN1bHQgPSBmYWxzZTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIGFycmF5cyAoc3VzY2VwdGlibGUgdG8gY2FsbCBzdGFjayBsaW1pdHMpLlxuICAgIGlmIChzZWVuKSB7XG4gICAgICBpZiAoIWFycmF5U29tZShvdGhlciwgZnVuY3Rpb24ob3RoVmFsdWUsIG90aEluZGV4KSB7XG4gICAgICAgICAgICBpZiAoIXNlZW4uaGFzKG90aEluZGV4KSAmJlxuICAgICAgICAgICAgICAgIChhcnJWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgY3VzdG9taXplciwgYml0bWFzaywgc3RhY2spKSkge1xuICAgICAgICAgICAgICByZXR1cm4gc2Vlbi5hZGQob3RoSW5kZXgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pKSB7XG4gICAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKCEoXG4gICAgICAgICAgYXJyVmFsdWUgPT09IG90aFZhbHVlIHx8XG4gICAgICAgICAgICBlcXVhbEZ1bmMoYXJyVmFsdWUsIG90aFZhbHVlLCBjdXN0b21pemVyLCBiaXRtYXNrLCBzdGFjaylcbiAgICAgICAgKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgc3RhY2tbJ2RlbGV0ZSddKGFycmF5KTtcbiAgc3RhY2tbJ2RlbGV0ZSddKG90aGVyKTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYGJhc2VJc0VxdWFsRGVlcGAgZm9yIGNvbXBhcmluZyBvYmplY3RzIG9mXG4gKiB0aGUgc2FtZSBgdG9TdHJpbmdUYWdgLlxuICpcbiAqICoqTm90ZToqKiBUaGlzIGZ1bmN0aW9uIG9ubHkgc3VwcG9ydHMgY29tcGFyaW5nIHZhbHVlcyB3aXRoIHRhZ3Mgb2ZcbiAqIGBCb29sZWFuYCwgYERhdGVgLCBgRXJyb3JgLCBgTnVtYmVyYCwgYFJlZ0V4cGAsIG9yIGBTdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7T2JqZWN0fSBvdGhlciBUaGUgb3RoZXIgb2JqZWN0IHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge3N0cmluZ30gdGFnIFRoZSBgdG9TdHJpbmdUYWdgIG9mIHRoZSBvYmplY3RzIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBlcXVhbEZ1bmMgVGhlIGZ1bmN0aW9uIHRvIGRldGVybWluZSBlcXVpdmFsZW50cyBvZiB2YWx1ZXMuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjdXN0b21pemVyIFRoZSBmdW5jdGlvbiB0byBjdXN0b21pemUgY29tcGFyaXNvbnMuXG4gKiBAcGFyYW0ge251bWJlcn0gYml0bWFzayBUaGUgYml0bWFzayBvZiBjb21wYXJpc29uIGZsYWdzLiBTZWUgYGJhc2VJc0VxdWFsYFxuICogIGZvciBtb3JlIGRldGFpbHMuXG4gKiBAcGFyYW0ge09iamVjdH0gc3RhY2sgVHJhY2tzIHRyYXZlcnNlZCBgb2JqZWN0YCBhbmQgYG90aGVyYCBvYmplY3RzLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSBvYmplY3RzIGFyZSBlcXVpdmFsZW50LCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGVxdWFsQnlUYWcob2JqZWN0LCBvdGhlciwgdGFnLCBlcXVhbEZ1bmMsIGN1c3RvbWl6ZXIsIGJpdG1hc2ssIHN0YWNrKSB7XG4gIHN3aXRjaCAodGFnKSB7XG4gICAgY2FzZSBkYXRhVmlld1RhZzpcbiAgICAgIGlmICgob2JqZWN0LmJ5dGVMZW5ndGggIT0gb3RoZXIuYnl0ZUxlbmd0aCkgfHxcbiAgICAgICAgICAob2JqZWN0LmJ5dGVPZmZzZXQgIT0gb3RoZXIuYnl0ZU9mZnNldCkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgb2JqZWN0ID0gb2JqZWN0LmJ1ZmZlcjtcbiAgICAgIG90aGVyID0gb3RoZXIuYnVmZmVyO1xuXG4gICAgY2FzZSBhcnJheUJ1ZmZlclRhZzpcbiAgICAgIGlmICgob2JqZWN0LmJ5dGVMZW5ndGggIT0gb3RoZXIuYnl0ZUxlbmd0aCkgfHxcbiAgICAgICAgICAhZXF1YWxGdW5jKG5ldyBVaW50OEFycmF5KG9iamVjdCksIG5ldyBVaW50OEFycmF5KG90aGVyKSkpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgcmV0dXJuIHRydWU7XG5cbiAgICBjYXNlIGJvb2xUYWc6XG4gICAgY2FzZSBkYXRlVGFnOlxuICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgICAgLy8gQ29lcmNlIGJvb2xlYW5zIHRvIGAxYCBvciBgMGAgYW5kIGRhdGVzIHRvIG1pbGxpc2Vjb25kcy5cbiAgICAgIC8vIEludmFsaWQgZGF0ZXMgYXJlIGNvZXJjZWQgdG8gYE5hTmAuXG4gICAgICByZXR1cm4gZXEoK29iamVjdCwgK290aGVyKTtcblxuICAgIGNhc2UgZXJyb3JUYWc6XG4gICAgICByZXR1cm4gb2JqZWN0Lm5hbWUgPT0gb3RoZXIubmFtZSAmJiBvYmplY3QubWVzc2FnZSA9PSBvdGhlci5tZXNzYWdlO1xuXG4gICAgY2FzZSByZWdleHBUYWc6XG4gICAgY2FzZSBzdHJpbmdUYWc6XG4gICAgICAvLyBDb2VyY2UgcmVnZXhlcyB0byBzdHJpbmdzIGFuZCB0cmVhdCBzdHJpbmdzLCBwcmltaXRpdmVzIGFuZCBvYmplY3RzLFxuICAgICAgLy8gYXMgZXF1YWwuIFNlZSBodHRwOi8vd3d3LmVjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtcmVnZXhwLnByb3RvdHlwZS50b3N0cmluZ1xuICAgICAgLy8gZm9yIG1vcmUgZGV0YWlscy5cbiAgICAgIHJldHVybiBvYmplY3QgPT0gKG90aGVyICsgJycpO1xuXG4gICAgY2FzZSBtYXBUYWc6XG4gICAgICB2YXIgY29udmVydCA9IG1hcFRvQXJyYXk7XG5cbiAgICBjYXNlIHNldFRhZzpcbiAgICAgIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgUEFSVElBTF9DT01QQVJFX0ZMQUc7XG4gICAgICBjb252ZXJ0IHx8IChjb252ZXJ0ID0gc2V0VG9BcnJheSk7XG5cbiAgICAgIGlmIChvYmplY3Quc2l6ZSAhPSBvdGhlci5zaXplICYmICFpc1BhcnRpYWwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgLy8gQXNzdW1lIGN5Y2xpYyB2YWx1ZXMgYXJlIGVxdWFsLlxuICAgICAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgICAgIGlmIChzdGFja2VkKSB7XG4gICAgICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICAgICAgfVxuICAgICAgYml0bWFzayB8PSBVTk9SREVSRURfQ09NUEFSRV9GTEFHO1xuXG4gICAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICAgIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgICAgIHZhciByZXN1bHQgPSBlcXVhbEFycmF5cyhjb252ZXJ0KG9iamVjdCksIGNvbnZlcnQob3RoZXIpLCBlcXVhbEZ1bmMsIGN1c3RvbWl6ZXIsIGJpdG1hc2ssIHN0YWNrKTtcbiAgICAgIHN0YWNrWydkZWxldGUnXShvYmplY3QpO1xuICAgICAgcmV0dXJuIHJlc3VsdDtcblxuICAgIGNhc2Ugc3ltYm9sVGFnOlxuICAgICAgaWYgKHN5bWJvbFZhbHVlT2YpIHtcbiAgICAgICAgcmV0dXJuIHN5bWJvbFZhbHVlT2YuY2FsbChvYmplY3QpID09IHN5bWJvbFZhbHVlT2YuY2FsbChvdGhlcik7XG4gICAgICB9XG4gIH1cbiAgcmV0dXJuIGZhbHNlO1xufVxuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUlzRXF1YWxEZWVwYCBmb3Igb2JqZWN0cyB3aXRoIHN1cHBvcnQgZm9yXG4gKiBwYXJ0aWFsIGRlZXAgY29tcGFyaXNvbnMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBjb21wYXJlLlxuICogQHBhcmFtIHtPYmplY3R9IG90aGVyIFRoZSBvdGhlciBvYmplY3QgdG8gY29tcGFyZS5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGVxdWFsRnVuYyBUaGUgZnVuY3Rpb24gdG8gZGV0ZXJtaW5lIGVxdWl2YWxlbnRzIG9mIHZhbHVlcy5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGN1c3RvbWl6ZXIgVGhlIGZ1bmN0aW9uIHRvIGN1c3RvbWl6ZSBjb21wYXJpc29ucy5cbiAqIEBwYXJhbSB7bnVtYmVyfSBiaXRtYXNrIFRoZSBiaXRtYXNrIG9mIGNvbXBhcmlzb24gZmxhZ3MuIFNlZSBgYmFzZUlzRXF1YWxgXG4gKiAgZm9yIG1vcmUgZGV0YWlscy5cbiAqIEBwYXJhbSB7T2JqZWN0fSBzdGFjayBUcmFja3MgdHJhdmVyc2VkIGBvYmplY3RgIGFuZCBgb3RoZXJgIG9iamVjdHMuXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgdGhlIG9iamVjdHMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGVxdWFsRnVuYywgY3VzdG9taXplciwgYml0bWFzaywgc3RhY2spIHtcbiAgdmFyIGlzUGFydGlhbCA9IGJpdG1hc2sgJiBQQVJUSUFMX0NPTVBBUkVfRkxBRyxcbiAgICAgIG9ialByb3BzID0ga2V5cyhvYmplY3QpLFxuICAgICAgb2JqTGVuZ3RoID0gb2JqUHJvcHMubGVuZ3RoLFxuICAgICAgb3RoUHJvcHMgPSBrZXlzKG90aGVyKSxcbiAgICAgIG90aExlbmd0aCA9IG90aFByb3BzLmxlbmd0aDtcblxuICBpZiAob2JqTGVuZ3RoICE9IG90aExlbmd0aCAmJiAhaXNQYXJ0aWFsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBpbmRleCA9IG9iakxlbmd0aDtcbiAgd2hpbGUgKGluZGV4LS0pIHtcbiAgICB2YXIga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIGlmICghKGlzUGFydGlhbCA/IGtleSBpbiBvdGhlciA6IGhhc093blByb3BlcnR5LmNhbGwob3RoZXIsIGtleSkpKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG4gIC8vIEFzc3VtZSBjeWNsaWMgdmFsdWVzIGFyZSBlcXVhbC5cbiAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KTtcbiAgaWYgKHN0YWNrZWQgJiYgc3RhY2suZ2V0KG90aGVyKSkge1xuICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICB9XG4gIHZhciByZXN1bHQgPSB0cnVlO1xuICBzdGFjay5zZXQob2JqZWN0LCBvdGhlcik7XG4gIHN0YWNrLnNldChvdGhlciwgb2JqZWN0KTtcblxuICB2YXIgc2tpcEN0b3IgPSBpc1BhcnRpYWw7XG4gIHdoaWxlICgrK2luZGV4IDwgb2JqTGVuZ3RoKSB7XG4gICAga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgIHZhciBvYmpWYWx1ZSA9IG9iamVjdFtrZXldLFxuICAgICAgICBvdGhWYWx1ZSA9IG90aGVyW2tleV07XG5cbiAgICBpZiAoY3VzdG9taXplcikge1xuICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsXG4gICAgICAgID8gY3VzdG9taXplcihvdGhWYWx1ZSwgb2JqVmFsdWUsIGtleSwgb3RoZXIsIG9iamVjdCwgc3RhY2spXG4gICAgICAgIDogY3VzdG9taXplcihvYmpWYWx1ZSwgb3RoVmFsdWUsIGtleSwgb2JqZWN0LCBvdGhlciwgc3RhY2spO1xuICAgIH1cbiAgICAvLyBSZWN1cnNpdmVseSBjb21wYXJlIG9iamVjdHMgKHN1c2NlcHRpYmxlIHRvIGNhbGwgc3RhY2sgbGltaXRzKS5cbiAgICBpZiAoIShjb21wYXJlZCA9PT0gdW5kZWZpbmVkXG4gICAgICAgICAgPyAob2JqVmFsdWUgPT09IG90aFZhbHVlIHx8IGVxdWFsRnVuYyhvYmpWYWx1ZSwgb3RoVmFsdWUsIGN1c3RvbWl6ZXIsIGJpdG1hc2ssIHN0YWNrKSlcbiAgICAgICAgICA6IGNvbXBhcmVkXG4gICAgICAgICkpIHtcbiAgICAgIHJlc3VsdCA9IGZhbHNlO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHNraXBDdG9yIHx8IChza2lwQ3RvciA9IGtleSA9PSAnY29uc3RydWN0b3InKTtcbiAgfVxuICBpZiAocmVzdWx0ICYmICFza2lwQ3Rvcikge1xuICAgIHZhciBvYmpDdG9yID0gb2JqZWN0LmNvbnN0cnVjdG9yLFxuICAgICAgICBvdGhDdG9yID0gb3RoZXIuY29uc3RydWN0b3I7XG5cbiAgICAvLyBOb24gYE9iamVjdGAgb2JqZWN0IGluc3RhbmNlcyB3aXRoIGRpZmZlcmVudCBjb25zdHJ1Y3RvcnMgYXJlIG5vdCBlcXVhbC5cbiAgICBpZiAob2JqQ3RvciAhPSBvdGhDdG9yICYmXG4gICAgICAgICgnY29uc3RydWN0b3InIGluIG9iamVjdCAmJiAnY29uc3RydWN0b3InIGluIG90aGVyKSAmJlxuICAgICAgICAhKHR5cGVvZiBvYmpDdG9yID09ICdmdW5jdGlvbicgJiYgb2JqQ3RvciBpbnN0YW5jZW9mIG9iakN0b3IgJiZcbiAgICAgICAgICB0eXBlb2Ygb3RoQ3RvciA9PSAnZnVuY3Rpb24nICYmIG90aEN0b3IgaW5zdGFuY2VvZiBvdGhDdG9yKSkge1xuICAgICAgcmVzdWx0ID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIHN0YWNrWydkZWxldGUnXShvYmplY3QpO1xuICBzdGFja1snZGVsZXRlJ10ob3RoZXIpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGRhdGEgZm9yIGBtYXBgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge09iamVjdH0gbWFwIFRoZSBtYXAgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge3N0cmluZ30ga2V5IFRoZSByZWZlcmVuY2Uga2V5LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIG1hcCBkYXRhLlxuICovXG5mdW5jdGlvbiBnZXRNYXBEYXRhKG1hcCwga2V5KSB7XG4gIHZhciBkYXRhID0gbWFwLl9fZGF0YV9fO1xuICByZXR1cm4gaXNLZXlhYmxlKGtleSlcbiAgICA/IGRhdGFbdHlwZW9mIGtleSA9PSAnc3RyaW5nJyA/ICdzdHJpbmcnIDogJ2hhc2gnXVxuICAgIDogZGF0YS5tYXA7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgcHJvcGVydHkgbmFtZXMsIHZhbHVlcywgYW5kIGNvbXBhcmUgZmxhZ3Mgb2YgYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgbWF0Y2ggZGF0YSBvZiBgb2JqZWN0YC5cbiAqL1xuZnVuY3Rpb24gZ2V0TWF0Y2hEYXRhKG9iamVjdCkge1xuICB2YXIgcmVzdWx0ID0ga2V5cyhvYmplY3QpLFxuICAgICAgbGVuZ3RoID0gcmVzdWx0Lmxlbmd0aDtcblxuICB3aGlsZSAobGVuZ3RoLS0pIHtcbiAgICB2YXIga2V5ID0gcmVzdWx0W2xlbmd0aF0sXG4gICAgICAgIHZhbHVlID0gb2JqZWN0W2tleV07XG5cbiAgICByZXN1bHRbbGVuZ3RoXSA9IFtrZXksIHZhbHVlLCBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpXTtcbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEdldHMgdGhlIG5hdGl2ZSBmdW5jdGlvbiBhdCBga2V5YCBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtPYmplY3R9IG9iamVjdCBUaGUgb2JqZWN0IHRvIHF1ZXJ5LlxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBtZXRob2QgdG8gZ2V0LlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGZ1bmN0aW9uIGlmIGl0J3MgbmF0aXZlLCBlbHNlIGB1bmRlZmluZWRgLlxuICovXG5mdW5jdGlvbiBnZXROYXRpdmUob2JqZWN0LCBrZXkpIHtcbiAgdmFyIHZhbHVlID0gZ2V0VmFsdWUob2JqZWN0LCBrZXkpO1xuICByZXR1cm4gYmFzZUlzTmF0aXZlKHZhbHVlKSA/IHZhbHVlIDogdW5kZWZpbmVkO1xufVxuXG4vKipcbiAqIEdldHMgdGhlIGB0b1N0cmluZ1RhZ2Agb2YgYHZhbHVlYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG52YXIgZ2V0VGFnID0gYmFzZUdldFRhZztcblxuLy8gRmFsbGJhY2sgZm9yIGRhdGEgdmlld3MsIG1hcHMsIHNldHMsIGFuZCB3ZWFrIG1hcHMgaW4gSUUgMTEsXG4vLyBmb3IgZGF0YSB2aWV3cyBpbiBFZGdlIDwgMTQsIGFuZCBwcm9taXNlcyBpbiBOb2RlLmpzLlxuaWYgKChEYXRhVmlldyAmJiBnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpICE9IGRhdGFWaWV3VGFnKSB8fFxuICAgIChNYXAgJiYgZ2V0VGFnKG5ldyBNYXApICE9IG1hcFRhZykgfHxcbiAgICAoUHJvbWlzZSAmJiBnZXRUYWcoUHJvbWlzZS5yZXNvbHZlKCkpICE9IHByb21pc2VUYWcpIHx8XG4gICAgKFNldCAmJiBnZXRUYWcobmV3IFNldCkgIT0gc2V0VGFnKSB8fFxuICAgIChXZWFrTWFwICYmIGdldFRhZyhuZXcgV2Vha01hcCkgIT0gd2Vha01hcFRhZykpIHtcbiAgZ2V0VGFnID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgICB2YXIgcmVzdWx0ID0gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSksXG4gICAgICAgIEN0b3IgPSByZXN1bHQgPT0gb2JqZWN0VGFnID8gdmFsdWUuY29uc3RydWN0b3IgOiB1bmRlZmluZWQsXG4gICAgICAgIGN0b3JTdHJpbmcgPSBDdG9yID8gdG9Tb3VyY2UoQ3RvcikgOiB1bmRlZmluZWQ7XG5cbiAgICBpZiAoY3RvclN0cmluZykge1xuICAgICAgc3dpdGNoIChjdG9yU3RyaW5nKSB7XG4gICAgICAgIGNhc2UgZGF0YVZpZXdDdG9yU3RyaW5nOiByZXR1cm4gZGF0YVZpZXdUYWc7XG4gICAgICAgIGNhc2UgbWFwQ3RvclN0cmluZzogcmV0dXJuIG1hcFRhZztcbiAgICAgICAgY2FzZSBwcm9taXNlQ3RvclN0cmluZzogcmV0dXJuIHByb21pc2VUYWc7XG4gICAgICAgIGNhc2Ugc2V0Q3RvclN0cmluZzogcmV0dXJuIHNldFRhZztcbiAgICAgICAgY2FzZSB3ZWFrTWFwQ3RvclN0cmluZzogcmV0dXJuIHdlYWtNYXBUYWc7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBwYXRoYCBleGlzdHMgb24gYG9iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIHRvIGNoZWNrLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFzRnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2sgcHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgcGF0aGAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc1BhdGgob2JqZWN0LCBwYXRoLCBoYXNGdW5jKSB7XG4gIHBhdGggPSBpc0tleShwYXRoLCBvYmplY3QpID8gW3BhdGhdIDogY2FzdFBhdGgocGF0aCk7XG5cbiAgdmFyIHJlc3VsdCxcbiAgICAgIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBwYXRoLmxlbmd0aDtcblxuICB3aGlsZSAoKytpbmRleCA8IGxlbmd0aCkge1xuICAgIHZhciBrZXkgPSB0b0tleShwYXRoW2luZGV4XSk7XG4gICAgaWYgKCEocmVzdWx0ID0gb2JqZWN0ICE9IG51bGwgJiYgaGFzRnVuYyhvYmplY3QsIGtleSkpKSB7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgb2JqZWN0ID0gb2JqZWN0W2tleV07XG4gIH1cbiAgaWYgKHJlc3VsdCkge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbiAgdmFyIGxlbmd0aCA9IG9iamVjdCA/IG9iamVjdC5sZW5ndGggOiAwO1xuICByZXR1cm4gISFsZW5ndGggJiYgaXNMZW5ndGgobGVuZ3RoKSAmJiBpc0luZGV4KGtleSwgbGVuZ3RoKSAmJlxuICAgIChpc0FycmF5KG9iamVjdCkgfHwgaXNBcmd1bWVudHMob2JqZWN0KSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGluZGV4LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbbGVuZ3RoPU1BWF9TQUZFX0lOVEVHRVJdIFRoZSB1cHBlciBib3VuZHMgb2YgYSB2YWxpZCBpbmRleC5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdmFsaWQgaW5kZXgsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNJbmRleCh2YWx1ZSwgbGVuZ3RoKSB7XG4gIGxlbmd0aCA9IGxlbmd0aCA9PSBudWxsID8gTUFYX1NBRkVfSU5URUdFUiA6IGxlbmd0aDtcbiAgcmV0dXJuICEhbGVuZ3RoICYmXG4gICAgKHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyB8fCByZUlzVWludC50ZXN0KHZhbHVlKSkgJiZcbiAgICAodmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8IGxlbmd0aCk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSBwcm9wZXJ0eSBuYW1lIGFuZCBub3QgYSBwcm9wZXJ0eSBwYXRoLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb2JqZWN0XSBUaGUgb2JqZWN0IHRvIHF1ZXJ5IGtleXMgb24uXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3BlcnR5IG5hbWUsIGVsc2UgYGZhbHNlYC5cbiAqL1xuZnVuY3Rpb24gaXNLZXkodmFsdWUsIG9iamVjdCkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIGlmICh0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicgfHxcbiAgICAgIHZhbHVlID09IG51bGwgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbiAgcmV0dXJuIHJlSXNQbGFpblByb3AudGVzdCh2YWx1ZSkgfHwgIXJlSXNEZWVwUHJvcC50ZXN0KHZhbHVlKSB8fFxuICAgIChvYmplY3QgIT0gbnVsbCAmJiB2YWx1ZSBpbiBPYmplY3Qob2JqZWN0KSk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgc3VpdGFibGUgZm9yIHVzZSBhcyB1bmlxdWUgb2JqZWN0IGtleS5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc0tleWFibGUodmFsdWUpIHtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gIHJldHVybiAodHlwZSA9PSAnc3RyaW5nJyB8fCB0eXBlID09ICdudW1iZXInIHx8IHR5cGUgPT0gJ3N5bWJvbCcgfHwgdHlwZSA9PSAnYm9vbGVhbicpXG4gICAgPyAodmFsdWUgIT09ICdfX3Byb3RvX18nKVxuICAgIDogKHZhbHVlID09PSBudWxsKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYGZ1bmNgIGhhcyBpdHMgc291cmNlIG1hc2tlZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBUaGUgZnVuY3Rpb24gdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYGZ1bmNgIGlzIG1hc2tlZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc01hc2tlZChmdW5jKSB7XG4gIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgKG1hc2tTcmNLZXkgaW4gZnVuYyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGEgcHJvdG90eXBlIG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHByb3RvdHlwZSwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1Byb3RvdHlwZSh2YWx1ZSkge1xuICB2YXIgQ3RvciA9IHZhbHVlICYmIHZhbHVlLmNvbnN0cnVjdG9yLFxuICAgICAgcHJvdG8gPSAodHlwZW9mIEN0b3IgPT0gJ2Z1bmN0aW9uJyAmJiBDdG9yLnByb3RvdHlwZSkgfHwgb2JqZWN0UHJvdG87XG5cbiAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBzdWl0YWJsZSBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25zLCBpLmUuIGA9PT1gLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlmIHN1aXRhYmxlIGZvciBzdHJpY3RcbiAqICBlcXVhbGl0eSBjb21wYXJpc29ucywgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09PSB2YWx1ZSAmJiAhaXNPYmplY3QodmFsdWUpO1xufVxuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgbWF0Y2hlc1Byb3BlcnR5YCBmb3Igc291cmNlIHZhbHVlcyBzdWl0YWJsZVxuICogZm9yIHN0cmljdCBlcXVhbGl0eSBjb21wYXJpc29ucywgaS5lLiBgPT09YC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtzdHJpbmd9IGtleSBUaGUga2V5IG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IHNyY1ZhbHVlIFRoZSB2YWx1ZSB0byBtYXRjaC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gUmV0dXJucyB0aGUgbmV3IHNwZWMgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlKGtleSwgc3JjVmFsdWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIGlmIChvYmplY3QgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gb2JqZWN0W2tleV0gPT09IHNyY1ZhbHVlICYmXG4gICAgICAoc3JjVmFsdWUgIT09IHVuZGVmaW5lZCB8fCAoa2V5IGluIE9iamVjdChvYmplY3QpKSk7XG4gIH07XG59XG5cbi8qKlxuICogQ29udmVydHMgYHN0cmluZ2AgdG8gYSBwcm9wZXJ0eSBwYXRoIGFycmF5LlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RyaW5nIFRoZSBzdHJpbmcgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgcHJvcGVydHkgcGF0aCBhcnJheS5cbiAqL1xudmFyIHN0cmluZ1RvUGF0aCA9IG1lbW9pemUoZnVuY3Rpb24oc3RyaW5nKSB7XG4gIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyk7XG5cbiAgdmFyIHJlc3VsdCA9IFtdO1xuICBpZiAocmVMZWFkaW5nRG90LnRlc3Qoc3RyaW5nKSkge1xuICAgIHJlc3VsdC5wdXNoKCcnKTtcbiAgfVxuICBzdHJpbmcucmVwbGFjZShyZVByb3BOYW1lLCBmdW5jdGlvbihtYXRjaCwgbnVtYmVyLCBxdW90ZSwgc3RyaW5nKSB7XG4gICAgcmVzdWx0LnB1c2gocXVvdGUgPyBzdHJpbmcucmVwbGFjZShyZUVzY2FwZUNoYXIsICckMScpIDogKG51bWJlciB8fCBtYXRjaCkpO1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn0pO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcga2V5IGlmIGl0J3Mgbm90IGEgc3RyaW5nIG9yIHN5bWJvbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gaW5zcGVjdC5cbiAqIEByZXR1cm5zIHtzdHJpbmd8c3ltYm9sfSBSZXR1cm5zIHRoZSBrZXkuXG4gKi9cbmZ1bmN0aW9uIHRvS2V5KHZhbHVlKSB7XG4gIGlmICh0eXBlb2YgdmFsdWUgPT0gJ3N0cmluZycgfHwgaXNTeW1ib2wodmFsdWUpKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xuICB9XG4gIHZhciByZXN1bHQgPSAodmFsdWUgKyAnJyk7XG4gIHJldHVybiAocmVzdWx0ID09ICcwJyAmJiAoMSAvIHZhbHVlKSA9PSAtSU5GSU5JVFkpID8gJy0wJyA6IHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBgZnVuY2AgdG8gaXRzIHNvdXJjZSBjb2RlLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBwcm9jZXNzLlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc291cmNlIGNvZGUuXG4gKi9cbmZ1bmN0aW9uIHRvU291cmNlKGZ1bmMpIHtcbiAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gZnVuY1RvU3RyaW5nLmNhbGwoZnVuYyk7XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgcmV0dXJuIChmdW5jICsgJycpO1xuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH1cbiAgcmV0dXJuICcnO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gb2JqZWN0IGNvbXBvc2VkIG9mIGtleXMgZ2VuZXJhdGVkIGZyb20gdGhlIHJlc3VsdHMgb2YgcnVubmluZ1xuICogZWFjaCBlbGVtZW50IG9mIGBjb2xsZWN0aW9uYCB0aHJ1IGBpdGVyYXRlZWAuIFRoZSBvcmRlciBvZiBncm91cGVkIHZhbHVlc1xuICogaXMgZGV0ZXJtaW5lZCBieSB0aGUgb3JkZXIgdGhleSBvY2N1ciBpbiBgY29sbGVjdGlvbmAuIFRoZSBjb3JyZXNwb25kaW5nXG4gKiB2YWx1ZSBvZiBlYWNoIGtleSBpcyBhbiBhcnJheSBvZiBlbGVtZW50cyByZXNwb25zaWJsZSBmb3IgZ2VuZXJhdGluZyB0aGVcbiAqIGtleS4gVGhlIGl0ZXJhdGVlIGlzIGludm9rZWQgd2l0aCBvbmUgYXJndW1lbnQ6ICh2YWx1ZSkuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IENvbGxlY3Rpb25cbiAqIEBwYXJhbSB7QXJyYXl8T2JqZWN0fSBjb2xsZWN0aW9uIFRoZSBjb2xsZWN0aW9uIHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtpdGVyYXRlZT1fLmlkZW50aXR5XVxuICogIFRoZSBpdGVyYXRlZSB0byB0cmFuc2Zvcm0ga2V5cy5cbiAqIEByZXR1cm5zIHtPYmplY3R9IFJldHVybnMgdGhlIGNvbXBvc2VkIGFnZ3JlZ2F0ZSBvYmplY3QuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uZ3JvdXBCeShbNi4xLCA0LjIsIDYuM10sIE1hdGguZmxvb3IpO1xuICogLy8gPT4geyAnNCc6IFs0LjJdLCAnNic6IFs2LjEsIDYuM10gfVxuICpcbiAqIC8vIFRoZSBgXy5wcm9wZXJ0eWAgaXRlcmF0ZWUgc2hvcnRoYW5kLlxuICogXy5ncm91cEJ5KFsnb25lJywgJ3R3bycsICd0aHJlZSddLCAnbGVuZ3RoJyk7XG4gKiAvLyA9PiB7ICczJzogWydvbmUnLCAndHdvJ10sICc1JzogWyd0aHJlZSddIH1cbiAqL1xudmFyIGdyb3VwQnkgPSBjcmVhdGVBZ2dyZWdhdG9yKGZ1bmN0aW9uKHJlc3VsdCwgdmFsdWUsIGtleSkge1xuICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQsIGtleSkpIHtcbiAgICByZXN1bHRba2V5XS5wdXNoKHZhbHVlKTtcbiAgfSBlbHNlIHtcbiAgICByZXN1bHRba2V5XSA9IFt2YWx1ZV07XG4gIH1cbn0pO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBmdW5jdGlvbiB0aGF0IG1lbW9pemVzIHRoZSByZXN1bHQgb2YgYGZ1bmNgLiBJZiBgcmVzb2x2ZXJgIGlzXG4gKiBwcm92aWRlZCwgaXQgZGV0ZXJtaW5lcyB0aGUgY2FjaGUga2V5IGZvciBzdG9yaW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlXG4gKiBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLiBCeSBkZWZhdWx0LCB0aGUgZmlyc3QgYXJndW1lbnRcbiAqIHByb3ZpZGVkIHRvIHRoZSBtZW1vaXplZCBmdW5jdGlvbiBpcyB1c2VkIGFzIHRoZSBtYXAgY2FjaGUga2V5LiBUaGUgYGZ1bmNgXG4gKiBpcyBpbnZva2VkIHdpdGggdGhlIGB0aGlzYCBiaW5kaW5nIG9mIHRoZSBtZW1vaXplZCBmdW5jdGlvbi5cbiAqXG4gKiAqKk5vdGU6KiogVGhlIGNhY2hlIGlzIGV4cG9zZWQgYXMgdGhlIGBjYWNoZWAgcHJvcGVydHkgb24gdGhlIG1lbW9pemVkXG4gKiBmdW5jdGlvbi4gSXRzIGNyZWF0aW9uIG1heSBiZSBjdXN0b21pemVkIGJ5IHJlcGxhY2luZyB0aGUgYF8ubWVtb2l6ZS5DYWNoZWBcbiAqIGNvbnN0cnVjdG9yIHdpdGggb25lIHdob3NlIGluc3RhbmNlcyBpbXBsZW1lbnQgdGhlXG4gKiBbYE1hcGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXByb3BlcnRpZXMtb2YtdGhlLW1hcC1wcm90b3R5cGUtb2JqZWN0KVxuICogbWV0aG9kIGludGVyZmFjZSBvZiBgZGVsZXRlYCwgYGdldGAsIGBoYXNgLCBhbmQgYHNldGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjEuMFxuICogQGNhdGVnb3J5IEZ1bmN0aW9uXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFRoZSBmdW5jdGlvbiB0byBoYXZlIGl0cyBvdXRwdXQgbWVtb2l6ZWQuXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBbcmVzb2x2ZXJdIFRoZSBmdW5jdGlvbiB0byByZXNvbHZlIHRoZSBjYWNoZSBrZXkuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBtZW1vaXplZCBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxLCAnYic6IDIgfTtcbiAqIHZhciBvdGhlciA9IHsgJ2MnOiAzLCAnZCc6IDQgfTtcbiAqXG4gKiB2YXIgdmFsdWVzID0gXy5tZW1vaXplKF8udmFsdWVzKTtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogdmFsdWVzKG90aGVyKTtcbiAqIC8vID0+IFszLCA0XVxuICpcbiAqIG9iamVjdC5hID0gMjtcbiAqIHZhbHVlcyhvYmplY3QpO1xuICogLy8gPT4gWzEsIDJdXG4gKlxuICogLy8gTW9kaWZ5IHRoZSByZXN1bHQgY2FjaGUuXG4gKiB2YWx1ZXMuY2FjaGUuc2V0KG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiB2YWx1ZXMob2JqZWN0KTtcbiAqIC8vID0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBSZXBsYWNlIGBfLm1lbW9pemUuQ2FjaGVgLlxuICogXy5tZW1vaXplLkNhY2hlID0gV2Vha01hcDtcbiAqL1xuZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICBpZiAodHlwZW9mIGZ1bmMgIT0gJ2Z1bmN0aW9uJyB8fCAocmVzb2x2ZXIgJiYgdHlwZW9mIHJlc29sdmVyICE9ICdmdW5jdGlvbicpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICB9XG4gIHZhciBtZW1vaXplZCA9IGZ1bmN0aW9uKCkge1xuICAgIHZhciBhcmdzID0gYXJndW1lbnRzLFxuICAgICAgICBrZXkgPSByZXNvbHZlciA/IHJlc29sdmVyLmFwcGx5KHRoaXMsIGFyZ3MpIDogYXJnc1swXSxcbiAgICAgICAgY2FjaGUgPSBtZW1vaXplZC5jYWNoZTtcblxuICAgIGlmIChjYWNoZS5oYXMoa2V5KSkge1xuICAgICAgcmV0dXJuIGNhY2hlLmdldChrZXkpO1xuICAgIH1cbiAgICB2YXIgcmVzdWx0ID0gZnVuYy5hcHBseSh0aGlzLCBhcmdzKTtcbiAgICBtZW1vaXplZC5jYWNoZSA9IGNhY2hlLnNldChrZXksIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgbWVtb2l6ZWQuY2FjaGUgPSBuZXcgKG1lbW9pemUuQ2FjaGUgfHwgTWFwQ2FjaGUpO1xuICByZXR1cm4gbWVtb2l6ZWQ7XG59XG5cbi8vIEFzc2lnbiBjYWNoZSB0byBgXy5tZW1vaXplYC5cbm1lbW9pemUuQ2FjaGUgPSBNYXBDYWNoZTtcblxuLyoqXG4gKiBQZXJmb3JtcyBhXG4gKiBbYFNhbWVWYWx1ZVplcm9gXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1zYW1ldmFsdWV6ZXJvKVxuICogY29tcGFyaXNvbiBiZXR3ZWVuIHR3byB2YWx1ZXMgdG8gZGV0ZXJtaW5lIGlmIHRoZXkgYXJlIGVxdWl2YWxlbnQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNvbXBhcmUuXG4gKiBAcGFyYW0geyp9IG90aGVyIFRoZSBvdGhlciB2YWx1ZSB0byBjb21wYXJlLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIHRoZSB2YWx1ZXMgYXJlIGVxdWl2YWxlbnQsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKiB2YXIgb3RoZXIgPSB7ICdhJzogMSB9O1xuICpcbiAqIF8uZXEob2JqZWN0LCBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEob2JqZWN0LCBvdGhlcik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoJ2EnLCAnYScpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uZXEoJ2EnLCBPYmplY3QoJ2EnKSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uZXEoTmFOLCBOYU4pO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBlcSh2YWx1ZSwgb3RoZXIpIHtcbiAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCAodmFsdWUgIT09IHZhbHVlICYmIG90aGVyICE9PSBvdGhlcik7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgbGlrZWx5IGFuIGBhcmd1bWVudHNgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBgYXJndW1lbnRzYCBvYmplY3QsXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJndW1lbnRzKGZ1bmN0aW9uKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNBcmd1bWVudHMoWzEsIDIsIDNdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzQXJndW1lbnRzKHZhbHVlKSB7XG4gIC8vIFNhZmFyaSA4LjEgbWFrZXMgYGFyZ3VtZW50cy5jYWxsZWVgIGVudW1lcmFibGUgaW4gc3RyaWN0IG1vZGUuXG4gIHJldHVybiBpc0FycmF5TGlrZU9iamVjdCh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgJ2NhbGxlZScpICYmXG4gICAgKCFwcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHZhbHVlLCAnY2FsbGVlJykgfHwgb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT0gYXJnc1RhZyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhbiBgQXJyYXlgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXkoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheSgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGFycmF5LWxpa2UuIEEgdmFsdWUgaXMgY29uc2lkZXJlZCBhcnJheS1saWtlIGlmIGl0J3NcbiAqIG5vdCBhIGZ1bmN0aW9uIGFuZCBoYXMgYSBgdmFsdWUubGVuZ3RoYCB0aGF0J3MgYW4gaW50ZWdlciBncmVhdGVyIHRoYW4gb3JcbiAqIGVxdWFsIHRvIGAwYCBhbmQgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIGBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUmAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYXJyYXktbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZShkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKCdhYmMnKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0FycmF5TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICFpc0Z1bmN0aW9uKHZhbHVlKTtcbn1cblxuLyoqXG4gKiBUaGlzIG1ldGhvZCBpcyBsaWtlIGBfLmlzQXJyYXlMaWtlYCBleGNlcHQgdGhhdCBpdCBhbHNvIGNoZWNrcyBpZiBgdmFsdWVgXG4gKiBpcyBhbiBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYW4gYXJyYXktbGlrZSBvYmplY3QsXG4gKiAgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc0FycmF5TGlrZU9iamVjdChkb2N1bWVudC5ib2R5LmNoaWxkcmVuKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXlMaWtlT2JqZWN0KCdhYmMnKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc0FycmF5TGlrZU9iamVjdChfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNBcnJheUxpa2VPYmplY3QodmFsdWUpIHtcbiAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaXNBcnJheUxpa2UodmFsdWUpO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgRnVuY3Rpb25gIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIGZ1bmN0aW9uLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNGdW5jdGlvbihfKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzRnVuY3Rpb24oL2FiYy8pO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAvLyBUaGUgdXNlIG9mIGBPYmplY3QjdG9TdHJpbmdgIGF2b2lkcyBpc3N1ZXMgd2l0aCB0aGUgYHR5cGVvZmAgb3BlcmF0b3JcbiAgLy8gaW4gU2FmYXJpIDgtOSB3aGljaCByZXR1cm5zICdvYmplY3QnIGZvciB0eXBlZCBhcnJheSBhbmQgb3RoZXIgY29uc3RydWN0b3JzLlxuICB2YXIgdGFnID0gaXNPYmplY3QodmFsdWUpID8gb2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkgOiAnJztcbiAgcmV0dXJuIHRhZyA9PSBmdW5jVGFnIHx8IHRhZyA9PSBnZW5UYWc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgYSB2YWxpZCBhcnJheS1saWtlIGxlbmd0aC5cbiAqXG4gKiAqKk5vdGU6KiogVGhpcyBtZXRob2QgaXMgbG9vc2VseSBiYXNlZCBvblxuICogW2BUb0xlbmd0aGBdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLXRvbGVuZ3RoKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIHZhbGlkIGxlbmd0aCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTGVuZ3RoKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNMZW5ndGgoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNMZW5ndGgoSW5maW5pdHkpO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzTGVuZ3RoKCczJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc0xlbmd0aCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdudW1iZXInICYmXG4gICAgdmFsdWUgPiAtMSAmJiB2YWx1ZSAlIDEgPT0gMCAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIHRoZVxuICogW2xhbmd1YWdlIHR5cGVdKGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1lY21hc2NyaXB0LWxhbmd1YWdlLXR5cGVzKVxuICogb2YgYE9iamVjdGAuIChlLmcuIGFycmF5cywgZnVuY3Rpb25zLCBvYmplY3RzLCByZWdleGVzLCBgbmV3IE51bWJlcigwKWAsIGFuZCBgbmV3IFN0cmluZygnJylgKVxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGFuIG9iamVjdCwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0KHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdChfLm5vb3ApO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3QobnVsbCk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICB2YXIgdHlwZSA9IHR5cGVvZiB2YWx1ZTtcbiAgcmV0dXJuICEhdmFsdWUgJiYgKHR5cGUgPT0gJ29iamVjdCcgfHwgdHlwZSA9PSAnZnVuY3Rpb24nKTtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gISF2YWx1ZSAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBTeW1ib2xgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBzeW1ib2wsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1N5bWJvbChTeW1ib2wuaXRlcmF0b3IpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTeW1ib2woJ2FiYycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnc3ltYm9sJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIG9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpID09IHN5bWJvbFRhZyk7XG59XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIHR5cGVkIGFycmF5LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgdHlwZWQgYXJyYXksIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogXy5pc1R5cGVkQXJyYXkobmV3IFVpbnQ4QXJyYXkpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNUeXBlZEFycmF5KFtdKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbnZhciBpc1R5cGVkQXJyYXkgPSBub2RlSXNUeXBlZEFycmF5ID8gYmFzZVVuYXJ5KG5vZGVJc1R5cGVkQXJyYXkpIDogYmFzZUlzVHlwZWRBcnJheTtcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nLiBBbiBlbXB0eSBzdHJpbmcgaXMgcmV0dXJuZWQgZm9yIGBudWxsYFxuICogYW5kIGB1bmRlZmluZWRgIHZhbHVlcy4gVGhlIHNpZ24gb2YgYC0wYCBpcyBwcmVzZXJ2ZWQuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSA0LjAuMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHByb2Nlc3MuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8udG9TdHJpbmcobnVsbCk7XG4gKiAvLyA9PiAnJ1xuICpcbiAqIF8udG9TdHJpbmcoLTApO1xuICogLy8gPT4gJy0wJ1xuICpcbiAqIF8udG9TdHJpbmcoWzEsIDIsIDNdKTtcbiAqIC8vID0+ICcxLDIsMydcbiAqL1xuZnVuY3Rpb24gdG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlID09IG51bGwgPyAnJyA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdmFsdWUgYXQgYHBhdGhgIG9mIGBvYmplY3RgLiBJZiB0aGUgcmVzb2x2ZWQgdmFsdWUgaXNcbiAqIGB1bmRlZmluZWRgLCB0aGUgYGRlZmF1bHRWYWx1ZWAgaXMgcmV0dXJuZWQgaW4gaXRzIHBsYWNlLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy43LjBcbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcGFyYW0geyp9IFtkZWZhdWx0VmFsdWVdIFRoZSB2YWx1ZSByZXR1cm5lZCBmb3IgYHVuZGVmaW5lZGAgcmVzb2x2ZWQgdmFsdWVzLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIHJlc29sdmVkIHZhbHVlLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IFt7ICdiJzogeyAnYyc6IDMgfSB9XSB9O1xuICpcbiAqIF8uZ2V0KG9iamVjdCwgJ2FbMF0uYi5jJyk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCBbJ2EnLCAnMCcsICdiJywgJ2MnXSk7XG4gKiAvLyA9PiAzXG4gKlxuICogXy5nZXQob2JqZWN0LCAnYS5iLmMnLCAnZGVmYXVsdCcpO1xuICogLy8gPT4gJ2RlZmF1bHQnXG4gKi9cbmZ1bmN0aW9uIGdldChvYmplY3QsIHBhdGgsIGRlZmF1bHRWYWx1ZSkge1xuICB2YXIgcmVzdWx0ID0gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gIHJldHVybiByZXN1bHQgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRWYWx1ZSA6IHJlc3VsdDtcbn1cblxuLyoqXG4gKiBDaGVja3MgaWYgYHBhdGhgIGlzIGEgZGlyZWN0IG9yIGluaGVyaXRlZCBwcm9wZXJ0eSBvZiBgb2JqZWN0YC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgT2JqZWN0XG4gKiBAcGFyYW0ge09iamVjdH0gb2JqZWN0IFRoZSBvYmplY3QgdG8gcXVlcnkuXG4gKiBAcGFyYW0ge0FycmF5fHN0cmluZ30gcGF0aCBUaGUgcGF0aCB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgcGF0aGAgZXhpc3RzLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIHZhciBvYmplY3QgPSBfLmNyZWF0ZSh7ICdhJzogXy5jcmVhdGUoeyAnYic6IDIgfSkgfSk7XG4gKlxuICogXy5oYXNJbihvYmplY3QsICdhJyk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5oYXNJbihvYmplY3QsICdhLmInKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmhhc0luKG9iamVjdCwgWydhJywgJ2InXSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5oYXNJbihvYmplY3QsICdiJyk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBoYXNJbihvYmplY3QsIHBhdGgpIHtcbiAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGhhc1BhdGgob2JqZWN0LCBwYXRoLCBiYXNlSGFzSW4pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYW4gYXJyYXkgb2YgdGhlIG93biBlbnVtZXJhYmxlIHByb3BlcnR5IG5hbWVzIG9mIGBvYmplY3RgLlxuICpcbiAqICoqTm90ZToqKiBOb24tb2JqZWN0IHZhbHVlcyBhcmUgY29lcmNlZCB0byBvYmplY3RzLiBTZWUgdGhlXG4gKiBbRVMgc3BlY10oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LmtleXMpXG4gKiBmb3IgbW9yZSBkZXRhaWxzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBPYmplY3RcbiAqIEBwYXJhbSB7T2JqZWN0fSBvYmplY3QgVGhlIG9iamVjdCB0byBxdWVyeS5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgYXJyYXkgb2YgcHJvcGVydHkgbmFtZXMuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGZ1bmN0aW9uIEZvbygpIHtcbiAqICAgdGhpcy5hID0gMTtcbiAqICAgdGhpcy5iID0gMjtcbiAqIH1cbiAqXG4gKiBGb28ucHJvdG90eXBlLmMgPSAzO1xuICpcbiAqIF8ua2V5cyhuZXcgRm9vKTtcbiAqIC8vID0+IFsnYScsICdiJ10gKGl0ZXJhdGlvbiBvcmRlciBpcyBub3QgZ3VhcmFudGVlZClcbiAqXG4gKiBfLmtleXMoJ2hpJyk7XG4gKiAvLyA9PiBbJzAnLCAnMSddXG4gKi9cbmZ1bmN0aW9uIGtleXMob2JqZWN0KSB7XG4gIHJldHVybiBpc0FycmF5TGlrZShvYmplY3QpID8gYXJyYXlMaWtlS2V5cyhvYmplY3QpIDogYmFzZUtleXMob2JqZWN0KTtcbn1cblxuLyoqXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBpdCByZWNlaXZlcy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHsqfSB2YWx1ZSBBbnkgdmFsdWUuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyBgdmFsdWVgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqXG4gKiBjb25zb2xlLmxvZyhfLmlkZW50aXR5KG9iamVjdCkgPT09IG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn1cblxuLyoqXG4gKiBDcmVhdGVzIGEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSB2YWx1ZSBhdCBgcGF0aGAgb2YgYSBnaXZlbiBvYmplY3QuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAyLjQuMFxuICogQGNhdGVnb3J5IFV0aWxcbiAqIEBwYXJhbSB7QXJyYXl8c3RyaW5nfSBwYXRoIFRoZSBwYXRoIG9mIHRoZSBwcm9wZXJ0eSB0byBnZXQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBhY2Nlc3NvciBmdW5jdGlvbi5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdHMgPSBbXG4gKiAgIHsgJ2EnOiB7ICdiJzogMiB9IH0sXG4gKiAgIHsgJ2EnOiB7ICdiJzogMSB9IH1cbiAqIF07XG4gKlxuICogXy5tYXAob2JqZWN0cywgXy5wcm9wZXJ0eSgnYS5iJykpO1xuICogLy8gPT4gWzIsIDFdXG4gKlxuICogXy5tYXAoXy5zb3J0Qnkob2JqZWN0cywgXy5wcm9wZXJ0eShbJ2EnLCAnYiddKSksICdhLmInKTtcbiAqIC8vID0+IFsxLCAyXVxuICovXG5mdW5jdGlvbiBwcm9wZXJ0eShwYXRoKSB7XG4gIHJldHVybiBpc0tleShwYXRoKSA/IGJhc2VQcm9wZXJ0eSh0b0tleShwYXRoKSkgOiBiYXNlUHJvcGVydHlEZWVwKHBhdGgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGdyb3VwQnk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.groupby/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.merge/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.merge/index.js\n");

/***/ }),

/***/ "../../../node_modules/lodash.pickby/index.js":
/***/ ((module, exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to compose bitmasks for comparison styles. */\nvar UNORDERED_COMPARE_FLAG = 1,\n    PARTIAL_COMPARE_FLAG = 2;\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof __webpack_require__.g == 'object' && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports =  true && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && \"object\" == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array ? array.length : 0;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols,\n    nativeKeys = overArg(Object.keys, Object);\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView'),\n    Map = getNative(root, 'Map'),\n    Promise = getNative(root, 'Promise'),\n    Set = getNative(root, 'Set'),\n    WeakMap = getNative(root, 'WeakMap'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values ? values.length : 0;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  this.__data__ = new ListCache(entries);\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  return this.__data__['delete'](key);\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var cache = this.__data__;\n  if (cache instanceof ListCache) {\n    var pairs = cache.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      return this;\n    }\n    cache = this.__data__ = new MapCache(pairs);\n  }\n  cache.set(key, value);\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = (isArray(value) || isArguments(value))\n    ? baseTimes(value.length, String)\n    : [];\n\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\n/**\n * The base implementation of `getTag`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  return objectToString.call(value);\n}\n\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {boolean} [bitmask] The bitmask of comparison flags.\n *  The bitmask may be composed of the following flags:\n *     1 - Unordered comparison\n *     2 - Partial comparison\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, customizer, bitmask, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n}\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = arrayTag,\n      othTag = arrayTag;\n\n  if (!objIsArr) {\n    objTag = getTag(object);\n    objTag = objTag == argsTag ? objectTag : objTag;\n  }\n  if (!othIsArr) {\n    othTag = getTag(other);\n    othTag = othTag == argsTag ? objectTag : othTag;\n  }\n  var objIsObj = objTag == objectTag && !isHostObject(object),\n      othIsObj = othTag == objectTag && !isHostObject(other),\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n      : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n  }\n  if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n}\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n}\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n  };\n}\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} props The property identifiers to pick from.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, props, predicate) {\n  var index = -1,\n      length = props.length,\n      result = {};\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key];\n\n    if (predicate(value, key)) {\n      result[key] = value;\n    }\n  }\n  return result;\n}\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!seen.has(othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n              return seen.add(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, customizer, bitmask, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= UNORDERED_COMPARE_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Function} customizer The function to customize comparisons.\n * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n *  for more details.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n  var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n      objProps = keys(object),\n      objLength = objProps.length,\n      othProps = keys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Creates an array of the own enumerable symbol properties of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = nativeGetSymbols ? overArg(nativeGetSymbols, Object) : stubArray;\n\n/**\n * Creates an array of the own and inherited enumerable symbol properties\n * of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11,\n// for data views in Edge < 14, and promises in Node.js.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = objectToString.call(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : undefined;\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var result,\n      index = -1,\n      length = path.length;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result) {\n    return result;\n  }\n  var length = object ? object.length : 0;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n    (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  return object == null ? {} : basePickBy(object, getAllKeysIn(object), baseIteratee(predicate));\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = pickBy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/lodash.pickby/index.js\n");

/***/ }),

/***/ "../../../node_modules/moment/moment.js":
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\n//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n     true ? module.exports = factory() :\n    0\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            \"object\" !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = undefined;\n                Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'undefined'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../../node_modules/moment/moment.js\n");

/***/ }),

/***/ "../../../node_modules/react-fast-compare/index.js":
/***/ ((module) => {

"use strict";
eval("\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\nvar hasElementType = typeof Element !== 'undefined';\n\nfunction equal(a, b) {\n  // fast-deep-equal index.js 2.0.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n    // end fast-deep-equal\n\n    // start react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element && b instanceof Element)\n      return a === b;\n\n    // custom handling for React\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of a react element\n        continue;\n      } else {\n        // all other properties should be traversed as usual\n        if (!equal(a[key], b[key])) return false;\n      }\n    }\n    // end react-fast-compare\n\n    // fast-deep-equal index.js 2.0.1\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function exportedEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if ((error.message && error.message.match(/stack|recursion/i)) || (error.number === -2146828260)) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('Warning: react-fast-compare does not handle circular references.', error.name, error.message);\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWZhc3QtY29tcGFyZS9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy9yZWFjdC1mYXN0LWNvbXBhcmUvaW5kZXguanM/NjZmYSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBpc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbnZhciBrZXlMaXN0ID0gT2JqZWN0LmtleXM7XG52YXIgaGFzUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG52YXIgaGFzRWxlbWVudFR5cGUgPSB0eXBlb2YgRWxlbWVudCAhPT0gJ3VuZGVmaW5lZCc7XG5cbmZ1bmN0aW9uIGVxdWFsKGEsIGIpIHtcbiAgLy8gZmFzdC1kZWVwLWVxdWFsIGluZGV4LmpzIDIuMC4xXG4gIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTtcblxuICBpZiAoYSAmJiBiICYmIHR5cGVvZiBhID09ICdvYmplY3QnICYmIHR5cGVvZiBiID09ICdvYmplY3QnKSB7XG4gICAgdmFyIGFyckEgPSBpc0FycmF5KGEpXG4gICAgICAsIGFyckIgPSBpc0FycmF5KGIpXG4gICAgICAsIGlcbiAgICAgICwgbGVuZ3RoXG4gICAgICAsIGtleTtcblxuICAgIGlmIChhcnJBICYmIGFyckIpIHtcbiAgICAgIGxlbmd0aCA9IGEubGVuZ3RoO1xuICAgICAgaWYgKGxlbmd0aCAhPSBiLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgICBpZiAoIWVxdWFsKGFbaV0sIGJbaV0pKSByZXR1cm4gZmFsc2U7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAoYXJyQSAhPSBhcnJCKSByZXR1cm4gZmFsc2U7XG5cbiAgICB2YXIgZGF0ZUEgPSBhIGluc3RhbmNlb2YgRGF0ZVxuICAgICAgLCBkYXRlQiA9IGIgaW5zdGFuY2VvZiBEYXRlO1xuICAgIGlmIChkYXRlQSAhPSBkYXRlQikgcmV0dXJuIGZhbHNlO1xuICAgIGlmIChkYXRlQSAmJiBkYXRlQikgcmV0dXJuIGEuZ2V0VGltZSgpID09IGIuZ2V0VGltZSgpO1xuXG4gICAgdmFyIHJlZ2V4cEEgPSBhIGluc3RhbmNlb2YgUmVnRXhwXG4gICAgICAsIHJlZ2V4cEIgPSBiIGluc3RhbmNlb2YgUmVnRXhwO1xuICAgIGlmIChyZWdleHBBICE9IHJlZ2V4cEIpIHJldHVybiBmYWxzZTtcbiAgICBpZiAocmVnZXhwQSAmJiByZWdleHBCKSByZXR1cm4gYS50b1N0cmluZygpID09IGIudG9TdHJpbmcoKTtcblxuICAgIHZhciBrZXlzID0ga2V5TGlzdChhKTtcbiAgICBsZW5ndGggPSBrZXlzLmxlbmd0aDtcblxuICAgIGlmIChsZW5ndGggIT09IGtleUxpc3QoYikubGVuZ3RoKVxuICAgICAgcmV0dXJuIGZhbHNlO1xuXG4gICAgZm9yIChpID0gbGVuZ3RoOyBpLS0gIT09IDA7KVxuICAgICAgaWYgKCFoYXNQcm9wLmNhbGwoYiwga2V5c1tpXSkpIHJldHVybiBmYWxzZTtcbiAgICAvLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbiAgICAvLyBzdGFydCByZWFjdC1mYXN0LWNvbXBhcmVcbiAgICAvLyBjdXN0b20gaGFuZGxpbmcgZm9yIERPTSBlbGVtZW50c1xuICAgIGlmIChoYXNFbGVtZW50VHlwZSAmJiBhIGluc3RhbmNlb2YgRWxlbWVudCAmJiBiIGluc3RhbmNlb2YgRWxlbWVudClcbiAgICAgIHJldHVybiBhID09PSBiO1xuXG4gICAgLy8gY3VzdG9tIGhhbmRsaW5nIGZvciBSZWFjdFxuICAgIGZvciAoaSA9IGxlbmd0aDsgaS0tICE9PSAwOykge1xuICAgICAga2V5ID0ga2V5c1tpXTtcbiAgICAgIGlmIChrZXkgPT09ICdfb3duZXInICYmIGEuJCR0eXBlb2YpIHtcbiAgICAgICAgLy8gUmVhY3Qtc3BlY2lmaWM6IGF2b2lkIHRyYXZlcnNpbmcgUmVhY3QgZWxlbWVudHMnIF9vd25lci5cbiAgICAgICAgLy8gIF9vd25lciBjb250YWlucyBjaXJjdWxhciByZWZlcmVuY2VzXG4gICAgICAgIC8vIGFuZCBpcyBub3QgbmVlZGVkIHdoZW4gY29tcGFyaW5nIHRoZSBhY3R1YWwgZWxlbWVudHMgKGFuZCBub3QgdGhlaXIgb3duZXJzKVxuICAgICAgICAvLyAuJCR0eXBlb2YgYW5kIC5fc3RvcmUgb24ganVzdCByZWFzb25hYmxlIG1hcmtlcnMgb2YgYSByZWFjdCBlbGVtZW50XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gYWxsIG90aGVyIHByb3BlcnRpZXMgc2hvdWxkIGJlIHRyYXZlcnNlZCBhcyB1c3VhbFxuICAgICAgICBpZiAoIWVxdWFsKGFba2V5XSwgYltrZXldKSkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgICAvLyBlbmQgcmVhY3QtZmFzdC1jb21wYXJlXG5cbiAgICAvLyBmYXN0LWRlZXAtZXF1YWwgaW5kZXguanMgMi4wLjFcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiBhICE9PSBhICYmIGIgIT09IGI7XG59XG4vLyBlbmQgZmFzdC1kZWVwLWVxdWFsXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gZXhwb3J0ZWRFcXVhbChhLCBiKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVxdWFsKGEsIGIpO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGlmICgoZXJyb3IubWVzc2FnZSAmJiBlcnJvci5tZXNzYWdlLm1hdGNoKC9zdGFja3xyZWN1cnNpb24vaSkpIHx8IChlcnJvci5udW1iZXIgPT09IC0yMTQ2ODI4MjYwKSkge1xuICAgICAgLy8gd2FybiBvbiBjaXJjdWxhciByZWZlcmVuY2VzLCBkb24ndCBjcmFzaFxuICAgICAgLy8gYnJvd3NlcnMgZ2l2ZSB0aGlzIGRpZmZlcmVudCBlcnJvcnMgbmFtZSBhbmQgbWVzc2FnZXM6XG4gICAgICAvLyBjaHJvbWUvc2FmYXJpOiBcIlJhbmdlRXJyb3JcIiwgXCJNYXhpbXVtIGNhbGwgc3RhY2sgc2l6ZSBleGNlZWRlZFwiXG4gICAgICAvLyBmaXJlZm94OiBcIkludGVybmFsRXJyb3JcIiwgdG9vIG11Y2ggcmVjdXJzaW9uXCJcbiAgICAgIC8vIGVkZ2U6IFwiRXJyb3JcIiwgXCJPdXQgb2Ygc3RhY2sgc3BhY2VcIlxuICAgICAgY29uc29sZS53YXJuKCdXYXJuaW5nOiByZWFjdC1mYXN0LWNvbXBhcmUgZG9lcyBub3QgaGFuZGxlIGNpcmN1bGFyIHJlZmVyZW5jZXMuJywgZXJyb3IubmFtZSwgZXJyb3IubWVzc2FnZSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIHNvbWUgb3RoZXIgZXJyb3IuIHdlIHNob3VsZCBkZWZpbml0ZWx5IGtub3cgYWJvdXQgdGhlc2VcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-fast-compare/index.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/cjs/react-is.production.min.js":
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2Nqcy9yZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzPzBhOTUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi4xMy4xXG4gKiByZWFjdC1pcy5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0Jzt2YXIgYj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yLGM9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxkPWI/U3ltYm9sLmZvcihcInJlYWN0LnBvcnRhbFwiKTo2MDEwNixlPWI/U3ltYm9sLmZvcihcInJlYWN0LmZyYWdtZW50XCIpOjYwMTA3LGY9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsZz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm9maWxlclwiKTo2MDExNCxoPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb3ZpZGVyXCIpOjYwMTA5LGs9Yj9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxsPWI/U3ltYm9sLmZvcihcInJlYWN0LmFzeW5jX21vZGVcIik6NjAxMTEsbT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb25jdXJyZW50X21vZGVcIik6NjAxMTEsbj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMixwPWI/U3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlXCIpOjYwMTEzLHE9Yj9cblN5bWJvbC5mb3IoXCJyZWFjdC5zdXNwZW5zZV9saXN0XCIpOjYwMTIwLHI9Yj9TeW1ib2wuZm9yKFwicmVhY3QubWVtb1wiKTo2MDExNSx0PWI/U3ltYm9sLmZvcihcInJlYWN0LmxhenlcIik6NjAxMTYsdj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5ibG9ja1wiKTo2MDEyMSx3PWI/U3ltYm9sLmZvcihcInJlYWN0LmZ1bmRhbWVudGFsXCIpOjYwMTE3LHg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucmVzcG9uZGVyXCIpOjYwMTE4LHk9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc2NvcGVcIik6NjAxMTk7XG5mdW5jdGlvbiB6KGEpe2lmKFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEpe3ZhciB1PWEuJCR0eXBlb2Y7c3dpdGNoKHUpe2Nhc2UgYzpzd2l0Y2goYT1hLnR5cGUsYSl7Y2FzZSBsOmNhc2UgbTpjYXNlIGU6Y2FzZSBnOmNhc2UgZjpjYXNlIHA6cmV0dXJuIGE7ZGVmYXVsdDpzd2l0Y2goYT1hJiZhLiQkdHlwZW9mLGEpe2Nhc2UgazpjYXNlIG46Y2FzZSB0OmNhc2UgcjpjYXNlIGg6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm4gdX19Y2FzZSBkOnJldHVybiB1fX19ZnVuY3Rpb24gQShhKXtyZXR1cm4geihhKT09PW19ZXhwb3J0cy5Bc3luY01vZGU9bDtleHBvcnRzLkNvbmN1cnJlbnRNb2RlPW07ZXhwb3J0cy5Db250ZXh0Q29uc3VtZXI9aztleHBvcnRzLkNvbnRleHRQcm92aWRlcj1oO2V4cG9ydHMuRWxlbWVudD1jO2V4cG9ydHMuRm9yd2FyZFJlZj1uO2V4cG9ydHMuRnJhZ21lbnQ9ZTtleHBvcnRzLkxhenk9dDtleHBvcnRzLk1lbW89cjtleHBvcnRzLlBvcnRhbD1kO1xuZXhwb3J0cy5Qcm9maWxlcj1nO2V4cG9ydHMuU3RyaWN0TW9kZT1mO2V4cG9ydHMuU3VzcGVuc2U9cDtleHBvcnRzLmlzQXN5bmNNb2RlPWZ1bmN0aW9uKGEpe3JldHVybiBBKGEpfHx6KGEpPT09bH07ZXhwb3J0cy5pc0NvbmN1cnJlbnRNb2RlPUE7ZXhwb3J0cy5pc0NvbnRleHRDb25zdW1lcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWt9O2V4cG9ydHMuaXNDb250ZXh0UHJvdmlkZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ofTtleHBvcnRzLmlzRWxlbWVudD1mdW5jdGlvbihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09Y307ZXhwb3J0cy5pc0ZvcndhcmRSZWY9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1ufTtleHBvcnRzLmlzRnJhZ21lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1lfTtleHBvcnRzLmlzTGF6eT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXR9O1xuZXhwb3J0cy5pc01lbW89ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1yfTtleHBvcnRzLmlzUG9ydGFsPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09ZH07ZXhwb3J0cy5pc1Byb2ZpbGVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09Z307ZXhwb3J0cy5pc1N0cmljdE1vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1mfTtleHBvcnRzLmlzU3VzcGVuc2U9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1wfTtcbmV4cG9ydHMuaXNWYWxpZEVsZW1lbnRUeXBlPWZ1bmN0aW9uKGEpe3JldHVyblwic3RyaW5nXCI9PT10eXBlb2YgYXx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGF8fGE9PT1lfHxhPT09bXx8YT09PWd8fGE9PT1mfHxhPT09cHx8YT09PXF8fFwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJihhLiQkdHlwZW9mPT09dHx8YS4kJHR5cGVvZj09PXJ8fGEuJCR0eXBlb2Y9PT1ofHxhLiQkdHlwZW9mPT09a3x8YS4kJHR5cGVvZj09PW58fGEuJCR0eXBlb2Y9PT13fHxhLiQkdHlwZW9mPT09eHx8YS4kJHR5cGVvZj09PXl8fGEuJCR0eXBlb2Y9PT12KX07ZXhwb3J0cy50eXBlT2Y9ejtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/cjs/react-is.production.min.js\n");

/***/ }),

/***/ "../../../node_modules/react-is/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (true) {\n  module.exports = __webpack_require__(\"../../../node_modules/react-is/cjs/react-is.production.min.js\");\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanM/NzZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtaXMuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../../../node_modules/react-is/index.js\n");

/***/ }),

/***/ "../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js":
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar e=__webpack_require__(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvYWNjb3VudC8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdXNlLXN5bmMtZXh0ZXJuYWwtc3RvcmUvY2pzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlLXNoaW0ucHJvZHVjdGlvbi5taW4uanM/OThhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlIFJlYWN0XG4gKiB1c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cbid1c2Ugc3RyaWN0Jzt2YXIgZT1yZXF1aXJlKFwicmVhY3RcIik7ZnVuY3Rpb24gaChhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIGs9XCJmdW5jdGlvblwiPT09dHlwZW9mIE9iamVjdC5pcz9PYmplY3QuaXM6aCxsPWUudXNlU3RhdGUsbT1lLnVzZUVmZmVjdCxuPWUudXNlTGF5b3V0RWZmZWN0LHA9ZS51c2VEZWJ1Z1ZhbHVlO2Z1bmN0aW9uIHEoYSxiKXt2YXIgZD1iKCksZj1sKHtpbnN0Ont2YWx1ZTpkLGdldFNuYXBzaG90OmJ9fSksYz1mWzBdLmluc3QsZz1mWzFdO24oZnVuY3Rpb24oKXtjLnZhbHVlPWQ7Yy5nZXRTbmFwc2hvdD1iO3IoYykmJmcoe2luc3Q6Y30pfSxbYSxkLGJdKTttKGZ1bmN0aW9uKCl7cihjKSYmZyh7aW5zdDpjfSk7cmV0dXJuIGEoZnVuY3Rpb24oKXtyKGMpJiZnKHtpbnN0OmN9KX0pfSxbYV0pO3AoZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiByKGEpe3ZhciBiPWEuZ2V0U25hcHNob3Q7YT1hLnZhbHVlO3RyeXt2YXIgZD1iKCk7cmV0dXJuIWsoYSxkKX1jYXRjaChmKXtyZXR1cm4hMH19ZnVuY3Rpb24gdChhLGIpe3JldHVybiBiKCl9dmFyIHU9XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50fHxcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvdy5kb2N1bWVudC5jcmVhdGVFbGVtZW50P3Q6cTtleHBvcnRzLnVzZVN5bmNFeHRlcm5hbFN0b3JlPXZvaWQgMCE9PWUudXNlU3luY0V4dGVybmFsU3RvcmU/ZS51c2VTeW5jRXh0ZXJuYWxTdG9yZTp1O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js\n");

/***/ }),

/***/ "../../../node_modules/use-sync-external-store/shim/index.js":
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nif (true) {\n  module.exports = __webpack_require__(\"../../../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js\");\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3VzZS1zeW5jLWV4dGVybmFsLXN0b3JlL3NoaW0vaW5kZXguanMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL0BkZXJpdi9hY2NvdW50Ly4uLy4uLy4uL25vZGVfbW9kdWxlcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS9zaGltL2luZGV4LmpzPzc2YjUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL2Nqcy91c2Utc3luYy1leHRlcm5hbC1zdG9yZS1zaGltLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../../../node_modules/use-sync-external-store/shim/index.js\n");

/***/ }),

/***/ "@deriv/components":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;

/***/ }),

/***/ "@deriv/shared":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;

/***/ }),

/***/ "@deriv/translations":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;

/***/ }),

/***/ "mobx":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_mobx__;

/***/ }),

/***/ "react":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ }),

/***/ "react-dom":
/***/ ((module) => {

"use strict";
module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./Components/address-details/index.js");
/******/ 	__webpack_exports__ = __webpack_exports__["default"];
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});