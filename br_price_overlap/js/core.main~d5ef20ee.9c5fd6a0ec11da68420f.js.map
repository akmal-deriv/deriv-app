{"version":3,"file":"js/core.main~d5ef20ee.9c5fd6a0ec11da68420f.js","mappings":"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","sources":["webpack:///./App/Components/Elements/Errors/error-component.jsx","webpack:///./App/Components/Elements/Errors/index.js","webpack:///./App/Components/Elements/NotificationMessage/constants.js","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-list.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-account-wrapper.jsx","webpack:///./App/Containers/AccountSwitcher/helpers/account-helper.js","webpack:///./App/Containers/AccountSwitcher/account-switcher.jsx","webpack:///./App/Containers/AccountSwitcher/account-switcher-mobile.jsx","webpack:///./App/Components/Layout/Header/account-info.jsx","webpack:///./App/Components/Routes/helpers.js","webpack:///./App/Components/Routes/binary-link.jsx","webpack:///./App/Components/Routes/language-link.tsx","webpack:///./App/Components/Routes/route-with-sub-routes.jsx","webpack:///./App/Components/Routes/binary-routes.jsx","webpack:///./App/Components/Routes/index.js","webpack:///./App/Containers/Redirect/redirect.jsx","webpack:///./App/Containers/Redirect/index.js","webpack:///./Modules/Endpoint/Endpoint.jsx","webpack:///./Modules/Endpoint/index.js","webpack:///./App/Constants/routes-config.js","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./App/Components/Elements/NotificationMessage/close-button.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-status-icons.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-banner.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-promo.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification-order.jsx","webpack:///./App/Components/Elements/NotificationMessage/notification.jsx","webpack:///./App/Components/Elements/NotificationMessage/index.js","webpack:///./App/Containers/app-notification-messages.jsx","webpack:///./Constants/cfd-text.js","webpack:///./Constants/form-error-messages.js","webpack:///./Modules/BinaryBotIFrame/BinaryBotIFrame.jsx","webpack:///./Modules/BinaryBotIFrame/index.js","webpack:///./Modules/SmartTraderIFrame/SmartTraderIFrame.jsx","webpack:///./Modules/SmartTraderIFrame/index.js","webpack:///./App/Components/Elements/Errors/error-boundary.jsx","webpack:///./App/Components/Elements/CookieBanner/cookie-banner.jsx","webpack:///./App/Containers/Layout/app-contents.jsx","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/go-to-deriv.jsx","webpack:///./App/Components/Layout/Footer/endpoint-note.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/SettingsModal/settings-language.jsx","webpack:///./App/Components/Layout/Footer/toggle-language-settings.tsx","webpack:///./App/Components/Layout/Footer/help-centre.jsx","webpack:///./App/Components/Layout/Footer/responsible-trading.jsx","webpack:///./App/Components/Layout/Footer/account-limits.jsx","webpack:///./Assets/SvgComponents/footer/mga.svg","webpack:///./App/Components/Layout/Footer/regulatory-information.jsx","webpack:///./App/Components/Layout/Footer/index.js","webpack:///./App/Components/Elements/LiveChat/live-chat.js","webpack:///./App/Components/Elements/LiveChat/use-livechat.ts","webpack:///./App/Components/Elements/LiveChat/live-chat.jsx","webpack:///./App/Components/Elements/LiveChat/index.js","webpack:///./App/Components/Elements/WhatsApp/whatsapp.tsx","webpack:///./App/Components/Elements/WhatsApp/index.ts","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Containers/Layout/default-footer.jsx","webpack:///./Assets/SvgComponents/footer/ic-footer-light-theme.svg","webpack:///./Assets/SvgComponents/footer/ic-footer-dark-theme.svg","webpack:///./App/Containers/Layout/trading-hub-footer.jsx","webpack:///./App/Containers/Layout/footer.jsx","webpack:///./App/Components/Elements/Notifications/empty-notification.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-clear-all-footer.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-list.tsx","webpack:///./App/Containers/NotificationsDialog/notification-list-wrapper.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-dialog.tsx","webpack:///./App/Containers/NotificationsDialog/index.ts","webpack:///./App/Components/Layout/Header/toggle-notifications.jsx","webpack:///./App/Components/Layout/Header/platform-dropdown.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Layout/Header/account-actions.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-info.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-item.jsx","webpack:///./App/Containers/new-version-notification.jsx","webpack:///./App/Containers/RealAccountSignup/accept-risk-form.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx","webpack:///./App/Containers/RealAccountSignup/account-wizard.jsx","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.js","webpack:///./App/Containers/RealAccountSignup/add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/RealAccountSignup/index.js","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///./App/Components/Layout/Header/menu-link.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/menu-title.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/mobile-language-menu.tsx","webpack:///./App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./App/Constants/platform-config.ts","webpack:///./App/Containers/Layout/header/default-header.jsx","webpack:///./App/Containers/Layout/header/traders-hub-home-button.tsx","webpack:///./App/Containers/Layout/header/dtrader-header.jsx","webpack:///./Assets/SvgComponents/header/deriv-rebranding-logo.svg","webpack:///./App/Containers/CurrencySelectionModal/currency/index.tsx","webpack:///./App/Containers/CurrencySelectionModal/curreny-selection-modal.tsx","webpack:///./App/Containers/CurrencySelectionModal/index.ts","webpack:///./App/Containers/Layout/header/show-notifications.tsx","webpack:///./App/Containers/Layout/header/traders-hub-onboarding.tsx","webpack:///./App/Containers/Layout/header/default-mobile-links.tsx","webpack:///./App/Containers/Layout/header/traders-hub-header.tsx","webpack:///./App/Containers/Layout/header/header.tsx","webpack:///./App/Containers/Layout/header/index.ts","webpack:///./App/Components/Elements/Modals/deriv-real-account-required-modal.jsx","webpack:///./App/Components/Elements/Modals/mt5-account-needed-modal.jsx","webpack:///./App/Components/Elements/Modals/RedirectNotice/redirect-notice-modal.jsx","webpack:///./App/Components/Elements/Modals/RedirectNotice/index.js","webpack:///./App/Containers/Modals/completed-assessment-modal.jsx","webpack:///./App/Containers/Modals/cooldown-warning-modal.jsx","webpack:///./App/Containers/Modals/mt5-notification/mt5-notification-description.tsx","webpack:///./App/Containers/Modals/mt5-notification/mt5-notification.tsx","webpack:///./App/Containers/Modals/mt5-notification/index.ts","webpack:///./App/Containers/Modals/need-real-account-for-cashier-modal/need-real-account-for-cashier-modal.tsx","webpack:///./App/Containers/Modals/need-real-account-for-cashier-modal/index.ts","webpack:///./App/Containers/Modals/ready-to-deposit-modal/ready-to-deposit-modal.tsx","webpack:///./App/Containers/Modals/ready-to-deposit-modal/index.ts","webpack:///./App/Containers/Modals/risk-accept-test-warning-modal.jsx","webpack:///./App/Containers/Modals/trading-experience-modal.jsx","webpack:///./App/Containers/Modals/trading-assessment-existing-user.jsx","webpack:///./App/Containers/Modals/app-modals.jsx","webpack:///./App/Containers/Modals/index.js","webpack:///./App/Containers/PlatformContainer/PlatformContainer.jsx","webpack:///./App/Containers/Routes/routes.jsx","webpack:///./App/Containers/app-toast-messages.jsx","webpack:///./App/Devtools.tsx","webpack:///./App/AppContent.tsx","webpack:///./App/app.jsx","webpack:///./Services/network-monitor.js","webpack:///./Stores/Helpers/client.js","webpack:///./Stores/base-store.js","webpack:///./Stores/Modules/Trading/Helpers/currency.js","webpack:///./Stores/Helpers/device.js","webpack:///./Stores/client-store.js","webpack:///./Stores/common-store.js","webpack:///./Stores/gtm-store.js","webpack:///./Stores/Modules/index.js","webpack:///./Stores/notification-store.js","webpack:///./Stores/ui-store.js","webpack:///./Constants/ui.js","webpack:///./Stores/active-symbols-store.js","webpack:///./Stores/chart-barrier-store.js","webpack:///./Stores/Helpers/limit-orders.js","webpack:///./Stores/portfolio-store.js","webpack:///./Stores/Helpers/logic.js","webpack:///./Components/markers/marker-line.jsx","webpack:///./Components/markers/marker-spot.jsx","webpack:///./Components/markers/marker-spot-label.jsx","webpack:///./Stores/Constants/markers.js","webpack:///./Stores/Helpers/chart-marker-helpers.js","webpack:///./Stores/Helpers/chart-markers.js","webpack:///./Stores/contract-store.js","webpack:///./Stores/contract-replay-store.js","webpack:///./Stores/contract-trade-store.js","webpack:///./Stores/traders-hub-store.js","webpack:///./Stores/index.js","webpack:///./App/initStore.js","webpack:///./Modules/Page404/Components/Page404.jsx","webpack:///./Modules/Page404/index.js","webpack:///./Services/logout.js","webpack:///./Services/socket-general.js","webpack:///./Services/ws-methods.js","webpack:///./Stores/Helpers/client-notifications.js","webpack:///./Stores/connect.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { PageErrorContainer } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst ErrorComponent = ({\n    header,\n    message,\n    redirect_label,\n    redirectOnClick = null,\n    should_clear_error_on_click,\n    setError,\n    redirect_to = routes.trade,\n    should_show_refresh = true,\n    should_redirect = true,\n}) => {\n    const history = useHistory();\n\n    React.useEffect(() => {\n        if (!history) return undefined;\n        return history.listen(() => {\n            if (typeof setError === 'function') {\n                setError(false, null);\n            }\n        });\n    }, [history, setError]);\n\n    const refresh_message = should_show_refresh ? localize('Please refresh this page to continue.') : '';\n\n    return (\n        <PageErrorContainer\n            error_header={header ?? ''}\n            error_messages={message ? [message, refresh_message] : []}\n            redirect_urls={[redirect_to]}\n            redirect_labels={(redirect_label === false && []) || [redirect_label || localize('Refresh')]}\n            buttonOnClick={redirectOnClick || (() => location.reload())}\n            should_clear_error_on_click={should_clear_error_on_click}\n            setError={setError}\n            should_redirect={should_redirect}\n        />\n    );\n};\n\nErrorComponent.propTypes = {\n    header: PropTypes.string,\n    message: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\n    redirectOnClick: PropTypes.func || PropTypes.object,\n    redirect_label: PropTypes.string,\n    setError: PropTypes.func,\n    should_clear_error_on_click: PropTypes.bool,\n    should_redirect: PropTypes.bool,\n    redirect_to: PropTypes.string,\n    should_show_refresh: PropTypes.bool,\n};\n\nexport default ErrorComponent;\n","import ErrorComponent from './error-component.jsx';\n\nexport default ErrorComponent;\n","export const default_delay = 3000;\n\nexport const max_display_notifications = 3;\nexport const max_display_notifications_mobile = 1;\n\nexport const icon_types = {\n    danger: 'IcAlertDanger',\n    info: 'IcAlertInfo',\n    success: 'IcAlertSuccess',\n    warning: 'IcAlertWarning',\n    contract_sold: 'IcAlertInfo',\n    announce: 'IcAlertAnnounce',\n};\n\nexport const types = {\n    announce: 'notification--announce',\n    danger: 'notification--danger',\n    info: 'notification--info',\n    success: 'notification--success',\n    warning: 'notification--warning',\n    contract_sold: 'notification--info',\n};\n\nexport const sortNotifications = (() => {\n    const notification_order = {\n        promotions: 1,\n        news: 2,\n        contract_sold: 3,\n        danger: 4,\n        warning: 5,\n        info: 6,\n        success: 7,\n    };\n\n    return (a, b) => notification_order[a.type] - notification_order[b.type];\n})();\n\nexport const sortNotificationsMobile = (() => {\n    const notification_order_mobile = {\n        contract_sold: 1,\n        promotions: 2,\n        danger: 3,\n        news: 4,\n        warning: 5,\n        info: 6,\n        success: 7,\n    };\n\n    return (a, b) => notification_order_mobile[a.type] - notification_order_mobile[b.type];\n})();\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Money, Button, Text } from '@deriv/components';\nimport { formatMoney, getCurrencyName, getCFDAccountDisplay, getCurrencyDisplayCode, isBot } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nconst AccountList = ({\n    balance,\n    currency,\n    currency_icon,\n    country_standpoint,\n    display_type,\n    has_balance,\n    has_error,\n    has_reset_balance,\n    is_dark_mode_on,\n    is_disabled,\n    is_virtual,\n    is_eu,\n    loginid,\n    market_type,\n    redirectAccount,\n    onClickResetVirtualBalance,\n    selected_loginid,\n    server,\n    shortcode,\n    sub_account_type,\n    platform,\n    should_show_server_name,\n}) => {\n    const currency_badge = currency ? currency_icon : 'IcCurrencyUnknown';\n    return (\n        <React.Fragment>\n            <div\n                id={`dt_${loginid}`}\n                className={classNames('acc-switcher__account', {\n                    'acc-switcher__account--selected': loginid === selected_loginid,\n                    'acc-switcher__account--disabled': is_disabled,\n                })}\n                onClick={() => {\n                    if (!is_disabled) redirectAccount();\n                }}\n            >\n                <span className='acc-switcher__id'>\n                    <Icon\n                        icon={is_virtual ? 'IcCurrencyVirtual' : currency_badge}\n                        className={'acc-switcher__id-icon'}\n                        size={24}\n                    />\n                    <span>\n                        {display_type === 'currency' ? (\n                            <CurrencyDisplay\n                                country_standpoint={country_standpoint}\n                                currency={currency}\n                                loginid={loginid}\n                                is_virtual={is_virtual}\n                            />\n                        ) : (\n                            <AccountDisplay\n                                is_eu={is_eu}\n                                market_type={market_type}\n                                server={server}\n                                sub_account_type={sub_account_type}\n                                has_error={has_error}\n                                platform={platform}\n                                is_dark_mode_on={is_dark_mode_on}\n                                shortcode={shortcode}\n                                should_show_server_name={should_show_server_name}\n                            />\n                        )}\n                        <div\n                            className={classNames('acc-switcher__loginid-text', {\n                                'acc-switcher__loginid-text--disabled': has_error,\n                            })}\n                        >\n                            {loginid}\n                        </div>\n                    </span>\n                    {has_reset_balance ? (\n                        <Button\n                            is_disabled={is_disabled}\n                            onClick={e => {\n                                e.stopPropagation();\n                                onClickResetVirtualBalance();\n                            }}\n                            className='acc-switcher__reset-account-btn'\n                            secondary\n                            small\n                        >\n                            {localize('Reset balance')}\n                        </Button>\n                    ) : (\n                        has_balance && (\n                            <Text\n                                size='xs'\n                                color='prominent'\n                                styles={{ fontWeight: 'inherit' }}\n                                className='acc-switcher__balance'\n                            >\n                                {currency && (\n                                    <Money\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        amount={formatMoney(currency, balance, true)}\n                                        should_format={false}\n                                        show_currency\n                                    />\n                                )}\n                            </Text>\n                        )\n                    )}\n                </span>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst CurrencyDisplay = ({ country_standpoint, currency, loginid, is_virtual }) => {\n    const user_is_from_this_country_list = Object.values(country_standpoint).includes(true);\n    const account_type = loginid.replace(/\\d/g, '');\n\n    if (user_is_from_this_country_list) {\n        if (account_type === 'MLT') {\n            return <Localize i18n_default_text='Options' />;\n        } else if (account_type === 'MX') {\n            if (country_standpoint.is_united_kingdom) {\n                return <Localize i18n_default_text='Gaming' />;\n            }\n            if (country_standpoint.is_isle_of_man) {\n                return getCurrencyName(currency);\n            }\n            return <Localize i18n_default_text='Synthetic' />;\n        } else if (account_type === 'MF') {\n            return <Localize i18n_default_text='Multipliers' />;\n        }\n    }\n\n    if (is_virtual) {\n        return <Localize i18n_default_text='Demo' />;\n    }\n\n    if (!currency) {\n        return <Localize i18n_default_text='No currency assigned' />;\n    }\n\n    return getCurrencyName(currency);\n};\n\nconst AccountDisplay = ({\n    has_error,\n    market_type,\n    sub_account_type,\n    platform,\n    server,\n    is_dark_mode_on,\n    is_eu,\n    shortcode,\n    should_show_server_name,\n}) => {\n    const account_title = getCFDAccountDisplay({ market_type, sub_account_type, platform, is_eu, shortcode });\n    // TODO: Remove once account with error has market_type and sub_account_type in details response\n    const getServerName = React.useCallback(account => {\n        if (account) {\n            const server_region = account.server_info?.geolocation?.region;\n            if (server_region) {\n                return `${server_region} ${\n                    account?.server_info?.geolocation?.sequence === 1 ? '' : account?.server_info?.geolocation?.sequence\n                }`;\n            }\n        }\n        return '';\n    }, []);\n    if (has_error)\n        return (\n            <div>\n                <Text color='disabled' size='xs'>\n                    <Localize i18n_default_text='Unavailable' />\n                </Text>\n                {server?.server_info?.geolocation &&\n                    should_show_server_name &&\n                    market_type === 'synthetic' &&\n                    shortcode === 'svg' && (\n                        <Text color='less-prominent' size='xxs' className='badge-server badge-server--disabled'>\n                            {getServerName(server)}\n                        </Text>\n                    )}\n            </div>\n        );\n\n    const { is_pathname_bot } = isBot();\n    return (\n        <div>\n            {/* TODO: Remove below condition once deriv x changes are completed */}\n            {platform === 'dxtrade' && account_title === localize('Derived') ? localize('Synthetic') : account_title}\n            {server?.server_info?.geolocation &&\n                should_show_server_name &&\n                market_type === 'synthetic' &&\n                shortcode === 'svg' && (\n                    <Text\n                        color={is_dark_mode_on ? 'general' : 'colored-background'}\n                        size='xxs'\n                        className={classNames('badge-server', {\n                            'badge-server-bot': is_pathname_bot,\n                        })}\n                    >\n                        {getServerName(server)}\n                    </Text>\n                )}\n        </div>\n    );\n};\n\nexport default AccountList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentExpander } from '@deriv/components';\n\nconst AccountWrapper = ({ children, header, is_visible, toggleVisibility }) => (\n    <ContentExpander\n        className='acc-switcher'\n        title={header}\n        is_expanded={is_visible}\n        onToggle={toggleVisibility}\n        is_title_spaced\n    >\n        {children}\n    </ContentExpander>\n);\n\nAccountWrapper.propTypes = {\n    children: PropTypes.node,\n    header: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    is_visible: PropTypes.bool,\n    toggleVisibility: PropTypes.func,\n};\n\nexport default AccountWrapper;\n","import { isCryptocurrency, getCFDAccountKey, getCFDAccount, getCFDAccountDisplay, CFD_PLATFORMS } from '@deriv/shared';\n\nexport const getSortedAccountList = (account_list, accounts) => {\n    // sort accounts as follows:\n    // top is fiat, then crypto (each alphabetically by currency), then demo\n    return [...account_list].sort((a, b) => {\n        const a_currency = accounts[a.loginid].currency;\n        const b_currency = accounts[b.loginid].currency;\n        const a_is_crypto = isCryptocurrency(a_currency);\n        const b_is_crypto = isCryptocurrency(b_currency);\n        const a_is_fiat = !a_is_crypto;\n        const b_is_fiat = !b_is_crypto;\n        if (a.is_virtual || b.is_virtual) {\n            return a.is_virtual ? 1 : -1;\n        } else if ((a_is_crypto && b_is_crypto) || (a_is_fiat && b_is_fiat)) {\n            return a_currency < b_currency ? -1 : 1;\n        } else if (a_is_fiat && b_is_crypto) {\n            return -1;\n        }\n        return 1;\n    });\n};\n\nexport const getSortedCFDList = account_list => {\n    // for DXTrade, MT5, synthetic, financial, financial stp\n    return [...account_list].sort((a, b) => {\n        const a_is_demo = isDemo(a);\n        const b_is_demo = isDemo(b);\n\n        if (a_is_demo && !b_is_demo) {\n            return 1;\n        }\n        if (b_is_demo && !a_is_demo) {\n            return -1;\n        }\n        if (a.market_type === 'gaming' || a.market_type === 'synthetic') {\n            return -1;\n        }\n        if (a.sub_account_type === 'financial') {\n            return b.market_type === 'gaming' || b.market_type === 'synthetic' ? 1 : -1;\n        }\n        return 1;\n    });\n};\n\nexport const isDemo = account => account.account_type === 'demo';\n\nexport const getCFDConfig = (\n    market_type,\n    landing_company,\n    existing_cfd_accounts,\n    mt5_trading_servers,\n    platform,\n    is_eu,\n    trading_platform_available_accounts,\n    getIsEligibleForMoreAccounts\n) => {\n    const cfd_config = [];\n\n    if (landing_company) {\n        Object.keys(landing_company).forEach(company => {\n            let has_account = existing_cfd_accounts.find(account => {\n                const account_market_type = account.market_type === 'synthetic' ? 'gaming' : account.market_type;\n                if (platform === CFD_PLATFORMS.DXTRADE) {\n                    return account_market_type === market_type;\n                }\n                return account.sub_account_type === company && account_market_type === market_type;\n            });\n            if (has_account && platform === CFD_PLATFORMS.MT5 && is_eu) {\n                const number_market_type_available = mt5_trading_servers.filter(s => {\n                    const server_market_type = s.market_type === 'synthetic' ? 'gaming' : s.market_type;\n                    return market_type === server_market_type && !s.disabled;\n                }).length;\n                if (number_market_type_available && has_account.account_type === 'real') {\n                    has_account = false;\n                }\n            }\n            if (!has_account && (is_eu || platform === CFD_PLATFORMS.DXTRADE)) {\n                const type = getCFDAccountKey({ market_type, sub_account_type: company, platform });\n                if (type) {\n                    cfd_config.push({\n                        icon: getCFDAccount({ market_type, sub_account_type: company, platform, is_eu }),\n                        title: getCFDAccountDisplay({\n                            market_type,\n                            sub_account_type: company,\n                            platform,\n                            is_eu,\n                        }),\n                        type,\n                    });\n                }\n            }\n        });\n    }\n    if (!is_eu && platform === CFD_PLATFORMS.MT5) {\n        // show remaining Synthetic and/or Financial while a client can still open more real accounts or more demo svg\n        ['synthetic', 'financial'].forEach(account_type => {\n            if ((account_type === 'synthetic' ? 'gaming' : 'financial') === market_type) {\n                if (getIsEligibleForMoreAccounts(account_type)) {\n                    cfd_config.push({\n                        icon: getCFDAccount({ market_type, sub_account_type: 'financial', platform, is_eu }),\n                        title: getCFDAccountDisplay({\n                            market_type,\n                            sub_account_type: 'financial',\n                            platform,\n                            is_eu,\n                        }),\n                        type: account_type,\n                    });\n                }\n            }\n        });\n    }\n\n    return cfd_config;\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport {\n    Button,\n    DesktopWrapper,\n    MobileWrapper,\n    Div100vhContainer,\n    Icon,\n    Money,\n    Tabs,\n    ThemedScrollbars,\n    Text,\n    useOnClickOutside,\n    Loading,\n} from '@deriv/components';\nimport { routes, formatMoney, ContentFlag, getStaticUrl } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { getAccountTitle } from 'App/Containers/RealAccountSignup/helpers/constants';\nimport { connect } from 'Stores/connect';\nimport AccountList from './account-switcher-account-list.jsx';\nimport AccountWrapper from './account-switcher-account-wrapper.jsx';\nimport { getSortedAccountList, getSortedCFDList, isDemo } from './helpers';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { Analytics } from '@deriv/analytics';\n\nconst AccountSwitcher = ({\n    available_crypto_currencies,\n    account_list,\n    account_loginid,\n    accounts,\n    account_type,\n    client_residence,\n    country_standpoint,\n    has_active_real_account,\n    has_any_real_account,\n    has_fiat,\n    history,\n    is_dark_mode_on,\n    is_eu,\n    is_landing_company_loaded,\n    is_low_risk,\n    is_high_risk,\n    is_logged_in,\n    is_mobile,\n    is_positions_drawer_on,\n    is_virtual,\n    is_visible,\n    landing_company_shortcode,\n    logoutClient,\n    mt5_login_list,\n    obj_total_balance,\n    openRealAccountSignup,\n    should_show_real_accounts_list,\n    show_eu_related_content,\n    switchAccount,\n    resetVirtualBalance,\n    toggleAccountsDialog,\n    togglePositionsDrawer,\n    toggleSetCurrencyModal,\n    upgradeable_landing_companies,\n    real_account_creation_unlock_date,\n    setShouldShowCooldownModal,\n    content_flag,\n    virtual_account_loginid,\n    setTogglePlatformType,\n}) => {\n    const [active_tab_index, setActiveTabIndex] = React.useState(!is_virtual || should_show_real_accounts_list ? 0 : 1);\n    const [is_deriv_demo_visible, setDerivDemoVisible] = React.useState(true);\n    const [is_deriv_real_visible, setDerivRealVisible] = React.useState(true);\n    const [is_non_eu_regulator_visible, setNonEuRegulatorVisible] = React.useState(true);\n    const [is_eu_regulator_visible, setEuRegulatorVisible] = React.useState(true);\n\n    const wrapper_ref = React.useRef();\n    const scroll_ref = React.useRef(null);\n\n    const account_total_balance_currency = obj_total_balance.currency;\n\n    const vrtc_loginid = account_list.find(account => account.is_virtual)?.loginid;\n    const vrtc_currency = accounts[vrtc_loginid] ? accounts[vrtc_loginid].currency : 'USD';\n\n    const toggleVisibility = section => {\n        switch (section) {\n            case 'demo_deriv':\n                return setDerivDemoVisible(!is_deriv_demo_visible);\n            case 'real_deriv':\n                return setDerivRealVisible(!is_deriv_real_visible);\n            case 'non-eu-regulator':\n                return setNonEuRegulatorVisible(!is_non_eu_regulator_visible);\n            case 'eu-regulator':\n                return setEuRegulatorVisible(!is_eu_regulator_visible);\n            default:\n                return false;\n        }\n    };\n\n    const handleLogout = async () => {\n        closeAccountsDialog();\n        if (is_positions_drawer_on) {\n            togglePositionsDrawer(); // TODO: hide drawer inside logout, once it is a mobx action\n        }\n        history.push(routes.index);\n        await logoutClient().then(() => (window.location.href = getStaticUrl('/')));\n    };\n\n    const closeAccountsDialog = () => {\n        toggleAccountsDialog(false);\n    };\n\n    const validateClickOutside = event => is_visible && !event.target.classList.contains('acc-info');\n\n    useOnClickOutside(wrapper_ref, closeAccountsDialog, validateClickOutside);\n\n    const setAccountCurrency = () => {\n        closeAccountsDialog();\n        toggleSetCurrencyModal();\n    };\n\n    const doSwitch = async loginid => {\n        closeAccountsDialog();\n        if (account_loginid === loginid) return;\n        await switchAccount(loginid);\n        Analytics.setAttributes({ account_type: loginid.substring(0, 2) });\n    };\n\n    const resetBalance = async () => {\n        closeAccountsDialog();\n        resetVirtualBalance();\n    };\n\n    // Real accounts is always the first tab index based on design\n    const isRealAccountTab = active_tab_index === 0;\n    const isDemoAccountTab = active_tab_index === 1;\n\n    const getRealMT5 = () => {\n        if (is_landing_company_loaded) {\n            const low_risk_non_eu = content_flag === ContentFlag.LOW_RISK_CR_NON_EU;\n            if (low_risk_non_eu) {\n                return getSortedCFDList(mt5_login_list).filter(\n                    account => !isDemo(account) && account.landing_company_short !== 'maltainvest'\n                );\n            }\n            return getSortedCFDList(mt5_login_list).filter(account => !isDemo(account));\n        }\n        return [];\n    };\n\n    const canOpenMulti = () => {\n        if (available_crypto_currencies.length < 1 && !has_fiat) return true;\n        return !is_virtual;\n    };\n\n    const is_regulated_able_to_change_currency =\n        show_eu_related_content &&\n        (landing_company_shortcode === 'malta' ||\n            (landing_company_shortcode === 'iom' && upgradeable_landing_companies.length !== 0));\n\n    // SVG clients can't upgrade.\n    const getRemainingRealAccounts = () => {\n        if (\n            show_eu_related_content ||\n            is_virtual ||\n            !canOpenMulti() ||\n            is_regulated_able_to_change_currency ||\n            is_low_risk\n        ) {\n            return upgradeable_landing_companies;\n        }\n        return [];\n    };\n\n    const hasSetCurrency = useHasSetCurrency();\n\n    const getTotalDemoAssets = () => {\n        const vrtc_balance = accounts[vrtc_loginid] ? accounts[vrtc_loginid].balance : 0;\n\n        return vrtc_balance;\n    };\n\n    const getTotalRealAssets = () => {\n        const traders_hub_total = obj_total_balance.amount_real;\n        return traders_hub_total;\n    };\n\n    if (!is_logged_in) return false;\n\n    const canResetBalance = account => {\n        const account_init_balance = 10000;\n        return account?.is_virtual && account?.balance !== account_init_balance;\n    };\n\n    const checkMultipleSvgAcc = () => {\n        const all_svg_acc = [];\n        getRealMT5().map(acc => {\n            if (acc.landing_company_short === 'svg' && acc.market_type === 'synthetic') {\n                if (all_svg_acc.length) {\n                    all_svg_acc.forEach(svg_acc => {\n                        if (svg_acc.server !== acc.server) all_svg_acc.push(acc);\n                        return all_svg_acc;\n                    });\n                } else {\n                    all_svg_acc.push(acc);\n                }\n            }\n        });\n        return all_svg_acc.length > 1;\n    };\n\n    const have_more_accounts = type =>\n        getSortedAccountList(account_list, accounts).filter(\n            account => !account.is_virtual && account.loginid.startsWith(type)\n        ).length > 1;\n\n    // all: 1 in mt5_status response means that server is suspended\n    const has_cr_account = account_list.find(acc => acc.loginid?.startsWith('CR'))?.loginid;\n\n    const demo_account = (\n        <div className='acc-switcher__list-wrapper'>\n            {vrtc_loginid && (\n                <AccountWrapper\n                    header={localize('Deriv account')}\n                    is_visible={is_deriv_demo_visible}\n                    toggleVisibility={() => {\n                        toggleVisibility('demo_deriv');\n                    }}\n                >\n                    <div className='acc-switcher__accounts'>\n                        {getSortedAccountList(account_list, accounts)\n                            .filter(account => account.is_virtual)\n                            .map(account => (\n                                <AccountList\n                                    is_dark_mode_on={is_dark_mode_on}\n                                    key={account.loginid}\n                                    balance={accounts[account.loginid].balance}\n                                    currency={accounts[account.loginid].currency}\n                                    currency_icon={`IcCurrency-${account.icon}`}\n                                    country_standpoint={country_standpoint}\n                                    display_type={'currency'}\n                                    has_balance={'balance' in accounts[account.loginid]}\n                                    has_reset_balance={canResetBalance(accounts[account_loginid])}\n                                    is_disabled={account.is_disabled}\n                                    is_virtual={account.is_virtual}\n                                    loginid={account.loginid}\n                                    redirectAccount={account.is_disabled ? undefined : () => doSwitch(account.loginid)}\n                                    onClickResetVirtualBalance={resetBalance}\n                                    selected_loginid={account_loginid}\n                                />\n                            ))}\n                    </div>\n                </AccountWrapper>\n            )}\n        </div>\n    );\n\n    const real_accounts = (\n        <div ref={scroll_ref} className='acc-switcher__list-wrapper'>\n            <React.Fragment>\n                {!is_eu || is_low_risk ? (\n                    <React.Fragment>\n                        <AccountWrapper\n                            className='acc-switcher__title'\n                            header={\n                                is_low_risk\n                                    ? localize(`Non-EU Deriv ${have_more_accounts('CR') ? 'accounts' : 'account'}`)\n                                    : localize(`Deriv ${have_more_accounts('CR') ? 'accounts' : 'account'}`)\n                            }\n                            is_visible={is_non_eu_regulator_visible}\n                            toggleVisibility={() => {\n                                toggleVisibility('real_deriv');\n                            }}\n                        >\n                            <div className='acc-switcher__accounts'>\n                                {getSortedAccountList(account_list, accounts)\n                                    .filter(account => !account.is_virtual && account.loginid.startsWith('CR'))\n                                    .map(account => {\n                                        return (\n                                            <AccountList\n                                                account_type={account_type}\n                                                is_dark_mode_on={is_dark_mode_on}\n                                                key={account.loginid}\n                                                balance={accounts[account.loginid].balance}\n                                                currency={accounts[account.loginid].currency}\n                                                currency_icon={`IcCurrency-${account.icon}`}\n                                                country_standpoint={country_standpoint}\n                                                display_type={'currency'}\n                                                has_balance={'balance' in accounts[account.loginid]}\n                                                is_disabled={account.is_disabled}\n                                                is_virtual={account.is_virtual}\n                                                is_eu={is_eu}\n                                                loginid={account.loginid}\n                                                redirectAccount={\n                                                    account.is_disabled ? undefined : () => doSwitch(account.loginid)\n                                                }\n                                                selected_loginid={account_loginid}\n                                                should_show_server_name={checkMultipleSvgAcc()}\n                                            />\n                                        );\n                                    })}\n                            </div>\n                            {!has_cr_account &&\n                                getRemainingRealAccounts()\n                                    .filter(account => account === 'svg')\n                                    .map((account, index) => (\n                                        <div key={index} className='acc-switcher__new-account'>\n                                            <Icon icon='IcDeriv' size={24} />\n                                            <Text size='xs' color='general' className='acc-switcher__new-account-text'>\n                                                {getAccountTitle(\n                                                    account,\n                                                    { account_residence: client_residence },\n                                                    country_standpoint\n                                                )}\n                                            </Text>\n                                            <Button\n                                                id='dt_core_account-switcher_add-new-account'\n                                                onClick={() => {\n                                                    if (real_account_creation_unlock_date) {\n                                                        closeAccountsDialog();\n                                                        setShouldShowCooldownModal(true);\n                                                    } else openRealAccountSignup('svg');\n                                                }}\n                                                className='acc-switcher__new-account-btn'\n                                                secondary\n                                                small\n                                            >\n                                                {localize('Add')}\n                                            </Button>\n                                        </div>\n                                    ))}\n                        </AccountWrapper>\n                        <div className='acc-switcher__separator' />\n                    </React.Fragment>\n                ) : null}\n                {!is_high_risk || is_eu ? (\n                    <AccountWrapper\n                        header={\n                            is_low_risk\n                                ? localize(`EU Deriv ${have_more_accounts('MF') ? 'accounts' : 'account'}`)\n                                : localize(`Deriv ${have_more_accounts('MF') ? 'accounts' : 'account'}`)\n                        }\n                        is_visible={is_eu_regulator_visible}\n                        toggleVisibility={() => {\n                            toggleVisibility('real_deriv');\n                        }}\n                    >\n                        <div className='acc-switcher__accounts'>\n                            {getSortedAccountList(account_list, accounts)\n                                .filter(account => !account.is_virtual && account.loginid.startsWith('MF'))\n                                .map(account => {\n                                    return (\n                                        <AccountList\n                                            account_type={account_type}\n                                            is_dark_mode_on={is_dark_mode_on}\n                                            key={account.loginid}\n                                            balance={accounts[account.loginid].balance}\n                                            currency={accounts[account.loginid].currency}\n                                            currency_icon={`IcCurrency-${account.icon}`}\n                                            country_standpoint={country_standpoint}\n                                            display_type={'currency'}\n                                            has_balance={'balance' in accounts[account.loginid]}\n                                            is_disabled={account.is_disabled}\n                                            is_virtual={account.is_virtual}\n                                            is_eu={is_eu}\n                                            loginid={account.loginid}\n                                            redirectAccount={\n                                                account.is_disabled ? undefined : () => doSwitch(account.loginid)\n                                            }\n                                            selected_loginid={account_loginid}\n                                            should_show_server_name={checkMultipleSvgAcc()}\n                                        />\n                                    );\n                                })}\n                        </div>\n                        {getRemainingRealAccounts()\n                            .filter(account => account === 'maltainvest')\n                            .map((account, index) => {\n                                return (\n                                    <div key={index} className='acc-switcher__new-account'>\n                                        <Icon icon='IcDeriv' size={24} />\n                                        <Text size='xs' color='general' className='acc-switcher__new-account-text'>\n                                            {getAccountTitle(\n                                                account,\n                                                { account_residence: client_residence },\n                                                country_standpoint\n                                            )}\n                                        </Text>\n                                        <Button\n                                            id='dt_core_account-switcher_add-new-account'\n                                            onClick={() => {\n                                                if (real_account_creation_unlock_date) {\n                                                    closeAccountsDialog();\n                                                    setShouldShowCooldownModal(true);\n                                                } else {\n                                                    openRealAccountSignup('maltainvest');\n                                                }\n                                            }}\n                                            className='acc-switcher__new-account-btn'\n                                            secondary\n                                            small\n                                        >\n                                            {localize('Add')}\n                                        </Button>\n                                    </div>\n                                );\n                            })}\n                    </AccountWrapper>\n                ) : null}\n            </React.Fragment>\n        </div>\n    );\n\n    const first_real_login_id = account_list?.find(account => /^(CR|MF)/.test(account.loginid))?.loginid;\n\n    const TradersHubRedirect = () => {\n        const TradersHubLink = () => {\n            const handleRedirect = async () => {\n                if (!is_virtual && isDemoAccountTab) {\n                    await switchAccount(virtual_account_loginid);\n                } else if (is_virtual && isRealAccountTab) {\n                    await switchAccount(first_real_login_id);\n                }\n                toggleAccountsDialog(false);\n                history.push(routes.traders_hub);\n                setTogglePlatformType('cfd');\n            };\n\n            return (\n                <React.Fragment>\n                    <div className='acc-switcher__traders-hub'>\n                        <BinaryLink onClick={handleRedirect} className='acc-switcher__traders-hub--link'>\n                            <Text size='xs' align='center' className='acc-switcher__traders-hub--text'>\n                                <Localize i18n_default_text=\"Looking for CFD accounts? Go to Trader's Hub\" />\n                            </Text>\n                        </BinaryLink>\n                    </div>\n                    <div className='acc-switcher__separator' />\n                </React.Fragment>\n            );\n        };\n\n        if ((isRealAccountTab && has_any_real_account) || isDemoAccountTab) {\n            return <TradersHubLink />;\n        }\n\n        return null;\n    };\n\n    return (\n        <div className='acc-switcher__list' ref={wrapper_ref} data-testid='acc-switcher'>\n            {is_landing_company_loaded ? (\n                <React.Fragment>\n                    <Tabs\n                        active_index={active_tab_index}\n                        className='acc-switcher__list-tabs'\n                        onTabItemClick={index => setActiveTabIndex(index)}\n                        top\n                    >\n                        {/* TODO: De-couple and refactor demo and real accounts groups\n                        into a single reusable AccountListItem component */}\n                        <div label={localize('Real')} id='real_account_tab'>\n                            <DesktopWrapper>\n                                <ThemedScrollbars height='354px'>{real_accounts}</ThemedScrollbars>\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <Div100vhContainer\n                                    className='acc-switcher__list-container'\n                                    max_autoheight_offset='234px'\n                                >\n                                    {real_accounts}\n                                </Div100vhContainer>\n                            </MobileWrapper>\n                        </div>\n                        <div label={localize('Demo')} id='dt_core_account-switcher_demo-tab'>\n                            <DesktopWrapper>\n                                <ThemedScrollbars height='354px'>{demo_account}</ThemedScrollbars>\n                            </DesktopWrapper>\n                            <MobileWrapper>\n                                <Div100vhContainer\n                                    className='acc-switcher__list-container'\n                                    max_autoheight_offset='234px'\n                                >\n                                    {demo_account}\n                                </Div100vhContainer>\n                            </MobileWrapper>\n                        </div>\n                    </Tabs>\n                    <div\n                        className={classNames('acc-switcher__separator', {\n                            'acc-switcher__separator--auto-margin': is_mobile,\n                        })}\n                    />\n                    <div className='acc-switcher__total'>\n                        <Text line_height='s' size='xs' weight='bold' color='prominent'>\n                            <Localize i18n_default_text='Total assets' />\n                        </Text>\n                        <Text size='xs' color='prominent' className='acc-switcher__balance'>\n                            <Money\n                                currency={isRealAccountTab ? account_total_balance_currency : vrtc_currency}\n                                amount={formatMoney(\n                                    isRealAccountTab ? account_total_balance_currency : vrtc_currency,\n                                    isRealAccountTab ? getTotalRealAssets() : getTotalDemoAssets(),\n                                    true\n                                )}\n                                show_currency\n                                should_format={false}\n                            />\n                        </Text>\n                    </div>\n                    <Text color='less-prominent' line_height='xs' size='xxxs' className='acc-switcher__total-subtitle'>\n                        {localize('Total assets in your Deriv accounts.')}\n                    </Text>\n                    <div className='acc-switcher__separator' />\n\n                    <TradersHubRedirect />\n\n                    <div className='acc-switcher__footer'>\n                        {isRealAccountTab && has_active_real_account && !is_virtual && (\n                            <Button\n                                className='acc-switcher__btn--traders_hub'\n                                secondary\n                                onClick={\n                                    has_any_real_account && !hasSetCurrency\n                                        ? setAccountCurrency\n                                        : () => openRealAccountSignup('manage')\n                                }\n                            >\n                                {localize('Manage accounts')}\n                            </Button>\n                        )}\n                        <div id='dt_logout_button' className='acc-switcher__logout' onClick={handleLogout}>\n                            <Text color='prominent' size='xs' align='left' className='acc-switcher__logout-text'>\n                                {localize('Log out')}\n                            </Text>\n                            <Icon\n                                icon='IcLogout'\n                                className='acc-switcher__logout-icon drawer__icon'\n                                onClick={handleLogout}\n                            />\n                        </div>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <Loading is_fullscreen={false} />\n            )}\n        </div>\n    );\n};\n\nAccountSwitcher.propTypes = {\n    available_crypto_currencies: PropTypes.array,\n    account_list: PropTypes.array,\n    account_loginid: PropTypes.string,\n    accounts: PropTypes.object,\n    account_type: PropTypes.string,\n    client_residence: PropTypes.string,\n    country_standpoint: PropTypes.object,\n    has_active_real_account: PropTypes.bool,\n    has_any_real_account: PropTypes.bool,\n    has_fiat: PropTypes.bool,\n    history: PropTypes.object,\n    is_dark_mode_on: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    is_landing_company_loaded: PropTypes.bool,\n    is_low_risk: PropTypes.bool,\n    is_high_risk: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    is_visible: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    logoutClient: PropTypes.func,\n    mt5_login_list: PropTypes.array,\n    obj_total_balance: PropTypes.object,\n    openAccountNeededModal: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    should_show_real_accounts_list: PropTypes.bool,\n    show_eu_related_content: PropTypes.bool,\n    switchAccount: PropTypes.func,\n    resetVirtualBalance: PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    togglePositionsDrawer: PropTypes.func,\n    toggleSetCurrencyModal: PropTypes.func,\n    upgradeable_landing_companies: PropTypes.array,\n    real_account_creation_unlock_date: PropTypes.number,\n    setShouldShowCooldownModal: PropTypes.func,\n    content_flag: PropTypes.string,\n    virtual_account_loginid: PropTypes.string,\n    setTogglePlatformType: PropTypes.func,\n};\n\nconst account_switcher = withRouter(\n    connect(({ client, ui, traders_hub }) => ({\n        available_crypto_currencies: client.available_crypto_currencies,\n        account_loginid: client.loginid,\n        accounts: client.accounts,\n        account_type: client.account_type,\n        account_list: client.account_list,\n        client_residence: client.residence,\n        country_standpoint: client.country_standpoint,\n        is_dark_mode_on: ui.is_dark_mode_on,\n        is_eu: client.is_eu,\n        is_landing_company_loaded: client.is_landing_company_loaded,\n        is_low_risk: client.is_low_risk,\n        is_high_risk: client.is_high_risk,\n        is_logged_in: client.is_logged_in,\n        is_virtual: client.is_virtual,\n        has_fiat: client.has_fiat,\n        landing_company_shortcode: client.landing_company_shortcode,\n        mt5_login_list: client.mt5_login_list,\n        obj_total_balance: client.obj_total_balance,\n        switchAccount: client.switchAccount,\n        resetVirtualBalance: client.resetVirtualBalance,\n        has_active_real_account: client.has_active_real_account,\n        logoutClient: client.logout,\n        upgradeable_landing_companies: client.upgradeable_landing_companies,\n        is_positions_drawer_on: ui.is_positions_drawer_on,\n        openRealAccountSignup: ui.openRealAccountSignup,\n        toggleAccountsDialog: ui.toggleAccountsDialog,\n        togglePositionsDrawer: ui.togglePositionsDrawer,\n        toggleSetCurrencyModal: ui.toggleSetCurrencyModal,\n        should_show_real_accounts_list: ui.should_show_real_accounts_list,\n        real_account_creation_unlock_date: client.real_account_creation_unlock_date,\n        setShouldShowCooldownModal: ui.setShouldShowCooldownModal,\n        show_eu_related_content: traders_hub.show_eu_related_content,\n        content_flag: traders_hub.content_flag,\n        has_any_real_account: client.has_any_real_account,\n        virtual_account_loginid: client.virtual_account_loginid,\n        setTogglePlatformType: traders_hub.setTogglePlatformType,\n    }))(AccountSwitcher)\n);\n\nexport { account_switcher as AccountSwitcher };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Div100vhContainer, Modal } from '@deriv/components';\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\n\nconst AccountSwitcherMobile = props => {\n    const { disableApp, enableApp, is_visible, is_upgrade_enabled, toggle } = props;\n    return (\n        <Modal\n            id='dt_account_switcher_modal'\n            className='accounts-switcher'\n            enableApp={enableApp}\n            is_open={is_visible}\n            is_vertical_top\n            disableApp={disableApp}\n            has_close_icon={false}\n            toggleModal={toggle}\n            height='auto'\n            width='calc(100vw - 32px)'\n        >\n            <Div100vhContainer\n                className={classNames('acc-switcher__wrapper', 'acc-switcher__wrapper--is-mobile')}\n                max_autoheight_offset='48px'\n            >\n                <AccountSwitcher is_mobile is_visible={true} toggle={toggle} is_upgrade_enabled={is_upgrade_enabled} />\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nAccountSwitcherMobile.propTypes = {\n    children: PropTypes.any,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_visible: PropTypes.bool,\n    is_upgrade_enabled: PropTypes.bool,\n    onClose: PropTypes.func,\n    title: PropTypes.string,\n    toggle: PropTypes.func,\n    visible: PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n};\n\nexport default AccountSwitcherMobile;\n","import { DesktopWrapper, Icon, MobileWrapper, Popover, Text } from '@deriv/components';\n\nimport { AccountSwitcher } from 'App/Containers/AccountSwitcher';\nimport AccountSwitcherMobile from 'App/Containers/AccountSwitcher/account-switcher-mobile.jsx';\nimport { CSSTransition } from 'react-transition-group';\nimport { Localize } from '@deriv/translations';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\n\nconst AccountInfoWrapper = ({ is_disabled, disabled_message, children }) =>\n    is_disabled && disabled_message ? (\n        <Popover alignment='left' message={disabled_message} zIndex={99999}>\n            {children}\n        </Popover>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n\nconst AccountInfoIcon = ({ is_virtual, currency }) => (\n    <Icon\n        data_testid='dt_icon'\n        icon={`IcCurrency-${is_virtual ? 'virtual' : currency || 'Unknown'}`}\n        className={`acc-info__id-icon acc-info__id-icon--${is_virtual ? 'virtual' : currency}`}\n        size={24}\n    />\n);\n\nconst DisplayAccountType = ({ account_type, country_standpoint, is_eu }) => {\n    if (account_type === 'financial') {\n        return <Localize i18n_default_text='Multipliers' />;\n    } else if (account_type === 'gaming') {\n        if (country_standpoint.is_isle_of_man) return null;\n        if (country_standpoint.is_united_kingdom) {\n            return <Localize i18n_default_text='Gaming' />;\n        }\n        if (is_eu || country_standpoint.is_belgium) {\n            return <Localize i18n_default_text='Options' />;\n        }\n        return <Localize i18n_default_text='Derived' />;\n    }\n    return null;\n};\n\nconst AccountInfo = ({\n    acc_switcher_disabled_message,\n    account_type,\n    balance,\n    currency,\n    country_standpoint,\n    disableApp,\n    enableApp,\n    is_dialog_on,\n    is_eu,\n    is_virtual,\n    toggleDialog,\n    is_disabled,\n}) => {\n    const currency_lower = currency?.toLowerCase();\n\n    return (\n        <div className='acc-info__wrapper'>\n            <div className='acc-info__separator' />\n            <AccountInfoWrapper is_disabled={is_disabled} disabled_message={acc_switcher_disabled_message}>\n                <div\n                    data-testid='dt_acc_info'\n                    id='dt_core_account-info_acc-info'\n                    className={classNames('acc-info', {\n                        'acc-info--show': is_dialog_on,\n                        'acc-info--is-virtual': is_virtual,\n                        'acc-info--is-disabled': is_disabled,\n                    })}\n                    onClick={is_disabled ? undefined : () => toggleDialog()}\n                >\n                    <span className='acc-info__id'>\n                        <DesktopWrapper>\n                            <AccountInfoIcon is_virtual={is_virtual} currency={currency_lower} />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            {(is_virtual || currency) && (\n                                <AccountInfoIcon is_virtual={is_virtual} currency={currency_lower} />\n                            )}\n                        </MobileWrapper>\n                    </span>\n                    {(typeof balance !== 'undefined' || !currency) && (\n                        <div className='acc-info__account-type-and-balance'>\n                            <p\n                                data-testid='dt_balance'\n                                className={classNames('acc-info__balance', {\n                                    'acc-info__balance--no-currency': !currency && !is_virtual,\n                                })}\n                            >\n                                {!currency ? (\n                                    <Localize i18n_default_text='No currency assigned' />\n                                ) : (\n                                    `${balance} ${getCurrencyDisplayCode(currency)}`\n                                )}\n                            </p>\n                            <Text size='xxxs' line_height='s'>\n                                <DisplayAccountType\n                                    account_type={account_type}\n                                    country_standpoint={country_standpoint}\n                                    is_eu={is_eu}\n                                />\n                            </Text>\n                        </div>\n                    )}\n                    {is_disabled ? (\n                        <Icon data_testid='dt_lock_icon' icon='IcLock' />\n                    ) : (\n                        <Icon\n                            data_testid='dt_select_arrow'\n                            icon='IcChevronDownBold'\n                            className='acc-info__select-arrow'\n                        />\n                    )}\n                </div>\n            </AccountInfoWrapper>\n            <MobileWrapper>\n                <AccountSwitcherMobile\n                    is_visible={is_dialog_on}\n                    disableApp={disableApp}\n                    enableApp={enableApp}\n                    toggle={toggleDialog}\n                />\n            </MobileWrapper>\n            <DesktopWrapper>\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter: 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit: 'acc-switcher__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper'>\n                        <AccountSwitcher is_visible={is_dialog_on} toggle={toggleDialog} />\n                    </div>\n                </CSSTransition>\n            </DesktopWrapper>\n        </div>\n    );\n};\n\nAccountInfo.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    balance: PropTypes.string,\n    currency: PropTypes.string,\n    country_standpoint: PropTypes.object,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_dialog_on: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    loginid: PropTypes.string,\n    toggleDialog: PropTypes.func,\n};\n\nexport default AccountInfo;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'Stores/connect';\nimport { PlatformContext } from '@deriv/shared';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, href, has_error, setError, ...props }) => {\n    const platform_context = React.useContext(PlatformContext);\n    const is_appstore = platform_context?.is_appstore;\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig({ is_appstore }));\n\n    if (!route && to) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to && !href ? (\n        <span\n            data-testid='dt_span'\n            className={classNames({\n                [`${active_class}__link-wrapper`]: !!active_class,\n            })}\n            onClick={() => {\n                if (has_error) setError(false, null);\n            }}\n        >\n            <NavLink to={path} activeClassName={active_class || 'active'} exact={route.exact} {...props}>\n                {children}\n            </NavLink>\n        </span>\n    ) : (\n        <a data-testid='dt_link' {...props}>\n            {children}\n        </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    has_error: PropTypes.bool,\n    href: PropTypes.string,\n    setError: PropTypes.func,\n    to: PropTypes.string,\n};\n\nexport default connect(({ common }) => ({\n    has_error: common.has_error,\n    setError: common.setError,\n}))(BinaryLink);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon } from '@deriv/components';\nimport { getAllowedLanguages } from '@deriv/translations';\n\nexport type TLanguageLink = {\n    icon_classname?: string;\n    is_clickable?: boolean;\n    lang: string;\n    toggleModal?: () => void;\n};\n\nconst LanguageLink = observer(({ icon_classname, is_clickable = false, lang, toggleModal }: TLanguageLink) => {\n    const { common } = useStore();\n    const { changeSelectedLanguage, current_language } = common;\n    const is_active = current_language === lang;\n\n    const link: React.ReactNode = (\n        <React.Fragment>\n            <Icon\n                icon={`IcFlag${lang.replace('_', '-')}`}\n                className={classNames(\n                    'settings-language__language-link-flag',\n                    'settings-language__language-flag',\n                    icon_classname\n                )}\n            />\n            <span\n                className={classNames('settings-language__language-name', {\n                    'settings-language__language-name--active': is_active,\n                })}\n            >\n                {getAllowedLanguages()[lang]}\n            </span>\n        </React.Fragment>\n    );\n    return (\n        <React.Fragment>\n            {!is_clickable ? (\n                <div\n                    id={`dt_settings_${lang}_button`}\n                    className={classNames('settings-language__language-link', {\n                        'settings-language__language-link--active': is_active,\n                    })}\n                >\n                    {link}\n                </div>\n            ) : (\n                <span\n                    data-testid='dt_settings_language_button'\n                    id={`dt_settings_${lang}_button`}\n                    key={lang}\n                    onClick={() => {\n                        changeSelectedLanguage(lang);\n                        toggleModal?.();\n                    }}\n                    className={classNames('settings-language__language-link', {\n                        'settings-language__language-link--active': is_active,\n                    })}\n                >\n                    {link}\n                </span>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default LanguageLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\nimport { connect } from 'Stores/connect';\n\nconst RouteWithSubRoutes = route => {\n    const validateRoute = pathname => {\n        if (pathname.startsWith('/cashier') && !pathname.startsWith('/cashier/p2p/') && !!route.routes) {\n            return route.path === pathname || !!route?.routes.find(r => pathname === r.path);\n        } else if (pathname.startsWith('/cashier/p2p/') && !!route.routes) {\n            const cashier_subroutes = route?.routes.find(r => r.path === '/cashier/p2p');\n            const p2p_subroutes = cashier_subroutes?.routes.find(r => pathname === r.path);\n\n            return route.path === pathname || !!p2p_subroutes;\n        }\n        return true;\n    };\n\n    const renderFactory = props => {\n        let result = null;\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        // check if by re-rendering content should Platform app_id  change or not,\n        if (is_valid_route) {\n            route.checkAppId();\n        }\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logged_in && !route.is_logging_in) {\n            if (window.localStorage.getItem('is_redirecting') === 'true') {\n                window.localStorage.removeItem('is_redirecting');\n                redirectToLogin(route.is_logged_in, getLanguage(), true, 3000);\n            } else {\n                redirectToLogin(route.is_logged_in, getLanguage());\n            }\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? (\n                        <route.component {...props} routes={route.routes} passthrough={route.passthrough} />\n                    ) : (\n                        <Page404 />\n                    )}\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default connect(({ gtm, common }) => ({\n    pushDataLayer: gtm.pushDataLayer,\n    checkAppId: common.checkAppId,\n}))(RouteWithSubRoutes);\n","import React from 'react';\nimport { Switch, Prompt, useLocation } from 'react-router-dom';\nimport { Loading } from '@deriv/components';\nimport { PlatformContext } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => {\n    const location = useLocation();\n    const { is_appstore } = React.useContext(PlatformContext);\n    React.useEffect(() => {\n        props.pushDataLayer({ event: 'page_load' });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [location]);\n\n    const is_eu_country = props.isEuropeCountry;\n\n    return (\n        <React.Suspense fallback={<Loading />}>\n            <Prompt when={props.prompt_when} message={props.promptFn} />\n            <Switch>\n                {getRoutesConfig({ is_appstore, is_eu_country }).map((route, idx) => (\n                    <RouteWithSubRoutes key={idx} {...route} {...props} />\n                ))}\n            </Switch>\n        </React.Suspense>\n    );\n};\n\nexport default connect(({ ui, gtm, client }) => ({\n    prompt_when: ui.prompt_when,\n    promptFn: ui.promptFn,\n    pushDataLayer: gtm.pushDataLayer,\n    isEuropeCountry: client.isEuropeCountry,\n}))(BinaryRoutes);\n","import BinaryLink from './binary-link.jsx';\nimport LanguageLink from './language-link';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, LanguageLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { loginUrl, routes, SessionStore, PlatformContext } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { WS } from 'Services';\nimport { Analytics } from '@deriv/analytics';\n\nconst Redirect = ({\n    history,\n    currency,\n    setVerificationCode,\n    verification_code,\n    openRealAccountSignup,\n    setResetTradingPasswordModalOpen,\n    toggleAccountSignupModal,\n    toggleResetPasswordModal,\n    setNewEmail,\n    toggleResetEmailModal,\n    toggleUpdateEmailModal,\n    is_mobile,\n}) => {\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    let redirected_to_route = false;\n    const action_param = url_params.get('action');\n    const code_param = url_params.get('code') || verification_code[action_param];\n    const ext_platform_url = url_params.get('ext_platform_url');\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const redirectToExternalPlatform = url => {\n        history.push(`${routes.root}?ext_platform_url=${url}`);\n        redirected_to_route = true;\n    };\n    setVerificationCode(code_param, action_param);\n    setNewEmail(url_params.get('email'), action_param);\n\n    switch (action_param) {\n        case 'signup': {\n            if (!is_appstore) {\n                Analytics.trackEvent('ce_virtual_signup_form', {\n                    action: 'email_confirmed',\n                    form_name: is_mobile ? 'virtual_signup_web_mobile_default' : 'virtual_signup_web_desktop_default',\n                    email: url_params.get('email'),\n                });\n            }\n            SessionStore.set('signup_query_param', url_query_string);\n            history.push({\n                pathname: routes.onboarding,\n                search: url_query_string,\n            });\n            SessionStore.remove('redirect_url');\n            redirected_to_route = true;\n            toggleAccountSignupModal(true);\n            break;\n        }\n        case 'reset_password': {\n            toggleResetPasswordModal(true);\n            break;\n        }\n        case 'request_email': {\n            toggleResetEmailModal(true);\n            break;\n        }\n        case 'social_email_change': {\n            toggleResetPasswordModal(true);\n            break;\n        }\n        case 'system_email_change': {\n            toggleUpdateEmailModal(true);\n            break;\n        }\n        case 'trading_platform_mt5_password_reset':\n        case 'trading_platform_dxtrade_password_reset': {\n            const redirect_to = url_params.get('redirect_to');\n\n            if (redirect_to) {\n                let pathname = '';\n                let hash = '';\n                switch (redirect_to) {\n                    case '1':\n                        pathname = routes.mt5;\n                        break;\n                    case '10':\n                        pathname = routes.mt5;\n                        hash = 'real';\n                        break;\n                    case '11':\n                        pathname = routes.mt5;\n                        hash = 'demo';\n                        break;\n                    case '2':\n                        pathname = routes.dxtrade;\n                        break;\n                    case '20':\n                        pathname = routes.dxtrade;\n                        hash = 'real';\n                        break;\n                    case '21':\n                        pathname = routes.dxtrade;\n                        hash = 'demo';\n                        break;\n                    case '3':\n                        pathname = routes.passwords;\n                        break;\n                    default:\n                        break;\n                }\n\n                if (pathname) {\n                    history.push({\n                        pathname,\n                        hash,\n                        search: url_query_string,\n                    });\n                    redirected_to_route = true;\n                }\n            }\n\n            setResetTradingPasswordModalOpen(true);\n            break;\n        }\n        case 'payment_withdraw': {\n            history.push(routes.cashier_withdrawal);\n            redirected_to_route = true;\n            break;\n        }\n        case 'payment_agent_withdraw': {\n            history.push(routes.cashier_pa);\n            redirected_to_route = true;\n            break;\n        }\n        case 'add_account': {\n            WS.wait('get_account_status').then(() => {\n                if (!currency) return openRealAccountSignup('set_currency');\n                return openRealAccountSignup('svg');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'add_account_multiplier': {\n            WS.wait('get_account_status').then(() => {\n                if (!currency) return openRealAccountSignup('set_currency');\n                return openRealAccountSignup('maltainvest');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'manage_account': {\n            WS.wait('get_account_status').then(() => {\n                return openRealAccountSignup('manage');\n            });\n            if (ext_platform_url) redirectToExternalPlatform(ext_platform_url);\n            break;\n        }\n        case 'verification': {\n            // Removing this will break mobile DP2P app. Do not remove.\n            sessionStorage.setItem('redirect_url', routes.p2p_verification);\n            const new_href = loginUrl({\n                language: getLanguage(),\n            });\n            window.location.href = new_href;\n            break;\n        }\n        case 'trading_platform_investor_password_reset': {\n            localStorage.setItem('cfd_reset_password_code', code_param);\n            const is_demo = localStorage.getItem('cfd_reset_password_intent')?.includes('demo');\n            history.push(`${routes.mt5}#${is_demo ? 'demo' : 'real'}#reset-password`);\n            redirected_to_route = true;\n            break;\n        }\n        case 'p2p_order_confirm': {\n            history.push({\n                pathname: routes.cashier_p2p,\n                search: url_query_string,\n            });\n            redirected_to_route = true;\n            break;\n        }\n\n        default:\n            break;\n    }\n\n    if (!redirected_to_route && history.location.pathname !== routes.root) {\n        history.push({\n            pathname: routes.root,\n            search: url_query_string,\n        });\n    }\n\n    return null;\n};\n\nRedirect.propTypes = {\n    currency: PropTypes.string,\n    loginid: PropTypes.string,\n    getServerTime: PropTypes.object,\n    history: PropTypes.object,\n    openRealAccountSignup: PropTypes.func,\n    setResetTradingPasswordModalOpen: PropTypes.func,\n    setVerificationCode: PropTypes.func,\n    setNewEmail: PropTypes.func,\n    toggleAccountSignupModal: PropTypes.func,\n    toggleResetPasswordModal: PropTypes.func,\n    toggleResetEmailModal: PropTypes.func,\n    toggleUpdateEmailModal: PropTypes.func,\n    verification_code: PropTypes.object,\n    is_mobile: PropTypes.bool,\n};\n\nexport default withRouter(\n    connect(({ client, ui }) => ({\n        currency: client.currency,\n        is_eu: client.is_eu,\n        setVerificationCode: client.setVerificationCode,\n        verification_code: client.verification_code,\n        fetchResidenceList: client.fetchResidenceList,\n        openRealAccountSignup: ui.openRealAccountSignup,\n        setResetTradingPasswordModalOpen: ui.setResetTradingPasswordModalOpen,\n        toggleAccountSignupModal: ui.toggleAccountSignupModal,\n        toggleResetPasswordModal: ui.toggleResetPasswordModal,\n        setNewEmail: client.setNewEmail,\n        toggleResetEmailModal: ui.toggleResetEmailModal,\n        toggleUpdateEmailModal: ui.toggleUpdateEmailModal,\n        is_mobile: ui.is_mobile,\n    }))(Redirect)\n);\n","import Redirect from './redirect.jsx';\n\nexport default Redirect;\n","import React from 'react';\nimport { Field, Form, Formik } from 'formik';\nimport { Button, Input, Checkbox, Text } from '@deriv/components';\nimport {\n    getDebugServiceWorker,\n    getAppId,\n    getSocketURL,\n    PlatformContext,\n    isMobile,\n    website_domain,\n    TRADE_FEATURE_FLAGS,\n} from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\nconst FeatureFlagsSection = observer(() => {\n    const { feature_flags } = useStore();\n    const HIDDEN_FEATURE_FLAGS = ['wallet'];\n\n    const visible_feature_flags = Object.entries(feature_flags.data ?? {})?.reduce(\n        (flags, [key, value]) => {\n            const is_production = location.hostname === website_domain;\n            if ((!is_production || !TRADE_FEATURE_FLAGS.includes(key)) && !HIDDEN_FEATURE_FLAGS.includes(key)) {\n                flags[key] = value;\n            }\n            return flags;\n        },\n        {} // hiding flags for trade types in production\n    );\n    if (!feature_flags.data) return null;\n\n    return (\n        <div style={{ marginTop: '4rem' }}>\n            <Text as='h1' weight='bold' color='prominent'>\n                Feature flags\n            </Text>\n            {Object.keys(visible_feature_flags).map(flag => (\n                <div key={flag} style={{ marginTop: '1.6rem' }}>\n                    <Checkbox\n                        label={flag}\n                        value={visible_feature_flags[flag]}\n                        onChange={e => feature_flags.update(old => ({ ...old, [flag]: e.target.checked }))}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n});\n\nconst InputField = props => {\n    return (\n        <Field name={props.name}>\n            {({ field, form: { errors, touched } }) => (\n                <React.Fragment>\n                    <Input\n                        type='text'\n                        autoComplete='off'\n                        maxLength='30'\n                        error={touched[field.name] && errors[field.name]}\n                        {...field}\n                        {...props}\n                    />\n                </React.Fragment>\n            )}\n        </Field>\n    );\n};\n\n// doesn't need localization as it's for internal use\nconst Endpoint = () => {\n    const platform_store = React.useContext(PlatformContext);\n\n    return (\n        <Formik\n            initialValues={{\n                app_id: getAppId(),\n                server: getSocketURL(),\n                is_appstore_enabled: platform_store.is_appstore,\n                is_debug_service_worker_enabled: !!getDebugServiceWorker(),\n            }}\n            validate={values => {\n                const errors = {};\n\n                if (!values.app_id) {\n                    errors.app_id = 'App ID is required.';\n                } else if (!/^\\d+$/.test(values.app_id)) {\n                    errors.app_id = 'Please enter a valid app ID.';\n                }\n\n                if (!values.server) {\n                    errors.server = 'Server is required.';\n                } else if (!/^[\\w|\\-|.]+$/.test(values.server)) {\n                    errors.server = 'Please enter a valid server.';\n                }\n                return errors;\n            }}\n            onSubmit={values => {\n                localStorage.setItem('config.app_id', values.app_id);\n                localStorage.setItem('config.server_url', values.server);\n                localStorage.setItem(platform_store.DERIV_APPSTORE_KEY, values.is_appstore_enabled);\n                localStorage.setItem('debug_service_worker', values.is_debug_service_worker_enabled ? 1 : 0);\n                platform_store.setIsAppStore(values.is_appstore_enabled);\n                sessionStorage.removeItem('config.platform');\n                location.reload();\n            }}\n        >\n            {({ errors, isSubmitting, touched, values, handleChange, setFieldTouched }) => (\n                <Form style={{ width: '30vw', minWidth: '300px', margin: isMobile() ? 'auto' : '20vh auto' }}>\n                    <div\n                        style={{\n                            marginBottom: '1.6rem',\n                        }}\n                    >\n                        <Text as='h1' weight='bold' color='prominent'>\n                            Change API endpoint\n                        </Text>\n                    </div>\n\n                    <InputField name='server' label='Server' hint='e.g. frontend.derivws.com' />\n                    <InputField\n                        name='app_id'\n                        label='OAuth App ID'\n                        hint={\n                            <React.Fragment>\n                                Register an{' '}\n                                <a\n                                    href='https://developers.binary.com/applications/'\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                >\n                                    app ID\n                                </a>{' '}\n                                to use the above server for logging in.\n                            </React.Fragment>\n                        }\n                    />\n                    <Field name='is_appstore_enabled'>\n                        {({ field }) => (\n                            <div style={{ marginTop: '4.5rem', marginBottom: '1.6rem' }}>\n                                <Checkbox\n                                    {...field}\n                                    label='Enable Appstore'\n                                    value={values.is_appstore_enabled}\n                                    onChange={e => {\n                                        handleChange(e);\n                                        setFieldTouched('is_appstore_enabled', true);\n                                    }}\n                                />\n                            </div>\n                        )}\n                    </Field>\n                    <Field name='is_debug_service_worker_enabled'>\n                        {({ field }) => (\n                            <div style={{ marginTop: '4.5rem', marginBottom: '1.6rem' }}>\n                                <Checkbox\n                                    {...field}\n                                    label='Enable Service Worker registration for this URL'\n                                    value={values.is_debug_service_worker_enabled}\n                                    onChange={e => {\n                                        handleChange(e);\n                                        setFieldTouched('is_debug_service_worker_enabled', true);\n                                    }}\n                                />\n                            </div>\n                        )}\n                    </Field>\n                    <Button\n                        type='submit'\n                        is_disabled={\n                            !!(\n                                (!touched.server &&\n                                    !touched.app_id &&\n                                    !touched.is_appstore_enabled &&\n                                    !touched.is_debug_service_worker_enabled) ||\n                                !values.server ||\n                                !values.app_id ||\n                                errors.server ||\n                                errors.app_id ||\n                                isSubmitting\n                            )\n                        }\n                        text='Submit'\n                        primary\n                    />\n                    <span style={{ marginLeft: '1.6rem' }} />\n                    <Button\n                        type='button'\n                        onClick={() => {\n                            localStorage.removeItem('config.app_id');\n                            localStorage.removeItem('config.server_url');\n                            location.reload();\n                        }}\n                        text='Reset to original settings'\n                        secondary\n                    />\n                    <FeatureFlagsSection />\n                </Form>\n            )}\n        </Formik>\n    );\n};\n\nexport default Endpoint;\n","import Endpoint from './Endpoint.jsx';\n\nexport default Endpoint;\n","import React from 'react';\nimport { Redirect as RouterRedirect } from 'react-router-dom';\nimport { makeLazyLoader, routes, moduleLoader } from '@deriv/shared';\nimport { Loading } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport Redirect from 'App/Containers/Redirect';\nimport Endpoint from 'Modules/Endpoint';\nimport CFDCompareAccounts from '@deriv/cfd/src/Containers/cfd-compare-accounts';\n\n// Error Routes\nconst Page404 = React.lazy(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404'));\n\nconst Trader = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"trader\" */ '@deriv/trader');\n    })\n);\n\nconst Reports = React.lazy(() => {\n    // eslint-disable-next-line import/no-unresolved\n    return import(/* webpackChunkName: \"reports\" */ '@deriv/reports');\n});\n\nconst CFD = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"cfd\" */ '@deriv/cfd');\n    })\n);\n\nconst Account = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"account\" */ '@deriv/account');\n    })\n);\n\nconst Cashier = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"cashier\" */ '@deriv/cashier');\n    })\n);\n\nconst Bot = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"bot-web-ui-app\" */ '@deriv/bot-web-ui');\n    })\n);\n\nconst AppStore = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"appstore\" */ '@deriv/appstore');\n    })\n);\n\nconst Wallets = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"wallets\" */ '@deriv/wallets');\n    })\n);\n\nconst P2P = React.lazy(() =>\n    moduleLoader(() => {\n        // eslint-disable-next-line import/no-unresolved\n        return import(/* webpackChunkName: \"p2p\" */ '@deriv/p2p');\n    })\n);\n\nconst getModules = () => {\n    const modules = [\n        {\n            path: routes.bot,\n            component: Bot,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Bot'),\n        },\n        {\n            path: routes.reports,\n            component: Reports,\n            getTitle: () => localize('Reports'),\n            icon_component: 'IcReports',\n            is_authenticated: true,\n            routes: [\n                {\n                    path: routes.positions,\n                    component: Reports,\n                    getTitle: () => localize('Open positions'),\n                    icon_component: 'IcOpenPositions',\n                    default: true,\n                },\n                {\n                    path: routes.profit,\n                    component: Reports,\n                    getTitle: () => localize('Trade table'),\n                    icon_component: 'IcProfitTable',\n                },\n                {\n                    path: routes.statement,\n                    component: Reports,\n                    getTitle: () => localize('Statement'),\n                    icon_component: 'IcStatement',\n                },\n            ],\n        },\n        {\n            path: routes.dxtrade,\n            component: props => <CFD {...props} platform='dxtrade' />,\n            getTitle: () => localize('Deriv X'),\n        },\n        {\n            path: routes.compare_cfds,\n            component: CFDCompareAccounts,\n            getTitle: () => localize('Compare CFD accounts'),\n        },\n        {\n            path: routes.mt5,\n            component: props => <CFD {...props} platform='mt5' />,\n            getTitle: () => localize('MT5'),\n        },\n        {\n            path: routes.account_closed,\n            component: Account,\n            getTitle: () => localize('Account deactivated'),\n        },\n        {\n            path: routes.account,\n            component: Account,\n            getTitle: () => localize('Account Settings'),\n            icon_component: 'IcUserOutline',\n            is_authenticated: true,\n            routes: [\n                {\n                    getTitle: () => localize('Profile'),\n                    icon: 'IcUserOutline',\n                    subroutes: [\n                        {\n                            path: routes.personal_details,\n                            component: Account,\n                            getTitle: () => localize('Personal details'),\n                            default: true,\n                        },\n\n                        {\n                            path: routes.languages,\n                            component: Account,\n                            getTitle: () => localize('Languages'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Assessments'),\n                    icon: 'IcAssessment',\n                    subroutes: [\n                        {\n                            path: routes.trading_assessment,\n                            component: Account,\n                            getTitle: () => localize('Trading assessment'),\n                        },\n                        {\n                            path: routes.financial_assessment,\n                            component: Account,\n                            getTitle: () => localize('Financial assessment'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Verification'),\n                    icon: 'IcVerification',\n                    subroutes: [\n                        {\n                            path: routes.proof_of_identity,\n                            component: Account,\n                            getTitle: () => localize('Proof of identity'),\n                        },\n                        {\n                            path: routes.proof_of_address,\n                            component: Account,\n                            getTitle: () => localize('Proof of address'),\n                        },\n                        {\n                            path: routes.proof_of_ownership,\n                            component: Account,\n                            getTitle: () => localize('Proof of ownership'),\n                        },\n                    ],\n                },\n                {\n                    getTitle: () => localize('Security and safety'),\n                    icon: 'IcSecurity',\n                    subroutes: [\n                        {\n                            path: routes.passwords,\n                            component: Account,\n                            getTitle: () => localize('Email and passwords'),\n                        },\n                        {\n                            path: routes.self_exclusion,\n                            component: Account,\n                            getTitle: () => localize('Self exclusion'),\n                        },\n                        {\n                            path: routes.account_limits,\n                            component: Account,\n                            getTitle: () => localize('Account limits'),\n                        },\n                        {\n                            path: routes.login_history,\n                            component: Account,\n                            getTitle: () => localize('Login history'),\n                        },\n                        {\n                            path: routes.api_token,\n                            component: Account,\n                            getTitle: () => localize('API token'),\n                        },\n                        {\n                            path: routes.connected_apps,\n                            component: Account,\n                            getTitle: () => localize('Connected apps'),\n                        },\n                        {\n                            path: routes.two_factor_authentication,\n                            component: Account,\n                            getTitle: () => localize('Two-factor authentication'),\n                        },\n                        {\n                            path: routes.closing_account,\n                            component: Account,\n                            getTitle: () => localize('Close your account'),\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            path: routes.traders_hub,\n            component: AppStore,\n            is_authenticated: true,\n            getTitle: () => localize(\"Trader's Hub\"),\n        },\n        {\n            path: routes.wallets,\n            component: Wallets,\n            is_authenticated: true,\n            getTitle: () => localize('Wallets'),\n        },\n        {\n            path: routes.onboarding,\n            component: AppStore,\n            is_authenticated: false,\n            getTitle: () => localize('Appstore'),\n            routes: [\n                {\n                    path: routes.traders_hub,\n                    component: AppStore,\n                    getTitle: () => localize(\"Trader's Hub\"),\n                },\n                {\n                    path: routes.onboarding,\n                    component: AppStore,\n                    is_authenticated: false,\n                    getTitle: () => localize('Onboarding'),\n                },\n            ],\n        },\n        {\n            path: routes.cashier,\n            component: Cashier,\n            is_modal: true,\n            is_authenticated: true,\n            getTitle: () => localize('Cashier'),\n            icon_component: 'IcCashier',\n            routes: [\n                {\n                    path: routes.cashier_deposit,\n                    component: Cashier,\n                    getTitle: () => localize('Deposit'),\n                    icon_component: 'IcCashierAdd',\n                    default: true,\n                },\n                {\n                    path: routes.cashier_withdrawal,\n                    component: Cashier,\n                    getTitle: () => localize('Withdrawal'),\n                    icon_component: 'IcCashierMinus',\n                },\n                {\n                    path: routes.cashier_pa,\n                    component: Cashier,\n                    getTitle: () => localize('Payment agents'),\n                    icon_component: 'IcPaymentAgent',\n                },\n                {\n                    path: routes.cashier_acc_transfer,\n                    component: Cashier,\n                    getTitle: () => localize('Transfer'),\n                    icon_component: 'IcAccountTransfer',\n                },\n                {\n                    path: routes.cashier_pa_transfer,\n                    component: Cashier,\n                    getTitle: () => localize('Transfer to client'),\n                    icon_component: 'IcAccountTransfer',\n                },\n                {\n                    path: routes.cashier_p2p,\n                    component: Cashier,\n                    getTitle: () => localize('Deriv P2P'),\n                    icon_component: 'IcDp2p',\n                    routes: [\n                        {\n                            path: routes.p2p_buy_sell,\n                            component: P2P,\n                            getTitle: () => localize('Buy / Sell'),\n                            default: true,\n                        },\n                        {\n                            path: routes.p2p_advertiser_page,\n                            component: P2P,\n                            getTitle: () => localize(\"Advertiser's page\"),\n                        },\n                        {\n                            path: routes.p2p_orders,\n                            component: P2P,\n                            getTitle: () => localize('Orders'),\n                        },\n                        {\n                            path: routes.p2p_my_ads,\n                            component: P2P,\n                            getTitle: () => localize('My ads'),\n                        },\n                        {\n                            path: routes.p2p_my_profile,\n                            component: P2P,\n                            getTitle: () => localize('My profile'),\n                        },\n                        {\n                            path: routes.p2p_verification,\n                            component: P2P,\n                            getTitle: () => localize('P2P verification'),\n                        },\n                    ],\n                },\n                {\n                    id: 'gtm-onramp-tab',\n                    path: routes.cashier_onramp,\n                    component: Cashier,\n                    getTitle: () => localize('Fiat onramp'),\n                    icon_component: 'IcCashierOnRamp',\n                },\n                {\n                    path: routes.cashier_transactions_crypto,\n                    component: Cashier,\n                    is_invisible: true,\n                },\n            ],\n        },\n        {\n            path: routes.root,\n            component: Trader,\n            getTitle: () => localize('Trader'),\n            routes: [\n                {\n                    path: routes.contract,\n                    component: Trader,\n                    getTitle: () => localize('Contract Details'),\n                    is_authenticated: true,\n                },\n                { path: routes.error404, component: Trader, getTitle: () => localize('Error 404') },\n            ],\n        },\n    ];\n\n    return modules;\n};\n\nconst lazyLoadComplaintsPolicy = makeLazyLoader(\n    () => moduleLoader(() => import(/* webpackChunkName: \"complaints-policy\" */ 'Modules/ComplaintsPolicy')),\n    () => <Loading />\n);\n\n// Order matters\n// TODO: search tag: test-route-parent-info -> Enable test for getting route parent info when there are nested routes\nconst initRoutesConfig = ({ is_appstore, is_eu_country }) => [\n    { path: routes.index, component: RouterRedirect, getTitle: () => '', to: routes.root },\n    { path: routes.endpoint, component: Endpoint, getTitle: () => 'Endpoint' }, // doesn't need localization as it's for internal use\n    { path: routes.redirect, component: Redirect, getTitle: () => localize('Redirect') },\n    {\n        path: routes.complaints_policy,\n        component: lazyLoadComplaintsPolicy(),\n        getTitle: () => localize('Complaints policy'),\n        icon_component: 'IcComplaintsPolicy',\n        is_authenticated: true,\n    },\n    ...getModules({ is_appstore, is_eu_country }),\n];\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\n// is_deriv_crypto = true as default to prevent route ui blinking\nconst getRoutesConfig = ({ is_appstore = true, is_eu_country }) => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig({ is_appstore, is_eu_country });\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n * - Example:\n * getAccountTitle('malta') => 'Real Derived'\n *\n * @param {string} landing_company_shortcode\n * @param {object} options\n * @return {string} localized title\n */\nexport const getAccountTitle = (landing_company_shortcode, { account_residence = '' } = {}, country_standpoint) => {\n    // TODO: [deriv-eu] merge if statement and switch together once more residence cases are found.\n    if (account_residence === 'im') {\n        return localize('Deriv account');\n    }\n\n    switch (landing_company_shortcode) {\n        case 'svg':\n            return localize('Options & Multipliers');\n        case 'iom':\n            if (country_standpoint.is_united_kingdom) {\n                return localize('Deriv Gaming');\n            }\n            return localize('Derived');\n        case 'malta':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_rest_of_eu ||\n                country_standpoint.is_belgium\n            ) {\n                return localize('Options');\n            }\n            return localize('Derived');\n        case 'maltainvest':\n            return localize('Multipliers');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n * @param {boolean} is_fully_authenticated\n * @param {boolean} is_age_verified\n * @param {boolean} is_isle_of_man_residence\n * @param {boolean} is_belgium_residence,\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const {\n        landing_company_shortcode = '',\n        is_fully_authenticated = false,\n        is_age_verified = false,\n        is_isle_of_man_residence = false,\n        is_belgium_residence = false,\n    } = status;\n    const getIOMStatus = () => {\n        if (is_fully_authenticated) return EXPERIAN.SUCCESS;\n        if (is_age_verified) return EXPERIAN.WARN;\n\n        return EXPERIAN.DANGER;\n    };\n\n    if (landing_company_shortcode === 'svg' || is_isle_of_man_residence || is_belgium_residence)\n        return EXPERIAN.SUCCESS;\n    if (landing_company_shortcode === 'iom') return getIOMStatus({ is_fully_authenticated, is_age_verified });\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\n\nconst CloseButton = ({ onClick, className }) => (\n    <button className={className} type='button' onClick={onClick} aria-label={localize('Close')} />\n);\n\nCloseButton.propTypes = {\n    className: PropTypes.string,\n    onClick: PropTypes.func.isRequired,\n};\n\nexport default CloseButton;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { icon_types } from './constants';\n\nconst NotificationStatusIcons = ({ type, class_suffix }) => {\n    // we cannot lazyload danger icon for notification message as its also meant for offline status notification\n    // if danger icon is not lazyloaded and user loses internet connection, it will crash with missing chunk error\n    if (type && type === 'danger') {\n        return (\n            <Icon\n                icon='IcAlertDanger'\n                className={classNames('inline-icon', 'notification__icon-type', {\n                    [`notification__icon-type--${class_suffix}`]: class_suffix,\n                })}\n            />\n        );\n    }\n    return (\n        <React.Fragment>\n            {!!type && (\n                <Icon\n                    icon={icon_types[type]}\n                    className={classNames('notification__icon-type', {\n                        [`notification__icon-type--${class_suffix}`]: class_suffix,\n                    })}\n                    color={type === 'success' ? 'green' : undefined}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nNotificationStatusIcons.propTypes = {\n    class_suffix: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport default NotificationStatusIcons;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile } from '@deriv/shared';\nimport { Button, Icon, Text } from '@deriv/components';\n\nconst NotificationBanner = ({\n    className,\n    header,\n    message,\n    primary_btn,\n    secondary_btn,\n    img_src,\n    img_alt,\n    onClose,\n    icon,\n}) => (\n    <div\n        className={classNames('notification-banner', {\n            [`notification-banner__${className}`]: className,\n        })}\n        data-testid='dt_notification_banner'\n    >\n        <div className='notification-banner--left'>\n            <Text as='h4' size={isMobile() ? 'xs' : 's'} weight='bold' className='notification-banner__title'>\n                {header}\n            </Text>\n            <Text as='p' size={isMobile() ? 'xxs' : 'xs'} className='notification-banner__description' line_height='xs'>\n                {message}\n            </Text>\n            {!!primary_btn && (\n                <div className='notification-banner__btn-wrapper'>\n                    <Button className='notification-banner__btn' primary small onClick={primary_btn.onClick}>\n                        {primary_btn.text}\n                    </Button>\n                </div>\n            )}\n            {!!secondary_btn && (\n                <div className='notification-banner__btn-wrapper'>\n                    <Button className='notification-banner__btn' secondary small onClick={secondary_btn.onClick}>\n                        {secondary_btn.text}\n                    </Button>\n                </div>\n            )}\n        </div>\n        <div className='notification-banner--right'>\n            <div className='notification-banner__bg' />\n            <img className='notification-banner__img' src={img_src} alt={img_alt} />\n            <Icon className='notification-banner__close-icon' icon={icon ?? 'IcCloseLight'} onClick={onClose} />\n        </div>\n    </div>\n);\n\nNotificationBanner.propTypes = {\n    className: PropTypes.string,\n    secondary_btn: PropTypes.object,\n    header: PropTypes.string,\n    img_alt: PropTypes.string,\n    img_src: PropTypes.string,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n    primary_btn: PropTypes.shape({\n        text: PropTypes.string,\n        onClick: PropTypes.func,\n    }),\n    icon: PropTypes.string,\n};\n\nexport default NotificationBanner;\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\n\nconst NotificationPromo = ({ cta_btn, img_alt, img_src, message, onClose }) => {\n    return (\n        <div data-testid='dt_notification_promo' className='notification-promo'>\n            <img className='notification-promo__img' src={img_src} alt={img_alt} />\n            <div className='notification-promo--container'>\n                <div className='notification-promo--left'>\n                    <Text as='p' size='xs' className='notification-promo__message'>\n                        {message}\n                    </Text>\n                    {cta_btn && (\n                        <Button className='notification-promo__btn' blue secondary onClick={cta_btn.onClick}>\n                            {cta_btn.text}\n                        </Button>\n                    )}\n                </div>\n                <Icon className='notification-promo__close-icon' icon='IcCloseLight' onClick={onClose} />\n            </div>\n        </div>\n    );\n};\n\nexport default NotificationPromo;\n","import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Button, Text } from '@deriv/components';\nimport { isEmptyObject } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport CloseButton from './close-button.jsx';\nimport NotificationStatusIcons from './notification-status-icons.jsx';\n\nconst NotificationOrder = ({ action, header, message, onClose }) => {\n    setTimeout(onClose, 60000);\n\n    return (\n        <div\n            data-testid='dt_notification_order'\n            className='notification notification-announce notification--order-successful'\n        >\n            <div className='notification__icon-background'>\n                <NotificationStatusIcons type='announce' class_suffix='is-background' />\n            </div>\n            <div className='notification__icon'>\n                <NotificationStatusIcons type='announce' />\n            </div>\n            <div className='notification__text-container'>\n                <Text as='h4' weight='bold' className='notification__header'>\n                    {header}\n                </Text>\n                <Text as='p' className='notification__text-body'>\n                    {message}\n                </Text>\n                <div className='notification__action'>\n                    {!isEmptyObject(action) && (\n                        <React.Fragment>\n                            {action.route ? (\n                                <BinaryLink\n                                    className={classNames('dc-btn', 'dc-btn--secondary', 'notification__cta-button')}\n                                    onClick={onClose}\n                                    to={action.route}\n                                >\n                                    <Text size='xxs' weight='bold'>\n                                        {action.text}\n                                    </Text>\n                                </BinaryLink>\n                            ) : (\n                                <Button\n                                    className='notification__cta-button'\n                                    text={action.text}\n                                    onClick={() => {\n                                        action.onClick();\n                                        onClose();\n                                    }}\n                                    secondary\n                                    renderText={text => (\n                                        <Text size='xxs' weight='bold' align='center'>\n                                            {text}\n                                        </Text>\n                                    )}\n                                />\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n            <CloseButton className='notification__close-button' onClick={onClose} />\n        </div>\n    );\n};\n\nNotificationOrder.propTypes = {\n    action: PropTypes.object,\n    header: PropTypes.string,\n    is_auto_close: PropTypes.bool,\n    message: PropTypes.string,\n    onClose: PropTypes.func,\n};\n\nexport default NotificationOrder;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, LinearProgress, Text } from '@deriv/components';\nimport { isEmptyObject, PlatformContext } from '@deriv/shared';\nimport CloseButton from './close-button.jsx';\nimport NotificationStatusIcons from './notification-status-icons.jsx';\nimport NotificationBanner from './notification-banner.jsx';\nimport { default_delay, types } from './constants';\nimport NotificationPromo from './notification-promo.jsx';\nimport { BinaryLink } from '../../Routes';\nimport NotificationOrder from './notification-order.jsx';\n\nconst Notification = ({ data, removeNotificationMessage }) => {\n    const linear_progress_container_ref = React.useRef(null);\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    const destroy = is_closed_by_user => {\n        removeNotificationMessage(data);\n\n        if (data.closeOnClick) {\n            data.closeOnClick(data, is_closed_by_user);\n        }\n    };\n\n    const onClick = () => destroy(true);\n\n    if (data.is_auto_close) {\n        setTimeout(destroy, data.delay || default_delay);\n    }\n\n    switch (data.type) {\n        case 'news':\n            return (\n                <NotificationBanner\n                    className={data.className}\n                    header={data.header}\n                    message={data.message}\n                    primary_btn={data.primary_btn}\n                    secondary_btn={data.secondary_btn}\n                    img_src={data.img_src}\n                    img_alt={data.img_alt}\n                    onClose={destroy}\n                    icon={data.icon}\n                />\n            );\n        case 'trustpilot':\n            return (\n                <NotificationBanner\n                    className={data.className}\n                    header={data.header_popup}\n                    message={data.message_popup}\n                    secondary_btn={data.action}\n                    img_src={data.img_src}\n                    img_alt={data.img_alt}\n                    onClose={destroy}\n                />\n            );\n        case 'promotions':\n            return (\n                <NotificationPromo\n                    cta_btn={data.cta_btn}\n                    img_alt={data.img_alt}\n                    img_src={data.img_src}\n                    message={data.message}\n                    onClose={destroy}\n                />\n            );\n        case 'p2p_completed_order':\n            return (\n                <NotificationOrder action={data.action} header={data.header} message={data.message} onClose={destroy} />\n            );\n        default:\n            return (\n                <div\n                    className={classNames('notification', types[data.type], {\n                        'notification--small': data.size === 'small',\n                    })}\n                    data-testid='dt_default_component'\n                >\n                    <div\n                        className={classNames('notification__icon-background', {\n                            'notification__icon-background--header-only': !data.message,\n                        })}\n                    >\n                        <NotificationStatusIcons type={data.type} class_suffix='is-background' />\n                    </div>\n                    <div className='notification__icon'>\n                        <NotificationStatusIcons type={data.type} />\n                    </div>\n                    <div className='notification__text-container'>\n                        <Text as='h4' weight='bold' className='notification__header'>\n                            {data.header}\n                        </Text>\n                        {data.timeout && (\n                            <LinearProgress\n                                className='notification__timeout'\n                                timeout={data.timeout}\n                                action={data.action.onClick}\n                                render={data.timeoutMessage}\n                                should_store_in_session={true}\n                                session_id={data.key}\n                                ref={linear_progress_container_ref}\n                            />\n                        )}\n                        <p className='notification__text-body'>{data.message}</p>\n                        <div className='notification__action'>\n                            {!isEmptyObject(data.action) && (\n                                <React.Fragment>\n                                    {data.action.route ? (\n                                        <BinaryLink\n                                            className={classNames(\n                                                'dc-btn',\n                                                'dc-btn--secondary',\n                                                'notification__cta-button'\n                                            )}\n                                            to={data.action.route}\n                                        >\n                                            <Text size='xxs' weight='bold'>\n                                                {data.action.text}\n                                            </Text>\n                                        </BinaryLink>\n                                    ) : (\n                                        <Button\n                                            className='notification__cta-button'\n                                            onClick={() => {\n                                                if (data.timeout)\n                                                    linear_progress_container_ref.current.removeTimeoutSession();\n                                                data.action.onClick({ is_appstore });\n                                            }}\n                                            text={data.action.text}\n                                            secondary\n                                            renderText={text => (\n                                                <Text size='xxs' weight='bold' align='center'>\n                                                    {text}\n                                                </Text>\n                                            )}\n                                        />\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </div>\n                    </div>\n                    {!data.should_hide_close_btn && (\n                        <CloseButton className='notification__close-button' onClick={onClick} />\n                    )}\n                </div>\n            );\n    }\n};\n\nNotification.propTypes = {\n    data: PropTypes.shape({\n        action: PropTypes.shape({\n            onClick: PropTypes.func,\n            route: PropTypes.string,\n            text: PropTypes.string,\n        }),\n        cta_btn: PropTypes.object,\n        className: PropTypes.string,\n        closeOnClick: PropTypes.func,\n        delay: PropTypes.number,\n        header: PropTypes.string,\n        header_popup: PropTypes.string,\n        img_alt: PropTypes.string,\n        img_src: PropTypes.string,\n        is_auto_close: PropTypes.bool,\n        key: PropTypes.string,\n        icon: PropTypes.string,\n        message: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n        message_popup: PropTypes.string,\n        primary_btn: PropTypes.object,\n        secondary_btn: PropTypes.object,\n        should_hide_close_btn: PropTypes.bool,\n        size: PropTypes.oneOf(['small']),\n        timeout: PropTypes.number,\n        timeoutMessage: PropTypes.func,\n        type: PropTypes.oneOf([\n            'warning',\n            'info',\n            'success',\n            'danger',\n            'contract_sold',\n            'news',\n            'trustpilot',\n            'announce',\n            'promotions',\n            'p2p_completed_order',\n        ]).isRequired,\n    }),\n    removeNotificationMessage: PropTypes.func,\n};\n\nexport default Notification;\n","import Notification from './notification.jsx';\n\nexport default Notification;\nexport * from './constants';\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { isMobile, routes } from '@deriv/shared';\nimport 'Sass/app/_common/components/app-notification-message.scss';\nimport { connect } from 'Stores/connect';\nimport Notification, {\n    max_display_notifications,\n    max_display_notifications_mobile,\n} from '../Components/Elements/NotificationMessage';\nimport { useLocation } from 'react-router-dom';\nimport {\n    excluded_notifications,\n    priority_toast_messages,\n    maintenance_notifications,\n} from '../../Stores/Helpers/client-notifications';\n\nconst Portal = ({ children }) =>\n    isMobile() ? ReactDOM.createPortal(children, document.getElementById('deriv_app')) : children;\n\nconst NotificationsContent = ({ is_notification_loaded, style, notifications, removeNotificationMessage }) => {\n    const { pathname } = useLocation();\n\n    return (\n        <div\n            className={classNames('notification-messages', {\n                'notification-messages--traders-hub': pathname === routes.traders_hub,\n            })}\n            style={style}\n        >\n            <TransitionGroup component='div'>\n                {notifications.map(notification => (\n                    <CSSTransition\n                        appear={!!is_notification_loaded}\n                        key={notification.key}\n                        in={!!notification.header}\n                        timeout={150}\n                        classNames={{\n                            appear: 'notification--enter',\n                            enter: 'notification--enter',\n                            enterDone: 'notification--enter-done',\n                            exit: 'notification--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <Notification data={notification} removeNotificationMessage={removeNotificationMessage} />\n                    </CSSTransition>\n                ))}\n            </TransitionGroup>\n        </div>\n    );\n};\n\nconst AppNotificationMessages = ({\n    is_notification_loaded,\n    is_mt5,\n    marked_notifications,\n    notification_messages,\n    removeNotificationMessage,\n    stopNotificationLoading,\n    markNotificationMessage,\n    should_show_popups,\n}) => {\n    const [style, setStyle] = React.useState({});\n    const [notifications_ref, setNotificationsRef] = React.useState(null);\n\n    React.useEffect(() => {\n        if (is_mt5) {\n            stopNotificationLoading();\n        }\n        if (notifications_ref && isMobile()) {\n            if (notifications_ref.parentElement !== null) {\n                const bounds = notifications_ref.parentElement.getBoundingClientRect();\n                setStyle({ top: bounds.top + 8 });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_mt5, notifications_ref]);\n\n    const notifications = notification_messages.filter(message => {\n        const is_not_marked_notification = !marked_notifications.includes(message.key);\n        const is_non_hidden_notification = isMobile()\n            ? [\n                  ...maintenance_notifications,\n                  'authenticate',\n                  'deriv_go',\n                  'document_needs_action',\n                  'dp2p',\n                  'contract_sold',\n                  'has_changed_two_fa',\n                  'identity',\n                  'install_pwa',\n                  'need_fa',\n                  'notify_financial_assessment',\n                  'poi_name_mismatch',\n                  'poa_address_mismatch_failure',\n                  'poa_address_mismatch_success',\n                  'poa_address_mismatch_warning',\n                  'poa_expired',\n                  'poa_failed',\n                  'poa_rejected_for_mt5',\n                  'poa_verified',\n                  'poi_expired',\n                  'poi_failed',\n                  'poi_verified',\n                  'p2p_daily_limit_increase',\n                  'resticted_mt5_with_failed_poa',\n                  'resticted_mt5_with_pending_poa',\n                  'svg_needs_poa',\n                  'svg_needs_poi',\n                  'svg_needs_poi_poa',\n                  'svg_poi_expired',\n                  'wallets_migrated',\n                  'wallets_failed',\n                  'tnc',\n                  'trustpilot',\n                  'unwelcome',\n                  'additional_kyc_info',\n                  'mt5_notification',\n              ].includes(message.key) || message.type === 'p2p_completed_order'\n            : true;\n\n        const is_only_for_p2p_notification =\n            window.location.pathname !== routes.cashier_p2p || message?.platform === 'P2P';\n\n        const is_maintenance_notifications = maintenance_notifications.includes(message.key);\n\n        return (\n            is_not_marked_notification &&\n            is_non_hidden_notification &&\n            (is_only_for_p2p_notification || is_maintenance_notifications)\n        );\n    });\n\n    const notifications_limit = isMobile() ? max_display_notifications_mobile : max_display_notifications;\n    //TODO (yauheni-kryzhyk): showing pop-up only for specific messages. the rest of notifications are hidden. this logic should be changed in the upcoming new pop-up notifications implementation\n\n    const filtered_excluded_notifications = notifications.filter(message =>\n        priority_toast_messages.includes(message.key) || message.type.includes('p2p')\n            ? message\n            : excluded_notifications.includes(message.key)\n    );\n\n    const notifications_sublist =\n        window.location.pathname === routes.cashier_deposit\n            ? filtered_excluded_notifications.filter(message =>\n                  ['switched_to_real', ...maintenance_notifications].includes(message.key)\n              )\n            : filtered_excluded_notifications.slice(0, notifications_limit);\n\n    if (!should_show_popups) return null;\n\n    return notifications_sublist.length ? (\n        <div ref={ref => setNotificationsRef(ref)} className='notification-messages-bounds'>\n            <Portal>\n                <NotificationsContent\n                    notifications={notifications_sublist}\n                    is_notification_loaded={is_notification_loaded}\n                    style={style}\n                    removeNotificationMessage={removeNotificationMessage}\n                    markNotificationMessage={markNotificationMessage}\n                />\n            </Portal>\n        </div>\n    ) : null;\n};\n\nAppNotificationMessages.propTypes = {\n    is_mt5: PropTypes.bool,\n    is_notification_loaded: PropTypes.bool,\n    marked_notifications: PropTypes.array,\n    markNotificationMessage: PropTypes.func,\n    notification_messages: PropTypes.arrayOf(\n        PropTypes.shape({\n            closeOnClick: PropTypes.func,\n            delay: PropTypes.number,\n            header: PropTypes.string,\n            is_auto_close: PropTypes.bool,\n            message: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            size: PropTypes.oneOf(['small']),\n            type: PropTypes.oneOf(['warning', 'info', 'success', 'danger', 'contract_sold', 'news', 'announce']),\n        })\n    ),\n    removeNotificationMessage: PropTypes.func,\n    should_show_popups: PropTypes.bool,\n    stopNotificationLoading: PropTypes.func,\n};\n\nexport default connect(({ notifications }) => ({\n    marked_notifications: notifications.marked_notifications,\n    notification_messages: notifications.notification_messages,\n    removeNotificationMessage: notifications.removeNotificationMessage,\n    markNotificationMessage: notifications.markNotificationMessage,\n    should_show_popups: notifications.should_show_popups,\n}))(AppNotificationMessages);\n","import { localize } from '@deriv/translations';\n\nexport const CFD_TEXT = {\n    dxtrade: () => localize('Deriv X'),\n    mt5: () => localize('MT5'),\n    mt5_cfds: () => localize('MT5 CFDs'),\n    ctrader: () => localize('cTrader'),\n    cfd: () => localize('CFDs'),\n    synthetic: () => localize('Derived'),\n    synthetic_demo: () => localize('Derived Demo'),\n    synthetic_bvi: () => localize('Derived BVI'),\n    synthetic_svg: () => localize('Derived SVG'),\n    synthetic_v: () => localize('Derived Vanuatu'),\n    financial: () => localize('Financial'),\n    financial_demo: () => localize('Financial Demo'),\n    financial_bvi: () => localize('Financial BVI'),\n    financial_fx: () => localize('Financial Labuan'),\n    financial_v: () => localize('Financial Vanuatu'),\n    financial_svg: () => localize('Financial SVG'),\n    derivez: () => localize('Deriv EZ'),\n    all: () => localize('Swap-Free'),\n    all_demo: () => localize('Swap-Free Demo'),\n    all_svg: () => localize('Swap-Free SVG'),\n};\n","import { localize } from '@deriv/translations';\nimport { address_permitted_special_characters_message } from '@deriv/shared';\n\nexport const FORM_ERROR_MESSAGES = {\n    empty_address: () => localize('This field is required'),\n    address: () =>\n        localize('Use only the following special characters: {{permitted_characters}}', {\n            permitted_characters: address_permitted_special_characters_message,\n            interpolation: { escapeValue: false },\n        }),\n    barrier: () =>\n        localize('Only numbers and these special characters are allowed: {{permitted_characters}}', {\n            permitted_characters: '+ - .',\n        }),\n    email: () => localize('Invalid email address.'),\n    general: () => localize('Only letters, numbers, space, hyphen, period, and apostrophe are allowed.'),\n    name: () => localize('Letters, spaces, periods, hyphens, apostrophes only.'),\n    password: () => localize('Password should have lower and uppercase English letters with numbers.'),\n    po_box: () => localize('P.O. Box is not accepted in address'),\n    phone: () => localize('Please enter a valid phone number (e.g. +15417541234).'),\n    postcode: () => localize('Letters, numbers, spaces, hyphens only'),\n    signup_token: () => localize('The length of token should be 8.'),\n    tax_id: () => localize('Should start with letter or number, and may contain hyphen and underscore.'),\n    number: () => localize('Should be a valid number.'),\n    decimalPlaces: decimals =>\n        localize('Up to {{decimal_count}} decimal places are allowed.', { decimal_count: decimals }),\n    value: value => localize('Should be {{value}}', { value }),\n    betweenMinMax: (min_value, max_value) =>\n        localize('Should be between {{min_value}} and {{max_value}}', {\n            min_value,\n            max_value,\n        }),\n    minNumber: min_value => localize('Should be more than {{min_value}}', { min_value }),\n    maxNumber: max_value => localize('Should be less than {{max_value}}', { max_value }),\n    // all existing warning phrases from zxcvbn\n    password_warnings: {\n        use_a_few_words: () => localize('Use a few words, avoid common phrases'),\n        no_need_for_mixed_chars: () => localize('No need for symbols, digits, or uppercase letters'),\n        uncommon_words_are_better: () => localize('Add another word or two. Uncommon words are better.'),\n        straight_rows_of_keys_are_easy: () => localize('Straight rows of keys are easy to guess'),\n        short_keyboard_patterns_are_easy: () => localize('Short keyboard patterns are easy to guess'),\n        use_longer_keyboard_patterns: () => localize('Use a longer keyboard pattern with more turns'),\n        repeated_chars_are_easy: () => localize('Repeats like \"aaa\" are easy to guess'),\n        repeated_patterns_are_easy: () =>\n            localize('Repeats like \"abcabcabc\" are only slightly harder to guess than \"abc\"'),\n        avoid_repeated_chars: () => localize('Avoid repeated words and characters'),\n        sequences_are_easy: () => localize('Sequences like abc or 6543 are easy to guess'),\n        avoid_sequences: () => localize('Avoid sequences'),\n        recent_years_are_easy: () => localize('Recent years are easy to guess'),\n        avoid_recent_years: () => localize('Avoid recent years'),\n        avoid_associated_years: () => localize('Avoid years that are associated with you'),\n        dates_are_easy: () => localize('Dates are often easy to guess'),\n        avoid_associated_dates_and_years: () => localize('Avoid dates and years that are associated with you'),\n        top10_common_password: () => localize('This is a top-10 common password'),\n        top100_common_password: () => localize('This is a top-100 common password'),\n        very_common_password: () => localize('This is a very common password'),\n        similar_to_common_password: () => localize('This is similar to a commonly used password'),\n        a_word_is_easy: () => localize('A word by itself is easy to guess'),\n        names_are_easy: () => localize('Names and surnames by themselves are easy to guess'),\n        common_names_are_easy: () => localize('Common names and surnames are easy to guess'),\n        capitalization_doesnt_help: () => localize(\"Capitalization doesn't help very much\"),\n        all_uppercase_doesnt_help: () => localize('All-uppercase is almost as easy to guess as all-lowercase'),\n        reverse_doesnt_help: () => localize(\"Reversed words aren't much harder to guess\"),\n        substitution_doesnt_help: () =>\n            localize(\"Predictable substitutions like '@' instead of 'a' don't help very much\"),\n        user_dictionary: () => localize('This password is on the blacklist'),\n    },\n};\n","import React from 'react';\nimport { getUrlBinaryBot } from '@deriv/shared';\n\nconst BinaryBotIFrame = () => {\n    const base_link = getUrlBinaryBot(false);\n\n    return (\n        <iframe\n            id='localstorage-sync__bot'\n            src={`${base_link}/localstorage-sync.html`}\n            style={{ display: 'none', visibility: 'hidden' }}\n            sandbox='allow-same-origin allow-scripts'\n        />\n    );\n};\n\nexport default BinaryBotIFrame;\n","import BinaryBotIFrame from './BinaryBotIFrame.jsx';\n\nexport default BinaryBotIFrame;\n","import React from 'react';\nimport { deriv_urls, getPlatformFromUrl } from '@deriv/shared';\n\nconst SmartTraderIFrame = () => {\n    const { is_staging_deriv_app } = getPlatformFromUrl();\n\n    let base_link = '';\n\n    if (is_staging_deriv_app) {\n        base_link = deriv_urls.SMARTTRADER_STAGING;\n    } else {\n        base_link = deriv_urls.SMARTTRADER_PRODUCTION;\n    }\n\n    return (\n        <iframe\n            id='localstorage-sync'\n            src={`${base_link}/localstorage-sync.html`}\n            style={{ display: 'none', visibility: 'hidden' }}\n            sandbox='allow-same-origin allow-scripts'\n        />\n    );\n};\n\nexport default SmartTraderIFrame;\n","import SmartTraderIFrame from './SmartTraderIFrame.jsx';\n\nexport default SmartTraderIFrame;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'Stores/connect';\nimport ErrorComponent from './index';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false };\n    }\n\n    componentDidCatch = (error, info) => {\n        if (window.TrackJS) window.TrackJS.console.log(this.props.root_store);\n\n        this.setState({\n            hasError: true,\n            error,\n            info,\n        });\n    };\n\n    render = () => (this.state.hasError ? <ErrorComponent should_show_refresh={true} /> : this.props.children);\n}\n\nErrorBoundary.propTypes = {\n    root_store: PropTypes.object,\n    children: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n};\n\nexport default connect(store => ({\n    root_store: store,\n}))(ErrorBoundary);\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, StaticUrl } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst CookieBanner = ({ onAccept, onDecline, is_open, is_dark_mode }) => (\n    <div\n        className={classNames('cookie-banner', {\n            'cookie-banner--is-closed': !is_open,\n            'cookie-banner--theme-dark': is_dark_mode,\n        })}\n    >\n        <div className='description'>\n            <Localize i18n_default_text='Cookies help us to give you a better experience and personalised content on our site.' />\n            <br />\n            <Localize\n                i18n_default_text='If you agree to our use of cookies, click on Accept. For more information, <0>see our policy</0>.'\n                components={[<StaticUrl key={0} className='link link--red' href='/terms-and-conditions' is_eu_url />]}\n            />\n        </div>\n        <Button className='cookie-banner__btn-dont-accept' secondary onClick={onDecline}>\n            {localize('Don’t accept')}\n        </Button>\n        <Button\n            id='dt_core_cookie-banner_accept-btn'\n            className='cookie-banner__btn-accept'\n            secondary\n            onClick={onAccept}\n        >\n            {localize('Accept')}\n        </Button>\n    </div>\n);\n\nCookieBanner.prototype = {\n    is_dark_mode: PropTypes.bool,\n    is_open: PropTypes.bool,\n    onAccept: PropTypes.func,\n    onDecline: PropTypes.func,\n};\n\nexport default CookieBanner;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useLocation, withRouter } from 'react-router';\nimport { DesktopWrapper, MobileWrapper, ThemedScrollbars } from '@deriv/components';\nimport { CookieStorage, isMobile, TRACKING_STATUS_KEY, PlatformContext, platforms, routes, WS } from '@deriv/shared';\nimport { Analytics } from '@deriv/analytics';\nimport CookieBanner from '../../Components/Elements/CookieBanner/cookie-banner.jsx';\nimport { useStore, observer } from '@deriv/stores';\nimport { getLanguage } from '@deriv/translations';\n\nconst tracking_status_cookie = new CookieStorage(TRACKING_STATUS_KEY);\n\nconst AppContents = observer(({ children }) => {\n    const [show_cookie_banner, setShowCookieBanner] = React.useState(false);\n    const [is_gtm_tracking, setIsGtmTracking] = React.useState(false);\n    const { is_appstore } = React.useContext(PlatformContext);\n    const {\n        client,\n        common: { platform },\n        gtm: { pushDataLayer },\n        ui,\n    } = useStore();\n\n    const { is_eu_country, is_logged_in, is_logging_in, loginid, user_id } = client;\n    const {\n        is_app_disabled,\n        is_cashier_visible,\n        is_cfd_page,\n        is_positions_drawer_on,\n        is_route_modal_on,\n        notifyAppInstall,\n        setAppContentsScrollRef,\n        is_dark_mode_on: is_dark_mode,\n    } = ui;\n\n    const tracking_status = tracking_status_cookie.get(TRACKING_STATUS_KEY);\n\n    const scroll_ref = React.useRef(null);\n    const child_ref = React.useRef(null);\n\n    const location = useLocation();\n\n    const current_page = window.location.hostname + window.location.pathname;\n\n    React.useEffect(() => {\n        if (is_logged_in && user_id) {\n            const { tracking } = Analytics?.getInstances();\n            Analytics?.setAttributes({\n                account_type: loginid.substring(0, 2),\n            });\n            tracking?.identifyEvent(user_id, {\n                language: getLanguage().toLowerCase() || 'en',\n            });\n            Analytics?.pageView(current_page);\n        }\n        if (scroll_ref.current) setAppContentsScrollRef(scroll_ref);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    Analytics?.pageView(current_page);\n\n    React.useEffect(() => {\n        const allow_tracking = !is_eu_country || tracking_status === 'accepted';\n        if (allow_tracking && !is_gtm_tracking) {\n            pushDataLayer({ event: 'allow_tracking' });\n            setIsGtmTracking(true);\n        }\n    }, [is_gtm_tracking, is_eu_country, pushDataLayer, tracking_status]);\n\n    React.useEffect(() => {\n        if (!tracking_status && !is_logged_in && !is_logging_in) {\n            WS.wait('website_status').then(() => {\n                setShowCookieBanner(is_eu_country);\n            });\n        }\n    }, [tracking_status, is_logged_in, is_eu_country, is_logging_in]);\n\n    React.useEffect(() => {\n        // Gets the reference of the child element and scrolls it to the top\n        if (child_ref.current) {\n            child_ref.current.scrollTop = 0;\n        }\n    }, [location?.pathname]);\n\n    React.useEffect(() => {\n        const handleInstallPrompt = e => {\n            // Prevent the mini-infobar from appearing on mobile\n            e.preventDefault();\n            // Stash the event so it can be triggered later.\n            // Update UI notify the user they can install the PWA\n            notifyAppInstall(e);\n        };\n        window.addEventListener('beforeinstallprompt', handleInstallPrompt);\n\n        return () => window.removeEventListener('beforeinstallprompt', handleInstallPrompt);\n    }, [notifyAppInstall]);\n\n    // handle accept/decline cookies\n    const onAccept = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'accepted', { sameSite: 'none', secure: true });\n        pushDataLayer({ event: 'allow_tracking' });\n        setShowCookieBanner(false);\n        setIsGtmTracking(true);\n    };\n\n    const onDecline = () => {\n        tracking_status_cookie.set(TRACKING_STATUS_KEY, 'declined', { sameSite: 'none', secure: true });\n        setShowCookieBanner(false);\n    };\n\n    return (\n        <div\n            id='app_contents'\n            className={classNames('app-contents', {\n                'app-contents--show-positions-drawer': is_positions_drawer_on,\n                'app-contents--is-disabled': is_app_disabled,\n                'app-contents--is-mobile': isMobile(),\n                'app-contents--is-route-modal': is_route_modal_on,\n                'app-contents--is-scrollable': is_cfd_page || is_cashier_visible,\n                'app-contents--is-dashboard': is_appstore,\n                'app-contents--is-hidden': platforms[platform],\n                'app-contents--is-onboarding': window.location.pathname === routes.onboarding,\n            })}\n            ref={scroll_ref}\n        >\n            <MobileWrapper>{children}</MobileWrapper>\n            <DesktopWrapper>\n                {/* Calculate height of user screen and offset height of header and footer */}\n                {window.location.pathname === routes.onboarding ? (\n                    <ThemedScrollbars style={{ maxHeight: '', height: '100%' }} refSetter={child_ref}>\n                        {children}\n                    </ThemedScrollbars>\n                ) : (\n                    <ThemedScrollbars height='calc(100vh - 84px)' has_horizontal refSetter={child_ref}>\n                        {children}\n                    </ThemedScrollbars>\n                )}\n            </DesktopWrapper>\n            {show_cookie_banner && (\n                <CookieBanner\n                    onAccept={onAccept}\n                    onDecline={onDecline}\n                    is_open={show_cookie_banner}\n                    is_dark_mode={is_dark_mode}\n                />\n            )}\n        </div>\n    );\n});\n\nAppContents.propTypes = {\n    children: PropTypes.any,\n};\n\nexport default withRouter(AppContents);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst NetworkStatus = ({ is_mobile, status }) => {\n    const network_status_element = (\n        <div\n            data-testid='dt_network_status_element'\n            className={classNames('network-status__circle', {\n                'network-status__circle--offline': status.class === 'offline',\n                'network-status__circle--online': status.class === 'online',\n                'network-status__circle--blinker': status.class === 'blinker',\n            })}\n        />\n    );\n    return (\n        <div\n            data-testid='dt_network_status'\n            className={classNames('network-status__wrapper', {\n                'network-status__wrapper--is-mobile': is_mobile,\n            })}\n        >\n            {is_mobile ? (\n                network_status_element\n            ) : (\n                <Popover\n                    classNameBubble='network-status__tooltip'\n                    alignment='top'\n                    message={localize('Network status: {{status}}', {\n                        status: status.tooltip || localize('Connecting to server'),\n                    })}\n                >\n                    {network_status_element}\n                </Popover>\n            )}\n        </div>\n    );\n};\n\nNetworkStatus.propTypes = {\n    is_mobile: PropTypes.bool,\n    status: PropTypes.object,\n};\n\nexport { NetworkStatus };\n\nexport default connect(({ common }) => ({\n    status: common.network_status,\n}))(NetworkStatus);\n","import React from 'react';\nimport { Icon, Popover, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { deriv_urls } from '@deriv/shared';\n\nexport const GoToDeriv = () => {\n    const message = localize('Go to {{hostname}}', { hostname: deriv_urls.DERIV_HOST_NAME });\n\n    return (\n        <StaticUrl href='/' className='footer__link'>\n            <Popover alignment='top' message={message} zIndex={9999}>\n                <Icon icon='IcDerivOutline' className='footer__icon ic-deriv__icon' />\n            </Popover>\n        </StaticUrl>\n    );\n};\n","import React from 'react';\nimport { routes } from '@deriv/shared';\nimport { BinaryLink } from '../../Routes';\n\nconst EndpointNote = () => {\n    const server_url = localStorage.getItem('config.server_url');\n    return server_url ? (\n        <span style={{ fontSize: 'var(--text-size-xs)', color: 'var(--brand-red-coral)' }}>\n            The server{' '}\n            <BinaryLink className='account-settings-toggle' to={routes.endpoint}>\n                endpoint\n            </BinaryLink>{' '}\n            is: {server_url}\n        </span>\n    ) : null;\n};\n\nexport { EndpointNote };\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ToggleFullScreen = () => {\n    const [is_full_screen, setIsFullScreen] = React.useState(false);\n\n    const fullscreen_map = {\n        event: ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'],\n        element: ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n        fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n        fnc_exit: ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'],\n    };\n\n    React.useEffect(() => {\n        fullscreen_map.event.forEach(event => {\n            document.addEventListener(event, onFullScreen, false);\n        });\n    }, [fullscreen_map.event, onFullScreen]);\n\n    const onFullScreen = React.useCallback(() => {\n        setIsFullScreen(fullscreen_map.element.some(el => document[el]));\n    }, [fullscreen_map.element]);\n\n    const toggleFullScreen = e => {\n        e.stopPropagation();\n\n        const to_exit = is_full_screen;\n        const el = to_exit ? document : document.documentElement;\n        const fncToCall = fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            setIsFullScreen(false); // fullscreen API is not enabled\n        }\n    };\n\n    const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n        'ic-fullscreen--active': is_full_screen,\n    });\n    return (\n        <a\n            data-testid='dt_fullscreen_toggle'\n            className={`${full_screen_icon_class} footer__link`}\n            onClick={toggleFullScreen}\n            id='dt_fullscreen_toggle'\n        >\n            <Popover\n                alignment='top'\n                message={is_full_screen ? localize('Exit') : localize('Full screen')}\n                zIndex={9999}\n            >\n                {is_full_screen ? (\n                    <Icon icon='IcFullScreenRestore' className='footer__icon' />\n                ) : (\n                    <Icon data_testid='dt_icon' icon='IcFullScreen' className='footer__icon' />\n                )}\n            </Popover>\n        </a>\n    );\n};\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Modal, Popover, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\n\nconst ModalContent = ({ settings_extension }) => {\n    const content = [];\n\n    content.push(...(settings_extension || []));\n\n    return <VerticalTab list={content} />;\n};\n\nconst ToggleSettings = ({ enableApp, is_settings_visible, disableApp, toggleSettings, settings_extension }) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_settings_toggle'\n                data-testid='dt_toggle_settings'\n                onClick={toggleSettings}\n                className={`${toggle_settings_class} footer__link`}\n            >\n                <Popover alignment='top' message={localize('Platform settings')} zIndex={9999}>\n                    <Icon icon='IcGear' data_testid='dt_icon' className='footer__icon ic-settings__icon' />\n                </Popover>\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                className='modal-settings'\n                enableApp={enableApp}\n                is_open={is_settings_visible}\n                disableApp={disableApp}\n                title={localize('Platform settings')}\n                toggleModal={toggleSettings}\n                height='616px'\n                width='736px'\n            >\n                <ModalContent settings_extension={settings_extension} />\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    settings_extension: PropTypes.array,\n    toggleSettings: PropTypes.func,\n};\n\nexport { ToggleSettings };\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages } from '@deriv/translations';\nimport { LanguageLink } from 'App/Components/Routes';\n\nconst isCurrentLanguage = (lang, current_language) => lang === current_language;\n\nconst LanguageSettings = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { toggleLanguageSettingsModal } = ui;\n\n    return (\n        <div className='settings-language'>\n            <div className='settings-language__language-container'>\n                {Object.keys(getAllowedLanguages()).map(lang =>\n                    isCurrentLanguage(lang, current_language) ? (\n                        <LanguageLink key={lang} lang={lang} />\n                    ) : (\n                        <LanguageLink key={lang} is_clickable lang={lang} toggleModal={toggleLanguageSettingsModal} />\n                    )\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default LanguageSettings;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Modal, Popover, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\nimport LanguageSettings from '../../../Containers/SettingsModal/settings-language';\n\nconst ToggleLanguageSettings = observer(() => {\n    const { common, ui } = useStore();\n    const { is_language_settings_modal_on, toggleLanguageSettingsModal } = ui;\n    const { current_language, is_language_changing } = common;\n\n    const toggle_settings_class = classNames('ic-language', 'footer__link', {\n        'ic-settings--active': is_language_settings_modal_on,\n        'ic-settings--disabled': is_language_changing,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_language_settings_toggle'\n                data-testid='dt_toggle_language_settings'\n                onClick={toggleLanguageSettingsModal}\n                className={toggle_settings_class}\n            >\n                <Popover alignment='top' message={localize('Language')} zIndex='9999'>\n                    <Icon\n                        icon={`IcFlag${current_language.replace('_', '-')}`}\n                        data_testid='dt_icon'\n                        className='ic-settings-language__icon'\n                        size={18}\n                    />\n                    <Text weight='bold' size='xxs'>\n                        <Localize i18n_default_text={current_language} />\n                    </Text>\n                </Popover>\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                is_open={is_language_settings_modal_on}\n                title={localize('Select Language')}\n                toggleModal={toggleLanguageSettingsModal}\n                width='616px'\n                should_header_stick_body={false}\n            >\n                <LanguageSettings />\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport { ToggleLanguageSettings };\n","import React from 'react';\nimport { Popover, Icon, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nexport const HelpCentre = () => (\n    <StaticUrl href='/help-centre/' id='dt_help_centre' aria-label={localize('Help centre')} className='footer__link'>\n        <Popover classNameBubble='help-centre__tooltip' alignment='top' message={localize('Help centre')} zIndex={9999}>\n            <Icon icon='IcHelpCentre' className='footer__icon' />\n        </Popover>\n    </StaticUrl>\n);\n","import React from 'react';\nimport { Icon, Popover, StaticUrl } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nexport const ResponsibleTrading = () => (\n    <StaticUrl href='/responsible' className='footer__link'>\n        <Popover alignment='top' message={localize('Responsible trading')} zIndex={9999}>\n            <Icon icon='IcVerification' className='footer__icon ic-deriv__icon' />\n        </Popover>\n    </StaticUrl>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const AccountLimits = () => (\n    <Link to={routes.account_limits} className='footer__link'>\n        <Popover alignment='top' message={localize('Account limits')} zIndex={9999}>\n            <Icon icon='IcAccountLimits' className='footer__icon ic-deriv__icon' />\n        </Popover>\n    </Link>\n);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" {...props}><g fill=\"none\"><path fill=\"#D1010E\" d=\"M25.04 47.46V63.2l-8.3-22.74c-.94-2.6 1.32-.92 1.32-.92l4.73 3.51a5.94 5.94 0 012.25 4.42m-8.3 38.48l8.3-22.75-23.54 8c-2.68.91-.95-1.26-.95-1.26L4.2 65.4a6.34 6.34 0 014.57-2.18 6.34 6.34 0 01-4.57-2.17L.56 56.44s-1.73-2.18.95-1.26l23.54 8v15.74a5.93 5.93 0 01-2.25 4.42l-4.74 3.5s-2.25 1.68-1.3-.9\" /><path fill=\"#818084\" d=\"M118.9 64.69v4.85a7.5 7.5 0 01-3.81.94c-2 0-3.26-.88-3.26-2.7A2.4 2.4 0 01113 65.5a6.55 6.55 0 013.1-.72l2.8-.1zm1.96 11.65h6.84a19.57 19.57 0 01-.44-5.13V59.5c0-6.36-3.3-9.94-11.37-9.94-3.74-.02-7.43.85-10.77 2.53l2.6 5.25a15.02 15.02 0 016.62-1.6c2.81 0 4.58 1 4.58 3.43v.27l-4.14.17a16.3 16.3 0 00-6.9 1.6 7.46 7.46 0 00-4.37 7.12c0 5.02 3.75 8.56 8.89 8.56 2.7.04 5.3-.95 7.29-2.76l1.17 2.2zm-32.8-12.7c-2.5 0-3.7-1.98-3.7-4 0-2.76 1.6-4 3.6-4 2.53 0 3.8 2.1 3.8 4.09 0 2.59-1.6 3.92-3.7 3.92m.56 20.15c-4.15 0-6.52-1.49-6.52-3.64a3.26 3.26 0 011.1-2.4c2.66 1.38 11 .6 11 3.7 0 1.6-2.65 2.4-5.6 2.4m-1.22 5.6c9.94 0 14.64-4.25 14.64-8.95 0-9.8-17.16-5.51-17.16-9.97-.01-.4.07-.79.22-1.16.98.24 1.98.35 2.98.33 6.68 0 11.38-3.8 11.38-9.83a9.6 9.6 0 00-1.88-5.8 5.49 5.49 0 011.54-.22c.75.01 1.49.1 2.21.28l1.55-5.75a18.88 18.88 0 00-1.88-.11c-3.76 0-5.47.94-6.96 2.32-.23.22-.39.33-.67.17a11.1 11.1 0 00-5.46-1.22c-8.07 0-11.32 5.25-11.32 9.83 0 3.43 1.54 6.63 4.58 8.23-2.1 1.16-3.48 2.98-3.48 4.8a3.6 3.6 0 001.71 3.2 6.5 6.5 0 00-4.64 6.01c0 4.36 4.42 7.79 12.65 7.79M30.6 76.32h8.35V58.45a8.88 8.88 0 015.02-1.71c3.09 0 3.42 2.2 3.42 4.75v14.85h8.34v-17.9a8.71 8.71 0 014.97-1.7c3.1 0 3.48 2.1 3.48 4.64v14.96h8.33V59.22c0-7.28-4.44-9.66-9.24-9.66-2.7 0-6.02 1.16-9.17 3.7-1.39-2.32-3.81-3.7-7.12-3.7-3.15 0-6.13 1.49-8.56 3.31l-.81-2.67h-7v26.12z\" /></g></svg>);","import React from 'react';\nimport { Icon, Modal, Popover, StaticUrl } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { deriv_urls, getLegalEntityName } from '@deriv/shared';\nimport MGALogo from 'Assets/SvgComponents/footer/mga.svg';\n\nconst MLTRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <div className='footer-regulatory-information__icon'>\n            <MGALogo />\n        </div>\n        <p>\n            <Localize\n                i18n_default_text='Synthetic indices in the EU are offered by {{legal_entity_name}}, W Business Centre, Level 3, Triq Dun Karm, Birkirkara BKR 9033, Malta, licensed and regulated by the Malta Gaming Authority (<0>licence no. MGA/B2C/102/2000</0>) and by the Revenue Commissioners for clients in Ireland (<2>licence no. 1010285</2>).'\n                components={[\n                    <StaticUrl\n                        href='/regulatory/Deriv_(Europe)_Limited.pdf'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                        is_document\n                    />,\n                    <a\n                        href='https://www.gamblingcommission.gov.uk/public-register/business/detail/39495'\n                        key={1}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/DEL_Remote_Bookmarker_License.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={2}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('malta'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nconst MXRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <p>\n            <Localize\n                i18n_default_text='Virtual events based bets in the UK and the Isle of Man are offered by {{legal_entity_name}}, Millennium House, Level 1, Victoria Road, Douglas IM2 4RW, Isle of Man, licensed and regulated in Great Britain by the Gambling Commission under <0>account no. 39172</0> and by the Gambling Supervision Commission in the Isle of Man (<1>view licence</1>).'\n                components={[\n                    <a\n                        href='https://www.gamblingcommission.gov.uk/public-register/business/detail/39172'\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/Deriv_(MX)_Ltd.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={1}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('mx'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nconst MFRegulatoryInformation = () => (\n    <div className='footer-regulatory-information'>\n        <p>\n            <Localize\n                i18n_default_text='Financial products in the EU are offered by {{legal_entity_name}}, licensed as a Category 3 Investment Services provider by the Malta Financial Services Authority (<0>Licence no. IS/70156</0>).'\n                components={[\n                    <a\n                        href={`https://${deriv_urls.DERIV_HOST_NAME}/regulatory/Deriv_Investments_(Europe)_Limited.pdf`}\n                        target='_blank'\n                        rel='nofollow noreferrer'\n                        key={0}\n                        className='footer-regulatory-information__link'\n                    />,\n                ]}\n                values={{\n                    legal_entity_name: getLegalEntityName('maltainvest'),\n                }}\n            />\n        </p>\n    </div>\n);\n\nexport const RegulatoryInformation = ({ landing_company, is_eu, show_eu_related_content }) => {\n    const [should_show_modal, showModal] = React.useState(false);\n    if (!is_eu || (is_eu && !show_eu_related_content)) return null;\n    const is_mx = landing_company === 'iom';\n    const is_mlt = landing_company === 'malta';\n    const is_mf = landing_company === 'maltainvest';\n\n    return (\n        <div className='footer__link'>\n            <Popover alignment='top' message={localize('Regulatory Information')} zIndex={9999}>\n                <a onClick={() => showModal(true)}>\n                    <Icon icon='IcRegulatoryInformation' className='footer__icon ic-deriv__icon' />\n                </a>\n            </Popover>\n            <Modal\n                is_open={should_show_modal}\n                small\n                has_close_icon\n                toggleModal={() => showModal(false)}\n                title={localize('Regulatory Information')}\n            >\n                {is_mx && <MXRegulatoryInformation />}\n                {is_mlt && <MLTRegulatoryInformation />}\n                {(is_mf || show_eu_related_content) && <MFRegulatoryInformation />}\n            </Modal>\n        </div>\n    );\n};\n","// eslint-disable-next-line import/no-named-as-default\nimport NetworkStatus from './network-status.jsx';\n\nexport default NetworkStatus;\nexport * from './go-to-deriv.jsx';\nexport * from './endpoint-note.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-settings.jsx';\nexport * from './toggle-language-settings';\nexport * from './help-centre.jsx';\nexport * from './responsible-trading.jsx';\nexport * from './account-limits';\nexport * from './regulatory-information.jsx';\n","import { livechat_license_id } from '@deriv/shared';\n\n// Initialization code provided by Livechat\nexport const liveChatInitialization = () =>\n    new Promise(resolve => {\n        window.__lc = window.__lc || {}; // eslint-disable-line no-underscore-dangle\n        window.__lc.license = livechat_license_id; // eslint-disable-line no-underscore-dangle\n        (function (n, t, c) {\n            // eslint-disable-next-line no-shadow\n            function i(n) {\n                // eslint-disable-next-line no-underscore-dangle\n                return e._h ? e._h.apply(null, n) : e._q.push(n);\n            }\n            // eslint-disable-next-line\n            var e = {\n                _q: [],\n                _h: null,\n                _v: '2.0',\n                on() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['on', c.call(arguments)]);\n                },\n                once() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['once', c.call(arguments)]);\n                },\n                off() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['off', c.call(arguments)]);\n                },\n                get() {\n                    if (!e._h) throw new Error(\"[LiveChatWidget] You can't use getters before load.\"); // eslint-disable-line no-underscore-dangle\n                    // eslint-disable-next-line prefer-rest-params\n                    return i(['get', c.call(arguments)]);\n                },\n                call() {\n                    // eslint-disable-next-line prefer-rest-params\n                    i(['call', c.call(arguments)]);\n                },\n                init() {\n                    // eslint-disable-next-line\n                    var n = t.createElement('script');\n                    // eslint-disable-next-line no-unused-expressions\n                    (n.async = !0), // eslint-disable-line no-sequences\n                        (n.type = 'text/javascript'),\n                        (n.src = 'https://cdn.livechatinc.com/tracking.js'),\n                        t.head.appendChild(n);\n                },\n            };\n            // eslint-disable-next-line no-unused-expressions\n            !n.__lc.asyncInit && e.init(); // eslint-disable-line no-underscore-dangle\n            n.LiveChatWidget = n.LiveChatWidget || e;\n        })(window, document, [].slice); //eslint-disable-line\n        resolve();\n    });\n","import { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { liveChatInitialization } from './live-chat';\nimport Cookies from 'js-cookie';\nimport { deriv_urls } from '@deriv/shared';\n\n// Todo: Should break this into smaller hooks or utility functions.\nconst useLiveChat = (has_cookie_account = false, active_loginid?: string) => {\n    const [isReady, setIsReady] = useState(false);\n    const [reload, setReload] = useState(false);\n    const history = useHistory();\n    const widget = window.LiveChatWidget;\n\n    const liveChatDeletion = () =>\n        new Promise<void>(resolve => {\n            if (window.LiveChatWidget) {\n                window.LiveChatWidget.on('ready', () => {\n                    try {\n                        if (window.LiveChatWidget?.get('customer_data').status !== 'chatting') {\n                            window.LiveChatWidget?.call('destroy');\n                            resolve();\n                        }\n                    } catch (e) {\n                        resolve();\n                    }\n                });\n            } else {\n                resolve();\n            }\n        });\n\n    const onHistoryChange = useCallback(() => {\n        liveChatDeletion().then(() => {\n            liveChatInitialization().then(() => {\n                setReload(true);\n                setIsReady(true);\n            });\n        });\n    }, []);\n\n    const liveChatSetup = (is_logged_in: boolean) => {\n        window.LiveChatWidget.init();\n        window.LiveChatWidget?.on('ready', () => {\n            let client_first_name = '';\n            let client_last_name = '';\n            const domain = /^(.)*deriv\\.(com|me|be)$/gi.test(window.location.hostname)\n                ? deriv_urls.DERIV_HOST_NAME\n                : 'binary.sx';\n            const client_information = Cookies.getJSON('client_information', {\n                domain,\n            });\n            const utm_data = Cookies.getJSON('utm_data', { domain });\n\n            const { utm_source, utm_medium, utm_campaign } = utm_data || {};\n\n            const { loginid, email, landing_company_shortcode, currency, residence, first_name, last_name } =\n                client_information || {};\n\n            client_first_name = first_name ?? ' ';\n            client_last_name = last_name ?? ' ';\n\n            /* the session variables are sent to CS team dashboard to notify user has logged in\n                and also acts as custom variables to trigger targeted engagement */\n            const session_variables = {\n                is_logged_in: !!is_logged_in,\n                loginid: loginid ?? ' ',\n                landing_company_shortcode: landing_company_shortcode ?? ' ',\n                currency: currency ?? ' ',\n                residence: residence ?? ' ',\n                email: email ?? ' ',\n                utm_source: utm_source ?? ' ',\n                utm_medium: utm_medium ?? ' ',\n                utm_campaign: utm_campaign ?? ' ',\n            };\n            window.LiveChatWidget?.call('set_session_variables', session_variables);\n\n            if (is_logged_in) {\n                // client logged in\n                // prepfill name and email\n                window.LiveChatWidget?.call('set_customer_email', session_variables.email);\n                window.LiveChatWidget?.call('set_customer_name', `${client_first_name} ${client_last_name}`);\n\n                // prefill name and email fields after chat has ended\n                if (window.LC_API?.on_chat_ended) {\n                    window.LC_API.on_chat_ended = () => {\n                        window.LiveChatWidget?.call('set_customer_email', session_variables.email);\n                        window.LiveChatWidget?.call('set_customer_name', `${client_first_name} ${client_last_name}`);\n                    };\n                }\n            } else {\n                // client not logged in\n                // clear name and email fields\n                window.LiveChatWidget?.call('set_customer_email', ' ');\n                window.LiveChatWidget?.call('set_customer_name', ' ');\n                // clear name and email fields after chat has ended\n                if (window.LC_API?.on_chat_ended) {\n                    window.LC_API.on_chat_ended = () => {\n                        window.LiveChatWidget?.call('set_customer_email', ' ');\n                        window.LiveChatWidget?.call('set_customer_name', ' ');\n                    };\n                }\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (isReady && !widget) {\n            onHistoryChange();\n        }\n    }, [widget, isReady, onHistoryChange]);\n\n    useEffect(() => {\n        history.listen(onHistoryChange);\n\n        window.LiveChatWidget?.on('ready', () => setIsReady(true));\n    }, [history, onHistoryChange]);\n\n    useEffect(() => {\n        if (reload) {\n            liveChatSetup(has_cookie_account);\n            setReload(false);\n        }\n    }, [reload, has_cookie_account]);\n\n    useEffect(() => liveChatSetup(has_cookie_account), [has_cookie_account, active_loginid]);\n\n    return {\n        isReady,\n        widget: window.LiveChatWidget,\n        LC_API: window.LC_API,\n    };\n};\n\nexport default useLiveChat;\n","import React from 'react';\nimport { connect } from 'Stores/connect';\nimport { Popover, Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat.ts';\n\nconst LiveChat = ({ is_mobile_drawer, has_cookie_account, loginid }) => {\n    const liveChat = useLiveChat(has_cookie_account, loginid);\n\n    if (!liveChat.isReady) return null;\n\n    if (is_mobile_drawer)\n        return (\n            <div className='livechat gtm-deriv-livechat' onClick={() => liveChat.widget?.call('maximize')}>\n                <div className='livechat__icon-wrapper'>\n                    <Icon icon='IcLiveChat' className='livechat__icon' />\n                </div>\n                <Text size='xs'>{localize('Live chat')}</Text>\n            </div>\n        );\n\n    return (\n        <div onClick={() => liveChat.widget?.call('maximize')}>\n            <Popover\n                className='footer__link'\n                classNameBubble='help-centre__tooltip'\n                alignment='top'\n                message={localize('Live chat')}\n                zIndex={9999}\n            >\n                <Icon icon='IcLiveChat' className='footer__icon gtm-deriv-livechat' />\n            </Popover>\n        </div>\n    );\n};\n\nexport default connect(({ client }) => ({\n    has_cookie_account: client.has_cookie_account,\n    loginid: client.loginid,\n}))(LiveChat);\n","import LiveChat from './live-chat.jsx';\n\nexport default LiveChat;\n","import React from 'react';\nimport { Popover, Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat';\nimport { whatsapp_url } from '@deriv/shared';\n\nconst WhatsApp = () => {\n    const liveChat = useLiveChat();\n\n    if (!liveChat.isReady) return null;\n\n    return (\n        <a\n            href={whatsapp_url}\n            aria-label={localize('WhatsApp')}\n            className='footer__link'\n            target='_blank'\n            rel='noreferrer'\n        >\n            <Popover classNameBubble='whatsapp__tooltip' alignment='top' message={localize('WhatsApp')} zIndex={9999}>\n                <Icon icon='IcWhatsApp' className='footer__icon' />\n            </Popover>\n        </a>\n    );\n};\n\nexport default WhatsApp;\n","import WhatsApp from './whatsapp';\n\nexport default WhatsApp;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toGMTFormat, toLocalFormat } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { Popover } from '@deriv/components';\n\nconst ServerTime = ({ is_mobile, server_time }) => {\n    const gmt_time = toGMTFormat(server_time);\n    const local_time = toLocalFormat(server_time);\n    return (\n        <Popover\n            alignment='top'\n            message={local_time}\n            className={classNames('server-time', {\n                'server-time--is-mobile': is_mobile,\n            })}\n            zIndex={9999}\n        >\n            {gmt_time}\n        </Popover>\n    );\n};\n\nServerTime.propTypes = {\n    is_mobile: PropTypes.bool,\n    server_time: PropTypes.object,\n};\n\nexport default connect(({ common }) => ({\n    server_time: common.server_time,\n}))(ServerTime);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport NetworkStatus, {\n    AccountLimits as AccountLimitsFooter,\n    EndpointNote,\n    GoToDeriv,\n    HelpCentre,\n    RegulatoryInformation,\n    ResponsibleTrading,\n    ToggleFullScreen,\n    ToggleSettings,\n    ToggleLanguageSettings,\n} from 'App/Components/Layout/Footer';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp/index.ts';\nimport { connect } from 'Stores/connect';\nimport ServerTime from '../server-time.jsx';\n\nconst FooterIconSeparator = () => <div className='footer-icon-separator' />;\n\nconst FooterExtensionRenderer = (footer_extension, idx) => {\n    const { Component: FooterExtensionComponent } = footer_extension;\n    return (\n        <React.Fragment key={`footer-link-${footer_extension.position}-${idx}`}>\n            {footer_extension.has_left_separator && <FooterIconSeparator />}\n            <FooterExtensionComponent />\n            {footer_extension.has_right_separator && <FooterIconSeparator />}\n        </React.Fragment>\n    );\n};\n\nconst Footer = ({\n    current_language,\n    enableApp,\n    footer_extensions,\n    is_app_disabled,\n    is_eu,\n    is_logged_in,\n    is_route_modal_on,\n    is_settings_modal_on,\n    is_language_settings_modal_on,\n    is_virtual,\n    disableApp,\n    toggleSettingsModal,\n    toggleLanguageSettingsModal,\n    settings_extension,\n    landing_company_shortcode,\n    show_eu_related_content,\n}) => {\n    let footer_extensions_left = [];\n    let footer_extensions_right = [];\n    if (footer_extensions.filter) {\n        footer_extensions_left = footer_extensions.filter(footer_extension => footer_extension.position === 'left');\n        footer_extensions_right = footer_extensions.filter(footer_extension => footer_extension.position === 'right');\n    }\n\n    return (\n        <footer\n            className={classNames('footer', {\n                'footer--is-disabled': is_app_disabled || is_route_modal_on,\n            })}\n        >\n            {footer_extensions_left.length > 0 && (\n                <div className='footer__links footer__links--left'>\n                    {footer_extensions_left.map(FooterExtensionRenderer)}\n                </div>\n            )}\n            <EndpointNote />\n            <NetworkStatus />\n            <ServerTime />\n            <div className='footer__links'>\n                {footer_extensions_right.map(FooterExtensionRenderer)}\n                <WhatsApp />\n                <LiveChat />\n                <FooterIconSeparator />\n                <GoToDeriv />\n                <ResponsibleTrading />\n                {is_logged_in && <AccountLimitsFooter />}\n                {is_logged_in && !is_virtual && (\n                    <RegulatoryInformation\n                        landing_company={landing_company_shortcode}\n                        is_eu={is_eu}\n                        show_eu_related_content={show_eu_related_content}\n                    />\n                )}\n                <FooterIconSeparator />\n                <HelpCentre />\n                <ToggleSettings\n                    is_settings_visible={is_settings_modal_on}\n                    toggleSettings={toggleSettingsModal}\n                    disableApp={disableApp}\n                    enableApp={enableApp}\n                    settings_extension={settings_extension}\n                />\n                <ToggleLanguageSettings\n                    is_settings_visible={is_language_settings_modal_on}\n                    toggleSettings={toggleLanguageSettingsModal}\n                    lang={current_language}\n                />\n                <ToggleFullScreen />\n            </div>\n        </footer>\n    );\n};\n\nFooter.propTypes = {\n    current_language: PropTypes.string,\n    is_app_disabled: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_settings_modal_on: PropTypes.bool,\n    is_language_settings_modal_on: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    location: PropTypes.object,\n    toggleSettingsModal: PropTypes.func,\n    toggleLanguageSettingsModal: PropTypes.func,\n    settings_extension: PropTypes.array,\n    is_virtual: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    footer_extensions: PropTypes.array,\n    show_eu_related_content: PropTypes.bool,\n};\n\nexport default withRouter(\n    connect(({ client, common, ui, traders_hub }) => ({\n        current_language: common.current_language,\n        enableApp: ui.enableApp,\n        footer_extensions: ui.footer_extensions,\n        settings_extension: ui.settings_extension,\n        is_app_disabled: ui.is_app_disabled,\n        is_route_modal_on: ui.is_route_modal_on,\n        is_logged_in: client.is_logged_in,\n        is_eu: client.is_eu,\n        is_loading: ui.is_loading,\n        is_settings_modal_on: ui.is_settings_modal_on,\n        is_language_settings_modal_on: ui.is_language_settings_modal_on,\n        is_virtual: client.is_virtual,\n        landing_company_shortcode: client.landing_company_shortcode,\n        disableApp: ui.disableApp,\n        toggleSettingsModal: ui.toggleSettingsModal,\n        toggleLanguageSettingsModal: ui.toggleLanguageSettingsModal,\n        show_eu_related_content: traders_hub.show_eu_related_content,\n    }))(Footer)\n);\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8 12a4 4 0 110-8 4 4 0 010 8zm0-7C6.35 5 5 6.35 5 8s1.35 3 3 3 3-1.35 3-3-1.35-3-3-3zm.5-2.5v-2C8.5.22 8.28 0 8 0s-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5zm3.74 1.96l1.11-1.11a.5.5 0 000-.71.5.5 0 00-.71 0l-1.11 1.11a.5.5 0 000 .71.48.48 0 00.7 0h.01zm1.11 8.89a.5.5 0 000-.71l-1.11-1.11a.5.5 0 00-.71 0 .5.5 0 000 .71l1.11 1.11a.48.48 0 00.7 0h.01zm-10 0l1.11-1.11a.5.5 0 000-.71.5.5 0 00-.71 0l-1.11 1.11a.5.5 0 000 .71.48.48 0 00.7 0h.01zm1.11-8.89a.5.5 0 000-.71L3.35 2.64a.5.5 0 00-.71 0 .5.5 0 000 .71l1.11 1.11a.48.48 0 00.7 0h.01zM16 8a.5.5 0 00-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5h2A.5.5 0 0016 8zm-7.5 7.5v-2c0-.28-.22-.5-.5-.5s-.5.22-.5.5v2c0 .28.22.5.5.5s.5-.22.5-.5zM3 8a.5.5 0 00-.5-.5h-2c-.28 0-.5.22-.5.5s.22.5.5.5h2A.5.5 0 003 8z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8 16a8 8 0 01-7.72-5.93.48.48 0 01.13-.48.53.53 0 01.48-.13A6.99 6.99 0 009.45.9a.48.48 0 01.13-.48c.13-.13.31-.18.48-.13a8.01 8.01 0 015.93 7.72c0 4.41-3.59 8-8 8L8 16zm-6.49-5.39A7 7 0 008 15a7 7 0 002.61-13.49 7.98 7.98 0 01-9.1 9.1z\" fill=\"#C2C2C2\" /></svg>);","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { withRouter } from 'react-router';\nimport NetworkStatus, {\n    AccountLimits as AccountLimitsFooter,\n    EndpointNote,\n    GoToDeriv,\n    HelpCentre,\n    RegulatoryInformation,\n    ResponsibleTrading,\n    ToggleSettings,\n    ToggleFullScreen,\n    ToggleLanguageSettings,\n} from 'App/Components/Layout/Footer';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp/index.ts';\nimport { connect } from 'Stores/connect';\nimport ServerTime from '../server-time.jsx';\nimport { routes } from '@deriv/shared';\nimport DarkModeToggleIcon from 'Assets/SvgComponents/footer/ic-footer-light-theme.svg';\nimport LightModeToggleIcon from 'Assets/SvgComponents/footer/ic-footer-dark-theme.svg';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst FooterIconSeparator = () => <div className='footer-icon-separator' />;\n\nconst FooterExtensionRenderer = (footer_extension, idx) => {\n    const { Component: FooterExtensionComponent } = footer_extension;\n    return (\n        <React.Fragment key={`footer-link-${footer_extension.position}-${idx}`}>\n            {footer_extension.has_left_separator && <FooterIconSeparator />}\n            <FooterExtensionComponent />\n            {footer_extension.has_right_separator && <FooterIconSeparator />}\n        </React.Fragment>\n    );\n};\n\nconst TradingHubFooter = ({\n    current_language,\n    enableApp,\n    footer_extensions,\n    is_app_disabled,\n    is_eu,\n    is_logged_in,\n    is_route_modal_on,\n    is_settings_modal_on,\n    is_language_settings_modal_on,\n    is_virtual,\n    disableApp,\n    landing_company_shortcode,\n    toggleSettingsModal,\n    toggleLanguageSettingsModal,\n    settings_extension,\n    setDarkMode,\n    is_dark_mode,\n    show_eu_related_content,\n}) => {\n    let footer_extensions_left = [];\n    let footer_extensions_right = [];\n    if (footer_extensions.filter) {\n        footer_extensions_left = footer_extensions.filter(footer_extension => footer_extension.position === 'left');\n        footer_extensions_right = footer_extensions.filter(footer_extension => footer_extension.position === 'right');\n    }\n\n    const changeTheme = () => {\n        setDarkMode(!is_dark_mode);\n    };\n\n    const location = window.location.pathname;\n\n    return (\n        <footer\n            className={classNames('footer', {\n                'footer--is-disabled': is_app_disabled || is_route_modal_on,\n            })}\n        >\n            {footer_extensions_left.length > 0 && (\n                <div className='footer__links footer__links--left'>\n                    {footer_extensions_left.map(FooterExtensionRenderer)}\n                </div>\n            )}\n            <EndpointNote />\n            <NetworkStatus />\n            <FooterIconSeparator />\n            <ServerTime />\n            <FooterIconSeparator />\n            <div className='footer__links'>\n                {footer_extensions_right.map(FooterExtensionRenderer)}\n                <WhatsApp />\n                <LiveChat />\n                <GoToDeriv />\n                <ResponsibleTrading />\n                {is_logged_in && <AccountLimitsFooter />}\n                {is_logged_in && !is_virtual && (\n                    <RegulatoryInformation\n                        landing_company={landing_company_shortcode}\n                        is_eu={is_eu}\n                        show_eu_related_content={show_eu_related_content}\n                    />\n                )}\n                <div className='footer__links--dark-mode'>\n                    <Popover alignment='top' message={localize('Change theme')} zIndex={9999}>\n                        {is_dark_mode ? (\n                            <LightModeToggleIcon onClick={changeTheme} />\n                        ) : (\n                            <DarkModeToggleIcon onClick={changeTheme} />\n                        )}\n                    </Popover>\n                </div>\n                <FooterIconSeparator />\n                <HelpCentre />\n                {location === routes.trade && (\n                    <ToggleSettings\n                        is_settings_visible={is_settings_modal_on}\n                        toggleSettings={toggleSettingsModal}\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                        settings_extension={settings_extension}\n                    />\n                )}\n                <ToggleLanguageSettings\n                    is_settings_visible={is_language_settings_modal_on}\n                    toggleSettings={toggleLanguageSettingsModal}\n                    lang={current_language}\n                />\n                <ToggleFullScreen />\n            </div>\n        </footer>\n    );\n};\n\nTradingHubFooter.propTypes = {\n    is_app_disabled: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_settings_modal_on: PropTypes.bool,\n    is_language_settings_modal_on: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    location: PropTypes.object,\n    toggleSettingsModal: PropTypes.func,\n    toggleLanguageSettingsModal: PropTypes.func,\n    settings_extension: PropTypes.array,\n    is_virtual: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    footer_extensions: PropTypes.array,\n    is_dark_mode: PropTypes.bool,\n    setDarkMode: PropTypes.func,\n    show_eu_related_content: PropTypes.bool,\n};\n\nexport default withRouter(\n    connect(({ client, common, ui, traders_hub }) => ({\n        current_language: common.current_language,\n        enableApp: ui.enableApp,\n        footer_extensions: ui.footer_extensions,\n        settings_extension: ui.settings_extension,\n        is_app_disabled: ui.is_app_disabled,\n        is_route_modal_on: ui.is_route_modal_on,\n        is_logged_in: client.is_logged_in,\n        is_eu: client.is_eu,\n        is_loading: ui.is_loading,\n        is_settings_modal_on: ui.is_settings_modal_on,\n        is_language_settings_modal_on: ui.is_language_settings_modal_on,\n        is_virtual: client.is_virtual,\n        landing_company_shortcode: client.landing_company_shortcode,\n        disableApp: ui.disableApp,\n        toggleSettingsModal: ui.toggleSettingsModal,\n        toggleLanguageSettingsModal: ui.toggleLanguageSettingsModal,\n        is_dark_mode: ui.is_dark_mode_on,\n        setDarkMode: ui.setDarkMode,\n        show_eu_related_content: traders_hub.show_eu_related_content,\n    }))(TradingHubFooter)\n);\n","import React from 'react';\nimport { routes } from '@deriv/shared';\nimport DefaultFooter from './default-footer';\nimport TradingHubFooter from './trading-hub-footer';\nimport { useLocation } from 'react-router-dom';\n\nconst Footer = () => {\n    const { pathname } = useLocation();\n    if (pathname !== routes.onboarding) {\n        return <TradingHubFooter />;\n    } else if (pathname === routes.onboarding) {\n        return null;\n    }\n    return <DefaultFooter />;\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst EmptyNotification = () => (\n    <div className='notifications-empty__container'>\n        <div className='notifications-empty'>\n            <Icon\n                data_testid='dt_ic_box_icon'\n                icon='IcBox'\n                className='notifications-empty__icon'\n                size={64}\n                color='secondary'\n            />\n            <div className='notifications-empty__content'>\n                <Text\n                    as='h4'\n                    size='xs'\n                    weight='bold'\n                    align='center'\n                    color='less-prominent'\n                    className='notifications-empty__header'\n                >\n                    <Localize i18n_default_text='No notifications' />\n                </Text>\n                <Text size='xxs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='You have yet to receive any notifications' />\n                </Text>\n            </div>\n        </div>\n    </div>\n);\n\nexport default EmptyNotification;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TNotificationsClearAllFooter = {\n    clearNotifications: () => void;\n};\n\nconst NotificationsClearAllFooter = observer(({ clearNotifications }: TNotificationsClearAllFooter) => {\n    const { notifications, ui } = useStore();\n    const { is_notifications_empty } = notifications;\n    const { is_mobile } = ui;\n\n    return (\n        <React.Fragment>\n            <div className='notifications-dialog__separator' />\n            <div\n                data-testid='dt_clear_all_footer_button'\n                className={classNames('notifications-dialog__footer', {\n                    'notifications-dialog__content--empty': is_notifications_empty,\n                    'notifications-dialog__content--sticky': is_mobile,\n                })}\n            >\n                <Button\n                    className={classNames('dc-btn--secondary', 'notifications-dialog__clear')}\n                    disabled={is_notifications_empty}\n                    onClick={clearNotifications}\n                >\n                    <Text size='xxs' color='prominent' weight='bold'>\n                        <Localize i18n_default_text='Clear All' />\n                    </Text>\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsClearAllFooter;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { isEmptyObject, toTitleCase } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TActionProps = ReturnType<typeof useStore>['notifications']['notifications'][0]['action'];\ntype TNotificationMessage = ReturnType<typeof useStore>['notifications']['notifications'][0];\n\nconst NotificationsList = observer(() => {\n    const { notifications } = useStore();\n    const { notifications: notifications_array, toggleNotificationsModal } = notifications;\n\n    const getNotificationItemIcon = (item: TNotificationMessage) => {\n        const { type } = item;\n        if (['contract_sold', 'info', 'news', 'promotions'].includes(type)) {\n            return 'IcAlertInfo';\n        } else if (type === 'p2p_completed_order') {\n            return 'IcAlertAnnounce';\n        }\n        return `IcAlert${toTitleCase(type)}`;\n    };\n\n    const getButtonSettings = (item: TNotificationMessage): TActionProps | undefined => {\n        const object_key = ['action', 'secondary_btn', 'cta_btn', 'primary_btn'].find(\n            obj_key => !isEmptyObject(item[obj_key as keyof TNotificationMessage])\n        );\n        switch (object_key) {\n            case 'primary_btn':\n                return item.primary_btn;\n            case 'cta_btn':\n                return item.cta_btn;\n            case 'secondary_btn':\n                return item.secondary_btn;\n            case 'action':\n                return item.action;\n            default:\n                return undefined;\n        }\n    };\n\n    return (\n        <React.Fragment>\n            {notifications_array.map(item => (\n                <div className='notifications-item' key={item.key}>\n                    <Text as='h2' className='notifications-item__title' weight='bold' size='xs' color='prominent'>\n                        {item.type && (\n                            <Icon\n                                icon={getNotificationItemIcon(item)}\n                                className={classNames('notifications-item__title-icon', {\n                                    [`notifications-item__title-icon--${item.type}`]: item.type,\n                                })}\n                            />\n                        )}\n                        {item.header}\n                    </Text>\n                    <div className='notifications-item__message'>{item.message}</div>\n                    <div className='notifications-item__action'>\n                        {!!getButtonSettings(item) && (\n                            <React.Fragment>\n                                {getButtonSettings(item)?.route ? (\n                                    <BinaryLink\n                                        onClick={toggleNotificationsModal}\n                                        active_class='notifications-item'\n                                        className={classNames(\n                                            'dc-btn',\n                                            'dc-btn--secondary',\n                                            'notifications-item__cta-button'\n                                        )}\n                                        to={getButtonSettings(item)?.route}\n                                    >\n                                        <Text weight='bold' size='xxs'>\n                                            {getButtonSettings(item)?.text}\n                                        </Text>\n                                    </BinaryLink>\n                                ) : (\n                                    <Button\n                                        className={classNames('dc-btn--secondary', 'notifications-item__cta-button')}\n                                        onClick={getButtonSettings(item)?.onClick}\n                                    >\n                                        <Text weight='bold' size='xxs'>\n                                            {getButtonSettings(item)?.text}\n                                        </Text>\n                                    </Button>\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            ))}\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsList;\n","import classNames from 'classnames';\nimport React, { LegacyRef } from 'react';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\nimport NotificationsClearAllFooter from './notifications-clear-all-footer';\nimport NotificationsList from './notifications-list';\n\ntype TNotificationListWrapper = { clearNotifications: () => void };\n\nconst NotificationListWrapperForwardRef = React.forwardRef(\n    ({ clearNotifications }: TNotificationListWrapper, ref: LegacyRef<HTMLDivElement> | undefined) => {\n        const { notifications, ui } = useStore();\n        const { is_notifications_empty } = notifications;\n        const { is_mobile } = ui;\n\n        const traders_hub = window.location.pathname === routes.traders_hub;\n        const wallets_path = window.location.pathname === routes.wallets;\n\n        return (\n            <div\n                data-testid='dt_notifications_list_wrapper'\n                className={classNames('notifications-dialog', {\n                    'notifications-dialog--pre-appstore':\n                        traders_hub || window.location.pathname.startsWith(routes.account) || wallets_path,\n                })}\n                ref={ref}\n            >\n                <div className='notifications-dialog__header'>\n                    <Text\n                        as='h2'\n                        className='notifications-dialog__header-text'\n                        weight='bold'\n                        color='prominent'\n                        styles={{\n                            lineHeight: '1.6rem',\n                        }}\n                    >\n                        <Localize i18n_default_text='Notifications' />\n                    </Text>\n                </div>\n                <div\n                    className={classNames('notifications-dialog__content', {\n                        'notifications-dialog__content--empty': is_notifications_empty,\n                    })}\n                >\n                    <ThemedScrollbars is_bypassed={is_mobile || is_notifications_empty}>\n                        {is_notifications_empty ? <EmptyNotification /> : <NotificationsList />}\n                    </ThemedScrollbars>\n                </div>\n                <NotificationsClearAllFooter clearNotifications={clearNotifications} />\n            </div>\n        );\n    }\n);\nNotificationListWrapperForwardRef.displayName = 'NotificationListWrapper';\n\nconst NotificationListWrapper = observer(NotificationListWrapperForwardRef);\n\nexport default NotificationListWrapper;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, useOnClickOutside } from '@deriv/components';\nimport { LocalStore } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport NotificationListWrapper from './notification-list-wrapper';\n\nconst NotificationsDialog = observer(() => {\n    const { client, notifications } = useStore();\n    const { loginid } = client;\n    const {\n        is_notifications_visible,\n        notifications: notifications_array,\n        removeNotifications,\n        removeNotificationMessage,\n        removeNotificationMessageByKey,\n        toggleNotificationsModal,\n    } = notifications;\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n\n    const handleClickOutside = (event: MouseEvent) => {\n        const notifications_toggle_btn = !(event?.target as Element)?.classList.contains(\n            'notifications-toggle__icon-wrapper'\n        );\n        if (\n            !wrapper_ref?.current?.contains(event.target as Node) &&\n            is_notifications_visible &&\n            notifications_toggle_btn\n        ) {\n            toggleNotificationsModal();\n        }\n    };\n\n    const clearNotifications = () => {\n        const p2p_settings = LocalStore.getObject('p2p_settings');\n        if (loginid && p2p_settings[loginid]) {\n            p2p_settings[loginid].is_notifications_visible = false;\n        }\n        LocalStore.setObject('p2p_settings', p2p_settings);\n\n        notifications_array.forEach(({ key, should_show_again }) => {\n            removeNotificationMessageByKey({ key });\n            removeNotificationMessage({\n                key,\n                should_show_again,\n            });\n            removeNotifications(true);\n        });\n    };\n\n    useOnClickOutside(wrapper_ref, handleClickOutside);\n\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={<Localize i18n_default_text='Notifications' />}\n                    wrapper_classname='notifications-mobile-dialog'\n                    visible={is_notifications_visible}\n                    onClose={toggleNotificationsModal}\n                >\n                    <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <CSSTransition\n                    in={is_notifications_visible}\n                    classNames={{\n                        enter: 'notifications-dialog--enter',\n                        enterDone: 'notifications-dialog--enter-done',\n                        exit: 'notifications-dialog--exit',\n                    }}\n                    timeout={150}\n                    unmountOnExit\n                >\n                    <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n                </CSSTransition>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsDialog;\n","import NotificationsDialog from './notifications-dialog';\n\nexport default NotificationsDialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Counter, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport NotificationsDialog from 'App/Containers/NotificationsDialog';\nimport 'Sass/app/modules/notifications-dialog.scss';\n\nconst ToggleNotificationsDrawer = ({\n    count,\n    is_visible,\n    toggleDialog,\n    tooltip_message,\n    should_disable_pointer_events = false,\n}) => {\n    const notifications_toggler_el = (\n        <div\n            className={classNames('notifications-toggle__icon-wrapper', {\n                'notifications-toggle__icon-wrapper--active': is_visible,\n            })}\n            onClick={toggleDialog}\n        >\n            <Icon className='notifications-toggle__icon' icon='IcBell' />\n            {!!count && <Counter count={count} className='notifications-toggle__step' />}\n        </div>\n    );\n\n    return (\n        <div\n            className={classNames('notifications-toggle', {\n                'notifications-toggle--active': is_visible,\n            })}\n        >\n            <DesktopWrapper>\n                <Popover\n                    classNameBubble='notifications-toggle__tooltip'\n                    alignment='bottom'\n                    message={tooltip_message}\n                    should_disable_pointer_events={should_disable_pointer_events}\n                    zIndex={9999}\n                >\n                    {notifications_toggler_el}\n                </Popover>\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </DesktopWrapper>\n            <MobileWrapper>\n                {notifications_toggler_el}\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </MobileWrapper>\n        </div>\n    );\n};\n\nexport default ToggleNotificationsDrawer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Icon, useOnClickOutside, Text } from '@deriv/components';\nimport { routes, isDesktop, isMobile, getActivePlatform } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport 'Sass/app/_common/components/platform-dropdown.scss';\nimport { Localize } from '@deriv/translations';\nimport { useHistory } from 'react-router';\n\nconst PlatformBox = ({ platform: { icon, description } }) => (\n    <React.Fragment>\n        <div className='platform-dropdown__list-platform-background' />\n\n        <div className='platform-switcher__dropdown' data-testid='dt_platform_box_icon'>\n            <Icon icon={icon} height={42} width={150} description={icon} />\n            <p className='platform-dropdown__list-platform-description'>{description()}</p>\n        </div>\n    </React.Fragment>\n);\n\nconst PlatformDropdownContent = ({ platform, app_routing_history }) => {\n    return (\n        (platform.link_to && (\n            <BinaryLink\n                data-testid='dt_platform_dropdown'\n                to={platform.link_to}\n                // This is here because in routes-config it needs to have children, but not in menu\n                exact={platform.link_to === routes.trade}\n                className='platform-dropdown__list-platform'\n                isActive={() => getActivePlatform(app_routing_history) === platform.name}\n            >\n                <PlatformBox platform={platform} />\n            </BinaryLink>\n        )) || (\n            <a\n                data-testid='dt_platform_dropdown_link'\n                href={platform.href}\n                className='platform-dropdown__list-platform'\n            >\n                <PlatformBox platform={platform} />\n            </a>\n        )\n    );\n};\n\nconst PlatformDropdown = ({ app_routing_history, closeDrawer, platform_config, setTogglePlatformType }) => {\n    const history = useHistory();\n\n    const TradersHubRedirect = () => {\n        return (\n            <div className='platform-dropdown__cta'>\n                <BinaryLink\n                    onClick={() => {\n                        if (isMobile()) {\n                            history.push(routes.traders_hub);\n                            setTogglePlatformType('cfd');\n                        }\n                        history.push(routes.traders_hub);\n                    }}\n                >\n                    <Text size='xs' weight='bold' align='center' className='platform-dropdown__cta--link'>\n                        <Localize i18n_default_text=\"Looking for CFDs? Go to Trader's Hub\" />\n                    </Text>\n                </BinaryLink>\n            </div>\n        );\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('popstate', closeDrawer);\n        return () => {\n            window.removeEventListener('popstate', closeDrawer);\n        };\n    }, [closeDrawer]);\n\n    const ref = React.useRef();\n\n    const handleClickOutside = event => {\n        if (!event.target.closest('.platform-dropdown__list') && !event.target.closest('.platform-switcher')) {\n            closeDrawer();\n        }\n    };\n\n    useOnClickOutside(ref, handleClickOutside, () => isDesktop());\n\n    const platform_dropdown = (\n        <div className='platform-dropdown'>\n            <Div100vhContainer className='platform-dropdown__list' height_offset='15rem' is_disabled={isDesktop()}>\n                {platform_config.map(platform => {\n                    return (\n                        <div key={platform.name} onClick={closeDrawer} ref={ref}>\n                            <PlatformDropdownContent platform={platform} app_routing_history={app_routing_history} />\n                        </div>\n                    );\n                })}\n                <TradersHubRedirect />\n            </Div100vhContainer>\n        </div>\n    );\n\n    if (isMobile()) {\n        return ReactDOM.createPortal(platform_dropdown, document.getElementById('mobile_platform_switcher'));\n    }\n\n    return ReactDOM.createPortal(platform_dropdown, document.getElementById('deriv_app'));\n};\n\nexport { PlatformDropdown, PlatformBox };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PlatformSwitcherLoader = ({ is_mobile, speed }) => {\n    const container_margin = 16;\n    const element_spacing = is_mobile ? 16 : 8;\n    const logo_size = is_mobile ? 40 : 32;\n    const name_height = 16;\n    const name_width = 90;\n    const name_x = container_margin + logo_size + element_spacing;\n    const name_y = is_mobile ? 12 : 8;\n    const container_width = container_margin * 2 + logo_size + element_spacing + name_width;\n    return (\n        <ContentLoader\n            height={logo_size}\n            width={container_width}\n            speed={speed}\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <rect x={container_margin} y='0' rx='4' ry='4' width={logo_size} height={logo_size} />\n            <rect x={name_x} y={name_y} rx='4' ry='4' width={name_width} height={name_height} />\n        </ContentLoader>\n    );\n};\n\nexport { PlatformSwitcherLoader };\n","import 'Sass/app/_common/components/platform-switcher.scss';\n\nimport { Icon } from '@deriv/components';\nimport { getPlatformInformation, getUrlBinaryBot, isMobile } from '@deriv/shared';\n\nimport { CSSTransition } from 'react-transition-group';\nimport { PlatformDropdown } from './platform-dropdown.jsx';\nimport { PlatformSwitcherLoader } from './Components/Preloader/platform-switcher.jsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nconst PlatformSwitcher = ({\n    toggleDrawer,\n    app_routing_history,\n    platform_config = [],\n    current_language,\n    is_landing_company_loaded,\n    is_logged_in,\n    is_logging_in,\n    setTogglePlatformType,\n}) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const is_close_drawer_fired_ref = React.useRef(false);\n\n    React.useEffect(() => {\n        platform_config.forEach(data => {\n            const { name } = data;\n            if (name === 'Binary Bot') {\n                data.href = getUrlBinaryBot();\n            }\n        });\n    }, [current_language, platform_config]);\n\n    React.useEffect(() => {\n        if (is_close_drawer_fired_ref.current) {\n            if (typeof toggleDrawer === 'function') {\n                toggleDrawer();\n            }\n        }\n        is_close_drawer_fired_ref.current = false;\n    });\n\n    const closeDrawer = () => {\n        setIsOpen(false);\n        is_close_drawer_fired_ref.current = true;\n    };\n\n    return (is_logged_in || is_logging_in ? !is_landing_company_loaded : app_routing_history.length === 0) ? (\n        <div\n            data-testid='dt_platform_switcher_preloader'\n            className={classNames('platform-switcher__preloader', {\n                'platform-switcher__preloader--is-mobile': isMobile(),\n            })}\n        >\n            <PlatformSwitcherLoader is_mobile={isMobile()} speed={3} />\n        </div>\n    ) : (\n        <React.Fragment>\n            <div\n                data-testid='dt_platform_switcher'\n                className={classNames(\n                    'platform-switcher',\n                    { 'platform-switcher--active': is_open },\n                    { 'platform-switcher--is-mobile': isMobile() }\n                )}\n                onClick={() => setIsOpen(!is_open)}\n            >\n                <Icon\n                    className='platform-switcher__icon'\n                    icon={getPlatformInformation(app_routing_history).icon}\n                    description={getPlatformInformation(app_routing_history).header}\n                    width={120}\n                    height={25}\n                />\n\n                <Icon className='platform-switcher__arrow' icon='IcChevronDownBold' />\n            </div>\n            <CSSTransition\n                mountOnEnter\n                appear\n                in={is_open}\n                classNames={{\n                    enterDone: 'platform-dropdown--enter-done',\n                }}\n                timeout={!isMobile() && is_open ? 0 : 250}\n                unmountOnExit\n            >\n                <PlatformDropdown\n                    platform_config={platform_config}\n                    closeDrawer={closeDrawer}\n                    current_language={current_language}\n                    app_routing_history={app_routing_history}\n                    setTogglePlatformType={setTogglePlatformType}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nPlatformSwitcher.propTypes = {\n    platform_config: PropTypes.array,\n    toggleDrawer: PropTypes.func,\n    current_language: PropTypes.string,\n    app_routing_history: PropTypes.array,\n    is_landing_company_loaded: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default withRouter(PlatformSwitcher);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Text, Icon, Counter } from '@deriv/components';\nimport { BinaryLink } from '../../Routes';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { useP2PNotificationCount, useIsRealAccountNeededForCashier, useFeatureFlags } from '@deriv/hooks';\nimport './menu-links.scss';\nimport { useHistory } from 'react-router';\n\nconst MenuItems = ({ id, text, icon, link_to, handleClickCashier }) => {\n    return (\n        <BinaryLink\n            id={id}\n            key={icon}\n            to={link_to}\n            className='header__menu-link'\n            active_class='header__menu-link--active'\n            onClick={handleClickCashier}\n        >\n            <Text size='m' line_height='xs' title={text} className='header__menu-link-text'>\n                {icon}\n                {text}\n            </Text>\n        </BinaryLink>\n    );\n};\n\nconst ReportTab = () => (\n    <MenuItems\n        id={'dt_reports_tab'}\n        icon={<Icon icon='IcReports' className='header__icon' />}\n        text={localize('Reports')}\n        link_to={routes.reports}\n    />\n);\n\nconst CashierTab = observer(() => {\n    const { client, ui } = useStore();\n    const { has_any_real_account, is_virtual } = client;\n    const { toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n    const p2p_notification_count = useP2PNotificationCount();\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n\n    const history = useHistory();\n\n    const toggle_modal_routes =\n        window.location.pathname === routes.root ||\n        window.location.pathname === routes.traders_hub ||\n        window.location.pathname === routes.bot;\n\n    const toggleModal = () => {\n        if (toggle_modal_routes && !has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const cashier_redirect =\n        (toggle_modal_routes && !has_any_real_account && is_virtual) || real_account_needed_for_cashier;\n\n    return (\n        <MenuItems\n            id={'dt_cashier_tab'}\n            icon={\n                <>\n                    <Icon icon='IcCashier' className='header__icon' />\n                    {p2p_notification_count > 0 && (\n                        <Counter className='cashier__counter' count={p2p_notification_count} />\n                    )}\n                </>\n            }\n            text={localize('Cashier')}\n            link_to={!cashier_redirect ? routes.cashier : null}\n            handleClickCashier={handleClickCashier}\n        />\n    );\n});\n\nconst MenuLinks = observer(({ is_traders_hub_routes = false }) => {\n    const { i18n } = useTranslation();\n    const { client, ui } = useStore();\n    const { is_logged_in } = client;\n    const { is_mobile } = ui;\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    if (!is_logged_in) return <></>;\n\n    return (\n        <div key={`menu-links__${i18n.language}`} className='header__menu-links'>\n            {!is_traders_hub_routes && <ReportTab />}\n            {!is_mobile && !is_next_wallet_enabled && <CashierTab />}\n        </div>\n    );\n});\n\nexport { MenuLinks };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToLogin } from '@deriv/shared';\nimport { getLanguage, localize } from '@deriv/translations';\n\nconst LoginButton = ({ className }) => (\n    <Button\n        id='dt_login_button'\n        className={className}\n        has_effect\n        text={localize('Log in')}\n        onClick={() => redirectToLogin(false, getLanguage())}\n        tertiary\n    />\n);\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { redirectToSignUp } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst SignupButton = ({ className, is_appstore }) => (\n    <Button\n        id='dt_signup_button'\n        className={className}\n        has_effect\n        text={localize('Sign up')}\n        onClick={() => redirectToSignUp({ is_appstore })}\n        primary\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n    is_appstore: PropTypes.bool,\n};\n\nexport { SignupButton };\n","import * as PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, DesktopWrapper, Icon, MobileWrapper, Popover } from '@deriv/components';\nimport { routes, formatMoney, PlatformContext, moduleLoader } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { LoginButton } from './login-button.jsx';\nimport { SignupButton } from './signup-button.jsx';\nimport ToggleNotifications from './toggle-notifications.jsx';\nimport { BinaryLink } from '../../Routes';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\nconst AccountInfo = React.lazy(() =>\n    moduleLoader(() =>\n        import(\n            /* webpackChunkName: \"account-info\", webpackPreload: true */ 'App/Components/Layout/Header/account-info.jsx'\n        )\n    )\n);\n\nconst AccountActions = React.memo(\n    ({\n        acc_switcher_disabled_message,\n        account_type,\n        balance,\n        currency,\n        country_standpoint,\n        disableApp,\n        enableApp,\n        is_acc_switcher_on,\n        is_acc_switcher_disabled,\n        is_eu,\n        is_logged_in,\n        is_notifications_visible,\n        is_virtual,\n        notifications_count,\n        onClickDeposit,\n        openRealAccountSignup,\n        toggleAccountsDialog,\n        toggleNotifications,\n    }) => {\n        const { is_appstore } = React.useContext(PlatformContext);\n\n        if (is_logged_in) {\n            return (\n                <React.Fragment>\n                    <MobileWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                        />\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                account_type={account_type}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                disableApp={disableApp}\n                                enableApp={enableApp}\n                                is_eu={is_eu}\n                                is_virtual={is_virtual}\n                                currency={currency}\n                                country_standpoint={country_standpoint}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                    </MobileWrapper>\n                    <DesktopWrapper>\n                        <ToggleNotifications\n                            count={notifications_count}\n                            is_visible={is_notifications_visible}\n                            toggleDialog={toggleNotifications}\n                            tooltip_message={<Localize i18n_default_text='View notifications' />}\n                            should_disable_pointer_events\n                        />\n                        <Popover\n                            classNameBubble='account-settings-toggle__tooltip'\n                            alignment='bottom'\n                            message={<Localize i18n_default_text='Manage account settings' />}\n                            should_disable_pointer_events\n                            zIndex={9999}\n                        >\n                            <BinaryLink className='account-settings-toggle' to={routes.personal_details}>\n                                <Icon icon='IcUserOutline' />\n                            </BinaryLink>\n                        </Popover>\n                        <React.Suspense fallback={<div />}>\n                            <AccountInfo\n                                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                                account_type={account_type}\n                                balance={\n                                    typeof balance === 'undefined' ? balance : formatMoney(currency, balance, true)\n                                }\n                                is_disabled={is_acc_switcher_disabled}\n                                is_eu={is_eu}\n                                is_virtual={is_virtual}\n                                currency={currency}\n                                country_standpoint={country_standpoint}\n                                is_dialog_on={is_acc_switcher_on}\n                                toggleDialog={toggleAccountsDialog}\n                            />\n                        </React.Suspense>\n                        {!is_virtual && !currency && (\n                            <div className='set-currency'>\n                                <Button\n                                    onClick={() => openRealAccountSignup('set_currency')}\n                                    has_effect\n                                    type='button'\n                                    text={localize('Set currency')}\n                                    primary\n                                />\n                            </div>\n                        )}\n                        {currency && (\n                            <Button\n                                className='acc-info__button'\n                                has_effect\n                                text={localize('Deposit')}\n                                onClick={onClickDeposit}\n                                primary\n                            />\n                        )}\n                    </DesktopWrapper>\n                </React.Fragment>\n            );\n        }\n        return (\n            <React.Fragment>\n                <LoginButton className='acc-info__button' />\n                <SignupButton className='acc-info__button' is_appstore={is_appstore} />\n            </React.Fragment>\n        );\n    }\n);\n\nAccountActions.displayName = 'AccountActions';\n\nAccountActions.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    balance: PropTypes.any,\n    currency: PropTypes.any,\n    is_acc_switcher_disabled: PropTypes.any,\n    is_eu: PropTypes.bool,\n    disableApp: PropTypes.any,\n    enableApp: PropTypes.any,\n    country_standpoint: PropTypes.object,\n    is_acc_switcher_on: PropTypes.any,\n    is_logged_in: PropTypes.any,\n    is_notifications_visible: PropTypes.any,\n    is_virtual: PropTypes.any,\n    notifications_count: PropTypes.any,\n    onClickDeposit: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    toggleAccountsDialog: PropTypes.any,\n    toggleNotifications: PropTypes.any,\n};\n\nexport { AccountActions };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsInfoLoader = ({ is_mobile, is_logged_in, speed }) => (\n    <ContentLoader\n        height={is_mobile ? 42 : 46}\n        width={is_mobile ? 216 : 350}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? <LoggedInPreloader is_mobile={is_mobile} /> : <LoggedOutPreloader is_mobile={is_mobile} />}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_mobile }) => (\n    <React.Fragment>\n        <rect x={is_mobile ? 42 : 166} y='8' rx='4' ry='4' width='66' height='32' />\n        <rect x={is_mobile ? 120 : 250} y='8' rx='4' ry='4' width='80' height='32' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_mobile }) => (\n    <>\n        {is_mobile ? (\n            <React.Fragment>\n                <circle cx='97' cy='22' r='13' />\n                <circle cx='59' cy='22' r='13' />\n                <rect x='128' y='19' rx='4' ry='4' width='76' height='7' />\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                <circle cx='14' cy='22' r='12' />\n                <circle cx='58' cy='22' r='12' />\n                <rect x='150' y='20' rx='4' ry='4' width='76' height='7' />\n                <circle cx='118' cy='24' r='13' />\n                <rect x='87' y='8' rx='4' ry='4' width='1' height='30' />\n                <rect x='250' y='8' rx='4' ry='4' width='82' height='32' />\n            </React.Fragment>\n        )}\n    </>\n);\n\nAccountsInfoLoader.propTypes = {\n    speed: PropTypes.number,\n    is_mobile: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\nexport { AccountsInfoLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsItemLoader = ({ speed }) => (\n    <ContentLoader\n        height={24}\n        width={246}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <circle cx='18' cy='13' r='10' />\n        <rect x='36' y='3' rx='4' ry='4' width='108' height='20' />\n        <rect x='175' y='3' rx='4' ry='4' width='70' height='20' />\n    </ContentLoader>\n);\n\nAccountsItemLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsItemLoader };\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import { Formik } from 'formik';\nimport React from 'react';\nimport {\n    AutoHeightWrapper,\n    Div100vhContainer,\n    ThemedScrollbars,\n    FormSubmitButton,\n    Text,\n    Modal,\n} from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, isMobile } from '@deriv/shared';\n\nconst AcceptRiskForm = ({ onConfirm, onClose }) => {\n    return (\n        <Formik initialValues={{}} onSubmit={onConfirm} validateOnMount>\n            {({ handleSubmit }) => (\n                <AutoHeightWrapper default_height={200}>\n                    {({ setRef, height }) => (\n                        <form ref={setRef} onSubmit={handleSubmit} className='accept-risk__form'>\n                            <Div100vhContainer className='details-form' height_offset='40px' is_disabled={isDesktop()}>\n                                <ThemedScrollbars autoHide={!(window.innerHeight < 890)} height={height - 77}>\n                                    <div className='accept-risk__container'>\n                                        <div className='accept-risk__header'>\n                                            <Text weight='bold' size='xs'>\n                                                {localize('Appropriateness Test, WARNING:')}\n                                            </Text>\n                                        </div>\n                                        <Text as='p' size='xs'>\n                                            <Localize\n                                                i18n_default_text='In providing our services to you, we are required to obtain information from you in order to assess whether a given product or service is appropriate for you (that is, whether you possess the experience and knowledge to understand the risks involved).<0/><1/>'\n                                                components={[<br key={0} />, <br key={1} />]}\n                                            />\n                                            <Localize\n                                                i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><1/>'\n                                                components={[<br key={0} />, <br key={1} />]}\n                                            />\n                                            <Localize i18n_default_text='By clicking Accept below and proceeding with the Account Opening you should note that you may be exposing yourself to risks (which may be significant, including the risk of loss of the entire sum invested) that you may not have the knowledge and experience to properly assess or mitigate.' />\n                                        </Text>\n                                    </div>\n                                </ThemedScrollbars>\n                            </Div100vhContainer>\n                            <input name='accept_risk' value='1' type='hidden' />\n                            <Modal.Footer has_separator is_bypassed={isMobile()}>\n                                <FormSubmitButton\n                                    is_absolute={isMobile()}\n                                    label={localize('Accept')}\n                                    has_cancel\n                                    cancel_label={localize('Decline')}\n                                    onCancel={onClose}\n                                />\n                            </Modal.Footer>\n                        </form>\n                    )}\n                </AutoHeightWrapper>\n            )}\n        </Formik>\n    );\n};\n\nexport default AcceptRiskForm;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nexport default LoadingModal;\n","import classNames from 'classnames';\nimport fromEntries from 'object.fromentries';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { DesktopWrapper, FormProgress, MobileWrapper, Text, Wizard } from '@deriv/components';\nimport { WS, getLocation, toMoment, formatIDVFormValues } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport AcceptRiskForm from './accept-risk-form.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { getItems } from './account-wizard-form';\nimport { useIsClientHighRiskForMT5 } from '@deriv/hooks';\nimport 'Sass/details-form.scss';\n\nconst StepperHeader = ({ has_target, has_real_account, items, getCurrentStep, getTotalSteps, sub_section_index }) => {\n    const step = getCurrentStep() - 1;\n    const step_title = items[step].header ? items[step].header.title : '';\n\n    return (\n        <React.Fragment>\n            {(!has_real_account || has_target) && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <FormProgress steps={items} current_step={step} sub_section_index={sub_section_index} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <FormProgress steps={items} current_step={step} sub_section_index={sub_section_index} />\n                        <div className='account-wizard__header-steps'>\n                            <Text\n                                as='h4'\n                                styles={{ lineHeight: '20px', color: 'var(--brand-red-coral)' }}\n                                size='xs'\n                                weight='bold'\n                                className='account-wizard__header-steps-title'\n                            >\n                                <Localize\n                                    i18n_default_text='Step {{step}}: {{step_title}} ({{step}} of {{steps}})'\n                                    values={{\n                                        step: step + 1,\n                                        steps: getTotalSteps(),\n                                        step_title,\n                                    }}\n                                />\n                            </Text>\n                        </div>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst AccountWizard = props => {\n    const [finished] = React.useState(undefined);\n    const [mounted, setMounted] = React.useState(false);\n    const [form_error, setFormError] = React.useState('');\n    const [previous_data, setPreviousData] = React.useState([]);\n    const [state_items, setStateItems] = React.useState([]);\n    const [should_accept_financial_risk, setShouldAcceptFinancialRisk] = React.useState(false);\n    const is_high_risk_client_for_mt5 = useIsClientHighRiskForMT5();\n\n    const {\n        setIsTradingAssessmentForNewUserEnabled,\n        residence_list,\n        states_list,\n        fetchResidenceList,\n        fetchStatesList,\n        has_residence,\n        setLoading,\n    } = props;\n\n    const getData = async () => {\n        setLoading(true);\n        if (!residence_list.length) await fetchResidenceList();\n        if (has_residence && !states_list.length) {\n            await fetchStatesList();\n        }\n        setLoading(false);\n    };\n\n    const get_items_props = {\n        ...props,\n        is_high_risk_client_for_mt5,\n    };\n\n    React.useEffect(() => {\n        setIsTradingAssessmentForNewUserEnabled(true);\n        getData();\n        setStateItems(previous_state => {\n            if (!previous_state.length) {\n                return getItems(get_items_props);\n            }\n            return previous_state;\n        });\n        setPreviousData(fetchFromStorage());\n        setMounted(true);\n    }, [residence_list, states_list, fetchResidenceList, fetchStatesList, has_residence]);\n\n    React.useEffect(() => {\n        if (previous_data.length > 0) {\n            const items = [...state_items];\n            previous_data.forEach((item, index) => {\n                if (item instanceof Object) {\n                    items[index].form_value = item;\n                }\n            });\n            setStateItems(items);\n            setPreviousData([]);\n        }\n    }, [previous_data]);\n\n    React.useEffect(() => {\n        if (residence_list.length) {\n            const setDefaultPhone = country_code => {\n                let items;\n                if (state_items.length) {\n                    items = state_items;\n                } else {\n                    items = getItems(get_items_props);\n                }\n\n                if (items.length > 1 && 'phone' in items[1]?.form_value) {\n                    items[1].form_value.phone = items[1].form_value.phone || country_code || '';\n                    setStateItems(items);\n                }\n            };\n            getCountryCode(residence_list).then(setDefaultPhone);\n        }\n    }, [residence_list]);\n\n    const fetchFromStorage = () => {\n        const stored_items = localStorage.getItem('real_account_signup_wizard');\n        try {\n            const items = JSON.parse(stored_items);\n            return items || [];\n        } catch (e) {\n            return [];\n        } finally {\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n    };\n\n    const getCountryCode = async residences => {\n        const response = residences.find(item => item.value === props.residence);\n        if (!response || !response.phone_idd) return '';\n        return `+${response.phone_idd}`;\n    };\n\n    const form_values = () => {\n        return state_items\n            .map(item => item.form_value)\n            .reduce((obj, item) => {\n                const original_form_values = fromEntries(new Map(Object.entries(item)));\n                const values = Object.keys(original_form_values).reduce((acc, current) => {\n                    acc[current] =\n                        typeof original_form_values[current] === 'string'\n                            ? original_form_values[current].trim()\n                            : original_form_values[current];\n                    return acc;\n                }, {});\n                if (values.date_of_birth) {\n                    values.date_of_birth = toMoment(values.date_of_birth).format('YYYY-MM-DD');\n                }\n                if (values.place_of_birth) {\n                    values.place_of_birth = values.place_of_birth\n                        ? getLocation(residence_list, values.place_of_birth, 'value')\n                        : '';\n                }\n                if (values.citizen) {\n                    values.citizen = values.citizen ? getLocation(residence_list, values.citizen, 'value') : '';\n                }\n\n                if (values.tax_residence) {\n                    values.tax_residence = values.tax_residence\n                        ? getLocation(residence_list, values.tax_residence, 'value')\n                        : values.tax_residence;\n                }\n\n                return {\n                    ...obj,\n                    ...values,\n                };\n            }, {});\n    };\n\n    const clearError = () => {\n        setFormError('');\n    };\n\n    const getFinishedComponent = () => {\n        return finished;\n    };\n\n    const prevStep = (current_step, goToPreviousStep) => {\n        if (current_step - 1 < 0) {\n            props.onClose();\n            return;\n        }\n\n        goToPreviousStep();\n        clearError();\n    };\n\n    const processInputData = data => {\n        if (data?.risk_tolerance === 'No') {\n            return Object.entries(data).reduce((accumulator, [key, val]) => {\n                if (val) {\n                    return { ...accumulator, [key]: val };\n                }\n                return { ...accumulator };\n            }, {});\n        }\n        return data;\n    };\n\n    const submitForm = (payload = undefined) => {\n        let clone = { ...form_values() };\n        delete clone?.tax_identification_confirm;\n        delete clone?.agreed_tnc;\n        delete clone?.agreed_tos;\n        delete clone?.confirmation_checkbox;\n\n        // BE does not accept empty strings for TIN\n        // so we remove it from the payload if it is empty in case of optional TIN field\n        // as the value will be available from the form_values\n        if (clone?.tax_identification_number?.length === 0) {\n            delete clone.tax_identification_number;\n        }\n\n        clone = processInputData(clone);\n        props.setRealAccountFormData(clone);\n        if (payload) {\n            clone = {\n                ...clone,\n                ...payload,\n            };\n        }\n        return props.realAccountSignup(clone);\n    };\n\n    const updateValue = (index, value, setSubmitting, goToNextStep, should_override = false) => {\n        saveFormData(index, value);\n        clearError();\n\n        // Check if account wizard is not finished\n        if (should_override || index + 1 >= state_items.length) {\n            createRealAccount({});\n        } else {\n            goToNextStep();\n        }\n    };\n\n    const saveFormData = (index, value) => {\n        const cloned_items = Object.assign([], state_items);\n        cloned_items[index].form_value = value;\n        setStateItems(cloned_items);\n    };\n\n    const getCurrent = (key, step_index) => {\n        return key ? state_items[step_index][key] : state_items[step_index];\n    };\n\n    const getPropsForChild = step_index => {\n        const passthrough = getCurrent('passthrough', step_index);\n        const properties = getCurrent('props', step_index) || {};\n\n        if (passthrough?.length) {\n            passthrough.forEach(item => {\n                Object.assign(properties, { [item]: props[item] });\n            });\n            properties.bypass_to_personal = previous_data.length > 0;\n        }\n        return properties;\n    };\n\n    const createRealAccount = (payload = undefined) => {\n        setLoading(true);\n        const form_data = { ...form_values() };\n        /**\n         * Remove document_type from payload if it is not present (For Non IDV supporting countries)\n         */\n        if (!form_data?.document_type?.id) {\n            delete form_data.document_type;\n        }\n        submitForm(payload)\n            .then(async response => {\n                props.setIsRiskWarningVisible(false);\n                if (props.real_account_signup_target === 'maltainvest') {\n                    props.onFinishSuccess(response.new_account_maltainvest.currency.toLowerCase());\n                } else if (props.real_account_signup_target === 'samoa') {\n                    props.onOpenWelcomeModal(response.new_account_samoa.currency.toLowerCase());\n                } else {\n                    props.onFinishSuccess(response.new_account_real.currency.toLowerCase());\n                }\n                const country_code = props.account_settings.citizen || props.residence;\n                /**\n                 * If IDV details are present, then submit IDV details\n                 */\n                if (form_data?.document_type) {\n                    const idv_submit_data = {\n                        identity_verification_document_add: 1,\n                        ...formatIDVFormValues(form_data, country_code),\n                    };\n                    await WS.send(idv_submit_data);\n                }\n            })\n            .catch(error => {\n                if (error.code === 'show risk disclaimer') {\n                    props.setIsRiskWarningVisible(true);\n                    setShouldAcceptFinancialRisk(true);\n                } else if (error.code === 'AppropriatenessTestFailed') {\n                    if (form_data?.risk_tolerance === 'No') {\n                        props.fetchAccountSettings();\n                        props.setShouldShowRiskWarningModal(true);\n                    } else {\n                        props.setShouldShowAppropriatenessWarningModal(true);\n                    }\n                } else {\n                    props.onError(error, state_items);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n                localStorage.removeItem('current_question_index');\n            });\n    };\n\n    const onAcceptRisk = () => {\n        createRealAccount({ accept_risk: 1 });\n    };\n\n    const onDeclineRisk = () => {\n        props.onClose();\n        props.setIsRiskWarningVisible(false);\n    };\n\n    if (props.is_loading) return <LoadingModal />;\n\n    if (should_accept_financial_risk) {\n        return <AcceptRiskForm onConfirm={onAcceptRisk} onClose={onDeclineRisk} />;\n    }\n\n    if (!mounted) return null;\n\n    if (!finished) {\n        const employment_status =\n            state_items.find(item => item.form_value.employment_status)?.form_value?.employment_status || '';\n        const wizard_steps = state_items.map((step, step_index) => {\n            const passthrough = getPropsForChild(step_index);\n            const BodyComponent = step.body;\n            return (\n                <BodyComponent\n                    value={getCurrent('form_value', step_index)}\n                    index={step_index}\n                    onSubmit={updateValue}\n                    onCancel={prevStep}\n                    onSave={saveFormData}\n                    closeRealAccountSignup={props.closeRealAccountSignup}\n                    is_virtual={props.is_virtual}\n                    has_currency={props.has_currency}\n                    form_error={form_error}\n                    {...passthrough}\n                    key={step_index}\n                    employment_status={employment_status}\n                />\n            );\n        });\n\n        let navHeader = <div />;\n        if (props.real_account_signup_target !== 'samoa') {\n            navHeader = (\n                <StepperHeader\n                    has_real_account={props.has_real_account}\n                    items={state_items}\n                    has_currency={props.has_currency}\n                    has_target={props.real_account_signup_target !== 'manage'}\n                    setIsRiskWarningVisible={props.setIsRiskWarningVisible}\n                    sub_section_index={props.sub_section_index}\n                />\n            );\n        }\n\n        return (\n            <Wizard\n                nav={navHeader}\n                className={classNames('account-wizard', {\n                    'account-wizard--set-currency': !props.has_currency,\n                    'account-wizard--deriv-crypto': props.real_account_signup_target === 'samoa',\n                })}\n            >\n                {wizard_steps}\n            </Wizard>\n        );\n    }\n\n    const FinishedModalItem = getFinishedComponent();\n    return <FinishedModalItem />;\n};\n\nAccountWizard.propTypes = {\n    account_settings: PropTypes.object,\n    account_status: PropTypes.object,\n    closeRealAccountSignup: PropTypes.func,\n    content_flag: PropTypes.string,\n    fetchResidenceList: PropTypes.func,\n    fetchAccountSettings: PropTypes.func,\n    fetchStatesList: PropTypes.func,\n    has_currency: PropTypes.bool,\n    has_real_account: PropTypes.bool,\n    has_residence: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onFinishSuccess: PropTypes.func,\n    onLoading: PropTypes.func,\n    onOpenWelcomeModal: PropTypes.func,\n    real_account_signup_target: PropTypes.string,\n    realAccountSignup: PropTypes.func,\n    residence_list: PropTypes.array,\n    residence: PropTypes.string,\n    states_list: PropTypes.array,\n    setIsTradingAssessmentForNewUserEnabled: PropTypes.func,\n    setIsRiskWarningVisible: PropTypes.func,\n    setLoading: PropTypes.func,\n    setShouldShowRiskWarningModal: PropTypes.func,\n    setSubSectionIndex: PropTypes.func,\n    sub_section_index: PropTypes.number,\n};\n\nexport default connect(({ client, notifications, ui, traders_hub }) => ({\n    account_settings: client.account_settings,\n    account_status: client.account_status,\n    closeRealAccountSignup: ui.closeRealAccountSignup,\n    content_flag: traders_hub.content_flag,\n    fetchAccountSettings: client.fetchAccountSettings,\n    fetchResidenceList: client.fetchResidenceList,\n    fetchStatesList: client.fetchStatesList,\n    financial_assessment: client.financial_assessment,\n    has_currency: !!client.currency,\n    has_real_account: client.has_active_real_account,\n    has_residence: client.residence,\n    is_fully_authenticated: client.is_fully_authenticated,\n    is_virtual: client.is_virtual,\n    real_account_signup_target: ui.real_account_signup_target,\n    realAccountSignup: client.realAccountSignup,\n    refreshNotifications: notifications.refreshNotifications,\n    residence_list: client.residence_list,\n    residence: client.residence,\n    setIsRealAccountSignupModalVisible: ui.setIsRealAccountSignupModalVisible,\n    setIsTradingAssessmentForNewUserEnabled: ui.setIsTradingAssessmentForNewUserEnabled,\n    setShouldShowAppropriatenessWarningModal: ui.setShouldShowAppropriatenessWarningModal,\n    setShouldShowRiskWarningModal: ui.setShouldShowRiskWarningModal,\n    states_list: client.states_list,\n    upgrade_info: client.upgrade_info,\n    setSubSectionIndex: ui.setSubSectionIndex,\n    sub_section_index: ui.sub_section_index,\n}))(AccountWizard);\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { isMobile, reorderCurrencies, website_name } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\n\nconst messages = () => [\n    <Localize key={0} i18n_default_text='Choose your preferred cryptocurrency' />,\n    <Localize key={1} i18n_default_text='You can open an account for each cryptocurrency.' />,\n    <Localize key={2} i18n_default_text='Add a real account' />,\n    <Localize key={3} i18n_default_text='Choose a currency you would like to trade with.' />,\n    <Localize key={4} i18n_default_text='Choose a currency' />,\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n            {heading}\n        </Text>\n        <Text as='h3' size='xxs' color='prominent' align='center' className='add-crypto-currency__sub-title'>\n            {subheading}\n        </Text>\n    </React.Fragment>\n);\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst AddCryptoCurrency = ({\n    available_crypto_currencies,\n    form_error,\n    has_fiat,\n    is_add_fiat,\n    legal_allowed_currencies,\n    onClickBack,\n    onSubmit,\n    should_show_cancel,\n    should_show_crypto_only,\n    should_show_fiat_only,\n    value,\n    hasNoAvailableCrypto,\n}) => {\n    const getReorderedFiatCurrencies = () =>\n        reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n    const getReorderedCryptoCurrencies = () =>\n        reorderCurrencies(\n            legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n    const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n    const canAddCrypto = currency => {\n        // check if the cryptocurrency has not been created\n        return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: value.currency,\n            }}\n            onSubmit={(values, actions) => {\n                onSubmit(false, values, actions.setSubmitting);\n            }}\n        >\n            {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    {!canAddFiat() && <Headers heading={messages()[0]} subheading={messages()[1]} />}\n                    {canAddFiat() && (\n                        <Headers heading={is_add_fiat ? messages()[4] : messages()[2]} subheading={messages()[3]} />\n                    )}\n                    {canAddFiat() && (\n                        <React.Fragment>\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='fiat_currency'\n                                    is_fiat\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedFiatCurrencies().length}\n                                >\n                                    {getReorderedFiatCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        </React.Fragment>\n                    )}\n                    {canAddFiat() && (\n                        <Text\n                            as='p'\n                            color='prominent'\n                            size='xxs'\n                            align='center'\n                            className='currency-selector__deposit-warn'\n                        >\n                            <Localize i18n_default_text='You’ll not be able to change currency once you have made a deposit.' />\n                        </Text>\n                    )}\n                    {hasNoAvailableCrypto() && (\n                        <div className='account-wizard--disabled-message'>\n                            <Text\n                                as='p'\n                                align='center'\n                                size='xxs'\n                                className='account-wizard--disabled-message-description'\n                            >\n                                {localize(\n                                    'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                                    {\n                                        deriv: website_name,\n                                    }\n                                )}\n                            </Text>\n                        </div>\n                    )}\n                    {!should_show_fiat_only &&\n                        (available_crypto_currencies.length !== 0 ? (\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='crypto_currency'\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    label={localize('Cryptocurrencies')}\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedCryptoCurrencies().length}\n                                >\n                                    {getReorderedCryptoCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                            selected={canAddCrypto(currency)}\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        ) : (\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='crypto_currency'\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    label={localize('Cryptocurrencies')}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedCryptoCurrencies().length}\n                                >\n                                    {getReorderedCryptoCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                            selected\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        ))}\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute={!isMobile()}\n                        form_error={form_error}\n                        has_cancel={should_show_cancel}\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nAddCryptoCurrency.propTypes = {\n    available_crypto_currencies: PropTypes.array,\n    legal_allowed_currencies: PropTypes.array,\n    has_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n    form_error: PropTypes.string,\n    onSubmit: PropTypes.func,\n    should_show_cancel: PropTypes.bool,\n    should_show_crypto_only: PropTypes.bool,\n    should_show_fiat_only: PropTypes.bool,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n        currency: PropTypes.string,\n    }),\n    onClickBack: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n};\n\nexport default connect(({ client, ui }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    has_fiat: client.has_fiat,\n    should_show_cancel: ui.should_show_cancel,\n}))(AddCryptoCurrency);\n","const currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n    const result = [];\n    legal_allowed_currencies.forEach(currency => {\n        result.push({\n            ...currency,\n            has_payment_agent: !!all_payment_agent_list?.filter(agent => agent.currencies === currency.value).length,\n            is_disabled: account_list?.some(account => account.title === currency.value && account.is_disabled),\n        });\n    });\n    return result;\n};\n\nexport default {\n    currenciesPaymentAgentAvailability,\n};\n","import { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { FormSubmitButton, Icon, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile, reorderCurrencies, routes } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport CurrencyProvider from './choose-currency';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst AddCurrency = ({\n    available_crypto_currencies,\n    has_fiat,\n    legal_allowed_currencies,\n    onSubmit,\n    openRealAccountSignup,\n    setShouldShowAllAvailableCurrencies,\n    deposit_target,\n    hasNoAvailableCrypto,\n    is_add_crypto,\n    is_add_fiat,\n}) => {\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    const getReorderedCurrencies = React.useMemo(() => {\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list\n        );\n\n        const crypto = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === CRYPTO_CURRENCY_TYPE &&\n                    available_crypto_currencies.some(x => x.value === currency.value)\n            ),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n        const fiat = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === FIAT_CURRENCY_TYPE &&\n                    !available_crypto_currencies.some(x => x.value === currency.value)\n            )\n        );\n\n        return {\n            crypto,\n            fiat,\n        };\n    }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n\n    const onClickBack = () => {\n        openRealAccountSignup('choose');\n        if (deposit_target === routes.cashier_pa) {\n            setShouldShowAllAvailableCurrencies(true);\n        }\n    };\n\n    const AddFiat = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Fiat currencies')}\n                </Text>\n                {!!has_fiat && (\n                    <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                        {localize('You are limited to one fiat account only.')}\n                    </Text>\n                )}\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.fiat.length}\n                    >\n                        {getReorderedCurrencies.fiat.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={has_fiat}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    const AddCrypto = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Cryptocurrencies')}\n                </Text>\n                <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                    {localize('You can open an account for each cryptocurrency.')}\n                </Text>\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.crypto.length}\n                    >\n                        {getReorderedCurrencies.crypto.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={deposit_target === routes.cashier_pa ? !currency.has_payment_agent : false}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    if (is_add_crypto)\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div\n                    className={classNames('add-crypto-currency cashier-deposit', {\n                        'account-wizard--disabled': hasNoAvailableCrypto(),\n                    })}\n                >\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        onClickBack={onClickBack}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_crypto_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n\n    if (is_add_fiat) {\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div className='change-currency'>\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_fiat_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                        is_add_fiat\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={(values, actions) => {\n                onSubmit(false, values, actions.setSubmitting);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 190 : '460px'}>\n                        <div>\n                            <Text\n                                as='p'\n                                color='prominent'\n                                weight='bold'\n                                align='center'\n                                className='add-currency__wizard-header'\n                            >\n                                {localize('Choose your currency')}\n                            </Text>\n\n                            <AddFiat />\n                            <div className='add-currency__underline' />\n                            <AddCrypto />\n                        </div>\n                    </ThemedScrollbars>\n                    <div className='add-currency__note-wrapper'>\n                        <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__note'>\n                            {localize('Some currencies may not be supported by payment agents in your country.')}\n                        </Text>\n                    </div>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute\n                        form_error={form_error}\n                        has_cancel\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nAddCurrency.propTypes = {\n    available_crypto_currencies: PropTypes.array,\n    has_fiat: PropTypes.bool,\n    legal_allowed_currencies: PropTypes.array,\n    openRealAccountSignup: PropTypes.func,\n    setShouldShowAllAvailableCurrencies: PropTypes.func,\n    deposit_target: PropTypes.string,\n    onSubmit: PropTypes.func,\n    is_add_crypto: PropTypes.bool,\n    is_add_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n};\n\nexport default connect(({ client, modules, ui }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    has_fiat: client.has_fiat,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    setShouldShowAllAvailableCurrencies: modules.cashier.general_store.setShouldShowAllAvailableCurrencies,\n    deposit_target: modules.cashier.general_store.deposit_target,\n}))(AddCurrency);\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Text } from '@deriv/components';\nimport { isMobile, reorderCurrencies } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { localize, Localize } from '@deriv/translations';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst ChangeAccountCurrency = ({\n    legal_allowed_currencies,\n    value,\n    onSubmit,\n    form_error,\n    can_change_fiat_currency,\n    client_currency,\n    current_currency_type,\n    current_fiat_currency,\n    closeRealAccountSignup,\n}) => {\n    const getReorderedCurrencies = () =>\n        reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n\n    const is_fiat = current_currency_type === 'fiat';\n    const fiat_message = (\n        <Localize\n            i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n            components={[\n                <span\n                    key={0}\n                    className='link link--orange'\n                    onClick={() => {\n                        closeRealAccountSignup();\n                        window.LC_API.open_chat_window();\n                    }}\n                />,\n            ]}\n        />\n    );\n\n    const non_fiat_mesage = (\n        <Localize\n            i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n            values={{\n                fiat_currency: current_fiat_currency?.toUpperCase?.(),\n            }}\n        />\n    );\n\n    const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n\n    return (\n        <Formik\n            initialValues={{\n                fiat: value.fiat,\n            }}\n            onSubmit={(values, actions) => {\n                onSubmit(false, values, actions.setSubmitting);\n            }}\n        >\n            {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                <form\n                    onSubmit={e => {\n                        e.preventDefault();\n                        handleSubmit();\n                    }}\n                >\n                    <Text as='h1' color='prominent' weight='bold' align='center' className='change-currency__title'>\n                        <Localize i18n_default_text='Change your currency' />\n                    </Text>\n                    <Text as='h3' size='xxs' align='center' className='change-currency__sub-title'>\n                        <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                    </Text>\n                    {!can_change_fiat_currency && (\n                        <div className='account-wizard--disabled-message'>\n                            <Text\n                                as='p'\n                                align='center'\n                                size='xxs'\n                                className='account-wizard--disabled-message-description'\n                            >\n                                {disabled_message}\n                            </Text>\n                        </div>\n                    )}\n                    <CurrencyRadioButtonGroup\n                        id='fiat'\n                        label={localize('Cryptocurrencies')}\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        value={values.fiat}\n                        error={errors.fiat}\n                        touched={touched.fiat}\n                        is_title_enabled={false}\n                        item_count={getReorderedCurrencies().length}\n                    >\n                        {getReorderedCurrencies().map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='fiat'\n                                id={currency.value}\n                                label={currency.name}\n                                selected={currency.value === client_currency}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                    <FormSubmitButton\n                        className='change-currency__button'\n                        is_disabled={isSubmitting || !values.fiat}\n                        label={localize('Change currency')}\n                        is_absolute={!isMobile()}\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nChangeAccountCurrency.propTypes = {\n    legal_allowed_currencies: PropTypes.array,\n    onSubmit: PropTypes.func,\n    closeModal: PropTypes.func,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n    }),\n    form_error: PropTypes.string,\n    can_change_fiat_currency: PropTypes.bool,\n    currency: PropTypes.string,\n    current_currency_type: PropTypes.string,\n    current_fiat_currency: PropTypes.string,\n    client_currency: PropTypes.string,\n    closeRealAccountSignup: PropTypes.func,\n};\n\nexport default connect(({ client, ui }) => ({\n    legal_allowed_currencies: client.upgradeable_currencies,\n    client_currency: client.currency,\n    current_fiat_currency: client.current_fiat_currency,\n    closeRealAccountSignup: ui.closeRealAccountSignup,\n}))(ChangeAccountCurrency);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tabs, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { WS } from 'Services';\nimport { connect } from 'Stores/connect';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nconst AddOrManageAccounts = props => {\n    const {\n        available_crypto_currencies,\n        can_change_fiat_currency,\n        createCryptoAccount,\n        current_currency_type,\n        deposit_target,\n        has_fiat,\n        is_add_crypto,\n        is_add_currency,\n        is_add_fiat,\n        is_loading,\n        manage_real_account_tab_index,\n        onError,\n        onSuccessSetAccountCurrency,\n        resetRealAccountSignupTarget,\n        setCurrency,\n        setLoading,\n        setIsDeposit,\n        setShouldShowCancel,\n        onClose,\n        show_eu_related_content,\n        is_low_risk,\n        loginid,\n    } = props;\n\n    const initial_active_index =\n        manage_real_account_tab_index ?? (has_fiat && available_crypto_currencies?.length === 0) ? 1 : 0;\n\n    const [active_index, setActiveIndex] = React.useState(initial_active_index);\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n\n    React.useEffect(() => {\n        const fetchMt5LoginList = async () => {\n            setLoading(true);\n            await WS.mt5LoginList();\n            setLoading(false);\n        };\n        fetchMt5LoginList();\n        return () => setShouldShowCancel(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setActiveTabIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const manageOrChangeAccount = (obj, setSubmitting) => {\n        setLoading(true);\n        Object.entries(obj).map(([key, value]) => {\n            if (key === 'fiat') {\n                setCurrency(value)\n                    .then(response => {\n                        setSubmitting(false);\n                        onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency,\n                            deposit_target\n                        );\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            } else {\n                // Add Crypto Account\n                createCryptoAccount(value)\n                    .then(() => {\n                        onSuccessSetAccountCurrency('', value, deposit_target);\n                        setSubmitting(false);\n                        resetRealAccountSignupTarget();\n                        setIsDeposit(true);\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            }\n        });\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        manageOrChangeAccount(value, setSubmitting);\n    };\n\n    const hasNoAvailableCrypto = () => {\n        return available_crypto_currencies.length === 0 && has_fiat;\n    };\n\n    if (is_loading) return <LoadingModal />;\n\n    const fiat_section = has_fiat && (\n        <div\n            className={classNames('change-currency', {\n                'account-wizard--disabled': !can_change_fiat_currency,\n            })}\n        >\n            <ChangeAccountCurrency\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                can_change_fiat_currency={can_change_fiat_currency}\n                current_currency_type={current_currency_type}\n                closeModal={onClose}\n            />\n        </div>\n    );\n\n    if (is_add_currency || is_add_crypto || is_add_fiat) {\n        return (\n            <AddCurrency\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                should_show_crypto_only\n                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                is_add_crypto={is_add_crypto}\n                is_add_fiat={is_add_fiat}\n                is_add_currency={is_add_currency}\n            />\n        );\n    }\n\n    const is_mf_active = loginid?.startsWith('MF');\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n            {(show_eu_related_content && !is_low_risk && has_fiat) || is_mf_active ? (\n                fiat_section\n            ) : (\n                <Tabs\n                    active_index={active_index}\n                    className='account-wizard add-or-manage tabs--desktop'\n                    onTabItemClick={setActiveTabIndex}\n                    top\n                    header_fit_content={isDesktop()}\n                >\n                    <div label={localize('Cryptocurrencies')}>\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': hasNoAvailableCrypto(),\n                            })}\n                        >\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={updateValue}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_crypto_only\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        </div>\n                    </div>\n                    <div label={localize('Fiat currencies')}>\n                        {has_fiat ? (\n                            fiat_section\n                        ) : (\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={updateValue}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_fiat_only={true}\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        )}\n                    </div>\n                </Tabs>\n            )}\n        </ThemedScrollbars>\n    );\n};\n\nAddOrManageAccounts.propTypes = {\n    available_crypto_currencies: PropTypes.arrayOf({\n        fractional_digits: PropTypes.number,\n        is_deposit_suspended: PropTypes.number,\n        is_suspended: PropTypes.number,\n        is_withdrawal_suspended: PropTypes.number,\n        name: PropTypes.string,\n        stake_default: PropTypes.number,\n        transfer_between_accounts: PropTypes.object,\n        type: PropTypes.string,\n        value: PropTypes.string,\n    }),\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onLoading: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n    setCurrency: PropTypes.func,\n    createCryptoAccount: PropTypes.func,\n    has_fiat: PropTypes.bool,\n    can_change_fiat_currency: PropTypes.bool,\n    current_currency_type: PropTypes.string,\n    is_loading: PropTypes.bool,\n    is_add_crypto: PropTypes.bool,\n    setLoading: PropTypes.func,\n    setShouldShowCancel: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n    is_add_currency: PropTypes.bool,\n    deposit_target: PropTypes.string,\n    resetRealAccountSignupTarget: PropTypes.func,\n    setIsDeposit: PropTypes.func,\n    manage_real_account_tab_index: PropTypes.number,\n    show_eu_related_content: PropTypes.bool,\n    is_low_risk: PropTypes.bool,\n    loginid: PropTypes.string,\n};\n\nexport default connect(({ client, modules, ui, traders_hub }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    can_change_fiat_currency: client.can_change_fiat_currency,\n    current_currency_type: client.current_currency_type,\n    current_fiat_currency: client.current_fiat_currency,\n    has_fiat: client.has_fiat,\n    manage_real_account_tab_index: ui.manage_real_account_tab_index,\n    setCurrency: client.setAccountCurrency,\n    setShouldShowCancel: ui.setShouldShowCancel,\n    createCryptoAccount: client.createCryptoAccount,\n    resetRealAccountSignupTarget: ui.resetRealAccountSignupTarget,\n    setIsDeposit: modules.cashier.general_store.setIsDeposit,\n    show_eu_related_content: traders_hub.show_eu_related_content,\n    is_low_risk: client.is_low_risk,\n    loginid: client.loginid,\n}))(AddOrManageAccounts);\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { reorderCurrencies, routes } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst ChooseCurrency = ({\n    account_list,\n    available_crypto_currencies,\n    closeRealAccountSignup,\n    continueRouteAfterChooseCrypto,\n    currency_title,\n    deposit_target,\n    has_fiat,\n    legal_allowed_currencies,\n    openRealAccountSignup,\n    switchAccount,\n    should_show_all_available_currencies,\n    setShouldShowCancel,\n    setShouldShowAllAvailableCurrencies,\n}) => {\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '' });\n\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    React.useEffect(() => {\n        return () => setShouldShowAllAvailableCurrencies(false);\n    }, [setShouldShowAllAvailableCurrencies]);\n\n    const getReorderedCryptoCurrencies = React.useMemo(() => {\n        const hasAllCryptos = () => {\n            return (\n                legal_allowed_currencies?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)\n                ).length === 0\n            );\n        };\n\n        const addNewCryptoAccount = () => {\n            openRealAccountSignup(deposit_target === routes.cashier_pa ? 'add_currency' : 'add_crypto');\n            setShouldShowCancel(true);\n        };\n\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list,\n            account_list\n        );\n\n        const reorderCryptoCurrencies = should_show_all_available_currencies\n            ? reorderCurrencies(\n                  allowed_currencies_payment_agent_availability?.filter(currency =>\n                      account_list.some(x => x.title === currency.value)\n                  ),\n                  CRYPTO_CURRENCY_TYPE\n              )\n            : reorderCurrencies(\n                  allowed_currencies_payment_agent_availability?.filter(\n                      currency =>\n                          currency.type === CRYPTO_CURRENCY_TYPE &&\n                          !available_crypto_currencies.some(x => x.value === currency.value)\n                  ),\n                  CRYPTO_CURRENCY_TYPE\n              );\n\n        const show_add_button = deposit_target === routes.cashier_pa ? !has_fiat || !hasAllCryptos() : !hasAllCryptos();\n\n        if (show_add_button) {\n            reorderCryptoCurrencies.push({\n                value: 'plus',\n                name: deposit_target === routes.cashier_pa ? localize('Add a new') : localize('Add new'),\n                second_line_label:\n                    deposit_target === routes.cashier_pa ? localize('account') : localize('crypto account'),\n                icon: 'IcAddAccount',\n                onClick: () => addNewCryptoAccount(),\n                has_payment_agent: true,\n            });\n        }\n\n        return reorderCryptoCurrencies;\n    }, [\n        account_list,\n        all_payment_agent_list,\n        available_crypto_currencies,\n        deposit_target,\n        has_fiat,\n        legal_allowed_currencies,\n        should_show_all_available_currencies,\n        openRealAccountSignup,\n        setShouldShowCancel,\n    ]);\n\n    const doSwitch = async value => {\n        const target_account = account_list.filter(account => account.title === value);\n        const loginid = target_account.map(x => x.loginid)[0];\n        if (loginid) await switchAccount(loginid);\n    };\n\n    const onSubmit = async obj => {\n        Object.entries(obj).map(([title, value]) => {\n            if (title) {\n                closeRealAccountSignup();\n                if (value !== currency_title) {\n                    doSwitch(value);\n                }\n                continueRouteAfterChooseCrypto();\n            }\n        });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={values => {\n                onSubmit(values);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n                        {deposit_target === routes.cashier_pa\n                            ? localize('Choose an account or add a new one')\n                            : localize('Choose one of your accounts or add a new cryptocurrency account')}\n                    </Text>\n                    <ThemedScrollbars>\n                        {is_loading ? (\n                            <Loading is_fullscreen={false} className='currency-list__loading-wrapper' />\n                        ) : (\n                            <CurrencyRadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                item_count={getReorderedCryptoCurrencies.length}\n                            >\n                                {getReorderedCryptoCurrencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={CurrencyRadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        icon={currency.icon}\n                                        second_line_label={currency.second_line_label}\n                                        onClick={currency.onClick}\n                                        selected={\n                                            currency.is_disabled || deposit_target === routes.cashier_pa\n                                                ? !currency.has_payment_agent\n                                                : false\n                                        }\n                                    />\n                                ))}\n                            </CurrencyRadioButtonGroup>\n                        )}\n                    </ThemedScrollbars>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Continue')}\n                        is_absolute\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n};\n\nChooseCurrency.propTypes = {\n    account_list: PropTypes.array,\n    available_crypto_currencies: PropTypes.array,\n    closeRealAccountSignup: PropTypes.func,\n    continueRouteAfterChooseCrypto: PropTypes.func,\n    currency_title: PropTypes.string,\n    deposit_target: PropTypes.string,\n    has_fiat: PropTypes.bool,\n    legal_allowed_currencies: PropTypes.array,\n    openRealAccountSignup: PropTypes.func,\n    setShouldShowAllAvailableCurrencies: PropTypes.func,\n    setShouldShowCancel: PropTypes.func,\n    should_show_all_available_currencies: PropTypes.bool,\n    switchAccount: PropTypes.func,\n};\n\nexport default connect(({ client, modules, ui }) => ({\n    account_list: client.account_list,\n    available_crypto_currencies: client.available_crypto_currencies,\n    closeRealAccountSignup: ui.closeRealAccountSignup,\n    continueRouteAfterChooseCrypto: ui.continueRouteAfterChooseCrypto,\n    currency_title: client.currency,\n    deposit_target: modules.cashier.general_store.deposit_target,\n    has_fiat: client.has_fiat,\n    legal_allowed_currencies: client.upgradeable_currencies,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    setShouldShowCancel: ui.setShouldShowCancel,\n    switchAccount: client.switchAccount,\n    should_show_all_available_currencies: modules.cashier.general_store.should_show_all_available_currencies,\n    setShouldShowAllAvailableCurrencies: modules.cashier.general_store.setShouldShowAllAvailableCurrencies,\n}))(ChooseCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedAddCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit,\n}) => {\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n        redirectToLegacyPlatform();\n    };\n\n    const onCancel = () => {\n        closeRealAccountSignup();\n        setIsDeposit(false);\n        redirectToLegacyPlatform();\n    };\n\n    return (\n        <React.Fragment>\n            {isDesktop() && (\n                <div onClick={onCancel} className='finished-add-currency__close'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n            <Div100vhContainer className='finished-add-currency__dialog' is_disabled={isDesktop()} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__header', {\n                        'status-dialog__header--center': isMobile(),\n                    })}\n                >\n                    <IconNextCurrency />\n                    <IconWon className='bottom-right-overlay' />\n                </div>\n                <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                        <Localize i18n_default_text='Your account is ready' />\n                    </Text>\n                    <Text as='p' align='center'>\n                        <Localize i18n_default_text='Fund your account to start trading.' />\n                    </Text>\n                </div>\n                <div className='finished-add-currency__footer'>\n                    <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                    <Button\n                        onClick={\n                            ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                                ? closeModalThenOpenCashier\n                                : onSubmit\n                        }\n                        text={localize('Deposit now')}\n                        primary\n                    />\n                </div>\n            </Div100vhContainer>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(FinishedAddCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst SuccessMessage = ({ prev, current }) =>\n    prev ? (\n        <Localize\n            i18n_default_text={\n                '<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text={\n                '<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    );\n\nconst FinishedSetCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit,\n}) => {\n    const IconPrevCurrency = () =>\n        prev ? <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} /> : null;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => (prev ? <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} /> : null);\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n    };\n\n    const closeModal = () => {\n        onCancel();\n        setIsDeposit(false);\n    };\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--center': isMobile(),\n                    'status-dialog__header--set-currency': prev,\n                })}\n            >\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Success!' />\n                </Text>\n                <SuccessMessage prev={prev} current={current} />\n            </div>\n            <div className='status-dialog__footer'>\n                <Button onClick={closeModal} text={localize('Maybe later')} secondary />\n                <Button\n                    onClick={\n                        ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                            ? closeModalThenOpenCashier\n                            : onSubmit\n                    }\n                    text={localize('Deposit now')}\n                    primary\n                />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default React.memo(FinishedSetCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { currencySelectorConfig } from '@deriv/account';\nimport { website_name, generateValidationFunction } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport { connect } from 'Stores/connect';\nimport CurrencySelector from '@deriv/account/src/Components/currency-selector';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/set-currency.scss';\nimport 'Sass/change-account.scss';\n\nconst SetCurrency = ({\n    setLoading,\n    onSuccessSetAccountCurrency,\n    onError,\n    available_crypto_currencies,\n    has_fiat,\n    landing_company_shortcode,\n    is_loading,\n    ...props\n}) => {\n    const form_error = React.useState('');\n    const form_value = React.useState({ currency: '' });\n\n    const setCurrency = (obj, setSubmitting) => {\n        setLoading(true);\n        const { currency } = obj;\n        if (currency) {\n            props\n                .setCurrency(currency)\n                .then(response => {\n                    setSubmitting(false);\n                    onSuccessSetAccountCurrency('', response.echo_req.set_account_currency);\n                })\n                .catch(error_message => {\n                    onError(error_message);\n                })\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        setCurrency(value, setSubmitting);\n    };\n\n    const noCryptoAvailable = () => {\n        return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n    };\n\n    if (is_loading) return <LoadingModal />;\n    return (\n        <div\n            className={classNames('set-currency-modal', {\n                'set-currency-modal--disabled': noCryptoAvailable(),\n            })}\n        >\n            {noCryptoAvailable() && (\n                <div className='set-currency-modal--disabled-message'>\n                    <p>\n                        {localize(\n                            'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                            {\n                                deriv: website_name,\n                            }\n                        )}\n                    </p>\n                </div>\n            )}\n            <div className='set-currency-modal__heading-container'>\n                <Text\n                    as='p'\n                    size='xs'\n                    line_height='s'\n                    align='center'\n                    className='set-currency-modal__heading-container__main-heading'\n                >\n                    {localize(\n                        'You have an account that do not have currency assigned. Please choose a currency to trade with this account.'\n                    )}\n                </Text>\n                <Text\n                    as='p'\n                    weight='bold'\n                    align='center'\n                    className='set-currency-modal__heading-container__sub-heading'\n                >\n                    {localize('Please choose your currency')}\n                </Text>\n            </div>\n            <CurrencySelector\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                set_currency\n                validate={generateValidationFunction(landing_company_shortcode, currencySelectorConfig)}\n                {...props}\n            />\n        </div>\n    );\n};\n\nexport default connect(({ client }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    can_change_fiat_currency: client.can_change_fiat_currency,\n    currency: client.currency,\n    current_currency_type: client.current_currency_type,\n    current_fiat_currency: client.current_fiat_currency,\n    is_eu: client.is_eu,\n    has_fiat: client.has_fiat,\n    landing_company_shortcode: client.landing_company_shortcode,\n    setCurrency: client.setAccountCurrency,\n    createCryptoAccount: client.createCryptoAccount,\n}))(SetCurrency);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile, getSignupFormFields } from '@deriv/shared';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst Heading = ({ code }) => {\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Already signed up?' />\n                </Text>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text as='h2' size={isMobile() ? 'xs' : 's'} align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='You can’t add another real account' />\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <Text as='h1' align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='Invalid inputs' />\n                </Text>\n            );\n\n        default:\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Something’s not right' />\n                </Text>\n            );\n    }\n};\n\nconst Message = ({ code, message, details }) => {\n    if (code === 'PoBoxInAddress') {\n        details.error_details = { address_line_1: message };\n    } else if (code === 'InvalidPhone') {\n        details.error_details = { phone: message };\n    }\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <p>\n                    <Localize i18n_default_text='An account with your details already exists.' />\n                    <br />\n                    <Localize\n                        i18n_default_text=\"If you're having trouble signing in, let us know via <0>chat</0>\"\n                        components={[\n                            <span className='chat-inline' key={0} onClick={() => window.LC_API.open_chat_window()} />,\n                        ]}\n                    />\n                </p>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text size={isMobile() ? 'xxs' : 'xs'} align='center'>\n                    {message}\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <div className='input_validation_failed'>\n                    <Text align='center' weight='normal' line_height='xxl'>\n                        <Localize i18n_default_text='We don’t accept the following inputs for:' />\n                    </Text>\n                    {Object.keys(details?.error_details).map(item => (\n                        <div key={item} className='invalid_fields_input'>\n                            <Text size='xs' weight='bold'>\n                                {getSignupFormFields()[item]}\n                            </Text>\n                            <Text size='xs' weight='bold'>\n                                {' : '}\n                            </Text>\n                            <Text size='xs'>{details[item]}</Text>\n                        </div>\n                    ))}\n                </div>\n            );\n\n        default:\n            return <p>{message}</p>;\n    }\n};\n\nconst TryAgain = ({ text, onConfirm }) => (\n    <Button primary onClick={onConfirm} large>\n        {text}\n    </Button>\n);\n\nconst ErrorCTA = ({ code, onConfirm }) => {\n    switch (code) {\n        case 'DuplicateCurrency':\n        case 'CurrencyTypeNotAllowed':\n            return <TryAgain text={localize('Try a different currency')} onConfirm={onConfirm} />;\n        case 'DuplicateAccount':\n            return null;\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return <TryAgain text={localize('Let’s try again')} onConfirm={onConfirm} />;\n        case 'InvalidAccount':\n            return <TryAgain text={localize('OK')} onConfirm={onConfirm} />;\n\n        default:\n            return (\n                <StaticUrl\n                    href={`help-centre/${code === 'InvalidAccount' ? 'account#who-can-open-an-account' : ''}`}\n                    type='button'\n                    className='dc-btn dc-btn--primary'\n                >\n                    <Text weight='bold' color='white' size='xxs'>\n                        <Localize i18n_default_text='OK' />\n                    </Text>\n                </StaticUrl>\n            );\n    }\n};\n\nconst SignupErrorContent = ({ message, code, onConfirm, className, error_field = {} }) => {\n    const is_invalid_field_error = ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(code);\n    const getIconSize = () => {\n        if (is_invalid_field_error) return '64';\n        else if (code === 'InvalidAccount') return '96';\n        return '115';\n    };\n    return (\n        <div\n            className={classNames('account-wizard--error', {\n                [`account-wizard--error__${className}`]: className,\n            })}\n        >\n            <Icon icon={is_invalid_field_error ? 'IcInvalidError' : 'IcAccountError'} size={getIconSize()} />\n            <Heading code={code} />\n            <Message code={code} message={message} details={error_field} />\n            <ErrorCTA code={code} onConfirm={onConfirm} />\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    error_field: PropTypes.object,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default SignupErrorContent;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n * @component\n *\n * @param {EXPERIAN} status - Experian result\n */\nconst IOMHeading = ({ status }) => (\n    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n        {status === EXPERIAN.SUCCESS && <Localize i18n_default_text='Your account is ready' />}\n        {status === EXPERIAN.WARN && <Localize i18n_default_text='Please verify your address' />}\n        {status === EXPERIAN.DANGER && <Localize i18n_default_text='Please verify your identity and address' />}\n        {status === EXPERIAN.PENDING && <Localize i18n_default_text=\"We're processing your personal information\" />}\n    </Text>\n);\n\n/**\n * @component\n * Get the title to use in the dialog\n *\n * @param {EXPERIAN} status\n * @param {string} landing_company_shortcode\n *\n * @return {null|*}\n */\nexport const DialogHeading = ({ status, landing_company_shortcode }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            return <IOMHeading status={status} />;\n        default:\n            return (\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Your account is ready' />\n                </Text>\n            );\n    }\n};\n\nDialogHeading.propTypes = {\n    status: PropTypes.number.isRequired,\n    landing_company_shortcode: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({\n    country_standpoint,\n    is_fully_authenticated,\n    landing_company_shortcode,\n    status = EXPERIAN.SUCCESS,\n}) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        if (is_fully_authenticated) {\n            message = [\n                <Localize key={0} i18n_default_text='You have added a Deriv Financial account.' />,\n                <Localize key={1} i18n_default_text='Make a deposit now to start trading.' />,\n            ];\n        } else {\n            message = (\n                <Localize i18n_default_text='We need proof of your identity and address before you can start trading.' />\n            );\n        }\n    } else if (landing_company_shortcode === 'malta') {\n        if (\n            (country_standpoint.is_united_kingdom && is_fully_authenticated) ||\n            country_standpoint.is_rest_of_eu ||\n            country_standpoint.is_belgium\n        ) {\n            message = (\n                <Localize\n                    i18n_default_text='You have added a real Options account.<0/>Make a deposit now to start trading.'\n                    components={[<br key={0} />]}\n                />\n            );\n        }\n    } else if (landing_company_shortcode === 'iom') {\n        if (country_standpoint.is_united_kingdom && is_fully_authenticated) {\n            message = (\n                <Localize\n                    i18n_default_text='You have added a real Gaming account.<0/>Make a deposit now to start trading.'\n                    components={[<br key={0} />]}\n                />\n            );\n        }\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = <Localize i18n_default_text='To get trading, please confirm where you live.' />;\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='To get trading, please confirm who you are, and where you live.' />\n                );\n                break;\n            case EXPERIAN.PENDING:\n                message = (\n                    <Localize i18n_default_text=\"You'll be able to get trading as soon as verification is complete.\" />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return Array.isArray(message) ? (\n        <>\n            {message.map((text, index) => (\n                <Text\n                    key={index}\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                >\n                    {text}\n                </Text>\n            ))}\n        </>\n    ) : (\n        <Text as='p' align='center' className='status-dialog__message-text' color='general' size='xs'>\n            {message}\n        </Text>\n    );\n};\n\nDialogMessage.propTypes = {\n    country_standpoint: PropTypes.object,\n    currency: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    is_isle_of_man_residence: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual }) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.SUCCESS) {\n                return {\n                    label: localize('Maybe later'),\n                    action: closeModal,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Trade on demo'),\n                    action: () => {\n                        closeModal();\n                        switchToVirtual();\n                    },\n                };\n            }\n            // Danger\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n        // case 'svg':\n        default:\n            return {\n                label: localize('Maybe later'),\n                action: closeModal,\n            };\n    }\n};\n\nconst getActionButton = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'iom':\n            if (status === EXPERIAN.DANGER) {\n                return {\n                    label: localize('Submit proofs'),\n                    action: closeModalAndOpenPOI,\n                };\n            } else if (status === EXPERIAN.WARN) {\n                return {\n                    label: localize('Submit proof'),\n                    action: closeModalAndOpenPOA,\n                };\n            } else if (status === EXPERIAN.PENDING) {\n                return {\n                    label: localize('OK'),\n                    action: closeModal,\n                };\n            }\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n        case 'maltainvest':\n            if (is_fully_authenticated) {\n                return {\n                    label: localize('Deposit'),\n                    action: closeModalAndOpenCashier,\n                };\n            }\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        case 'malta':\n        default:\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        is_fully_authenticated,\n        closeModal,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ status, landing_company_shortcode, closeModal, switchToVirtual, is_bypassed }) => {\n    if (is_bypassed) return null;\n    const { label, action } = getDismissButton({\n        status,\n        landing_company_shortcode,\n        closeModal,\n        switchToVirtual,\n    });\n\n    return <Button secondary text={label} onClick={action} />;\n};\n\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n    switchToVirtual,\n}) => {\n    return (\n        <div className='status-dialog__footer'>\n            <DialogDismissButton\n                closeModal={closeModal}\n                is_bypassed={status === EXPERIAN.PENDING}\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                switchToVirtual={switchToVirtual}\n            />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModal={closeModal}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                is_fully_authenticated={is_fully_authenticated}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOA: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n    switchToVirtual: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes, isDesktop, isMobile } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\nconst CloseIcon = ({ closeModal }) => (\n    <div onClick={closeModal} className='status-dialog__close'>\n        <Icon icon='IcCross' />\n    </div>\n);\n\nconst StatusDialogContainer = ({\n    closeModal,\n    country_standpoint,\n    currency,\n    history,\n    icon_size,\n    is_age_verified,\n    is_belgium_residence,\n    is_fully_authenticated,\n    is_isle_of_man_residence,\n    landing_company_shortcode,\n    switchToVirtual,\n}) => {\n    const closeModalAndOpenCashier = () => {\n        closeModal();\n        history.push(routes.cashier_deposit);\n    };\n\n    const closeModalAndOpenPOI = () => {\n        closeModal();\n        history.push(routes.proof_of_identity);\n    };\n\n    const closeModalAndOpenPOA = () => {\n        closeModal();\n        history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n            is_fully_authenticated,\n            is_age_verified,\n            is_isle_of_man_residence,\n            is_belgium_residence,\n        });\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            {isDesktop() && <CloseIcon closeModal={closeModal} />}\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--large': icon_size === 'large',\n                    'status-dialog__header--xlarge': icon_size === 'xlarge',\n                })}\n            >\n                <MainIcon currency={currency} />\n                {getStatus() === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n            </div>\n            <div\n                className={classNames('status-dialog__body', {\n                    'status-dialog__body--no-grow': isMobile(),\n                })}\n            >\n                <DialogHeading status={getStatus()} landing_company_shortcode={landing_company_shortcode} />\n                <DialogMessage\n                    country_standpoint={country_standpoint}\n                    currency={currency}\n                    is_fully_authenticated={is_fully_authenticated}\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={getStatus()}\n                />\n            </div>\n            <DialogButtons\n                closeModal={closeModal}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                is_fully_authenticated={is_fully_authenticated}\n                landing_company_shortcode={landing_company_shortcode}\n                status={getStatus()}\n                switchToVirtual={switchToVirtual}\n            />\n        </Div100vhContainer>\n    );\n};\n\nStatusDialogContainer.defaultProps = {\n    icon_size: 'large',\n};\n\nStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    country_standpoint: PropTypes.object,\n    currency: PropTypes.string,\n    history: PropTypes.object,\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n    is_age_verified: PropTypes.bool,\n    is_belgium_residence: PropTypes.bool,\n    is_fully_authenticated: PropTypes.bool,\n    is_isle_of_man_residence: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    switchToVirtual: PropTypes.func,\n};\n\nexport default connect(({ client }) => ({\n    country_standpoint: client.country_standpoint,\n    landing_company_shortcode: client.landing_company_shortcode,\n    is_fully_authenticated: client.is_fully_authenticated,\n    is_age_verified: client.is_age_verified,\n    is_isle_of_man_residence: client.residence === 'im', // TODO: [deriv-eu] refactor this once more residence checks are required\n    is_belgium_residence: client.residence === 'be', // TODO: [deriv-eu] refactor this once more residence checks are required\n    switchToVirtual: () => client.switchAccount(client.virtual_account_loginid),\n}))(withRouter(StatusDialogContainer));\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { RiskToleranceWarningModal, TestWarningModal } from '@deriv/account';\nimport { Button, DesktopWrapper, MobileDialog, MobileWrapper, Modal, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { connect } from 'Stores/connect';\n\nimport AccountWizard from './account-wizard.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport ChooseCurrency from './choose-currency.jsx';\nimport FinishedAddCurrency from './finished-add-currency.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SetCurrency from './set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\n\nimport 'Sass/account-wizard.scss';\nimport 'Sass/real-account-signup.scss';\n\nconst modal_pages_indices = {\n    account_wizard: 0,\n    add_or_manage_account: 1,\n    finished_set_currency: 2,\n    status_dialog: 3,\n    set_currency: 4,\n    signup_error: 5,\n    choose_crypto_currency: 6,\n    add_currency: 7,\n    finished_add_currency: 8,\n    restricted_country_signup_error: 9,\n    invalid_input_error: 10,\n};\n\nconst WizardHeading = ({ country_standpoint, currency, is_isle_of_man_residence, real_account_signup_target }) => {\n    const maltainvest_signup = real_account_signup_target === 'maltainvest';\n    const iom_signup = real_account_signup_target === 'iom';\n    const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n\n    if (!maltainvest_signup && !currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (deposit_cash_signup) {\n        return <Localize i18n_default_text='Add a Deriv Gaming account' />;\n    }\n\n    if (iom_signup && is_isle_of_man_residence) {\n        return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'malta':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_rest_of_eu ||\n                country_standpoint.is_belgium\n            ) {\n                return <Localize i18n_default_text='Add a real Deriv Options account' />;\n            }\n            return <Localize i18n_default_text='Add a Derived account' />;\n        case 'iom':\n            if (country_standpoint.is_united_kingdom) {\n                return <Localize i18n_default_text='Add a real Deriv Gaming account' />;\n            }\n            return <Localize i18n_default_text='Add a Derived account' />;\n        case 'maltainvest':\n            if (\n                country_standpoint.is_united_kingdom ||\n                country_standpoint.is_france ||\n                country_standpoint.is_other_eu ||\n                country_standpoint.is_rest_of_eu\n            ) {\n                return <Localize i18n_default_text='Add a real Deriv Multipliers account' />;\n            }\n            return <Localize i18n_default_text='Add a Deriv Financial account' />;\n        case 'samoa':\n            return <Localize i18n_default_text='Terms of use' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nconst RealAccountSignup = ({\n    available_crypto_currencies,\n    closeRealAccountSignup,\n    country_standpoint,\n    currency,\n    deposit_real_account_signup_target,\n    deposit_target,\n    redirectToLegacyPlatform,\n    fetchAccountSettings,\n    has_fiat,\n    has_real_account,\n    history,\n    is_belgium_residence,\n    show_eu_related_content,\n    is_from_restricted_country,\n    is_isle_of_man_residence,\n    is_real_acc_signup_on,\n    real_account_signup_target,\n    realAccountSignup,\n    setIsDeposit,\n    setIsTradingAssessmentForNewUserEnabled,\n    setIsClosingCreateRealAccountModal,\n    setParams,\n    setShouldShowAppropriatenessWarningModal,\n    setShouldShowRiskWarningModal,\n    should_show_all_available_currencies,\n    should_show_appropriateness_warning_modal,\n    should_show_risk_warning_modal,\n    state_index,\n    state_value,\n    is_trading_experience_incomplete,\n    is_trading_assessment_for_new_user_enabled,\n}) => {\n    const [current_action, setCurrentAction] = React.useState(null);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [is_risk_warning_visible, setIsRiskWarningVisible] = React.useState(false);\n    const [real_account_form_data, setRealAccountFormData] = React.useState({});\n    const [risk_warning_title, setRiskWarningTitle] = React.useState('');\n    const [modal_content] = React.useState([\n        {\n            action: 'signup',\n            body: local_props => (\n                <AccountWizard\n                    setIsRiskWarningVisible={setIsRiskWarningVisible}\n                    onFinishSuccess={showStatusDialog}\n                    onOpenWelcomeModal={closeModalthenOpenWelcomeModal}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    realAccountSignup={realAccountSignup}\n                    setRealAccountFormData={setRealAccountFormData}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            action: 'multi',\n            body: local_props => (\n                <AddOrManageAccounts\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    is_add_crypto={local_props.real_account_signup_target === 'add_crypto'}\n                    is_add_fiat={local_props.real_account_signup_target === 'add_fiat'}\n                    is_add_currency={local_props.real_account_signup_target === 'add_currency'}\n                    deposit_target={local_props.deposit_target}\n                    onClose={closeModal}\n                />\n            ),\n            title: local_props => {\n                if (local_props.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props.has_fiat && local_props.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: local_props => (\n                <FinishedSetCurrency\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onCancel={closeSetCurrencySuccessModal}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n            title: local_props =>\n                local_props.has_fiat && local_props.available_crypto_currencies?.length === 0\n                    ? localize('Manage account')\n                    : localize('Add or manage account'),\n        },\n        {\n            body: local_props => (\n                <StatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SetCurrency\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={() => onErrorConfirm(local_props.state_value.error_code)}\n                />\n            ),\n            title: () => localize('Add a real account'),\n        },\n        {\n            body: () => <ChooseCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: local_props =>\n                local_props.should_show_all_available_currencies\n                    ? localize('Choose an account')\n                    : localize('Choose a cryptocurrency account'),\n        },\n        {\n            body: () => <AddCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: () => localize('Create a new account'),\n        },\n        {\n            body: local_props => (\n                <FinishedAddCurrency\n                    redirectToLegacyPlatform={redirectToLegacyPlatform}\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={closeRealAccountSignup}\n                    className='restricted-country-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={onErrorConfirm}\n                    error_field={local_props.state_value}\n                    className='invalid-input-error'\n                />\n            ),\n        },\n    ]);\n\n    const [assessment_decline, setAssessmentDecline] = React.useState(false);\n\n    const getModalHeight = () => {\n        if (is_from_restricted_country) return '304px';\n        else if ([invalid_input_error, status_dialog].includes(getActiveModalIndex())) return 'auto';\n        if (!currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n                // Manage account\n                return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (\n                [modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(\n                    getActiveModalIndex()\n                )\n            ) {\n                return 'auto';\n            }\n        }\n        return '740px'; // Account wizard modal\n    };\n    const getModalWidth = () => {\n        if (is_from_restricted_country || getActiveModalIndex() === modal_pages_indices.invalid_input_error)\n            return '440px';\n        return !has_close_icon ? 'auto' : '955px';\n    };\n\n    const showStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.status_dialog,\n            currency: curr,\n        });\n    };\n    const closeModalthenOpenWelcomeModal = curr => {\n        closeRealAccountSignup();\n        setParams({\n            currency: curr,\n        });\n    };\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(routes.cashier_deposit);\n    };\n\n    const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n        setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: target\n                ? modal_pages_indices.finished_add_currency\n                : modal_pages_indices.finished_set_currency,\n        });\n    };\n\n    const setLoading = is_loading_val => {\n        setIsLoading(is_loading_val);\n    };\n\n    const cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    const showErrorModal = (err, payload) => {\n        if (payload) {\n            cacheFormValues(payload);\n        }\n\n        setCurrentAction(modal_content[getActiveModalIndex()]?.action);\n        setError(err);\n    };\n\n    React.useEffect(() => {\n        setRiskWarningTitle(localize('Risk Tolerance Warning'));\n        return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n    }, []);\n\n    // setCurrentAction callback useEffect to set error details\n    React.useEffect(() => {\n        if (!error) return;\n        setParams({\n            active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code)\n                ? modal_pages_indices.invalid_input_error\n                : modal_pages_indices.signup_error,\n            error_message: error.message,\n            error_code: error.code,\n            ...(error.code === 'InputValidationFailed' && { error_details: error.details }),\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [error]);\n\n    React.useEffect(() => {\n        if (!is_from_restricted_country) return;\n        setParams({\n            active_modal_index: modal_pages_indices.restricted_country_signup_error,\n            error_message: localize('Adding more real accounts has been restricted for your country.'),\n            error_code: 'InvalidAccount',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_from_restricted_country, is_real_acc_signup_on]);\n\n    const closeSetCurrencySuccessModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (getActiveModalIndex() !== modal_pages_indices.status_dialog) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        closeRealAccountSignup();\n    };\n\n    const closeModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            !e ||\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (getActiveModalIndex() !== modal_pages_indices.status_dialog) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n\n        if (modal_content[getActiveModalIndex()].action === 'signup') {\n            setIsClosingCreateRealAccountModal(true);\n            return;\n        }\n        closeRealAccountSignup();\n        redirectToLegacyPlatform();\n    };\n\n    const onErrorConfirm = err_code => {\n        setParams({\n            active_modal_index:\n                current_action === 'multi' || err_code === 'CurrencyTypeNotAllowed'\n                    ? modal_pages_indices.add_or_manage_account\n                    : modal_pages_indices.account_wizard,\n        });\n    };\n\n    const getIsManageTarget = () => {\n        return real_account_signup_target === 'manage';\n    };\n\n    const getActiveModalIndex = () => {\n        let active_modal_index_no;\n        if (real_account_signup_target === 'choose') {\n            active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n            return active_modal_index_no;\n        }\n        if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n            active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            return active_modal_index_no;\n        }\n        if (state_value.active_modal_index === -1) {\n            if (has_real_account && currency && getIsManageTarget()) {\n                active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            } else {\n                active_modal_index_no =\n                    !currency && real_account_signup_target !== 'maltainvest'\n                        ? modal_pages_indices.set_currency\n                        : modal_pages_indices.account_wizard;\n            }\n        } else {\n            active_modal_index_no = state_value.active_modal_index;\n        }\n        return active_modal_index_no;\n    };\n\n    // set title and body of the modal\n    const { title: Title, body: ModalContent } = modal_content[getActiveModalIndex()];\n    const {\n        account_wizard,\n        add_or_manage_account,\n        finished_set_currency,\n        status_dialog,\n        set_currency,\n        signup_error,\n        restricted_country_signup_error,\n        invalid_input_error,\n    } = modal_pages_indices;\n\n    const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(\n        getActiveModalIndex()\n    );\n\n    const handleOnAccept = async () => {\n        setLoading(true);\n        try {\n            const response = await realAccountSignup({ ...real_account_form_data, accept_risk: 1 });\n            setShouldShowAppropriatenessWarningModal(false);\n            if (real_account_signup_target === 'maltainvest') {\n                showStatusDialog(response.new_account_maltainvest.currency.toLowerCase());\n            }\n        } catch (sign_up_error) {\n            // TODO: Handle Error\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleOnDecline = async () => {\n        setLoading(true);\n        setAssessmentDecline(true);\n        try {\n            await realAccountSignup({ ...real_account_form_data, accept_risk: 0 });\n        } catch (sign_up_error) {\n            setRiskWarningTitle(localize('24-hour Cool Down Warning'));\n            if (sign_up_error.code === 'AppropriatenessTestFailed') {\n                setShouldShowAppropriatenessWarningModal(false);\n                setShouldShowRiskWarningModal(true);\n            }\n            // TODO: Handle Error case\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleRiskAcceptance = () => {\n        closeRealAccountSignup();\n        setShouldShowRiskWarningModal(false);\n        setAssessmentDecline(false);\n    };\n\n    if (assessment_decline) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={assessment_decline}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/>\n                        As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (should_show_appropriateness_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_appropriateness_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='By clicking ‘Accept’ and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.' />\n                    </Text>\n                }\n                footer_content={\n                    <React.Fragment>\n                        <Button type='button' large text={localize('Decline')} secondary onClick={handleOnDecline} />\n                        <Button\n                            type='button'\n                            large\n                            text={localize('Accept')}\n                            primary\n                            onClick={handleOnAccept}\n                            is_loading={is_loading}\n                        />\n                    </React.Fragment>\n                }\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {is_real_acc_signup_on && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <Modal\n                            id='real_account_signup_modal'\n                            className={classNames('real-account-signup-modal', {\n                                'dc-modal__container_real-account-signup-modal--error': [\n                                    signup_error,\n                                    restricted_country_signup_error,\n                                    invalid_input_error,\n                                ].includes(getActiveModalIndex()),\n                                'dc-modal__container_real-account-signup-modal--success': [\n                                    finished_set_currency,\n                                    status_dialog,\n                                ].includes(getActiveModalIndex()),\n                            })}\n                            is_open={is_real_acc_signup_on}\n                            is_risk_warning_visible={is_risk_warning_visible}\n                            has_close_icon={real_account_signup_target !== 'samoa'}\n                            is_title_centered={real_account_signup_target === 'samoa'}\n                            renderTitle={() => {\n                                if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n                                    return (\n                                        <Title\n                                            available_crypto_currencies={available_crypto_currencies}\n                                            country_standpoint={country_standpoint}\n                                            currency={currency}\n                                            has_fiat={has_fiat}\n                                            is_belgium_residence={is_belgium_residence}\n                                            is_eu={show_eu_related_content}\n                                            is_isle_of_man_residence={is_isle_of_man_residence}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                            toggleModal={closeModal}\n                            height={getModalHeight()}\n                            width={getModalWidth()}\n                            elements_to_ignore={[document.querySelector('.modal-root')]}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </Modal>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            portal_element_id='modal_root'\n                            wrapper_classname='account-signup-mobile-dialog'\n                            visible={is_real_acc_signup_on}\n                            onClose={closeModal}\n                            renderTitle={() => {\n                                if (Title) {\n                                    return (\n                                        <Title\n                                            country_standpoint={country_standpoint}\n                                            currency={currency}\n                                            is_belgium_residence={is_belgium_residence}\n                                            is_isle_of_man_residence={is_isle_of_man_residence}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default connect(({ ui, client, traders_hub, modules }) => ({\n    available_crypto_currencies: client.available_crypto_currencies,\n    cfd_score: client.cfd_score,\n    closeRealAccountSignup: ui.closeRealAccountSignup,\n    country_standpoint: client.country_standpoint,\n    currency: client.currency,\n    deposit_real_account_signup_target: ui.deposit_real_account_signup_target,\n    deposit_target: modules.cashier.general_store.deposit_target,\n    redirectToLegacyPlatform: client.redirectToLegacyPlatform,\n    fetchAccountSettings: client.fetchAccountSettings,\n    fetchFinancialAssessment: client.fetchFinancialAssessment,\n    has_fiat: client.has_fiat,\n    has_real_account: client.has_active_real_account,\n    is_belgium_residence: client.residence === 'be', // TODO: [deriv-eu] refactor this once more residence checks are required\n    is_from_restricted_country: client.is_from_restricted_country,\n    is_isle_of_man_residence: client.residence === 'im', // TODO: [deriv-eu] refactor this once more residence checks are required\n    is_real_acc_signup_on: ui.is_real_acc_signup_on,\n    real_account_signup_target: ui.real_account_signup_target,\n    realAccountSignup: client.realAccountSignup,\n    setCFDScore: client.setCFDScore,\n    setIsDeposit: modules.cashier.general_store.setIsDeposit,\n    setIsTradingAssessmentForNewUserEnabled: ui.setIsTradingAssessmentForNewUserEnabled,\n    setIsClosingCreateRealAccountModal: ui.setIsClosingCreateRealAccountModal,\n    setParams: ui.setRealAccountSignupParams,\n    setShouldShowAppropriatenessWarningModal: ui.setShouldShowAppropriatenessWarningModal,\n    setShouldShowRiskWarningModal: ui.setShouldShowRiskWarningModal,\n    setShouldShowVerifiedAccount: ui.setShouldShowVerifiedAccount,\n    should_show_all_available_currencies: modules.cashier.general_store.should_show_all_available_currencies,\n    should_show_appropriateness_warning_modal: ui.should_show_appropriateness_warning_modal,\n    should_show_risk_warning_modal: ui.should_show_risk_warning_modal,\n    state_value: ui.real_account_signup,\n    show_eu_related_content: traders_hub.show_eu_related_content,\n    is_trading_assessment_for_new_user_enabled: ui.is_trading_assessment_for_new_user_enabled,\n}))(withRouter(RealAccountSignup));\n","import RealAccountSignup from './real-account-signup.jsx';\n\nexport default RealAccountSignup;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { isMobile, routes, getStaticUrl } from '@deriv/shared';\nimport { isExternalLink } from '@deriv/utils';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\n\ntype TMenuLink = {\n    data_testid: string;\n    icon: string;\n    is_active: boolean;\n    is_disabled: boolean;\n    is_hidden: boolean;\n    link_to: string;\n    onClickLink: () => void;\n    suffix_icon: string;\n    text: string;\n};\n\nconst MenuLink = observer(\n    ({\n        data_testid,\n        icon = '',\n        is_active,\n        is_disabled,\n        is_hidden,\n        link_to = '',\n        onClickLink,\n        suffix_icon = '',\n        text,\n    }: Partial<TMenuLink>) => {\n        const { ui, client } = useStore();\n        const { has_any_real_account, is_virtual } = client;\n        const { setMobileLanguageMenuOpen, toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n        const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n        const is_trade_text = text === localize('Trade');\n        const deriv_static_url = getStaticUrl(link_to);\n        const traders_hub_path = window.location.pathname === routes.traders_hub;\n        const is_languages_link_on_mobile = isMobile() && link_to === routes.languages;\n        const is_external_link = deriv_static_url && isExternalLink(link_to);\n        const is_cashier_link = [\n            routes.cashier_deposit,\n            routes.cashier_withdrawal,\n            routes.cashier_acc_transfer,\n        ].includes(link_to);\n\n        if (is_hidden) return null;\n\n        if (is_languages_link_on_mobile) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={() => setMobileLanguageMenuOpen(true)}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n        if (real_account_needed_for_cashier && is_cashier_link && traders_hub_path) {\n            const handleClickCashier = () => {\n                onClickLink?.();\n                toggleNeedRealAccountForCashierModal();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (is_cashier_link && is_virtual && !has_any_real_account) {\n            const toggle_modal_routes = window.location.pathname === routes.root || traders_hub_path;\n\n            const handleClickCashier = () => {\n                if (toggle_modal_routes) {\n                    toggleReadyToDepositModal();\n                }\n                onClickLink?.();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (!link_to) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        } else if (is_external_link) {\n            return (\n                <a\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                        'header__menu-mobile-link--active': is_active,\n                    })}\n                    href={link_to}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <Text\n                        className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                        as='h3'\n                        size='xs'\n                        weight={window.location.pathname === '/' && is_trade_text ? 'bold' : undefined}\n                    >\n                        {text}\n                    </Text>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </a>\n            );\n        }\n\n        return (\n            <BinaryLink\n                to={link_to}\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                    'header__menu-mobile-link--active': is_active,\n                })}\n                active_class='header__menu-mobile-link--active'\n                onClick={onClickLink}\n                data-testid={data_testid}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <Text\n                    className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                    as='h3'\n                    size='xs'\n                    weight={window.location.pathname === '/' && is_trade_text ? 'bold' : undefined}\n                >\n                    {text}\n                </Text>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </BinaryLink>\n        );\n    }\n);\n\nexport default MenuLink;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\n\nconst MenuTitle = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n    return (\n        <React.Fragment>\n            <div>{localize('Menu')}</div>\n            <div\n                className='settings-language__language-button_wrapper'\n                onClick={() => {\n                    if (!is_mobile_language_menu_open) {\n                        setMobileLanguageMenuOpen(true);\n                    }\n                }}\n            >\n                {!is_mobile_language_menu_open && (\n                    <React.Fragment>\n                        <Icon\n                            icon={`IcFlag${current_language.replace('_', '-')}`}\n                            data_testid='dt_icon'\n                            className='ic-settings-language__icon'\n                            size={22}\n                        />\n                        <Text weight='bold' size='xxs'>\n                            <Localize i18n_default_text={current_language} />\n                        </Text>\n                    </React.Fragment>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default MenuTitle;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDrawer } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages, localize } from '@deriv/translations';\nimport { LanguageLink } from 'App/Components/Routes';\n\ntype TMobileLanguageMenu = {\n    expandSubMenu: (prop: boolean) => void;\n    toggleDrawer: () => void;\n};\n\nconst MobileLanguageMenu = observer(({ expandSubMenu, toggleDrawer }: TMobileLanguageMenu) => {\n    const { common, ui } = useStore();\n    const { is_language_changing } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n    return (\n        <MobileDrawer.SubMenu\n            is_expanded={is_mobile_language_menu_open}\n            has_subheader\n            submenu_title={localize('Language')}\n            onToggle={is_expanded => {\n                expandSubMenu(is_expanded);\n                setMobileLanguageMenuOpen(false);\n            }}\n            submenu_toggle_class='dc-mobile-drawer__submenu-toggle--hidden'\n        >\n            <div\n                className={classNames('settings-language__language-container', {\n                    'settings-language__language-container--disabled': is_language_changing,\n                })}\n            >\n                {Object.keys(getAllowedLanguages()).map(lang => (\n                    <LanguageLink\n                        key={lang}\n                        icon_classname='settings-language__language-flag'\n                        is_clickable\n                        lang={lang}\n                        toggleModal={() => {\n                            toggleDrawer();\n                            setMobileLanguageMenuOpen(false);\n                        }}\n                    />\n                ))}\n            </div>\n        </MobileDrawer.SubMenu>\n    );\n});\n\nexport default MobileLanguageMenu;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Div100vhContainer, Icon, MobileDrawer, ToggleSwitch } from '@deriv/components';\nimport {\n    useOnrampVisible,\n    useAccountTransferVisible,\n    useIsP2PEnabled,\n    usePaymentAgentTransferVisible,\n    useFeatureFlags,\n} from '@deriv/hooks';\nimport { routes, PlatformContext, getStaticUrl, whatsapp_url } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport NetworkStatus from 'App/Components/Layout/Footer';\nimport ServerTime from 'App/Containers/server-time.jsx';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport useLiveChat from 'App/Components/Elements/LiveChat/use-livechat.ts';\nimport PlatformSwitcher from './platform-switcher';\nimport MenuLink from './menu-link';\nimport { MobileLanguageMenu, MenuTitle } from './Components/ToggleMenu';\n\nconst ToggleMenuDrawer = observer(({ platform_config }) => {\n    const { common, ui, client, traders_hub, modules } = useStore();\n    const { app_routing_history, current_language } = common;\n    const {\n        disableApp,\n        enableApp,\n        is_mobile_language_menu_open,\n        is_dark_mode_on: is_dark_mode,\n        setDarkMode: toggleTheme,\n        setMobileLanguageMenuOpen,\n    } = ui;\n    const {\n        account_status,\n        is_logged_in,\n        is_logging_in,\n        is_virtual,\n        loginid,\n        logout: logoutClient,\n        should_allow_authentication,\n        landing_company_shortcode: active_account_landing_company,\n        is_landing_company_loaded,\n        is_pending_proof_of_ownership,\n        is_eu,\n    } = client;\n    const { cashier } = modules;\n    const { payment_agent } = cashier;\n    const { is_payment_agent_visible } = payment_agent;\n    const { show_eu_related_content, setTogglePlatformType } = traders_hub;\n    const is_account_transfer_visible = useAccountTransferVisible();\n    const is_onramp_visible = useOnrampVisible();\n    const { data: is_payment_agent_transfer_visible } = usePaymentAgentTransferVisible();\n    const { data: is_p2p_enabled } = useIsP2PEnabled();\n\n    const liveChat = useLiveChat(false, loginid);\n    const [is_open, setIsOpen] = React.useState(false);\n    const [transitionExit, setTransitionExit] = React.useState(false);\n    const [primary_routes_config, setPrimaryRoutesConfig] = React.useState([]);\n    const [is_submenu_expanded, expandSubMenu] = React.useState(false);\n\n    const { is_appstore } = React.useContext(PlatformContext);\n    const timeout = React.useRef();\n    const history = useHistory();\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    React.useEffect(() => {\n        const processRoutes = () => {\n            const routes_config = getRoutesConfig({ is_appstore });\n            let primary_routes = [];\n\n            const location = window.location.pathname;\n\n            if (is_appstore) {\n                primary_routes = [\n                    routes.my_apps,\n                    routes.explore,\n                    routes.wallets,\n                    routes.platforms,\n                    routes.trade_types,\n                    routes.markets,\n                ];\n            } else if (location === routes.traders_hub || is_trading_hub_category) {\n                primary_routes = [routes.account, routes.cashier];\n            } else if (location === routes.wallets) {\n                primary_routes = [routes.reports, routes.account];\n            } else {\n                primary_routes = [routes.reports, routes.account, routes.cashier];\n            }\n            setPrimaryRoutesConfig(getFilteredRoutesConfig(routes_config, primary_routes));\n        };\n\n        if (account_status || should_allow_authentication) {\n            processRoutes();\n        }\n\n        return () => clearTimeout(timeout);\n    }, [is_appstore, account_status, should_allow_authentication, is_trading_hub_category]);\n\n    const toggleDrawer = React.useCallback(() => {\n        if (is_mobile_language_menu_open) setMobileLanguageMenuOpen(false);\n        if (!is_open) setIsOpen(!is_open);\n        else {\n            setTransitionExit(true);\n            timeout.current = setTimeout(() => {\n                setIsOpen(false);\n                setTransitionExit(false);\n            }, 400);\n        }\n        expandSubMenu(false);\n    }, [expandSubMenu, is_open, is_mobile_language_menu_open, setMobileLanguageMenuOpen]);\n\n    const getFilteredRoutesConfig = (all_routes_config, routes_to_filter) => {\n        const subroutes_config = all_routes_config.flatMap(i => i.routes || []);\n\n        return routes_to_filter\n            .map(path => all_routes_config.find(r => r.path === path) || subroutes_config.find(r => r.path === path))\n            .filter(route => route);\n    };\n\n    const getRoutesWithSubMenu = (route_config, idx) => {\n        const has_access = route_config.is_authenticated ? is_logged_in : true;\n        if (!has_access) return null;\n\n        if (!route_config.routes) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={route_config.path}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        const has_subroutes = route_config.routes.some(route => route.subroutes);\n\n        const disableRoute = route_path => {\n            if (/financial-assessment/.test(route_path)) {\n                return is_virtual;\n            } else if (/trading-assessment/.test(route_path)) {\n                return is_virtual || active_account_landing_company !== 'maltainvest';\n            } else if (/proof-of-address/.test(route_path) || /proof-of-identity/.test(route_path)) {\n                return !should_allow_authentication;\n            } else if (/proof-of-ownership/.test(route_path)) {\n                return is_virtual || !is_pending_proof_of_ownership;\n            }\n            return false;\n        };\n        return (\n            <MobileDrawer.SubMenu\n                key={idx}\n                has_subheader\n                submenu_icon={route_config.icon_component}\n                submenu_title={route_config.getTitle()}\n                submenu_suffix_icon='IcChevronRight'\n                onToggle={expandSubMenu}\n                route_config_path={route_config.path}\n            >\n                {!has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        if (\n                            !route.is_invisible &&\n                            (route.path !== routes.cashier_pa || is_payment_agent_visible) &&\n                            (route.path !== routes.cashier_pa_transfer || is_payment_agent_transfer_visible) &&\n                            (route.path !== routes.cashier_p2p || is_p2p_enabled) &&\n                            (route.path !== routes.cashier_onramp || is_onramp_visible) &&\n                            (route.path !== routes.cashier_acc_transfer || is_account_transfer_visible)\n                        ) {\n                            return (\n                                <MobileDrawer.Item key={index}>\n                                    <MenuLink\n                                        link_to={route.path}\n                                        icon={route.icon_component}\n                                        text={route.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                            );\n                        }\n                        return undefined;\n                    })}\n                {has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        return route.subroutes ? (\n                            <MobileDrawer.SubMenuSection\n                                key={index}\n                                section_icon={route.icon}\n                                section_title={route.getTitle()}\n                            >\n                                {route.subroutes.map((subroute, subindex) => (\n                                    <MenuLink\n                                        key={subindex}\n                                        is_disabled={disableRoute(subroute.path) || subroute.is_disabled}\n                                        link_to={subroute.path}\n                                        text={subroute.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                ))}\n                            </MobileDrawer.SubMenuSection>\n                        ) : (\n                            <MobileDrawer.Item key={index}>\n                                <MenuLink\n                                    link_to={route.path}\n                                    icon={route.icon_component}\n                                    text={route.getTitle()}\n                                    onClickLink={toggleDrawer}\n                                />\n                            </MobileDrawer.Item>\n                        );\n                    })}\n            </MobileDrawer.SubMenu>\n        );\n    };\n\n    const HelpCentreRoute = has_border_bottom => {\n        return (\n            <MobileDrawer.Item className={classNames({ 'header__menu-mobile-theme': has_border_bottom })}>\n                <MenuLink\n                    link_to={getStaticUrl('/help-centre')}\n                    icon='IcHelpCentre'\n                    text={localize('Help centre')}\n                    onClickLink={toggleDrawer}\n                />\n            </MobileDrawer.Item>\n        );\n    };\n\n    const { pathname: route } = useLocation();\n\n    const is_trading_hub_category =\n        route.startsWith(routes.traders_hub) || route.startsWith(routes.cashier) || route.startsWith(routes.account);\n\n    return (\n        <React.Fragment>\n            <a id='dt_mobile_drawer_toggle' onClick={toggleDrawer} className='header__mobile-drawer-toggle'>\n                <Icon\n                    icon={is_appstore && !is_logged_in ? 'IcHamburgerWhite' : 'IcHamburger'}\n                    width='16px'\n                    height='16px'\n                    className='header__mobile-drawer-icon'\n                />\n            </a>\n            <MobileDrawer\n                alignment={is_appstore ? 'right' : 'left'}\n                icon_class='header__menu-toggle'\n                is_open={is_open}\n                transitionExit={transitionExit}\n                toggle={toggleDrawer}\n                id='dt_mobile_drawer'\n                enableApp={enableApp}\n                disableApp={disableApp}\n                title={<MenuTitle />}\n                height='100vh'\n                width='295px'\n                className='pre-appstore'\n            >\n                <Div100vhContainer height_offset='40px'>\n                    <div className='header__menu-mobile-body-wrapper'>\n                        {is_appstore && (\n                            <MobileDrawer.Body>\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                            </MobileDrawer.Body>\n                        )}\n                        <React.Fragment>\n                            {!is_trading_hub_category && (\n                                <MobileDrawer.SubHeader\n                                    className={classNames({\n                                        'dc-mobile-drawer__subheader--hidden': is_submenu_expanded,\n                                    })}\n                                >\n                                    <PlatformSwitcher\n                                        app_routing_history={app_routing_history}\n                                        is_mobile\n                                        is_landing_company_loaded={is_landing_company_loaded}\n                                        is_logged_in={is_logged_in}\n                                        is_logging_in={is_logging_in}\n                                        platform_config={platform_config}\n                                        toggleDrawer={toggleDrawer}\n                                        current_language={current_language}\n                                        setTogglePlatformType={setTogglePlatformType}\n                                    />\n                                </MobileDrawer.SubHeader>\n                            )}\n                            <MobileDrawer.Body\n                                className={classNames({\n                                    'header__menu-mobile-traders-hub': is_trading_hub_category,\n                                })}\n                            >\n                                <div className='header__menu-mobile-platform-switcher' id='mobile_platform_switcher' />\n                                {is_logged_in && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={is_next_wallet_enabled ? routes.wallets : routes.traders_hub}\n                                            icon={is_dark_mode ? 'IcAppstoreHomeDark' : 'IcAppstoreTradersHubHome'}\n                                            text={localize(\"Trader's Hub\")}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {!is_trading_hub_category && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={routes.trade}\n                                            icon='IcTrade'\n                                            text={localize('Trade')}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                                <MobileDrawer.Item\n                                    className='header__menu-mobile-theme'\n                                    onClick={e => {\n                                        e.preventDefault();\n                                        toggleTheme(!is_dark_mode);\n                                    }}\n                                >\n                                    <div className={classNames('header__menu-mobile-link')}>\n                                        <Icon className='header__menu-mobile-link-icon' icon={'IcTheme'} />\n                                        <span className='header__menu-mobile-link-text'>{localize('Dark theme')}</span>\n                                        <ToggleSwitch\n                                            id='dt_mobile_drawer_theme_toggler'\n                                            handleToggle={() => toggleTheme(!is_dark_mode)}\n                                            is_enabled={is_dark_mode}\n                                        />\n                                    </div>\n                                </MobileDrawer.Item>\n\n                                {HelpCentreRoute()}\n                                {is_logged_in && (\n                                    <React.Fragment>\n                                        <MobileDrawer.Item>\n                                            <MenuLink\n                                                link_to={routes.account_limits}\n                                                icon='IcAccountLimits'\n                                                text={localize('Account Limits')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        <MobileDrawer.Item>\n                                            <MenuLink\n                                                link_to={getStaticUrl('/responsible')}\n                                                icon='IcVerification'\n                                                text={localize('Responsible trading')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        {is_eu && show_eu_related_content && !is_virtual && (\n                                            <MobileDrawer.Item>\n                                                <MenuLink\n                                                    link_to={getStaticUrl('/regulatory')}\n                                                    icon='IcRegulatoryInformation'\n                                                    text={localize('Regulatory information')}\n                                                    onClickLink={toggleDrawer}\n                                                />\n                                            </MobileDrawer.Item>\n                                        )}\n                                        <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                            <MenuLink\n                                                link_to={getStaticUrl('/')}\n                                                icon='IcDerivOutline'\n                                                text={localize('Go to Deriv.com')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                    </React.Fragment>\n                                )}\n                                {liveChat.isReady && (\n                                    <MobileDrawer.Item className='header__menu-mobile-whatsapp'>\n                                        <Icon icon='IcWhatsApp' className='drawer-icon' />\n                                        <a\n                                            className='header__menu-mobile-whatsapp-link'\n                                            href={whatsapp_url}\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            onClick={toggleDrawer}\n                                        >\n                                            {localize('WhatsApp')}\n                                        </a>\n                                    </MobileDrawer.Item>\n                                )}\n                                <MobileDrawer.Item className='header__menu-mobile-livechat'>\n                                    {is_appstore ? null : <LiveChat is_mobile_drawer />}\n                                </MobileDrawer.Item>\n                                {is_logged_in && (\n                                    <MobileDrawer.Item\n                                        onClick={() => {\n                                            toggleDrawer();\n                                            history.push(routes.index);\n                                            logoutClient().then(() => {\n                                                window.location.href = getStaticUrl('/');\n                                            });\n                                        }}\n                                        className='dc-mobile-drawer__item'\n                                    >\n                                        <MenuLink icon='IcLogout' text={localize('Log out')} />\n                                    </MobileDrawer.Item>\n                                )}\n                            </MobileDrawer.Body>\n                            <MobileDrawer.Footer className={is_logged_in ? 'dc-mobile-drawer__footer--servertime' : ''}>\n                                <ServerTime is_mobile />\n                                <NetworkStatus is_mobile />\n                            </MobileDrawer.Footer>\n                            {is_mobile_language_menu_open && (\n                                <MobileLanguageMenu expandSubMenu={expandSubMenu} toggleDrawer={toggleDrawer} />\n                            )}\n                        </React.Fragment>\n                    </div>\n                </Div100vhContainer>\n            </MobileDrawer>\n        </React.Fragment>\n    );\n});\n\nToggleMenuDrawer.displayName = 'ToggleMenuDrawer';\n\nexport default ToggleMenuDrawer;\n","import { getPlatformSettings, routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TPlatformConfig = {\n    description: () => string;\n    href?: string;\n    icon: string;\n    link_to?: string;\n    name: string;\n    title: () => string;\n};\n\nconst platform_config: TPlatformConfig[] = [\n    {\n        icon: getPlatformSettings('trader').icon,\n        title: () => getPlatformSettings('trader').name,\n        name: getPlatformSettings('trader').name,\n        description: () => localize('A whole new trading experience on a powerful yet easy to use platform.'),\n        link_to: routes.trade,\n    },\n    {\n        icon: getPlatformSettings('dbot').icon,\n        title: () => getPlatformSettings('dbot').name,\n        name: getPlatformSettings('dbot').name,\n        description: () => localize('Automated trading at your fingertips. No coding needed.'),\n        link_to: routes.bot,\n    },\n    {\n        icon: getPlatformSettings('smarttrader').icon,\n        title: () => getPlatformSettings('smarttrader').name,\n        name: getPlatformSettings('smarttrader').name,\n        description: () => localize('Trade the world’s markets with our popular user-friendly platform.'),\n        href: routes.smarttrader,\n    },\n    {\n        icon: getPlatformSettings('bbot').icon,\n        title: () => getPlatformSettings('bbot').name,\n        name: getPlatformSettings('bbot').name,\n        description: () =>\n            localize(\n                'Our classic “drag-and-drop” tool for creating trading bots, featuring pop-up trading charts, for advanced users.'\n            ),\n        href: routes.binarybot,\n    },\n];\n\nexport default platform_config;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\nimport { AccountActions, MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport { getDecimalPlaces, isMobile, platforms, routes } from '@deriv/shared';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { connect } from 'Stores/connect';\nimport platform_config from 'App/Constants/platform-config.ts';\nimport { withRouter } from 'react-router-dom';\n\nconst DefaultHeader = ({\n    acc_switcher_disabled_message,\n    current_language,\n    account_type,\n    addNotificationMessage,\n    app_routing_history,\n    balance,\n    client_notifications,\n    country_standpoint,\n    currency,\n    disableApp,\n    enableApp,\n    header_extension,\n    history,\n    is_acc_switcher_disabled,\n    is_acc_switcher_on,\n    is_app_disabled,\n    is_bot_allowed,\n    is_dxtrade_allowed,\n    is_eu,\n    is_logged_in,\n    is_logging_in,\n    is_mt5_allowed,\n    is_notifications_visible,\n    is_route_modal_on,\n    is_trading_assessment_for_existing_user_enabled,\n    is_virtual,\n    notifications_count,\n    openRealAccountSignup,\n    platform,\n    removeNotificationMessage,\n    toggleAccountsDialog,\n    toggleNotifications,\n    is_landing_company_loaded,\n    is_switching,\n    setTogglePlatformType,\n}) => {\n    const addUpdateNotification = () => addNotificationMessage(client_notifications.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const onClickDeposit = () => history.push(routes.cashier_deposit);\n\n    const filterPlatformsForClients = payload =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (\n                config.link_to === routes.bot ||\n                config.href === routes.binarybot ||\n                config.href === routes.smarttrader\n            ) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    <DesktopWrapper>\n                        <PlatformSwitcher\n                            app_routing_history={app_routing_history}\n                            is_landing_company_loaded={is_landing_company_loaded}\n                            is_logged_in={is_logged_in}\n                            is_logging_in={is_logging_in}\n                            platform_config={filterPlatformsForClients(platform_config)}\n                            setTogglePlatformType={setTogglePlatformType}\n                            current_language={current_language}\n                        />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n                        {header_extension && is_logged_in && (\n                            <div className='header__menu-left-extensions'>{header_extension}</div>\n                        )}\n                    </MobileWrapper>\n                    <MenuLinks />\n                </div>\n                <div\n                    className={classNames('header__menu-right', {\n                        'header__menu-right--hidden': isMobile() && is_logging_in,\n                    })}\n                >\n                    {(is_logging_in || is_switching) && (\n                        <div\n                            id='dt_core_header_acc-info-preloader'\n                            className={classNames('acc-info__preloader', {\n                                'acc-info__preloader--no-currency': !currency,\n                                'acc-info__preloader--is-crypto': getDecimalPlaces(currency) > 2,\n                            })}\n                        >\n                            <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={isMobile()} speed={3} />\n                        </div>\n                    )}\n\n                    <div id={'dt_core_header_acc-info-container'} className='acc-info__container'>\n                        <AccountActions\n                            acc_switcher_disabled_message={acc_switcher_disabled_message}\n                            account_type={account_type}\n                            balance={balance}\n                            currency={currency}\n                            country_standpoint={country_standpoint}\n                            disableApp={disableApp}\n                            enableApp={enableApp}\n                            is_acc_switcher_on={is_acc_switcher_on}\n                            is_acc_switcher_disabled={is_acc_switcher_disabled}\n                            is_eu={is_eu}\n                            is_notifications_visible={is_notifications_visible}\n                            is_logged_in={is_logged_in}\n                            is_virtual={is_virtual}\n                            onClickDeposit={onClickDeposit}\n                            notifications_count={notifications_count}\n                            toggleAccountsDialog={toggleAccountsDialog}\n                            toggleNotifications={toggleNotifications}\n                            openRealAccountSignup={openRealAccountSignup}\n                        />\n                    </div>\n                </div>\n            </div>\n            {/*\n                Prevent the modals that are part of Real Account signup to get triggered when the corresponding store value changes by\n                removing the parent element from DOM\n            */}\n            {!is_trading_assessment_for_existing_user_enabled && <RealAccountSignup />}\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n};\n\nDefaultHeader.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    addNotificationMessage: PropTypes.func,\n    app_routing_history: PropTypes.array,\n    balance: PropTypes.string,\n    client_notifications: PropTypes.object,\n    currency: PropTypes.string,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    header_extension: PropTypes.any,\n    is_acc_switcher_disabled: PropTypes.bool,\n    is_acc_switcher_on: PropTypes.bool,\n    is_app_disabled: PropTypes.bool,\n    is_bot_allowed: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    is_mt5_allowed: PropTypes.bool,\n    is_dxtrade_allowed: PropTypes.bool,\n    is_notifications_visible: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    is_trading_assessment_for_existing_user_enabled: PropTypes.bool,\n    notifications_count: PropTypes.number,\n    openRealAccountSignup: PropTypes.func,\n    platform: PropTypes.string,\n    removeNotificationMessage: PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleNotifications: PropTypes.func,\n    country_standpoint: PropTypes.object,\n    history: PropTypes.object,\n    is_landing_company_loaded: PropTypes.bool,\n    is_switching: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default connect(({ client, common, ui, notifications, traders_hub }) => ({\n    acc_switcher_disabled_message: ui.account_switcher_disabled_message,\n    account_type: client.account_type,\n    addNotificationMessage: notifications.addNotificationMessage,\n    app_routing_history: common.app_routing_history,\n    balance: client.balance,\n    client_notifications: notifications.client_notifications,\n    currency: client.currency,\n    country_standpoint: client.country_standpoint,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    header_extension: ui.header_extension,\n    is_acc_switcher_disabled: ui.is_account_switcher_disabled,\n    is_acc_switcher_on: !!ui.is_accounts_switcher_on,\n    is_app_disabled: ui.is_app_disabled,\n    is_bot_allowed: client.is_bot_allowed,\n    is_eu: client.is_eu,\n    is_logged_in: client.is_logged_in,\n    is_logging_in: client.is_logging_in,\n    is_mt5_allowed: client.is_mt5_allowed,\n    is_dxtrade_allowed: client.is_dxtrade_allowed,\n    is_notifications_visible: notifications.is_notifications_visible,\n    is_route_modal_on: ui.is_route_modal_on,\n    is_virtual: client.is_virtual,\n    current_language: common.current_language,\n    notifications_count: notifications.notifications.length,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    platform: common.platform,\n    removeNotificationMessage: notifications.removeNotificationMessage,\n    toggleAccountsDialog: ui.toggleAccountsDialog,\n    toggleNotifications: notifications.toggleNotificationsModal,\n    is_trading_assessment_for_existing_user_enabled: ui.is_trading_assessment_for_existing_user_enabled,\n    is_landing_company_loaded: client.is_landing_company_loaded,\n    is_switching: client.is_switching,\n    setTogglePlatformType: traders_hub.setTogglePlatformType,\n}))(withRouter(DefaultHeader));\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useFeatureFlags } from '@deriv/hooks';\n\nconst TradersHubHomeButton = observer(() => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const history = useHistory();\n    const location = useLocation();\n    const { pathname } = location;\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    return (\n        <div\n            data-testid='dt_traders_hub_home_button'\n            className={classNames('traders-hub-header__tradershub', {\n                'traders-hub-header__tradershub--active':\n                    pathname === routes.traders_hub || pathname === routes.wallets,\n            })}\n            onClick={() => history.push(is_next_wallet_enabled ? routes.wallets : routes.traders_hub)}\n        >\n            <div className='traders-hub-header__tradershub--home-logo'>\n                <Icon\n                    icon={is_dark_mode_on ? 'IcAppstoreHomeDark' : 'IcAppstoreTradersHubHome'}\n                    size={is_dark_mode_on ? 15 : 17}\n                />\n            </div>\n            <Text className='traders-hub-header__tradershub--text'>\n                <Localize i18n_default_text=\"Trader's Hub\" />\n            </Text>\n        </div>\n    );\n});\n\nexport default TradersHubHomeButton;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\nimport { routes, isMobile, getDecimalPlaces, platforms } from '@deriv/shared';\n// import { useWalletMigration } from '@deriv/hooks';\nimport { AccountActions, MenuLinks, PlatformSwitcher } from 'App/Components/Layout/Header';\nimport platform_config from 'App/Constants/platform-config.ts';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport NewVersionNotification from 'App/Containers/new-version-notification.jsx';\nimport { connect } from 'Stores/connect';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { AccountsInfoLoader } from 'App/Components/Layout/Header/Components/Preloader';\nimport TradersHubHomeButton from './traders-hub-home-button';\n\nconst Divider = () => <div className='header__menu--dtrader--separator' />;\n\nconst DTraderHeader = ({\n    acc_switcher_disabled_message,\n    account_type,\n    addNotificationMessage,\n    app_routing_history,\n    balance,\n    client_notifications,\n    currency,\n    country_standpoint,\n    current_language,\n    disableApp,\n    enableApp,\n    header_extension,\n    history,\n    is_acc_switcher_disabled,\n    is_acc_switcher_on,\n    is_app_disabled,\n    is_bot_allowed,\n    is_dxtrade_allowed,\n    is_eu,\n    is_logged_in,\n    is_logging_in,\n    is_mt5_allowed,\n    is_notifications_visible,\n    is_route_modal_on,\n    is_virtual,\n    notifications_count,\n    openRealAccountSignup,\n    platform,\n    removeNotificationMessage,\n    toggleAccountsDialog,\n    toggleNotifications,\n    is_switching,\n    toggleReadyToDepositModal,\n    has_any_real_account,\n    setTogglePlatformType,\n}) => {\n    const addUpdateNotification = () => addNotificationMessage(client_notifications.new_version_available);\n    const removeUpdateNotification = React.useCallback(\n        () => removeNotificationMessage({ key: 'new_version_available' }),\n        [removeNotificationMessage]\n    );\n\n    //TODO: Uncomment once useWalletMigration hook is optimized for production release.\n    // const { is_migrated, is_failed } = useWalletMigration();\n    // if (is_migrated) addNotificationMessage(client_notifications.wallets_migrated);\n    // if (is_failed) addNotificationMessage(client_notifications.wallets_failed);\n\n    React.useEffect(() => {\n        document.addEventListener('IgnorePWAUpdate', removeUpdateNotification);\n        return () => document.removeEventListener('IgnorePWAUpdate', removeUpdateNotification);\n    }, [removeUpdateNotification]);\n\n    const handleClickCashier = () => {\n        if (!has_any_real_account && is_virtual) {\n            toggleReadyToDepositModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const filterPlatformsForClients = payload =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            if (config.link_to === routes.dxtrade) {\n                return is_dxtrade_allowed;\n            }\n            if (\n                config.link_to === routes.bot ||\n                config.href === routes.binarybot ||\n                config.href === routes.smarttrader\n            ) {\n                return is_bot_allowed;\n            }\n            return true;\n        });\n\n    return (\n        <header\n            className={classNames('header', {\n                'header--is-disabled': is_app_disabled || is_route_modal_on,\n                'header--is-hidden': platforms[platform],\n            })}\n        >\n            <div className='header__menu-items'>\n                <div className='header__menu-left'>\n                    <DesktopWrapper>\n                        <PlatformSwitcher\n                            app_routing_history={app_routing_history}\n                            platform_config={filterPlatformsForClients(platform_config)}\n                            setTogglePlatformType={setTogglePlatformType}\n                            current_language={current_language}\n                        />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ToggleMenuDrawer platform_config={filterPlatformsForClients(platform_config)} />\n\n                        {header_extension && is_logged_in && (\n                            <div className='header__menu-left-extensions'>{header_extension}</div>\n                        )}\n                    </MobileWrapper>\n                    <DesktopWrapper>\n                        <TradersHubHomeButton />\n                    </DesktopWrapper>\n                    <MenuLinks />\n                </div>\n\n                <div\n                    className={classNames('header__menu-right', {\n                        'header__menu-right--hidden': isMobile() && is_logging_in,\n                    })}\n                >\n                    <DesktopWrapper>\n                        <div className='header__menu--dtrader--separator--account'>\n                            <Divider />\n                        </div>\n                    </DesktopWrapper>\n                    {(is_logging_in || is_switching) && (\n                        <div\n                            id='dt_core_header_acc-info-preloader'\n                            className={classNames('acc-info__preloader__dtrader', {\n                                'acc-info__preloader__dtrader--no-currency': !currency,\n                                'acc-info__preloader__dtrader--is-crypto': getDecimalPlaces(currency) > 2,\n                            })}\n                        >\n                            <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={isMobile()} speed={3} />\n                        </div>\n                    )}\n                    <div id={'dt_core_header_acc-info-container'} className='acc-info__container'>\n                        <AccountActions\n                            acc_switcher_disabled_message={acc_switcher_disabled_message}\n                            account_type={account_type}\n                            balance={balance}\n                            currency={currency}\n                            country_standpoint={country_standpoint}\n                            disableApp={disableApp}\n                            enableApp={enableApp}\n                            is_acc_switcher_on={is_acc_switcher_on}\n                            is_acc_switcher_disabled={is_acc_switcher_disabled}\n                            is_eu={is_eu}\n                            is_notifications_visible={is_notifications_visible}\n                            is_logged_in={is_logged_in}\n                            is_virtual={is_virtual}\n                            onClickDeposit={handleClickCashier}\n                            notifications_count={notifications_count}\n                            toggleAccountsDialog={toggleAccountsDialog}\n                            toggleNotifications={toggleNotifications}\n                            openRealAccountSignup={openRealAccountSignup}\n                        />\n                    </div>\n                </div>\n            </div>\n            <RealAccountSignup />\n            <SetAccountCurrencyModal />\n            <NewVersionNotification onUpdate={addUpdateNotification} />\n        </header>\n    );\n};\n\nDTraderHeader.propTypes = {\n    acc_switcher_disabled_message: PropTypes.string,\n    account_type: PropTypes.string,\n    addNotificationMessage: PropTypes.func,\n    app_routing_history: PropTypes.array,\n    balance: PropTypes.string,\n    client_notifications: PropTypes.object,\n    current_language: PropTypes.string,\n    currency: PropTypes.string,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    header_extension: PropTypes.any,\n    is_acc_switcher_disabled: PropTypes.bool,\n    is_acc_switcher_on: PropTypes.bool,\n    is_app_disabled: PropTypes.bool,\n    is_bot_allowed: PropTypes.bool,\n    is_eu: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    is_mt5_allowed: PropTypes.bool,\n    is_dxtrade_allowed: PropTypes.bool,\n    is_notifications_visible: PropTypes.bool,\n    is_route_modal_on: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    notifications_count: PropTypes.number,\n    openRealAccountSignup: PropTypes.func,\n    platform: PropTypes.string,\n    removeNotificationMessage: PropTypes.func,\n    toggleAccountsDialog: PropTypes.func,\n    toggleNotifications: PropTypes.func,\n    country_standpoint: PropTypes.object,\n    history: PropTypes.object,\n    is_switching: PropTypes.bool,\n    toggleReadyToDepositModal: PropTypes.func,\n    has_any_real_account: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default connect(({ client, common, ui, notifications, traders_hub }) => ({\n    acc_switcher_disabled_message: ui.account_switcher_disabled_message,\n    account_type: client.account_type,\n    addNotificationMessage: notifications.addNotificationMessage,\n    app_routing_history: common.app_routing_history,\n    balance: client.balance,\n    client_notifications: notifications.client_notifications,\n    currency: client.currency,\n    country_standpoint: client.country_standpoint,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    header_extension: ui.header_extension,\n    is_acc_switcher_disabled: ui.is_account_switcher_disabled,\n    is_acc_switcher_on: !!ui.is_accounts_switcher_on,\n    is_app_disabled: ui.is_app_disabled,\n    is_bot_allowed: client.is_bot_allowed,\n    is_eu: client.is_eu,\n    is_loading: ui.is_loading,\n    is_logged_in: client.is_logged_in,\n    is_logging_in: client.is_logging_in,\n    is_mt5_allowed: client.is_mt5_allowed,\n    is_dxtrade_allowed: client.is_dxtrade_allowed,\n    is_notifications_visible: notifications.is_notifications_visible,\n    is_route_modal_on: ui.is_route_modal_on,\n    is_virtual: client.is_virtual,\n    notifications_count: notifications.notifications.length,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    platform: common.platform,\n    removeNotificationMessage: notifications.removeNotificationMessage,\n    toggleAccountsDialog: ui.toggleAccountsDialog,\n    toggleNotifications: notifications.toggleNotificationsModal,\n    is_switching: client.is_switching,\n    toggleReadyToDepositModal: ui.toggleReadyToDepositModal,\n    has_any_real_account: client.has_any_real_account,\n    setTogglePlatformType: traders_hub.setTogglePlatformType,\n    current_language: common.current_language,\n}))(withRouter(DTraderHeader));\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 104 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_34589_443010)\"><path d=\"M20.83 1.09l-1.78 10.1h-6.18C7.11 11.18 1.61 15.84.6 21.6l-.43 2.46C-.85 29.83 3 34.5 8.76 34.5h5.16c4.2 0 8.2-3.4 8.94-7.6L27.61 0l-6.78 1.09zm-4.38 24.86a2.85 2.85 0 01-2.7 2.35h-3.13c-2.59 0-4.32-2.1-3.87-4.7l.27-1.53a5.85 5.85 0 015.53-4.7h5.41l-1.51 8.58zm51.98 8.55l4.06-23h6.41l-4.05 23h-6.42zm.7-22.73l-.97 5.47a16.35 16.35 0 00-7.14-.45L57.9 34.51h-6.42l3.85-21.82a21.7 21.7 0 0113.8-.92zm-26.01-.6h-5c-4.86 0-9.5 3.95-10.36 8.81l-1 5.72c-.87 4.86 2.38 8.8 7.25 8.8h10.62l1.09-6.18h-9.99c-1.62 0-2.7-1.31-2.41-2.93l.03-.2h16.1l.91-5.2c.86-4.87-2.38-8.81-7.25-8.81zm.8 8.32l-.03.33h-9.57l.05-.3c.29-1.61 1.77-3.04 3.4-3.04h3.73c1.6 0 2.7 1.4 2.43 3zm53.6-7.99h6.41c-2.19 5.82-7.2 15.7-12.05 23h-6.42c-2.23-6.95-3.67-16.63-3.94-23h6.42c.11 2.08 1.04 9.79 2.1 15.17a208.42 208.42 0 007.47-15.17z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"clip0_34589_443010\"><path fill=\"#fff\" d=\"M0 0h104v34.51H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport { capitalizeFirstLetter } from '@deriv/shared';\nimport { IconProps } from '../types';\n\n// TODO: This probably can be moved somewhere else.\nexport type Currency =\n    | 'AUD'\n    | 'BCH'\n    | 'BTC'\n    | 'BUSD'\n    | 'DAI'\n    | 'ETH'\n    | 'EURCHECK'\n    | 'EUR'\n    | 'EURS'\n    | 'EUSDT'\n    | 'GBP'\n    | 'IDK'\n    | 'LTC'\n    | 'PAX'\n    | 'TUSD'\n    | 'TUSDT'\n    | 'UNKNOWN'\n    | 'USD'\n    | 'USDC'\n    | 'USDK'\n    | 'UST'\n    | 'VIRTUAL';\n\nconst CurrencyIcon = ({ icon, ...props }: IconProps<Currency>) => {\n    return <Icon icon={`IcCurrency${capitalizeFirstLetter(icon.toLowerCase())}`} {...props} />;\n};\n\nexport default CurrencyIcon;\n","import React from 'react';\nimport { getStatusBadgeConfig } from '@deriv/account';\nimport { Button, Icon, Modal, Money, StatusBadge, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getCurrencyName } from '@deriv/shared';\nimport { connect } from 'Stores/connect';\nimport RootStore from 'Stores/index';\nimport CurrencyIcon from './currency';\nimport { AccountListDetail } from './types';\nimport classNames from 'classnames';\nimport { useHasSetCurrency } from '@deriv/hooks';\n\ntype CurrencySelectionModalProps = {\n    //TODO: Replace the type with a proper one when ts migration cards merged\n    account_list: object[];\n    //TODO: Replace the type with a proper one when ts migration cards merged\n    //TODO: Replace the type with a proper one when ts migration cards merged\n    accounts: any;\n    closeModal: () => void;\n    is_visible: boolean;\n    loginid: string;\n    openRealAccountSignup: (account_type: string) => void;\n    openFailedVerificationModal: (from_account: string) => void;\n    selected_region: string;\n    switchAccount: (loginid: string) => void;\n    multipliers_account_status: string | null;\n    toggleSetCurrencyModal: () => void;\n    has_any_real_account: boolean;\n};\n\nconst CurrencySelectionModal = ({\n    account_list,\n    accounts,\n    closeModal,\n    is_visible,\n    loginid: current_loginid,\n    openRealAccountSignup,\n    openFailedVerificationModal,\n    selected_region,\n    switchAccount,\n    multipliers_account_status,\n    toggleSetCurrencyModal,\n    has_any_real_account,\n}: CurrencySelectionModalProps) => {\n    const { text: badge_text, icon: badge_icon } = getStatusBadgeConfig(\n        multipliers_account_status,\n        openFailedVerificationModal,\n        'multipliers'\n    );\n\n    const hasSetCurrency = useHasSetCurrency();\n    let timeout: ReturnType<typeof setTimeout>;\n\n    return (\n        <Modal is_open={is_visible} toggleModal={closeModal} width='422px' height='422px'>\n            <div className='currency-selection-modal__header'>\n                <Text line-height='m' weight='bold'>\n                    {localize('Select account')}\n                </Text>\n                <Icon className='close-icon' icon='IcCross' onClick={() => closeModal()} />\n            </div>\n            <div className='currency-selection-modal__body'>\n                {(account_list as AccountListDetail[])\n                    .filter(\n                        acc =>\n                            !!acc.is_disabled === false &&\n                            ((!acc.is_virtual && selected_region === 'Non-EU' && acc.loginid.startsWith('CR')) ||\n                                (selected_region === 'EU' && acc.loginid.startsWith('MF')))\n                    )\n                    .map(({ icon, loginid }) => {\n                        const { balance, currency } = accounts[loginid];\n                        const is_selected = current_loginid === loginid;\n                        return (\n                            <div\n                                key={loginid}\n                                className={classNames('currency-item-card', {\n                                    'currency-item-card--active': is_selected,\n                                })}\n                                onClick={async () => {\n                                    if (loginid !== current_loginid) {\n                                        await switchAccount(loginid);\n                                    }\n                                    closeModal();\n                                }}\n                            >\n                                <CurrencyIcon className='currency-item-card__icons' icon={icon} size={32} />\n                                <div className='currency-item-card__details'>\n                                    <Text size='xs'>{getCurrencyName(currency)}</Text>\n                                    <Text color={is_selected ? 'prominent' : 'less-prominent'} size='xxs'>\n                                        {loginid}\n                                    </Text>\n                                </div>\n                                <div className='currency-item-card__balance'>\n                                    {multipliers_account_status ? (\n                                        <StatusBadge\n                                            account_status={multipliers_account_status}\n                                            icon={badge_icon}\n                                            text={badge_text}\n                                        />\n                                    ) : (\n                                        <Text size='xs' color='prominent'>\n                                            <Money amount={balance} currency={currency} show_currency />\n                                        </Text>\n                                    )}\n                                </div>\n                            </div>\n                        );\n                    })}\n            </div>\n            <div className='currency-selection-modal__bottom-controls'>\n                <Button\n                    className='block-button'\n                    onClick={() => {\n                        clearTimeout(timeout);\n                        timeout = setTimeout(() => {\n                            if (has_any_real_account && !hasSetCurrency) {\n                                toggleSetCurrencyModal();\n                            } else openRealAccountSignup('manage');\n                        }, 500);\n                        closeModal();\n                    }}\n                    secondary\n                    large\n                >\n                    {localize('Add or manage account')}\n                </Button>\n            </div>\n        </Modal>\n    );\n};\n\nexport default connect(({ client, traders_hub, ui }: RootStore) => ({\n    account_list: client.account_list,\n    accounts: client.accounts,\n    closeModal: traders_hub.closeModal,\n    loginid: client.loginid,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    selected_region: traders_hub.selected_region,\n    switchAccount: client.switchAccount,\n    openFailedVerificationModal: traders_hub.openFailedVerificationModal,\n    multipliers_account_status: traders_hub.multipliers_account_status,\n    toggleSetCurrencyModal: ui.toggleSetCurrencyModal,\n    has_any_real_account: client.has_any_real_account,\n}))(CurrencySelectionModal);\n","import CurrencySelectionModal from './curreny-selection-modal';\nimport './currency-selection-modal.scss';\n\nexport default CurrencySelectionModal;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { ToggleNotifications } from 'App/Components/Layout/Header';\n\nconst ShowNotifications = observer(() => {\n    const { notifications: notifications_store } = useStore();\n    const { is_notifications_visible, notifications, toggleNotificationsModal } = notifications_store;\n\n    return (\n        <div data-testid='dt_traders_hub_show_notifications' className='traders-hub-header__notification'>\n            <ToggleNotifications\n                count={notifications.length}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotificationsModal}\n                tooltip_message={<Localize i18n_default_text='View notifications' />}\n            />\n        </div>\n    );\n});\n\nexport default ShowNotifications;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\n\nconst TradersHubOnboarding = observer(() => {\n    const history = useHistory();\n    const { traders_hub, ui } = useStore();\n    const { setIsOnboardingVisited } = traders_hub;\n    const { is_dark_mode_on } = ui;\n\n    return (\n        <div data-testid='dt_traders_hub_onboarding'>\n            <div className='traders-hub-header__tradershub--onboarding--logo'>\n                <Popover\n                    classNameBubble='account-settings-toggle__tooltip'\n                    alignment='bottom'\n                    message={<Localize i18n_default_text='View onboarding' />}\n                    should_disable_pointer_events\n                    zIndex='9999'\n                >\n                    <Icon\n                        data_testid='dt_traders_hub_onboarding_icon'\n                        icon={is_dark_mode_on ? 'IcAppstoreTradingHubOnboardingDark' : 'IcAppstoreTradingHubOnboarding'}\n                        size={20}\n                        onClick={() => {\n                            history.push(routes.onboarding);\n                            setIsOnboardingVisited(false);\n                        }}\n                    />\n                </Popover>\n            </div>\n        </div>\n    );\n});\n\nexport default TradersHubOnboarding;\n","import React from 'react';\n\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nimport { BinaryLink } from 'App/Components/Routes';\n\nimport ShowNotifications from './show-notifications';\nimport TradersHubOnboarding from './traders-hub-onboarding';\nimport { useFeatureFlags } from '@deriv/hooks';\n\ntype TDefaultMobileLinks = {\n    handleClickCashier: () => void;\n};\n\nconst DefaultMobileLinks = React.memo(({ handleClickCashier }: TDefaultMobileLinks) => {\n    const { is_next_wallet_enabled } = useFeatureFlags();\n    return (\n        <React.Fragment>\n            <div className='traders-hub-header__menu-right--items--onboarding'>\n                <TradersHubOnboarding />\n            </div>\n            <div className='traders-hub-header__menu-right--items--notifications'>\n                <ShowNotifications />\n            </div>\n            <Popover\n                alignment='bottom'\n                classNameBubble='account-settings-toggle__tooltip'\n                message={<Localize i18n_default_text='Manage account settings' />}\n                should_disable_pointer_events\n                zIndex='9999'\n            >\n                <BinaryLink className='traders-hub-header__setting' to={routes.personal_details}>\n                    <Icon icon='IcUserOutline' size={20} />\n                </BinaryLink>\n            </Popover>\n            {!is_next_wallet_enabled && (\n                <div className='traders-hub-header__cashier-button'>\n                    <Button primary small onClick={handleClickCashier}>\n                        <Localize i18n_default_text='Cashier' />\n                    </Button>\n                </div>\n            )}\n        </React.Fragment>\n    );\n});\n\nDefaultMobileLinks.displayName = 'DefaultMobileLinks';\n\nexport default DefaultMobileLinks;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { DesktopWrapper, Icon, MobileWrapper, Popover, StaticUrl } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { routes, platforms, formatMoney } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { MenuLinks } from 'App/Components/Layout/Header';\nimport platform_config from 'App/Constants/platform-config';\nimport ToggleMenuDrawer from 'App/Components/Layout/Header/toggle-menu-drawer.jsx';\nimport { BinaryLink } from 'App/Components/Routes';\nimport DerivBrandLogo from 'Assets/SvgComponents/header/deriv-rebranding-logo.svg';\nimport RealAccountSignup from 'App/Containers/RealAccountSignup';\nimport AccountInfo from 'App/Components/Layout/Header/account-info';\nimport SetAccountCurrencyModal from 'App/Containers/SetAccountCurrencyModal';\nimport CurrencySelectionModal from '../../CurrencySelectionModal';\nimport DefaultMobileLinks from './default-mobile-links';\nimport ShowNotifications from './show-notifications';\nimport TradersHubOnboarding from './traders-hub-onboarding';\nimport TradersHubHomeButton from './traders-hub-home-button';\n\ntype TPlatformConfig = typeof platform_config;\ntype TPlatforms = typeof platforms;\n\nconst TradersHubHeader = observer(() => {\n    const { client, common, traders_hub, ui } = useStore();\n    const {\n        account_type,\n        balance,\n        country_standpoint,\n        currency,\n        has_any_real_account,\n        is_eu,\n        is_logged_in,\n        is_mt5_allowed,\n        is_virtual,\n    } = client;\n    const { platform } = common;\n    const { modal_data } = traders_hub;\n    const {\n        header_extension,\n        is_accounts_switcher_on,\n        is_app_disabled,\n        is_route_modal_on,\n        account_switcher_disabled_message,\n        toggleAccountsDialog,\n        toggleNeedRealAccountForCashierModal,\n        toggleReadyToDepositModal,\n    } = ui;\n    const history = useHistory();\n    const { pathname } = useLocation();\n    const cashier_routes = pathname.startsWith(routes.cashier);\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n    const account_balance = formatMoney(currency, balance ?? '', true);\n\n    const filterPlatformsForClients = (payload: TPlatformConfig) =>\n        payload.filter(config => {\n            if (config.link_to === routes.mt5) {\n                return !is_logged_in || is_mt5_allowed;\n            }\n            return true;\n        });\n\n    const toggleModal = () => {\n        if (!has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    return (\n        <header\n            className={classNames('traders-hub-header', {\n                'traders-hub-header--is-disabled': is_app_disabled || is_route_modal_on,\n                'traders-hub-header--is-hidden': platforms[platform as keyof TPlatforms],\n            })}\n        >\n            <div className='traders-hub-header__menu-left'>\n                <MobileWrapper>\n                    <ToggleMenuDrawer {...{ platform_config: filterPlatformsForClients(platform_config) }} />\n                    {header_extension && is_logged_in && <div>{header_extension}</div>}\n                </MobileWrapper>\n                <div\n                    className={classNames('traders-hub-header__logo-wrapper', {\n                        'traders-hub-header__logo-wrapper--cashier': cashier_routes,\n                    })}\n                >\n                    <StaticUrl href='/'>\n                        <DerivBrandLogo className='traders-hub-header__logo' />\n                    </StaticUrl>\n                </div>\n                <DesktopWrapper>\n                    <div className='traders-hub-header__divider' />\n                    <TradersHubHomeButton />\n                </DesktopWrapper>\n                <MenuLinks {...{ is_traders_hub_routes: true }} />\n            </div>\n            <DesktopWrapper>\n                <div className='traders-hub-header__menu-right'>\n                    <div className='traders-hub-header__divider' />\n                    <div className='traders-hub-header__menu-right--items'>\n                        <div className='traders-hub-header__menu-right--items--onboarding'>\n                            <TradersHubOnboarding />\n                        </div>\n                        <div className='traders-hub-header__menu-right--items--notifications'>\n                            <ShowNotifications />\n                        </div>\n                        <Popover\n                            classNameBubble='account-settings-toggle__tooltip'\n                            alignment='bottom'\n                            message={<Localize i18n_default_text='Manage account settings' />}\n                            should_disable_pointer_events\n                            zIndex={'9999'}\n                        >\n                            <BinaryLink className='traders-hub-header__setting' to={routes.personal_details}>\n                                <Icon icon='IcUserOutline' size={20} />\n                            </BinaryLink>\n                        </Popover>\n                        {cashier_routes && (\n                            <div className='traders-hub-header__menu-right--items--account-toggle'>\n                                <AccountInfo\n                                    acc_switcher_disabled_message={account_switcher_disabled_message}\n                                    account_type={account_type}\n                                    balance={account_balance}\n                                    country_standpoint={country_standpoint}\n                                    currency={currency}\n                                    is_dialog_on={is_accounts_switcher_on}\n                                    is_disabled={false}\n                                    is_eu={is_eu}\n                                    is_virtual={is_virtual}\n                                    toggleDialog={toggleAccountsDialog}\n                                />\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <RealAccountSignup />\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='traders-hub-header__mobile-parent'>\n                    <div className='traders-hub-header__menu-middle'>\n                        {cashier_routes ? (\n                            <React.Fragment>\n                                <div className='traders-hub-header__menu-right--items--notifications__cashier'>\n                                    <ShowNotifications />\n                                </div>\n                                <div className='traders-hub-header__menu-right--items--account-toggle'>\n                                    <AccountInfo\n                                        acc_switcher_disabled_message={account_switcher_disabled_message}\n                                        account_type={account_type}\n                                        balance={account_balance}\n                                        country_standpoint={country_standpoint}\n                                        currency={currency}\n                                        is_dialog_on={is_accounts_switcher_on}\n                                        is_disabled={false}\n                                        is_eu={is_eu}\n                                        is_virtual={is_virtual}\n                                        toggleDialog={toggleAccountsDialog}\n                                    />\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <DefaultMobileLinks handleClickCashier={handleClickCashier} />\n                        )}\n                    </div>\n                </div>\n                <RealAccountSignup />\n            </MobileWrapper>\n            <SetAccountCurrencyModal />\n            <CurrencySelectionModal is_visible={modal_data.active_modal === 'currency_selection'} />\n        </header>\n    );\n});\n\nexport default TradersHubHeader;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport DefaultHeader from './default-header.jsx';\nimport DTraderHeader from './dtrader-header.jsx';\nimport TradersHubHeader from './traders-hub-header';\n\nconst Header = observer(() => {\n    const { client } = useStore();\n    const { is_logged_in } = client;\n    const { pathname } = useLocation();\n    const traders_hub_routes =\n        [routes.traders_hub, routes.account, routes.cashier, routes.wallets, routes.compare_cfds].includes(pathname) ||\n        pathname.startsWith(routes.compare_cfds);\n\n    if (is_logged_in) {\n        let result;\n        if (traders_hub_routes) {\n            result = <TradersHubHeader />;\n        } else if (pathname === routes.onboarding) {\n            result = null;\n        } else {\n            result = <DTraderHeader />;\n        }\n        return result;\n    } else if (pathname === routes.onboarding) {\n        return null;\n    }\n    return <DefaultHeader />;\n});\n\nexport default Header;\n","import Header from './header';\n\nexport default Header;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport './deriv-real-account-required-modal.scss';\n\nconst DerivRealAccountRequiredModal = ({\n    is_open,\n    onClose,\n    disableApp,\n    enableApp,\n    openRealAccountSignup,\n    is_eu_user,\n}) => {\n    const createAccount = () => {\n        if (is_eu_user) {\n            onClose();\n            openRealAccountSignup('maltainvest');\n        } else {\n            onClose();\n            openRealAccountSignup('svg');\n        }\n    };\n\n    return (\n        <Dialog\n            className='open-real-account-dialog'\n            title={localize('You’ll need a Deriv account')}\n            confirm_button_text={localize('Add Deriv Account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Cancel')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n        >\n            {localize('A Deriv account will allow you to fund (and withdraw from) your CFDs account(s).')}\n        </Dialog>\n    );\n};\n\nDerivRealAccountRequiredModal.propTypes = {\n    is_open: PropTypes.bool,\n    onClose: PropTypes.func,\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    is_eu_user: PropTypes.string,\n};\n\nexport default connect(({ ui, traders_hub }) => ({\n    is_open: ui.is_deriv_account_needed_modal_visible,\n    onClose: ui.openDerivRealAccountNeededModal,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    is_eu_user: traders_hub.is_eu_user,\n}))(DerivRealAccountRequiredModal);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\n\nconst MT5AccountNeededModal = ({\n    is_eu,\n    is_open,\n    account_needed_modal_props: { target, target_label, target_dmt5_label },\n    onClose,\n    disableApp,\n    enableApp,\n    openRealAccountSignup,\n}) => {\n    const dmt5_label = is_eu ? localize('CFDs') : localize('Deriv MT5');\n    const deriv_label = is_eu ? localize('Deriv Multipliers') : localize('Deriv');\n\n    const createAccount = () => {\n        onClose();\n        openRealAccountSignup(target);\n    };\n\n    return (\n        <Dialog\n            title={localize('You’ll need a {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            confirm_button_text={localize('Add {{deriv_account}} account', {\n                deriv_account: target_label,\n            })}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Cancel')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n        >\n            <Localize\n                i18n_default_text='Please add a {{deriv_account}} account first before adding a {{dmt5_account}} account. Deposits and withdrawals for your {{dmt5_label}} account are done by transferring funds to and from your {{deriv_label}} account.'\n                values={{\n                    deriv_account: target_label,\n                    dmt5_account: target_dmt5_label,\n                    dmt5_label,\n                    deriv_label,\n                }}\n            />\n        </Dialog>\n    );\n};\n\nMT5AccountNeededModal.propTypes = {\n    account_needed_modal_props: PropTypes.shape({\n        target: PropTypes.string,\n        target_label: PropTypes.string,\n        target_dmt5_label: PropTypes.string,\n    }),\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_eu: PropTypes.bool,\n    is_open: PropTypes.bool,\n    onClose: PropTypes.func,\n    openRealAccountSignup: PropTypes.func,\n    required_account: PropTypes.object,\n};\n\nexport default connect(({ client, ui }) => ({\n    is_open: ui.is_account_needed_modal_on,\n    account_needed_modal_props: ui.account_needed_modal_props,\n    onClose: ui.closeAccountNeededModal,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    openRealAccountSignup: ui.openRealAccountSignup,\n    is_eu: client.is_eu,\n}))(MT5AccountNeededModal);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getCurrentProductionDomain } from '@deriv/shared';\n\nconst RedirectNoticeModal = ({ is_logged_in, is_eu, portal_id }) => {\n    const [dialog_status, setDialogStatus] = React.useState(false);\n    const [external_link, setExternalLink] = React.useState('');\n\n    const isThirdPartyLink = href => {\n        let destination;\n        try {\n            destination = new URL(href);\n        } catch (e) {\n            return false;\n        }\n        return (\n            !!destination.host &&\n            !new RegExp(`^.*\\\\.${getCurrentProductionDomain() || 'binary\\\\.com'}$`).test(destination.host) && // destination host is not binary subdomain\n            !new RegExp('^.*\\\\.binary\\\\.bot$').test(destination.host) && // destination host is not binary subdomain\n            !/www\\.(betonmarkets|xodds)\\.com/.test(destination.host) && // destination host is not binary old domain\n            !/deriv.(app|com)/.test(destination.host) && // destination host is not deriv\n            window.location.host !== destination.host\n        );\n    };\n    const onCancelDialog = () => {\n        setDialogStatus(false);\n    };\n    const onConfirmDialog = () => {\n        setDialogStatus(false);\n        window.open(external_link);\n    };\n\n    const onClickExternalLink = e => {\n        const link_element = e.target.tagName === 'A' ? e.target : e.target.closest('a');\n        if (link_element) {\n            if (isThirdPartyLink(link_element.href) && is_logged_in && is_eu) {\n                e.preventDefault();\n                e.stopPropagation();\n                setExternalLink(link_element.href);\n                setDialogStatus(true);\n            }\n        }\n    };\n\n    React.useEffect(() => {\n        document.addEventListener('click', onClickExternalLink);\n        return () => {\n            document.removeEventListener('click', onClickExternalLink);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_logged_in, is_eu]);\n\n    return ReactDOM.createPortal(\n        <Dialog\n            className='redirect-notice'\n            is_visible={dialog_status}\n            title='Redirect notice'\n            cancel_button_text={localize('Cancel')}\n            confirm_button_text={localize('Proceed')}\n            onCancel={onCancelDialog}\n            onConfirm={onConfirmDialog}\n            dismissable={onCancelDialog}\n        >\n            {localize('You are being redirected to an external website.')}\n        </Dialog>,\n        document.getElementById(portal_id)\n    );\n};\n\nexport default RedirectNoticeModal;\n","import RedirectNoticeModal from './redirect-notice-modal.jsx';\n\nexport default RedirectNoticeModal;\n","import { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport React from 'react';\n\nconst CompletedAssessmentModal = ({ should_show_assessment_complete_modal, setShouldShowAssessmentCompleteModal }) => {\n    const handleOnClick = () => {\n        setShouldShowAssessmentCompleteModal(false);\n    };\n\n    return (\n        <Modal\n            width='44rem'\n            has_close_icon={false}\n            className='center-risk-modal'\n            is_open={should_show_assessment_complete_modal}\n        >\n            <Modal.Body>\n                <Icon icon='IcVerificationSuccess' color='green' size={80} />\n                <Text as='p' align='center' weight='bold' className='verified-account__text'>\n                    <Localize i18n_default_text='Assessment Completed<0/><0/>' components={[<br key={0} />]} />\n                </Text>\n                <Text as='p' size='xs' align='center'>\n                    <Localize\n                        i18n_default_text='Thank you! Your response has been recorded into our system.<0/><0/>Please click ‘OK’ to continue.'\n                        components={[<br key={0} />]}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button type='button' large text={localize('OK')} primary onClick={handleOnClick} />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default connect(({ ui }) => ({\n    should_show_assessment_complete_modal: ui.should_show_assessment_complete_modal,\n    setShouldShowAssessmentCompleteModal: ui.setShouldShowAssessmentCompleteModal,\n}))(CompletedAssessmentModal);\n","import React from 'react';\nimport { connect } from 'Stores/connect';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { formatDate, formatTime, isMobile } from '@deriv/shared';\n\nconst CooldownWarningModal = ({\n    should_show_cooldown_modal,\n    setShouldShowCooldownModal,\n    real_account_creation_unlock_date,\n}) => {\n    const unblock_date = formatDate(real_account_creation_unlock_date, 'DD MMMM');\n    const unblock_time = formatTime(real_account_creation_unlock_date, 'hh:mm [GMT]');\n    const real_account_unblock_date = localize('{{unblock_date}} at {{unblock_time}}', { unblock_date, unblock_time });\n    const handleToggleModal = () => setShouldShowCooldownModal(!should_show_cooldown_modal);\n\n    return (\n        <Modal\n            width='44rem'\n            title={localize('Account creation paused for 24 hours')}\n            is_open={should_show_cooldown_modal}\n            toggleModal={handleToggleModal}\n            className='center-risk-modal'\n            has_close_icon={!isMobile()}\n        >\n            <Modal.Body>\n                <Icon icon='IcRedWarning' size={63} />\n                <Text as='p' size='xs' align='center' className='risk-acceptance__text'>\n                    <Localize\n                        i18n_default_text=\"Sorry, you're unable to create an account at this time. As you declined our previous risk warnings, we need you to wait for 24 hours after your first account creation attempt before you can proceed.<0/><0/>\"\n                        components={<br key={0} />}\n                    />\n                    <Localize\n                        i18n_default_text='We take your financial well-being seriously and want to ensure you are fully aware of the risks before trading.<0/><0/>'\n                        components={<br key={0} />}\n                    />\n                    <Localize\n                        i18n_default_text='Thank you for your understanding. You can create your account on {{real_account_unblock_date}} or later.'\n                        values={{ real_account_unblock_date }}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button\n                    type='button'\n                    large\n                    text={localize('OK')}\n                    primary\n                    onClick={() => {\n                        setShouldShowCooldownModal(false);\n                    }}\n                />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default connect(({ client, ui }) => ({\n    real_account_creation_unlock_date: client.real_account_creation_unlock_date,\n    should_show_cooldown_modal: ui.should_show_cooldown_modal,\n    setShouldShowCooldownModal: ui.setShouldShowCooldownModal,\n}))(CooldownWarningModal);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { mt5_community_url } from '@deriv/shared';\n\ntype TMT5NotificationDescription = {\n    setMT5NotificationModal: (value: boolean) => void;\n};\nconst MT5NotificationDescription = ({ setMT5NotificationModal }: TMT5NotificationDescription) => {\n    return (\n        <div className={'mt5-notification-modal-description'}>\n            <ol className='mt5-notification-list-container'>\n                <li className='mt5-notification-list'>\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='Log back in to MT5 after 7:30 GMT on 20 Oct 2023 if you’re having difficulty logging in to MT5 as we’re making some updates to our MT5 platform. <0>Follow these steps</0> to log back in to MT5.'\n                            components={[\n                                <a\n                                    className='mt5-notification-list__link'\n                                    target='_blank'\n                                    rel='noopener noreferrer'\n                                    href={mt5_community_url}\n                                    key={0}\n                                    onClick={() => {\n                                        setMT5NotificationModal(false);\n                                    }}\n                                />,\n                            ]}\n                        />\n                    </Text>\n                </li>\n                <li className='mt5-notification-list'>\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='If you need further assistance, let us know via <0>live chat</0>.'\n                            components={[\n                                <a\n                                    className='mt5-notification-list__link'\n                                    onClick={() => {\n                                        window.LC_API.open_chat_window();\n                                        setMT5NotificationModal(false);\n                                    }}\n                                    key={0}\n                                />,\n                            ]}\n                        />\n                    </Text>\n                </li>\n            </ol>\n        </div>\n    );\n};\n\nexport default MT5NotificationDescription;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Modal, DesktopWrapper, MobileDialog, MobileWrapper, UILoader, Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport MT5NotificationDescription from './mt5-notification-description';\n\nconst MT5Notification = observer(() => {\n    const { traders_hub } = useStore();\n    const { setMT5NotificationModal, is_mt5_notification_modal_visible } = traders_hub;\n    const clickHandler = () => {\n        setMT5NotificationModal(!is_mt5_notification_modal_visible);\n    };\n\n    return (\n        <React.Suspense fallback={<UILoader />}>\n            <DesktopWrapper>\n                <Modal\n                    has_close_icon={false}\n                    is_open={is_mt5_notification_modal_visible}\n                    title={localize('Deriv MT5: Your action is needed')}\n                    toggleModal={clickHandler}\n                    className='mt5-notification-modal'\n                    width='510px'\n                >\n                    <Modal.Body className='mt5-notification-modal-body'>\n                        <MT5NotificationDescription setMT5NotificationModal={setMT5NotificationModal} />\n                    </Modal.Body>\n                    <Modal.Footer has_separator>\n                        <Button\n                            primary\n                            onClick={() => {\n                                setMT5NotificationModal(false);\n                            }}\n                        >\n                            {localize('OK')}\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    wrapper_classname='mt5-notification-modal-description'\n                    title={localize('Deriv MT5: Your action is needed')}\n                    visible={is_mt5_notification_modal_visible}\n                    onClose={() => {\n                        setMT5NotificationModal(false);\n                    }}\n                    has_full_height\n                    has_close_icon={false}\n                    footer={\n                        <div className='mt5-notification-modal-description--footer'>\n                            <Button\n                                className='mt5-notification-modal-description--button'\n                                primary\n                                onClick={() => setMT5NotificationModal(false)}\n                            >\n                                {localize('OK')}\n                            </Button>\n                        </div>\n                    }\n                >\n                    <MT5NotificationDescription setMT5NotificationModal={setMT5NotificationModal} />\n                </MobileDialog>\n            </MobileWrapper>\n        </React.Suspense>\n    );\n});\n\nexport default MT5Notification;\n","import MT5Notification from './mt5-notification';\nimport './mt5-notification.scss';\n\nexport default MT5Notification;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport { useHistory } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport './need-real-account-for-cashier-modal.scss';\n\nconst NeedRealAccountForCashierModal = observer(() => {\n    const { ui, traders_hub } = useStore();\n    const { is_eu_user, selectRegion } = traders_hub;\n    const {\n        is_need_real_account_for_cashier_modal_visible: is_open,\n        toggleNeedRealAccountForCashierModal,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n    } = ui;\n\n    const history = useHistory();\n\n    const createAccount = () => {\n        toggleNeedRealAccountForCashierModal();\n        return is_eu_user ? openRealAccountSignup('maltainvest') : openRealAccountSignup('svg');\n    };\n\n    const switchRegulation = () => {\n        return is_eu_user ? selectRegion('Non-EU') : selectRegion('EU');\n    };\n\n    const onClose = async () => {\n        toggleNeedRealAccountForCashierModal();\n        await switchRegulation();\n        history.push(routes.cashier_deposit);\n    };\n\n    const regulation = is_eu_user ? 'EU' : 'non-EU';\n\n    const active_real_regulation = is_eu_user ? 'non-EU' : 'EU';\n\n    return (\n        <Dialog\n            className='need-real-account-for-cashier-dialog'\n            title={localize('The cashier is for real accounts only')}\n            confirm_button_text={localize('Add account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Switch account')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n            dismissable={false}\n            has_close_icon\n            onClose={toggleNeedRealAccountForCashierModal}\n        >\n            <Localize\n                i18n_default_text='It looks like you don’t have a real {{regulation}} account. To use the cashier, switch to your {{active_real_regulation}} real account, or get an {{regulation}} real account.'\n                values={{ regulation, active_real_regulation }}\n            />\n        </Dialog>\n    );\n});\n\nexport default NeedRealAccountForCashierModal;\n","import NeedRealAccountForCashierModal from './need-real-account-for-cashier-modal';\nimport './need-real-account-for-cashier-modal.scss';\n\nexport default NeedRealAccountForCashierModal;\n","import React from 'react';\nimport { Dialog } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useStore, observer } from '@deriv/stores';\nimport './ready-to-deposit-modal.scss';\n\nconst ReadyToDepositModal = observer(() => {\n    const { ui, traders_hub, client } = useStore();\n    const { is_eu_user } = traders_hub;\n    const {\n        is_ready_to_deposit_modal_visible: is_open,\n        toggleReadyToDepositModal: onClose,\n        disableApp,\n        enableApp,\n        openRealAccountSignup,\n        setShouldShowCooldownModal,\n    } = ui;\n    const { real_account_creation_unlock_date } = client;\n\n    const createAccount = () => {\n        onClose();\n        if (real_account_creation_unlock_date) {\n            return setShouldShowCooldownModal(true);\n        } else if (is_eu_user) {\n            return openRealAccountSignup('maltainvest');\n        }\n        return openRealAccountSignup('svg');\n    };\n\n    return (\n        <Dialog\n            className='ready-to-deposit-dialog'\n            title={localize('Ready to deposit and trade for real?')}\n            confirm_button_text={localize('Add real account')}\n            onConfirm={createAccount}\n            cancel_button_text={localize('Maybe later')}\n            onCancel={onClose}\n            is_closed_on_cancel\n            disableApp={disableApp}\n            enableApp={enableApp}\n            is_closed_on_confirm\n            is_visible={is_open}\n            dismissable={true}\n            has_close_icon={false}\n            onEscapeButtonCancel={onClose}\n        >\n            {localize('You need a real Deriv account to access the cashier.')}\n        </Dialog>\n    );\n});\n\nexport default ReadyToDepositModal;\n","import ReadyToDepositModal from './ready-to-deposit-modal';\n\nexport default ReadyToDepositModal;\n","import { TestWarningModal } from '@deriv/account';\nimport { Button, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { routes } from '@deriv/shared';\nimport React from 'react';\nimport { connect } from 'Stores/connect';\n\nconst RiskAcceptTestWarningModal = ({\n    should_show_risk_accept_modal,\n    setShouldShowWarningModal,\n    setShouldShowAssessmentCompleteModal,\n    setIsTradingAssessmentForNewUserEnabled,\n}) => {\n    const handleAcceptAppropriatenessTestWarning = () => {\n        setShouldShowWarningModal(false);\n        if (window.location.href.includes(routes.trading_assessment)) {\n            setShouldShowAssessmentCompleteModal(false);\n        } else {\n            setShouldShowAssessmentCompleteModal(true);\n            setIsTradingAssessmentForNewUserEnabled(true);\n        }\n    };\n\n    return (\n        <TestWarningModal\n            show_risk_modal={should_show_risk_accept_modal}\n            body_content={\n                <Text as='p' size='xs'>\n                    <Localize\n                        i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                        components={[<br key={0} />]}\n                    />\n                    <Localize\n                        i18n_default_text='Based on your answers, it looks like you have insufficient knowledge and experience in trading CFDs. CFD trading is risky and you could potentially lose all of your capital.<0/><0/>'\n                        components={[<br key={0} />]}\n                    />\n                    <Localize i18n_default_text='Please note that by clicking ‘OK’, you may be exposing yourself to risks. You may not have the knowledge or experience to properly assess or mitigate these risks, which may be significant, including the risk of losing the entire sum you have invested.' />\n                </Text>\n            }\n            footer_content={\n                <Button\n                    type='button'\n                    large\n                    text={localize('OK')}\n                    primary\n                    onClick={handleAcceptAppropriatenessTestWarning}\n                />\n            }\n        />\n    );\n};\n\nexport default connect(({ ui }) => ({\n    should_show_risk_accept_modal: ui.should_show_risk_accept_modal,\n    setShouldShowWarningModal: ui.setShouldShowWarningModal,\n    setShouldShowAssessmentCompleteModal: ui.setShouldShowAssessmentCompleteModal,\n    setIsTradingAssessmentForNewUserEnabled: ui.setIsTradingAssessmentForNewUserEnabled,\n}))(RiskAcceptTestWarningModal);\n","import React from 'react';\nimport { connect } from 'Stores/connect';\nimport { Button, Icon, Modal, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nconst TradingExperienceModal = ({\n    cfd_score,\n    is_trading_experience_incomplete,\n    setShouldShowTradingAssessmentModal,\n    should_show_trading_assessment_modal,\n    setShouldShowTradeAssessmentForm,\n}) => {\n    React.useEffect(() => {\n        setShouldShowTradingAssessmentModal(cfd_score === 0);\n    }, []);\n\n    const handleOnSubmit = () => {\n        setShouldShowTradingAssessmentModal(false);\n        setShouldShowTradeAssessmentForm(true);\n    };\n\n    return (\n        <Modal\n            width='44rem'\n            className='center-risk-modal'\n            is_open={is_trading_experience_incomplete && should_show_trading_assessment_modal}\n        >\n            <Modal.Body>\n                <Icon icon='IcCurrencyEurCheck' size={95} />\n                <Text as='p' align='center' weight='bold' className='verified-account__text'>\n                    <Localize i18n_default_text='Trading Experience Assessment<0/>' components={[<br key={0} />]} />\n                </Text>\n                <Text as='p' size='xs' align='center'>\n                    <Localize\n                        i18n_default_text='As per our regulatory obligations, we are required to assess your trading knowledge and experience.<0/><0/>Please click ‘OK’ to continue'\n                        components={[<br key={0} />]}\n                    />\n                </Text>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button type='button' large text={localize('OK')} primary onClick={handleOnSubmit} />\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default connect(({ client, ui }) => ({\n    is_trading_experience_incomplete: client.is_trading_experience_incomplete,\n    setShouldShowTradingAssessmentModal: ui.setShouldShowTradingAssessmentModal,\n    should_show_trading_assessment_modal: ui.should_show_trading_assessment_modal,\n    setShouldShowTradeAssessmentForm: ui.setShouldShowTradeAssessmentForm,\n    cfd_score: client.cfd_score,\n}))(TradingExperienceModal);\n","import React from 'react';\nimport { Modal, DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport { RiskToleranceWarningModal, TradingAssessmentForm, tradingAssessmentConfig } from '@deriv/account';\nimport TradingExperienceModal from './trading-experience-modal.jsx';\n\nconst TradingAssessmentExistingUser = ({\n    updateAccountStatus,\n    active_account_landing_company,\n    should_show_trade_assessment_form,\n    setShouldShowTradeAssessmentForm,\n    setFinancialAndTradingAssessment,\n    should_show_risk_warning_modal,\n    setShouldShowRiskWarningModal,\n    setShouldShowWarningModal,\n    setShouldShowAssessmentCompleteModal,\n    setIsTradingAssessmentForExistingUserEnabled,\n    setIsTradingAssessmentForNewUserEnabled,\n    setShouldShowTradingAssessmentModal,\n    setSubSectionIndex,\n}) => {\n    // Get the Trading assessment questions and initial_value\n    const [form_values, setFormValue] = React.useState({});\n    const [assessment_questions, setAssessmentQuestions] = React.useState({});\n    const [should_move_to_next, setShouldMoveToNext] = React.useState(false);\n\n    React.useEffect(() => {\n        localStorage.removeItem('current_question_index');\n        setIsTradingAssessmentForExistingUserEnabled(true);\n        const { form_value, props } = tradingAssessmentConfig(\n            { real_account_signup_target: active_account_landing_company },\n            null\n        );\n        setFormValue(form_value);\n        setAssessmentQuestions(props.assessment_questions ?? []);\n        return () => setIsTradingAssessmentForExistingUserEnabled(false);\n    }, []);\n\n    const handleSubmit = async values => {\n        if (values.risk_tolerance === 'No') {\n            setShouldShowTradeAssessmentForm(false);\n            setShouldShowRiskWarningModal(true);\n        } else {\n            const form_payload = {\n                trading_experience_regulated: { ...values },\n            };\n            const response = await setFinancialAndTradingAssessment(form_payload);\n            const { trading_score } = response.set_financial_assessment ?? {};\n            await updateAccountStatus();\n            setShouldShowTradeAssessmentForm(false);\n            if (trading_score === 0) {\n                setShouldShowWarningModal(true);\n            } else {\n                setShouldShowAssessmentCompleteModal(true);\n            }\n            setIsTradingAssessmentForNewUserEnabled(true);\n        }\n    };\n\n    const handleAcceptRisk = () => {\n        setFormValue(prev_state => ({ ...prev_state, risk_tolerance: 'Yes' }));\n        setShouldMoveToNext(true);\n        setShouldShowRiskWarningModal(false);\n        setShouldShowTradeAssessmentForm(true);\n    };\n\n    const handleCancel = () => {\n        setShouldShowTradingAssessmentModal(true);\n        setShouldShowTradeAssessmentForm(false);\n    };\n\n    if (should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={localize('Risk Tolerance Warning')}\n                button_text={localize('Yes, I understand the risk.')}\n                handleAcceptRisk={handleAcceptRisk}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, you must confirm that you understand your capital is at risk.'\n                        components={[<br key={0} />]}\n                    />\n                }\n                has_icon\n                has_sub_header\n            />\n        );\n    } else if (should_show_trade_assessment_form) {\n        return (\n            <React.Fragment>\n                <DesktopWrapper>\n                    <Modal\n                        is_open={should_show_trade_assessment_form}\n                        title={localize('Trading Experience Assessment')}\n                        width='904px'\n                        has_close_icon={false}\n                        height='688px'\n                        className='real-account-signup-modal'\n                    >\n                        <TradingAssessmentForm\n                            assessment_questions={assessment_questions}\n                            form_value={form_values}\n                            onSubmit={handleSubmit}\n                            onCancel={handleCancel}\n                            setSubSectionIndex={setSubSectionIndex}\n                            class_name='trading-assessment--existing-user'\n                            should_move_to_next={should_move_to_next}\n                        />\n                    </Modal>\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <MobileDialog\n                        visible={should_show_trade_assessment_form}\n                        title={localize('Trading Experience Assessment')}\n                        portal_element_id='modal_root'\n                        has_close_icon={false}\n                    >\n                        <TradingAssessmentForm\n                            assessment_questions={assessment_questions}\n                            form_value={form_values}\n                            onSubmit={handleSubmit}\n                            onCancel={handleCancel}\n                            setSubSectionIndex={setSubSectionIndex}\n                            class_name='trading-assessment--existing-user'\n                            should_move_to_next={should_move_to_next}\n                        />\n                    </MobileDialog>\n                </MobileWrapper>\n            </React.Fragment>\n        );\n    }\n    return <TradingExperienceModal />;\n};\n\nexport default connect(({ client, ui }) => ({\n    setFinancialAndTradingAssessment: client.setFinancialAndTradingAssessment,\n    should_show_risk_warning_modal: ui.should_show_risk_warning_modal,\n    setShouldShowRiskWarningModal: ui.setShouldShowRiskWarningModal,\n    setShouldShowWarningModal: ui.setShouldShowWarningModal,\n    should_show_trade_assessment_form: ui.should_show_trade_assessment_form,\n    setShouldShowTradeAssessmentForm: ui.setShouldShowTradeAssessmentForm,\n    setShouldShowAssessmentCompleteModal: ui.setShouldShowAssessmentCompleteModal,\n    updateAccountStatus: client.updateAccountStatus,\n    setIsTradingAssessmentForExistingUserEnabled: ui.setIsTradingAssessmentForExistingUserEnabled,\n    active_account_landing_company: client.landing_company_shortcode,\n    setIsTradingAssessmentForNewUserEnabled: ui.setIsTradingAssessmentForNewUserEnabled,\n    setSubSectionIndex: ui.setSubSectionIndex,\n    setShouldShowTradingAssessmentModal: ui.setShouldShowTradingAssessmentModal,\n}))(TradingAssessmentExistingUser);\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { ContentFlag, moduleLoader, routes, SessionStore } from '@deriv/shared';\n\nimport DerivRealAccountRequiredModal from 'App/Components/Elements/Modals/deriv-real-account-required-modal.jsx';\nimport MT5AccountNeededModal from 'App/Components/Elements/Modals/mt5-account-needed-modal.jsx';\nimport RedirectNoticeModal from 'App/Components/Elements/Modals/RedirectNotice';\nimport { connect } from 'Stores/connect';\n\nimport CompletedAssessmentModal from './completed-assessment-modal.jsx';\nimport CooldownWarningModal from './cooldown-warning-modal.jsx';\nimport MT5Notification from './mt5-notification';\nimport NeedRealAccountForCashierModal from './need-real-account-for-cashier-modal';\nimport ReadyToDepositModal from './ready-to-deposit-modal';\nimport RiskAcceptTestWarningModal from './risk-accept-test-warning-modal';\nimport TradingAssessmentExistingUser from './trading-assessment-existing-user.jsx';\n\nconst AccountSignupModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"account-signup-modal\" */ '../AccountSignupModal'))\n);\nconst ResetOrUnlinkPasswordModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"reset-or-unlink-password-modal\" */ '../ResetOrUnlinkPasswordModal'))\n);\n\nconst UnlinkPasswordModal = React.lazy(() =>\n    import(/* webpackChunkName: \"reset-or-unlink-password-modal\" */ '../UnlinkPasswordModal')\n);\n\nconst RedirectToLoginModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"reset-password-modal\" */ '../RedirectToLoginModal'))\n);\nconst SetResidenceModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"set-residence-modal\"  */ '../SetResidenceModal'))\n);\nconst RealityCheckModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"reality-check-modal\"  */ '../RealityCheckModal'))\n);\nconst WelcomeModal = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"welcome-modal\"  */ '../WelcomeModal'))\n);\nconst ResetEmailModal = React.lazy(() => import(/* webpackChunkName: \"reset-email-modal\"  */ '../ResetEmailModal'));\n\nconst UpdateEmailModal = React.lazy(() => import(/* webpackChunkName: \"update-email-modal\"  */ '../UpdateEmailModal'));\n\nconst WarningScamMessageModal = React.lazy(() =>\n    import(/* webpackChunkName: \"warning-scam-message\" */ '../WarningScamMessageModal')\n);\n\nconst WarningCloseCreateRealAccountModal = React.lazy(() =>\n    import(/* webpackChunkName: \"warning-close-create-real-account\" */ '../WarningCloseCreateRealAccountModal')\n);\n\nconst AdditionalKycInfoModal = React.lazy(() =>\n    import(\n        /* webpackChunkName: \"additional-kyc-info-modal\" */ '@deriv/account/src/Components/additional-kyc-info-modal'\n    )\n);\nconst InformationSubmittedModal = React.lazy(() =>\n    import(/* webpackChunkName: \"information-submitted-modal\" */ './information-submitted-modal')\n);\n\nconst AppModals = ({\n    is_account_needed_modal_on,\n    is_closing_create_real_account_modal,\n    is_welcome_modal_visible,\n    is_reality_check_visible,\n    is_set_residence_modal_visible,\n    is_logged_in,\n    should_show_cooldown_modal,\n    should_show_assessment_complete_modal,\n    toggleAccountSignupModal,\n    is_trading_assessment_for_new_user_enabled,\n    fetchFinancialAssessment,\n    setCFDScore,\n    content_flag,\n    is_mt5_notification_modal_visible,\n    active_account_landing_company,\n    is_deriv_account_needed_modal_visible,\n    is_warning_scam_message_modal_visible,\n    is_ready_to_deposit_modal_visible,\n    is_trading_experience_incomplete,\n    should_show_risk_accept_modal,\n    is_need_real_account_for_cashier_modal_visible,\n    is_additional_kyc_info_modal_open,\n    is_kyc_information_submitted_modal_open,\n}) => {\n    const temp_session_signup_params = SessionStore.get('signup_query_param');\n    const url_params = new URLSearchParams(useLocation().search || temp_session_signup_params);\n    const url_action_param = url_params.get('action');\n\n    const is_eu_user = [ContentFlag.LOW_RISK_CR_EU, ContentFlag.EU_REAL, ContentFlag.EU_DEMO].includes(content_flag);\n\n    React.useEffect(() => {\n        if (is_logged_in) {\n            fetchFinancialAssessment().then(response => {\n                setCFDScore(response?.cfd_score ?? 0);\n            });\n        }\n    }, [is_logged_in]);\n    if (temp_session_signup_params && window.location.href.includes(routes.onboarding)) {\n        toggleAccountSignupModal(true);\n    } else {\n        SessionStore.remove('signup_query_param');\n        toggleAccountSignupModal(false);\n    }\n\n    let ComponentToLoad = null;\n    switch (url_action_param) {\n        case 'redirect_to_login':\n            ComponentToLoad = <RedirectToLoginModal />;\n            break;\n        case 'reset_password':\n            ComponentToLoad = <ResetOrUnlinkPasswordModal />;\n            break;\n        case 'signup':\n            ComponentToLoad = <AccountSignupModal />;\n            break;\n        case 'request_email':\n            ComponentToLoad = <ResetEmailModal />;\n            break;\n        case 'social_email_change':\n            ComponentToLoad = <UnlinkPasswordModal />;\n            break;\n        case 'system_email_change':\n            ComponentToLoad = <UpdateEmailModal />;\n            break;\n        default:\n            if (is_set_residence_modal_visible) {\n                ComponentToLoad = <SetResidenceModal />;\n            }\n            break;\n    }\n\n    if (\n        is_logged_in &&\n        active_account_landing_company === 'maltainvest' &&\n        !is_trading_assessment_for_new_user_enabled &&\n        is_trading_experience_incomplete &&\n        content_flag !== ContentFlag.LOW_RISK_CR_EU &&\n        content_flag !== ContentFlag.LOW_RISK_CR_NON_EU\n    ) {\n        ComponentToLoad = <TradingAssessmentExistingUser />;\n    } else if (is_warning_scam_message_modal_visible) {\n        ComponentToLoad = <WarningScamMessageModal />;\n    } else if (is_closing_create_real_account_modal) {\n        ComponentToLoad = <WarningCloseCreateRealAccountModal />;\n    } else if (is_welcome_modal_visible) {\n        ComponentToLoad = <WelcomeModal />;\n    } else if (is_account_needed_modal_on) {\n        ComponentToLoad = <MT5AccountNeededModal />;\n    } else if (is_reality_check_visible) {\n        ComponentToLoad = <RealityCheckModal />;\n    } else if (should_show_cooldown_modal) {\n        ComponentToLoad = <CooldownWarningModal />;\n    } else if (is_mt5_notification_modal_visible) {\n        ComponentToLoad = <MT5Notification />;\n    } else if (should_show_assessment_complete_modal) {\n        ComponentToLoad = <CompletedAssessmentModal />;\n    } else if (is_deriv_account_needed_modal_visible) {\n        ComponentToLoad = <DerivRealAccountRequiredModal />;\n    } else if (should_show_risk_accept_modal) {\n        ComponentToLoad = <RiskAcceptTestWarningModal />;\n    }\n    if (is_ready_to_deposit_modal_visible) {\n        ComponentToLoad = <ReadyToDepositModal />;\n    }\n\n    if (is_need_real_account_for_cashier_modal_visible) {\n        ComponentToLoad = <NeedRealAccountForCashierModal />;\n    }\n\n    if (is_additional_kyc_info_modal_open) {\n        ComponentToLoad = <AdditionalKycInfoModal />;\n    }\n\n    if (is_kyc_information_submitted_modal_open) {\n        ComponentToLoad = <InformationSubmittedModal />;\n    }\n\n    return (\n        <>\n            <RedirectNoticeModal is_logged_in={is_logged_in} is_eu={is_eu_user} portal_id='popup_root' />\n            {ComponentToLoad ? <React.Suspense fallback={<div />}>{ComponentToLoad}</React.Suspense> : null}\n        </>\n    );\n};\n\nexport default connect(({ client, ui, traders_hub }) => ({\n    is_welcome_modal_visible: ui.is_welcome_modal_visible,\n    is_account_needed_modal_on: ui.is_account_needed_modal_on,\n    is_closing_create_real_account_modal: ui.is_closing_create_real_account_modal,\n    is_set_residence_modal_visible: ui.is_set_residence_modal_visible,\n    is_real_acc_signup_on: ui.is_real_acc_signup_on,\n    is_logged_in: client.is_logged_in,\n    is_reality_check_visible: client.is_reality_check_visible,\n    has_maltainvest_account: client.has_maltainvest_account,\n    fetchFinancialAssessment: client.fetchFinancialAssessment,\n    is_mt5_notification_modal_visible: traders_hub.is_mt5_notification_modal_visible,\n    setCFDScore: client.setCFDScore,\n    setShouldShowVerifiedAccount: ui.setShouldShowVerifiedAccount,\n    should_show_cooldown_modal: ui.should_show_cooldown_modal,\n    should_show_assessment_complete_modal: ui.should_show_assessment_complete_modal,\n    toggleAccountSignupModal: ui.toggleAccountSignupModal,\n    is_trading_assessment_for_new_user_enabled: ui.is_trading_assessment_for_new_user_enabled,\n    active_account_landing_company: client.landing_company_shortcode,\n    is_deriv_account_needed_modal_visible: ui.is_deriv_account_needed_modal_visible,\n    is_warning_scam_message_modal_visible: ui.is_warning_scam_message_modal_visible,\n    is_ready_to_deposit_modal_visible: ui.is_ready_to_deposit_modal_visible,\n    is_need_real_account_for_cashier_modal_visible: ui.is_need_real_account_for_cashier_modal_visible,\n    content_flag: traders_hub.content_flag,\n    is_trading_experience_incomplete: client.is_trading_experience_incomplete,\n    should_show_risk_accept_modal: ui.should_show_risk_accept_modal,\n    is_additional_kyc_info_modal_open: ui.is_additional_kyc_info_modal_open,\n    is_kyc_information_submitted_modal_open: ui.is_kyc_information_submitted_modal_open,\n}))(AppModals);\n","import AppModals from './app-modals.jsx';\n\nexport default AppModals;\n","import React from 'react';\nimport { PlatformContext } from '@deriv/shared';\n\nconst DERIV_APPSTORE_KEY = 'is_appstore';\n\nconst PlatformContainer = props => {\n    // TODO: set is_appstore based on a flag from BE.\n    const is_appstore_storage = window.localStorage.getItem(DERIV_APPSTORE_KEY) === 'true';\n    const [is_appstore, setIsAppStore] = React.useState(is_appstore_storage);\n\n    const platform_store = {\n        is_appstore,\n        setIsAppStore,\n        DERIV_APPSTORE_KEY,\n    };\n\n    return <PlatformContext.Provider value={platform_store} {...props} />;\n};\n\nexport default PlatformContainer;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { urlForLanguage } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinaryRoutes from 'App/Components/Routes';\nimport { connect } from 'Stores/connect';\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = ({\n    addRouteHistoryItem,\n    error,\n    has_error,\n    history,\n    is_logged_in,\n    is_logging_in,\n    location,\n    passthrough,\n    setAppRouterHistory,\n    setInitialRouteHistoryItem,\n}) => {\n    const initial_route = React.useRef(null);\n    const unlisten_to_change = React.useRef(null);\n\n    React.useEffect(() => {\n        if (!unlisten_to_change.current && !initial_route.current) {\n            initial_route.current = location.pathname;\n        }\n\n        setInitialRouteHistoryItem(history.location);\n\n        unlisten_to_change.current = history.listen((route_to, action) => {\n            if (['PUSH', 'POP'].includes(action)) addRouteHistoryItem({ ...route_to, action });\n        });\n\n        setAppRouterHistory(history);\n\n        return () => {\n            if (typeof unlisten_to_change.current === 'function') {\n                unlisten_to_change.current();\n                unlisten_to_change.current = null;\n                initial_route.current = null;\n            }\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const lang = getLanguage();\n    const lang_regex = /[?&]lang=/;\n    const has_lang = lang_regex.test(location.search);\n\n    if (has_error) {\n        return <Error {...error} />;\n    }\n\n    // we need to replace state of history object on every route\n    // to prevent language query parameter from disappering\n    // for non-english languages. Upon visiting with a\n    // non-supported language, the language still\n    // shows up in the URL. This is not in sync\n    // with the default language (EN), so we\n    // will remove it.\n    if ((!has_lang && lang !== 'EN') || (has_lang && lang === 'EN')) {\n        window.history.replaceState({}, document.title, urlForLanguage(lang));\n    }\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n};\n\nRoutes.propTypes = {\n    addRouteHistoryItem: PropTypes.func,\n    error: MobxPropTypes.objectOrObservableObject,\n    has_error: PropTypes.bool,\n    history: PropTypes.object,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    is_virtual: PropTypes.bool,\n    location: PropTypes.object,\n    passthrough: PropTypes.object,\n    setAppRouterHistory: PropTypes.func,\n    setInitialRouteHistoryItem: PropTypes.func,\n};\n\n// need to wrap withRouter around connect\n// to prevent updates on <BinaryRoutes /> from being blocked\nexport default withRouter(\n    connect(({ client, common }) => ({\n        is_logged_in: client.is_logged_in,\n        is_logging_in: client.is_logging_in,\n        error: common.error,\n        has_error: common.has_error,\n        setAppRouterHistory: common.setAppRouterHistory,\n        addRouteHistoryItem: common.addRouteHistoryItem,\n        setInitialRouteHistoryItem: common.setInitialRouteHistoryItem,\n    }))(Routes)\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Toast } from '@deriv/components';\nimport { connect } from 'Stores/connect';\nimport 'Sass/app/_common/components/app-toast-message.scss';\n\nconst AppToastMessages = ({ toasts, removeToast }) => {\n    if (toasts.length === 0) return null;\n\n    const top_toasts = toasts.filter(t => !t.is_bottom);\n    const bottom_toasts = toasts.filter(t => t.is_bottom);\n\n    const createToast = toast_config => {\n        const { key, content, ...config } = toast_config;\n        return (\n            <Toast key={key} {...config} onClose={() => removeToast(key)}>\n                {content}\n            </Toast>\n        );\n    };\n\n    const toast_messages = (\n        <Div100vhContainer className='toast-messages' height_offset='15px'>\n            <div className='toast-messages__top'>{top_toasts.map(createToast)}</div>\n            <div className='toast-messages__bottom'>{bottom_toasts.map(createToast)}</div>\n        </Div100vhContainer>\n    );\n\n    return ReactDOM.createPortal(toast_messages, document.getElementById('popup_root'));\n};\n\nAppToastMessages.propTypes = {\n    toasts: PropTypes.arrayOf(\n        PropTypes.shape({\n            key: PropTypes.string,\n            timeout: PropTypes.number,\n            content: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n            type: PropTypes.oneOf(['error', 'info']),\n            is_bottom: PropTypes.bool,\n        })\n    ),\n    removeToast: PropTypes.func,\n};\n\nexport default connect(({ ui }) => ({\n    toasts: ui.toasts,\n    removeToast: ui.removeToast,\n}))(AppToastMessages);\n","import React, { useState } from 'react';\nimport { Button, Checkbox, Input } from '@deriv/components';\nimport { getAppId, getDebugServiceWorker, getSocketURL } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useFormik } from 'formik';\nimport './Devtools.scss';\n\nconst EndpointSection = observer(() => {\n    const formik = useFormik({\n        initialValues: {\n            app_id: getAppId(),\n            server: getSocketURL(),\n            is_debug_service_worker_enabled: !!getDebugServiceWorker(),\n        },\n        onSubmit: values => {\n            localStorage.setItem('config.app_id', values.app_id.toString());\n            localStorage.setItem('config.server_url', values.server);\n            localStorage.setItem('debug_service_worker', (values.is_debug_service_worker_enabled ? 1 : 0).toString());\n            sessionStorage.removeItem('config.platform');\n            location.reload();\n        },\n        validate: values => {\n            const errors: Record<string, string> = {};\n\n            if (!values.app_id) {\n                errors.app_id = 'App ID is required.';\n            } else if (!/^\\d+$/.test(values.app_id.toString())) {\n                errors.app_id = 'Please enter a valid app ID.';\n            }\n\n            if (!values.server) {\n                errors.server = 'Server is required.';\n            } else if (!/^[\\w|\\-|.]+$/.test(values.server)) {\n                errors.server = 'Please enter a valid server.';\n            }\n\n            return errors;\n        },\n    });\n\n    return (\n        <div className='devtools__endpoint-container'>\n            <Input\n                type='text'\n                autoComplete='off'\n                maxLength={30}\n                error={formik.touched.server ? formik.errors.server : undefined}\n                label='Server'\n                hint='e.g. frontend.derivws.com'\n                {...formik.getFieldProps('server')}\n            />\n            <Input\n                type='text'\n                autoComplete='off'\n                maxLength={30}\n                error={formik.touched.app_id ? formik.errors.app_id : undefined}\n                label='OAuth App ID'\n                hint={\n                    <React.Fragment>\n                        Register an{' '}\n                        <a href='https://developers.binary.com/applications/' target='_blank' rel='noopener noreferrer'>\n                            app ID\n                        </a>{' '}\n                        to use the above server for logging in.\n                    </React.Fragment>\n                }\n                {...formik.getFieldProps('app_id')}\n            />\n            <Checkbox\n                classNameLabel={'devtools__checkbox-label'}\n                label='Enable Service Worker registration for this URL'\n                {...formik.getFieldProps('is_debug_service_worker_enabled')}\n            />\n            <div className='devtools__endpoint-actions'>\n                <Button\n                    type='submit'\n                    is_disabled={!formik.isValid || !formik.dirty}\n                    text='Submit'\n                    primary\n                    onClick={() => formik.handleSubmit()}\n                />\n                <Button\n                    type='button'\n                    onClick={() => {\n                        localStorage.removeItem('config.app_id');\n                        localStorage.removeItem('config.server_url');\n                        location.reload();\n                    }}\n                    text='Reset to original settings'\n                />\n            </div>\n        </div>\n    );\n});\n\nconst FeatureFlagsSection = observer(() => {\n    const { feature_flags } = useStore();\n\n    if (!feature_flags.data) return null;\n\n    return (\n        <div className='devtools__checkbox-container'>\n            {Object.keys(feature_flags.data).map(flag => {\n                const flag_name = flag as keyof typeof feature_flags.data;\n\n                return (\n                    <Checkbox\n                        key={flag_name}\n                        className='devtools__checkbox'\n                        classNameLabel={'devtools__checkbox-label'}\n                        label={flag_name}\n                        value={feature_flags.data?.[flag_name]}\n                        // @ts-expect-error Checkbox onChange type is not correct and need to be fixed.\n                        onChange={e => feature_flags.update(old => ({ ...old, [flag_name]: e.target.checked }))}\n                    />\n                );\n            })}\n        </div>\n    );\n});\n\nconst Devtools = observer(() => {\n    const [is_devtool_open, setIsDevtoolOpen] = useState(false);\n\n    return (\n        <div>\n            <div className={`devtools__panel devtools__panel${is_devtool_open ? '--open' : '--close'}`}>\n                <div className='devtools__panel-left'>\n                    <p className='devtools__panel-title'>Endpoint</p>\n                    <EndpointSection />\n                </div>\n                <div className='devtools__panel-right'>\n                    <p className='devtools__panel-title'>Feature flags</p>\n                    <FeatureFlagsSection />\n                </div>\n                <button onClick={() => setIsDevtoolOpen(!is_devtool_open)} className='devtools__close-button'>\n                    Close\n                </button>\n            </div>\n            <button onClick={() => setIsDevtoolOpen(!is_devtool_open)} className='devtools__toggle-button'>\n                {`</>`}\n            </button>\n        </div>\n    );\n});\n\n// @ts-expect-error Here we check if the code is running on the production environment,\n// we will return a null component instead of the actual devtools component. Hence the TS error is expected.\nconst ProductionSafeDevtools: typeof Devtools = process.env.NODE_ENV !== 'development' ? () => null : Devtools;\n\nexport default ProductionSafeDevtools;\n","import React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { useFeatureFlags } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport BinaryBotIFrame from 'Modules/BinaryBotIFrame';\nimport SmartTraderIFrame from 'Modules/SmartTraderIFrame';\nimport ErrorBoundary from './Components/Elements/Errors/error-boundary.jsx';\nimport AppContents from './Containers/Layout/app-contents.jsx';\nimport Footer from './Containers/Layout/footer.jsx';\nimport Header from './Containers/Layout/header';\nimport AppModals from './Containers/Modals';\nimport PlatformContainer from './Containers/PlatformContainer/PlatformContainer.jsx';\nimport Routes from './Containers/Routes/routes.jsx';\nimport AppToastMessages from './Containers/app-toast-messages.jsx';\nimport Devtools from './Devtools';\n\nconst AppContent: React.FC<{ passthrough: unknown }> = observer(({ passthrough }) => {\n    const { is_next_wallet_enabled } = useFeatureFlags();\n\n    return (\n        <PlatformContainer>\n            <Header />\n            <ErrorBoundary>\n                <AppContents>\n                    {/* TODO: [trader-remove-client-base] */}\n                    <Routes passthrough={passthrough} />\n                </AppContents>\n            </ErrorBoundary>\n            <DesktopWrapper>\n                <Footer />\n            </DesktopWrapper>\n            <ErrorBoundary>\n                <AppModals />\n            </ErrorBoundary>\n            <SmartTraderIFrame />\n            <BinaryBotIFrame />\n            <AppToastMessages />\n            {is_next_wallet_enabled && <Devtools />}\n        </PlatformContainer>\n    );\n});\n\nexport default AppContent;\n","import React from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { CashierStore } from '@deriv/cashier';\nimport { CFDStore } from '@deriv/cfd';\nimport {\n    initFormErrorMessages,\n    setSharedCFDText,\n    setUrlLanguage,\n    setWebsocket,\n    useOnLoadTranslation,\n} from '@deriv/shared';\nimport { StoreProvider } from '@deriv/stores';\nimport { getLanguage, initializeTranslations } from '@deriv/translations';\nimport WS from 'Services/ws-methods';\nimport { MobxContentProvider } from 'Stores/connect';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CFD_TEXT } from '../Constants/cfd-text';\nimport { FORM_ERROR_MESSAGES } from '../Constants/form-error-messages';\nimport AppContent from './AppContent';\nimport 'Sass/app.scss';\nimport { Analytics } from '@deriv/analytics';\n\nconst AppWithoutTranslation = ({ root_store }) => {\n    const l = window.location;\n    const base = l.pathname.split('/')[1];\n    const has_base = /^\\/(br_)/.test(l.pathname);\n    const [is_translation_loaded] = useOnLoadTranslation();\n    const initCashierStore = () => {\n        root_store.modules.attachModule('cashier', new CashierStore(root_store, WS));\n        root_store.modules.cashier.general_store.init();\n    };\n    // TODO: investigate the order of cashier store initialization\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(initCashierStore, []);\n    const initCFDStore = () => {\n        root_store.modules.attachModule('cfd', new CFDStore({ root_store, WS }));\n    };\n\n    React.useEffect(initCFDStore, []);\n\n    React.useEffect(() => {\n        const loadSmartchartsStyles = () => {\n            if (root_store.client.is_beta_chart) {\n                import('@deriv/deriv-charts-beta/dist/smartcharts.css');\n            } else {\n                import('@deriv/deriv-charts/dist/smartcharts.css');\n            }\n        };\n\n        initializeTranslations();\n        if (\n            process.env.NODE_ENV === 'production' ||\n            process.env.NODE_ENV === 'staging' ||\n            process.env.NODE_ENV === 'test'\n        ) {\n            Analytics.initialise({\n                growthbookKey: process.env.GROWTHBOOK_CLIENT_KEY,\n                growthbookDecryptionKey: process.env.GROWTHBOOK_DECRYPTION_KEY,\n                rudderstackKey:\n                    process.env.NODE_ENV === 'production'\n                        ? process.env.RUDDERSTACK_PRODUCTION_KEY\n                        : process.env.RUDDERSTACK_STAGING_KEY,\n                enableDevMode: process.env.NODE_ENV !== 'production',\n            });\n        }\n\n        // TODO: [translation-to-shared]: add translation implemnentation in shared\n        setUrlLanguage(getLanguage());\n        initFormErrorMessages(FORM_ERROR_MESSAGES);\n        setSharedCFDText(CFD_TEXT);\n        root_store.common.setPlatform();\n        loadSmartchartsStyles();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const platform_passthrough = {\n        root_store,\n        WS,\n    };\n\n    setWebsocket(WS);\n\n    return (\n        <>\n            {is_translation_loaded ? (\n                <Router basename={has_base ? `/${base}` : null}>\n                    <MobxContentProvider store={root_store}>\n                        <APIProvider>\n                            <StoreProvider store={root_store}>\n                                <AppContent passthrough={platform_passthrough} />\n                            </StoreProvider>\n                        </APIProvider>\n                    </MobxContentProvider>\n                </Router>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\n\nAppWithoutTranslation.propTypes = {\n    root_store: PropTypes.object,\n};\nconst App = withTranslation()(AppWithoutTranslation);\n\nexport default App;\n","import { action } from 'mobx';\nimport NetworkMonitorBase from '_common/base/network_monitor_base'; // eslint-disable-line import/order\nimport { BinarySocketGeneral } from './index';\n\nlet common_store;\n\nconst NetworkMonitor = (() => {\n    const init = store => {\n        NetworkMonitorBase.init(BinarySocketGeneral.init(store), updateStore, store.client);\n        common_store = store.common;\n    };\n\n    const updateStore = action((status, is_online) => {\n        if (common_store) {\n            common_store.setNetworkStatus(status, is_online);\n        }\n    });\n\n    return {\n        init,\n    };\n})();\n\nexport default NetworkMonitor;\n","import { localize } from '@deriv/translations';\nimport { getPropertyValue } from '@deriv/shared';\n\nexport const getClientAccountType = loginid => {\n    let account_type;\n    if (/^VR/.test(loginid)) account_type = 'virtual';\n    else if (/^MF/.test(loginid)) account_type = 'financial';\n    else if (/^MLT|MX/.test(loginid)) account_type = 'gaming';\n    return account_type;\n};\n\nconst TypesMapConfig = (() => {\n    let types_map_config;\n\n    const initTypesMap = () => ({\n        default: localize('Real'),\n        financial: localize('Investment'),\n        gaming: localize('Gaming'),\n        virtual: localize('Virtual'),\n    });\n\n    return {\n        get: () => {\n            if (!types_map_config) {\n                types_map_config = initTypesMap();\n            }\n            return types_map_config;\n        },\n    };\n})();\n\nexport const getAccountTitle = loginid => {\n    const types_map = TypesMapConfig.get();\n    return types_map[getClientAccountType(loginid)] || types_map.default;\n};\n\nexport const getAvailableAccount = market_type => {\n    if (market_type === 'all') {\n        return 'all';\n    }\n    return 'financial';\n};\n\nexport const getLandingCompanyValue = ({ loginid, landing_company, isAccountOfType }) => {\n    const key = 'changeable_fields';\n    let landing_company_object;\n\n    if (loginid.financial || isAccountOfType('financial')) {\n        landing_company_object = getPropertyValue(landing_company, 'financial_company');\n    } else if (loginid.real || isAccountOfType('real')) {\n        landing_company_object = getPropertyValue(landing_company, 'gaming_company');\n\n        // handle accounts that don't have gaming company\n        if (!landing_company_object) {\n            landing_company_object = getPropertyValue(landing_company, 'financial_company');\n        }\n    } else {\n        const financial_company = (getPropertyValue(landing_company, 'financial_company') || {})[key] || [];\n        const gaming_company = (getPropertyValue(landing_company, 'gaming_company') || {})[key] || [];\n        landing_company_object = financial_company.concat(gaming_company);\n        return landing_company_object;\n    }\n    return (landing_company_object || {})[key];\n};\n\nexport const getMultipliersAccountStatus = authentication => {\n    const onfido_status = authentication?.identity?.services?.onfido?.status;\n    const manual_status = authentication?.identity?.services?.manual?.status;\n    const poa_status = authentication?.document?.status;\n\n    const STATUS = {\n        NONE: 'none',\n        VERIFIED: 'verified',\n        PENDING: 'pending',\n        REJECTED: 'rejected',\n        EXPIRED: 'expired',\n        SUSPECTED: 'suspected',\n    };\n    const failed_cases = [STATUS.REJECTED, STATUS.EXPIRED, STATUS.SUSPECTED];\n\n    const need_poa_resubmission = failed_cases.includes(poa_status);\n    const poa_pending = poa_status === STATUS.PENDING;\n    const poa_not_submitted = poa_status === STATUS.NONE;\n\n    const poi_verified_by_onfido_or_manual = [onfido_status, manual_status].includes(STATUS.VERIFIED);\n    const poi_pending_by_onfido_or_manual =\n        onfido_status &&\n        manual_status &&\n        [onfido_status, manual_status].includes(STATUS.PENDING) &&\n        !poi_verified_by_onfido_or_manual;\n\n    const poi_not_submitted_by_onfido_or_manual =\n        onfido_status && manual_status && [onfido_status, manual_status].every(status => status === STATUS.NONE);\n\n    const need_poi_resubmission_by_onfido_or_manual =\n        !poi_pending_by_onfido_or_manual && !poi_not_submitted_by_onfido_or_manual && !poi_verified_by_onfido_or_manual;\n\n    if (poi_not_submitted_by_onfido_or_manual || poa_not_submitted) {\n        return 'need_verification';\n    } else if (need_poi_resubmission_by_onfido_or_manual || need_poa_resubmission) {\n        return 'failed';\n    } else if (poi_pending_by_onfido_or_manual || poa_pending) {\n        return 'pending';\n    }\n    return null;\n};\n","import { action, intercept, makeObservable, observable, reaction, toJS, when } from 'mobx';\n\nimport { isEmptyObject, isProduction, Validator } from '@deriv/shared';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                async () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                async () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import { isCryptocurrency, getCurrencyDisplayCode } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nexport const buildCurrenciesList = payout_currencies => {\n    const fiat = [];\n    const crypto = [];\n\n    payout_currencies.forEach(cur => {\n        const isCrypto = isCryptocurrency(cur);\n        (isCrypto ? crypto : fiat).push({ text: getCurrencyDisplayCode(cur), value: cur, has_tooltip: isCrypto });\n    });\n\n    return {\n        [localize('Fiat')]: fiat,\n        [localize('Crypto')]: crypto,\n    };\n};\n\nexport const getDefaultCurrency = (currencies_list, currency = '') => {\n    const supported_currencies = Object.values(currencies_list).reduce((a, b) => [...a, ...b], []);\n    const default_currency = supported_currencies.find(c => c.value === currency)\n        ? currency\n        : supported_currencies[0].value;\n\n    return {\n        currency: default_currency,\n    };\n};\n","import { CookieStorage } from '@deriv/shared';\n\nexport const getCookieObject = cookie_name => {\n    const cookie_object = new CookieStorage(cookie_name.includes('utm') ? 'utm_data' : cookie_name);\n    return cookie_object;\n};\n\nexport const setDeviceDataCookie = (cookie_name, cookie_value) => {\n    const cookie_object = getCookieObject(cookie_name);\n\n    if (!cookie_object.get(cookie_name)) {\n        cookie_object.set(cookie_name, cookie_value);\n    }\n\n    return cookie_object;\n};\n","import * as SocketCache from '_common/base/socket_cache';\n\nimport {\n    CFD_PLATFORMS,\n    LocalStore,\n    State,\n    deriv_urls,\n    excludeParamsFromUrlQuery,\n    filterUrlQuery,\n    getPropertyValue,\n    getUrlBinaryBot,\n    getUrlSmartTrader,\n    isCryptocurrency,\n    isDesktopOs,\n    isEmptyObject,\n    isLocal,\n    isProduction,\n    isStaging,\n    isTestLink,\n    redirectToLogin,\n    removeCookies,\n    routes,\n    setCurrencies,\n    SessionStore,\n    toMoment,\n    urlForLanguage,\n    getAppId,\n} from '@deriv/shared';\nimport { Analytics } from '@deriv/analytics';\nimport { WS, requestLogout } from 'Services';\nimport { action, computed, makeObservable, observable, reaction, runInAction, toJS, when } from 'mobx';\nimport { getAccountTitle, getClientAccountType, getAvailableAccount } from './Helpers/client';\nimport { getLanguage, localize, getRedirectionLanguage } from '@deriv/translations';\nimport { getRegion, isEuCountry, isMultipliersOnly, isOptionsBlocked } from '_common/utility';\n\nimport BaseStore from './base-store';\nimport BinarySocket from '_common/base/socket_base';\nimport BinarySocketGeneral from 'Services/socket-general';\nimport Cookies from 'js-cookie';\nimport { buildCurrenciesList } from './Modules/Trading/Helpers/currency';\nimport moment from 'moment';\nimport { setDeviceDataCookie } from './Helpers/device';\n\nconst LANGUAGE_KEY = 'i18n_language';\nconst storage_key = 'client.accounts';\nconst store_name = 'client_store';\nconst eu_shortcode_regex = new RegExp('^(maltainvest|malta|iom)$');\nconst eu_excluded_regex = new RegExp('^mt$');\n\nexport default class ClientStore extends BaseStore {\n    loginid;\n    preferred_language;\n    upgrade_info;\n    email;\n    accounts = {};\n    trading_platform_available_accounts = [];\n    derivez_available_accounts = [];\n    pre_switch_broadcast = false;\n    switched = '';\n    is_switching = false;\n    switch_broadcast = false;\n    initialized_broadcast = false;\n    currencies_list = {};\n    residence_list = [];\n    states_list = [];\n    citizen = '';\n    selected_currency = '';\n    is_populating_account_list = false;\n    is_populating_mt5_account_list = true;\n    is_populating_dxtrade_account_list = true;\n    has_reality_check = false;\n    is_reality_check_dismissed;\n    reality_check_dur;\n    reality_check_timeout;\n    website_status = {};\n    account_settings = {};\n    account_status = {};\n    device_data = {};\n    is_authorize = false;\n    is_logging_in = false;\n    has_logged_out = false;\n    is_landing_company_loaded = false;\n    is_account_setting_loaded = false;\n    has_enabled_two_fa = false;\n    has_changed_two_fa = false;\n    landing_companies = {};\n    is_beta_chart = false;\n\n    // All possible landing companies of user between all\n    standpoint = {\n        iom: false,\n        svg: false,\n        malta: false,\n        maltainvest: false,\n        gaming_company: false,\n        financial_company: false,\n    };\n\n    upgradeable_landing_companies = [];\n    mt5_disabled_signup_types = { real: false, demo: false };\n    mt5_login_list = [];\n    mt5_login_list_error = null;\n    dxtrade_accounts_list = [];\n    ctrader_accounts_list = [];\n    derivez_accounts_list = [];\n    dxtrade_accounts_list_error = null;\n    dxtrade_disabled_signup_types = { real: false, demo: false };\n    statement = [];\n    obj_total_balance = {\n        amount_real: undefined,\n        amount_mt5: undefined,\n        amount_dxtrade: undefined,\n        currency: '',\n    };\n\n    verification_code = {\n        signup: '',\n        reset_password: '',\n        payment_withdraw: '',\n        payment_agent_withdraw: '',\n        trading_platform_mt5_password_reset: '',\n        trading_platform_dxtrade_password_reset: '',\n        request_email: '',\n        social_email_change: '',\n        system_email_change: '',\n    };\n\n    new_email = {\n        system_email_change: '',\n        social_email_change: '',\n    };\n\n    account_limits = {};\n    self_exclusion = {};\n\n    local_currency_config = {\n        currency: '',\n        decimal_places: undefined,\n    };\n    has_cookie_account = false;\n\n    financial_assessment = null;\n\n    mt5_trading_servers = [];\n    dxtrade_trading_servers = [];\n    is_cfd_poi_completed = false;\n\n    cfd_score = 0;\n\n    is_mt5_account_list_updated = false;\n\n    prev_real_account_loginid = '';\n    p2p_advertiser_info = {};\n    prev_account_type = 'demo';\n    external_url_params = {};\n\n    constructor(root_store) {\n        const local_storage_properties = ['device_data'];\n        super({ root_store, local_storage_properties, store_name });\n\n        makeObservable(this, {\n            loginid: observable,\n            external_url_params: observable,\n            setExternalParams: action.bound,\n            redirectToLegacyPlatform: action.bound,\n            preferred_language: observable,\n            upgrade_info: observable,\n            email: observable,\n            accounts: observable,\n            trading_platform_available_accounts: observable,\n            derivez_available_accounts: observable,\n            pre_switch_broadcast: observable,\n            switched: observable,\n            is_switching: observable,\n            switch_broadcast: observable,\n            initialized_broadcast: observable,\n            currencies_list: observable,\n            residence_list: observable,\n            states_list: observable,\n            citizen: observable,\n            selected_currency: observable,\n            is_populating_account_list: observable,\n            is_populating_mt5_account_list: observable,\n            is_populating_dxtrade_account_list: observable,\n            has_reality_check: observable,\n            is_reality_check_dismissed: observable,\n            reality_check_dur: observable,\n            reality_check_timeout: observable,\n            website_status: observable,\n            account_settings: observable,\n            account_status: observable,\n            device_data: observable,\n            is_authorize: observable,\n            is_logging_in: observable,\n            has_logged_out: observable,\n            is_landing_company_loaded: observable,\n            is_account_setting_loaded: observable,\n            has_enabled_two_fa: observable,\n            has_changed_two_fa: observable,\n            landing_companies: observable,\n            standpoint: observable,\n            upgradeable_landing_companies: observable,\n            mt5_disabled_signup_types: observable,\n            mt5_login_list: observable,\n            mt5_login_list_error: observable,\n            dxtrade_accounts_list: observable,\n            ctrader_accounts_list: observable,\n            derivez_accounts_list: observable,\n            dxtrade_accounts_list_error: observable,\n            dxtrade_disabled_signup_types: observable,\n            statement: observable,\n            cfd_score: observable,\n            obj_total_balance: observable,\n            verification_code: observable,\n            new_email: observable,\n            account_limits: observable,\n            self_exclusion: observable,\n            local_currency_config: observable,\n            has_cookie_account: observable,\n            financial_assessment: observable,\n            mt5_trading_servers: observable,\n            dxtrade_trading_servers: observable,\n            is_cfd_poi_completed: observable,\n            prev_real_account_loginid: observable,\n            p2p_advertiser_info: observable,\n            prev_account_type: observable,\n            balance: computed,\n            account_open_date: computed,\n            is_reality_check_visible: computed,\n            is_svg: computed,\n            reality_check_duration: computed,\n            reality_check_dismissed: computed,\n            has_active_real_account: computed,\n            has_maltainvest_account: computed,\n            has_any_real_account: computed,\n            first_switchable_real_loginid: computed,\n            can_change_fiat_currency: computed,\n            legal_allowed_currencies: computed,\n            upgradeable_currencies: computed,\n            current_currency_type: computed,\n            available_crypto_currencies: computed,\n            has_fiat: computed,\n            current_fiat_currency: computed,\n            current_landing_company: computed,\n            account_list: computed,\n            has_real_mt5_login: computed,\n            has_real_dxtrade_login: computed,\n            has_account_error_in_mt5_real_list: computed,\n            has_account_error_in_mt5_demo_list: computed,\n            has_account_error_in_dxtrade_real_list: computed,\n            has_account_error_in_dxtrade_demo_list: computed,\n            active_accounts: computed,\n            all_loginids: computed,\n            account_title: computed,\n            currency: computed,\n            is_crypto: action.bound,\n            default_currency: computed,\n            should_allow_authentication: computed,\n            is_financial_assessment_incomplete: computed,\n            is_financial_assessment_needed: computed,\n            is_authentication_needed: computed,\n            is_identity_verification_needed: computed,\n            real_account_creation_unlock_date: computed,\n            is_tnc_needed: computed,\n            is_social_signup: computed,\n            isEligibleForMoreDemoMt5Svg: action.bound,\n            isEligibleForMoreRealMt5: action.bound,\n            setIsCfdPoiCompleted: action.bound,\n            setCitizen: action.bound,\n            is_mt5_password_not_set: computed,\n            is_dxtrade_password_not_set: computed,\n            is_financial_information_incomplete: computed,\n            is_deposit_lock: computed,\n            is_withdrawal_lock: computed,\n            is_trading_experience_incomplete: computed,\n            authentication_status: computed,\n            social_identity_provider: computed,\n            is_from_restricted_country: computed,\n            is_fully_authenticated: computed,\n            is_pending_authentication: computed,\n            is_financial_account: computed,\n            is_age_verified: computed,\n            landing_company_shortcode: computed,\n            landing_company: computed,\n            is_valid_login: computed,\n            is_logged_in: computed,\n            has_restricted_mt5_account: computed,\n            has_mt5_account_with_rejected_poa: computed,\n            should_restrict_bvi_account_creation: computed,\n            should_restrict_vanuatu_account_creation: computed,\n            should_show_eu_content: computed,\n            should_show_eu_error: computed,\n            is_virtual: computed,\n            is_eu: computed,\n            is_uk: computed,\n            is_brazil: computed,\n            country_standpoint: computed,\n            can_have_mlt_account: computed,\n            can_have_mf_account: computed,\n            can_upgrade: computed,\n            can_upgrade_to: computed,\n            virtual_account_loginid: computed,\n            is_single_currency: computed,\n            account_type: computed,\n            is_mt5_allowed: computed,\n            is_dxtrade_allowed: computed,\n            is_bot_allowed: computed,\n            clients_country: computed,\n            is_eu_country: computed,\n            is_options_blocked: computed,\n            is_multipliers_only: computed,\n            is_pending_proof_of_ownership: computed,\n            resetLocalStorageValues: action.bound,\n            getBasicUpgradeInfo: action.bound,\n            setMT5DisabledSignupTypes: action.bound,\n            setCFDDisabledSignupTypes: action.bound,\n            getLimits: action.bound,\n            setPreferredLanguage: action.bound,\n            setCookieAccount: action.bound,\n            setCFDScore: action.bound,\n            updateSelfExclusion: action.bound,\n            responsePayoutCurrencies: action.bound,\n            responseAuthorize: action.bound,\n            setWebsiteStatus: action.bound,\n            accountRealReaction: action.bound,\n            setLoginInformation: action.bound,\n            realAccountSignup: action.bound,\n            setAccountCurrency: action.bound,\n            updateAccountCurrency: action.bound,\n            createCryptoAccount: action.bound,\n            residence: computed,\n            email_address: computed,\n            is_website_status_ready: computed,\n            updateAccountList: action.bound,\n            switchAccount: action.bound,\n            resetVirtualBalance: action.bound,\n            switchEndSignal: action.bound,\n            init: action.bound,\n            resetMt5AccountListPopulation: action.bound,\n            responseWebsiteStatus: action.bound,\n            responseLandingCompany: action.bound,\n            setStandpoint: action.bound,\n            setRealityCheck: action.bound,\n            setLoginId: action.bound,\n            setAccounts: action.bound,\n            setSwitched: action.bound,\n            setIsAuthorize: action.bound,\n            setIsLoggingIn: action.bound,\n            setPreSwitchAccount: action.bound,\n            broadcastAccountChange: action.bound,\n            switchAccountHandler: action.bound,\n            registerReactions: action.bound,\n            setBalanceActiveAccount: action.bound,\n            setBalanceOtherAccounts: action.bound,\n            selectCurrency: action.bound,\n            setResidence: action.bound,\n            setEmail: action.bound,\n            setAccountSettings: action.bound,\n            setAccountStatus: action.bound,\n            updateAccountStatus: action.bound,\n            setInitialized: action.bound,\n            cleanUp: action.bound,\n            logout: action.bound,\n            setLogout: action.bound,\n            storeClientAccounts: action.bound,\n            setUserLogin: action.bound,\n            canStoreClientAccounts: action.bound,\n            setVerificationCode: action.bound,\n            setNewEmail: action.bound,\n            setDeviceData: action.bound,\n            getSignupParams: action.bound,\n            onSetResidence: action.bound,\n            onSetCitizen: action.bound,\n            onSignup: action.bound,\n            fetchAccountSettings: action.bound,\n            fetchResidenceList: action.bound,\n            setResidenceList: action.bound,\n            fetchStatesList: action.bound,\n            resetMt5ListPopulatedState: action.bound,\n            updateMt5LoginList: action.bound,\n            responseMT5TradingServers: action.bound,\n            responseMt5LoginList: action.bound,\n            responseDxtradeTradingServers: action.bound,\n            responseTradingPlatformAvailableAccounts: action.bound,\n            responseDerivezAvailableAccounts: action.bound,\n            responseTradingPlatformAccountsList: action.bound,\n            responseStatement: action.bound,\n            getChangeableFields: action.bound,\n            syncWithLegacyPlatforms: action.bound,\n            is_high_risk: computed,\n            is_low_risk: computed,\n            has_residence: computed,\n            setVisibilityRealityCheck: action.bound,\n            clearRealityCheckTimeout: action.bound,\n            setRealityCheckDuration: action.bound,\n            cleanupRealityCheck: action.bound,\n            fetchFinancialAssessment: action.bound,\n            setFinancialAndTradingAssessment: action.bound,\n            setTwoFAStatus: action.bound,\n            setTwoFAChangedStatus: action.bound,\n            is_eu_or_multipliers_only: computed,\n            getTwoFAStatus: action.bound,\n            updateMT5Status: action.bound,\n            isEuropeCountry: action.bound,\n            setPrevRealAccountLoginid: action.bound,\n            setP2pAdvertiserInfo: action.bound,\n            setPrevAccountType: action.bound,\n            is_beta_chart: observable,\n            setIsBetaChart: action.bound,\n        });\n\n        reaction(\n            () => [\n                this.is_logged_in,\n                this.loginid,\n                this.email,\n                this.landing_company,\n                this.currency,\n                this.residence,\n                this.account_settings,\n                this.preferred_language,\n            ],\n            () => {\n                this.setCookieAccount();\n            }\n        );\n\n        reaction(\n            () => [this.account_settings],\n            () => {\n                const language = getRedirectionLanguage(this.account_settings?.preferred_language);\n                window.history.replaceState({}, document.title, urlForLanguage(language));\n\n                this.setPreferredLanguage(language);\n                LocalStore.set(LANGUAGE_KEY, language);\n            }\n        );\n\n        when(\n            () => !this.is_logged_in && this.root_store.ui && this.root_store.ui.is_real_acc_signup_on,\n            () => this.root_store.ui.closeRealAccountSignup()\n        );\n\n        this.setIsBetaChart();\n    }\n\n    get balance() {\n        if (isEmptyObject(this.accounts)) return undefined;\n        return this.accounts[this.loginid] && 'balance' in this.accounts[this.loginid]\n            ? this.accounts[this.loginid].balance.toString()\n            : undefined;\n    }\n\n    get account_open_date() {\n        if (isEmptyObject(this.accounts)) return undefined;\n        return Object.keys(this.accounts[this.loginid]).includes('created_at')\n            ? this.accounts[this.loginid].created_at\n            : undefined;\n    }\n\n    get is_reality_check_visible() {\n        if (!this.loginid || !this.landing_company) {\n            return false;\n        }\n        return !!(this.has_reality_check && !this.reality_check_dismissed);\n    }\n\n    get is_svg() {\n        if (!this.landing_company_shortcode) {\n            return false;\n        }\n        return this.landing_company_shortcode === 'svg' || this.landing_company_shortcode === 'costarica';\n    }\n\n    get reality_check_duration() {\n        return this.has_reality_check ? this.reality_check_dur || +LocalStore.get('reality_check_duration') : undefined;\n    }\n\n    get reality_check_dismissed() {\n        return this.has_reality_check\n            ? this.is_reality_check_dismissed || JSON.parse(LocalStore.get('reality_check_dismissed') || false)\n            : undefined;\n    }\n\n    get has_active_real_account() {\n        return this.active_accounts.some(acc => acc.is_virtual === 0);\n    }\n\n    get has_maltainvest_account() {\n        return this.active_accounts.some(acc => acc.landing_company_shortcode === 'maltainvest');\n    }\n\n    hasAnyRealAccount = () => {\n        return this.account_list.some(acc => acc.is_virtual === 0);\n    };\n\n    get has_any_real_account() {\n        return this.hasAnyRealAccount();\n    }\n\n    get first_switchable_real_loginid() {\n        const result = this.active_accounts.find(\n            acc => acc.is_virtual === 0 && acc.landing_company_shortcode === 'svg'\n        );\n        return result.loginid || undefined;\n    }\n\n    get can_change_fiat_currency() {\n        const has_no_mt5 = !this.has_real_mt5_login;\n        const has_no_dxtrade = !this.has_real_dxtrade_login;\n        const has_no_transaction = this.statement.count === 0 && this.statement.transactions.length === 0;\n        const has_no_deposit_attempt_account_status = !this.account_status?.status?.includes('deposit_attempt');\n        const has_account_criteria =\n            has_no_transaction && has_no_mt5 && has_no_dxtrade && has_no_deposit_attempt_account_status;\n        return !this.is_virtual && has_account_criteria && this.current_currency_type === 'fiat';\n    }\n\n    get legal_allowed_currencies() {\n        const getDefaultAllowedCurrencies = () => {\n            if (this.landing_companies?.gaming_company) {\n                return this.landing_companies?.gaming_company?.legal_allowed_currencies;\n            }\n            if (this.landing_companies?.financial_company) {\n                return this.landing_companies?.financial_company?.legal_allowed_currencies;\n            }\n            return [];\n        };\n\n        if (!this.landing_companies || !this.root_store.ui) {\n            return [];\n        }\n        if (!this.root_store.ui.real_account_signup_target) {\n            return getDefaultAllowedCurrencies();\n        }\n        if (\n            ['set_currency', 'manage'].includes(this.root_store.ui.real_account_signup_target) &&\n            this.current_landing_company\n        ) {\n            return this.current_landing_company.legal_allowed_currencies;\n        }\n        const target = this.root_store.ui.real_account_signup_target === 'maltainvest' ? 'financial' : 'gaming';\n\n        if (this.landing_companies[`${target}_company`]) {\n            return this.landing_companies[`${target}_company`].legal_allowed_currencies;\n        }\n\n        return getDefaultAllowedCurrencies();\n    }\n\n    get upgradeable_currencies() {\n        if (!this.legal_allowed_currencies || !this.website_status.currencies_config) return [];\n        return this.legal_allowed_currencies.map(currency => ({\n            value: currency,\n            ...this.website_status.currencies_config[currency],\n        }));\n    }\n\n    get current_currency_type() {\n        if (this.account_type === 'virtual') return 'virtual';\n        if (\n            this.website_status &&\n            this.website_status.currencies_config &&\n            this.website_status.currencies_config[this.currency]\n        ) {\n            return this.website_status.currencies_config[this.currency].type;\n        }\n\n        return undefined;\n    }\n\n    get available_crypto_currencies() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            acc.push(item.currency);\n            return acc;\n        }, []);\n\n        return this.upgradeable_currencies.filter(acc => !values.includes(acc.value) && acc.type === 'crypto');\n    }\n\n    get has_fiat() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual && item.landing_company_shortcode === this.landing_company_shortcode) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n        return !!this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat').length;\n    }\n\n    get current_fiat_currency() {\n        const values = Object.values(this.accounts).reduce((acc, item) => {\n            if (!item.is_virtual) {\n                acc.push(item.currency);\n            }\n            return acc;\n        }, []);\n\n        return this.has_fiat\n            ? this.upgradeable_currencies.filter(acc => values.includes(acc.value) && acc.type === 'fiat')[0].value\n            : undefined;\n    }\n\n    // return the landing company object that belongs to the current client by matching shortcode\n    // note that it will be undefined for logged out and virtual clients\n    get current_landing_company() {\n        const landing_company =\n            this.landing_companies &&\n            Object.keys(this.landing_companies).find(\n                company => this.landing_companies[company]?.shortcode === this.landing_company_shortcode\n            );\n        return landing_company ? this.landing_companies[landing_company] : undefined;\n    }\n\n    get account_list() {\n        return this.all_loginids.map(id => this.getAccountInfo(id)).filter(account => account);\n    }\n\n    get has_real_mt5_login() {\n        return this.mt5_login_list.some(account => account.account_type === 'real');\n    }\n\n    get has_real_dxtrade_login() {\n        return this.dxtrade_accounts_list.some(account => account.account_type === 'real');\n    }\n\n    get has_real_ctrader_login() {\n        return this.ctrader_accounts_list.some(account => account.account_type === 'real');\n    }\n\n    get has_real_derivez_login() {\n        return this.derivez_accounts_list.some(account => account.account_type === 'real');\n    }\n\n    hasAccountErrorInCFDList = (platform, account_type) => {\n        if (!this.is_logged_in) return false;\n        let list;\n        switch (platform) {\n            case CFD_PLATFORMS.MT5:\n                list = this.mt5_login_list;\n                break;\n            case CFD_PLATFORMS.DXTRADE:\n                list = this.dxtrade_accounts_list;\n                break;\n            case CFD_PLATFORMS.DERIVEZ:\n                list = this.derivez_accounts_list;\n                break;\n            default:\n                return false;\n        }\n        return list?.some(account => !!account.has_error && account.account_type === account_type);\n    };\n\n    get has_account_error_in_mt5_real_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.MT5, 'real');\n    }\n\n    get has_account_error_in_mt5_demo_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.MT5, 'demo');\n    }\n\n    get has_account_error_in_dxtrade_real_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.DXTRADE, 'real');\n    }\n\n    get has_account_error_in_dxtrade_demo_list() {\n        return this.hasAccountErrorInCFDList(CFD_PLATFORMS.DXTRADE, 'demo');\n    }\n\n    get active_accounts() {\n        return this.accounts instanceof Object\n            ? Object.values(this.accounts).filter(account => !account.is_disabled)\n            : [];\n    }\n\n    get all_loginids() {\n        return !isEmptyObject(this.accounts) ? Object.keys(this.accounts) : [];\n    }\n\n    get account_title() {\n        return getAccountTitle(this.loginid);\n    }\n\n    get currency() {\n        if (this.selected_currency.length) {\n            return this.selected_currency;\n        } else if (this.is_logged_in) {\n            return this.accounts[this.loginid].currency;\n        }\n\n        return this.default_currency;\n    }\n\n    is_crypto(currency) {\n        return isCryptocurrency(currency || this.currency);\n    }\n\n    get default_currency() {\n        if (Object.keys(this.currencies_list).length > 0) {\n            const keys = Object.keys(this.currencies_list);\n            // Fix for edge case when logging out from crypto accounts causes Fiat list to be empty\n            if (this.currencies_list[localize('Fiat')]?.length < 1) return 'USD';\n            return Object.values(this.currencies_list[`${keys[0]}`])[0].text;\n        }\n\n        return 'USD';\n    }\n\n    get should_allow_authentication() {\n        return this.account_status?.status?.some(\n            status => status === 'allow_document_upload' || status === 'allow_poi_resubmission'\n        );\n    }\n\n    get is_financial_assessment_incomplete() {\n        return this.account_status?.status?.includes('financial_assessment_not_complete');\n    }\n\n    get is_financial_assessment_needed() {\n        return this.account_status?.status?.includes('financial_assessment_notification');\n    }\n\n    get is_authentication_needed() {\n        return !this.is_fully_authenticated && !!this.account_status?.authentication?.needs_verification?.length;\n    }\n\n    get is_identity_verification_needed() {\n        const needs_verification = this.account_status?.authentication?.needs_verification;\n        return needs_verification?.length === 1 && needs_verification?.includes('identity');\n    }\n\n    get real_account_creation_unlock_date() {\n        const { cooling_off_expiration_date } = this.account_settings;\n        return cooling_off_expiration_date;\n    }\n\n    get is_tnc_needed() {\n        if (this.is_virtual) return false;\n        const { client_tnc_status } = this.account_settings || {};\n        const { terms_conditions_version } = this.website_status || {};\n\n        return typeof client_tnc_status !== 'undefined' && client_tnc_status !== terms_conditions_version;\n    }\n\n    get is_social_signup() {\n        return this.account_status?.status?.includes('social_signup');\n    }\n\n    get is_mt5_password_not_set() {\n        return this.account_status?.status?.includes('mt5_password_not_set');\n    }\n\n    get is_dxtrade_password_not_set() {\n        return this.account_status?.status?.includes('dxtrade_password_not_set');\n    }\n\n    get is_financial_information_incomplete() {\n        return this.account_status?.status?.some(status => status === 'financial_information_not_complete');\n    }\n\n    get is_deposit_lock() {\n        return this.account_status?.status?.some(status_name => status_name === 'deposit_locked');\n    }\n\n    get is_withdrawal_lock() {\n        return this.account_status?.status?.some(status_name => status_name === 'withdrawal_locked');\n    }\n\n    get is_trading_experience_incomplete() {\n        return this.account_status?.status?.some(status => status === 'trading_experience_not_complete');\n    }\n\n    get authentication_status() {\n        const document_status = this.account_status?.authentication?.document?.status;\n        const identity_status = this.account_status?.authentication?.identity?.status;\n        return { document_status, identity_status };\n    }\n\n    get social_identity_provider() {\n        return this.account_status?.social_identity_provider;\n    }\n\n    get is_from_restricted_country() {\n        return this.residence_list.find(item => item.value === this.residence)?.disabled === 'DISABLED';\n    }\n\n    get is_fully_authenticated() {\n        return this.account_status?.status?.some(status => status === 'authenticated');\n    }\n\n    get is_pending_authentication() {\n        return this.account_status?.status?.some(status => status === 'document_under_review');\n    }\n\n    get is_financial_account() {\n        if (!this.landing_companies) return false;\n        return this.account_type === 'financial';\n    }\n\n    get is_age_verified() {\n        return this.account_status?.status?.some(status => status === 'age_verification');\n    }\n\n    get landing_company_shortcode() {\n        if (this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].landing_company_shortcode;\n        }\n        return undefined;\n    }\n\n    get landing_company() {\n        return this.landing_companies;\n    }\n\n    get is_valid_login() {\n        if (!this.is_logged_in) return true;\n        const valid_login_ids_regex = new RegExp('^(MF|MFW|VRTC|VRW|MLT|CR|CRW)[0-9]+$', 'i');\n        return this.all_loginids.every(id => valid_login_ids_regex.test(id));\n    }\n\n    get is_logged_in() {\n        return !!(\n            !isEmptyObject(this.accounts) &&\n            Object.keys(this.accounts).length > 0 &&\n            this.loginid &&\n            this.accounts[this.loginid].token\n        );\n    }\n\n    get has_restricted_mt5_account() {\n        return !!this.mt5_login_list.filter(mt5_account => mt5_account?.status?.includes('poa_failed')).length;\n    }\n\n    get has_mt5_account_with_rejected_poa() {\n        return !!this.mt5_login_list.filter(mt5_account => mt5_account?.status?.includes('poa_rejected')).length;\n    }\n\n    get should_restrict_bvi_account_creation() {\n        return !!this.mt5_login_list.filter(\n            item => item?.landing_company_short === 'bvi' && item?.status === 'poa_failed'\n        ).length;\n    }\n\n    get should_restrict_vanuatu_account_creation() {\n        return !!this.mt5_login_list.filter(\n            item => item?.landing_company_short === 'vanuatu' && item?.status === 'poa_failed'\n        ).length;\n    }\n\n    get should_show_eu_content() {\n        const is_current_mf = this.landing_company_shortcode === 'maltainvest';\n        return (!this.is_logged_in && this.is_eu_country) || this.is_eu || is_current_mf;\n    }\n\n    get should_show_eu_error() {\n        if (!this.is_landing_company_loaded) {\n            return false;\n        }\n        return this.is_eu && !this.is_low_risk;\n    }\n\n    get is_virtual() {\n        return !isEmptyObject(this.accounts) && this.accounts[this.loginid] && !!this.accounts[this.loginid].is_virtual;\n    }\n\n    get is_eu() {\n        if (!this.landing_companies) return false;\n        const { gaming_company, financial_company, mt_gaming_company } = this.landing_companies;\n        const financial_shortcode = financial_company?.shortcode;\n        const gaming_shortcode = gaming_company?.shortcode;\n        const mt_gaming_shortcode = mt_gaming_company?.financial.shortcode || mt_gaming_company?.swap_free.shortcode;\n        const is_current_mf = this.landing_company_shortcode === 'maltainvest';\n        return (\n            is_current_mf || //is_currently logged in mf account via tradershub\n            (financial_shortcode || gaming_shortcode || mt_gaming_shortcode\n                ? (eu_shortcode_regex.test(financial_shortcode) && gaming_shortcode !== 'svg') ||\n                  eu_shortcode_regex.test(gaming_shortcode)\n                : eu_excluded_regex.test(this.residence))\n        );\n    }\n\n    get is_brazil() {\n        return this.clients_country === 'br';\n    }\n\n    get is_uk() {\n        return this.residence === 'gb';\n    }\n\n    get country_standpoint() {\n        const result = {\n            is_united_kingdom: this.is_uk,\n            is_isle_of_man: this.residence === 'im',\n            is_france: this.residence === 'fr',\n            is_belgium: this.residence === 'be',\n            // Other EU countries: Germany, Spain, Italy, Luxembourg and Greece\n            is_other_eu:\n                this.residence === 'de' ||\n                this.residence === 'es' ||\n                this.residence === 'it' ||\n                this.residence === 'lu' ||\n                this.residence === 'gr',\n        };\n\n        result.is_rest_of_eu =\n            this.is_eu && !result.is_uk && !result.is_france && !result.is_belgium && !result.is_other_eu;\n\n        return result;\n    }\n\n    // Manual list of MLT countries during MLT/MX account removal.\n    // Also needed to check onboarding modal text for specific country.\n    get can_have_mlt_account() {\n        const countries = [\n            'nl',\n            'cy',\n            'ie',\n            'ro',\n            'be',\n            'lt',\n            'bg',\n            'cz',\n            'dk',\n            'se',\n            'pl',\n            'ee',\n            'hr',\n            'at',\n            'hu',\n            'sl',\n            'fi',\n            'sk',\n            'pt',\n            'lv',\n        ].includes(this.residence);\n        return countries;\n    }\n\n    // Manual list of MF countries during MLT/MX account removal.\n    // Also needed to check onboarding modal text for specific country.\n    get can_have_mf_account() {\n        const countries = [\n            'it',\n            'fr',\n            'de',\n            'lu',\n            'es',\n            'gr',\n            'nl',\n            'cy',\n            'ie',\n            'ro',\n            'lt',\n            'bg',\n            'cz',\n            'dk',\n            'se',\n            'pl',\n            'ee',\n            'hr',\n            'at',\n            'hu',\n            'sl',\n            'fi',\n            'sk',\n            'pt',\n            'lv',\n        ].includes(this.residence);\n        return countries;\n    }\n\n    get can_upgrade() {\n        return this.upgrade_info && (this.upgrade_info.can_upgrade || this.upgrade_info.can_open_multi);\n    }\n\n    get can_upgrade_to() {\n        return this.upgrade_info && this.upgrade_info.can_upgrade_to;\n    }\n\n    get virtual_account_loginid() {\n        return this.all_loginids.find(loginid => !!this.accounts[loginid].is_virtual);\n    }\n\n    get is_single_currency() {\n        return (\n            Object.keys(this.currencies_list)\n                .map(type => Object.values(this.currencies_list[type]).length)\n                .reduce((acc, cur) => acc + cur, 0) === 1\n        );\n    }\n\n    get account_type() {\n        return getClientAccountType(this.loginid);\n    }\n\n    get is_mt5_allowed() {\n        return this.isMT5Allowed(this.landing_companies);\n    }\n\n    get is_dxtrade_allowed() {\n        return this.isDxtradeAllowed(this.landing_companies);\n    }\n\n    get is_bot_allowed() {\n        return this.isBotAllowed();\n    }\n\n    setExternalParams = params => {\n        this.external_url_params = params;\n    };\n\n    redirectToLegacyPlatform = () => {\n        const { url, should_redirect } = this.external_url_params;\n        if (should_redirect) {\n            window.location.replace(url);\n        }\n    };\n\n    getIsMarketTypeMatching = (account, market_type) => {\n        if (market_type === 'synthetic') {\n            return account.market_type === market_type || account.market_type === 'gaming';\n        } else if (market_type === 'all') {\n            return account.market_type === 'all';\n        }\n        return account.market_type === 'financial';\n    };\n\n    isEligibleForMoreDemoMt5Svg(market_type) {\n        const is_synthetic = market_type === 'synthetic';\n        const available_account = getAvailableAccount(market_type);\n        const existing_demo_accounts = this.mt5_login_list.filter(\n            account => account.account_type === 'demo' && this.getIsMarketTypeMatching(account, market_type)\n        );\n        const has_matching_account = this.trading_platform_available_accounts.some(account => {\n            return (is_synthetic ? 'gaming' : available_account) === account.market_type && account.shortcode === 'svg';\n        });\n        const has_no_svg_account = existing_demo_accounts.every(account => {\n            return !(account.landing_company_short === 'svg');\n        });\n\n        return has_matching_account && has_no_svg_account;\n    }\n\n    isEligibleForMoreRealMt5(market_type) {\n        const is_synthetic = market_type === 'synthetic';\n        const available_account = getAvailableAccount(market_type);\n        const existing_real_accounts = this.mt5_login_list.filter(\n            account => account.account_type === 'real' && this.getIsMarketTypeMatching(account, market_type)\n        );\n        const available_real_accounts_shortcodes = this.trading_platform_available_accounts\n            .filter(\n                account =>\n                    (is_synthetic ? 'gaming' : available_account) === account.market_type &&\n                    account.shortcode !== 'maltainvest'\n            )\n            .map(account => account.shortcode);\n        const has_no_matching_accounts = available_real_accounts_shortcodes.every(shortcode => {\n            if (market_type === 'all') {\n                // as Swapfree only have SVG account for now we need to check if there is any real svg account available\n                return existing_real_accounts.some(account => account.landing_company_short === shortcode);\n            }\n            return existing_real_accounts.some(account => account.landing_company_short === shortcode);\n        });\n\n        return !has_no_matching_accounts;\n    }\n\n    isMT5Allowed = landing_companies => {\n        // default allowing mt5 to true before landing_companies gets populated\n        // since most clients are allowed to use mt5\n        if (!landing_companies || !Object.keys(landing_companies).length) return true;\n\n        if (!this.mt5_login_list.some(acc => acc.market_type === 'synthetic')) {\n            if (this.country_standpoint.is_belgium || this.country_standpoint.is_france) return false;\n        }\n\n        return 'mt_financial_company' in landing_companies || 'mt_gaming_company' in landing_companies;\n    };\n\n    isDxtradeAllowed = landing_companies => {\n        // Stop showing DerivX for non-logged in EU users\n        if (\n            (!this.is_logged_in && this.is_eu_country) ||\n            (this.is_logged_in && this.root_store.traders_hub.show_eu_related_content)\n        )\n            return false;\n\n        if (!this.website_status?.clients_country || !landing_companies || !Object.keys(landing_companies).length)\n            return true;\n\n        // TODO: Remove two first conditions after real released\n        return (\n            'dxtrade_financial_company' in landing_companies ||\n            'dxtrade_gaming_company' in landing_companies ||\n            'dxtrade_all_company' in landing_companies ||\n            (!this.is_logged_in && !this.is_eu && !this.is_eu_country)\n        );\n    };\n\n    isBotAllowed = () => {\n        // Stop showing Bot, DBot, DSmartTrader for logged out EU IPs\n        if (!this.is_logged_in && this.is_eu_country) return false;\n        const is_mf = this.landing_company_shortcode === 'maltainvest';\n        return this.is_virtual ? this.is_eu_or_multipliers_only : !is_mf && !this.is_options_blocked;\n    };\n\n    get is_eu_or_multipliers_only() {\n        // Check whether account is multipliers only and if the account is from eu countries\n        return !this.is_multipliers_only ? !isEuCountry(this.residence) : !this.is_multipliers_only;\n    }\n\n    get clients_country() {\n        return this.website_status?.clients_country;\n    }\n\n    get is_eu_country() {\n        const country = this.website_status.clients_country;\n        if (country) return isEuCountry(country);\n        return false;\n    }\n\n    isEuropeCountry() {\n        return this.is_eu_country || this.is_eu;\n    }\n\n    get is_options_blocked() {\n        return isOptionsBlocked(this.residence);\n    }\n\n    get is_multipliers_only() {\n        return isMultipliersOnly(this.residence);\n    }\n\n    /**\n     * Store Values relevant to the loginid to local storage.\n     *\n     * @param loginid\n     */\n    resetLocalStorageValues(loginid) {\n        this.accounts[loginid].accepted_bch = 0;\n        LocalStore.setObject(storage_key, this.accounts);\n        LocalStore.set('active_loginid', loginid);\n        this.syncWithLegacyPlatforms(loginid, toJS(this.accounts));\n        this.loginid = loginid;\n    }\n\n    setIsAuthorize(value) {\n        this.is_authorize = value;\n    }\n\n    getBasicUpgradeInfo() {\n        const upgradeable_landing_companies = [\n            ...new Set(State.getResponse('authorize.upgradeable_landing_companies')),\n        ];\n        let can_open_multi = false;\n        let type, can_upgrade_to;\n        if ((upgradeable_landing_companies || []).length) {\n            can_open_multi =\n                upgradeable_landing_companies.indexOf(this.accounts[this.loginid].landing_company_shortcode) !== -1;\n            const canUpgrade = (...landing_companies) =>\n                landing_companies.find(\n                    landing_company =>\n                        landing_company !== this.accounts[this.loginid].landing_company_shortcode &&\n                        upgradeable_landing_companies.indexOf(landing_company) !== -1\n                );\n            can_upgrade_to = canUpgrade('svg', 'iom', 'malta', 'maltainvest');\n            if (can_upgrade_to) {\n                type = can_upgrade_to === 'maltainvest' ? 'financial' : 'real';\n            }\n        }\n\n        return {\n            type,\n            can_upgrade: !!can_upgrade_to,\n            can_upgrade_to,\n            can_open_multi,\n        };\n    }\n\n    setMT5DisabledSignupTypes(disabled_types_obj) {\n        const current_list = this.mt5_disabled_signup_types;\n        this.mt5_disabled_signup_types = { ...current_list, ...disabled_types_obj };\n    }\n\n    setCFDDisabledSignupTypes(platform, disabled_types_obj) {\n        if (platform === CFD_PLATFORMS.DXTRADE) {\n            const current_list = this.dxtrade_disabled_signup_types;\n            this.dxtrade_disabled_signup_types = { current_list, ...disabled_types_obj };\n        }\n    }\n\n    getLimits() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getLimits().then(data => {\n                runInAction(() => {\n                    if (data.error) {\n                        this.account_limits = {\n                            api_initial_load_error: data.error.message,\n                        };\n                        resolve(data);\n                    } else {\n                        this.account_limits = {\n                            ...data.get_limits,\n                            is_loading: false,\n                        };\n                        resolve(data);\n                    }\n                });\n            });\n        });\n    }\n\n    setPreferredLanguage = lang => {\n        this.preferred_language = lang;\n        LocalStore.setObject(LANGUAGE_KEY, lang);\n    };\n\n    setCookieAccount() {\n        const domain = /deriv\\.(com|me)/.test(window.location.hostname) ? deriv_urls.DERIV_HOST_NAME : 'binary.sx';\n\n        // eslint-disable-next-line max-len\n        const {\n            loginid,\n            email,\n            landing_company_shortcode,\n            currency,\n            residence,\n            account_settings,\n            preferred_language,\n            user_id,\n        } = this;\n\n        const { first_name, last_name, name } = account_settings;\n        if (loginid && email) {\n            const client_information = {\n                loginid,\n                email,\n                landing_company_shortcode,\n                currency,\n                residence,\n                first_name,\n                last_name,\n                name,\n                preferred_language,\n                user_id,\n            };\n            Cookies.set('region', getRegion(landing_company_shortcode, residence), { domain });\n            Cookies.set('client_information', client_information, { domain });\n            // need to find other way to get the boolean value and set this cookie since `this.is_p2p_enabled` is deprecated and we can't use hooks here\n            Cookies.set('is_p2p_disabled', !this.is_p2p_enabled, { domain });\n\n            this.has_cookie_account = true;\n        } else {\n            removeCookies('region', 'client_information', 'is_p2p_disabled');\n            this.has_cookie_account = false;\n        }\n    }\n\n    // CFD score is the computed points based on the CFD related questions that the user answers in trading-assessment.\n    setCFDScore(score) {\n        this.cfd_score = score;\n    }\n\n    getSelfExclusion() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getSelfExclusion().then(data => {\n                runInAction(() => {\n                    if (data.get_self_exclusion) {\n                        this.self_exclusion = data.get_self_exclusion;\n                    } else {\n                        this.self_exclusion = false;\n                    }\n                    resolve(data);\n                });\n            });\n        });\n    }\n    updateSelfExclusion(values) {\n        return new Promise(resolve => {\n            WS.authorized.storage.setSelfExclusion(values).then(data => {\n                if (!data.error) {\n                    this.getSelfExclusion();\n                }\n                resolve(data);\n            });\n        });\n    }\n\n    responsePayoutCurrencies(response) {\n        const list = response?.payout_currencies || response;\n        this.currencies_list = buildCurrenciesList(Array.isArray(list) ? list : []);\n        this.selectCurrency('');\n    }\n\n    responseAuthorize(response) {\n        this.accounts[this.loginid].email = response.authorize.email;\n        this.accounts[this.loginid].currency = response.authorize.currency;\n        this.accounts[this.loginid].is_virtual = +response.authorize.is_virtual;\n        this.accounts[this.loginid].session_start = parseInt(moment().utc().valueOf() / 1000);\n        this.accounts[this.loginid].landing_company_shortcode = response.authorize.landing_company_name;\n        this.accounts[this.loginid].country = response.country;\n        this.updateAccountList(response.authorize.account_list);\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.user_id = response.authorize.user_id;\n        localStorage.setItem('active_user_id', this.user_id);\n        this.upgradeable_landing_companies = [...new Set(response.authorize.upgradeable_landing_companies)];\n        this.local_currency_config.currency = Object.keys(response.authorize.local_currencies)[0];\n\n        // delete all notifications key when set new account except notifications for this account\n        // need this because when the user switchs accounts we don't use logout\n        const notification_messages = LocalStore.getObject('notification_messages');\n        const messages = notification_messages[this.loginid] ?? [];\n        LocalStore.setObject('notification_messages', {\n            [this.loginid]: messages,\n        });\n\n        // For residences without local currency (e.g. ax)\n        const default_fractional_digits = 2;\n        this.local_currency_config.decimal_places = isEmptyObject(response.authorize.local_currencies)\n            ? default_fractional_digits\n            : +response.authorize.local_currencies[this.local_currency_config.currency].fractional_digits;\n    }\n\n    setWebsiteStatus(response) {\n        this.website_status = response.website_status;\n        this.responseWebsiteStatus(response);\n        setCurrencies(this.website_status);\n\n        // TODO: remove the below lines after full smartcharts v2 launch.\n        const domain = /deriv\\.(com|me)/.test(window.location.hostname)\n            ? deriv_urls.DERIV_HOST_NAME\n            : window.location.hostname;\n        const { clients_country } = this.website_status;\n\n        const options = {\n            domain,\n            expires: 7,\n        };\n\n        try {\n            const cookie = Cookies.get('website_status') ? JSON.parse(Cookies.get('website_status')) : {};\n            cookie.clients_country = clients_country;\n            Cookies.set('website_status', cookie, options);\n        } catch (e) {\n            Cookies.set('website_status', { clients_country }, options);\n        }\n    }\n\n    async accountRealReaction(response) {\n        return new Promise(resolve => {\n            let client_accounts;\n            const has_client_accounts = !!LocalStore.get(storage_key);\n\n            runInAction(() => {\n                this.is_populating_account_list = true;\n            });\n\n            if (this.is_logged_in && !has_client_accounts) {\n                localStorage.setItem(storage_key, JSON.stringify(this.accounts));\n                LocalStore.set(storage_key, JSON.stringify(this.accounts));\n                this.syncWithLegacyPlatforms(client_id, this.accounts);\n            }\n\n            try {\n                client_accounts = JSON.parse(LocalStore.get(storage_key));\n            } catch (error) {\n                // eslint-disable-next-line no-console\n                console.error('JSON parse failed, invalid value (client.accounts): ', error);\n            }\n\n            const { oauth_token, client_id } = response.new_account_real ?? response.new_account_maltainvest;\n            BinarySocket.authorize(oauth_token)\n                .then(authorize_response => {\n                    const new_data = {};\n                    new_data.token = oauth_token;\n                    new_data.residence = authorize_response.authorize.country;\n                    new_data.currency = authorize_response.authorize.currency;\n                    new_data.is_virtual = authorize_response.authorize.is_virtual;\n                    new_data.landing_company_name = authorize_response.authorize.landing_company_fullname;\n                    new_data.landing_company_shortcode = authorize_response.authorize.landing_company_name;\n                    runInAction(() => (client_accounts[client_id] = new_data));\n                    this.setLoginInformation(client_accounts, client_id);\n                    WS.authorized.storage.getSettings().then(get_settings_response => {\n                        this.setAccountSettings(get_settings_response.get_settings);\n                        resolve();\n                    });\n                    this.syncWithLegacyPlatforms(client_id, client_accounts);\n                })\n                .catch(error => {\n                    // eslint-disable-next-line no-console\n                    console.error('Something went wrong while registering a real account: ', error);\n                });\n        });\n    }\n\n    setLoginInformation(client_accounts, client_id) {\n        this.setAccounts(client_accounts);\n        localStorage.setItem(storage_key, JSON.stringify(client_accounts));\n        LocalStore.set(storage_key, JSON.stringify(client_accounts));\n        this.is_populating_account_list = false;\n        this.upgrade_info = this.getBasicUpgradeInfo();\n        this.setSwitched(client_id);\n        this.syncWithLegacyPlatforms(client_id, client_accounts);\n    }\n\n    async realAccountSignup(form_values) {\n        const DEFAULT_CRYPTO_ACCOUNT_CURRENCY = 'BTC';\n        const is_maltainvest_account = this.root_store.ui.real_account_signup_target === 'maltainvest';\n        const is_samoa_account = this.root_store.ui.real_account_signup_target === 'samoa';\n        let currency = '';\n        form_values.residence = this.residence;\n        if (is_maltainvest_account) {\n            currency = form_values.currency;\n        }\n        this.root_store.ui.setRealAccountSignupParams(form_values);\n        const { document_number, document_type, document_additional, ...required_form_values } = form_values;\n        required_form_values.citizen = form_values?.citizen || this.account_settings?.citizen || this.residence;\n\n        const response = is_maltainvest_account\n            ? await WS.newAccountRealMaltaInvest(required_form_values)\n            : await WS.newAccountReal(required_form_values);\n\n        if (!response.error) {\n            await this.accountRealReaction(response);\n            if (is_samoa_account) {\n                await this.setAccountCurrency(DEFAULT_CRYPTO_ACCOUNT_CURRENCY);\n            }\n            localStorage.removeItem('real_account_signup_wizard');\n            await this.root_store.gtm.pushDataLayer({ event: 'real_signup' });\n\n            return Promise.resolve({\n                ...response,\n                ...(is_maltainvest_account\n                    ? {\n                          new_account_maltainvest: {\n                              ...response.new_account_maltainvest,\n                              currency,\n                          },\n                      }\n                    : {}),\n                ...(is_samoa_account\n                    ? {\n                          new_account_samoa: {\n                              currency,\n                          },\n                      }\n                    : {}),\n            });\n        }\n        return Promise.reject(response.error);\n    }\n\n    async setAccountCurrency(currency) {\n        const response = await WS.setAccountCurrency(currency, {\n            previous_currency: this.currency,\n        });\n        if (!response.error) {\n            await this.updateAccountCurrency(currency);\n            return Promise.resolve(response);\n        }\n        return Promise.reject(response.error);\n    }\n\n    async updateAccountCurrency(currency, is_set_storage = true) {\n        runInAction(() => {\n            const new_account = { ...this.accounts[this.loginid] };\n            new_account.currency = currency;\n            if (!('balance' in new_account)) new_account.balance = 0;\n            this.accounts[this.loginid] = new_account;\n        });\n        if (is_set_storage) {\n            localStorage.setItem(storage_key, JSON.stringify(this.accounts));\n            LocalStore.setObject(storage_key, JSON.parse(JSON.stringify(this.accounts)));\n        }\n        this.selectCurrency(currency);\n        this.root_store.notifications.removeNotificationMessage({\n            key: 'currency',\n        });\n        this.root_store.notifications.removeNotificationByKey({\n            key: 'currency',\n        });\n        await this.init();\n    }\n\n    async createCryptoAccount(currency) {\n        const residence = this.residence;\n        const { date_of_birth, first_name, last_name } = this.account_settings;\n        const data = {\n            residence,\n            currency,\n            first_name,\n            last_name,\n            date_of_birth: toMoment(date_of_birth).format('YYYY-MM-DD'),\n        };\n\n        const response = await WS.newAccountReal(data);\n        if (!response.error) {\n            await this.accountRealReaction(response);\n            return Promise.resolve(response);\n        }\n        return Promise.reject(response.error);\n    }\n\n    get residence() {\n        if (this.is_logged_in) {\n            return this.account_settings?.country_code ?? '';\n        }\n        return '';\n    }\n\n    get email_address() {\n        if (this.accounts && this.accounts[this.loginid]) {\n            return this.accounts[this.loginid].email;\n        }\n\n        return '';\n    }\n\n    get is_website_status_ready() {\n        return this.website_status && !BinarySocket.getAvailability().is_down;\n    }\n\n    isEuCountrySelected = selected_country => {\n        if (selected_country) return isEuCountry(selected_country);\n        return false;\n    };\n\n    isAccountOfType = type => {\n        const client_account_type = getClientAccountType(this.loginid);\n\n        return (\n            ((type === 'virtual' && client_account_type === 'virtual') ||\n                (type === 'real' && client_account_type !== 'virtual') ||\n                type === client_account_type) &&\n            !this.isDisabled()\n        );\n    };\n\n    isAccountOfTypeDisabled = type => {\n        const filtered_list = this.account_list.filter(acc => getClientAccountType(acc.loginid) === type);\n        return filtered_list.length > 0 && filtered_list.every(acc => acc.is_disabled);\n    };\n\n    shouldCompleteTax = () => {\n        if (!this.isAccountOfType('financial')) return false;\n\n        return !/crs_tin_information/.test((this.account_status || {})?.status);\n    };\n\n    updateAccountList(account_list) {\n        account_list.forEach(account => {\n            if (this.accounts[account.loginid]) {\n                this.accounts[account.loginid].excluded_until = account.excluded_until || '';\n                Object.keys(account).forEach(param => {\n                    const param_to_set = param === 'country' ? 'residence' : param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (param_to_set !== 'loginid') {\n                        this.accounts[account.loginid][param_to_set] = value_to_set;\n                    }\n                });\n            }\n        });\n    }\n\n    /**\n     * Switch to the given loginid account.\n     *\n     * @param {string} loginid\n     */\n    async switchAccount(loginid) {\n        if (!loginid) return;\n\n        this.setPreSwitchAccount(true);\n        this.setIsLoggingIn(true);\n        this.root_store.notifications.removeNotifications(true);\n        this.root_store.notifications.removeAllNotificationMessages(true);\n        if (!this.is_virtual && /VRTC|VRW/.test(loginid)) {\n            this.setPrevRealAccountLoginid(this.loginid);\n        }\n        this.setSwitched(loginid);\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n    }\n\n    async resetVirtualBalance() {\n        this.root_store.notifications.removeNotificationByKey({ key: 'reset_virtual_balance' });\n        this.root_store.notifications.removeNotificationMessage({\n            key: 'reset_virtual_balance',\n            should_show_again: true,\n        });\n        await WS.authorized.topupVirtual();\n    }\n\n    switchEndSignal() {\n        this.switch_broadcast = false;\n    }\n\n    /**\n     * We initially fetch things from local storage, and then do everything inside the store.\n     */\n    async init(login_new_user) {\n        const search = SessionStore.get('signup_query_param') || window.location.search;\n        const search_params = new URLSearchParams(search);\n        const redirect_url = search_params?.get('redirect_url');\n        const code_param = search_params?.get('code');\n        const action_param = search_params?.get('action');\n        const loginid_param = search_params?.get('loginid');\n        const unused_params = [\n            'type',\n            'acp',\n            'label',\n            'server',\n            'interface',\n            'cid',\n            'age',\n            'utm_source',\n            'first_name',\n            'second_name',\n            'email',\n            'phone',\n            '_filteredParams',\n        ];\n\n        const { tracking } = Analytics.getInstances();\n\n        const authorize_response = await this.setUserLogin(login_new_user);\n\n        if (action_param === 'signup') {\n            this.root_store.ui.setIsNewAccount();\n        }\n\n        if (search) {\n            if (code_param && action_param) this.setVerificationCode(code_param, action_param);\n            document.addEventListener('DOMContentLoaded', () => {\n                setTimeout(() => {\n                    // timeout is needed to get the token (code) from the URL before we hide it from the URL\n                    // and from LiveChat that gets the URL from Window, particularly when initialized via HTML script on mobile\n                    history.replaceState(null, null, window.location.search.replace(/&?code=[^&]*/i, ''));\n                }, 0);\n            });\n        }\n\n        this.setDeviceData();\n\n        // On case of invalid token, no need to continue with additional api calls.\n        if (authorize_response?.error) {\n            await this.logout();\n            this.root_store.common.setError(true, {\n                header: authorize_response.error.message,\n                message: localize('Please Log in'),\n                should_show_refresh: false,\n                redirect_label: localize('Log in'),\n                redirectOnClick: () => redirectToLogin(false, getLanguage()),\n            });\n            this.setIsLoggingIn(false);\n            this.setInitialized(false);\n            this.setSwitched('');\n            return false;\n        }\n\n        if (action_param === 'payment_withdraw' && loginid_param) this.setLoginId(loginid_param);\n        else this.setLoginId(LocalStore.get('active_loginid'));\n        this.user_id = LocalStore.get('active_user_id');\n        this.setAccounts(LocalStore.getObject(storage_key));\n        this.setSwitched('');\n        const client = this.accounts[this.loginid];\n        // If there is an authorize_response, it means it was the first login\n        if (authorize_response) {\n            // If this fails, it means the landing company check failed\n            if (this.loginid === authorize_response.authorize.loginid) {\n                const { user_id } = authorize_response.authorize;\n\n                BinarySocketGeneral.authorizeAccount(authorize_response);\n\n                // Client comes back from oauth and logs in\n                Analytics.setAttributes({\n                    app_id: getAppId(),\n                });\n                tracking?.identifyEvent(user_id, {\n                    language: getLanguage().toLowerCase(),\n                });\n                const current_page = window.location.hostname + window.location.pathname;\n                Analytics?.pageView(current_page);\n\n                await this.root_store.gtm.pushDataLayer({\n                    event: 'login',\n                });\n            } else {\n                // So it will send an authorize with the accepted token, to be handled by socket-general\n                await BinarySocket.authorize(client.token);\n            }\n            if (redirect_url) {\n                const redirect_route = routes[redirect_url].length > 1 ? routes[redirect_url] : '';\n                const has_action = ['payment_agent_withdraw', 'payment_withdraw', 'reset_password'].includes(\n                    action_param\n                );\n\n                if (has_action) {\n                    const query_string = filterUrlQuery(search, ['platform', 'code', 'action']);\n                    if ([routes.cashier_withdrawal, routes.cashier_pa].includes(redirect_route)) {\n                        // Set redirect path for cashier withdrawal and payment agent withdrawal (after getting PTA redirect_url)\n                        window.location.replace(`/redirect?${query_string}`);\n                    } else {\n                        window.location.replace(`${redirect_route}/redirect?${query_string}`);\n                    }\n                } else {\n                    window.location.replace(`${redirect_route}/?${filterUrlQuery(search, ['platform'])}`);\n                }\n            }\n            runInAction(() => {\n                this.is_populating_account_list = false;\n            });\n            const language = getRedirectionLanguage(authorize_response.authorize.preferred_language);\n            const stored_language = LocalStore.get(LANGUAGE_KEY);\n            if (language !== 'EN' && stored_language && language !== stored_language) {\n                window.history.replaceState({}, document.title, urlForLanguage(language));\n                await this.root_store.common.changeSelectedLanguage(language);\n            }\n            if (this.citizen) {\n                await this.onSetCitizen(this.citizen);\n            }\n            if (!this.is_virtual) {\n                this.setPrevRealAccountLoginid(this.loginid);\n            }\n            const no_cr_account = this.active_accounts.some(acc => acc.landing_company_shortcode === 'svg');\n\n            if (!no_cr_account && this.is_low_risk) {\n                this.switchAccount(this.virtual_account_loginid);\n            }\n        }\n        this.selectCurrency('');\n\n        this.responsePayoutCurrencies(await WS.authorized.payoutCurrencies());\n        if (this.is_logged_in) {\n            await WS.mt5LoginList().then(this.responseMt5LoginList);\n            WS.tradingServers(CFD_PLATFORMS.MT5).then(this.responseMT5TradingServers);\n\n            WS.tradingPlatformAvailableAccounts(CFD_PLATFORMS.MT5).then(this.responseTradingPlatformAvailableAccounts);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.DXTRADE).then(this.responseTradingPlatformAccountsList);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.CTRADER).then(this.responseTradingPlatformAccountsList);\n            WS.tradingServers(CFD_PLATFORMS.DXTRADE).then(this.responseDxtradeTradingServers);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.DERIVEZ).then(this.responseTradingPlatformAccountsList);\n            WS.tradingPlatformAccountsList(CFD_PLATFORMS.DERIVEZ).then(this.responseDerivezAvailableAccounts);\n\n            this.responseStatement(\n                await BinarySocket.send({\n                    statement: 1,\n                })\n            );\n            if (Object.keys(this.account_settings).length === 0) {\n                this.setAccountSettings((await WS.authorized.cache.getSettings()).get_settings);\n            }\n\n            if (this.account_settings) this.setPreferredLanguage(this.account_settings.preferred_language);\n            this.loginid !== 'null' && Analytics.setAttributes({ account_type: this.loginid.substring(0, 2) });\n            if (this.user_id) {\n                tracking?.identifyEvent(this.user_id, {\n                    language: getLanguage().toLowerCase(),\n                });\n            }\n            await this.fetchResidenceList();\n            await this.getTwoFAStatus();\n            if (this.account_settings && !this.account_settings.residence) {\n                this.root_store.ui.toggleSetResidenceModal(true);\n            }\n            if (this.residence) {\n                await WS.authorized.cache.landingCompany(this.residence).then(this.responseLandingCompany);\n                await this.fetchStatesList();\n            }\n            if (!this.is_virtual) await this.getLimits();\n\n            await WS.p2pAdvertiserInfo().then(this.setP2pAdvertiserInfo);\n        } else {\n            this.resetMt5AccountListPopulation();\n        }\n        this.responseWebsiteStatus(await WS.wait('website_status'));\n\n        this.registerReactions();\n        this.setIsLoggingIn(false);\n        this.setInitialized(true);\n\n        // delete search params if it's signup when signin completed\n        if (action_param === 'signup') {\n            const filteredQuery = filterUrlQuery(search, ['lang']);\n            history.replaceState(\n                null,\n                null,\n                window.location.href.replace(`${search}`, filteredQuery === '' ? '' : `?${filteredQuery}`)\n            );\n        }\n\n        history.replaceState(\n            null,\n            null,\n            window.location.href.replace(`${search}`, excludeParamsFromUrlQuery(search, unused_params))\n        );\n\n        return true;\n    }\n\n    resetMt5AccountListPopulation() {\n        this.is_populating_mt5_account_list = false;\n    }\n\n    responseWebsiteStatus(response) {\n        this.website_status = response.website_status;\n    }\n\n    responseLandingCompany(response) {\n        this.landing_companies = response.landing_company;\n        this.is_landing_company_loaded = true;\n        this.setStandpoint(this.landing_companies);\n        this.setRealityCheck();\n    }\n\n    setP2pAdvertiserInfo(response) {\n        this.p2p_advertiser_info = response.p2p_advertiser_info;\n    }\n\n    setStandpoint(landing_companies) {\n        if (!landing_companies) return;\n        const { gaming_company, financial_company } = landing_companies;\n        if (gaming_company?.shortcode) {\n            this.standpoint = {\n                ...this.standpoint,\n                [gaming_company.shortcode]: !!gaming_company?.shortcode,\n                gaming_company: gaming_company?.shortcode ?? false,\n            };\n        }\n        if (financial_company?.shortcode) {\n            this.standpoint = {\n                ...this.standpoint,\n                [financial_company.shortcode]: !!financial_company?.shortcode,\n                financial_company: financial_company?.shortcode ?? false,\n            };\n        }\n    }\n\n    setRealityCheck() {\n        this.has_reality_check = this.current_landing_company?.has_reality_check;\n        // if page reloaded after reality check was submitted\n        // use the submitted values to initiate rather than asking again\n        if (\n            this.has_reality_check &&\n            this.reality_check_duration &&\n            typeof this.reality_check_timeout === 'undefined'\n        ) {\n            this.setRealityCheckDuration(this.reality_check_duration);\n        }\n    }\n\n    setLoginId(loginid) {\n        this.loginid = loginid;\n    }\n\n    setAccounts(accounts) {\n        this.accounts = accounts;\n    }\n\n    setSwitched(switched) {\n        this.switched = switched;\n    }\n\n    setIsCfdPoiCompleted(is_completed) {\n        this.is_cfd_poi_completed = is_completed;\n    }\n\n    /**\n     * Check if account is disabled or not\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    isDisabled(loginid = this.loginid) {\n        return this.getAccount(loginid).is_disabled;\n    }\n\n    /**\n     * Get accounts token from given login id.\n     *\n     * @param loginid\n     * @returns {string}\n     */\n    getToken(loginid = this.loginid) {\n        return this.getAccount(loginid).token;\n    }\n\n    /**\n     * Get account object from given login id\n     *\n     * @param loginid\n     * @returns {object}\n     */\n    getAccount(loginid = this.loginid) {\n        return this.accounts[loginid];\n    }\n\n    /**\n     * Get information required by account switcher\n     *\n     * @param loginid\n     * @returns {{loginid: *, is_virtual: (number|number|*), icon: string, title: *}}\n     */\n    getAccountInfo(loginid = this.loginid) {\n        const account = this.getAccount(loginid);\n        const currency = account.currency;\n        const is_disabled = account.is_disabled;\n        const is_virtual = account.is_virtual;\n        const account_type = !is_virtual && currency ? currency : this.account_title;\n\n        return {\n            loginid,\n            is_disabled,\n            is_virtual,\n            icon: account_type.toLowerCase(), // TODO: display the icon\n            title: account_type.toLowerCase() === 'virtual' ? localize('DEMO') : account_type,\n        };\n    }\n\n    setIsLoggingIn(bool) {\n        this.is_logging_in = bool;\n    }\n\n    setPreSwitchAccount(is_pre_switch) {\n        this.pre_switch_broadcast = is_pre_switch;\n    }\n\n    broadcastAccountChange() {\n        this.switch_broadcast = true;\n    }\n\n    broadcastAccountChangeAfterAuthorize() {\n        return BinarySocket.wait('authorize').then(() => {\n            this.broadcastAccountChange();\n        });\n    }\n\n    handleNotFoundLoginId() {\n        // Logout if the switched_account doesn't belong to any loginid.\n        this.root_store.notifications.addNotificationMessage({\n            message: localize('Could not switch to default account.'),\n            type: 'danger',\n        });\n        // request a logout\n        this.logout();\n    }\n\n    isUnableToFindLoginId() {\n        return !this.all_loginids.some(id => id !== this.switched) || this.switched === this.loginid;\n    }\n\n    async switchAccountHandler() {\n        if (!this.switched || !this.switched.length || !this.getAccount(this.switched)?.token) {\n            if (this.isUnableToFindLoginId()) {\n                this.handleNotFoundLoginId();\n                return;\n            }\n\n            // Send a toast message to let the user know we can't switch his account.\n            this.root_store.notifications.addNotificationMessage({\n                message: localize('Switching to default account.'),\n                type: 'info',\n            });\n\n            // switch to default account.\n            this.switchAccount(this.all_loginids[0]);\n            await this.switchAccountHandler();\n            return;\n        }\n\n        runInAction(() => (this.is_switching = true));\n        this.setIsAuthorize(false);\n        const from_login_id = this.loginid;\n        this.resetLocalStorageValues(this.switched);\n        SocketCache.clear();\n\n        // if real to virtual --> switch to blue\n        // if virtual to real --> switch to green\n        // else keep the existing connection\n        const should_switch_socket_connection = this.is_virtual || /VRTC|VRW/.test(from_login_id);\n\n        if (should_switch_socket_connection) {\n            BinarySocket.closeAndOpenNewConnection();\n            await BinarySocket.wait('authorize');\n        } else {\n            await WS.forgetAll('balance');\n            await BinarySocket.authorize(this.getToken());\n        }\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n        sessionStorage.setItem('active_tab', '1');\n\n        // set local storage\n        this.root_store.gtm.setLoginFlag();\n\n        await this.init();\n\n        // broadcastAccountChange is already called after new connection is authorized\n        if (!should_switch_socket_connection) this.broadcastAccountChange();\n\n        if (!this.is_virtual) this.getLimits();\n\n        runInAction(() => (this.is_switching = false));\n    }\n\n    registerReactions() {\n        // Switch account reactions.\n        when(\n            () => this.switched,\n            () => {\n                // Remove real account notifications upon switching to virtual\n                if (this.accounts[this.switched]?.is_virtual) {\n                    this.root_store.notifications.removeNotifications(true);\n                    this.root_store.notifications.removeAllNotificationMessages();\n                }\n\n                this.switchAccountHandler();\n            }\n        );\n    }\n\n    setBalanceActiveAccount(obj_balance) {\n        if (this.accounts[obj_balance?.loginid] && obj_balance.loginid === this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n            if (this.accounts[obj_balance.loginid].is_virtual) {\n                this.root_store.notifications.resetVirtualBalanceNotification(obj_balance.loginid);\n            }\n            this.resetLocalStorageValues(this.loginid);\n        }\n    }\n\n    // This callback is used for balance: all\n    // Balance: all is very slow\n    // --> so we keep a separate balance subscription for the active account\n    setBalanceOtherAccounts(obj_balance) {\n        // Balance subscription response received when mt5 transfer is in progress should be ignored.\n        // After mt5 transfer is done, `balanceAll` is requested along with `mt5LoginList` in order to update the correct balance.\n        if (this.root_store.modules?.cashier?.account_transfer?.is_mt5_transfer_in_progress) return;\n\n        // Only the first response of balance:all will include all accounts\n        // subsequent requests will be single account balance updates\n        if (this.accounts[obj_balance?.loginid] && !obj_balance.accounts && obj_balance.loginid !== this.loginid) {\n            this.accounts[obj_balance.loginid].balance = obj_balance.balance;\n        }\n\n        if (this.accounts[obj_balance?.loginid] && obj_balance.accounts) {\n            Object.keys(obj_balance.accounts).forEach(account_id => {\n                const is_active_account_id = account_id === this.loginid;\n\n                if (!is_active_account_id && this.accounts[account_id]) {\n                    this.accounts[account_id].balance = +obj_balance.accounts[account_id].balance;\n                }\n            });\n        }\n\n        if (obj_balance?.total) {\n            const total_real = getPropertyValue(obj_balance, ['total', 'deriv']);\n            const total_mt5 = getPropertyValue(obj_balance, ['total', CFD_PLATFORMS.MT5]);\n            const total_dxtrade = getPropertyValue(obj_balance, ['total', CFD_PLATFORMS.DXTRADE]);\n            // in API streaming responses MT5 balance is not re-sent, so we need to reuse the first mt5 total sent\n            const has_mt5 = !isEmptyObject(total_mt5);\n            const has_dxtrade = !isEmptyObject(total_dxtrade);\n            this.obj_total_balance = {\n                amount_real: +total_real.amount,\n                amount_mt5: has_mt5 ? +total_mt5.amount : this.obj_total_balance.amount_mt5,\n                amount_dxtrade: has_dxtrade ? +total_dxtrade.amount : this.obj_total_balance.amount_dxtrade,\n                currency: total_real.currency,\n            };\n        }\n    }\n\n    selectCurrency(value) {\n        this.selected_currency = value;\n    }\n\n    setResidence(residence) {\n        if (this.loginid) {\n            this.accounts[this.loginid].residence = residence;\n        }\n    }\n\n    setCitizen(citizen) {\n        this.citizen = citizen;\n    }\n\n    setEmail(email) {\n        if (this.loginid) {\n            this.accounts[this.loginid].email = email;\n            this.email = email;\n        }\n    }\n\n    setAccountSettings(settings) {\n        const is_equal_settings = JSON.stringify(settings) === JSON.stringify(this.account_settings);\n        if (!is_equal_settings) {\n            this.account_settings = settings;\n            this.is_account_setting_loaded = true;\n        }\n    }\n\n    setAccountStatus(status) {\n        this.account_status = status;\n    }\n\n    async updateAccountStatus() {\n        const account_status_response = await WS.authorized.getAccountStatus();\n        if (!account_status_response.error) {\n            this.setAccountStatus(account_status_response.get_account_status);\n        }\n    }\n\n    setInitialized(is_initialized) {\n        this.initialized_broadcast = is_initialized;\n    }\n\n    cleanUp() {\n        // delete all notifications keys for this account when logout\n        const notification_messages = LocalStore.getObject('notification_messages');\n        if (notification_messages && this.loginid) {\n            delete notification_messages[this.loginid];\n            LocalStore.setObject('notification_messages', {\n                ...notification_messages,\n            });\n        }\n\n        this.root_store.gtm.pushDataLayer({\n            event: 'log_out',\n        });\n        this.loginid = null;\n        this.user_id = null;\n        this.upgrade_info = undefined;\n        this.accounts = {};\n        this.mt5_login_list = [];\n        this.dxtrade_accounts_list = [];\n        this.ctrader_accounts_list = [];\n        this.derivez_accounts_list = [];\n        this.landing_companies = {};\n        localStorage.removeItem('readScamMessage');\n        localStorage.removeItem('isNewAccount');\n        LocalStore.set('marked_notifications', JSON.stringify([]));\n        localStorage.setItem('active_loginid', this.loginid);\n        localStorage.setItem('active_user_id', this.user_id);\n        localStorage.setItem('client.accounts', JSON.stringify(this.accounts));\n\n        runInAction(async () => {\n            this.responsePayoutCurrencies(await WS.payoutCurrencies());\n        });\n        this.root_store.notifications.removeAllNotificationMessages(true);\n        this.syncWithLegacyPlatforms(this.loginid, this.accounts);\n        this.cleanupRealityCheck();\n    }\n\n    async logout() {\n        // TODO: [add-client-action] - Move logout functionality to client store\n        const response = await requestLogout();\n\n        if (response?.logout === 1) {\n            this.cleanUp();\n\n            Analytics.reset();\n            this.setLogout(true);\n        }\n\n        return response;\n    }\n\n    setLogout(is_logged_out) {\n        this.has_logged_out = is_logged_out;\n        if (this.root_store.common.has_error) this.root_store.common.setError(false, null);\n    }\n\n    /* eslint-disable */\n    storeClientAccounts(obj_params, account_list) {\n        // store consistent names with other API calls\n        // API_V4: send consistent names\n        const map_names = {\n            country: 'residence',\n            landing_company_name: 'landing_company_shortcode',\n        };\n        const client_object = {};\n        let active_loginid;\n\n        if (obj_params.selected_acct) {\n            active_loginid = obj_params.selected_acct;\n        }\n\n        account_list.forEach(function (account) {\n            Object.keys(account).forEach(function (param) {\n                if (param === 'loginid') {\n                    if (!active_loginid && !account.is_disabled) {\n                        if (!account.is_virtual) {\n                            active_loginid = account[param];\n                        } else if (account.is_virtual) {\n                            // TODO: [only_virtual] remove this to stop logging non-SVG clients into virtual\n                            active_loginid = account[param];\n                        }\n                    }\n                } else {\n                    const param_to_set = map_names[param] || param;\n                    const value_to_set = typeof account[param] === 'undefined' ? '' : account[param];\n                    if (!(account.loginid in client_object)) {\n                        client_object[account.loginid] = {};\n                    }\n                    client_object[account.loginid][param_to_set] = value_to_set;\n                }\n            });\n        });\n\n        let i = 1;\n        while (obj_params[`acct${i}`]) {\n            const loginid = obj_params[`acct${i}`];\n            const token = obj_params[`token${i}`];\n            if (loginid && token) {\n                client_object[loginid].token = token;\n            }\n            i++;\n        }\n\n        // if didn't find any login ID that matched the above condition\n        // or the selected one doesn't have a token, set the first one\n        if (!active_loginid || !client_object[active_loginid].token) {\n            active_loginid = obj_params.acct1;\n        }\n\n        // TODO: send login flag to GTM if needed\n        if (active_loginid && Object.keys(client_object).length) {\n            localStorage.setItem('active_loginid', active_loginid);\n            localStorage.setItem('client.accounts', JSON.stringify(client_object));\n            this.syncWithLegacyPlatforms(active_loginid, this.accounts);\n        }\n    }\n\n    async setUserLogin(login_new_user) {\n        // login_new_user is populated only on virtual sign-up\n        let obj_params = {};\n        const search = window.location.search;\n\n        let is_social_signup_provider = false;\n\n        if (search) {\n            let search_params = new URLSearchParams(window.location.search);\n\n            search_params.forEach((value, key) => {\n                const account_keys = ['acct', 'token', 'cur'];\n                const is_account_param = account_keys.some(\n                    account_key => key?.includes(account_key) && key !== 'affiliate_token'\n                );\n\n                if (is_account_param) {\n                    obj_params[key] = value;\n                    is_social_signup_provider = true;\n                }\n            });\n\n            // delete account query params - but keep other query params (e.g. utm)\n            Object.keys(obj_params).forEach(key => search_params.delete(key));\n            search_params.delete('state'); // remove unused state= query string\n            search_params = search_params?.toString();\n            const search_param_without_account = search_params ? `?${search_params}` : '/';\n            history.replaceState(null, null, `${search_param_without_account}${window.location.hash}`);\n        }\n\n        const is_client_logging_in = login_new_user ? login_new_user.token1 : obj_params.token1;\n\n        if (is_client_logging_in) {\n            this.setIsLoggingIn(true);\n\n            const redirect_url = sessionStorage.getItem('redirect_url');\n\n            if (\n                (redirect_url?.endsWith('/') || redirect_url?.endsWith(routes.bot)) &&\n                (isTestLink() || isProduction() || isLocal() || isStaging())\n            ) {\n                window.history.replaceState({}, document.title, '/appstore/traders-hub');\n            } else {\n                window.history.replaceState({}, document.title, sessionStorage.getItem('redirect_url'));\n            }\n            SocketCache.clear();\n            // is_populating_account_list is used for socket general to know not to filter the first-time logins\n            this.is_populating_account_list = true;\n            const authorize_response = await BinarySocket.authorize(is_client_logging_in);\n\n            if (is_social_signup_provider) {\n                const { get_account_status } = await WS.authorized.getAccountStatus();\n\n                Analytics.trackEvent('ce_virtual_signup_form', {\n                    action: 'signup_continued',\n                    signup_provider: get_account_status?.social_identity_provider,\n                    form_name: this.root_store?.ui?.is_mobile\n                        ? 'virtual_signup_web_mobile_default'\n                        : 'virtual_signup_web_desktop_default',\n                });\n            }\n\n            if (login_new_user) {\n                // overwrite obj_params if login is for new virtual account\n                obj_params = login_new_user;\n            }\n\n            if (authorize_response.error) {\n                return authorize_response;\n            }\n\n            runInAction(() => {\n                const account_list = (authorize_response.authorize || {}).account_list;\n                this.upgradeable_landing_companies = [...new Set(authorize_response.upgradeable_landing_companies)];\n\n                if (this.canStoreClientAccounts(obj_params, account_list)) {\n                    this.storeClientAccounts(obj_params, account_list);\n                } else {\n                    // Since there is no API error, we have to add this to manually trigger checks in other parts of the code.\n                    authorize_response.error = {\n                        code: 'MismatchedAcct',\n                        message: localize('Invalid token'),\n                    };\n                }\n            });\n            return authorize_response;\n        }\n    }\n\n    canStoreClientAccounts(obj_params, account_list) {\n        const is_ready_to_process = account_list && isEmptyObject(this.accounts);\n        const accts = Object.keys(obj_params).filter(value => /^acct./.test(value));\n\n        const is_cross_checked = accts.every(acct =>\n            account_list.some(account => account.loginid === obj_params[acct])\n        );\n\n        return is_ready_to_process && is_cross_checked;\n    }\n\n    setVerificationCode(code, action) {\n        this.verification_code[action] = code;\n        if (code) {\n            LocalStore.set(`verification_code.${action}`, code);\n        } else {\n            LocalStore.remove(`verification_code.${action}`);\n        }\n        if (action === 'signup') {\n            // TODO: add await if error handling needs to happen before AccountSignup is initialised\n            this.fetchResidenceList(); // Prefetch for use in account signup process\n        }\n    }\n\n    setNewEmail(email, action) {\n        this.new_email[action] = email;\n        if (email) {\n            LocalStore.set(`new_email.${action}`, email);\n        } else {\n            LocalStore.remove(`new_email.${action}`);\n        }\n    }\n\n    setDeviceData() {\n        setDeviceDataCookie('signup_device', isDesktopOs() ? 'desktop' : 'mobile');\n    }\n\n    getSignupParams() {\n        const param_list = [\n            'date_first_contact',\n            'signup_device',\n            'gclid_url',\n            'utm_source',\n            'utm_ad_id',\n            'utm_adgroup_id',\n            'utm_adrollclk_id',\n            'utm_campaign_id',\n            'utm_campaign',\n            'utm_fbcl_id',\n            'utm_gl_client_id',\n            'utm_msclk_id',\n            'utm_medium',\n            'utm_term',\n            'utm_content',\n            'affiliate_token',\n        ];\n        const signup_params = {};\n        const url_params = new URLSearchParams(window.location.search);\n\n        param_list.forEach(key => {\n            if (url_params.get(key)) {\n                signup_params[key] = url_params.get(key);\n            }\n        });\n\n        return signup_params;\n    }\n\n    onSetResidence({ residence }, cb) {\n        if (!residence) return;\n        WS.setSettings({\n            residence,\n        }).then(async response => {\n            if (response.error) {\n                cb(response.error.message);\n            } else {\n                await this.setResidence(residence);\n                await WS.authorized.storage\n                    .landingCompany(this.accounts[this.loginid].residence)\n                    .then(this.responseLandingCompany);\n                await WS.authorized.storage.getSettings().then(async response => {\n                    this.setAccountSettings(response.get_settings);\n                });\n                runInAction(async () => {\n                    await BinarySocket.authorize(this.getToken()).then(() => {\n                        runInAction(() => (this.upgrade_info = this.getBasicUpgradeInfo()));\n                    });\n                });\n                cb();\n            }\n        });\n    }\n\n    async onSetCitizen(citizen) {\n        if (!citizen) return;\n        WS.setSettings({\n            set_settings: 1,\n            citizen,\n        });\n    }\n\n    onSignup({ citizenship, password, residence }, cb) {\n        if (!this.verification_code.signup || !password || !residence || !citizenship) return;\n        WS.newAccountVirtual(this.verification_code.signup, password, residence, this.getSignupParams()).then(\n            async response => {\n                if (response.error) {\n                    cb(response.error.message);\n                } else {\n                    cb();\n                    // Initialize client store with new user login\n                    const { client_id, currency, oauth_token } = response.new_account_virtual;\n                    await this.setCitizen(citizenship);\n                    await this.switchToNewlyCreatedAccount(client_id, oauth_token, currency);\n                    // GTM Signup event\n                    this.root_store.gtm.pushDataLayer({\n                        event: 'virtual_signup',\n                    });\n                }\n            }\n        );\n    }\n\n    async switchToNewlyCreatedAccount(client_id, oauth_token, currency) {\n        this.setPreSwitchAccount(true);\n        const new_user_login = {\n            acct1: client_id,\n            token1: oauth_token,\n            curr1: currency,\n        };\n        await this.init(new_user_login);\n        this.broadcastAccountChange();\n    }\n\n    fetchAccountSettings() {\n        return new Promise(resolve => {\n            WS.authorized.storage.getSettings().then(response => {\n                this.setAccountSettings(response.get_settings);\n                resolve(response);\n            });\n        });\n    }\n\n    fetchResidenceList() {\n        return new Promise(resolve => {\n            WS.storage.residenceList().then(response => {\n                this.setResidenceList(response);\n                resolve(response);\n            });\n        });\n    }\n\n    setResidenceList(residence_list_response) {\n        this.residence_list = residence_list_response.residence_list || [];\n    }\n\n    fetchStatesList() {\n        return new Promise((resolve, reject) => {\n            WS.authorized.storage\n                .statesList({\n                    states_list: this.accounts[this.loginid].residence,\n                })\n                .then(response => {\n                    if (response.error) {\n                        reject(response.error);\n                    } else {\n                        runInAction(() => {\n                            this.states_list = response.states_list || [];\n                        });\n                    }\n                    resolve(response);\n                });\n        });\n    }\n\n    resetMt5ListPopulatedState() {\n        this.is_mt5_account_list_updated = false;\n        this.is_populating_mt5_account_list = true;\n        this.mt5_login_list_error = null;\n    }\n\n    async updateMt5LoginList() {\n        if (this.is_logged_in && !this.is_mt5_account_list_updated && !this.is_populating_mt5_account_list) {\n            const response = await WS.mt5LoginList();\n            this.responseMt5LoginList(response);\n        }\n    }\n\n    responseMT5TradingServers(response) {\n        if (response.error) {\n            this.mt5_trading_servers = [];\n            return;\n        }\n        this.mt5_trading_servers = response.trading_servers;\n    }\n\n    responseMt5LoginList(response) {\n        this.is_populating_mt5_account_list = false;\n        this.is_mt5_account_list_updated = true;\n        this.mt5_login_list_error = null;\n        /** we need to update mt5_login_list on mount of account switcher\n         *  to get the new MT5 balances (balance does not stream for MT5 accounts due to API restriction)\n         *  but to avoid spamming this call since the rate limit is strict\n         *  keep the current mt5_login_list response cached for one minute\n         *  after one minute consider it outdated and allow re-requesting it */\n        setTimeout(() => {\n            this.is_mt5_account_list_updated = false;\n        }, 60000);\n\n        if (!response.error) {\n            this.mt5_login_list = response.mt5_login_list.map(account => {\n                const display_login = (account.error ? account.error.details.login : account.login).replace(\n                    /^(MT[DR]?)/i,\n                    ''\n                );\n                if (account.error) {\n                    const { account_type, server } = account.error.details;\n                    this.setMT5DisabledSignupTypes({\n                        [account_type]: true,\n                    });\n                    if (platform === CFD_PLATFORMS.DERIVEZ || platform === CFD_PLATFORMS.CTRADER) {\n                        this.setCFDDisabledSignupTypes(platform, {\n                            [account_type]: true,\n                        });\n                    }\n                    return {\n                        account_type,\n                        display_login,\n                        has_error: true,\n                        server,\n                    };\n                }\n                return {\n                    ...account,\n                    display_login,\n                };\n            });\n        } else {\n            this.mt5_login_list_error = response.error;\n        }\n    }\n\n    responseDxtradeTradingServers(response) {\n        if (response.error) {\n            this.dxtrade_trading_servers = [];\n            return;\n        }\n        this.dxtrade_trading_servers = response.trading_servers;\n\n        this.dxtrade_trading_servers.forEach(trading_server => {\n            const { account_type, disabled } = trading_server;\n            if (disabled) {\n                this.setCFDDisabledSignupTypes(CFD_PLATFORMS.DXTRADE, {\n                    [account_type]: true,\n                });\n            }\n        });\n    }\n\n    responseTradingPlatformAvailableAccounts(response) {\n        if (!response.error) {\n            this.trading_platform_available_accounts = response.trading_platform_available_accounts;\n        }\n    }\n\n    responseDerivezAvailableAccounts(response) {\n        if (!response.error) {\n            this.derivez_available_accounts = response.trading_platform_accounts;\n        }\n    }\n\n    responseTradingPlatformAccountsList(response) {\n        const { platform } = response.echo_req || {};\n\n        this[`is_populating_${platform}_account_list`] = false;\n        this[`${platform}_accounts_list_error`] = null;\n\n        if (!response.error) {\n            this[`${platform}_accounts_list`] = response.trading_platform_accounts.map(account => {\n                const display_login = account.error ? account.error.details.account_id : account.account_id;\n                if (account.error) {\n                    const { account_type, server } = account.error.details;\n                    if (platform === CFD_PLATFORMS.DXTRADE) {\n                        this.setCFDDisabledSignupTypes(platform, {\n                            [account_type]: true,\n                        });\n                    }\n                    return {\n                        account_type,\n                        display_login,\n                        has_error: true,\n                        server,\n                    };\n                }\n                return {\n                    ...account,\n                    display_login,\n                };\n            });\n        } else {\n            this[`${platform}_accounts_list_error`] = response.error;\n        }\n    }\n\n    responseStatement(response) {\n        if (!response.error) {\n            this.statement = response.statement;\n        }\n    }\n\n    getChangeableFields() {\n        const readonly_fields = [\n            ...(this.account_settings.immutable_fields || []),\n            ...['immutable_fields', 'email', 'password'],\n        ];\n        return Object.keys(this.account_settings).filter(field => !readonly_fields.includes(field));\n    }\n\n    syncWithLegacyPlatforms(active_loginid, client_accounts) {\n        const smartTrader = {};\n        const binaryBot = {};\n\n        smartTrader.iframe = document.getElementById('localstorage-sync');\n        binaryBot.iframe = document.getElementById('localstorage-sync__bot');\n        smartTrader.origin = getUrlSmartTrader();\n        binaryBot.origin = getUrlBinaryBot(false);\n\n        [smartTrader, binaryBot].forEach(platform => {\n            if (platform.iframe) {\n                // Keep client.accounts in sync (in case user wasn't logged in).\n                platform.iframe.contentWindow.postMessage(\n                    {\n                        key: 'client.accounts',\n                        value: JSON.stringify(client_accounts),\n                    },\n                    platform.origin\n                );\n                platform.iframe.contentWindow.postMessage(\n                    {\n                        key: 'active_loginid',\n                        value: active_loginid,\n                    },\n                    platform.origin\n                );\n            }\n        });\n    }\n\n    get is_high_risk() {\n        if (isEmptyObject(this.account_status)) return false;\n        const { gaming_company, financial_company } = this.landing_companies;\n\n        // This is a conditional check for countries like Australia/Norway which fulfil one of these following conditions.\n        const restricted_countries =\n            financial_company?.shortcode === 'svg' ||\n            (gaming_company?.shortcode === 'svg' && financial_company?.shortcode !== 'maltainvest');\n\n        const high_risk_landing_company = financial_company?.shortcode === 'svg' && gaming_company?.shortcode === 'svg';\n        return high_risk_landing_company || this.account_status.risk_classification === 'high' || restricted_countries;\n    }\n\n    get is_low_risk() {\n        const { gaming_company, financial_company } = this.landing_companies;\n        const low_risk_landing_company =\n            financial_company?.shortcode === 'maltainvest' && gaming_company?.shortcode === 'svg';\n        return (\n            low_risk_landing_company ||\n            (this.upgradeable_landing_companies?.includes('svg') &&\n                this.upgradeable_landing_companies?.includes('maltainvest'))\n        );\n    }\n\n    get has_residence() {\n        return !!this.accounts[this.loginid]?.residence;\n    }\n\n    get is_pending_proof_of_ownership() {\n        return this.account_status?.authentication?.needs_verification?.includes('ownership');\n    }\n\n    setVisibilityRealityCheck(is_visible) {\n        // if reality check timeout has been set, don't make it visible until it runs out\n        if (is_visible && typeof this.reality_check_timeout === 'number') {\n            return;\n        }\n        this.is_reality_check_dismissed = !is_visible;\n        // store in localstorage to keep track of across tabs/on refresh\n        LocalStore.set('reality_check_dismissed', !is_visible);\n    }\n\n    clearRealityCheckTimeout() {\n        clearTimeout(this.reality_check_timeout);\n        this.reality_check_timeout = undefined;\n    }\n\n    setRealityCheckDuration(duration) {\n        this.reality_check_dur = +duration;\n        this.clearRealityCheckTimeout();\n        // store in localstorage to keep track of across tabs/on refresh\n        LocalStore.set('reality_check_duration', +duration);\n        this.reality_check_timeout = setTimeout(() => {\n            // set reality_check_timeout to undefined\n            this.clearRealityCheckTimeout();\n            // after this duration passes, show the summary pop up\n            this.setVisibilityRealityCheck(1);\n        }, +duration * 60 * 1000);\n    }\n\n    cleanupRealityCheck() {\n        this.has_reality_check = false;\n        this.is_reality_check_dismissed = undefined;\n        this.reality_check_dur = undefined;\n        this.clearRealityCheckTimeout();\n        LocalStore.remove('reality_check_duration');\n        LocalStore.remove('reality_check_dismissed');\n    }\n\n    fetchFinancialAssessment() {\n        return new Promise(async resolve => {\n            const { get_financial_assessment } = await WS.authorized.storage.getFinancialAssessment();\n\n            runInAction(() => (this.financial_assessment = get_financial_assessment));\n            resolve(get_financial_assessment);\n        });\n    }\n\n    async setFinancialAndTradingAssessment(payload) {\n        const response = await WS.setFinancialAndTradingAssessment(payload);\n        return response;\n    }\n\n    setTwoFAStatus(status) {\n        this.has_enabled_two_fa = status;\n    }\n\n    getTwoFAStatus() {\n        return new Promise(resolve => {\n            WS.authorized.accountSecurity({ account_security: 1, totp_action: 'status' }).then(response => {\n                if (response.error) {\n                    resolve(response.error);\n                } else {\n                    const is_enabled = !!getPropertyValue(response, ['account_security', 'totp', 'is_enabled']);\n                    this.setTwoFAStatus(is_enabled);\n                    resolve(is_enabled);\n                }\n            });\n        });\n    }\n\n    setTwoFAChangedStatus(status) {\n        this.has_changed_two_fa = status;\n    }\n\n    async updateMT5Status() {\n        this.updateAccountStatus();\n        await WS.authorized.mt5LoginList().then(this.root_store.client.responseMt5LoginList);\n    }\n\n    setPrevRealAccountLoginid = logind => {\n        this.prev_real_account_loginid = logind;\n    };\n\n    setPrevAccountType = acc_type => {\n        this.prev_account_type = acc_type;\n    };\n\n    /** @deprecated Use `useIsP2PEnabled` from `@deriv/hooks` package instead.\n     *\n     * This method is being used in `NotificationStore`, Once we get rid of the usage we can remove this method.\n     *\n     * Please `DO NOT` add the type for this method in `TCoreStores` as it is deprecated and shouldn't be used.\n     * */\n    get is_p2p_enabled() {\n        const is_low_risk_cr_eu_real = this.root_store?.traders_hub?.is_low_risk_cr_eu_real;\n\n        const is_p2p_supported_currency = Boolean(\n            this.website_status?.p2p_config?.supported_currencies.includes(this.currency.toLocaleLowerCase())\n        );\n\n        const is_p2p_visible = is_p2p_supported_currency && !this.is_virtual && !is_low_risk_cr_eu_real;\n\n        return is_p2p_visible;\n    }\n\n    setIsBetaChart = () => {\n        const website_status = Cookies.get('website_status');\n        if (!website_status) return;\n\n        try {\n            const cookie_value = JSON.parse(website_status);\n\n            if (cookie_value && cookie_value.clients_country) {\n                const client_country = cookie_value.clients_country;\n                /// Show beta chart only for these countries\n                this.is_beta_chart = ['ke', 'in', 'pk'].includes(client_country);\n            }\n        } catch {\n            this.is_beta_chart = false;\n        }\n    };\n}\n/* eslint-enable */\n","import * as SocketCache from '_common/base/socket_cache';\nimport { action, computed, makeObservable, observable } from 'mobx';\nimport { changeLanguage, getAllowedLanguages } from '@deriv/translations';\nimport { getAppId, getUrlBinaryBot, getUrlSmartTrader, isMobile, platforms, routes, toMoment } from '@deriv/shared';\nimport BaseStore from './base-store';\nimport BinarySocket from '_common/base/socket_base';\nimport ServerTime from '_common/base/server_time';\nimport WS from 'Services/ws-methods';\nimport { currentLanguage } from 'Utils/Language/index';\n\nexport default class CommonStore extends BaseStore {\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            addRouteHistoryItem: action.bound,\n            allowed_languages: observable,\n            app_id: observable,\n            app_router: observable,\n            app_routing_history: observable,\n            changeCurrentLanguage: action.bound,\n            changeSelectedLanguage: action.bound,\n            changing_language_timer_id: observable,\n            checkAppId: action.bound,\n            current_language: observable,\n            deposit_url: observable,\n            error: observable,\n            has_error: observable,\n            init: action.bound,\n            is_from_derivgo: computed,\n            is_language_changing: observable,\n            is_network_online: observable,\n            is_socket_opened: observable,\n            network_status: observable,\n            platform: observable,\n            routeBackInApp: action.bound,\n            routeTo: action.bound,\n            selected_contract_type: observable,\n            server_time: observable,\n            services_error: observable,\n            setAppRouterHistory: action.bound,\n            setAppstorePlatform: action.bound,\n            setDepositURL: action.bound,\n            setError: action.bound,\n            setInitialRouteHistoryItem: action.bound,\n            setIsSocketOpened: action.bound,\n            setNetworkStatus: action.bound,\n            setPlatform: action.bound,\n            setSelectedContractType: action.bound,\n            setServerTime: action.bound,\n            setServicesError: action.bound,\n            setWithdrawURL: action.bound,\n            showError: action.bound,\n            was_socket_opened: observable,\n            withdraw_url: observable,\n        });\n    }\n\n    allowed_languages = Object.keys(getAllowedLanguages());\n    app_id = undefined;\n    app_router = { history: null };\n    app_routing_history = [];\n    changing_language_timer_id = '';\n    current_language = currentLanguage;\n    deposit_url = '';\n    has_error = false;\n    is_language_changing = false;\n    is_network_online = false;\n    is_socket_opened = false;\n    error = {\n        type: 'info',\n        message: '',\n    };\n    network_status = {};\n    platform = '';\n    selected_contract_type = '';\n    server_time = ServerTime.get() || toMoment(); // fallback: get current time from moment.js\n    services_error = {};\n    was_socket_opened = false;\n    withdraw_url = '';\n\n    setSelectedContractType(contract_type) {\n        this.selected_contract_type = contract_type;\n    }\n\n    init() {\n        this.setPlatform();\n    }\n\n    checkAppId() {\n        if (this.app_id && this.app_id !== getAppId()) {\n            BinarySocket.closeAndOpenNewConnection();\n        }\n        this.app_id = getAppId();\n    }\n\n    changeCurrentLanguage(new_language) {\n        if (this.current_language !== new_language) {\n            if (this.changing_language_timer_id) clearTimeout(this.changing_language_timer_id);\n            this.current_language = new_language;\n            this.is_language_changing = true;\n            this.changing_language_timer_id = setTimeout(() => {\n                this.is_language_changing = false;\n            }, 2500);\n        }\n    }\n\n    changeSelectedLanguage = async key => {\n        SocketCache.clear();\n        if (key === 'EN') {\n            window.localStorage.setItem('i18n_language', key);\n        }\n        await WS.wait('authorize');\n        return new Promise((resolve, reject) => {\n            WS.setSettings({\n                set_settings: 1,\n                preferred_language: key,\n            }).then(async () => {\n                const new_url = new URL(window.location.href);\n                if (key === 'EN') {\n                    new_url.searchParams.delete('lang');\n                } else {\n                    new_url.searchParams.set('lang', key);\n                }\n                window.history.pushState({ path: new_url.toString() }, '', new_url.toString());\n                try {\n                    await changeLanguage(key, () => {\n                        this.changeCurrentLanguage(key);\n                        BinarySocket.closeAndOpenNewConnection(key);\n                        this.root_store.client.setIsAuthorize(false);\n                    });\n                    resolve();\n                } catch (e) {\n                    reject();\n                }\n            });\n        });\n    };\n\n    setAppstorePlatform(platform) {\n        this.platform = platform;\n    }\n\n    setPlatform() {\n        const search = window.location.search;\n        if (search) {\n            const url_params = new URLSearchParams(search);\n            const platform = url_params.get('platform');\n            if (platform) {\n                this.platform = platform;\n                window.sessionStorage.setItem('config.platform', this.platform);\n            }\n        }\n    }\n\n    get is_from_derivgo() {\n        return platforms[this.platform]?.platform_name === platforms.derivgo.platform_name;\n    }\n\n    setInitialRouteHistoryItem(location) {\n        if (window.location.href.indexOf('?ext_platform_url=') !== -1) {\n            const ext_url = decodeURI(new URL(window.location.href).searchParams.get('ext_platform_url'));\n            const { setExternalParams } = this.root_store.client;\n            setExternalParams({\n                url: ext_url,\n                should_redirect: true,\n            });\n            if (ext_url?.indexOf(getUrlSmartTrader()) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH', is_external: true });\n            } else if (ext_url?.indexOf(routes.cashier_p2p) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH' });\n            } else if (ext_url?.indexOf(getUrlBinaryBot()) === 0) {\n                this.addRouteHistoryItem({ pathname: ext_url, action: 'PUSH', is_external: true });\n            } else {\n                this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n            }\n\n            window.history.replaceState({}, document.title, window.location.pathname);\n        } else {\n            this.addRouteHistoryItem({ ...location, action: 'PUSH' });\n        }\n    }\n\n    setServerTime(server_time) {\n        this.server_time = server_time;\n    }\n\n    setIsSocketOpened(is_socket_opened) {\n        // note that it's not for account switch that we're doing this,\n        // but rather to reset account related stores like portfolio and contract-trade\n        const should_broadcast_account_change = this.was_socket_opened && is_socket_opened;\n\n        this.is_socket_opened = is_socket_opened;\n        this.was_socket_opened = this.was_socket_opened || is_socket_opened;\n\n        if (should_broadcast_account_change) {\n            this.root_store.client.broadcastAccountChangeAfterAuthorize();\n        }\n    }\n\n    setNetworkStatus(status, is_online) {\n        if (this.network_status.class) {\n            this.network_status.class = status.class;\n            this.network_status.tooltip = status.tooltip;\n        } else {\n            this.network_status = status;\n        }\n        this.is_network_online = is_online;\n\n        const { addNotificationMessage, client_notifications, removeNotificationMessage } =\n            this.root_store.notifications;\n        if (!is_online) {\n            addNotificationMessage(client_notifications.you_are_offline);\n        } else {\n            removeNotificationMessage(client_notifications.you_are_offline);\n        }\n    }\n\n    setError(has_error, error) {\n        this.has_error = has_error;\n        this.error = {\n            type: error ? error.type : 'info',\n            ...(error && {\n                header: error.header,\n                message: error.message,\n                redirect_label: error.redirect_label,\n                redirectOnClick: error.redirectOnClick,\n                should_show_refresh: error.should_show_refresh,\n                redirect_to: error.redirect_to,\n                should_clear_error_on_click: error.should_clear_error_on_click,\n                should_redirect: error.should_redirect,\n                setError: this.setError,\n            }),\n        };\n    }\n\n    showError({\n        message,\n        header,\n        redirect_label,\n        redirectOnClick,\n        should_show_refresh,\n        redirect_to,\n        should_clear_error_on_click,\n        should_redirect,\n    }) {\n        this.setError(true, {\n            header,\n            message,\n            redirect_label,\n            redirectOnClick,\n            should_show_refresh,\n            redirect_to,\n            should_clear_error_on_click,\n            type: 'error',\n            should_redirect,\n        });\n    }\n\n    setDepositURL(deposit_url) {\n        this.deposit_url = deposit_url;\n    }\n\n    setWithdrawURL(withdraw_url) {\n        this.withdraw_url = withdraw_url;\n    }\n\n    setServicesError(error) {\n        this.services_error = error;\n        if (isMobile()) {\n            if (error.code === 'CompanyWideLimitExceeded' || error.code === 'PleaseAuthenticate') {\n                this.root_store.ui.toggleServicesErrorModal(true);\n            } else {\n                this.root_store.ui.addToast({\n                    content: error.message,\n                    type: 'error',\n                });\n            }\n        } else {\n            this.root_store.ui.toggleServicesErrorModal(true);\n        }\n    }\n\n    setAppRouterHistory(history) {\n        this.app_router.history = history;\n    }\n\n    routeTo(pathname) {\n        if (this.app_router.history) this.app_router.history.push(pathname);\n    }\n\n    addRouteHistoryItem(router_action) {\n        const check_existing = this.app_routing_history.findIndex(\n            i => i.pathname === router_action.pathname && i.action === 'PUSH'\n        );\n        if (check_existing > -1) {\n            this.app_routing_history.splice(check_existing, 1);\n        }\n        this.app_routing_history.unshift(router_action);\n    }\n\n    isCurrentLanguage = lang => lang === this.current_language;\n\n    routeBackInApp(history, additional_platform_path = []) {\n        let route_to_item_idx = -1;\n        const route_to_item = this.app_routing_history.find((history_item, idx) => {\n            if (history_item.action === 'PUSH') {\n                if (history_item.is_external) {\n                    return true;\n                }\n\n                const parent_path = history_item.pathname.split('/')[1];\n                const platform_parent_paths = [routes.mt5, routes.bot, routes.trade, routes.dxtrade].map(\n                    i => i.split('/')[1]\n                ); // map full path to just base path (`/mt5/abc` -> `mt5`)\n\n                if (\n                    platform_parent_paths.includes(parent_path) ||\n                    additional_platform_path.includes(history_item.pathname)\n                ) {\n                    route_to_item_idx = idx;\n                    return true;\n                }\n            }\n\n            return false;\n        });\n\n        if (route_to_item) {\n            if (route_to_item.is_external) {\n                window.location.href = route_to_item.pathname;\n                return;\n            } else if (route_to_item_idx > -1) {\n                this.app_routing_history.splice(0, route_to_item_idx + 1);\n                // remove once p2p is ready\n                const ui_store = this.root_store.ui;\n                if (route_to_item.pathname === routes.cashier_p2p && ui_store.is_mobile)\n                    history.push(`${route_to_item.pathname}/verification`);\n                else history.push(route_to_item.pathname);\n                return;\n            }\n        }\n\n        history.push(routes.trade);\n    }\n}\n","import * as Cookies from 'js-cookie';\nimport { action, computed, makeObservable } from 'mobx';\nimport { getAppId, toMoment, epochToMoment, CFD_PLATFORMS } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport BinarySocket from '_common/base/socket_base';\nimport BaseStore from './base-store';\n\nexport default class GTMStore extends BaseStore {\n    is_gtm_applicable =\n        window.location.hostname === 'deriv-app.binary.sx' || /^(16303|16929|19111|19112)$/.test(getAppId());\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            visitorId: computed,\n            common_variables: computed,\n            accountSwitcherListener: action.bound,\n            pushDataLayer: action.bound,\n            pushTransactionData: action.bound,\n            eventHandler: action.bound,\n            setLoginFlag: action.bound,\n        });\n\n        this.onSwitchAccount(this.accountSwitcherListener);\n    }\n\n    get visitorId() {\n        return this.root_store.client.loginid;\n    }\n\n    /**\n     * Contains common data that will be passed to GTM on each datalayer push\n     *\n     * @returns {object}\n     */\n    get common_variables() {\n        const platform = () => {\n            const url = new URL(window.location.href);\n            const domain = url.hostname;\n            const path = url.pathname;\n\n            // TODO: [app-link-refactor] - Remove backwards compatibility for `deriv.app`\n            if (\n                /^(deriv-app\\.binary.sx|app\\.deriv\\.com|staging-app\\.deriv\\.com|deriv.app|staging.deriv.app|localhost.binary.sx)$/.test(\n                    domain\n                )\n            ) {\n                if (path === 'bot') {\n                    return 'DBot';\n                } else if (path === CFD_PLATFORMS.MT5) {\n                    return 'MT5';\n                }\n                return 'DTrader';\n            }\n            return 'undefined';\n        };\n        return {\n            language: getLanguage(),\n            ...(this.root_store.client.is_logged_in && {\n                visitorId: this.visitorId,\n                currency: this.root_store.client.currency,\n                userId: this.root_store.client.user_id,\n                email: this.root_store.client.email,\n            }),\n            loggedIn: this.root_store.client.is_logged_in,\n            theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n            platform: platform(),\n        };\n    }\n\n    accountSwitcherListener() {\n        return new Promise(resolve => resolve(this.pushDataLayer({ event: 'account switch' })));\n    }\n\n    /**\n     * Pushes provided data as GTM DataLayer\n     *\n     * @param {object} data\n     */\n    async pushDataLayer(data) {\n        if (this.is_gtm_applicable) {\n            BinarySocket.wait('authorize').then(() => {\n                const gtm_object = { ...this.common_variables, ...data };\n                if (!gtm_object.event) return;\n\n                dataLayer.push(gtm_object);\n            });\n        }\n    }\n\n    /**\n     * Pushes deposit & withdrawal data from transaction-stream to GTM\n     *\n     * @param {object} response\n     * @param {object} extra_data\n     */\n    pushTransactionData(response, extra_data = {}) {\n        if (!this.is_gtm_applicable || this.root_store.client.is_virtual) return;\n        if (!response.transaction || !response.transaction.action) return;\n        if (!['deposit', 'withdrawal'].includes(response.transaction.action)) return;\n\n        const moment_now = toMoment();\n        const storage_key = 'GTM_transactions';\n\n        // Remove values from prev days so localStorage doesn't grow to infinity\n        let gtm_transactions = JSON.parse(localStorage.getItem(storage_key)) || {};\n        if (Object.prototype.hasOwnProperty.call(gtm_transactions, 'timestamp')) {\n            if (moment_now.isAfter(epochToMoment(gtm_transactions.timestamp), 'day')) {\n                localStorage.removeItem(storage_key);\n                gtm_transactions = { timestamp: moment_now.unix() };\n            }\n        }\n        const transactions_arr = gtm_transactions.transactions || [];\n        if (!transactions_arr.includes(response.transaction.transaction_id)) {\n            const data = {\n                event: 'transaction',\n                bom_account_type: this.root_store.client.account_type,\n                bom_today: moment_now.unix(),\n                transaction: {\n                    id: response.transaction.transaction_id,\n                    type: response.transaction.action,\n                    time: response.transaction.transaction_time,\n                    amount: response.transaction.amount,\n                },\n            };\n            Object.assign(data, extra_data);\n            this.pushDataLayer(data);\n\n            transactions_arr.push(response.transaction.transaction_id);\n            gtm_transactions.transactions = transactions_arr;\n            gtm_transactions.timestamp = gtm_transactions.timestamp || moment_now.unix();\n\n            localStorage.setItem(storage_key, JSON.stringify(gtm_transactions));\n        }\n    }\n\n    eventHandler(get_settings) {\n        if (!this.is_gtm_applicable) return;\n\n        const login_event = localStorage.getItem('GTM_login');\n        const is_new_account = localStorage.getItem('GTM_new_account') === '1';\n\n        localStorage.removeItem('GTM_login');\n        localStorage.removeItem('GTM_new_account');\n\n        const affiliate_token = Cookies.getJSON('affiliate_tracking');\n        if (affiliate_token) {\n            this.pushDataLayer({ affiliate_token });\n        }\n\n        // Get current time (moment, set by server), else fallback to client time\n        const moment_now = toMoment();\n        const data = {\n            visitorId: this.visitorId,\n            account_type: this.root_store.client.account_type,\n            currency: this.root_store.client.currency,\n            country: get_settings.country,\n            country_abbrev: get_settings.country_code,\n            email: get_settings.email,\n            url: window.location.href,\n            today: moment_now.unix(),\n        };\n\n        if (is_new_account) {\n            data.event = 'new_account';\n            data.bom_date_joined = data.bom_today;\n        }\n\n        if (login_event) {\n            data.event = login_event;\n        }\n        this.pushDataLayer(data);\n    }\n\n    setLoginFlag(event_name) {\n        if (this.is_gtm_applicable && event_name) {\n            localStorage.setItem('GTM_login', event_name);\n        }\n    }\n}\n","export default class ModulesStore {\n    constructor(root_store) {\n        this.root_store = root_store;\n    }\n\n    attachModule(name, module) {\n        this[name] = module;\n    }\n\n    detachModule(name) {\n        this[name] = {};\n    }\n}\n","import React from 'react';\nimport debounce from 'lodash.debounce';\nimport { action, computed, makeObservable, observable, reaction } from 'mobx';\n\nimport { StaticUrl } from '@deriv/components';\nimport {\n    daysSince,\n    formatDate,\n    formatMoney,\n    getPathname,\n    getPlatformSettings,\n    getStaticUrl,\n    getUrlBase,\n    isCryptocurrency,\n    isEmptyObject,\n    isMobile,\n    isMultiplierContract,\n    LocalStore,\n    platform_name,\n    routes,\n    unique,\n} from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { BinaryLink } from 'App/Components/Routes';\nimport { WS } from 'Services';\n\nimport { sortNotifications, sortNotificationsMobile } from '../App/Components/Elements/NotificationMessage/constants';\n\nimport {\n    excluded_notifications,\n    getCashierValidations,\n    getStatusValidations,\n    hasMissingRequiredField,\n    maintenance_notifications,\n} from './Helpers/client-notifications';\nimport BaseStore from './base-store';\n\nexport default class NotificationStore extends BaseStore {\n    is_notifications_visible = false;\n    notifications = [];\n    notification_messages = [];\n    marked_notifications = [];\n    push_notifications = [];\n    client_notifications = {};\n    should_show_popups = true;\n    p2p_order_props = {};\n    p2p_redirect_to = {};\n    p2p_completed_orders = null;\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            addNotificationBar: action.bound,\n            addNotificationMessage: action.bound,\n            addNotificationMessageByKey: action.bound,\n            addVerificationNotifications: action.bound,\n            client_notifications: observable,\n            filterNotificationMessages: action.bound,\n            getP2pCompletedOrders: action.bound,\n            handleClientNotifications: action.bound,\n            is_notifications_empty: computed,\n            is_notifications_visible: observable,\n            marked_notifications: observable,\n            markNotificationMessage: action.bound,\n            notification_messages: observable,\n            notifications: observable,\n            p2p_completed_orders: observable,\n            p2p_order_props: observable,\n            p2p_redirect_to: observable,\n            push_notifications: observable,\n            refreshNotifications: action.bound,\n            removeAllNotificationMessages: action.bound,\n            removeNotificationByKey: action.bound,\n            removeNotificationMessage: action.bound,\n            removeNotificationMessageByKey: action.bound,\n            removeNotifications: action.bound,\n            resetVirtualBalanceNotification: action.bound,\n            setClientNotifications: action.bound,\n            setP2POrderProps: action.bound,\n            setP2PRedirectTo: action.bound,\n            setShouldShowPopups: action.bound,\n            should_show_popups: observable,\n            showCompletedOrderNotification: action.bound,\n            toggleNotificationsModal: action.bound,\n            unmarkNotificationMessage: action.bound,\n            updateNotifications: action.bound,\n        });\n\n        const debouncedGetP2pCompletedOrders = debounce(this.getP2pCompletedOrders, 1000);\n\n        reaction(\n            () => root_store.common.app_routing_history.map(i => i.pathname),\n            () => {\n                this.filterNotificationMessages();\n                this.marked_notifications = JSON.parse(LocalStore.get('marked_notifications') || '[]');\n            }\n        );\n        reaction(\n            () => [\n                root_store.client.account_settings,\n                root_store.client.account_status,\n                root_store.client.landing_companies,\n                root_store.client.is_p2p_enabled,\n                root_store.common?.selected_contract_type,\n                root_store.client.is_eu,\n                root_store.client.has_enabled_two_fa,\n                root_store.client.has_changed_two_fa,\n                this.p2p_order_props.order_id,\n                root_store.client.p2p_advertiser_info,\n            ],\n            async () => {\n                if (\n                    root_store.client.is_logged_in &&\n                    !root_store.client.is_virtual &&\n                    Object.keys(root_store.client.account_status || {}).length > 0 &&\n                    Object.keys(root_store.client.landing_companies || {}).length > 0 &&\n                    root_store.client.is_p2p_enabled\n                ) {\n                    await debouncedGetP2pCompletedOrders();\n                }\n\n                if (\n                    !root_store.client.is_logged_in ||\n                    (Object.keys(root_store.client.account_status || {}).length > 0 &&\n                        Object.keys(root_store.client.landing_companies || {}).length > 0)\n                ) {\n                    this.removeNotifications();\n                    this.removeAllNotificationMessages();\n                    this.setClientNotifications();\n                    this.handleClientNotifications();\n                    this.filterNotificationMessages();\n                    this.checkNotificationMessages();\n                }\n            }\n        );\n    }\n\n    get is_notifications_empty() {\n        return !this.notifications.length;\n    }\n\n    addNotificationBar(message) {\n        this.push_notifications.push(message);\n        this.push_notifications = unique(this.push_notifications, 'msg_type');\n    }\n\n    addNotificationMessage(notification) {\n        if (!notification) return;\n        if (!this.notification_messages.find(item => item.key === notification.key)) {\n            // Remove notification messages if it was already closed by user and exists in LocalStore\n            const active_loginid = LocalStore.get('active_loginid');\n            const messages = LocalStore.getObject('notification_messages');\n\n            if (active_loginid) {\n                // Check if is existing message to remove already closed messages stored in LocalStore\n                const is_existing_message = Array.isArray(messages[active_loginid])\n                    ? messages[active_loginid].includes(notification.key)\n                    : false;\n\n                if (is_existing_message) {\n                    this.markNotificationMessage({ key: notification.key });\n                    return;\n                }\n\n                const sortFn = isMobile() ? sortNotificationsMobile : sortNotifications;\n                this.notification_messages = [...this.notification_messages, notification].sort(sortFn);\n\n                if (\n                    ['svg', 'p2p'].some(key => notification.key?.includes(key)) ||\n                    (excluded_notifications && !excluded_notifications.includes(notification.key))\n                ) {\n                    this.updateNotifications();\n                }\n            }\n        }\n    }\n\n    addNotificationMessageByKey(key) {\n        if (key) this.addNotificationMessage(this.client_notifications[key]);\n    }\n\n    addVerificationNotifications(identity, document, has_restricted_mt5_account, has_mt5_account_with_rejected_poa) {\n        if (identity.status === 'verified') {\n            //identity\n            this.addNotificationMessage(this.client_notifications.poi_verified);\n        } else if (!['none', 'pending', 'expired'].includes(identity.status)) {\n            this.addNotificationMessage(this.client_notifications.poi_failed);\n        }\n\n        // document\n        if (document.status === 'verified') {\n            this.addNotificationMessage(this.client_notifications.poa_verified);\n        } else if (has_restricted_mt5_account) {\n            if (document.status === 'pending') {\n                this.addNotificationMessage(this.client_notifications.resticted_mt5_with_pending_poa);\n            } else {\n                this.addNotificationMessage(this.client_notifications.resticted_mt5_with_failed_poa);\n            }\n        } else if (has_mt5_account_with_rejected_poa) {\n            this.addNotificationMessage(this.client_notifications.poa_rejected_for_mt5);\n        } else if (!['none', 'pending', 'expired'].includes(document.status)) {\n            this.addNotificationMessage(this.client_notifications.poa_failed);\n        }\n    }\n\n    filterNotificationMessages() {\n        if (LocalStore.get('active_loginid') !== 'null')\n            this.resetVirtualBalanceNotification(LocalStore.get('active_loginid'));\n        if (window.location.pathname === routes.personal_details) {\n            this.notification_messages = this.notification_messages.filter(\n                notification =>\n                    notification.platform === 'Account' || maintenance_notifications.includes(notification.key)\n            );\n        } else if (!window.location.pathname.includes(routes.cashier_p2p)) {\n            this.notification_messages = this.notification_messages.filter(notification => {\n                if (notification.platform === undefined || notification.platform.includes(getPathname())) {\n                    return true;\n                } else if (!notification.platform.includes(getPathname())) {\n                    if (notification.is_disposable) {\n                        this.removeNotificationMessage({\n                            key: notification.key,\n                            should_show_again: notification.should_show_again,\n                        });\n                        this.removeNotificationByKey({ key: notification.key });\n                    }\n                }\n\n                return false;\n            });\n        }\n    }\n\n    // check for the already added keys in the notification_messages and don't display those notifications\n    checkNotificationMessages() {\n        const notifications_list = LocalStore.getObject('notification_messages');\n        const { loginid } = this.root_store.client;\n        const refined_list = notifications_list[loginid] ? Object.values(notifications_list[loginid]) : [];\n        const p2p_settings = LocalStore.getObject('p2p_settings');\n        const is_p2p_notifications_visible = p2p_settings[loginid]\n            ? p2p_settings[loginid].is_notifications_visible\n            : false;\n        if (refined_list.length) {\n            refined_list.map(refined => {\n                if (refined.includes('p2p')) {\n                    if (is_p2p_notifications_visible === false) {\n                        this.removeNotificationByKey({ key: refined });\n                    }\n                } else {\n                    this.removeNotificationByKey({ key: refined });\n                }\n            });\n        }\n    }\n\n    async handleClientNotifications() {\n        const {\n            account_settings,\n            account_status,\n            account_open_date,\n            accounts,\n            isAccountOfType,\n            is_eu,\n            is_identity_verification_needed,\n            is_logged_in,\n            is_tnc_needed,\n            landing_company_shortcode,\n            loginid,\n            obj_total_balance,\n            website_status,\n            has_enabled_two_fa,\n            has_changed_two_fa,\n            is_poi_dob_mismatch,\n            is_financial_assessment_needed,\n            is_financial_information_incomplete,\n            has_restricted_mt5_account,\n            has_mt5_account_with_rejected_poa,\n            is_pending_proof_of_ownership,\n            p2p_advertiser_info,\n            is_p2p_enabled,\n        } = this.root_store.client;\n        const { upgradable_daily_limits } = p2p_advertiser_info || {};\n        const { max_daily_buy, max_daily_sell } = upgradable_daily_limits || {};\n        const { is_10k_withdrawal_limit_reached } = this.root_store.modules.cashier.withdraw;\n        const { current_language, selected_contract_type } = this.root_store.common;\n        const malta_account = landing_company_shortcode === 'maltainvest';\n        const cr_account = landing_company_shortcode === 'svg';\n        const is_website_up = website_status.site_status === 'up';\n        const has_trustpilot = LocalStore.getObject('notification_messages')[loginid]?.includes(\n            this.client_notifications.trustpilot.key\n        );\n\n        let has_missing_required_field;\n\n        if (website_status?.message?.length) {\n            this.addNotificationMessage(this.client_notifications.site_maintenance);\n        } else {\n            this.removeNotificationByKey({ key: this.client_notifications.site_maintenance });\n        }\n\n        if (is_logged_in) {\n            if (isEmptyObject(account_status)) return;\n            const {\n                authentication: { document, identity, needs_verification, ownership },\n                status,\n                cashier_validation,\n            } = account_status;\n\n            const {\n                cashier_locked,\n                deposit_locked,\n                document_needs_action,\n                mt5_withdrawal_locked,\n                personal_details_locked,\n                poi_name_mismatch,\n                withdrawal_locked,\n            } = getStatusValidations(status || []);\n\n            this.handlePOAAddressMismatchNotifications();\n\n            if (status?.includes('mt5_additional_kyc_required'))\n                this.addNotificationMessage(this.client_notifications.additional_kyc_info);\n\n            if (!has_enabled_two_fa && obj_total_balance.amount_real > 0) {\n                this.addNotificationMessage(this.client_notifications.two_f_a);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.two_f_a.key });\n            }\n\n            if (malta_account && is_financial_information_incomplete) {\n                this.addNotificationMessage(this.client_notifications.need_fa);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.need_fa });\n            }\n\n            if (is_poi_dob_mismatch) {\n                this.addNotificationMessage(this.client_notifications.poi_dob_mismatch);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.poi_dob_mismatch });\n            }\n\n            if (loginid !== LocalStore.get('active_loginid')) return;\n\n            if (is_financial_assessment_needed) {\n                this.addNotificationMessage(this.client_notifications.notify_financial_assessment);\n            } else {\n                this.removeNotificationByKey({ key: this.client_notifications.notify_financial_assessment.key });\n            }\n\n            if (has_changed_two_fa) {\n                this.addNotificationMessage(this.client_notifications.has_changed_two_fa);\n            }\n\n            const client = accounts[loginid];\n            if (client && !client.is_virtual) {\n                if (isEmptyObject(account_status)) return;\n                if (loginid !== LocalStore.get('active_loginid')) return;\n\n                const {\n                    cashier_locked_status,\n                    documents_expired,\n                    FinancialAssessmentRequired,\n                    is_virtual,\n                    no_residence,\n                    no_withdrawal_or_trading_status,\n                    SelfExclusion,\n                    system_maintenance,\n                    unwelcome_status,\n                    withdrawal_locked_status,\n                    ASK_AUTHENTICATE,\n                    ASK_CURRENCY,\n                    ASK_FINANCIAL_RISK_APPROVAL,\n                    ASK_FIX_DETAILS,\n                    ASK_SELF_EXCLUSION_MAX_TURNOVER_SET,\n                    ASK_TIN_INFORMATION,\n                    ASK_UK_FUNDS_PROTECTION,\n                } = cashier_validation ? getCashierValidations(cashier_validation) : {};\n\n                const needs_poa =\n                    is_10k_withdrawal_limit_reached &&\n                    (needs_verification.includes('document') || document?.status !== 'verified');\n                const needs_poi = is_10k_withdrawal_limit_reached && identity?.status !== 'verified';\n                const onfido_submissions_left = identity?.services.onfido.submissions_left;\n                const poo_required = ownership?.requests?.length > 0 && ownership?.status?.toLowerCase() !== 'rejected';\n                const poo_rejected = is_pending_proof_of_ownership && ownership?.status?.toLowerCase() === 'rejected';\n                const svg_needs_poi_poa =\n                    cr_account &&\n                    status.includes('allow_document_upload') &&\n                    identity?.status === 'none' &&\n                    document?.status === 'none';\n                const svg_needs_poa =\n                    cr_account && status.includes('allow_document_upload') && document?.status === 'none';\n                const svg_needs_poi =\n                    cr_account && status.includes('allow_document_upload') && identity?.status === 'none';\n                const svg_poi_expired = cr_account && identity?.status === 'expired';\n\n                this.addVerificationNotifications(\n                    identity,\n                    document,\n                    has_restricted_mt5_account,\n                    has_mt5_account_with_rejected_poa\n                );\n\n                if (needs_poa) this.addNotificationMessage(this.client_notifications.needs_poa);\n                if (needs_poi) this.addNotificationMessage(this.client_notifications.needs_poi);\n\n                if (\n                    poi_name_mismatch &&\n                    identity?.services.onfido.last_rejected &&\n                    !personal_details_locked &&\n                    onfido_submissions_left > 0\n                ) {\n                    this.addNotificationMessage(this.client_notifications.poi_name_mismatch);\n                }\n\n                if (system_maintenance) {\n                    this.setClientNotifications(client);\n                    this.addNotificationMessage(\n                        this.client_notifications.system_maintenance(withdrawal_locked, deposit_locked)\n                    );\n                } else if (cashier_locked) {\n                    if (is_virtual) {\n                        this.addNotificationMessage(this.client_notifications.is_virtual);\n                    } else if (no_residence) {\n                        this.addNotificationMessage(this.client_notifications.no_residence);\n                    } else if (documents_expired) {\n                        this.addNotificationMessage(this.client_notifications.documents_expired);\n                    } else if (cashier_locked_status) {\n                        this.addNotificationMessage(this.client_notifications.cashier_locked);\n                    } else if (ASK_CURRENCY) {\n                        this.addNotificationMessage(this.client_notifications.currency);\n                    } else if (ASK_AUTHENTICATE && is_identity_verification_needed) {\n                        this.addNotificationMessage(this.client_notifications.identity);\n                    } else if (ASK_AUTHENTICATE) {\n                        this.addNotificationMessage(this.client_notifications.authenticate);\n                    } else if (isAccountOfType('financial') && ASK_FINANCIAL_RISK_APPROVAL) {\n                        this.addNotificationMessage(this.client_notifications.ask_financial_risk_approval);\n                    } else if (FinancialAssessmentRequired) {\n                        this.addNotificationMessage(this.client_notifications.risk);\n                    } else if (isAccountOfType('financial') && ASK_TIN_INFORMATION) {\n                        this.addNotificationMessage(this.client_notifications.tax);\n                    } else if (ASK_UK_FUNDS_PROTECTION) {\n                        this.addNotificationMessage(this.client_notifications.ask_uk_funds_protection);\n                    } else if (ASK_SELF_EXCLUSION_MAX_TURNOVER_SET) {\n                        this.addNotificationMessage(this.client_notifications.max_turnover_limit_not_set);\n                    } else if (ASK_FIX_DETAILS) {\n                        this.addNotificationMessage(\n                            this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                        );\n                    } else {\n                        this.addNotificationMessage(this.client_notifications.cashier_locked);\n                    }\n                } else {\n                    if (withdrawal_locked) {\n                        if (ASK_AUTHENTICATE) {\n                            this.addNotificationMessage(this.client_notifications.withdrawal_locked_review);\n                        } else if (no_withdrawal_or_trading_status) {\n                            this.addNotificationMessage(this.client_notifications.no_withdrawal_or_trading);\n                        } else if (withdrawal_locked_status) {\n                            this.addNotificationMessage(this.client_notifications.withdrawal_locked);\n                        } else if (ASK_FIX_DETAILS) {\n                            this.addNotificationMessage(\n                                this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                            );\n                        }\n                    }\n                    if (deposit_locked) {\n                        if (SelfExclusion) {\n                            this.addNotificationMessage(\n                                this.client_notifications.self_exclusion(client.excluded_until)\n                            );\n                        } else if (unwelcome_status) {\n                            this.addNotificationMessage(this.client_notifications.unwelcome);\n                        }\n                    }\n                }\n\n                if (mt5_withdrawal_locked) this.addNotificationMessage(this.client_notifications.mt5_withdrawal_locked);\n                if (document_needs_action) this.addNotificationMessage(this.client_notifications.document_needs_action);\n                if (is_p2p_enabled) {\n                    this.addNotificationMessage(this.client_notifications.dp2p);\n\n                    this.p2p_completed_orders?.map(order => {\n                        const {\n                            advertiser_details,\n                            client_details,\n                            id,\n                            is_reviewable,\n                            status: order_status,\n                            type,\n                        } = order;\n\n                        if (is_reviewable) {\n                            if (type === 'buy' && order_status === 'completed' && client_details.loginid === loginid)\n                                this.showCompletedOrderNotification(advertiser_details.name, id);\n\n                            if (\n                                type === 'sell' &&\n                                order_status === 'completed' &&\n                                advertiser_details.loginid === loginid\n                            )\n                                this.showCompletedOrderNotification(client_details.name, id);\n                        }\n                    });\n\n                    if (upgradable_daily_limits)\n                        this.addNotificationMessage(\n                            this.client_notifications.p2p_daily_limit_increase(\n                                client.currency,\n                                max_daily_buy,\n                                max_daily_sell\n                            )\n                        );\n                } else {\n                    this.removeNotificationMessageByKey({ key: this.client_notifications.dp2p.key });\n                }\n                if (is_website_up && !has_trustpilot && daysSince(account_open_date) > 7) {\n                    this.addNotificationMessage(this.client_notifications.trustpilot);\n                }\n                if (is_tnc_needed) {\n                    this.addNotificationMessage(this.client_notifications.tnc);\n                }\n\n                has_missing_required_field = hasMissingRequiredField(account_settings, client, isAccountOfType);\n                if (has_missing_required_field) {\n                    this.addNotificationMessage(\n                        this.client_notifications.required_fields(withdrawal_locked, deposit_locked)\n                    );\n                }\n                if (poo_required) {\n                    this.addNotificationMessage(this.client_notifications.poo_required);\n                }\n                if (poo_rejected) {\n                    this.addNotificationMessage(this.client_notifications.poo_rejected);\n                }\n                //add notification message for SVG clients\n                if (svg_needs_poi_poa) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poi_poa);\n                } else if (svg_needs_poa) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poa);\n                } else if (svg_needs_poi) {\n                    this.addNotificationMessage(this.client_notifications.svg_needs_poi);\n                } else if (svg_poi_expired) {\n                    this.addNotificationMessage(this.client_notifications.svg_poi_expired);\n                }\n            }\n            if (client && this.root_store.client.mt5_login_list.length > 0) {\n                this.addNotificationMessage(this.client_notifications.mt5_notification);\n            }\n        }\n\n        if (!is_eu && isMultiplierContract(selected_contract_type) && current_language === 'EN' && is_logged_in) {\n            this.addNotificationMessage(this.client_notifications.deriv_go);\n        } else {\n            this.removeNotificationMessageByKey({ key: this.client_notifications.deriv_go.key });\n        }\n    }\n\n    showCompletedOrderNotification(advertiser_name, order_id) {\n        const notification_key = `p2p_order_${order_id}`;\n        const { setP2POrderTab, navigateToOrderDetails } = this.p2p_order_props;\n        const is_p2p_route = window.location.pathname.includes(routes.cashier_p2p);\n\n        const notification_redirect_action = is_p2p_route\n            ? {\n                  onClick: () => {\n                      setP2POrderTab(order_id);\n                      navigateToOrderDetails(order_id);\n                      this.setP2POrderProps({ ...this.p2p_order_props, order_id });\n\n                      if (this.is_notifications_visible) this.toggleNotificationsModal();\n                      this.refreshNotifications();\n                  },\n                  text: localize('Give feedback'),\n              }\n            : {\n                  route: `${routes.p2p_orders}?order=${order_id}`,\n                  text: localize('Give feedback'),\n              };\n\n        this.addNotificationMessage({\n            action: notification_redirect_action,\n            header: <Localize i18n_default_text='Your order {{order_id}} is complete' values={{ order_id }} />,\n            key: notification_key,\n            message: (\n                <Localize\n                    i18n_default_text='{{name}} has released your funds. <br/> Would you like to give your feedback?'\n                    values={{ name: advertiser_name }}\n                />\n            ),\n            platform: 'P2P',\n            type: 'p2p_completed_order',\n        });\n    }\n\n    markNotificationMessage({ key }) {\n        if (!this.marked_notifications.includes(key)) {\n            this.marked_notifications.push(key);\n            LocalStore.set('marked_notifications', JSON.stringify(this.marked_notifications));\n        }\n    }\n\n    refreshNotifications() {\n        this.removeNotifications(true);\n        this.removeAllNotificationMessages();\n        this.setClientNotifications();\n        this.handleClientNotifications();\n    }\n\n    removeAllNotificationMessages(should_close_persistent = false) {\n        this.notification_messages = should_close_persistent\n            ? []\n            : [...this.notification_messages.filter(notifs => notifs.is_persistent)];\n    }\n\n    removeNotifications(should_close_persistent) {\n        this.notifications = should_close_persistent\n            ? []\n            : [...this.notifications.filter(notifs => notifs.is_persistent)];\n    }\n\n    removeNotificationByKey({ key }) {\n        this.notifications = this.notifications.filter(n => n.key !== key);\n    }\n\n    removeNotificationMessage({ key, should_show_again } = {}) {\n        if (!key) return;\n        this.notification_messages = this.notification_messages.filter(n => n.key !== key);\n        // Add notification messages to LocalStore when user closes, check for redundancy\n        const active_loginid = LocalStore.get('active_loginid');\n        if (!excluded_notifications.includes(key) && active_loginid) {\n            let messages = LocalStore.getObject('notification_messages');\n            // Check if same message already exists in LocalStore for this account\n            if (messages[active_loginid] && messages[active_loginid].includes(key)) {\n                return;\n            }\n            const getCurrentMessage = () => {\n                if (Array.isArray(messages[active_loginid])) {\n                    messages[active_loginid].push(key);\n                    return messages[active_loginid];\n                }\n                return [key];\n            };\n            if (!should_show_again) {\n                // Store message into LocalStore upon closing message\n                messages = { ...messages, [active_loginid]: getCurrentMessage() };\n                LocalStore.setObject('notification_messages', messages);\n            }\n        }\n    }\n\n    removeNotificationMessageByKey({ key }) {\n        this.notification_messages = this.notification_messages.filter(n => n.key !== key);\n    }\n\n    resetVirtualBalanceNotification(loginid) {\n        const { accounts, is_logged_in } = this.root_store.client;\n        if (!is_logged_in) return;\n        if (!accounts[loginid]?.is_virtual) return;\n        const min_reset_limit = 1000;\n        const max_reset_limit = 999000;\n        const balance = parseInt(accounts[loginid]?.balance);\n\n        // Display notification message to user with virtual account to reset their balance\n        // if the balance is less than equals to 1000 or more than equals to 999000\n        if (balance <= min_reset_limit || balance >= max_reset_limit) {\n            let message = localize(\n                'Your demo account balance is low. Reset your balance to continue trading from your demo account.'\n            );\n            if (balance >= max_reset_limit)\n                message = localize(\n                    'Your demo account balance has reached the maximum limit, and you will not be able to place new trades. Reset your balance to continue trading from your demo account.'\n                );\n            this.setClientNotifications({ resetVirtualBalance: this.root_store.client.resetVirtualBalance, message });\n            this.addNotificationMessage(this.client_notifications.reset_virtual_balance);\n        } else {\n            this.removeNotificationByKey({ key: 'reset_virtual_balance' });\n            this.removeNotificationMessage({ key: 'reset_virtual_balance', should_show_again: true });\n        }\n    }\n\n    setClientNotifications(client_data = {}) {\n        const { ui } = this.root_store;\n        const { has_enabled_two_fa, setTwoFAChangedStatus, logout } = this.root_store.client;\n        const { setMT5NotificationModal } = this.root_store.traders_hub;\n        const two_fa_status = has_enabled_two_fa ? localize('enabled') : localize('disabled');\n\n        const platform_name_trader = getPlatformSettings('trader').name;\n        const platform_name_go = getPlatformSettings('go').name;\n\n        const notifications = {\n            ask_financial_risk_approval: {\n                key: 'ask_financial_risk_approval',\n                header: localize('Complete your Appropriateness Test'),\n                message: localize('Please click the following link to complete your Appropriateness Test.'),\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Click here'),\n                },\n                type: 'warning',\n            },\n            ask_uk_funds_protection: {\n                key: 'ask_uk_funds_protection',\n                header: localize('Your cashier is locked'),\n                message: localize('See how we protect your funds to unlock the cashier.'),\n                action: {\n                    route: routes.cashier_deposit,\n                    text: localize('Find out more'),\n                },\n                type: 'warning',\n            },\n            authenticate: {\n                key: 'authenticate',\n                header: localize('Your account has not been verified'),\n                message: localize(\n                    'Please submit your proof of identity and proof of address to verify your account in your account settings to access the cashier.'\n                ),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            cashier_locked: {\n                key: 'cashier_locked',\n                header: localize('Your cashier is currently locked'),\n                message: localize('Please contact us via live chat to unlock it.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            trustpilot: {\n                key: 'trustpilot',\n                header: localize('Enjoy using Deriv?'),\n                header_popup: localize('We’d love to hear your thoughts'),\n                message: localize('Drop your review on Trustpilot.'),\n                message_popup: localize('Drop your review on Trustpilot.'),\n                action: {\n                    onClick: () => {\n                        window.open('https://www.trustpilot.com/evaluate/deriv.com', '_blank');\n                        this.removeNotificationByKey({ key: this.client_notifications.trustpilot.key });\n                        this.removeNotificationMessage({\n                            key: this.client_notifications.trustpilot.key,\n                            should_show_again: false,\n                        });\n                    },\n                    text: localize('Go to Trustpilot'),\n                },\n                img_src: getUrlBase('/public/images/common/trustpilot_banner.png'),\n                img_alt: 'Trustpilot',\n                className: 'trustpilot',\n                type: 'trustpilot',\n            },\n            currency: {\n                key: 'currency',\n                header: localize('You have not selected your account currency'),\n                message: localize('Please set your account currency to enable deposits and withdrawals.'),\n                action: {\n                    onClick: () => {\n                        ui.openRealAccountSignup('set_currency');\n                    },\n                    text: localize('Set my account currency'),\n                },\n                type: 'danger',\n            },\n            p2p_daily_limit_increase: (currency, max_daily_buy, max_daily_sell) => {\n                return {\n                    action: window.location.pathname.includes(routes.cashier_p2p)\n                        ? {\n                              onClick: () => {\n                                  this.p2p_redirect_to.routeToMyProfile();\n                                  if (this.is_notifications_visible) this.toggleNotificationsModal();\n\n                                  this.removeNotificationMessage({\n                                      key: 'p2p_daily_limit_increase',\n                                      should_show_again: false,\n                                  });\n                              },\n                              text: localize('Yes, increase my limits'),\n                          }\n                        : {\n                              route: routes.p2p_my_profile,\n                              text: localize('Yes, increase my limits'),\n                          },\n                    header: <Localize i18n_default_text='Enjoy higher daily limits' />,\n                    key: 'p2p_daily_limit_increase',\n                    message: (\n                        <Localize\n                            i18n_default_text='Would you like to increase your daily limits to {{max_daily_buy}} {{currency}} (buy) and {{max_daily_sell}} {{currency}} (sell)?'\n                            values={{\n                                currency,\n                                max_daily_buy: formatMoney(client_data.currency, max_daily_buy, true),\n                                max_daily_sell: formatMoney(client_data.currency, max_daily_sell, true),\n                            }}\n                        />\n                    ),\n                    platform: 'P2P',\n                    type: 'announce',\n                };\n            },\n            deriv_go: {\n                key: 'deriv_go',\n                header: <Localize i18n_default_text='Trade on the go' />,\n                message: (\n                    <Localize\n                        i18n_default_text='Get a faster mobile trading experience with the <0>{{platform_name_go}}</0> app!'\n                        components={[<StaticUrl key={0} className='link dark' href='/landing/deriv-go' />]}\n                        values={{ platform_name_go }}\n                    />\n                ),\n                cta_btn: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        window.open(getStaticUrl('/landing/deriv-go'), '_blank');\n                    },\n                },\n                img_src: getUrlBase('/public/images/common/derivgo_banner.png'),\n                img_alt: 'deriv_go',\n                type: 'promotions',\n            },\n            documents_expired: {\n                key: 'poi_expired',\n                header: localize('You submitted expired identification documents'),\n                message: localize('Please submit valid identity documents to unlock the cashier.'),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Submit identity documents'),\n                },\n                type: 'danger',\n            },\n            document_needs_action: {\n                key: 'document_needs_action',\n                header: localize('Authentication failed'),\n                message: (\n                    <Localize\n                        i18n_default_text='<0>Your Proof of Identity or Proof of Address</0> did not meet our requirements. Please check your email for further instructions.'\n                        components={[<BinaryLink key={0} className='link' to={routes.proof_of_identity} />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            dp2p: {\n                key: 'dp2p',\n                header: localize('Payment problems?'),\n                message: localize('There’s an app for that'),\n                primary_btn: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        window.open(getStaticUrl('/p2p'), '_blank');\n                    },\n                },\n                img_src: getUrlBase('/public/images/common/dp2p_banner.png'),\n                img_alt: 'Deriv P2P',\n                type: 'news',\n            },\n            identity: {\n                key: 'identity',\n                header: localize('Let’s verify your ID'),\n                message: localize(\n                    'You need to make a quick identity verification before you can access the Cashier. Please go to your account settings to submit your proof of identity.'\n                ),\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            install_pwa: {\n                key: 'install_pwa',\n                action: {\n                    onClick: () => ui.installWithDeferredPrompt(),\n                    text: localize('Install'),\n                },\n                header: localize('Install the {{platform_name_trader}} web app', { platform_name_trader }),\n                message: localize('Launch {{platform_name_trader}} in seconds the next time you want to trade.', {\n                    platform_name_trader,\n                }),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            is_virtual: {\n                key: 'is_virtual',\n                header: localize('You are on your demo account'),\n                message: localize('Please switch to your real account or create one to access the cashier.'),\n                type: 'warning',\n            },\n            max_turnover_limit_not_set: {\n                key: 'max_turnover_limit_not_set',\n                header: localize('You’ve not set your 30-day turnover limit'),\n                message: localize(\n                    'Your access to the cashier has been temporarily disabled as you have not set your 30-day turnover limit. Please go to Self-exclusion and set the limit.'\n                ),\n                action: {\n                    route: routes.self_exclusion,\n                    text: localize('Go to Self-exclusion'),\n                },\n                type: 'danger',\n            },\n            mt5_withdrawal_locked: {\n                key: 'mt5_withdrawal_locked',\n                header: localize('MT5 withdrawal disabled'),\n                message: localize(\n                    'MT5 withdrawals have been disabled on your account. Please check your email for more details.'\n                ),\n                type: 'warning',\n            },\n            needs_poa: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Verify address'),\n                },\n                key: 'needs_poa',\n                header: localize('Please verify your proof of address'),\n                message: localize('To continue trading with us, please confirm where you live.'),\n                type: 'danger',\n            },\n            needs_poi: {\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Verify identity'),\n                },\n                key: 'needs_poi',\n                header: localize('Please verify your proof of identity'),\n                message: localize('To continue trading with us, please confirm who you are.'),\n                type: 'danger',\n            },\n\n            new_version_available: {\n                action: {\n                    onClick: () => window.location.reload(),\n                    text: localize('Refresh now'),\n                },\n                key: 'new_version_available',\n                header: localize('A new version of Deriv is available'),\n                message: localize('This page will automatically refresh in 5 minutes to load the latest version.'),\n                type: 'warning',\n                should_hide_close_btn: true,\n                timeout: 300000,\n                timeoutMessage: remaining => localize('Auto update in {{ remaining }} seconds', { remaining }),\n            },\n            no_residence: {\n                key: 'no_residence',\n                header: localize('You have not selected your country of residence'),\n                message: localize(\n                    'Please set your country of residence in your account settings to access the cashier.'\n                ),\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            no_withdrawal_or_trading: {\n                key: 'no_withdrawal_or_trading',\n                header: localize('You are only allowed to make deposits'),\n                message: localize('Please contact us via live chat to enable withdrawals.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            notify_financial_assessment: {\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Start now'),\n                },\n                header: localize('Pending action required'),\n                key: 'notify_financial_assessment',\n                message: localize('Please complete your financial assessment.'),\n                should_show_again: true,\n                type: 'warning',\n            },\n            password_changed: {\n                key: 'password_changed',\n                header: localize('Password updated.'),\n                message: <Localize i18n_default_text='Please log in with your updated password.' />,\n                type: 'info',\n            },\n            poa_rejected_for_mt5: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'poa_rejected_for_mt5',\n                header: localize('Please resubmit your proof of address or we may restrict your account.'),\n                message: localize('Please submit your proof of address.'),\n                type: 'danger',\n            },\n            poa_failed: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'poa_failed',\n                header: localize('Please resubmit your proof of address.'),\n                type: 'danger',\n            },\n            poa_verified: {\n                key: 'poa_verified',\n                header: localize('Your proof of address is verified.'),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            poi_failed: {\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Resubmit proof of identity'),\n                },\n                key: 'poi_failed',\n                header: localize('Your proof of identity verification has failed'),\n                message: localize('Please submit your proof of identity.'),\n                type: 'danger',\n            },\n            poi_verified: {\n                key: 'poi_verified',\n                header: localize('Your proof of identity is verified.'),\n                type: 'announce',\n                should_hide_close_btn: false,\n            },\n            poi_name_mismatch: {\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Personal details'),\n                },\n                key: 'poi_name_mismatch',\n                header: localize('Please update your personal info'),\n                message: (\n                    <Localize\n                        i18n_default_text='It seems that your name in the document is not the same as your Deriv profile. Please update your name in the <0>Personal details</0> page to solve this issue.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            resticted_mt5_with_pending_poa: {\n                key: 'resticted_mt5_with_pending_poa',\n                header: localize('Your proof of address verification is pending'),\n                message: localize(\n                    'Your address verification is pending, and we’ve placed some restrictions on your account. The restrictions will be lifted once your address is verified.'\n                ),\n                type: 'danger',\n            },\n            resticted_mt5_with_failed_poa: {\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Resubmit proof of address'),\n                },\n                key: 'resticted_mt5_with_failed_poa',\n                header: localize('Your proof of address verification has failed'),\n                message: localize(\n                    'Your proof of address did not pass our verification checks, and we’ve placed some restrictions on your account. Please resubmit your proof of address.'\n                ),\n                type: 'danger',\n            },\n            required_fields: (withdrawal_locked, deposit_locked) => {\n                let message;\n                if (withdrawal_locked) {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable withdrawals.'\n                    );\n                } else if (deposit_locked) {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable deposits.'\n                    );\n                } else {\n                    message = localize(\n                        'Please go to your account settings and complete your personal details to enable deposits and withdrawals.'\n                    );\n                }\n                return {\n                    key: 'required_fields',\n                    header: localize('Your personal details are incomplete'),\n                    message,\n                    type: 'danger',\n                    action: {\n                        route: routes.personal_details,\n                        text: localize('Go to my account settings'),\n                    },\n                };\n            },\n            reset_virtual_balance: {\n                key: 'reset_virtual_balance',\n                header: localize('Reset your balance'),\n                message: client_data.message,\n                type: 'info',\n                is_persistent: true,\n                should_show_again: true,\n                platform: [platform_name.DTrader],\n                is_disposable: true,\n                action: {\n                    text: localize('Reset balance'),\n                    onClick: async () => {\n                        await client_data.resetVirtualBalance();\n                    },\n                },\n            },\n            risk: {\n                key: 'risk',\n                header: localize('Your cashier is locked'),\n                message: localize('Please complete the financial assessment in your account settings to unlock it.'),\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'warning',\n            },\n            self_exclusion: excluded_until => {\n                return {\n                    key: 'self_exclusion',\n                    header: localize('You have self-excluded from trading'),\n                    message: (\n                        <Localize\n                            i18n_default_text='You have chosen to exclude yourself from trading on our website until {{exclusion_end}}. If you are unable to place a trade or deposit after your self-exclusion period, please contact us via live chat.'\n                            values={{\n                                exclusion_end: formatDate(excluded_until, 'DD MMM, YYYY'),\n                                interpolation: { escapeValue: false },\n                            }}\n                        />\n                    ),\n                    action: {\n                        onClick: () => {\n                            window.LC_API.open_chat_window();\n                        },\n                        text: localize('Go to live chat'),\n                    },\n                    type: 'danger',\n                };\n            },\n            site_maintenance: {\n                key: 'site_maintenance',\n                header: localize('We’re updating our site'),\n                message: localize('Some services may be temporarily unavailable.'),\n                type: 'warning',\n                should_show_again: true,\n                closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n            },\n            system_maintenance: (withdrawal_locked, deposit_locked) => {\n                let message, header;\n                if (isCryptocurrency(client_data.currency)) {\n                    if (withdrawal_locked) {\n                        header = localize('Unable to process withdrawals in the moment');\n                        message = localize(\n                            'Withdrawals are temporarily unavailable due to system maintenance. You can make withdrawals when the maintenance is complete.'\n                        );\n                    } else if (deposit_locked) {\n                        header = localize('Unable to process deposit in the moment');\n                        message = localize(\n                            'Deposits are temporarily unavailable due to system maintenance. You can make deposits when the maintenance is complete.'\n                        );\n                    } else {\n                        header = localize('Scheduled cashier system maintenance');\n                        message = localize(\n                            'Our cryptocurrency cashier is temporarily down due to system maintenance. You can make cryptocurrency deposits and withdrawals in a few minutes when the maintenance is complete.'\n                        );\n                    }\n                } else {\n                    header = localize('Scheduled cashier maintenance');\n                    message = localize(\n                        'The cashier is temporarily down due to maintenance. It will be available as soon as the maintenance is complete.'\n                    );\n                }\n                return {\n                    key: 'system_maintenance',\n                    header,\n                    message,\n                    type: 'warning',\n                    should_show_again: true,\n                    closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n                };\n            },\n            tax: {\n                key: 'tax',\n                header: localize('You have not provided your tax identification number'),\n                message: localize(\n                    'This information is necessary for legal and regulatory requirements. Please go to your account settings, and fill in your latest tax identification number.'\n                ),\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Go to my account settings'),\n                },\n                type: 'danger',\n            },\n            tnc: {\n                action: {\n                    onClick: async () => {\n                        await WS.tncApproval();\n                        WS.getSettings();\n                    },\n                    text: localize('I accept'),\n                },\n                key: 'tnc',\n                header: localize('Terms & conditions updated'),\n                message: (\n                    <Localize\n                        i18n_default_text='Please accept our <0>updated Terms and Conditions</0> to proceed.'\n                        components={[<StaticUrl key={0} className='link' href='terms-and-conditions' />]}\n                    />\n                ),\n                type: 'warning',\n            },\n            has_changed_two_fa: {\n                key: 'has_changed_two_fa',\n                header: localize('Logging out on other devices'),\n                message: (\n                    <Localize\n                        i18n_default_text=\"You've {{two_fa_status}} 2FA on this device. You'll be logged out of your account on other devices (if any). Use your password and a 2FA code to log back in.\"\n                        values={{ two_fa_status }}\n                    />\n                ),\n                type: 'info',\n                delay: 4000,\n                is_auto_close: true,\n                closeOnClick: () => {\n                    setTwoFAChangedStatus(false);\n                },\n            },\n            two_f_a: {\n                key: 'two_f_a',\n                header: localize('Stronger security for your Deriv account'),\n                message: localize(\n                    'With two-factor authentication, you’ll protect your account with both your password and your phone - so only you can access your account, even if someone knows your password.'\n                ),\n                action: {\n                    route: routes.two_factor_authentication,\n                    text: localize('Secure my account'),\n                },\n                type: 'warning',\n            },\n            unwelcome: {\n                key: 'unwelcome',\n                header: localize('Deposits are locked'),\n                message: localize('Please contact us via live chat.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'danger',\n            },\n            withdrawal_locked: {\n                key: 'withdrawal_locked',\n                header: localize('You are only allowed to make deposits'),\n                message: localize('Please contact us via live chat to enable withdrawals.'),\n                action: {\n                    onClick: () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to live chat'),\n                },\n                type: 'warning',\n            },\n            withdrawal_locked_review: {\n                key: 'withdrawal_locked_review',\n                header: localize('You are unable to make withdrawals'),\n                message: (\n                    <Localize\n                        i18n_default_text='To enable withdrawals, please submit your <0>Proof of Identity (POI)</0> and <1>Proof of Address (POA)</1> and also complete the <2>financial assessment</2> in your account settings.'\n                        components={[\n                            <a key={0} className='link dark' href={'/account/proof-of-identity'} />,\n                            <a key={1} className='link dark' href={'/account/proof-of-address'} />,\n                            <a key={2} className='link dark' href={'/account/financial-assessment'} />,\n                        ]}\n                    />\n                ),\n                type: 'warning',\n            },\n            you_are_offline: {\n                key: 'you_are_offline',\n                header: localize('You are offline'),\n                message: <Localize i18n_default_text='Check your connection.' />,\n                type: 'danger',\n            },\n            poi_dob_mismatch: {\n                key: 'poi_dob_mismatch',\n                header: localize('Please update your personal info'),\n                message: (\n                    <Localize\n                        i18n_default_text='It seems that your date of birth in the document is not the same as your Deriv profile. Please update your date of birth in the <0>Personal details</0> page to solve this issue.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.personal_details,\n                    text: localize('Personal details'),\n                },\n            },\n            poo_required: {\n                key: 'poo_required',\n                header: (\n                    <Localize\n                        i18n_default_text='<0>Proof of ownership</0> <1>required</1>'\n                        components={[<div key={0} />, <div key={1} />]}\n                    />\n                ),\n                message: (\n                    <Localize\n                        i18n_default_text='<0></0><1>Your account is currently locked</1> <2></2><3>Please upload your proof of</3> <4>ownership to unlock your account.</4> <5></5>'\n                        components={[\n                            <br key={0} />,\n                            <div key={1} />,\n                            <br key={2} />,\n                            <div key={3} />,\n                            <div key={4} />,\n                            <br key={5} />,\n                        ]}\n                    />\n                ),\n                action: {\n                    route: routes.proof_of_ownership,\n                    text: localize('Upload my document'),\n                },\n                type: 'warning',\n            },\n            poo_rejected: {\n                key: 'poo_rejected',\n                header: (\n                    <Localize\n                        i18n_default_text='<0>Proof of ownership</0> <1>verification failed</1>'\n                        components={[<div key={0} />, <div key={1} />]}\n                    />\n                ),\n                message: (\n                    <Localize\n                        i18n_default_text='<0></0><1>Please upload your document</1> <2>with the correct details.</2> <3></3>'\n                        components={[<br key={0} />, <div key={1} />, <div key={2} />, <br key={3} />]}\n                    />\n                ),\n                action: {\n                    route: routes.proof_of_ownership,\n                    text: localize('Upload again'),\n                },\n                type: 'warning',\n            },\n            need_fa: {\n                key: 'need_fa',\n                header: localize('You can only make deposits.'),\n                message: (\n                    <Localize i18n_default_text='You can only make deposits at the moment. To enable withdrawals, please complete your financial assessment.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.financial_assessment,\n                    text: localize('Start assessment'),\n                },\n                should_show_again: true,\n                closeOnClick: notification_obj => this.markNotificationMessage({ key: notification_obj.key }),\n            },\n            svg_needs_poi_poa: {\n                key: 'svg_needs_poi_poa',\n                header: localize('Account verification required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of identity and proof of address to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Go to my account settings'),\n                },\n            },\n            svg_needs_poa: {\n                key: 'svg_needs_poa',\n                header: localize('Proof of address required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of address to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_address,\n                    text: localize('Submit proof of address'),\n                },\n            },\n            svg_needs_poi: {\n                key: 'svg_needs_poi',\n                header: localize('Proof of identity required'),\n                message: (\n                    <Localize i18n_default_text='Please submit your proof of identity to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Submit proof of identity'),\n                },\n            },\n            svg_poi_expired: {\n                key: 'svg_poi_expired',\n                header: localize('Your proof of identity is expired'),\n                message: (\n                    <Localize i18n_default_text='Your proof of identity has expired. Please submit a new proof of identity to verify your account and continue trading.' />\n                ),\n                type: 'warning',\n                action: {\n                    route: routes.proof_of_identity,\n                    text: localize('Resubmit proof of identity'),\n                },\n            },\n            wallets_migrated: {\n                key: 'wallets_migrated',\n                header: localize('Your Wallets are ready'),\n                message: localize(\n                    'To complete the upgrade, please log out and log in again to add more accounts and make transactions with your Wallets.'\n                ),\n                action: {\n                    onClick: async () => {\n                        await logout();\n                    },\n                    text: localize('Log out'),\n                },\n                type: 'announce',\n            },\n            wallets_failed: {\n                key: 'wallets_failed',\n                header: localize('Sorry for the interruption'),\n                message: localize(\n                    \"We're unable to complete with the Wallet upgrade. Please try again later or contact us via live chat.\"\n                ),\n                action: {\n                    onClick: async () => {\n                        window.LC_API.open_chat_window();\n                    },\n                    text: localize('Go to LiveChat'),\n                },\n                type: 'danger',\n            },\n            mt5_notification: {\n                key: 'mt5_notification',\n                header: localize('Deriv MT5: Your action is needed'),\n                message: localize('Follow these simple instructions to fix it.'),\n                action: {\n                    text: localize('Learn more'),\n                    onClick: () => {\n                        setMT5NotificationModal(true);\n                    },\n                },\n                type: 'warning',\n            },\n            additional_kyc_info: {\n                key: 'additional_kyc_info',\n                header: <Localize i18n_default_text='Pending action required' />,\n                message: (\n                    <Localize i18n_default_text='We require additional information for your Deriv MT5 account(s). Please take a moment to update your information now.' />\n                ),\n                action: {\n                    text: localize('Update now'),\n                    onClick: () => {\n                        if (this.is_notifications_visible) this.toggleNotificationsModal();\n                        ui.toggleAdditionalKycInfoModal();\n                        this.markNotificationMessage({ key: 'additional_kyc_info' });\n                    },\n                },\n                type: 'warning',\n            },\n        };\n\n        this.client_notifications = notifications;\n    }\n\n    setP2POrderProps(p2p_order_props) {\n        this.p2p_order_props = p2p_order_props;\n    }\n\n    setP2PRedirectTo(p2p_redirect_to) {\n        this.p2p_redirect_to = p2p_redirect_to;\n    }\n\n    setShouldShowPopups(should_show_popups) {\n        this.should_show_popups = should_show_popups;\n    }\n\n    toggleNotificationsModal() {\n        this.is_notifications_visible = !this.is_notifications_visible;\n    }\n\n    unmarkNotificationMessage({ key }) {\n        this.marked_notifications = this.marked_notifications.filter(item => key !== item);\n    }\n\n    updateNotifications() {\n        this.notifications = this.notification_messages.filter(message =>\n            ['svg', 'p2p'].some(key => message.key?.includes(key))\n                ? message\n                : excluded_notifications && !excluded_notifications.includes(message.key)\n        );\n    }\n\n    handlePOAAddressMismatchNotifications = () => {\n        const { client } = this.root_store;\n        const { account_status } = client;\n        const { status } = account_status;\n        const { poa_address_mismatch } = getStatusValidations(status || []);\n\n        if (poa_address_mismatch) {\n            this.showPOAAddressMismatchWarningNotification();\n        }\n    };\n\n    showPOAAddressMismatchWarningNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_warning',\n            header: localize('Please update your address'),\n            message: localize(\n                'It appears that the address in your document doesn’t match the address in your Deriv profile. Please update your personal details now with the correct address.'\n            ),\n            action: {\n                route: routes.personal_details,\n                text: localize('Go to Personal details'),\n            },\n            type: 'warning',\n            should_show_again: true,\n        });\n    };\n\n    showPOAAddressMismatchSuccessNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_success',\n            header: localize('Your proof of address has been verified'),\n            type: 'announce',\n            should_show_again: true,\n            platform: 'Account',\n        });\n    };\n\n    showPOAAddressMismatchFailureNotification = () => {\n        this.addNotificationMessage({\n            key: 'poa_address_mismatch_failure',\n            header: localize('Your address doesn’t match your profile'),\n            message: localize('Update the address in your profile.'),\n            type: 'danger',\n            should_show_again: true,\n            platform: 'Account',\n        });\n    };\n\n    async getP2pCompletedOrders() {\n        await WS.wait('authorize');\n        const response = await WS.send?.({ p2p_order_list: 1, active: 0 });\n\n        if (!response?.error) {\n            this.p2p_completed_orders = response?.p2p_order_list?.list || [];\n        }\n    }\n}\n","import { action, autorun, computed, makeObservable, observable } from 'mobx';\n\nimport { isMobile, isTouchDevice, LocalStore, routes } from '@deriv/shared';\n\nimport { MAX_MOBILE_WIDTH, MAX_TABLET_WIDTH } from 'Constants/ui';\n\nimport BaseStore from './base-store';\n\nconst store_name = 'ui_store';\n\nexport default class UIStore extends BaseStore {\n    url_hashed_values = '';\n    is_account_settings_visible = false;\n    is_positions_drawer_on = false;\n    is_reports_visible = false;\n    reports_route_tab_index = 0;\n    is_cashier_visible = false;\n    is_history_tab_active = false;\n    // TODO: [cleanup ui-store]\n    // Take profit, Stop loss & Deal cancellation checkbox\n    should_show_cancellation_warning = true;\n\n    // Extensions\n    footer_extensions = [];\n    header_extension = undefined;\n    settings_extension = undefined;\n    notification_messages_ui = undefined;\n\n    is_dark_mode_on = window?.matchMedia?.('(prefers-color-scheme: dark)').matches && isMobile();\n    is_settings_modal_on = false;\n    is_language_settings_modal_on = false;\n    is_mobile_language_menu_open = false;\n    is_accounts_switcher_on = false;\n    account_switcher_disabled_message = '';\n\n    has_only_forward_starting_contracts = false;\n    has_read_scam_message = localStorage.getItem('readScamMessage') || false;\n\n    // Purchase Controls\n    // @observable is_purchase_confirm_on    = false;\n    is_services_error_visible = false;\n    is_unsupported_contract_modal_visible = false;\n    is_new_account = localStorage.getItem('isNewAccount') || false;\n    is_account_signup_modal_visible = false;\n    is_link_expired_modal_visible = false;\n    is_set_residence_modal_visible = false;\n    is_reset_password_modal_visible = false;\n    is_reset_email_modal_visible = false;\n    is_update_email_modal_visible = false;\n    is_reset_trading_password_modal_visible = false;\n    // @observable is_purchase_lock_on       = false;\n\n    // SmartCharts Controls\n    // TODO: enable asset information\n    // @observable is_chart_asset_info_visible = true;\n    is_chart_countdown_visible = false;\n    is_chart_layout_default = true;\n\n    // PWA event and config\n    pwa_prompt_event = null;\n\n    screen_width = window.innerWidth;\n    screen_height = window.innerHeight;\n    is_onscreen_keyboard_active = false;\n\n    is_advanced_duration = false;\n    advanced_duration_unit = 't';\n    advanced_expiry_type = 'duration';\n    simple_duration_unit = 't';\n    duration_t = 5;\n    duration_s = 15;\n    duration_m = 3;\n    duration_h = 1;\n    duration_d = 1;\n\n    // purchase button states\n    purchase_states = [false, false];\n\n    // app states for modal\n    is_app_disabled = false;\n    is_route_modal_on = false;\n\n    // real account signup\n    is_real_acc_signup_on = false;\n    real_account_signup_target = undefined;\n    deposit_real_account_signup_target = undefined;\n    has_real_account_signup_ended = false;\n\n    // Welcome modal\n    is_welcome_modal_visible = false;\n\n    // set currency modal\n    is_set_currency_modal_visible = false;\n\n    // position states\n    show_positions_toggle = true;\n\n    modal_index = 0;\n\n    // Mt5 topup\n    is_top_up_virtual_open = false;\n    is_top_up_virtual_in_progress = false;\n    is_top_up_virtual_success = false;\n\n    // MT5 create real STP from demo, show only real accounts from switcher\n    should_show_real_accounts_list = false;\n\n    // Real account signup\n    real_account_signup = {\n        active_modal_index: -1,\n        previous_currency: '',\n        current_currency: '',\n        success_message: '',\n        error_message: '',\n    };\n\n    // UI Focus retention\n    current_focus = null;\n\n    // Mobile\n    mobile_toast_timeout = 3500;\n    toasts = [];\n\n    is_cfd_page = false;\n    is_nativepicker_visible = false;\n    is_landscape = false;\n\n    prompt_when = false;\n    promptFn = () => {};\n\n    //warn user if they want to close create real account modal\n    is_closing_create_real_account_modal = false;\n\n    // MT5 account needed modal\n    is_account_needed_modal_on = false;\n    account_needed_modal_props = {\n        target: '',\n        target_label: '',\n        target_dmt5_label: '',\n    };\n\n    manage_real_account_tab_index = 0;\n\n    //traders-hub\n    is_real_tab_enabled = false;\n\n    // onboarding\n    should_show_multipliers_onboarding = false;\n    choose_crypto_currency_target = null;\n\n    // add crypto accounts\n    should_show_cancel = false;\n\n    should_show_risk_warning_modal = false;\n    should_show_appropriateness_warning_modal = false;\n    should_show_risk_accept_modal = false;\n    should_show_cooldown_modal = false;\n    should_show_trading_assessment_modal = false;\n    should_show_trade_assessment_form = false;\n    is_trading_assessment_for_existing_user_enabled = false;\n    is_trading_assessment_for_new_user_enabled = false;\n    should_show_assessment_complete_modal = false;\n    app_contents_scroll_ref = null;\n    is_deriv_account_needed_modal_visible = false;\n    is_wallet_modal_visible = false;\n    is_ready_to_deposit_modal_visible = false;\n    is_need_real_account_for_cashier_modal_visible = false;\n    is_switch_to_deriv_account_modal_visible = false;\n    is_cfd_reset_password_modal_enabled = false;\n    sub_section_index = 0;\n\n    is_additional_kyc_info_modal_open = false;\n    is_kyc_information_submitted_modal_open = false;\n\n    getDurationFromUnit = unit => this[`duration_${unit}`];\n\n    constructor(root_store) {\n        const local_storage_properties = [\n            'advanced_duration_unit',\n            'is_advanced_duration',\n            'advanced_expiry_type',\n            'simple_duration_unit',\n            'duration_t',\n            'duration_s',\n            'duration_m',\n            'duration_h',\n            'duration_d',\n            'is_account_settings_visible',\n            'is_chart_asset_info_visible',\n            'is_chart_countdown_visible',\n            'is_chart_layout_default',\n            'is_dark_mode_on',\n            'is_positions_drawer_on',\n            'is_reports_visible',\n            'is_warning_scam_message_modal_visible',\n            // 'is_purchase_confirm_on',\n            // 'is_purchase_lock_on',\n            'should_show_cancellation_warning',\n        ];\n\n        super({ root_store, local_storage_properties, store_name });\n\n        makeObservable(this, {\n            is_additional_kyc_info_modal_open: observable,\n            is_kyc_information_submitted_modal_open: observable,\n            account_needed_modal_props: observable,\n            account_switcher_disabled_message: observable,\n            has_only_forward_starting_contracts: observable,\n            has_read_scam_message: observable,\n            is_ready_to_deposit_modal_visible: observable,\n            is_need_real_account_for_cashier_modal_visible: observable,\n            is_services_error_visible: observable,\n            is_unsupported_contract_modal_visible: observable,\n            is_new_account: observable,\n            is_account_signup_modal_visible: observable,\n            is_link_expired_modal_visible: observable,\n            is_set_residence_modal_visible: observable,\n            is_reset_password_modal_visible: observable,\n            is_reset_email_modal_visible: observable,\n            is_update_email_modal_visible: observable,\n            is_reset_trading_password_modal_visible: observable,\n            is_cfd_reset_password_modal_enabled: observable,\n            sub_section_index: observable,\n            is_chart_countdown_visible: observable,\n            is_chart_layout_default: observable,\n            pwa_prompt_event: observable,\n            screen_width: observable,\n            screen_height: observable,\n            is_onscreen_keyboard_active: observable,\n            is_advanced_duration: observable,\n            advanced_duration_unit: observable,\n            advanced_expiry_type: observable,\n            app_contents_scroll_ref: observable,\n            choose_crypto_currency_target: observable,\n            current_focus: observable,\n            deposit_real_account_signup_target: observable,\n            duration_d: observable,\n            duration_h: observable,\n            duration_m: observable,\n            duration_s: observable,\n            duration_t: observable,\n            footer_extensions: observable,\n            has_real_account_signup_ended: observable,\n            header_extension: observable,\n            is_account_needed_modal_on: observable,\n            is_account_settings_visible: observable,\n\n            is_accounts_switcher_on: observable,\n\n            is_app_disabled: observable,\n            is_cashier_visible: observable,\n            is_cfd_page: observable,\n\n            is_closing_create_real_account_modal: observable,\n            is_dark_mode_on: observable,\n            is_deriv_account_needed_modal_visible: observable,\n            is_wallet_modal_visible: observable,\n\n            is_history_tab_active: observable,\n            is_landscape: observable,\n            is_language_settings_modal_on: observable,\n            is_mobile_language_menu_open: observable,\n            is_nativepicker_visible: observable,\n\n            is_positions_drawer_on: observable,\n            is_real_acc_signup_on: observable,\n            is_real_tab_enabled: observable,\n            is_reports_visible: observable,\n            is_route_modal_on: observable,\n            is_set_currency_modal_visible: observable,\n            is_settings_modal_on: observable,\n            is_switch_to_deriv_account_modal_visible: observable,\n            is_top_up_virtual_in_progress: observable,\n            is_top_up_virtual_open: observable,\n            is_top_up_virtual_success: observable,\n            is_trading_assessment_for_existing_user_enabled: observable,\n            is_trading_assessment_for_new_user_enabled: observable,\n            is_welcome_modal_visible: observable,\n            manage_real_account_tab_index: observable,\n            modal_index: observable,\n            notification_messages_ui: observable,\n            prompt_when: observable,\n            promptFn: observable,\n            purchase_states: observable,\n            real_account_signup_target: observable,\n            real_account_signup: observable,\n            reports_route_tab_index: observable,\n            settings_extension: observable,\n            should_show_appropriateness_warning_modal: observable,\n            should_show_assessment_complete_modal: observable,\n            should_show_cancel: observable,\n            should_show_cancellation_warning: observable,\n            should_show_cooldown_modal: observable,\n            should_show_multipliers_onboarding: observable,\n            should_show_real_accounts_list: observable,\n            should_show_risk_accept_modal: observable,\n            should_show_risk_warning_modal: observable,\n            should_show_trade_assessment_form: observable,\n            should_show_trading_assessment_modal: observable,\n            show_positions_toggle: observable,\n            simple_duration_unit: observable,\n            toasts: observable.shallow,\n            addToast: action.bound,\n            closeAccountNeededModal: action.bound,\n            closeRealAccountSignup: action.bound,\n            closeSuccessTopUpModal: action.bound,\n            closeTopUpModal: action.bound,\n            continueRouteAfterChooseCrypto: action.bound,\n            disableApp: action.bound,\n            disableRouteModal: action.bound,\n            enableApp: action.bound,\n            handleResize: action.bound,\n            init: action.bound,\n            installWithDeferredPrompt: action.bound,\n            is_account_switcher_disabled: computed,\n            is_desktop: computed,\n            is_mobile: computed,\n            is_tablet: computed,\n            is_warning_scam_message_modal_visible: computed,\n            url_hashed_values: observable,\n            notifyAppInstall: action.bound,\n            onChangeUiStore: action.bound,\n            openAccountNeededModal: action.bound,\n            openDerivRealAccountNeededModal: action.bound,\n            openPositionsDrawer: action.bound,\n            openRealAccountSignup: action.bound,\n            openSwitchToRealAccountModal: action.bound,\n            openTopUpModal: action.bound,\n            populateFooterExtensions: action.bound,\n            populateHeaderExtensions: action.bound,\n            populateSettingsExtensions: action.bound,\n            removePWAPromptEvent: action.bound,\n            removeToast: action.bound,\n            resetPurchaseStates: action.bound,\n            resetRealAccountSignupParams: action.bound,\n            resetRealAccountSignupTarget: action.bound,\n            setAccountSwitcherDisabledMessage: action.bound,\n            setAppContentsScrollRef: action.bound,\n            setCFDPasswordResetModal: action.bound,\n            setChartCountdown: action.bound,\n            setChartLayout: action.bound,\n            setCurrentFocus: action.bound,\n            setDarkMode: action.bound,\n            setHasOnlyForwardingContracts: action.bound,\n            setHashedValue: action.bound,\n            setIsClosingCreateRealAccountModal: action.bound,\n            setIsNativepickerVisible: action.bound,\n            setReportsTabIndex: action.bound,\n            toggleWelcomeModal: action.bound,\n            toggleReadyToDepositModal: action.bound,\n            toggleNeedRealAccountForCashierModal: action.bound,\n            toggleShouldShowRealAccountsList: action.bound,\n            toggleShouldShowMultipliersOnboarding: action.bound,\n            shouldNavigateAfterChooseCrypto: action.bound,\n            setShouldShowRiskWarningModal: action.bound,\n            setIsWalletModalVisible: action.bound,\n            setIsNewAccount: action.bound,\n            setIsRealTabEnabled: action.bound,\n            setIsTradingAssessmentForExistingUserEnabled: action.bound,\n            setIsTradingAssessmentForNewUserEnabled: action.bound,\n            setManageRealAccountActiveTabIndex: action.bound,\n            setModalIndex: action.bound,\n            setPromptHandler: action.bound,\n            setPurchaseState: action.bound,\n            setPWAPromptEvent: action.bound,\n            setRealAccountSignupEnd: action.bound,\n            setRealAccountSignupParams: action.bound,\n            setResetTradingPasswordModalOpen: action.bound,\n            setRouteModal: action.bound,\n            setScamMessageLocalStorage: action.bound,\n            setShouldShowAppropriatenessWarningModal: action.bound,\n            setShouldShowAssessmentCompleteModal: action.bound,\n            setShouldShowCancel: action.bound,\n            setShouldShowCooldownModal: action.bound,\n            setShouldShowTradeAssessmentForm: action.bound,\n            setShouldShowTradingAssessmentModal: action.bound,\n            setShouldShowWarningModal: action.bound,\n            setSubSectionIndex: action.bound,\n            setTopUpInProgress: action.bound,\n            setMobileLanguageMenuOpen: action.bound,\n            toggleAccountsDialog: action.bound,\n            toggleAccountSettings: action.bound,\n            toggleAccountSignupModal: action.bound,\n            toggleCancellationWarning: action.bound,\n            toggleCashier: action.bound,\n            toggleHistoryTab: action.bound,\n            toggleLinkExpiredModal: action.bound,\n            toggleOnScreenKeyboard: action.bound,\n            togglePositionsDrawer: action.bound,\n            toggleReports: action.bound,\n            toggleResetEmailModal: action.bound,\n            toggleResetPasswordModal: action.bound,\n            toggleServicesErrorModal: action.bound,\n            toggleSetCurrencyModal: action.bound,\n            toggleSetResidenceModal: action.bound,\n            toggleSettingsModal: action.bound,\n            toggleLanguageSettingsModal: action.bound,\n            toggleUnsupportedContractModal: action.bound,\n            toggleUpdateEmailModal: action.bound,\n            toggleAdditionalKycInfoModal: action.bound,\n            toggleKycInformationSubmittedModal: action.bound,\n        });\n\n        window.addEventListener('resize', this.handleResize);\n        autorun(() => {\n            this.changeTheme();\n        });\n    }\n    changeTheme = () => {\n        if (this.is_dark_mode_on) {\n            document.body.classList.remove('theme--light');\n            document.body.classList.add('theme--dark');\n        } else {\n            document.body.classList.remove('theme--dark');\n            document.body.classList.add('theme--light');\n        }\n    };\n\n    get is_warning_scam_message_modal_visible() {\n        return (\n            this.root_store.client.is_logged_in &&\n            this.root_store.client.is_brazil &&\n            !this.has_read_scam_message &&\n            !this.is_new_account\n        );\n    }\n\n    setIsClosingCreateRealAccountModal(is_closing_create_real_account_modal) {\n        this.is_closing_create_real_account_modal = is_closing_create_real_account_modal;\n    }\n\n    setIsRealTabEnabled(is_real_tab_enabled) {\n        this.is_real_tab_enabled = is_real_tab_enabled;\n    }\n\n    setScamMessageLocalStorage() {\n        localStorage.setItem('readScamMessage', !this.has_read_scam_message);\n        this.has_read_scam_message = localStorage.getItem('readScamMessage') || false;\n    }\n\n    setIsNewAccount() {\n        localStorage.setItem('isNewAccount', !this.is_new_account);\n        this.is_new_account = localStorage.getItem('isNewAccount') || false;\n    }\n\n    setHashedValue(url_hashed_values) {\n        this.url_hashed_values = url_hashed_values;\n    }\n\n    init(notification_messages) {\n        this.setHashedValue(window.location.hash);\n        this.notification_messages_ui = notification_messages;\n    }\n\n    setAppContentsScrollRef(value) {\n        this.app_contents_scroll_ref = value;\n    }\n\n    populateFooterExtensions(footer_extensions) {\n        this.footer_extensions = footer_extensions;\n    }\n\n    populateHeaderExtensions(component) {\n        this.header_extension = component;\n    }\n\n    populateSettingsExtensions(menu_items) {\n        this.settings_extension = menu_items;\n    }\n\n    onChangeUiStore({ name, value }) {\n        if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n        this[name] = value;\n    }\n\n    handleResize() {\n        this.screen_width = window.innerWidth;\n        this.screen_height = window.innerHeight;\n    }\n\n    setPromptHandler(condition, cb = () => {}) {\n        this.prompt_when = condition;\n        this.promptFn = cb;\n    }\n\n    get is_mobile() {\n        return this.screen_width <= MAX_MOBILE_WIDTH;\n    }\n\n    get is_tablet() {\n        return MAX_MOBILE_WIDTH < this.screen_width && this.screen_width <= MAX_TABLET_WIDTH;\n    }\n\n    get is_desktop() {\n        // TODO: remove tablet once there is a design for the specific size.\n        return this.is_tablet || this.screen_width > MAX_TABLET_WIDTH;\n    }\n\n    get is_account_switcher_disabled() {\n        return !!this.account_switcher_disabled_message;\n    }\n\n    setRouteModal() {\n        this.is_route_modal_on = true;\n    }\n\n    disableRouteModal() {\n        this.is_route_modal_on = false;\n    }\n\n    disableApp() {\n        this.is_app_disabled = true;\n    }\n\n    enableApp() {\n        this.is_app_disabled = false;\n    }\n\n    toggleAccountsDialog(status = !this.is_accounts_switcher_on) {\n        this.is_accounts_switcher_on = status;\n    }\n\n    setAccountSwitcherDisabledMessage(message) {\n        if (message) {\n            this.is_accounts_switcher_on = false;\n            this.account_switcher_disabled_message = message;\n        } else {\n            this.account_switcher_disabled_message = '';\n        }\n    }\n\n    setPurchaseState(index) {\n        this.purchase_states[index] = true;\n\n        // TODO: Find better solution in the future for hack below\n        // Force the animation to start quicker by manually assigning class to compensate for mobx getter lag\n        // Because mobx has a delay before it can receive the updated prop used to assign the animation class\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        if (el_purchase_buttons[index]) {\n            el_purchase_buttons[index].classList.add('btn-purchase--swoosh');\n        }\n        // UI/UX wants button to remain green until transition is finished and only then disable buttons\n        setTimeout(() => {\n            [].forEach.bind(el_purchase_buttons, el => {\n                el.classList.add('btn-purchase--disabled');\n            })();\n        }, 250);\n    }\n\n    resetPurchaseStates() {\n        this.purchase_states = [false, false];\n    }\n\n    setChartLayout(is_default) {\n        this.is_chart_layout_default = is_default;\n    }\n\n    // TODO: enable asset information\n    // @action.bound\n    // setChartAssetInfo(is_visible) {\n    //     this.is_chart_asset_info_visible = is_visible;\n    // }\n\n    setChartCountdown(is_visible) {\n        this.is_chart_countdown_visible = is_visible;\n    }\n\n    // @action.bound\n    // togglePurchaseLock() {\n    //     this.is_purchase_lock_on = !this.is_purchase_lock_on;\n    // }\n\n    // @action.bound\n    // setPurchaseLock(is_locked) {\n    //     this.is_purchase_lock_on = is_locked;\n    // }\n\n    // @action.bound\n    // togglePurchaseConfirmation() {\n    //     this.is_purchase_confirm_on = !this.is_purchase_confirm_on;\n    // }\n\n    setDarkMode(is_dark_mode_on) {\n        if (this.is_dark_mode_on !== is_dark_mode_on) {\n            this.is_dark_mode_on = is_dark_mode_on;\n            // This GTM call is here instead of the GTM store due to frequency of use\n            this.root_store.gtm.pushDataLayer({ event: 'switch theme' });\n        }\n\n        return this.is_dark_mode_on;\n    }\n\n    setMobileLanguageMenuOpen(is_mobile_language_menu_open) {\n        this.is_mobile_language_menu_open = is_mobile_language_menu_open;\n    }\n\n    toggleSetCurrencyModal() {\n        this.is_set_currency_modal_visible = !this.is_set_currency_modal_visible;\n    }\n\n    toggleCashier() {\n        this.is_cashier_visible = !this.is_cashier_visible;\n    }\n\n    setModalIndex(index = 0) {\n        this.modal_index = index;\n    }\n\n    toggleSettingsModal() {\n        this.is_settings_modal_on = !this.is_settings_modal_on;\n    }\n\n    toggleLanguageSettingsModal() {\n        this.is_language_settings_modal_on = !this.is_language_settings_modal_on;\n    }\n\n    openPositionsDrawer() {\n        // show and hide Positions Drawer\n        this.is_positions_drawer_on = true;\n    }\n\n    openRealAccountSignup(target) {\n        if (target) {\n            this.is_real_acc_signup_on = true;\n            this.real_account_signup_target = target;\n            this.is_accounts_switcher_on = false;\n            localStorage.removeItem('current_question_index');\n        }\n    }\n\n    setShouldShowCancel(value) {\n        this.should_show_cancel = value;\n    }\n\n    resetRealAccountSignupTarget() {\n        this.deposit_real_account_signup_target = this.real_account_signup_target;\n        this.real_account_signup_target = '';\n    }\n\n    setManageRealAccountActiveTabIndex(index) {\n        this.manage_real_account_tab_index = index;\n    }\n\n    closeRealAccountSignup() {\n        this.is_real_acc_signup_on = false;\n        this.resetRealAccountSignupTarget();\n        setTimeout(() => {\n            this.resetRealAccountSignupParams();\n            this.setRealAccountSignupEnd(true);\n        }, 300);\n    }\n\n    openAccountNeededModal(target, target_label, target_dmt5_label) {\n        this.is_account_needed_modal_on = true;\n        this.account_needed_modal_props = {\n            target,\n            target_label,\n            target_dmt5_label,\n        };\n    }\n\n    closeAccountNeededModal() {\n        this.is_account_needed_modal_on = false;\n        this.account_needed_modal_props = {\n            target: '',\n            target_label: '',\n            target_dmt5_label: '',\n        };\n    }\n\n    togglePositionsDrawer() {\n        // toggle Positions Drawer\n        this.is_positions_drawer_on = !this.is_positions_drawer_on;\n    }\n\n    toggleAccountSettings(is_visible) {\n        this.is_account_settings_visible = is_visible;\n    }\n\n    toggleReports(is_visible) {\n        this.is_reports_visible = is_visible;\n    }\n\n    toggleServicesErrorModal(is_visible) {\n        this.is_services_error_visible = is_visible;\n    }\n\n    removePWAPromptEvent() {\n        this.pwa_prompt_event = null;\n    }\n\n    setPWAPromptEvent(e) {\n        this.pwa_prompt_event = e;\n    }\n\n    setHasOnlyForwardingContracts(has_only_forward_starting_contracts) {\n        this.has_only_forward_starting_contracts = has_only_forward_starting_contracts;\n    }\n\n    toggleUnsupportedContractModal(state_change = !this.is_unsupported_contract_modal_visible) {\n        this.is_unsupported_contract_modal_visible = state_change;\n    }\n\n    toggleAccountSignupModal(state_change = !this.is_account_signup_modal_visible) {\n        this.is_account_signup_modal_visible = state_change;\n    }\n\n    toggleSetResidenceModal(state_change = !this.is_set_residence_modal_visible) {\n        this.is_set_residence_modal_visible = state_change;\n    }\n\n    toggleCancellationWarning(state_change = !this.should_show_cancellation_warning) {\n        this.should_show_cancellation_warning = state_change;\n    }\n\n    toggleHistoryTab(state_change = !this.is_history_tab_active) {\n        this.is_history_tab_active = state_change;\n    }\n\n    setTopUpInProgress(bool) {\n        this.is_top_up_virtual_in_progress = bool;\n    }\n\n    closeTopUpModal() {\n        this.is_top_up_virtual_open = false;\n    }\n\n    openTopUpModal() {\n        this.is_top_up_virtual_open = true;\n    }\n\n    closeSuccessTopUpModal() {\n        this.is_top_up_virtual_success = false;\n    }\n\n    toggleResetPasswordModal(state_change = !this.is_reset_password_modal_visible) {\n        this.is_reset_password_modal_visible = state_change;\n    }\n\n    toggleLinkExpiredModal(state_change = !this.is_link_expired_modal_visible) {\n        this.is_link_expired_modal_visible = state_change;\n    }\n\n    toggleResetEmailModal(state_change = !this.is_reset_email_modal_visible) {\n        this.is_reset_email_modal_visible = state_change;\n    }\n\n    toggleUpdateEmailModal(state_change = !this.is_update_email_modal_visible) {\n        this.is_update_email_modal_visible = state_change;\n    }\n\n    setResetTradingPasswordModalOpen(is_reset_trading_password_modal_visible) {\n        this.is_reset_trading_password_modal_visible = is_reset_trading_password_modal_visible;\n    }\n\n    setRealAccountSignupParams(params) {\n        this.real_account_signup = {\n            ...this.real_account_signup,\n            ...params,\n        };\n    }\n\n    setRealAccountSignupEnd(has_ended) {\n        this.has_real_account_signup_ended = has_ended;\n    }\n\n    resetRealAccountSignupParams() {\n        this.real_account_signup = {\n            active_modal_index: -1,\n            previous_currency: '',\n            current_currency: '',\n            success_message: '',\n            error_message: '',\n        };\n    }\n\n    toggleOnScreenKeyboard() {\n        this.is_onscreen_keyboard_active = this.current_focus !== null && this.is_mobile && isTouchDevice();\n    }\n\n    setCurrentFocus(value) {\n        this.current_focus = value;\n        this.toggleOnScreenKeyboard();\n    }\n\n    addToast(toast_config) {\n        toast_config.key = toast_config.key ?? toast_config.content;\n        const toast_index = this.toasts.findIndex(t => t.key === toast_config.key);\n        if (toast_index > -1) {\n            this.toasts.splice(toast_index, 1);\n        }\n\n        toast_config.timeout = toast_config.timeout ?? this.mobile_toast_timeout;\n        if (toast_config.is_bottom) {\n            this.toasts.push(toast_config);\n        } else {\n            this.toasts.unshift(toast_config);\n        }\n    }\n\n    removeToast(key) {\n        const index = this.toasts.findIndex(t => t.key === key);\n        if (index > -1) {\n            this.toasts.splice(index, 1);\n        }\n    }\n\n    setIsNativepickerVisible(is_nativepicker_visible) {\n        this.is_nativepicker_visible = is_nativepicker_visible;\n    }\n\n    setReportsTabIndex(tab_index = 0) {\n        this.reports_route_tab_index = tab_index;\n    }\n\n    toggleWelcomeModal({ is_visible = !this.is_welcome_modal_visible, should_persist = false }) {\n        if (LocalStore.get('has_viewed_welcome_screen') && !should_persist) return;\n        this.is_welcome_modal_visible = is_visible;\n\n        if (!is_visible) {\n            LocalStore.set('has_viewed_welcome_screen', true);\n        }\n    }\n\n    notifyAppInstall(prompt) {\n        this.deferred_prompt = prompt;\n        setTimeout(() => {\n            this.root_store.notifications.addNotificationMessageByKey('install_pwa');\n        }, 10000);\n    }\n\n    async installWithDeferredPrompt() {\n        this.deferred_prompt.prompt();\n        const choice = await this.deferred_prompt.userChoice;\n        if (choice.outcome === 'accepted') {\n            const notification_key = 'install_pwa';\n            this.root_store.notifications.removeNotificationMessage({\n                key: notification_key,\n                should_show_again: false,\n            });\n            this.root_store.notifications.removeNotificationByKey({ key: notification_key });\n        }\n    }\n\n    toggleShouldShowRealAccountsList(value) {\n        this.should_show_real_accounts_list = value;\n    }\n\n    toggleShouldShowMultipliersOnboarding(value) {\n        this.should_show_multipliers_onboarding = value;\n    }\n\n    shouldNavigateAfterChooseCrypto(next_location) {\n        this.choose_crypto_currency_target = next_location;\n    }\n\n    continueRouteAfterChooseCrypto() {\n        this.root_store.common.routeTo(this.choose_crypto_currency_target);\n\n        if (this.choose_crypto_currency_target === routes.cashier_deposit) {\n            this.root_store.modules.cashier.general_store.setIsDeposit(true);\n        }\n    }\n\n    openDerivRealAccountNeededModal() {\n        this.is_deriv_account_needed_modal_visible = !this.is_deriv_account_needed_modal_visible;\n    }\n\n    setIsWalletModalVisible(value) {\n        this.is_wallet_modal_visible = value;\n    }\n\n    setShouldShowRiskWarningModal(value) {\n        this.should_show_risk_warning_modal = value;\n    }\n\n    setIsTradingAssessmentForExistingUserEnabled(value) {\n        this.is_trading_assessment_for_existing_user_enabled = value;\n    }\n\n    setIsTradingAssessmentForNewUserEnabled(value) {\n        this.is_trading_assessment_for_new_user_enabled = value;\n    }\n\n    setShouldShowAppropriatenessWarningModal(value) {\n        this.should_show_appropriateness_warning_modal = value;\n    }\n\n    setShouldShowWarningModal(value) {\n        this.should_show_risk_accept_modal = value;\n    }\n\n    setShouldShowAssessmentCompleteModal(value) {\n        this.should_show_assessment_complete_modal = value;\n    }\n\n    setShouldShowCooldownModal(value) {\n        this.should_show_cooldown_modal = value;\n    }\n\n    setShouldShowTradingAssessmentModal(value) {\n        this.should_show_trading_assessment_modal = value;\n    }\n\n    setShouldShowTradeAssessmentForm(value) {\n        this.should_show_trade_assessment_form = value;\n    }\n\n    openSwitchToRealAccountModal() {\n        this.is_switch_to_deriv_account_modal_visible = !this.is_switch_to_deriv_account_modal_visible;\n    }\n\n    toggleReadyToDepositModal() {\n        this.is_ready_to_deposit_modal_visible = !this.is_ready_to_deposit_modal_visible;\n    }\n\n    toggleNeedRealAccountForCashierModal() {\n        this.is_need_real_account_for_cashier_modal_visible = !this.is_need_real_account_for_cashier_modal_visible;\n    }\n\n    setCFDPasswordResetModal(val) {\n        this.is_cfd_reset_password_modal_enabled = !!val;\n    }\n\n    setSubSectionIndex(index) {\n        this.sub_section_index = index;\n    }\n\n    toggleAdditionalKycInfoModal() {\n        this.is_additional_kyc_info_modal_open = !this.is_additional_kyc_info_modal_open;\n    }\n\n    toggleKycInformationSubmittedModal() {\n        this.is_kyc_information_submitted_modal_open = !this.is_kyc_information_submitted_modal_open;\n    }\n}\n","export const MAX_MOBILE_WIDTH = 767;\nexport const MAX_TABLET_WIDTH = 1024;\n","import { WS } from '@deriv/shared';\nimport { observable, action, runInAction, makeObservable } from 'mobx';\nimport BaseStore from './base-store';\n\nexport default class ActiveSymbolsStore extends BaseStore {\n    active_symbols = [];\n\n    constructor() {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super();\n\n        makeObservable(this, {\n            active_symbols: observable,\n            setActiveSymbols: action.bound,\n        });\n    }\n\n    async setActiveSymbols() {\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        runInAction(() => {\n            if (!active_symbols.length || error) {\n                this.active_symbols = [];\n                return;\n            }\n            this.active_symbols = active_symbols;\n        });\n    }\n}\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES, barriersToString } from '@deriv/shared';\n\nexport class ChartBarrierStore {\n    color;\n    lineStyle;\n    shade;\n    shadeColor;\n\n    high;\n    low;\n\n    relative;\n    draggable;\n\n    hidePriceLines;\n    hideBarrierLine;\n    hideOffscreenLine;\n    title;\n\n    onChartBarrierChange;\n\n    constructor(\n        high_barrier,\n        low_barrier,\n        onChartBarrierChange = null,\n        { color, hideBarrierLine, line_style, not_draggable, shade } = {}\n    ) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.hideBarrierLine = hideBarrierLine;\n        this.shade = shade;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high);\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { ChartBarrierStore } from '../chart-barrier-store';\nimport { isMultiplierContract, BARRIER_COLORS, BARRIER_LINE_STYLES, removeBarrier } from '@deriv/shared';\n\nconst isLimitOrderBarrierSupported = (contract_type, contract_info) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n};\n\nexport const setLimitOrderBarriers = ({ barriers, contract_type, contract_info = {}, is_over }) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss = Object.keys(contract_info.limit_order).some(\n            k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info.limit_order[k].value\n        );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = contract_update => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount) !== Math.abs(new_take_profit);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info.limit_order?.stop_loss?.order_amount) !== Math.abs(new_stop_loss);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import throttle from 'lodash.throttle';\nimport { action, computed, observable, reaction, makeObservable, override } from 'mobx';\nimport { createTransformer } from 'mobx-utils';\nimport {\n    isAccumulatorContract,\n    isEmptyObject,\n    isEnded,\n    isUserSold,\n    isValidToSell,\n    isMultiplierContract,\n    getCurrentTick,\n    getDisplayStatus,\n    WS,\n    filterDisabledPositions,\n    formatPortfolioPosition,\n    contractCancelled,\n    contractSold,\n    getDurationPeriod,\n    getDurationTime,\n    getDurationUnitText,\n    getEndTime,\n    removeBarrier,\n    TURBOS,\n} from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Analytics } from '@deriv/analytics';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\n\nimport BaseStore from './base-store';\n\nexport default class PortfolioStore extends BaseStore {\n    positions = [];\n    all_positions = [];\n    positions_map = {};\n    is_loading = false;\n    error = '';\n\n    //accumulators\n    open_accu_contract = null;\n\n    // barriers\n    barriers = [];\n    main_barrier = null;\n    contract_type = '';\n\n    getPositionById = createTransformer(id => this.positions.find(position => +position.id === +id));\n\n    responseQueue = [];\n\n    active_positions = [];\n\n    constructor(root_store) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super(root_store);\n\n        makeObservable(this, {\n            positions: observable.shallow,\n            all_positions: observable.shallow,\n            is_loading: observable,\n            error: observable,\n            barriers: observable,\n            main_barrier: observable,\n            contract_type: observable,\n            active_positions: observable.struct,\n            initializePortfolio: action.bound,\n            clearTable: action.bound,\n            portfolioHandler: action.bound,\n            onBuyResponse: action.bound,\n            transactionHandler: action.bound,\n            proposalOpenContractHandler: action.bound,\n            open_accu_contract: observable,\n            onClickCancel: action.bound,\n            onClickSell: action.bound,\n            handleSell: action.bound,\n            populateResultDetailsFromTransaction: action.bound,\n            populateResultDetails: action.bound,\n            populateContractUpdate: action.bound,\n            pushNewPosition: action.bound,\n            removePositionById: action.bound,\n            onHoverPosition: action.bound,\n            logoutListener: action.bound,\n            networkStatusChangeListener: action.bound,\n            onMount: action.bound,\n            onUnmount: override,\n            totals: computed,\n            setActivePositions: action.bound,\n            is_active_empty: computed,\n            active_positions_count: computed,\n            is_empty: computed,\n            setPurchaseSpotBarrier: action,\n            updateLimitOrderBarriers: action,\n            setContractType: action,\n            is_accumulator: computed,\n            is_multiplier: computed,\n            is_turbos: computed,\n        });\n\n        this.root_store = root_store;\n    }\n\n    async initializePortfolio() {\n        if (this.has_subscribed_to_poc_and_transaction) {\n            this.clearTable();\n        }\n        this.is_loading = true;\n        await WS.wait('authorize');\n        WS.portfolio().then(this.portfolioHandler);\n        WS.subscribeProposalOpenContract(null, this.proposalOpenContractQueueHandler);\n        WS.subscribeTransaction(this.transactionHandler);\n        this.has_subscribed_to_poc_and_transaction = true;\n    }\n\n    clearTable() {\n        this.positions = [];\n        this.positions_map = {};\n        this.is_loading = false;\n        this.error = '';\n        this.updatePositions();\n        if (this.has_subscribed_to_poc_and_transaction) {\n            WS.forgetAll('proposal_open_contract', 'transaction');\n        }\n        this.has_subscribed_to_poc_and_transaction = false;\n    }\n\n    portfolioHandler(response) {\n        this.is_loading = false;\n        if ('error' in response) {\n            this.error = response.error.message;\n            return;\n        }\n        this.error = '';\n        if (response.portfolio.contracts) {\n            this.positions = response.portfolio.contracts\n                .filter(filterDisabledPositions)\n                .map(pos => formatPortfolioPosition(pos, this.root_store.active_symbols.active_symbols))\n                .sort((pos1, pos2) => pos2.reference - pos1.reference); // new contracts first\n\n            this.positions.forEach(p => {\n                this.positions_map[p.id] = p;\n            });\n            this.updatePositions();\n        }\n    }\n\n    onBuyResponse({ contract_id, longcode, contract_type }) {\n        const new_pos = {\n            contract_id,\n            longcode,\n            contract_type,\n        };\n        this.pushNewPosition(new_pos);\n    }\n\n    async transactionHandler(response) {\n        if ('error' in response) {\n            this.error = response.error.message;\n        }\n        if (!response.transaction) return;\n        const { contract_id, action: act, longcode } = response.transaction;\n\n        if (act === 'buy') {\n            this.onBuyResponse({\n                contract_id,\n                longcode,\n                contract_type: '', // TODO: figure out the icon not showing\n            });\n        } else if (act === 'sell') {\n            const i = this.getPositionIndexById(contract_id);\n\n            if (!this.positions[i]) {\n                // On a page refresh, portfolio call has returend empty,\n                // even though we we get a transaction.sell response.\n                return;\n            }\n            this.positions[i].is_loading = true;\n\n            // Sometimes when we sell a contract, we don't get `proposal_open_contract` message with exit information and status as `sold`.\n            // This is to make sure that we get `proposal_open_contract` message with exit information and status as `sold`.\n            const subscriber = WS.subscribeProposalOpenContract(contract_id, poc => {\n                if (poc.error) {\n                    // Settles the contract based on transaction response when POC response is throwing error.\n                    this.populateResultDetailsFromTransaction(response);\n                } else {\n                    this.updateContractTradeStore(poc);\n                    this.updateContractReplayStore(poc);\n                    this.populateResultDetails(poc);\n                }\n                subscriber.unsubscribe();\n            });\n        }\n    }\n\n    deepClone = obj => JSON.parse(JSON.stringify(obj));\n    updateContractTradeStore(response) {\n        const contract_trade = this.root_store.contract_trade;\n        const has_poc = !isEmptyObject(response.proposal_open_contract);\n        const has_error = !!response.error;\n        if (!has_poc && !has_error) return;\n        if (has_poc) {\n            contract_trade.addContract(this.deepClone(response.proposal_open_contract));\n            contract_trade.updateProposal(this.deepClone(response));\n        }\n    }\n\n    updateContractReplayStore(response) {\n        const contract_replay = this.root_store.contract_replay;\n        if (contract_replay.contract_id === response.proposal_open_contract?.contract_id) {\n            contract_replay.populateConfig(response);\n        }\n    }\n\n    updateTradeStore(is_over, portfolio_position, is_limit_order_update) {\n        // const trade = this.root_store.modules.trade;\n        if (!is_limit_order_update) {\n            this.setPurchaseSpotBarrier(is_over, portfolio_position);\n        }\n        this.updateLimitOrderBarriers(is_over, portfolio_position);\n    }\n\n    proposalOpenContractQueueHandler = response => {\n        this.responseQueue.push(response);\n        this.throttledUpdatePositions();\n    };\n\n    proposalOpenContractHandler(response) {\n        if ('error' in response) {\n            this.updateContractTradeStore(response);\n            this.updateContractReplayStore(response);\n            return;\n        }\n\n        const proposal = response.proposal_open_contract;\n        const portfolio_position = this.positions_map[proposal.contract_id];\n\n        if (!portfolio_position) return;\n        this.updateContractTradeStore(response);\n        this.updateContractReplayStore(response);\n\n        const formatted_position = formatPortfolioPosition(\n            proposal,\n            this.root_store.active_symbols.active_symbols,\n            portfolio_position.indicative\n        );\n        Object.assign(portfolio_position, formatted_position);\n\n        const prev_indicative = portfolio_position.indicative;\n        const new_indicative = +proposal.bid_price;\n        const profit_loss = +proposal.profit;\n\n        // fix for missing barrier and entry_spot in proposal_open_contract API response, only re-assign if valid\n        Object.entries(proposal).forEach(([key, value]) => {\n            if (key === 'barrier' || key === 'high_barrier' || key === 'low_barrier' || key === 'entry_spot') {\n                portfolio_position[key] = +value;\n            }\n        });\n\n        // store contract proposal details that require modifiers\n        portfolio_position.indicative = new_indicative;\n        portfolio_position.profit_loss = profit_loss;\n        portfolio_position.is_valid_to_sell = isValidToSell(proposal);\n\n        // store contract proposal details that do not require modifiers\n        portfolio_position.contract_info = proposal;\n\n        // for tick contracts\n        if (proposal.tick_count) {\n            const current_tick =\n                portfolio_position.current_tick > getCurrentTick(proposal)\n                    ? portfolio_position.current_tick\n                    : getCurrentTick(proposal);\n            portfolio_position.current_tick = current_tick;\n        }\n\n        if (new_indicative > prev_indicative) {\n            portfolio_position.status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            portfolio_position.status = 'loss';\n        } else {\n            portfolio_position.status = null;\n        }\n\n        if (this.hovered_position_id === portfolio_position.id) {\n            if (portfolio_position.contract_info.is_sold === 1) {\n                this.updateTradeStore(false, portfolio_position);\n            } else {\n                this.updateTradeStore(true, portfolio_position, true);\n            }\n        }\n\n        if (portfolio_position.contract_info.is_sold === 1) {\n            this.populateResultDetails(response);\n        }\n    }\n\n    onClickCancel(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        if (this.positions[i].is_sell_requested) return;\n\n        this.positions[i].is_sell_requested = true;\n        if (contract_id) {\n            WS.cancelContract(contract_id).then(response => {\n                if (response.error) {\n                    this.root_store.common.setServicesError({\n                        type: response.msg_type,\n                        ...response.error,\n                    });\n                } else {\n                    this.root_store.notifications.addNotificationMessage(contractCancelled());\n                }\n            });\n        }\n    }\n\n    onClickSell(contract_id) {\n        const i = this.getPositionIndexById(contract_id);\n        if (this.positions[i].is_sell_requested) return;\n\n        const { bid_price } = this.positions[i].contract_info;\n        this.positions[i].is_sell_requested = true;\n        if (contract_id && typeof bid_price === 'number') {\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            const i = this.getPositionIndexById(response.echo_req.sell);\n            this.positions[i].is_sell_requested = false;\n\n            // invalidToken error will handle in socket-general.js\n            if (response.error.code !== 'InvalidToken') {\n                this.root_store.common.setServicesError({\n                    type: response.msg_type,\n                    ...response.error,\n                });\n            }\n        } else if (!response.error && response.sell) {\n            // update contract store sell info after sell\n            this.root_store.contract_trade.sell_info = {\n                sell_price: response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.notifications.addNotificationMessage(\n                contractSold(this.root_store.client.currency, response.sell.sold_for, Money)\n            );\n\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close_contract',\n                form_name: 'default',\n                subform_name: 'open_positions_form',\n            });\n        }\n    }\n\n    populateResultDetailsFromTransaction = response => {\n        const transaction_response = response.transaction;\n        const { contract_id, amount } = transaction_response;\n        const i = this.getPositionIndexById(contract_id);\n        const position = this.positions[i];\n\n        if (!position) {\n            return;\n        }\n        const contract_info = { ...position.contract_info, is_sold: 1, is_expired: 1, status: 'complete' };\n\n        position.contract_info = contract_info;\n        position.is_valid_to_sell = false;\n        position.result = amount > contract_info.buy_price ? 'won' : 'lost';\n        position.status = 'complete';\n        position.is_sold = 1;\n        position.is_loading = false;\n\n        contract_info.exit_tick_time = contract_info.date_expiry;\n        contract_info.sell_price = String(amount);\n        contract_info.profit = amount - contract_info.buy_price;\n\n        this.updatePositions();\n    };\n\n    populateResultDetails = response => {\n        const contract_response = response.proposal_open_contract;\n        const i = this.getPositionIndexById(contract_response.contract_id);\n\n        if (!this.positions[i]) {\n            return;\n        }\n\n        this.positions[i].contract_info = contract_response;\n        this.positions[i].duration = getDurationTime(contract_response);\n        this.positions[i].duration_unit = getDurationUnitText(getDurationPeriod(contract_response));\n        this.positions[i].exit_spot = contract_response.exit_tick || contract_response.current_spot; // workaround if no exit_tick in proposal_open_contract, use latest spot\n        this.positions[i].is_valid_to_sell = isValidToSell(contract_response);\n        this.positions[i].result = getDisplayStatus(contract_response);\n        this.positions[i].profit_loss = +contract_response.profit;\n        this.positions[i].sell_time = getEndTime(contract_response) || contract_response.current_spot_time; // same as exit_spot, use latest spot time if no exit_tick_time\n        this.positions[i].sell_price = contract_response.sell_price;\n        this.positions[i].status = 'complete';\n\n        // fix for missing barrier and entry_spot\n        if (!this.positions[i].contract_info.barrier || !this.positions[i].contract_info.entry_spot) {\n            this.positions[i].contract_info.barrier = this.positions[i].barrier;\n            this.positions[i].contract_info.entry_spot = this.positions[i].entry_spot;\n        }\n\n        // remove exit_spot for manually sold contracts\n        if (isUserSold(contract_response)) this.positions[i].exit_spot = '-';\n\n        this.positions[i].is_loading = false;\n    };\n\n    populateContractUpdate({ contract_update }, contract_id) {\n        const position = this.getPositionById(contract_id);\n        if (position) {\n            Object.assign(position.contract_update || {}, contract_update);\n            this.updatePositions();\n        }\n    }\n\n    pushNewPosition(new_pos) {\n        const position = formatPortfolioPosition(new_pos, this.root_store.active_symbols.active_symbols);\n        if (this.positions_map[position.id]) return;\n\n        this.positions.unshift(position);\n        this.positions_map[position.id] = position;\n        this.updatePositions();\n    }\n\n    removePositionById(contract_id) {\n        const contract_idx = this.getPositionIndexById(contract_id);\n\n        this.positions.splice(contract_idx, 1);\n        delete this.positions_map[contract_id];\n        this.updatePositions();\n        this.root_store.contract_trade.removeContract({ contract_id });\n    }\n\n    async accountSwitcherListener() {\n        await this.initializePortfolio();\n        return Promise.resolve();\n    }\n\n    onHoverPosition(is_over, position, underlying) {\n        if (\n            position.contract_info.underlying !== underlying ||\n            isEnded(position.contract_info) ||\n            !isMultiplierContract(position.type)\n        ) {\n            return;\n        }\n\n        this.hovered_position_id = is_over ? position.id : null;\n        this.updateTradeStore(is_over, position);\n    }\n\n    preSwitchAccountListener() {\n        this.clearTable();\n        return Promise.resolve();\n    }\n\n    logoutListener() {\n        this.clearTable();\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.is_loading = !is_online;\n    }\n\n    onMount() {\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.onLogout(this.logoutListener);\n        if (this.positions.length === 0 && !this.has_subscribed_to_poc_and_transaction) {\n            // TODO: Optimise the way is_logged_in changes are detected for \"logging in\" and \"already logged on\" states\n            if (this.root_store.client.is_logged_in) {\n                this.initializePortfolio();\n            } else {\n                reaction(\n                    () => this.root_store.client.is_logged_in,\n                    () => {\n                        if (this.root_store.client.is_logged_in) {\n                            this.initializePortfolio();\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    onUnmount() {\n        const is_reports_path = /^\\/reports/.test(window.location.pathname);\n        if (!is_reports_path) {\n            this.clearTable();\n            this.disposePreSwitchAccount();\n            this.disposeSwitchAccount();\n            this.disposeLogout();\n        }\n    }\n\n    getPositionIndexById(contract_id) {\n        return this.positions.findIndex(pos => +pos.id === +contract_id);\n    }\n\n    get totals() {\n        let indicative = 0;\n        let payout = 0;\n        let purchase = 0;\n\n        this.positions.forEach(portfolio_pos => {\n            indicative += +portfolio_pos.indicative;\n            payout += +portfolio_pos.payout;\n            purchase += +portfolio_pos.purchase;\n        });\n        return {\n            indicative,\n            payout,\n            purchase,\n        };\n    }\n\n    setActivePositions() {\n        this.active_positions = this.positions.filter(portfolio_pos => !getEndTime(portfolio_pos.contract_info));\n        this.all_positions = [...this.positions];\n        this.open_accu_contract = this.active_positions.find(({ type }) => isAccumulatorContract(type));\n    }\n\n    updatePositions = () => {\n        this.responseQueue.forEach(res => this.proposalOpenContractHandler(res));\n        this.responseQueue = [];\n        this.setActivePositions();\n    };\n\n    throttledUpdatePositions = throttle(this.updatePositions, 500);\n\n    get is_active_empty() {\n        return !this.is_loading && this.active_positions.length === 0;\n    }\n\n    get active_positions_count() {\n        return this.active_positions.length || 0;\n    }\n\n    get is_empty() {\n        return !this.is_loading && this.all_positions.length === 0;\n    }\n\n    // from trade store\n    setPurchaseSpotBarrier(is_over, position) {\n        const key = 'PURCHASE_SPOT_BARRIER';\n        if (!is_over) {\n            removeBarrier(this.barriers, key);\n            return;\n        }\n\n        let purchase_spot_barrier = this.barriers.find(b => b.key === key);\n        if (purchase_spot_barrier) {\n            if (purchase_spot_barrier.high !== +position.contract_info.entry_spot) {\n                purchase_spot_barrier.onChange({\n                    high: position.contract_info.entry_spot,\n                });\n            }\n        } else {\n            purchase_spot_barrier = new ChartBarrierStore(position.contract_info.entry_spot);\n            purchase_spot_barrier.key = key;\n            purchase_spot_barrier.draggable = false;\n            purchase_spot_barrier.hideOffscreenBarrier = true;\n            purchase_spot_barrier.isSingleBarrier = true;\n            this.barriers.push(purchase_spot_barrier);\n        }\n    }\n\n    updateLimitOrderBarriers(is_over, position) {\n        const contract_info = position.contract_info;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            contract_info,\n            contract_type: contract_info.contract_type,\n            is_over,\n        });\n    }\n\n    setContractType(contract_type) {\n        this.contract_type = contract_type;\n    }\n\n    get is_accumulator() {\n        return this.contract_type === 'accumulator';\n    }\n\n    get is_multiplier() {\n        return this.contract_type === 'multiplier';\n    }\n\n    get is_turbos() {\n        return this.contract_type === TURBOS.LONG || this.contract_type === TURBOS.SHORT;\n    }\n}\n","import moment from 'moment';\nimport { isAccumulatorContract, isEmptyObject, getEndTime } from '@deriv/shared';\nimport ServerTime from '../../_common/base/server_time';\n\nexport const getChartConfig = (contract_info, is_beta_chart) => {\n    if (isEmptyObject(contract_info)) return null;\n    const start = contract_info.date_start;\n    const end = getEndTime(contract_info);\n    const granularity = getChartGranularity(start, end || null);\n    const chart_type = getChartType(start, end || null, is_beta_chart);\n    const is_accumulator_contract = isAccumulatorContract(contract_info.contract_type);\n    // setting start_epoch and scroll_to_epoch for accumulator contracts\n    // when contract is open, we get no more than 10 last ticks from BE, so we show 10 ticks when tick_stream.length === 10\n    const first_tick_epoch =\n        is_accumulator_contract && !!contract_info.tick_stream?.length && contract_info.tick_stream[0].epoch;\n    const should_show_10_last_ticks =\n        is_accumulator_contract && contract_info.status === 'open' && contract_info.tick_stream.length === 10;\n    const start_epoch = should_show_10_last_ticks ? first_tick_epoch : start;\n    const scroll_to_epoch = should_show_10_last_ticks ? first_tick_epoch : contract_info.purchase_time;\n    return {\n        chart_type: contract_info.tick_count ? (is_beta_chart ? 'line' : 'mountain') : chart_type,\n        granularity: contract_info.tick_count ? 0 : granularity,\n        end_epoch: end,\n        start_epoch,\n        scroll_to_epoch,\n    };\n};\n\nconst hour_to_granularity_map = [\n    [1, 0],\n    [2, 120],\n    [6, 600],\n    [24, 900],\n    [5 * 24, 3600],\n    [30 * 24, 14400],\n];\n\nconst getExpiryTime = time => time || ServerTime.get().unix();\n\nexport const getChartType = (start_time, expiry_time, is_beta_chart) => {\n    const duration = moment.duration(moment.unix(getExpiryTime(expiry_time)).diff(moment.unix(start_time))).asHours();\n    // use line chart if duration is equal or less than 1 hour\n    return duration <= 1 ? (is_beta_chart ? 'line' : 'mountain') : 'candle';\n};\n\nexport const getChartGranularity = (start_time, expiry_time) =>\n    calculateGranularity(getExpiryTime(expiry_time) - start_time);\n\nexport const calculateGranularity = duration =>\n    (hour_to_granularity_map.find(m => duration <= m[0] * 3600) || [null, 86400])[1];\n\nexport const getBuyPrice = contract_store => {\n    return contract_store.contract_info.buy_price;\n};\n\n/**\n * Set contract update form initial values\n * @param {object} contract_update - contract_update response\n * @param {object} limit_order - proposal_open_contract.limit_order response\n */\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst MarkerLine = ({ label, line_style, marker_config, status }) => {\n    // TODO: Find a more elegant solution\n    if (!marker_config) return <div />;\n    return (\n        <div className={classNames('chart-marker-line__wrapper', `chart-marker-line--${line_style}`)}>\n            {label === marker_config.LINE_END.content_config.label && (\n                <Icon\n                    icon='IcContractExitTimeCircle'\n                    className='chart-marker-line__icon'\n                    color={status === 'lost' ? 'red' : 'green'}\n                    size={24}\n                />\n            )}\n            {label === marker_config.LINE_START.content_config.label && (\n                <Icon\n                    icon='IcContractStartTimeCircle'\n                    className='chart-marker-line__icon chart-marker-line__icon--time'\n                    color='secondary'\n                    size={24}\n                />\n            )}\n        </div>\n    );\n};\n\nMarkerLine.propTypes = {\n    label: PropTypes.string,\n    line_style: PropTypes.string,\n    marker_config: PropTypes.object,\n    status: PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerLine);\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MarkerSpot = ({ className, spot_count }) => (\n    <div className={classNames('chart-spot', className)}>{spot_count}</div>\n);\n\nMarkerSpot.propTypes = {\n    className: PropTypes.string,\n    spot_count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nexport default observer(MarkerSpot);\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { addComma, toMoment } from '@deriv/shared';\n\nimport MarkerSpot from './marker-spot.jsx';\nimport { localize } from '@deriv/translations';\n\nconst MarkerSpotLabel = ({\n    align_label,\n    has_hover_toggle,\n    is_value_hidden,\n    spot_className,\n    spot_count,\n    spot_epoch,\n    spot_value,\n    spot_profit,\n    status,\n}) => {\n    const [show_label, setShowLabel] = React.useState(!has_hover_toggle);\n\n    const handleHoverToggle = () => {\n        setShowLabel(!show_label);\n    };\n\n    let marker_spot = <MarkerSpot className={spot_className} spot_count={spot_count} />;\n\n    if (has_hover_toggle) {\n        marker_spot = (\n            <div\n                data-testid='dt_marker_hover_container'\n                className='marker-hover-container'\n                onMouseEnter={handleHoverToggle}\n                onMouseLeave={handleHoverToggle}\n            >\n                {marker_spot}\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <div className={'chart-spot-label'}>\n                {show_label && !is_value_hidden && (\n                    <div className='chart-spot-label__info-container'>\n                        <div\n                            data-testid='dt_time_value_container'\n                            className={`chart-spot-label__time-value-container chart-spot-label__time-value-container--${align_label}`}\n                        >\n                            {spot_epoch && (\n                                <div className='chart-spot-label__time-container'>\n                                    <Icon\n                                        icon='IcClockOutline'\n                                        height={10}\n                                        width={10}\n                                        className='chart-spot-label__time-icon'\n                                    />\n                                    <Text as='p' color='prominent' size='xxxs'>\n                                        {toMoment(+spot_epoch).format('HH:mm:ss')}\n                                    </Text>\n                                </div>\n                            )}\n                            <div\n                                data-testid='dt_value_container'\n                                className={classNames('chart-spot-label__value-container', {\n                                    'chart-spot-label__value-container--won': status === 'won',\n                                    'chart-spot-label__value-container--lost': status === 'lost',\n                                })}\n                            >\n                                <p>{addComma(spot_value)}</p>\n                            </div>\n                        </div>\n                    </div>\n                )}\n                {marker_spot}\n            </div>\n            {spot_profit && (\n                <div\n                    className={classNames('chart-spot-label-profit', {\n                        'chart-spot-label-profit--won': status === 'won',\n                        'chart-spot-label-profit--lost': status === 'lost',\n                    })}\n                >\n                    <div\n                        className={classNames('chart-spot-label__value-container', {\n                            'chart-spot-label__value-container--won': status === 'won',\n                            'chart-spot-label__value-container--lost': status === 'lost',\n                        })}\n                    >\n                        <Text as='p' size='xxs'>\n                            {localize('Total profit/loss:')}\n                        </Text>\n                        <Text as='p' size='xs'>{`${parseFloat(spot_profit) > 0 ? '+' : ''}${spot_profit}`}</Text>\n                    </div>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nMarkerSpotLabel.defaultProps = {\n    align_label: 'top',\n    is_value_hidden: false,\n};\n\nMarkerSpotLabel.propTypes = {\n    align_label: PropTypes.oneOf(['top', 'bottom']),\n    has_hover_toggle: PropTypes.bool,\n    is_value_hidden: PropTypes.bool,\n    spot_className: PropTypes.string,\n    spot_count: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_epoch: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    spot_profit: PropTypes.string,\n    status: PropTypes.oneOf(['won', 'lost']),\n};\nexport default observer(MarkerSpotLabel);\n","import { localize } from '@deriv/translations';\nimport MarkerLine from '../../Components/markers/marker-line.jsx';\nimport MarkerSpotLabel from '../../Components/markers/marker-spot-label.jsx';\nimport MarkerSpot from '../../Components/markers/marker-spot.jsx';\n\nexport const MARKER_TYPES_CONFIG = {\n    LINE_END: {\n        type: 'LINE_END',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'dash', label: localize('End Time') },\n    },\n    LINE_PURCHASE: {\n        type: 'LINE_PURCHASE',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Purchase Time') },\n    },\n    LINE_START: {\n        type: 'LINE_START',\n        marker_config: {\n            ContentComponent: MarkerLine,\n            className: 'chart-marker-line',\n        },\n        content_config: { line_style: 'solid', label: localize('Start Time') },\n    },\n    SPOT_ENTRY: {\n        type: 'SPOT_ENTRY',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__entry' },\n    },\n    SPOT_SELL: {\n        type: 'SPOT_SELL',\n        marker_config: {\n            ContentComponent: MarkerSpot,\n        },\n        content_config: { className: 'chart-spot__sell' },\n    },\n    SPOT_EXIT: {\n        type: 'SPOT_EXIT',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n    SPOT_MIDDLE: {\n        type: 'SPOT_MIDDLE',\n        marker_config: {\n            ContentComponent: MarkerSpotLabel,\n        },\n        content_config: { spot_className: 'chart-spot__spot' },\n    },\n};\n","import extend from 'extend';\nimport {\n    formatMoney,\n    getEndTime,\n    isAccumulatorContract,\n    isSmartTraderContract,\n    isDesktop,\n    isDigitContract,\n    isMobile,\n    isMultiplierContract,\n    isUserSold,\n    isVanillaContract,\n} from '@deriv/shared';\n\nimport { MARKER_TYPES_CONFIG } from '../Constants/markers';\n\nconst createMarkerConfig = (marker_type, x, y, content_config) =>\n    extend(true, {}, MARKER_TYPES_CONFIG[marker_type], {\n        marker_config: {\n            x: +x,\n            y,\n        },\n        content_config,\n    });\n\nexport const getSpotCount = (contract_info, spot_count) => {\n    if (isDigitContract(contract_info.contract_type)) return spot_count + 1;\n    if (isAccumulatorContract(contract_info.contract_type) || isSmartTraderContract(contract_info.contract_type))\n        return null;\n    return spot_count;\n};\n\n// -------------------- Lines --------------------\nexport const createMarkerEndTime = contract_info => {\n    const end_time = getEndTime(contract_info);\n    if (!end_time) return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_END.type, +end_time, null, {\n        status: `${contract_info.profit >= 0 ? 'won' : 'lost'}`,\n        marker_config: MARKER_TYPES_CONFIG,\n    });\n};\n\nexport const createMarkerPurchaseTime = contract_info => {\n    if (\n        !contract_info.purchase_time ||\n        !contract_info.date_start ||\n        +contract_info.purchase_time === +contract_info.date_start\n    )\n        return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_PURCHASE.type, +contract_info.purchase_time);\n};\n\nexport const createMarkerStartTime = contract_info => {\n    if (!contract_info.date_start) return false;\n\n    return createMarkerConfig(MARKER_TYPES_CONFIG.LINE_START.type, +contract_info.date_start, null, {\n        marker_config: MARKER_TYPES_CONFIG,\n    });\n};\n\n// -------------------- Spots --------------------\nexport const createMarkerSpotEntry = contract_info => {\n    if (!contract_info.entry_tick_time) return false;\n\n    let marker_type = MARKER_TYPES_CONFIG.SPOT_ENTRY.type;\n    let component_props = {};\n    const entry_tick = contract_info.entry_tick_display_value;\n\n    const spot_has_label = isDigitContract(contract_info.contract_type);\n\n    if (spot_has_label) {\n        marker_type = MARKER_TYPES_CONFIG.SPOT_MIDDLE.type;\n        component_props = {\n            spot_value: `${entry_tick}`,\n            spot_epoch: `${contract_info.entry_tick_time}`,\n            spot_count: 1,\n        };\n    }\n\n    return createMarkerConfig(marker_type, contract_info.entry_tick_time, entry_tick, component_props);\n};\n\nexport const createMarkerSpotExit = (contract_info, tick, idx) => {\n    if (!contract_info.exit_tick_time) return false;\n    const is_user_sold = isUserSold(contract_info);\n\n    let spot_count, align_label;\n    if (tick) {\n        spot_count = getSpotCount(contract_info, idx);\n        align_label = tick.align_label;\n    }\n\n    const exit_tick = contract_info.exit_tick_display_value;\n\n    const should_show_spot_exit = !is_user_sold || isMultiplierContract(contract_info.contract_type);\n\n    const should_show_profit_label = isVanillaContract(contract_info.contract_type) && isDesktop();\n\n    const marker_spot_type = should_show_spot_exit\n        ? MARKER_TYPES_CONFIG.SPOT_EXIT.type\n        : MARKER_TYPES_CONFIG.SPOT_SELL.type;\n\n    const component_props = should_show_spot_exit\n        ? {\n              spot_value: `${exit_tick}`,\n              spot_epoch: `${contract_info.exit_tick_time}`,\n              status: `${+contract_info.profit >= 0 ? 'won' : 'lost'}`,\n              align_label: should_show_profit_label ? 'middle' : align_label,\n              spot_count,\n              spot_profit:\n                  (should_show_profit_label &&\n                      `${formatMoney(contract_info.currency, contract_info.profit, true)} ${contract_info.currency}`) ||\n                  '',\n          }\n        : {};\n\n    return createMarkerConfig(marker_spot_type, +contract_info.exit_tick_time, +exit_tick, component_props);\n};\n\nexport const createMarkerSpotMiddle = (contract_info, tick, idx) => {\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n    const spot_count = getSpotCount(contract_info, idx);\n    const spot = tick.tick_display_value;\n    const spot_epoch = is_accumulator ? '' : `${tick.epoch}`;\n\n    const marker_config = createMarkerConfig(MARKER_TYPES_CONFIG.SPOT_MIDDLE.type, +tick.epoch, +spot, {\n        spot_value: `${spot}`,\n        spot_epoch,\n        align_label: tick.align_label,\n        is_value_hidden: is_accumulator,\n        spot_count,\n    });\n    marker_config.type = `${marker_config.type}_${idx}`;\n\n    if (isMobile() && spot_count > 1) return null;\n    return marker_config;\n};\n","import {\n    createMarkerEndTime,\n    createMarkerPurchaseTime,\n    createMarkerSpotEntry,\n    createMarkerSpotExit,\n    createMarkerStartTime,\n    createMarkerSpotMiddle,\n    getSpotCount,\n} from './chart-marker-helpers';\nimport {\n    getDecimalPlaces,\n    getEndTime,\n    isAccumulatorContract,\n    isAccumulatorContractOpen,\n    isDigitContract,\n    isHighLow,\n    isSmartTraderContract,\n    isOpen,\n    isTouchContract,\n    isMultiplierContract,\n    isVanillaContract,\n    getContractStatus,\n    unique,\n    isTurbosContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { MARKER_TYPES_CONFIG } from '../Constants/markers';\nimport { getChartType } from './logic';\n\nexport const createChartMarkers = (contract_info, is_delayed_markers_update, is_beta_chart) => {\n    const { tick_stream } = contract_info;\n    const should_show_10_last_ticks = isAccumulatorContractOpen(contract_info) && tick_stream.length === 10;\n\n    let markers = [];\n    if (contract_info) {\n        const end_time = getEndTime(contract_info);\n        const chart_type = getChartType(contract_info.date_start, end_time, is_beta_chart);\n\n        if (contract_info.tick_count) {\n            const tick_markers = createTickMarkers(contract_info, is_delayed_markers_update);\n            markers.push(...tick_markers);\n        } else if (chart_type !== 'candle') {\n            const spot_markers = Object.keys(marker_spots).map(type => marker_spots[type](contract_info));\n            markers.push(...spot_markers);\n        }\n        if (!should_show_10_last_ticks) {\n            // don't draw start/end lines if only 10 last ticks are displayed\n            const line_markers = Object.keys(marker_lines).map(type => marker_lines[type](contract_info));\n            markers.push(...line_markers);\n        }\n        markers = markers.filter(m => !!m);\n    }\n    markers.forEach(marker => {\n        const contract_id = contract_info.contract_id;\n        marker.react_key = `${contract_id}-${marker.type}`;\n    });\n\n    return markers;\n};\n\nconst marker_spots = {\n    [MARKER_TYPES_CONFIG.SPOT_ENTRY.type]: createMarkerSpotEntry,\n    [MARKER_TYPES_CONFIG.SPOT_EXIT.type]: createMarkerSpotExit,\n};\n\nconst marker_lines = {\n    [MARKER_TYPES_CONFIG.LINE_START.type]: createMarkerStartTime,\n    [MARKER_TYPES_CONFIG.LINE_END.type]: createMarkerEndTime,\n    [MARKER_TYPES_CONFIG.LINE_PURCHASE.type]: createMarkerPurchaseTime,\n};\n\nconst addLabelAlignment = (tick, idx, arr) => {\n    if (idx > 0 && arr.length) {\n        const prev_tick = arr[idx - 1];\n\n        if (+tick > +prev_tick.tick) tick.align_label = 'top';\n        if (+tick.tick < +prev_tick.tick) tick.align_label = 'bottom';\n        if (+tick.tick === +prev_tick.tick) tick.align_label = prev_tick.align_label;\n    }\n\n    return tick;\n};\n\nexport const createTickMarkers = (contract_info, is_delayed_markers_update) => {\n    const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n    const is_smarttrader_contract = isSmartTraderContract(contract_info.contract_type);\n    const is_accu_contract_closed = is_accumulator && !isOpen(contract_info);\n    const available_ticks = (is_accumulator && contract_info.audit_details?.all_ticks) || contract_info.tick_stream;\n    const tick_stream = unique(available_ticks, 'epoch').map(addLabelAlignment);\n    const result = [];\n\n    if (is_accu_contract_closed) {\n        const { exit_tick_time, tick_stream: ticks } = contract_info || {};\n        if (exit_tick_time && tick_stream.every(({ epoch }) => epoch !== exit_tick_time)) {\n            // sometimes exit_tick is present in tick_stream but missing from audit_details\n            tick_stream.push(ticks[ticks.length - 1]);\n        }\n        const exit_tick_count = tick_stream.findIndex(({ epoch }) => epoch === exit_tick_time) + 1;\n        tick_stream.length = exit_tick_count > 0 ? exit_tick_count : tick_stream.length;\n    }\n\n    tick_stream.forEach((tick, idx) => {\n        const isEntrySpot = _tick => +_tick.epoch === contract_info.entry_tick_time;\n        const is_entry_spot =\n            +tick.epoch !== contract_info.exit_tick_time && (is_accumulator ? isEntrySpot(tick) : idx === 0);\n        // accumulators entry spot will be missing from tick_stream when contract is lasting for longer than 10 ticks\n        const entry_spot_index = is_accumulator ? tick_stream.findIndex(isEntrySpot) : 0;\n        const is_middle_spot = idx > entry_spot_index && +tick.epoch !== +contract_info.exit_tick_time;\n        const isExitSpot = (_tick, _idx) =>\n            +_tick.epoch === +contract_info.exit_tick_time ||\n            getSpotCount(contract_info, _idx) === contract_info.tick_count;\n        const is_exit_spot = isExitSpot(tick, idx);\n        const is_current_last_spot = idx === tick_stream.length - 1;\n        const exit_spot_index = tick_stream.findIndex(isExitSpot);\n        const is_accu_current_last_spot = is_accumulator && !is_exit_spot && is_current_last_spot;\n        const is_accu_preexit_spot =\n            is_accumulator && (is_accu_contract_closed ? idx === exit_spot_index - 1 : idx === tick_stream.length - 2);\n\n        let marker_config;\n        if (is_entry_spot) {\n            marker_config = createMarkerSpotEntry(contract_info);\n        } else if (is_middle_spot) {\n            marker_config = createMarkerSpotMiddle(contract_info, tick, idx);\n        } else if (is_exit_spot && !is_accu_current_last_spot) {\n            tick.align_label = 'top'; // force exit spot label to be 'top' to avoid overlapping\n            marker_config = createMarkerSpotExit(contract_info, tick, idx);\n        }\n        if (is_smarttrader_contract && is_middle_spot) {\n            const spot_className = marker_config.content_config.spot_className;\n            marker_config.content_config.spot_className = `${spot_className} ${spot_className}--smarttrader-contract-middle`;\n            if (!is_current_last_spot) {\n                marker_config.content_config.is_value_hidden = true;\n            }\n        }\n        if (is_accumulator) {\n            if ((is_accu_current_last_spot || is_exit_spot) && !is_accu_contract_closed) return;\n            if (marker_config && (is_middle_spot || is_exit_spot)) {\n                const should_highlight_previous_spot =\n                    is_accu_preexit_spot && (!is_delayed_markers_update || is_accu_contract_closed);\n                const spot_className = marker_config.content_config.spot_className;\n                marker_config.content_config.spot_className = `${spot_className} ${spot_className}--accumulator${\n                    is_exit_spot ? '-exit' : `-middle${should_highlight_previous_spot ? '--preexit' : ''}`\n                }`;\n            }\n        }\n        if (marker_config) {\n            result.push(marker_config);\n        }\n    });\n    return result;\n};\n\nconst dark_theme = {\n    bg: '#0e0e0e',\n    fg: '#ffffff',\n    grey_border: '#6e6e6e',\n    lost: '#cc2e3d',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#00a79e',\n};\n\nconst light_theme = {\n    bg: '#ffffff',\n    fg: '#333333',\n    grey_border: '#999999',\n    lost: '#ec3f3f',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#4bb4b3',\n};\n\nfunction getColor({ status, profit, is_dark_theme, is_vanilla }) {\n    const colors = is_dark_theme ? dark_theme : light_theme;\n    let color = colors[status || 'open'];\n    if (is_vanilla) {\n        if (status === 'open') return colors.open;\n        return colors[profit > 0 ? 'won' : 'lost'];\n    }\n    if (status === 'open' && profit) {\n        color = colors[profit > 0 ? 'won' : 'lost'];\n    }\n    return color;\n}\n\nconst currency_symbols = {\n    AUD: '\\u0041\\u0024',\n    EUR: '\\u20AC',\n    GBP: '\\u00A3',\n    JPY: '\\u00A5',\n    USD: '\\u0024',\n    BTC: '\\u20bf',\n    BCH: '\\ue901',\n    ETH: '\\u0045',\n    ETC: '\\ue900',\n    LTC: '\\u0141',\n    UST: '\\u20ae',\n};\n\nexport const getMarkerContractType = contract_info => {\n    const { tick_count, contract_type } = contract_info;\n\n    if (isAccumulatorContract(contract_type)) {\n        return 'AccumulatorContract';\n    } else if (isDigitContract(contract_type)) {\n        return 'DigitContract';\n    }\n\n    return tick_count > 0 ? 'TickContract' : 'NonTickContract';\n};\n\nexport const getStartText = contract_info => {\n    const { barrier, contract_type, currency, is_sold, profit, tick_count, tick_stream } = contract_info;\n    const is_non_tick_contract = !tick_count;\n\n    if (is_sold || isAccumulatorContract(contract_type)) return undefined;\n\n    // NonTickContract\n    if (is_non_tick_contract) {\n        if (!(profit && barrier)) return undefined;\n\n        const symbol = currency_symbols[currency] || '';\n        const decimal_places = getDecimalPlaces(currency);\n        const sign = profit < 0 ? '-' : profit > 0 ? '+' : ' ';\n        return `${sign}${symbol}${Math.abs(profit).toFixed(decimal_places)}`;\n    }\n\n    return `${Math.max(tick_stream.length - 1, 0)}/${tick_count}`;\n};\n\nexport const getTickStreamMarkers = (contract_info, barrier_price) => {\n    function getTicks() {\n        if (is_accumulator_contract) {\n            return [];\n        } else if (is_digit_contract) {\n            return [undefined, ...tick_stream.slice(-1)];\n        }\n        return tick_stream;\n    }\n\n    const { contract_type, tick_stream } = contract_info;\n    const is_digit_contract = isDigitContract(contract_type);\n    const is_accumulator_contract = isAccumulatorContract(contract_type);\n\n    const last_tick = tick_stream.length > 1 ? tick_stream[tick_stream.length - 1] : null;\n    const [, ...ticks] = getTicks();\n\n    const markers = ticks.map(t => ({\n        epoch: t.epoch,\n        quote: t.tick,\n        type: 'tick',\n    }));\n\n    if (!is_digit_contract && !is_accumulator_contract && last_tick) {\n        markers.push({\n            epoch: last_tick.epoch,\n            quote: last_tick.quote,\n            type: 'latestTick',\n        });\n        markers.push({\n            epoch: last_tick.epoch,\n            quote: barrier_price,\n            type: 'latestTickBarrier',\n        });\n    }\n\n    return markers;\n};\n\nexport function calculateMarker(contract_info, is_dark_theme, is_last_contract) {\n    if (!contract_info || isMultiplierContract(contract_info.contract_type)) {\n        return null;\n    }\n    const {\n        transaction_ids,\n        tick_stream,\n        date_start,\n        date_expiry,\n        entry_tick,\n        exit_tick,\n        entry_tick_time,\n        exit_tick_time,\n        contract_type,\n        tick_count,\n        barrier_count,\n        barrier,\n        high_barrier,\n        low_barrier,\n        shortcode,\n        status,\n        profit,\n        is_sold,\n    } = contract_info;\n    const is_accumulator_contract = isAccumulatorContract(contract_type);\n    const is_digit_contract = isDigitContract(contract_type);\n    const is_tick_contract = tick_count > 0;\n    const is_non_tick_contract = !is_tick_contract;\n    const is_high_low_contract = isHighLow({ shortcode });\n    const is_touch_contract = isTouchContract(contract_type);\n    const is_turbos = isTurbosContract(contract_type);\n\n    const end_time = is_tick_contract ? exit_tick_time : getEndTime(contract_info) || date_expiry;\n\n    let barrier_price;\n    if (is_digit_contract || is_accumulator_contract) {\n        barrier_price = +entry_tick;\n    } else if (+barrier_count === 1 && barrier) {\n        barrier_price = +barrier;\n    } else if (+barrier_count === 2 && high_barrier && low_barrier) {\n        barrier_price = +high_barrier;\n    }\n\n    if (!date_start) {\n        return null;\n    }\n    // if we have not yet received the first POC response\n    if (!transaction_ids) {\n        return {\n            type: getMarkerContractType(contract_info),\n            markers: [],\n        };\n    }\n\n    const markers = [];\n\n    const price = barrier_price || 0;\n\n    if (is_last_contract && !is_sold) {\n        markers.push({\n            epoch: date_start,\n            quote: is_digit_contract ? undefined : price,\n            type: 'activeStart',\n            text: localize('Start\\nTime'),\n        });\n    }\n\n    if (date_start && entry_tick) {\n        const color = is_non_tick_contract ? getColor({ status: 'open', profit }) : undefined;\n        markers.push({\n            epoch: date_start,\n            quote: is_digit_contract ? undefined : price,\n            type: 'start',\n            text: getStartText(contract_info),\n            color,\n        });\n    }\n\n    if (entry_tick) {\n        markers.push({\n            epoch: entry_tick_time,\n            quote: price,\n            type: 'entry',\n        });\n\n        if (is_high_low_contract || is_touch_contract || is_turbos) {\n            markers.push({\n                epoch: entry_tick_time,\n                quote: entry_tick,\n                type: 'entryTick',\n            });\n        }\n    }\n\n    if (end_time) {\n        markers.push({\n            epoch: end_time,\n            quote: price,\n            type: 'end',\n        });\n    }\n\n    if (exit_tick) {\n        markers.push({\n            epoch: exit_tick_time,\n            quote: +exit_tick,\n            type: 'exit',\n        });\n    } else if (tick_stream?.length > 0) {\n        markers.push(...getTickStreamMarkers(contract_info, barrier_price));\n    }\n\n    if (is_accumulator_contract && tick_stream?.length > 0) {\n        const contract_status = getContractStatus({ contract_type, profit, exit_tick_time, status });\n        const is_accu_contract_ended = contract_status !== 'open';\n\n        if (is_accu_contract_ended) {\n            const exit = tick_stream[tick_stream.length - 1];\n            const previous_tick = tick_stream[tick_stream.length - 2] || exit;\n\n            markers.push(\n                ...getAccumulatorBarrierMarkers({\n                    high_barrier,\n                    low_barrier,\n                    prev_epoch: previous_tick.epoch,\n                    is_dark_mode_on: is_dark_theme,\n                    contract_info,\n                })\n            );\n        }\n    }\n\n    return {\n        type: getMarkerContractType(contract_info),\n        markers,\n        color: getColor({\n            status,\n            profit: is_non_tick_contract || is_sold ? profit : undefined,\n            is_dark_theme,\n            is_vanilla: isVanillaContract(contract_type),\n        }),\n    };\n}\n\nfunction getAccumulatorBarrierMarkers({\n    contract_info,\n    high_barrier,\n    low_barrier,\n    is_accumulator_trade_without_contract = false,\n    is_dark_theme,\n    has_crossed_accu_barriers,\n    barrier_spot_distance,\n    prev_epoch: epoch,\n}) {\n    const { contract_type, profit, exit_tick_time, status, is_sold } = contract_info || {};\n\n    const contract_status = getContractStatus({ contract_type, profit, exit_tick_time, status });\n    const is_accu_contract_ended = contract_status !== 'open';\n\n    const getStatus = () => {\n        if (has_crossed_accu_barriers || contract_status === 'lost') {\n            return 'lost';\n        } else if (is_accumulator_trade_without_contract) {\n            return 'open';\n        }\n\n        return 'won';\n    };\n\n    const barrier_color = getColor({\n        status: getStatus(),\n        is_dark_theme,\n    });\n\n    const tick_color = is_accumulator_trade_without_contract\n        ? getColor({ status: 'fg', is_dark_theme })\n        : getColor({\n              is_dark_theme,\n              status: contract_status,\n              profit: is_sold || is_accu_contract_ended ? profit : null,\n          });\n\n    const markers = [\n        {\n            epoch,\n            quote: +high_barrier,\n            type: 'highBarrier',\n            color: barrier_color,\n            text: barrier_spot_distance ? `+${barrier_spot_distance}` : '',\n        },\n        {\n            epoch,\n            quote: +low_barrier,\n            type: 'lowBarrier',\n            color: barrier_color,\n            text: barrier_spot_distance ? `-${barrier_spot_distance}` : '',\n        },\n        {\n            epoch,\n            type: 'previousTick',\n            color: tick_color,\n        },\n    ];\n\n    return markers;\n}\n\nexport function getAccumulatorMarkers({\n    prev_epoch,\n    high_barrier,\n    low_barrier,\n    is_accumulator_trade_without_contract = false,\n    has_crossed_accu_barriers = false,\n    is_dark_theme,\n    contract_info,\n    in_contract_details = false,\n    barrier_spot_distance,\n}) {\n    const markers = getAccumulatorBarrierMarkers({\n        contract_info,\n        high_barrier,\n        low_barrier,\n        is_accumulator_trade_without_contract,\n        is_dark_theme,\n        has_crossed_accu_barriers,\n        barrier_spot_distance,\n        prev_epoch,\n    });\n\n    return {\n        type: 'AccumulatorContract',\n        markers,\n        props: {\n            hasPersistentBorders: in_contract_details,\n        },\n    };\n}\n","import { action, extendObservable, observable, toJS, makeObservable, runInAction } from 'mobx';\nimport {\n    isAccumulatorContract,\n    isDigitContract,\n    isEnded,\n    isEqualObject,\n    isMultiplierContract,\n    isOpen,\n    isTurbosContract,\n    getDigitInfo,\n    getDisplayStatus,\n    WS,\n    getContractUpdateConfig,\n    getContractValidationRules,\n    BARRIER_LINE_STYLES,\n    DEFAULT_SHADES,\n    isBarrierSupported,\n    getAccuBarriersDefaultTimeout,\n    getAccuBarriersForContractDetails,\n    getEndTime,\n} from '@deriv/shared';\nimport { getChartConfig } from './Helpers/logic';\nimport { setLimitOrderBarriers, getLimitOrder } from './Helpers/limit-orders';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport { createChartMarkers, calculateMarker, getAccumulatorMarkers } from './Helpers/chart-markers';\nimport BaseStore from './base-store';\n\nexport default class ContractStore extends BaseStore {\n    constructor(root_store, { contract_id }) {\n        super({\n            root_store,\n            validation_rules: getContractValidationRules(),\n        });\n\n        makeObservable(this, {\n            accu_high_barrier: observable,\n            accu_low_barrier: observable,\n            accumulator_previous_spot_time: observable,\n            cached_barriers_data: observable,\n            digits_info: observable,\n            sell_info: observable,\n            contract_config: observable.ref,\n            display_status: observable,\n            is_ended: observable,\n            is_digit_contract: observable,\n            error_message: observable,\n            contract_info: observable.ref,\n            is_static_chart: observable,\n            end_time: observable,\n            contract_update_take_profit: observable,\n            contract_update_stop_loss: observable,\n            has_contract_update_take_profit: observable,\n            has_contract_update_stop_loss: observable,\n            contract_update_history: observable.ref,\n            margin: observable,\n            barriers_array: observable.shallow,\n            markers_array: observable.shallow,\n            marker: observable.ref,\n            populateConfig: action.bound,\n            populateContractUpdateConfig: action.bound,\n            populateContractUpdateHistory: action.bound,\n            clearContractUpdateConfigValues: action.bound,\n            onChange: action.bound,\n            updateLimitOrder: action.bound,\n            getContractsArray: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.contract_id = contract_id;\n    }\n\n    // --- Observable properties ---\n    digits_info = observable.object({});\n    sell_info = observable.object({});\n\n    contract_config = {};\n    display_status = 'purchased';\n    is_ended = false;\n    is_digit_contract = false;\n\n    // TODO: see how to handle errors.\n    error_message = '';\n\n    contract_info = observable.object({});\n\n    is_static_chart = false;\n    end_time = null;\n\n    // Accumulator contract\n    accu_high_barrier = null;\n    accu_low_barrier = null;\n    accumulator_previous_spot_time = null;\n    cached_barriers_data = {};\n\n    // Multiplier contract update config\n    contract_update_take_profit = '';\n    contract_update_stop_loss = '';\n    has_contract_update_take_profit = false;\n    has_contract_update_stop_loss = false;\n    contract_update_history = [];\n    contract_update_config = {};\n\n    // ---- chart props\n    margin;\n    barriers_array = [];\n    markers_array = [];\n    marker = null;\n\n    // ---- Normal properties ---\n    is_ongoing_contract = false;\n\n    populateConfig(contract_info, is_last_contract = false) {\n        const prev_contract_info = this.contract_info;\n        this.contract_info = contract_info;\n        this.end_time = getEndTime(this.contract_info);\n        const { accu_high_barrier, accu_low_barrier } = getAccuBarriersForContractDetails(contract_info);\n        this.accu_high_barrier = accu_high_barrier;\n        this.accu_low_barrier = accu_low_barrier;\n        // TODO: don't update the barriers & markers if they are not changed\n        this.updateBarriersArray(contract_info, this.root_store.ui.is_dark_mode_on);\n        this.markers_array = createChartMarkers(this.contract_info, this.root_store.client.is_beta_chart);\n        this.marker = this.root_store.client.is_beta_chart\n            ? calculateMarker(this.contract_info, this.root_store.ui.is_dark_mode_on, is_last_contract, {\n                  accu_high_barrier,\n                  accu_low_barrier,\n              })\n            : calculate_marker(this.contract_info, { accu_high_barrier, accu_low_barrier });\n        this.contract_config = getChartConfig(this.contract_info, this.root_store.client.is_beta_chart);\n        this.display_status = getDisplayStatus(this.contract_info);\n        this.is_ended = isEnded(this.contract_info);\n        this.is_digit_contract = isDigitContract(this.contract_info.contract_type);\n        // API doesn't return barrier for digit contracts (sometimes), remove this check once resolved\n        if (!this.contract_info.barrier && prev_contract_info.barrier && this.is_digit_contract) {\n            this.contract_info.barrier = prev_contract_info.barrier;\n        }\n\n        if (this.is_digit_contract) {\n            extendObservable(this.digits_info, getDigitInfo(this.digits_info, this.contract_info));\n        }\n\n        // force to sell the expired contract, in order to remove from portfolio\n        if (+contract_info.is_settleable === 1 && !contract_info.is_sold) {\n            WS.send({ sell_expired: 1 });\n        }\n\n        const is_multiplier = isMultiplierContract(this.contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(this.contract_info.contract_type);\n        const is_turbos = isTurbosContract(this.contract_info.contract_type);\n\n        if ((is_accumulator || is_multiplier || is_turbos) && contract_info.contract_id && contract_info.limit_order) {\n            this.populateContractUpdateConfig(this.contract_info);\n        }\n    }\n\n    cacheProposalOpenContractResponse = response => {\n        const { contract_id } = response.proposal_open_contract;\n        WS.storage.set({ proposal_open_contract: 1, contract_id }, response);\n    };\n\n    populateContractUpdateConfig(response) {\n        const contract_update_config = getContractUpdateConfig(response);\n        if (!isEqualObject(this.contract_update_config, contract_update_config)) {\n            Object.assign(this, contract_update_config);\n            this.contract_update_config = contract_update_config;\n\n            const { contract_update, error } = response;\n            if (contract_update && !error) {\n                this.contract_info.limit_order = Object.assign(this.contract_info.limit_order || {}, contract_update);\n            }\n        }\n    }\n\n    populateContractUpdateHistory({ contract_update_history }) {\n        this.root_store.contract_replay.contract_store.contract_update_history = contract_update_history.sort(\n            (a, b) => b.order_date - a.order_date\n        );\n    }\n\n    updateBarriersArray(contract_info, is_dark_mode) {\n        const {\n            barrier,\n            contract_type,\n            current_spot_high_barrier,\n            current_spot_low_barrier,\n            current_spot_time,\n            high_barrier,\n            low_barrier,\n            status,\n            underlying,\n        } = contract_info || {};\n        const main_barrier = this.barriers_array?.[0];\n        if (isAccumulatorContract(contract_info.contract_type)) {\n            // even though updateBarriersArray is called both in DTrader & C.Details pages,\n            // the below code will delay Accumulator barriers and their labels only in Contract Details.\n            if (\n                this.cached_barriers_data.current_spot_high_barrier === current_spot_high_barrier &&\n                this.cached_barriers_data.current_spot_low_barrier === current_spot_low_barrier &&\n                this.cached_barriers_data.high_barrier === high_barrier &&\n                this.cached_barriers_data.low_barrier === low_barrier &&\n                this.cached_barriers_data.status === status\n            ) {\n                return;\n            }\n            if (!this.barriers_array.length) {\n                // Accumulators barrier range in C.Details consists of labels (this.barriers_array) and horizontal lines with shade (this.marker)\n                this.barriers_array = this.createBarriersArray(\n                    {\n                        ...contract_info,\n                        high_barrier: this.accu_high_barrier,\n                        low_barrier: this.accu_low_barrier,\n                    },\n                    is_dark_mode\n                );\n                this.marker = this.root_store.client.is_beta_chart\n                    ? calculateMarker(this.contract_info, this.root_store.ui.is_dark_mode_on, false, {\n                          accu_high_barrier: this.accu_high_barrier,\n                          accu_low_barrier: this.accu_low_barrier,\n                      })\n                    : calculate_marker(this.contract_info, {\n                          accu_high_barrier: this.accu_high_barrier,\n                          accu_low_barrier: this.accu_low_barrier,\n                      }); // this.marker is rendered as DelayedAccuBarriersMarker component\n                return;\n            }\n            setTimeout(\n                () =>\n                    runInAction(() => {\n                        if (contract_info) {\n                            if (isBarrierSupported(contract_type) && this.accu_high_barrier && this.accu_low_barrier) {\n                                // updating barrier labels in C.Details page\n                                main_barrier?.updateBarriers(this.accu_high_barrier, this.accu_low_barrier);\n                            }\n                            // this.markers_array contains tick markers & start/end vertical lines in C.Details page\n                            this.markers_array = createChartMarkers(\n                                contract_info,\n                                true,\n                                this.root_store.client.is_beta_chart\n                            );\n                            // this observable controls the update of DelayedAccuBarriersMarker in C.Details page\n                            this.accumulator_previous_spot_time = current_spot_time;\n                        }\n                    }),\n                isOpen(contract_info) ? getAccuBarriersDefaultTimeout(underlying) : 0\n            );\n            this.cached_barriers_data = {\n                current_spot_high_barrier,\n                current_spot_low_barrier,\n                high_barrier,\n                low_barrier,\n                status,\n            };\n            return;\n        }\n        if (!this.barriers_array.length) {\n            this.barriers_array = this.createBarriersArray(contract_info, is_dark_mode);\n            return;\n        }\n        if (contract_info) {\n            if (isBarrierSupported(contract_type) && (barrier || high_barrier)) {\n                main_barrier?.updateBarriers(barrier || high_barrier, low_barrier);\n            }\n            if (\n                contract_info.contract_id &&\n                contract_info.contract_id === this.root_store.contract_replay.contract_id\n            ) {\n                setLimitOrderBarriers({\n                    barriers: this.barriers_array,\n                    contract_info,\n                    contract_type,\n                    is_over: true,\n                });\n            }\n        }\n    }\n\n    createBarriersArray = contract_info => {\n        let barriers = [];\n        if (contract_info) {\n            const { contract_type, barrier, entry_spot, high_barrier: high, low_barrier } = contract_info;\n            const high_barrier = this.accu_high_barrier || barrier || high;\n            if (\n                isBarrierSupported(contract_type) &&\n                (high_barrier || (entry_spot && !isAccumulatorContract(contract_type)))\n            ) {\n                // create barrier only when it's available in response\n                const main_barrier = new ChartBarrierStore(\n                    high_barrier || entry_spot,\n                    this.accu_low_barrier || low_barrier,\n                    null,\n                    {\n                        line_style: !isAccumulatorContract(contract_type) && BARRIER_LINE_STYLES.SOLID,\n                        not_draggable: true,\n                        hideBarrierLine: isAccumulatorContract(contract_type),\n                        shade: isAccumulatorContract(contract_type) && DEFAULT_SHADES['2'],\n                    }\n                );\n\n                main_barrier.updateBarrierShade(true, contract_type);\n                barriers = [main_barrier];\n            }\n        }\n        return barriers;\n    };\n\n    clearContractUpdateConfigValues() {\n        Object.assign(this, getContractUpdateConfig(this.contract_info));\n        this.validation_errors.contract_update_stop_loss = [];\n        this.validation_errors.contract_update_take_profit = [];\n    }\n\n    onChange({ name, value }) {\n        this[name] = value;\n        this.validateProperty(name, this[name]);\n    }\n\n    updateLimitOrder() {\n        const limit_order =\n            isAccumulatorContract(this.contract_info.contract_type) ||\n            isTurbosContract(this.contract_info.contract_type)\n                ? { take_profit: getLimitOrder(this).take_profit }\n                : getLimitOrder(this);\n\n        WS.contractUpdate(this.contract_id, limit_order).then(response => {\n            if (response.error) {\n                this.root_store.common.setServicesError({\n                    type: response.msg_type,\n                    ...response.error,\n                });\n                return;\n            }\n\n            // Update contract store\n            this.populateContractUpdateConfig(response);\n            if (this.root_store.ui.is_history_tab_active) {\n                WS.contractUpdateHistory(this.contract_id).then(this.populateContractUpdateHistory);\n            }\n\n            // Update portfolio store\n            this.root_store.portfolio.populateContractUpdate(response, this.contract_id);\n        });\n    }\n\n    getContractsArray() {\n        const { contract_type, high_barrier, low_barrier, tick_stream: ticks } = this.contract_info;\n\n        if (!isAccumulatorContract(contract_type)) return [];\n\n        const exit = ticks[ticks.length - 1];\n        const previous_tick = ticks[ticks.length - 2] || exit;\n\n        if (!previous_tick) return [];\n\n        const contract_markers = getAccumulatorMarkers({\n            high_barrier,\n            low_barrier,\n            prev_epoch: previous_tick.epoch,\n            is_dark_mode_on: this.root_store.ui.is_dark_mode_on,\n            contract_info: this.contract_info,\n            in_contract_details: true,\n        });\n\n        return [contract_markers];\n    }\n}\n\nfunction calculate_marker(contract_info, { accu_high_barrier, accu_low_barrier }) {\n    if (!contract_info || isMultiplierContract(contract_info.contract_type)) {\n        return null;\n    }\n    const {\n        transaction_ids,\n        tick_stream,\n        contract_id,\n        date_start,\n        date_expiry,\n        entry_tick,\n        exit_tick,\n        entry_tick_time,\n        exit_tick_time,\n        contract_type,\n        tick_count,\n        barrier_count,\n        barrier,\n        high_barrier,\n        low_barrier,\n    } = contract_info;\n    const is_accumulator_contract = isAccumulatorContract(contract_type);\n    const is_digit_contract = isDigitContract(contract_type);\n    const ticks_epochs =\n        (is_accumulator_contract && tick_stream?.length === 10\n            ? [entry_tick_time, ...tick_stream.map(t => t.epoch).slice(1)]\n            : tick_stream?.map(t => t.epoch)) || [];\n    const ticks_epoch_array = tick_stream ? ticks_epochs : [];\n\n    // window.ci = toJS(contract_info);\n\n    let price_array = [];\n    if (is_digit_contract) {\n        price_array = [];\n    } else if (+barrier_count === 1 && barrier) {\n        price_array = [+barrier];\n    } else if (+barrier_count === 2 && high_barrier && low_barrier && !is_accumulator_contract) {\n        price_array = [+high_barrier, +low_barrier];\n    } else if (is_accumulator_contract && accu_high_barrier) {\n        price_array = [+accu_high_barrier, +accu_low_barrier];\n    }\n\n    if (entry_tick) {\n        price_array.push(entry_tick);\n    }\n    if (exit_tick) {\n        price_array.push(exit_tick);\n    }\n\n    if (!date_start) {\n        return null;\n    }\n    // if we have not yet received the first POC response\n    if (!transaction_ids) {\n        const type = is_digit_contract ? 'DigitContract' : 'TickContract';\n        return {\n            type,\n            contract_info: toJS(contract_info),\n            key: `${contract_id}-date_start`,\n            epoch_array: [date_start],\n            price_array,\n        };\n    }\n\n    if (tick_count >= 1) {\n        if (!isDigitContract(contract_type)) {\n            // TickContract\n            return {\n                contract_info: toJS(contract_info),\n                type: 'TickContract',\n                key: `${contract_id}-date_start`,\n                epoch_array: [date_start, ...ticks_epoch_array],\n                price_array,\n            };\n        }\n        // DigitContract\n        return {\n            contract_info: toJS(contract_info),\n            type: 'DigitContract',\n            key: `${contract_id}-date_start`,\n            epoch_array: [date_start, ...ticks_epoch_array],\n            price_array,\n        };\n    }\n    // NonTickContract\n    if (!tick_count) {\n        // getEndTime returns undefined when contract is running.\n        const end_time = getEndTime(contract_info) || date_expiry;\n        // the order of items in epoch_array matches the NonTickContract params.\n        const epoch_array = [date_start, end_time];\n        if (entry_tick_time) {\n            epoch_array.push(entry_tick_time);\n        }\n        if (exit_tick_time) {\n            epoch_array.push(exit_tick_time);\n        }\n        return {\n            contract_info: toJS(contract_info),\n            type: 'NonTickContract',\n            key: `${contract_id}-date_start`,\n            epoch_array,\n            price_array,\n        };\n    }\n    return null;\n}\n","import { action, observable, makeObservable, override } from 'mobx';\nimport { routes, isEmptyObject, isForwardStarting, WS, contractCancelled, contractSold } from '@deriv/shared';\nimport { Money } from '@deriv/components';\nimport { Analytics } from '@deriv/analytics';\nimport { localize } from '@deriv/translations';\nimport ContractStore from './contract-store';\nimport BaseStore from './base-store';\n\nexport default class ContractReplayStore extends BaseStore {\n    chart_state = '';\n    contract_store = { contract_info: {} };\n    // --- Observable properties ---\n    is_market_closed = false;\n    is_sell_requested = false;\n    has_error = false;\n    error_message = '';\n    error_code = '';\n    is_chart_loading = true;\n    is_chart_scaling = false;\n    is_forward_starting = false;\n    // ---- chart props\n    margin;\n\n    // ---- Replay Contract Config ----\n    contract_id;\n    indicative_status;\n    contract_info = observable.object({});\n    is_static_chart = false;\n\n    // ---- Normal properties ---\n    is_ongoing_contract = false;\n    prev_indicative = 0;\n\n    contract_update = observable.object({});\n    // TODO: you view a contract and then share that link with another person,\n    // when the person opens, try to switch account they get the error\n    // Forget old proposal_open_contract stream on account switch from ErrorComponent\n    should_forget_first = false;\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n    handleSubscribeProposalOpenContract = async (contract_id, cb) => {\n        // expired contracts are cached and we can get the poc response from local storage\n        const is_cached = await WS.storage.has({ proposal_open_contract: 1, contract_id });\n        if (is_cached) {\n            WS.storage.proposalOpenContract({ contract_id }).then(cb);\n            return;\n        }\n\n        if (this.should_forget_first) {\n            // TODO; don't forget all ever\n            await WS.forgetAll('proposal_open_contract');\n            this.should_forget_first = false;\n        }\n\n        this.subscriber = WS.subscribeProposalOpenContract(contract_id, cb);\n    };\n\n    subscribeProposalOpenContract = () => {\n        WS.wait('authorize').then(() => {\n            this.handleSubscribeProposalOpenContract(this.contract_id, this.populateConfig);\n        });\n    };\n\n    constructor(root_store) {\n        // TODO: [mobx-undecorate] verify the constructor arguments and the arguments of this automatically generated super call\n        super(root_store);\n\n        makeObservable(this, {\n            chart_state: observable,\n            contract_store: observable,\n            is_market_closed: observable,\n            is_sell_requested: observable,\n            has_error: observable,\n            error_message: observable,\n            error_code: observable,\n            is_chart_loading: observable,\n            is_chart_scaling: observable,\n            is_forward_starting: observable,\n            margin: observable,\n            contract_id: observable,\n            indicative_status: observable,\n            contract_info: observable.ref,\n            is_static_chart: observable,\n            contract_update: observable.ref,\n            onMount: action.bound,\n            onUnmount: override,\n            populateConfig: action.bound,\n            updateMargin: action.bound,\n            chartStateChange: action.bound,\n            onClickCancel: action.bound,\n            onClickSell: action.bound,\n            handleSell: action.bound,\n            removeErrorMessage: action.bound,\n        });\n\n        this.root_store = root_store;\n    }\n\n    onMount(contract_id) {\n        if (contract_id) {\n            this.contract_id = contract_id;\n            this.contract_store = new ContractStore(this.root_store, { contract_id });\n            this.subscribeProposalOpenContract();\n            WS.setOnReconnect(() => {\n                if (!this.root_store.client.is_switching) {\n                    this.subscribeProposalOpenContract();\n                }\n            });\n        }\n    }\n\n    onUnmount() {\n        this.forgetProposalOpenContract(this.contract_id, this.populateConfig);\n        this.contract_id = null;\n        this.is_ongoing_contract = false;\n        this.is_static_chart = false;\n        this.is_chart_loading = true;\n        this.contract_info = {};\n        this.indicative_status = null;\n        this.prev_indicative = 0;\n        this.chart_state = '';\n        this.root_store.ui.toggleHistoryTab(false);\n        WS.removeOnReconnect();\n    }\n\n    populateConfig(response) {\n        if (!this.switch_account_listener) return;\n\n        if ('error' in response) {\n            const { code, message } = response.error;\n            this.has_error = true;\n            this.is_chart_loading = false;\n            this.error_message = message;\n            this.error_code = code;\n            return;\n        }\n        if (isEmptyObject(response.proposal_open_contract)) {\n            this.has_error = true;\n            this.error_message = localize(\n                \"Sorry, you can't view this contract because it doesn't belong to this account.\"\n            );\n            this.should_forget_first = true;\n            this.is_chart_loading = false;\n            return;\n        }\n        if (+response.proposal_open_contract.contract_id !== this.contract_id) return;\n\n        this.contract_info = response.proposal_open_contract;\n        this.contract_update = response.proposal_open_contract.limit_order;\n\n        // Add indicative status for contract\n        const prev_indicative = this.prev_indicative;\n        const new_indicative = +this.contract_info.bid_price;\n        if (new_indicative > prev_indicative) {\n            this.indicative_status = 'profit';\n        } else if (new_indicative < prev_indicative) {\n            this.indicative_status = 'loss';\n        } else {\n            this.indicative_status = null;\n        }\n        this.prev_indicative = new_indicative;\n\n        const is_forward_starting =\n            !!this.contract_info.is_forward_starting ||\n            isForwardStarting(this.contract_info.shortcode, this.contract_info.purchase_time);\n\n        this.is_forward_starting = is_forward_starting;\n\n        // update the contract_store here passing contract_info\n        this.contract_store.populateConfig(this.contract_info);\n\n        const end_time = this.contract_store.end_time;\n\n        this.updateMargin((end_time || this.contract_info.date_expiry) - this.contract_info.date_start);\n\n        if (!end_time) this.is_ongoing_contract = true;\n\n        // finish contracts if end_time exists\n        if (end_time) {\n            if (!this.is_ongoing_contract) {\n                this.is_static_chart = true;\n            } else {\n                this.is_static_chart = false;\n            }\n        }\n\n        if (this.contract_info.is_sold) {\n            this.contract_store.cacheProposalOpenContractResponse(response);\n        }\n    }\n\n    updateMargin(duration) {\n        const granularity = this.contract_store.contract_config.granularity;\n\n        this.margin = Math.floor(!granularity ? Math.max(300, (30 * duration) / (60 * 60) || 0) : 3 * granularity);\n    }\n\n    chartStateChange(state, option) {\n        this.chart_state = state;\n        const market_close_prop = 'isClosed';\n\n        // SmartChart has a weird interaction for getting scale 1:1,\n        // the process of loading an expired contract should follow this,\n        // show loading, first load the chart, then add the endEpoch then request for\n        // scale 1:1 and then wait till chart perform the scale 1:1 then\n        // hide the loading.\n        switch (state) {\n            case 'INITIAL':\n                this.is_chart_scaling = false;\n                // this is for deriv resizing from desktop to mobile,\n                // that show the loading till the chart reflect complete\n                if (!this.is_chart_loading) this.is_chart_loading = true;\n                break;\n            case 'READY':\n                setTimeout(\n                    action(() => (this.is_chart_scaling = true)),\n                    10\n                );\n                break;\n            case 'SCROLL_TO_LEFT':\n                // this Delay is for when the chart try to sacle 1:1 and we want to hide\n                // scale 1:1 jumping from the user\n                setTimeout(\n                    action(() => {\n                        this.is_chart_loading = false;\n                    }),\n                    20\n                );\n                break;\n            case 'MARKET_STATE_CHANGE':\n                if (option && market_close_prop in option) {\n                    this.is_market_closed = option[market_close_prop];\n                }\n                break;\n            default:\n        }\n    }\n\n    onClickCancel(contract_id) {\n        if (contract_id) {\n            WS.cancelContract(contract_id).then(response => {\n                if (response.error) {\n                    this.root_store.common.setServicesError({\n                        type: response.msg_type,\n                        ...response.error,\n                    });\n                } else {\n                    this.root_store.notifications.addNotificationMessage(contractCancelled());\n                }\n            });\n        }\n    }\n\n    onClickSell(contract_id) {\n        const { bid_price } = this.contract_info;\n        if (contract_id && (bid_price || bid_price === 0)) {\n            this.is_sell_requested = true;\n            WS.sell(contract_id, bid_price).then(this.handleSell);\n        }\n    }\n\n    handleSell(response) {\n        if (response.error) {\n            // If unable to sell due to error, give error via pop up if not in contract mode\n            this.is_sell_requested = false;\n            this.root_store.common.setServicesError({\n                type: response.msg_type,\n                ...response.error,\n            });\n        } else if (!response.error && response.sell) {\n            this.is_sell_requested = false;\n            // update contract store sell info after sell\n            this.sell_info = {\n                sell_price: response.sell.sold_for,\n                transaction_id: response.sell.transaction_id,\n            };\n            this.root_store.notifications.addNotificationMessage(\n                contractSold(this.root_store.client.currency, response.sell.sold_for, Money)\n            );\n\n            Analytics.trackEvent('ce_reports_form', {\n                action: 'close_contract',\n                form_name: 'default',\n                subform_name: 'contract_details_form',\n            });\n        }\n    }\n\n    forgetProposalOpenContract = () => {\n        if (this.subscriber) {\n            this.subscriber.unsubscribe();\n            delete this.subscriber;\n        }\n    };\n\n    removeErrorMessage() {\n        this.error_message = '';\n        this.has_error = false;\n    }\n\n    setAccountSwitcherListener = (contract_id, history) => {\n        this.onSwitchAccount(() => this.accountSwitcherListener(contract_id, history));\n    };\n\n    accountSwitcherListener = (contract_id, history) => {\n        // if contract had an error on the previous account\n        // try fetching it again for the new account\n        // in case it belongs to this account\n        if (this.has_error) {\n            this.removeErrorMessage();\n            this.onMount(contract_id);\n        } else if (!this.root_store.common.is_language_changing) {\n            history.push(routes.reports);\n        }\n        return Promise.resolve();\n    };\n\n    removeAccountSwitcherListener = () => {\n        this.disposeSwitchAccount();\n    };\n}\n","import { action, computed, makeObservable, observable, override, reaction, runInAction, toJS } from 'mobx';\n\nimport {\n    getAccuBarriersDTraderTimeout,\n    getContractTypesConfig,\n    isAccumulatorContract,\n    isAccumulatorContractOpen,\n    isCallPut,\n    isDesktop,\n    isEnded,\n    isHighLow,\n    isMobile,\n    isMultiplierContract,\n    isTurbosContract,\n    isVanillaContract,\n    LocalStore,\n    switch_to_tick_chart,\n    getLastContractMarkerIndex,\n} from '@deriv/shared';\n\nimport BaseStore from './base-store';\nimport { getAccumulatorMarkers } from './Helpers/chart-markers';\nimport ContractStore from './contract-store';\n\nexport default class ContractTradeStore extends BaseStore {\n    // --- Observable properties ---\n    contracts = [];\n    contracts_map = {};\n    has_error = false;\n    error_message = '';\n\n    // Chart specific observables\n    granularity = +LocalStore.get('contract_trade.granularity') || 0;\n    chart_type = this.root_store.client.is_beta_chart\n        ? LocalStore.get('contract_trade.chart_style') || 'line'\n        : LocalStore.get('contract_trade.chart_type') || 'mountain';\n    prev_chart_type = '';\n    prev_granularity = null;\n\n    // Accumulator barriers data:\n    accu_barriers_timeout_id = null;\n    accumulator_barriers_data = {};\n    accumulator_contract_barriers_data = {};\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            accu_barriers_timeout_id: observable,\n            accumulator_barriers_data: observable.struct,\n            accumulator_contract_barriers_data: observable.struct,\n            clearAccumulatorBarriersData: action.bound,\n            contracts: observable.shallow,\n            has_crossed_accu_barriers: computed,\n            has_error: observable,\n            error_message: observable,\n            granularity: observable,\n            chart_type: observable,\n            updateAccumulatorBarriersData: action.bound,\n            updateChartType: action.bound,\n            updateGranularity: action.bound,\n            markers_array: computed,\n            filtered_contracts: computed,\n            addContract: action.bound,\n            removeContract: action.bound,\n            accountSwitchListener: action.bound,\n            onUnmount: override,\n            prev_chart_type: observable,\n            prev_granularity: observable,\n            updateProposal: action.bound,\n            last_contract: computed,\n            clearError: action.bound,\n            getContractById: action.bound,\n            savePreviousChartMode: action.bound,\n            setNewAccumulatorBarriersData: action.bound,\n        });\n\n        this.root_store = root_store;\n        this.onSwitchAccount(this.accountSwitchListener);\n\n        reaction(\n            () => this.last_contract.contract_info,\n            () => {\n                if (!isAccumulatorContract(this.last_contract.contract_info?.contract_type)) return;\n                const {\n                    barrier_spot_distance,\n                    current_spot,\n                    current_spot_time,\n                    current_spot_high_barrier,\n                    current_spot_low_barrier,\n                    is_sold,\n                    underlying,\n                } = this.last_contract.contract_info || {};\n                if (current_spot && current_spot_high_barrier && !is_sold) {\n                    this.updateAccumulatorBarriersData({\n                        barrier_spot_distance,\n                        current_spot_time,\n                        accumulators_high_barrier: current_spot_high_barrier,\n                        accumulators_low_barrier: current_spot_low_barrier,\n                        should_update_contract_barriers: true,\n                        underlying,\n                    });\n                } else if (!isAccumulatorContractOpen(this.last_contract.contract_info)) {\n                    this.clearAccumulatorBarriersData(true, false);\n                }\n            }\n        );\n    }\n\n    // -------------------\n    // ----- Actions -----\n    // -------------------\n\n    clearAccumulatorBarriersData(should_clear_contract_data_only, should_clear_timeout = true) {\n        if (this.accu_barriers_timeout_id && should_clear_timeout) clearTimeout(this.accu_barriers_timeout_id);\n        if (!isAccumulatorContractOpen(this.last_contract.contract_info)) this.accumulator_contract_barriers_data = {};\n        if (!should_clear_contract_data_only) {\n            this.accumulator_barriers_data = {};\n        }\n    }\n\n    setNewAccumulatorBarriersData(new_barriers_data, should_update_contract_barriers) {\n        if (should_update_contract_barriers) {\n            this.accumulator_contract_barriers_data = {\n                ...this.accumulator_contract_barriers_data,\n                ...new_barriers_data,\n            };\n        } else {\n            this.accumulator_barriers_data = {\n                ...this.accumulator_barriers_data,\n                ...new_barriers_data,\n            };\n        }\n    }\n\n    updateAccumulatorBarriersData({\n        accumulators_high_barrier,\n        accumulators_low_barrier,\n        barrier_spot_distance,\n        current_spot,\n        current_spot_time,\n        prev_spot_time,\n        should_update_contract_barriers,\n        underlying,\n    }) {\n        if (current_spot) {\n            const ticks_history_prev_spot_time = prev_spot_time ?? this.accumulator_barriers_data.current_spot_time;\n            // update current tick coming from ticks_history while skipping an update for duplicate data\n            if (current_spot_time === ticks_history_prev_spot_time) return;\n            const current_spot_data = {\n                current_spot,\n                current_spot_time,\n                ticks_history_prev_spot_time,\n                tick_update_timestamp: Date.now(),\n            };\n            this.setNewAccumulatorBarriersData(current_spot_data, true);\n            this.setNewAccumulatorBarriersData(current_spot_data);\n            return;\n        }\n        const delayed_barriers_data = {\n            accumulators_high_barrier,\n            accumulators_low_barrier,\n            barrier_spot_distance,\n            should_update_contract_barriers,\n            proposal_prev_spot_time: current_spot_time,\n        };\n        if (\n            (this.accumulator_barriers_data.current_spot_time &&\n                this.accumulator_barriers_data.current_spot_time !== current_spot_time &&\n                !this.accumulator_barriers_data.accumulators_high_barrier) ||\n            Object.keys(delayed_barriers_data).every(key =>\n                should_update_contract_barriers\n                    ? this.accumulator_contract_barriers_data[key] === delayed_barriers_data[key]\n                    : this.accumulator_barriers_data[key] === delayed_barriers_data[key]\n            )\n        ) {\n            // skip an update for duplicate data, or when a tick, which current barriers are related to, was not returned from ticks_history\n            return;\n        }\n        // update barriers, which are returned from proposal/proposal_open_contract, after timeout on DTrader page\n        const tick_update_timestamp = should_update_contract_barriers\n            ? this.accumulator_contract_barriers_data.tick_update_timestamp\n            : this.accumulator_barriers_data.tick_update_timestamp;\n        if (document.hidden) {\n            clearTimeout(this.accu_barriers_timeout_id);\n            this.setNewAccumulatorBarriersData(delayed_barriers_data, should_update_contract_barriers);\n            return;\n        }\n        this.accu_barriers_timeout_id = setTimeout(\n            () => {\n                runInAction(() => {\n                    this.setNewAccumulatorBarriersData(delayed_barriers_data, should_update_contract_barriers);\n                });\n            },\n            getAccuBarriersDTraderTimeout({\n                barriers_update_timestamp: Date.now(),\n                has_default_timeout: this.accumulator_barriers_data.current_spot_time !== current_spot_time,\n                tick_update_timestamp,\n                underlying,\n            })\n        );\n    }\n\n    updateChartType(type) {\n        if (this.root_store.client.is_beta_chart) {\n            LocalStore.set('contract_trade.chart_style', type);\n        } else {\n            LocalStore.set('contract_trade.chart_type', type);\n        }\n        this.chart_type = type;\n    }\n\n    updateGranularity(granularity) {\n        const tick_chart_types = this.root_store.client.is_beta_chart\n            ? ['line', 'candles', 'hollow', 'ohlc']\n            : ['mountain', 'line', 'colored_line', 'spline', 'baseline'];\n\n        if (granularity === 0 && tick_chart_types.indexOf(this.chart_type) === -1) {\n            this.chart_type = this.root_store.client.is_beta_chart ? 'line' : 'mountain';\n        }\n\n        LocalStore.set('contract_trade.granularity', granularity);\n        this.granularity = granularity;\n        if (this.granularity === 0) {\n            this.root_store.notifications.removeNotificationMessage(switch_to_tick_chart);\n        }\n    }\n\n    savePreviousChartMode(chart_type, granularity) {\n        this.prev_chart_type = chart_type;\n        this.prev_granularity = granularity;\n    }\n\n    applicable_contracts = () => {\n        const { contract_type: trade_type, symbol: underlying } =\n            JSON.parse(sessionStorage.getItem('trade_store')) || {};\n\n        if (!trade_type || !underlying) {\n            return [];\n        }\n        let { trade_types } = getContractTypesConfig()[trade_type];\n        const is_call_put = isCallPut(trade_type);\n        if (is_call_put) {\n            // treat CALLE/PUTE and CALL/PUT the same\n            trade_types = ['CALLE', 'PUTE', 'CALL', 'PUT'];\n        } else if (isTurbosContract(trade_type)) {\n            //to show both Long and Short recent contracts on DTrader chart\n            trade_types = ['TURBOSLONG', 'TURBOSSHORT'];\n        } else if (isVanillaContract(trade_type)) {\n            //to show both Call and Put recent contracts on DTrader chart\n            trade_types = ['VANILLALONGCALL', 'VANILLALONGPUT'];\n        }\n\n        return this.contracts\n            .filter(c => c.contract_info.underlying === underlying)\n            .filter(c => {\n                const info = c.contract_info;\n                const has_multiplier_contract_ended =\n                    isMultiplierContract(info.contract_type) && isEnded(c.contract_info);\n                // filter multiplier contract which has ended\n                return !has_multiplier_contract_ended;\n            })\n            .filter(c => {\n                const info = c.contract_info;\n\n                const trade_type_is_supported = trade_types.indexOf(info.contract_type) !== -1;\n                // both high_low & rise_fall have the same contract_types in POC response\n                // entry_spot=barrier means it is rise_fall contract (blame the api)\n                if (trade_type_is_supported && is_call_put && ((info.barrier && info.entry_tick) || info.shortcode)) {\n                    if (`${+info.entry_tick}` === `${+info.barrier}` && !isHighLow(info)) {\n                        return trade_type === 'rise_fall' || trade_type === 'rise_fall_equal';\n                    }\n                    return trade_type === 'high_low';\n                }\n                return trade_type_is_supported;\n            });\n    };\n\n    get has_crossed_accu_barriers() {\n        const { symbol } = JSON.parse(sessionStorage.getItem('trade_store')) || {};\n        const { current_spot: contract_current_spot, entry_spot, underlying } = this.last_contract.contract_info || {};\n        const {\n            accumulators_high_barrier,\n            accumulators_low_barrier,\n            current_spot,\n            proposal_prev_spot_time,\n            ticks_history_prev_spot_time,\n        } =\n            (isAccumulatorContractOpen(this.last_contract.contract_info)\n                ? this.accumulator_contract_barriers_data\n                : this.accumulator_barriers_data) || {};\n        const is_knock_out =\n            current_spot &&\n            accumulators_high_barrier &&\n            accumulators_low_barrier &&\n            (current_spot >= accumulators_high_barrier || current_spot <= accumulators_low_barrier);\n        const is_relevant_barrier =\n            ticks_history_prev_spot_time && ticks_history_prev_spot_time === proposal_prev_spot_time;\n        const should_highlight_contract_barriers =\n            entry_spot && entry_spot !== contract_current_spot && underlying === symbol;\n        return !!(\n            is_knock_out &&\n            is_relevant_barrier &&\n            (!isAccumulatorContractOpen(this.last_contract.contract_info) || should_highlight_contract_barriers)\n        );\n    }\n\n    get filtered_contracts() {\n        return this.applicable_contracts();\n    }\n\n    get markers_array() {\n        let markers = [];\n        const { contract_type: trade_type } = JSON.parse(sessionStorage.getItem('trade_store')) || {};\n        markers = this.applicable_contracts()\n            .map(c => c.marker)\n            .filter(m => m)\n            .map(m => toJS(m));\n\n        if (!this.root_store.client.is_beta_chart) {\n            if (markers.length) {\n                markers[getLastContractMarkerIndex(markers)].is_last_contract = true;\n            }\n        }\n        const { current_spot_time, entry_tick_time, exit_tick_time } = this.last_contract.contract_info || {};\n\n        const should_show_poc_barriers =\n            (entry_tick_time && entry_tick_time !== current_spot_time) ||\n            (exit_tick_time && current_spot_time <= exit_tick_time);\n\n        const { accumulators_high_barrier, accumulators_low_barrier, barrier_spot_distance, proposal_prev_spot_time } =\n            (isAccumulatorContractOpen(this.last_contract.contract_info) &&\n                should_show_poc_barriers &&\n                this.accumulator_contract_barriers_data?.accumulators_high_barrier &&\n                this.accumulator_contract_barriers_data) ||\n            this.accumulator_barriers_data ||\n            {};\n        if (trade_type === 'accumulator' && proposal_prev_spot_time && accumulators_high_barrier) {\n            if (this.root_store.client.is_beta_chart) {\n                const is_open = isAccumulatorContractOpen(this.last_contract.contract_info);\n                markers.push(\n                    getAccumulatorMarkers({\n                        high_barrier: accumulators_high_barrier,\n                        low_barrier: accumulators_low_barrier,\n                        barrier_spot_distance,\n                        prev_epoch: proposal_prev_spot_time,\n                        has_crossed_accu_barriers: this.has_crossed_accu_barriers,\n                        is_dark_theme: this.root_store.ui.is_dark_mode_on,\n                        contract_info: is_open ? this.last_contract.contract_info : {},\n                        is_accumulator_trade_without_contract: !is_open || !entry_tick_time,\n                    })\n                );\n            }\n            if (!this.root_store.client.is_beta_chart) {\n                markers.push({\n                    type: 'TickContract',\n                    contract_info: {\n                        accu_barriers_difference: barrier_spot_distance && {\n                            top: `+${barrier_spot_distance}`,\n                            bottom: `-${barrier_spot_distance}`,\n                            font: isMobile() ? '10px IBM Plex Sans' : '14px IBM Plex Sans',\n                        },\n                        has_crossed_accu_barriers: this.has_crossed_accu_barriers,\n                        is_accumulator_trade_without_contract:\n                            !isAccumulatorContractOpen(this.last_contract.contract_info) || !entry_tick_time,\n                    },\n                    key: 'dtrader_accumulator_barriers',\n                    price_array: [accumulators_high_barrier, accumulators_low_barrier],\n                    epoch_array: [proposal_prev_spot_time],\n                });\n            }\n        }\n        return markers;\n    }\n\n    addContract({\n        barrier,\n        contract_id,\n        contract_type,\n        start_time,\n        longcode,\n        underlying,\n        is_tick_contract,\n        limit_order = {},\n    }) {\n        const existing_contract = this.contracts_map[contract_id];\n        if (existing_contract) {\n            if (this.contracts.every(c => c.contract_id !== contract_id)) {\n                this.contracts.push(existing_contract);\n            }\n            return;\n        }\n\n        const is_last_contract = contract_id === this.last_contract.contract_id;\n\n        const contract = new ContractStore(this.root_store, { contract_id });\n\n        contract.populateConfig(\n            {\n                date_start: start_time,\n                barrier,\n                contract_type,\n                longcode,\n                underlying,\n                limit_order,\n            },\n            is_last_contract\n        );\n\n        this.contracts.push(contract);\n        this.contracts_map[contract_id] = contract;\n\n        if (is_tick_contract && !this.root_store.portfolio.is_multiplier && this.granularity !== 0 && isDesktop()) {\n            this.root_store.notifications.addNotificationMessage(switch_to_tick_chart);\n        }\n    }\n\n    removeContract({ contract_id }) {\n        this.contracts = this.contracts.filter(c => c.contract_id !== contract_id);\n        delete this.contracts_map[contract_id];\n    }\n\n    accountSwitchListener() {\n        if (this.has_error) {\n            this.clearError();\n        }\n\n        return Promise.resolve();\n    }\n\n    onUnmount() {\n        this.disposeSwitchAccount();\n        // TODO: don't forget the tick history when switching to contract-replay-store\n    }\n\n    // Called from portfolio\n    updateProposal(response) {\n        if ('error' in response) {\n            this.has_error = true;\n            this.error_message = response.error.message;\n            return;\n        }\n        // Update the contract-store corresponding to this POC\n        if (response.proposal_open_contract) {\n            const contract_id = +response.proposal_open_contract.contract_id;\n            const contract = this.contracts_map[contract_id];\n            const is_last_contract = contract_id === this.last_contract.contract_id;\n            contract.populateConfig(response.proposal_open_contract, is_last_contract);\n\n            if (response.proposal_open_contract.is_sold) {\n                this.root_store.notifications.removeNotificationMessage(switch_to_tick_chart);\n                contract.cacheProposalOpenContractResponse(response);\n            }\n        }\n    }\n\n    get last_contract() {\n        const applicable_contracts = this.applicable_contracts();\n        const length = this.contracts[0]?.contract_info.current_spot_time ? applicable_contracts.length : -1;\n        return length > 0 ? applicable_contracts[length - 1] : {};\n    }\n\n    clearError() {\n        this.error_message = '';\n        this.has_error = false;\n    }\n\n    getContractById(contract_id) {\n        return (\n            this.contracts_map[contract_id] ||\n            // or get contract from contract_replay store when user is on the contract details page\n            this.root_store.contract_replay.contract_store\n        );\n    }\n}\n","import { action, makeObservable, observable, reaction, computed } from 'mobx';\nimport { getCFDAvailableAccount, CFD_PLATFORMS, ContentFlag, formatMoney, getAppstorePlatforms } from '@deriv/shared';\nimport BaseStore from './base-store';\nimport { localize } from '@deriv/translations';\nimport { isEuCountry } from '_common/utility';\nimport { getMultipliersAccountStatus } from './Helpers/client';\n\nexport default class TradersHubStore extends BaseStore {\n    available_platforms = [];\n    available_cfd_accounts = [];\n    available_mt5_accounts = [];\n    available_dxtrade_accounts = [];\n    available_ctrader_accounts = [];\n    available_derivez_accounts = [];\n    combined_cfd_mt5_accounts = [];\n    selected_account_type;\n    selected_region;\n    is_onboarding_visited = false;\n    is_failed_verification_modal_visible = false;\n    is_regulators_compare_modal_visible = false;\n    is_mt5_notification_modal_visible = false;\n    is_tour_open = false;\n    is_account_type_modal_visible = false;\n    account_type_card = '';\n    selected_platform_type = 'options';\n    open_failed_verification_for = '';\n    modal_data = {\n        active_modal: '',\n        data: {},\n    };\n    is_account_transfer_modal_open = false;\n    selected_account = {};\n    is_real_wallets_upgrade_on = false;\n    is_wallet_migration_failed = false;\n    active_modal_tab;\n    active_modal_wallet_id;\n\n    constructor(root_store) {\n        super({ root_store });\n\n        makeObservable(this, {\n            account_type_card: observable,\n            available_cfd_accounts: observable,\n            available_dxtrade_accounts: observable,\n            available_ctrader_accounts: observable,\n            available_derivez_accounts: observable,\n            available_mt5_accounts: observable,\n            available_platforms: observable,\n            combined_cfd_mt5_accounts: observable,\n            is_account_transfer_modal_open: observable,\n            is_account_type_modal_visible: observable,\n            is_regulators_compare_modal_visible: observable,\n            is_mt5_notification_modal_visible: observable,\n            is_failed_verification_modal_visible: observable,\n            is_tour_open: observable,\n            modal_data: observable,\n            is_onboarding_visited: observable,\n            selected_account: observable,\n            selected_account_type: observable,\n            selected_platform_type: observable,\n            active_modal_tab: observable,\n            active_modal_wallet_id: observable,\n            selected_region: observable,\n            open_failed_verification_for: observable,\n            is_real_wallets_upgrade_on: observable,\n            is_wallet_migration_failed: observable,\n            closeModal: action.bound,\n            content_flag: computed,\n            getAccount: action.bound,\n            getAvailableCFDAccounts: action.bound,\n            getAvailableDxtradeAccounts: action.bound,\n            getAvailableCTraderAccounts: action.bound,\n            getAvailableDerivEzAccounts: action.bound,\n            getExistingAccounts: action.bound,\n            handleTabItemClick: action.bound,\n            setWalletModalActiveTab: action.bound,\n            setWalletModalActiveWalletID: action.bound,\n            has_any_real_account: computed,\n            is_demo_low_risk: computed,\n            is_demo: computed,\n            is_eu_selected: computed,\n            is_real: computed,\n            is_low_risk_cr_eu_real: computed,\n            is_currency_switcher_disabled_for_mf: computed,\n            no_CR_account: computed,\n            no_MF_account: computed,\n            multipliers_account_status: computed,\n            CFDs_restricted_countries: computed,\n            financial_restricted_countries: computed,\n            openDemoCFDAccount: action.bound,\n            openModal: action.bound,\n            openRealAccount: action.bound,\n            selectAccountType: action.bound,\n            selectAccountTypeCard: action.bound,\n            switchToCRAccount: action.bound,\n            selectRegion: action.bound,\n            setCombinedCFDMT5Accounts: action.bound,\n            setSelectedAccount: action.bound,\n            setTogglePlatformType: action.bound,\n            should_show_exit_traders_modal: computed,\n            show_eu_related_content: computed,\n            startTrade: action.bound,\n            toggleAccountTransferModal: action.bound,\n            closeAccountTransferModal: action.bound,\n            toggleAccountTypeModalVisibility: action.bound,\n            setIsOnboardingVisited: action.bound,\n            setMT5NotificationModal: action.bound,\n            toggleFailedVerificationModalVisibility: action.bound,\n            openFailedVerificationModal: action.bound,\n            toggleIsTourOpen: action.bound,\n            toggleRegulatorsCompareModal: action.bound,\n            showTopUpModal: action.bound,\n            toggleWalletsUpgrade: action.bound,\n            setWalletsMigrationFailedPopup: action.bound,\n        });\n\n        reaction(\n            () => [\n                this.selected_account_type,\n                this.selected_region,\n                this.root_store.client.is_switching,\n                this.root_store.client.mt5_login_list,\n                this.root_store.client.dxtrade_accounts_list,\n                this.root_store.client.ctrader_accounts_list,\n                this.root_store.client.derivez_accounts_list,\n                this.is_demo_low_risk,\n                this.root_store.modules?.cfd?.current_list,\n                this.root_store.client.landing_companies,\n                this.root_store.common.current_language,\n                this.financial_restricted_countries,\n            ],\n            () => {\n                this.getAvailablePlatforms();\n                this.getAvailableCFDAccounts();\n            }\n        );\n\n        reaction(\n            () => [\n                this.selected_region,\n                this.root_store.client.is_landing_company_loaded,\n                this.root_store.client.loginid,\n            ],\n            () => {\n                if (this.selected_account_type === 'real') {\n                    this.setSwitchEU();\n                }\n            }\n        );\n\n        reaction(\n            () => [this.root_store.client.loginid, this.root_store.client.residence],\n            () => {\n                const residence = this.root_store.client.residence;\n                const active_demo = /^VRT|VRW/.test(this.root_store.client.loginid);\n                const active_real_mf = /^MF|MFW/.test(this.root_store.client.loginid);\n                const default_region = () => {\n                    if (((active_demo || active_real_mf) && isEuCountry(residence)) || active_real_mf) {\n                        return 'EU';\n                    }\n                    return 'Non-EU';\n                };\n                this.selected_account_type = !/^VRT|VRW/.test(this.root_store.client.loginid) ? 'real' : 'demo';\n                this.selected_region = default_region();\n            }\n        );\n    }\n\n    async setSwitchEU() {\n        const { account_list, switchAccount, loginid, setIsLoggingIn } = this.root_store.client;\n\n        const mf_account = account_list.find(acc => acc.loginid?.startsWith('MF'))?.loginid;\n        const cr_account = account_list.find(acc => acc.loginid?.startsWith('CR'))?.loginid;\n\n        if (this.selected_region === 'EU' && !loginid?.startsWith('MF')) {\n            // if active_loginid is already EU = do nothing\n            await switchAccount(mf_account).then(() => {\n                setIsLoggingIn(false);\n            });\n        } else if (this.selected_region === 'Non-EU' && !loginid?.startsWith('CR')) {\n            await switchAccount(cr_account).then(() => {\n                setIsLoggingIn(false);\n            });\n        }\n    }\n\n    setWalletModalActiveTab(tab) {\n        this.active_modal_tab = tab;\n    }\n\n    setWalletModalActiveWalletID(wallet_id) {\n        this.active_modal_wallet_id = wallet_id;\n    }\n\n    get no_MF_account() {\n        const { has_maltainvest_account } = this.root_store.client;\n        return this.selected_region === 'EU' && !has_maltainvest_account;\n    }\n\n    get no_CR_account() {\n        const { active_accounts } = this.root_store.client;\n        const result = active_accounts.some(acc => acc.landing_company_shortcode === 'svg');\n        return !result && this.selected_region === 'Non-EU';\n    }\n\n    setSelectedAccount(account) {\n        this.selected_account = account;\n    }\n\n    async selectAccountType(account_type) {\n        const { account_list, switchAccount, prev_real_account_loginid } = this.root_store.client;\n\n        if (account_type === 'demo') {\n            await switchAccount(account_list.find(acc => acc.is_virtual && !acc.is_disabled)?.loginid);\n        } else if (account_type === 'real') {\n            if (prev_real_account_loginid) {\n                await switchAccount(prev_real_account_loginid);\n            } else {\n                await switchAccount(account_list.find(acc => !acc.is_virtual && !acc.is_disabled)?.loginid);\n            }\n        }\n        this.selected_account_type = account_type;\n    }\n\n    async switchToCRAccount() {\n        const { account_list, switchAccount, prev_real_account_loginid } = this.root_store.client;\n\n        if (prev_real_account_loginid && !prev_real_account_loginid.startsWith('MF')) {\n            //switch to previously selected CR account\n            await switchAccount(prev_real_account_loginid);\n        } else {\n            //if no previously selected CR account , then switch to default CR account\n            await switchAccount(\n                account_list.find(acc => !acc.is_virtual && !acc.is_disabled && !acc.loginid.startsWith('MF'))?.loginid\n            );\n        }\n\n        this.selected_account_type = 'real';\n        this.selected_region = 'Non-EU';\n    }\n\n    selectAccountTypeCard(account_type_card) {\n        this.account_type_card = account_type_card;\n    }\n\n    selectRegion(region) {\n        this.selected_region = region;\n    }\n\n    toggleIsTourOpen(is_tour_open) {\n        this.is_tour_open = is_tour_open;\n    }\n\n    get is_demo_low_risk() {\n        const { is_landing_company_loaded } = this.root_store.client;\n        if (is_landing_company_loaded) {\n            const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n            return (\n                this.content_flag === ContentFlag.CR_DEMO &&\n                financial_company?.shortcode === 'maltainvest' &&\n                gaming_company?.shortcode === 'svg'\n            );\n        }\n        return false;\n    }\n\n    get content_flag() {\n        const { is_logged_in, landing_companies, residence, is_landing_company_loaded } = this.root_store.client;\n        if (is_landing_company_loaded) {\n            const { financial_company, gaming_company } = landing_companies;\n\n            //this is a conditional check for countries like Australia/Norway which fulfills one of these following conditions\n            const restricted_countries = financial_company?.shortcode === 'svg' || gaming_company?.shortcode === 'svg';\n\n            if (!is_logged_in) return '';\n            if (!gaming_company?.shortcode && financial_company?.shortcode === 'maltainvest') {\n                if (this.is_demo) return ContentFlag.EU_DEMO;\n                return ContentFlag.EU_REAL;\n            } else if (\n                financial_company?.shortcode === 'maltainvest' &&\n                gaming_company?.shortcode === 'svg' &&\n                this.is_real\n            ) {\n                if (this.is_eu_user) return ContentFlag.LOW_RISK_CR_EU;\n                return ContentFlag.LOW_RISK_CR_NON_EU;\n            } else if (\n                ((financial_company?.shortcode === 'svg' && gaming_company?.shortcode === 'svg') ||\n                    restricted_countries) &&\n                this.is_real\n            ) {\n                return ContentFlag.HIGH_RISK_CR;\n            }\n\n            // Default Check\n            if (isEuCountry(residence)) {\n                if (this.is_demo) return ContentFlag.EU_DEMO;\n                return ContentFlag.EU_REAL;\n            }\n            if (this.is_demo) return ContentFlag.CR_DEMO;\n        }\n        return ContentFlag.LOW_RISK_CR_NON_EU;\n    }\n\n    get show_eu_related_content() {\n        const eu_related = [ContentFlag.EU_DEMO, ContentFlag.EU_REAL, ContentFlag.LOW_RISK_CR_EU];\n        return eu_related.includes(this.content_flag);\n    }\n\n    get is_low_risk_cr_eu_real() {\n        return [ContentFlag.LOW_RISK_CR_EU, ContentFlag.EU_REAL].includes(this.content_flag);\n    }\n\n    getAvailablePlatforms() {\n        const appstore_platforms = getAppstorePlatforms();\n        if ((this.financial_restricted_countries || this.is_eu_user) && !this.is_demo_low_risk) {\n            this.available_platforms = appstore_platforms.filter(platform =>\n                ['EU', 'All'].some(region => region === platform.availability)\n            );\n            return;\n        } else if (\n            (this.selected_region === 'Non-EU' && !this.financial_restricted_countries) ||\n            this.is_demo_low_risk\n        ) {\n            this.available_platforms = appstore_platforms.filter(platform =>\n                ['Non-EU', 'All'].some(region => region === platform.availability)\n            );\n            return;\n        }\n        this.available_platforms = appstore_platforms;\n    }\n\n    toggleAccountTypeModalVisibility() {\n        this.is_account_type_modal_visible = !this.is_account_type_modal_visible;\n    }\n\n    setIsOnboardingVisited(is_visited) {\n        this.is_onboarding_visited = is_visited;\n    }\n\n    get is_eu_selected() {\n        return this.selected_region === 'EU';\n    }\n\n    get should_show_exit_traders_modal() {\n        //  should display the modal when low risk cr client have atleast one mf account\n        const is_low_risk_cr_client = [\n            ContentFlag.LOW_RISK_CR_EU,\n            ContentFlag.LOW_RISK_CR_NON_EU,\n            ContentFlag.CR_DEMO,\n        ].includes(this.content_flag);\n        const { active_accounts } = this.root_store.client;\n        return is_low_risk_cr_client && active_accounts.some(acc => acc.landing_company_shortcode === 'maltainvest');\n    }\n\n    toggleRegulatorsCompareModal() {\n        this.is_regulators_compare_modal_visible = !this.is_regulators_compare_modal_visible;\n    }\n\n    setMT5NotificationModal(is_visible) {\n        this.is_mt5_notification_modal_visible = is_visible;\n    }\n\n    get has_any_real_account() {\n        return this.selected_account_type === 'real' && this.root_store.client.has_active_real_account;\n    }\n\n    get is_currency_switcher_disabled_for_mf() {\n        return !!(\n            this.is_eu_user &&\n            this.multipliers_account_status &&\n            this.multipliers_account_status !== 'need_verification'\n        );\n    }\n\n    setTogglePlatformType(platform_type) {\n        this.selected_platform_type = platform_type;\n    }\n\n    getAvailableCFDAccounts() {\n        const getAccountDesc = () => {\n            return !this.is_eu_user || this.is_demo_low_risk\n                ? localize('Trade CFDs on MT5 with forex, stock indices, commodities, and cryptocurrencies.')\n                : localize(\n                      'Trade CFDs on MT5 with forex, stocks, stock indices, synthetics, cryptocurrencies, and commodities.'\n                  );\n        };\n        const getSwapFreeAccountDesc = () => {\n            return localize(\n                'Trade swap-free CFDs on MT5 with synthetics, forex, stocks, stock indices, cryptocurrencies, and ETFs.'\n            );\n        };\n\n        const all_available_accounts = [\n            ...getCFDAvailableAccount(),\n            {\n                name: !this.is_eu_user || this.is_demo_low_risk ? localize('Financial') : localize('CFDs'),\n                description: getAccountDesc(),\n                platform: CFD_PLATFORMS.MT5,\n                market_type: 'financial',\n                icon: !this.is_eu_user || this.is_demo_low_risk ? 'Financial' : 'CFDs',\n                availability: 'All',\n            },\n            {\n                name: localize('Swap-Free'),\n                description: getSwapFreeAccountDesc(),\n                platform: CFD_PLATFORMS.MT5,\n                market_type: 'all',\n                icon: 'SwapFree',\n                availability: 'Non-EU',\n            },\n        ];\n        this.available_cfd_accounts = all_available_accounts.map(account => {\n            return {\n                ...account,\n                description: account.description,\n            };\n        });\n        this.getAvailableDxtradeAccounts();\n        this.getAvailableCTraderAccounts();\n        this.getAvailableDerivEzAccounts();\n        this.getAvailableMt5Accounts();\n        this.setCombinedCFDMT5Accounts();\n    }\n\n    get financial_restricted_countries() {\n        const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n\n        return financial_company?.shortcode === 'svg' && !gaming_company;\n    }\n\n    get CFDs_restricted_countries() {\n        const { financial_company, gaming_company } = this.root_store.client.landing_companies;\n\n        return gaming_company?.shortcode === 'svg' && !financial_company;\n    }\n\n    getAvailableMt5Accounts() {\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(account =>\n                ['EU', 'All'].some(region => region === account.availability)\n            );\n            return;\n        }\n\n        if (this.financial_restricted_countries) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(\n                account => account.market_type === 'financial' && account.platform === CFD_PLATFORMS.MT5\n            );\n            return;\n        }\n\n        if (this.CFDs_restricted_countries) {\n            this.available_mt5_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    account.market_type !== 'financial' &&\n                    account.market_type !== 'all' &&\n                    account.platform === CFD_PLATFORMS.MT5\n            );\n            return;\n        }\n\n        this.available_mt5_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.MT5\n        );\n    }\n\n    getAvailableDxtradeAccounts() {\n        if (this.CFDs_restricted_countries || this.financial_restricted_countries) {\n            this.available_dxtrade_accounts = [];\n            return;\n        }\n\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_dxtrade_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    ['EU', 'All'].some(region => region === account.availability) &&\n                    account.platform === CFD_PLATFORMS.DXTRADE\n            );\n            return;\n        }\n\n        this.available_dxtrade_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.DXTRADE\n        );\n    }\n    getAvailableCTraderAccounts() {\n        if (this.CFDs_restricted_countries || this.financial_restricted_countries) {\n            this.available_ctrader_accounts = [];\n            return;\n        }\n\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_ctrader_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    ['EU', 'All'].some(region => region === account.availability) &&\n                    account.platform === CFD_PLATFORMS.CTRADER\n            );\n            return;\n        }\n        this.available_ctrader_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.CTRADER\n        );\n    }\n\n    getAvailableDerivEzAccounts() {\n        if (this.CFDs_restricted_countries || this.financial_restricted_countries) {\n            this.available_derivez_accounts = [];\n            return;\n        }\n\n        if (this.is_eu_user && !this.is_demo_low_risk) {\n            this.available_derivez_accounts = this.available_cfd_accounts.filter(\n                account =>\n                    ['EU', 'All'].some(region => region === account.availability) &&\n                    account.platform === CFD_PLATFORMS.DERIVEZ\n            );\n            return;\n        }\n        this.available_derivez_accounts = this.available_cfd_accounts.filter(\n            account => account.platform === CFD_PLATFORMS.DERIVEZ\n        );\n    }\n\n    getExistingAccounts(platform, market_type) {\n        const { residence } = this.root_store.client;\n        const current_list = this.root_store.modules?.cfd?.current_list || [];\n        const current_list_keys = Object.keys(current_list);\n        const selected_account_type = this.selected_account_type;\n        const existing_accounts = current_list_keys\n            .filter(key => {\n                const maltainvest_account = current_list[key].landing_company_short === 'maltainvest';\n\n                if (platform === CFD_PLATFORMS.MT5 && !this.is_eu_user && !maltainvest_account) {\n                    return key.startsWith(`${platform}.${selected_account_type}.${market_type}`);\n                }\n                if (platform === CFD_PLATFORMS.MT5 && market_type === 'all') {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (platform === CFD_PLATFORMS.DXTRADE && market_type === 'all') {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (\n                    platform === CFD_PLATFORMS.DERIVEZ ||\n                    (platform === CFD_PLATFORMS.CTRADER && market_type === 'all')\n                ) {\n                    return key.startsWith(`${platform}.${selected_account_type}.${platform}@${market_type}`);\n                }\n                if (\n                    platform === CFD_PLATFORMS.MT5 &&\n                    (this.is_eu_user || isEuCountry(residence)) &&\n                    maltainvest_account\n                ) {\n                    return key.startsWith(`${platform}.${selected_account_type}.${market_type}`);\n                }\n\n                return key.startsWith(`${platform}.${selected_account_type}.${market_type}@${market_type}`);\n            })\n            .reduce((_acc, cur) => {\n                _acc.push(current_list[cur]);\n                return _acc;\n            }, []);\n        return existing_accounts;\n    }\n\n    startTrade(platform, account) {\n        const { common, modules } = this.root_store;\n        const { toggleMT5TradeModal, setMT5TradeAccount } = modules.cfd;\n        const { setAppstorePlatform } = common;\n        setAppstorePlatform(platform);\n        toggleMT5TradeModal();\n        setMT5TradeAccount(account);\n    }\n\n    get is_demo() {\n        return this.selected_account_type === 'demo';\n    }\n    get is_real() {\n        return this.selected_account_type === 'real';\n    }\n    get is_eu_user() {\n        return this.selected_region === 'EU';\n    }\n\n    get multipliers_account_status() {\n        const { has_maltainvest_account, account_status } = this.root_store.client;\n\n        const multipliers_account_status = getMultipliersAccountStatus(account_status?.authentication);\n        const should_show_status_for_multipliers_account =\n            [ContentFlag.EU_REAL, ContentFlag.LOW_RISK_CR_EU].includes(this.content_flag) &&\n            has_maltainvest_account &&\n            multipliers_account_status &&\n            ['pending', 'failed', 'need_verification'].includes(multipliers_account_status);\n        return should_show_status_for_multipliers_account ? multipliers_account_status : null;\n    }\n\n    handleTabItemClick(idx) {\n        if (idx === 0) {\n            this.selected_region = 'Non-EU';\n        } else {\n            this.selected_region = 'EU';\n        }\n    }\n\n    async openDemoCFDAccount(account_type, platform) {\n        const { client, modules, ui } = this.root_store;\n        const { standpoint, createCFDAccount, enableCFDPasswordModal, has_maltainvest_account } = modules.cfd;\n\n        const { openAccountNeededModal } = ui;\n        const { is_eu } = client;\n\n        if (is_eu && !has_maltainvest_account && standpoint?.iom) {\n            openAccountNeededModal('maltainvest', localize('Deriv Multipliers'), localize('demo CFDs'));\n        } else if (platform !== CFD_PLATFORMS.DERIVEZ) {\n            enableCFDPasswordModal();\n        } else {\n            await createCFDAccount({ ...account_type, platform });\n        }\n        if (platform !== CFD_PLATFORMS.CTRADER) {\n            enableCFDPasswordModal();\n        }\n        createCFDAccount({ ...account_type, platform });\n    }\n\n    async openRealAccount(account_type, platform) {\n        const { client, modules } = this.root_store;\n        const { has_active_real_account } = client;\n        const { createCFDAccount, enableCFDPasswordModal, toggleJurisdictionModal } = modules.cfd;\n        if (has_active_real_account && platform === CFD_PLATFORMS.MT5) {\n            toggleJurisdictionModal();\n        } else if (platform === CFD_PLATFORMS.DXTRADE) {\n            enableCFDPasswordModal();\n        } else {\n            await createCFDAccount({ ...account_type, platform });\n        }\n    }\n\n    openModal(modal_id, props = {}) {\n        this.modal_data = {\n            active_modal: modal_id,\n            data: props,\n        };\n    }\n\n    closeModal() {\n        this.modal_data = {\n            active_modal: '',\n            data: {},\n        };\n    }\n\n    selectRealLoginid(loginid) {\n        const { accounts } = this.root_store.client;\n        if (Object.keys(accounts).includes(loginid)) {\n            this.selected_loginid = loginid;\n        }\n    }\n\n    getAccount() {\n        const { modules, common } = this.root_store;\n        const { account_type } = modules.cfd;\n        const { platform } = common;\n        if (this.is_demo) {\n            this.openDemoCFDAccount(account_type, platform);\n        } else {\n            this.openRealAccount(account_type, platform);\n        }\n    }\n\n    getServerName = account => {\n        if (account) {\n            const server_region = account.server_info?.geolocation?.region;\n            if (server_region) {\n                return `${server_region} ${\n                    account?.server_info?.geolocation?.sequence === 1 ? '' : account?.server_info?.geolocation?.sequence\n                }`;\n            }\n        }\n        return '';\n    };\n    hasMultipleSVGAccounts = () => {\n        const all_svg_acc = [];\n        this.combined_cfd_mt5_accounts.map(acc => {\n            if (acc.landing_company_short === 'svg' && acc.market_type === 'synthetic') {\n                if (all_svg_acc.length) {\n                    all_svg_acc.forEach(svg_acc => {\n                        if (svg_acc.server !== acc.server) all_svg_acc.push(acc);\n                        return all_svg_acc;\n                    });\n                } else {\n                    all_svg_acc.push(acc);\n                }\n            }\n        });\n        return all_svg_acc.length > 1;\n    };\n    getShortCodeAndRegion(account) {\n        let short_code_and_region;\n        if (this.is_real && !this.is_eu_user) {\n            const short_code =\n                account.landing_company_short &&\n                account.landing_company_short !== 'svg' &&\n                account.landing_company_short !== 'bvi'\n                    ? account.landing_company_short?.charAt(0).toUpperCase() + account.landing_company_short?.slice(1)\n                    : account.landing_company_short?.toUpperCase();\n\n            let region = '';\n            if (this.hasMultipleSVGAccounts()) {\n                region =\n                    account.market_type !== 'financial' && account.landing_company_short !== 'bvi'\n                        ? ` - ${this.getServerName(account)}`\n                        : '';\n            }\n            short_code_and_region = `${short_code}${region}`;\n        }\n        return short_code_and_region;\n    }\n    setCombinedCFDMT5Accounts() {\n        this.combined_cfd_mt5_accounts = [];\n        this.available_mt5_accounts?.forEach(account => {\n            const existing_accounts = this.getExistingAccounts(account.platform, account.market_type);\n            const has_existing_accounts = existing_accounts.length > 0;\n            if (has_existing_accounts) {\n                existing_accounts.forEach(existing_account => {\n                    this.combined_cfd_mt5_accounts = [\n                        ...this.combined_cfd_mt5_accounts,\n                        {\n                            ...existing_account,\n                            icon: account.icon,\n                            sub_title: account.name,\n                            name: `${formatMoney(existing_account.currency, existing_account.display_balance, true)} ${\n                                existing_account.currency\n                            }`,\n                            short_code_and_region: this.getShortCodeAndRegion(existing_account),\n                            platform: account.platform,\n                            description: existing_account.display_login,\n                            key: `trading_app_card_${existing_account.display_login}`,\n                            action_type: 'multi-action',\n                            availability: this.selected_region,\n                            market_type: account.market_type,\n                        },\n                    ];\n                });\n            } else {\n                this.combined_cfd_mt5_accounts = [\n                    ...this.combined_cfd_mt5_accounts,\n                    {\n                        icon: account.icon,\n                        name: account.name,\n                        platform: account.platform,\n                        description: account.description,\n                        key: `trading_app_card_${account.name}`,\n                        action_type: 'get',\n                        availability: this.selected_region,\n                        market_type: account.market_type,\n                    },\n                ];\n            }\n        });\n    }\n\n    closeAccountTransferModal() {\n        this.is_account_transfer_modal_open = false;\n    }\n\n    toggleAccountTransferModal() {\n        this.is_account_transfer_modal_open = !this.is_account_transfer_modal_open;\n    }\n\n    toggleFailedVerificationModalVisibility() {\n        this.is_failed_verification_modal_visible = !this.is_failed_verification_modal_visible;\n    }\n\n    openFailedVerificationModal(selected_account_type) {\n        const {\n            common,\n            modules: { cfd },\n        } = this.root_store;\n        const { setJurisdictionSelectedShortcode, setAccountType } = cfd;\n        const { setAppstorePlatform } = common;\n\n        if (selected_account_type?.platform === CFD_PLATFORMS.MT5) {\n            setAppstorePlatform(selected_account_type.platform);\n            setAccountType({\n                category: selected_account_type.category,\n                type: selected_account_type.type,\n            });\n            setJurisdictionSelectedShortcode(selected_account_type.jurisdiction);\n        } else {\n            setJurisdictionSelectedShortcode('');\n        }\n        this.open_failed_verification_for =\n            selected_account_type?.platform === CFD_PLATFORMS.MT5 ? selected_account_type?.jurisdiction : 'multipliers';\n        this.toggleFailedVerificationModalVisibility();\n    }\n\n    showTopUpModal(data) {\n        const { ui, modules } = this.root_store;\n        const { openTopUpModal } = ui;\n        const { setCurrentAccount } = modules.cfd;\n        setCurrentAccount(data, {\n            category: this.selected_account_type,\n            type: data.market_type,\n        });\n        openTopUpModal();\n    }\n\n    toggleWalletsUpgrade(value) {\n        this.is_real_wallets_upgrade_on = value;\n    }\n\n    setWalletsMigrationFailedPopup(value) {\n        this.is_wallet_migration_failed = value;\n    }\n}\n","import ClientStore from './client-store';\nimport CommonStore from './common-store';\nimport GTMStore from './gtm-store';\nimport ModulesStore from './Modules';\nimport NotificationStore from './notification-store';\nimport UIStore from './ui-store';\nimport ActiveSymbolsStore from './active-symbols-store';\nimport PortfolioStore from './portfolio-store';\nimport ContractReplayStore from './contract-replay-store';\nimport ContractTradeStore from './contract-trade-store';\nimport { ChartBarrierStore } from './chart-barrier-store';\nimport TradersHubStore from './traders-hub-store';\n\nexport default class RootStore {\n    constructor() {\n        this.client = new ClientStore(this);\n        this.common = new CommonStore(this);\n        this.modules = new ModulesStore(this);\n        this.ui = new UIStore(this);\n        this.gtm = new GTMStore(this);\n        this.notifications = new NotificationStore(this);\n        this.active_symbols = new ActiveSymbolsStore(this);\n        this.portfolio = new PortfolioStore(this);\n        this.contract_replay = new ContractReplayStore(this);\n        this.contract_trade = new ContractTradeStore(this);\n        this.chart_barrier_store = new ChartBarrierStore(this);\n        this.traders_hub = new TradersHubStore(this);\n    }\n}\n","import { configure } from 'mobx';\nimport NetworkMonitor from 'Services/network-monitor';\n// import OutdatedBrowser      from 'Services/outdated-browser';\nimport RootStore from 'Stores';\n\nconfigure({ enforceActions: 'observed' });\n\nconst setStorageEvents = root_store => {\n    window.addEventListener('storage', evt => {\n        switch (evt.key) {\n            case 'client.accounts': {\n                const active_loginid = root_store.client.loginid;\n                const new_currency = JSON.parse(evt.newValue)?.[active_loginid]?.currency;\n                const old_currency = JSON.parse(evt.oldValue)?.[active_loginid]?.currency;\n\n                if (document.hidden && new_currency && old_currency !== new_currency) {\n                    root_store.client.updateAccountCurrency(new_currency, false);\n                }\n                break;\n            }\n            case 'active_loginid':\n                if (localStorage.getItem('active_loginid') === 'null' || !localStorage.getItem('active_loginid')) {\n                    root_store.client.logout();\n                }\n                if (document.hidden) {\n                    window.location.reload();\n                }\n                break;\n            case 'reality_check_dismissed':\n                if (document.hidden) {\n                    // if new value is true, hide reality check, otherwise show it\n                    root_store.client.setVisibilityRealityCheck(!JSON.parse(evt.newValue));\n                }\n                break;\n            // no default\n        }\n    });\n};\n\nconst initStore = notification_messages => {\n    // Check Endpoint from URL need to be done before initializing store to avoid\n    // race condition with setting up user session from URL\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    if (url_params.get('action') === 'signup') {\n        // If a user comes from the signup process,\n        // we need to give him a clean setup\n        const server_url = localStorage.getItem('config.server_url');\n        const app_id = localStorage.getItem('config.app_id');\n\n        localStorage.clear();\n\n        if (server_url) localStorage.setItem('config.server_url', server_url);\n        if (app_id) localStorage.setItem('config.app_id', app_id);\n    }\n\n    const root_store = new RootStore();\n\n    setStorageEvents(root_store);\n\n    NetworkMonitor.init(root_store);\n    // TODO: Re-enable and update browser checking\n    // OutdatedBrowser.init(root_store);!\n    root_store.client.init();\n    root_store.common.init();\n    root_store.ui.init(notification_messages);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404.jsx';\n\nexport default Page404;\n","import { removeCookies } from '@deriv/shared';\nimport SocketCache from '_common/base/socket_cache';\nimport WS from './ws-methods';\n\nexport const requestLogout = () => WS.logout().then(doLogout);\n\nfunction endChat() {\n    window.LC_API?.close_chat?.();\n}\n\nconst doLogout = response => {\n    if (response.logout !== 1) return undefined;\n    removeCookies('affiliate_token', 'affiliate_tracking', 'onfido_token');\n    SocketCache.clear();\n    sessionStorage.clear();\n    endChat();\n    return response;\n};\n","import moment from 'moment';\nimport { flow } from 'mobx';\nimport { State, getActivePlatform, getPropertyValue, routes, getActionFromUrl } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ServerTime from '_common/base/server_time';\nimport BinarySocket from '_common/base/socket_base';\nimport WS from './ws-methods';\n\nlet client_store, common_store, gtm_store;\n\n// TODO: update commented statements to the corresponding functions from app\nconst BinarySocketGeneral = (() => {\n    let session_duration_limit, session_start_time, session_timeout;\n\n    const onDisconnect = () => {\n        common_store.setIsSocketOpened(false);\n    };\n\n    let responseTimeoutErrorTimer = null;\n    const onOpen = is_ready => {\n        responseTimeoutErrorTimer = setTimeout(() => {\n            const error = new Error('deriv-api: no message received after 30s');\n            error.userId = client_store?.loginid;\n            /* eslint-disable no-console */\n            console.error(error);\n        }, 30000);\n\n        if (is_ready) {\n            if (!client_store.is_valid_login) {\n                client_store.logout();\n                return;\n            }\n\n            if (client_store.is_logged_in || client_store.is_logging_in) {\n                WS.get()\n                    .expectResponse('authorize')\n                    .then(() => {\n                        WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n                    });\n            } else {\n                WS.subscribeWebsiteStatus(ResponseHandlers.websiteStatus);\n            }\n\n            ServerTime.init(() => common_store.setServerTime(ServerTime.get()));\n            common_store.setIsSocketOpened(true);\n        }\n    };\n\n    const onMessage = response => {\n        clearTimeout(responseTimeoutErrorTimer);\n        handleError(response);\n        // Header.hideNotification('CONNECTION_ERROR');\n        switch (response.msg_type) {\n            case 'authorize':\n                if (response.error) {\n                    const is_active_tab = sessionStorage.getItem('active_tab') === '1';\n                    if (getPropertyValue(response, ['error', 'code']) === 'SelfExclusion' && is_active_tab) {\n                        sessionStorage.removeItem('active_tab');\n                        // Dialog.alert({ id: 'authorize_error_alert', message: response.error.message });\n                    }\n                    client_store.logout();\n                } else if (!/authorize/.test(State.get('skip_response'))) {\n                    // is_populating_account_list is a check to avoid logout on the first logged-in session\n                    // In any other case, if the response loginid does not match the store's loginid, user must be logged out\n                    if (\n                        response.authorize.loginid !== client_store.loginid &&\n                        !client_store.is_populating_account_list &&\n                        !client_store.is_switching\n                    ) {\n                        client_store.logout();\n                    } else if (response.authorize.loginid === client_store.loginid) {\n                        // All other cases continue with the loginid and authorize the profile\n                        authorizeAccount(response);\n                    }\n                }\n                break;\n            case 'landing_company':\n                // Header.upgradeMessageVisibility();\n                break;\n            case 'get_self_exclusion':\n                setSessionDurationLimit(response);\n                break;\n            case 'get_settings':\n                if (response.get_settings) {\n                    setResidence(response.get_settings.country_code);\n                    client_store.setEmail(response.get_settings.email);\n                    client_store.setAccountSettings(response.get_settings);\n                    gtm_store.eventHandler(response.get_settings);\n                }\n                break;\n            case 'set_account_currency':\n                WS.forgetAll('balance').then(subscribeBalances);\n                break;\n            case 'get_account_status':\n                client_store.setAccountStatus(response.get_account_status);\n                break;\n            case 'payout_currencies':\n                client_store.responsePayoutCurrencies(response?.payout_currencies);\n                break;\n            case 'transaction':\n                gtm_store.pushTransactionData(response);\n                break;\n            // no default\n        }\n    };\n\n    const setResidence = residence => {\n        if (residence) {\n            client_store.setResidence(residence);\n            WS.landingCompany(residence).then(client_store.responseLandingCompany);\n        }\n    };\n\n    const setSessionDurationLimit = user_limits => {\n        const duration = user_limits?.get_self_exclusion?.session_duration_limit;\n\n        session_start_time = new Date(sessionStorage.getItem('session_start_time') || ServerTime.get());\n        sessionStorage.setItem('session_start_time', session_start_time);\n\n        if (duration && duration !== session_duration_limit) {\n            const current_session_duration = session_duration_limit ? ServerTime.get() - moment(session_start_time) : 0;\n            const remaining_session_time = duration * 60 * 1000 - current_session_duration;\n            clearTimeout(session_timeout);\n            session_timeout = setTimeout(() => {\n                client_store.logout();\n                sessionStorage.removeItem('session_start_time');\n            }, remaining_session_time);\n        } else if (!duration) {\n            clearTimeout(session_timeout);\n        }\n\n        session_duration_limit = duration;\n    };\n\n    const setBalanceActiveAccount = flow(function* (obj_balance) {\n        yield BinarySocket.wait('website_status');\n        client_store.setBalanceActiveAccount(obj_balance);\n    });\n\n    const setBalanceOtherAccounts = obj_balance => {\n        client_store.setBalanceOtherAccounts(obj_balance);\n    };\n\n    const handleError = response => {\n        const msg_type = response.msg_type;\n        const error_code = getPropertyValue(response, ['error', 'code']);\n        switch (error_code) {\n            case 'WrongResponse':\n                // TODO: Remove condition checks below for WrongResponse once mt5 is more reliable\n                if (msg_type === 'mt5_login_list') {\n                    WS.authorized.mt5LoginList().then(mt5_list_response => {\n                        if (!mt5_list_response.error) {\n                            client_store.responseMt5LoginList(mt5_list_response);\n                            WS.balanceAll().then(balance_response => {\n                                if (!balance_response.error)\n                                    client_store.setBalanceOtherAccounts(balance_response.balance);\n                            });\n                        } else {\n                            client_store.resetMt5ListPopulatedState();\n                        }\n                    });\n                } else if (msg_type === 'balance') {\n                    WS.forgetAll('balance').then(subscribeBalances);\n                } else if (msg_type === 'get_account_status') {\n                    WS.authorized.getAccountStatus().then(account_status_response => {\n                        if (!account_status_response.error) {\n                            client_store.setAccountStatus(account_status_response.get_account_status);\n                        }\n                    });\n                } else if (msg_type === 'landing_company') {\n                    if (client_store.residence) {\n                        WS.authorized.landingCompany(client_store.residence).then(landing_company_response => {\n                            if (!landing_company_response.error) {\n                                client_store.responseLandingCompany(landing_company_response);\n                            }\n                        });\n                    }\n                }\n                break;\n            case 'InternalServerError':\n            case 'OutputValidationFailed': {\n                if (msg_type !== 'mt5_login_list') {\n                    common_store.setError(true, { message: response.error.message });\n                }\n                break;\n            }\n            case 'RateLimit':\n                if (msg_type !== 'cashier_password') {\n                    common_store.setError(true, {\n                        message: localize('You have reached the rate limit of requests per second. Please try later.'),\n                    });\n                }\n                break;\n            case 'InvalidAppID':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'DisabledClient':\n                common_store.setError(true, { message: response.error.message });\n                break;\n            case 'InvalidToken':\n                if (\n                    [\n                        'cashier',\n                        'paymentagent_withdraw',\n                        'reset_password',\n                        'trading_platform_password_reset',\n                        'trading_platform_investor_password_reset',\n                        'new_account_virtual',\n                        'portfolio',\n                        'proposal_open_contract',\n                        'change_email',\n                    ].includes(msg_type)\n                ) {\n                    return;\n                }\n                // eslint-disable-next-line no-case-declarations\n                const active_platform = getActivePlatform(common_store.app_routing_history);\n\n                // DBot handles this internally. Special case: 'client.invalid_token'\n                if (active_platform === 'DBot') return;\n\n                client_store.logout().then(() => {\n                    let redirect_to = routes.trade;\n                    const action = getActionFromUrl();\n                    if (action === 'system_email_change') {\n                        return;\n                    }\n                    if (active_platform === 'Deriv MT5') {\n                        redirect_to = routes.mt5;\n                    }\n                    common_store.routeTo(redirect_to);\n                });\n                break;\n            case 'AuthorizationRequired':\n                // if msg_type is coming from 'buy', behaviour should be handled in app itself.\n                if (msg_type === 'buy') {\n                    return;\n                }\n                client_store.logout();\n                break;\n            // no default\n        }\n    };\n\n    const init = store => {\n        client_store = store.client;\n        common_store = store.common;\n        gtm_store = store.gtm;\n\n        return {\n            onDisconnect,\n            onOpen,\n            onMessage,\n        };\n    };\n\n    const subscribeBalances = () => {\n        WS.subscribeBalanceAll(ResponseHandlers.balanceOtherAccounts);\n        WS.subscribeBalanceActiveAccount(ResponseHandlers.balanceActiveAccount, client_store.loginid);\n    };\n\n    const authorizeAccount = response => {\n        client_store.responseAuthorize(response);\n        subscribeBalances();\n        WS.storage.getSettings();\n        WS.getAccountStatus();\n        WS.storage.payoutCurrencies();\n        client_store.setIsAuthorize(true);\n        if (!client_store.is_virtual) {\n            WS.getSelfExclusion();\n        }\n        BinarySocket.sendBuffered();\n        if (/bch/i.test(response.authorize.currency) && !client_store.accounts[client_store.loginid].accepted_bch) {\n            // showPopup({\n            //     url        : urlFor('user/warning'),\n            //     popup_id   : 'warning_popup',\n            //     form_id    : '#frm_warning',\n            //     content_id : '#warning_content',\n            //     validations: [{ selector: '#chk_accept', validations: [['req', { hide_asterisk: true }]] }],\n            //     onAccept   : () => { Client.set('accepted_bch', 1); },\n            // });\n        }\n    };\n\n    return {\n        init,\n        setBalanceActiveAccount,\n        setBalanceOtherAccounts,\n        authorizeAccount,\n    };\n})();\n\nexport default BinarySocketGeneral;\n\nconst ResponseHandlers = (() => {\n    const websiteStatus = response => {\n        if (response.website_status) {\n            const is_available = !BinarySocket.isSiteDown(response.website_status.site_status);\n            if (is_available && BinarySocket.getAvailability().is_down) {\n                window.location.reload();\n                return;\n            }\n            const is_updating = BinarySocket.isSiteUpdating(response.website_status.site_status);\n            if (is_updating && !BinarySocket.getAvailability().is_updating) {\n                // the existing connection is alive for one minute while status is updating\n                // switch to the new connection somewhere between 1-30 seconds from now\n                // to avoid everyone switching to the new connection at the same time\n                const rand_timeout = Math.floor(Math.random() * 30) + 1;\n                window.setTimeout(() => {\n                    BinarySocket.closeAndOpenNewConnection();\n                }, rand_timeout * 1000);\n            }\n            BinarySocket.setAvailability(response.website_status.site_status);\n            client_store.setWebsiteStatus(response);\n        }\n    };\n\n    const balanceActiveAccount = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceActiveAccount(response.balance);\n        }\n    };\n\n    const balanceOtherAccounts = response => {\n        if (!response.error) {\n            BinarySocketGeneral.setBalanceOtherAccounts(response.balance);\n        }\n    };\n\n    return {\n        websiteStatus,\n        balanceActiveAccount,\n        balanceOtherAccounts,\n    };\n})();\n","import BinarySocket from '_common/base/socket_base';\n\nconst WS = BinarySocket;\n\nexport default WS;\n","import { isEmptyObject, State } from '@deriv/shared';\n\nexport const hasMissingRequiredField = (account_settings, client, isAccountOfType) => {\n    if (!account_settings || isEmptyObject(account_settings)) return false;\n\n    const { is_svg, landing_company_shortcode } = client;\n\n    // TODO: [deriv-eu] refactor into its own function once more exceptions are added.\n    let required_fields;\n    if (is_svg) {\n        required_fields = getSVGRequiredFields();\n    } else {\n        required_fields = getRequiredFields();\n    }\n\n    return required_fields.some(field => !account_settings[field]);\n\n    function getSVGRequiredFields() {\n        const necessary_withdrawal_fields =\n            State.getResponse('landing_company.financial_company.requirements.withdrawal') || [];\n        const necessary_signup_fields = State.getResponse('landing_company.financial_company.requirements.signup');\n\n        const necessary_signup_fields_mapped = necessary_signup_fields\n            ? necessary_signup_fields.map(field => (field === 'residence' ? 'country' : field))\n            : [];\n\n        return [...necessary_withdrawal_fields, ...necessary_signup_fields_mapped];\n    }\n\n    function getRequiredFields() {\n        if (!isAccountOfType('financial')) return [];\n\n        const { residence } = client;\n        const required_settings_fields = [\n            'account_opening_reason',\n            'address_line_1',\n            'address_city',\n            'phone',\n            'tax_identification_number',\n            'tax_residence',\n        ];\n\n        const address_postcode_is_required = residence === 'gb' || landing_company_shortcode === 'iom';\n        if (address_postcode_is_required) required_settings_fields.push('address_postcode');\n\n        return [...required_settings_fields];\n    }\n};\n\nexport const getStatusValidations = status_arr => {\n    return status_arr.reduce((validations, stats) => {\n        validations[stats] = true;\n        return validations;\n    }, {});\n};\n\nexport const getCashierValidations = cashier_arr => {\n    return cashier_arr.reduce((validations, code) => {\n        validations[code] = true;\n        return validations;\n    }, {});\n};\n\n// Notifications keys will not be added to localStorage and will appear again after user logout/login\nexport const excluded_notifications = ['contract_sold', 'has_changed_two_fa'];\n\nexport const maintenance_notifications = ['system_maintenance', 'site_maintenance'];\n\nexport const priority_toast_messages = [\n    'svg',\n    'need_fa',\n    'p2p_daily_limit_increase',\n    'authenticate',\n    'wallets_migrated',\n    'wallets_failed',\n    'notify_financial_assessment',\n    'additional_kyc_info',\n    'svg_needs_poi_poa',\n    'svg_needs_poa',\n    'svg_needs_poi',\n    'poi_failed',\n    'poa_failed',\n    'svg_poi_expired',\n    'mt5_notification',\n    ...maintenance_notifications,\n];\n","import { useObserver } from 'mobx-react';\nimport React from 'react';\n\nconst isClassComponent = Component =>\n    !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n\nexport const MobxContent = React.createContext(null);\n\nfunction injectStorePropsToComponent(propsToSelectFn, BaseComponent) {\n    const Component = own_props => {\n        const store = React.useContext(MobxContent);\n\n        let ObservedComponent = BaseComponent;\n\n        if (isClassComponent(BaseComponent)) {\n            const FunctionalWrapperComponent = props => <BaseComponent {...props} />;\n            ObservedComponent = FunctionalWrapperComponent;\n        }\n\n        return useObserver(() => ObservedComponent({ ...own_props, ...propsToSelectFn(store, own_props) }));\n    };\n\n    Component.displayName = BaseComponent.name;\n    return Component;\n}\n\nexport const MobxContentProvider = ({ store, children }) => {\n    return <MobxContent.Provider value={{ ...store, mobxStores: store }}>{children}</MobxContent.Provider>;\n};\n\nexport const connect = propsToSelectFn => Component => injectStorePropsToComponent(propsToSelectFn, Component);\n"],"names":["ErrorComponent","header","message","redirect_label","redirectOnClick","should_clear_error_on_click","setError","redirect_to","routes","should_show_refresh","should_redirect","history","useHistory","React","listen","refresh_message","localize","PageErrorContainer","error_header","error_messages","redirect_urls","redirect_labels","buttonOnClick","location","reload","propTypes","PropTypes","notification_order","notification_order_mobile","default_delay","max_display_notifications","max_display_notifications_mobile","icon_types","danger","info","success","warning","contract_sold","announce","types","sortNotifications","promotions","news","a","b","type","sortNotificationsMobile","CurrencyDisplay","country_standpoint","currency","loginid","is_virtual","user_is_from_this_country_list","Object","values","includes","account_type","replace","Localize","i18n_default_text","is_united_kingdom","is_isle_of_man","getCurrencyName","AccountDisplay","has_error","market_type","sub_account_type","platform","server","is_dark_mode_on","is_eu","shortcode","should_show_server_name","account_title","getCFDAccountDisplay","getServerName","account","server_region","server_info","geolocation","region","sequence","Text","color","size","className","is_pathname_bot","isBot","classNames","balance","currency_icon","display_type","has_balance","has_reset_balance","is_disabled","redirectAccount","onClickResetVirtualBalance","selected_loginid","currency_badge","id","onClick","Icon","icon","Button","e","stopPropagation","secondary","small","styles","fontWeight","Money","getCurrencyDisplayCode","amount","formatMoney","should_format","show_currency","AccountWrapper","children","is_visible","toggleVisibility","ContentExpander","title","is_expanded","onToggle","is_title_spaced","getSortedAccountList","account_list","accounts","sort","a_currency","b_currency","a_is_crypto","isCryptocurrency","b_is_crypto","a_is_fiat","b_is_fiat","getSortedCFDList","a_is_demo","isDemo","b_is_demo","i","AccountSwitcher","available_crypto_currencies","account_loginid","client_residence","has_active_real_account","has_any_real_account","has_fiat","is_landing_company_loaded","is_low_risk","is_high_risk","is_logged_in","is_mobile","is_positions_drawer_on","landing_company_shortcode","logoutClient","mt5_login_list","obj_total_balance","openRealAccountSignup","should_show_real_accounts_list","show_eu_related_content","switchAccount","resetVirtualBalance","toggleAccountsDialog","togglePositionsDrawer","toggleSetCurrencyModal","upgradeable_landing_companies","real_account_creation_unlock_date","setShouldShowCooldownModal","content_flag","virtual_account_loginid","setTogglePlatformType","active_tab_index","setActiveTabIndex","is_deriv_demo_visible","setDerivDemoVisible","is_deriv_real_visible","setDerivRealVisible","is_non_eu_regulator_visible","setNonEuRegulatorVisible","is_eu_regulator_visible","setEuRegulatorVisible","wrapper_ref","scroll_ref","account_total_balance_currency","vrtc_loginid","find","vrtc_currency","section","handleLogout","closeAccountsDialog","push","then","window","href","getStaticUrl","useOnClickOutside","event","target","classList","contains","doSwitch","Analytics","substring","resetBalance","isRealAccountTab","isDemoAccountTab","is_regulated_able_to_change_currency","length","getRemainingRealAccounts","hasSetCurrency","useHasSetCurrency","canResetBalance","checkMultipleSvgAcc","all_svg_acc","ContentFlag","filter","landing_company_short","map","acc","forEach","svg_acc","have_more_accounts","startsWith","has_cr_account","demo_account","key","undefined","real_accounts","ref","index","getAccountTitle","account_residence","first_real_login_id","test","TradersHubRedirect","TradersHubLink","handleRedirect","align","Tabs","active_index","onTabItemClick","top","label","DesktopWrapper","ThemedScrollbars","height","MobileWrapper","Div100vhContainer","max_autoheight_offset","line_height","weight","amount_real","Loading","is_fullscreen","openAccountNeededModal","account_switcher","withRouter","connect","client","ui","traders_hub","residence","logout","AccountSwitcherMobile","props","disableApp","enableApp","is_upgrade_enabled","toggle","Modal","is_open","is_vertical_top","has_close_icon","toggleModal","width","onClose","visible","wrapperClassName","AccountInfoWrapper","disabled_message","Popover","alignment","zIndex","AccountInfoIcon","data_testid","DisplayAccountType","is_belgium","AccountInfo","acc_switcher_disabled_message","is_dialog_on","toggleDialog","currency_lower","toLowerCase","CSSTransition","in","timeout","enter","enterDone","exit","unmountOnExit","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","BinaryLink","active_class","to","platform_context","PlatformContext","is_appstore","normalizePath","route","getRoutesConfig","Error","NavLink","activeClassName","exact","common","observer","icon_classname","is_clickable","lang","useStore","changeSelectedLanguage","is_active","current_language","link","getAllowedLanguages","gtm","pushDataLayer","checkAppId","Route","render","pathname","removeBranchName","is_valid_route","r","cashier_subroutes","p2p_subroutes","validateRoute","component","Redirect","is_authenticated","is_logging_in","localStorage","getItem","removeItem","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","passthrough","Page404","getTitle","document","default_title","alternateLinkTagChange","canonicalLinkTagChange","prompt_when","promptFn","isEuropeCountry","useLocation","is_eu_country","fallback","Prompt","when","Switch","idx","setVerificationCode","verification_code","setResetTradingPasswordModalOpen","toggleAccountSignupModal","toggleResetPasswordModal","setNewEmail","toggleResetEmailModal","toggleUpdateEmailModal","url_query_string","search","url_params","URLSearchParams","redirected_to_route","action_param","get","code_param","ext_platform_url","redirectToExternalPlatform","url","action","form_name","email","SessionStore","hash","WS","sessionStorage","setItem","new_href","loginUrl","language","is_demo","getServerTime","fetchResidenceList","FeatureFlagsSection","feature_flags","HIDDEN_FEATURE_FLAGS","visible_feature_flags","entries","data","reduce","flags","value","hostname","website_domain","TRADE_FEATURE_FLAGS","style","marginTop","as","keys","flag","Checkbox","onChange","update","old","checked","InputField","Field","name","field","form","errors","touched","Input","autoComplete","maxLength","error","platform_store","Formik","initialValues","app_id","getAppId","getSocketURL","is_appstore_enabled","is_debug_service_worker_enabled","getDebugServiceWorker","validate","onSubmit","DERIV_APPSTORE_KEY","setIsAppStore","isSubmitting","handleChange","setFieldTouched","Form","minWidth","margin","isMobile","marginBottom","hint","rel","text","primary","marginLeft","routesConfig","Trader","moduleLoader","Reports","CFD","Account","Cashier","Bot","AppStore","Wallets","P2P","lazyLoadComplaintsPolicy","makeLazyLoader","initRoutesConfig","RouterRedirect","Endpoint","icon_component","default","CFDCompareAccounts","subroutes","is_modal","is_invisible","route_default","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","is_rest_of_eu","getExperianResult","status","is_fully_authenticated","is_age_verified","is_isle_of_man_residence","is_belgium_residence","CloseButton","NotificationStatusIcons","class_suffix","NotificationBanner","primary_btn","secondary_btn","img_src","img_alt","src","alt","cta_btn","blue","NotificationOrder","setTimeout","renderText","is_auto_close","Notification","removeNotificationMessage","linear_progress_container_ref","destroy","is_closed_by_user","closeOnClick","delay","header_popup","message_popup","LinearProgress","timeoutMessage","should_store_in_session","session_id","current","removeTimeoutSession","should_hide_close_btn","isRequired","Portal","ReactDOM","getElementById","NotificationsContent","is_notification_loaded","notifications","TransitionGroup","notification","appear","AppNotificationMessages","is_mt5","marked_notifications","notification_messages","stopNotificationLoading","markNotificationMessage","should_show_popups","setStyle","notifications_ref","setNotificationsRef","parentElement","bounds","getBoundingClientRect","is_not_marked_notification","is_non_hidden_notification","maintenance_notifications","is_only_for_p2p_notification","is_maintenance_notifications","notifications_limit","filtered_excluded_notifications","priority_toast_messages","excluded_notifications","notifications_sublist","slice","CFD_TEXT","dxtrade","mt5","mt5_cfds","ctrader","cfd","synthetic","synthetic_demo","synthetic_bvi","synthetic_svg","synthetic_v","financial","financial_demo","financial_bvi","financial_fx","financial_v","financial_svg","derivez","all","all_demo","all_svg","FORM_ERROR_MESSAGES","empty_address","address","permitted_characters","address_permitted_special_characters_message","interpolation","escapeValue","barrier","general","password","po_box","phone","postcode","signup_token","tax_id","number","decimalPlaces","decimals","decimal_count","betweenMinMax","min_value","max_value","minNumber","maxNumber","password_warnings","use_a_few_words","no_need_for_mixed_chars","uncommon_words_are_better","straight_rows_of_keys_are_easy","short_keyboard_patterns_are_easy","use_longer_keyboard_patterns","repeated_chars_are_easy","repeated_patterns_are_easy","avoid_repeated_chars","sequences_are_easy","avoid_sequences","recent_years_are_easy","avoid_recent_years","avoid_associated_years","dates_are_easy","avoid_associated_dates_and_years","top10_common_password","top100_common_password","very_common_password","similar_to_common_password","a_word_is_easy","names_are_easy","common_names_are_easy","capitalization_doesnt_help","all_uppercase_doesnt_help","reverse_doesnt_help","substitution_doesnt_help","user_dictionary","base_link","getUrlBinaryBot","display","visibility","sandbox","getPlatformFromUrl","is_staging_deriv_app","deriv_urls","ErrorBoundary","componentDidCatch","TrackJS","console","log","root_store","setState","hasError","state","store","CookieBanner","onAccept","onDecline","is_dark_mode","components","StaticUrl","is_eu_url","prototype","tracking_status_cookie","CookieStorage","TRACKING_STATUS_KEY","AppContents","show_cookie_banner","setShowCookieBanner","is_gtm_tracking","setIsGtmTracking","user_id","is_app_disabled","is_cashier_visible","is_cfd_page","is_route_modal_on","notifyAppInstall","setAppContentsScrollRef","tracking_status","child_ref","current_page","tracking","identifyEvent","scrollTop","handleInstallPrompt","preventDefault","addEventListener","removeEventListener","platforms","maxHeight","refSetter","has_horizontal","set","sameSite","secure","NetworkStatus","network_status_element","classNameBubble","tooltip","network_status","GoToDeriv","EndpointNote","server_url","fontSize","ToggleFullScreen","is_full_screen","setIsFullScreen","fullscreen_map","element","fnc_enter","fnc_exit","onFullScreen","el","full_screen_icon_class","to_exit","documentElement","fncToCall","fnc","ModalContent","settings_extension","content","VerticalTab","list","ToggleSettings","is_settings_visible","toggleSettings","toggle_settings_class","toggleLanguageSettingsModal","isCurrentLanguage","ToggleLanguageSettings","is_language_settings_modal_on","is_language_changing","should_header_stick_body","HelpCentre","ResponsibleTrading","AccountLimits","Link","xmlns","fill","d","MLTRegulatoryInformation","is_document","legal_entity_name","getLegalEntityName","MXRegulatoryInformation","MFRegulatoryInformation","RegulatoryInformation","landing_company","should_show_modal","showModal","is_mx","is_mlt","is_mf","has_cookie_account","active_loginid","useState","isReady","setIsReady","setReload","widget","LiveChatWidget","onHistoryChange","useCallback","Promise","resolve","on","call","__lc","license","livechat_license_id","n","t","c","_h","apply","_q","_v","arguments","once","off","init","createElement","async","head","appendChild","asyncInit","liveChatSetup","client_first_name","client_last_name","domain","client_information","Cookies","utm_source","utm_medium","utm_campaign","first_name","last_name","session_variables","LC_API","on_chat_ended","useEffect","is_mobile_drawer","liveChat","useLiveChat","whatsapp_url","ServerTime","server_time","gmt_time","toGMTFormat","local_time","toLocalFormat","FooterIconSeparator","FooterExtensionRenderer","footer_extension","FooterExtensionComponent","Component","position","has_left_separator","has_right_separator","Footer","footer_extensions","is_settings_modal_on","toggleSettingsModal","footer_extensions_left","footer_extensions_right","is_loading","TradingHubFooter","setDarkMode","changeTheme","clearNotifications","is_notifications_empty","disabled","notifications_array","toggleNotificationsModal","getNotificationItemIcon","item","toTitleCase","getButtonSettings","obj_key","NotificationListWrapperForwardRef","wallets_path","lineHeight","is_bypassed","displayName","is_notifications_visible","removeNotifications","removeNotificationMessageByKey","p2p_settings","LocalStore","should_show_again","notifications_toggle_btn","MobileDialog","portal_element_id","wrapper_classname","count","tooltip_message","should_disable_pointer_events","notifications_toggler_el","Counter","PlatformBox","description","PlatformDropdownContent","app_routing_history","link_to","isActive","getActivePlatform","PlatformDropdown","closeDrawer","platform_config","closest","isDesktop","platform_dropdown","height_offset","PlatformSwitcherLoader","speed","element_spacing","logo_size","name_x","name_y","container_width","container_margin","backgroundColor","foregroundColor","x","y","rx","ry","PlatformSwitcher","toggleDrawer","setIsOpen","is_close_drawer_fired_ref","getPlatformInformation","mountOnEnter","MenuItems","handleClickCashier","ReportTab","CashierTab","toggleReadyToDepositModal","toggleNeedRealAccountForCashierModal","p2p_notification_count","useP2PNotificationCount","real_account_needed_for_cashier","useIsRealAccountNeededForCashier","toggle_modal_routes","cashier_redirect","MenuLinks","is_traders_hub_routes","i18n","useTranslation","is_next_wallet_enabled","useFeatureFlags","LoginButton","has_effect","tertiary","SignupButton","redirectToSignUp","AccountActions","is_acc_switcher_on","is_acc_switcher_disabled","notifications_count","onClickDeposit","toggleNotifications","AccountsInfoLoader","LoggedInPreloader","LoggedOutPreloader","cx","cy","onUpdate","removeUpdateListener","addUpdateListener","onConfirm","validateOnMount","handleSubmit","AutoHeightWrapper","default_height","setRef","autoHide","innerHeight","has_separator","FormSubmitButton","is_absolute","has_cancel","cancel_label","onCancel","StepperHeader","has_target","has_real_account","items","getCurrentStep","getTotalSteps","sub_section_index","step","step_title","FormProgress","steps","current_step","AccountWizard","finished","mounted","setMounted","form_error","setFormError","previous_data","setPreviousData","state_items","setStateItems","should_accept_financial_risk","setShouldAcceptFinancialRisk","is_high_risk_client_for_mt5","useIsClientHighRiskForMT5","setIsTradingAssessmentForNewUserEnabled","residence_list","states_list","fetchStatesList","has_residence","setLoading","getData","get_items_props","previous_state","getItems","fetchFromStorage","form_value","getCountryCode","country_code","stored_items","JSON","parse","residences","response","phone_idd","form_values","obj","original_form_values","fromEntries","Map","trim","date_of_birth","toMoment","format","place_of_birth","getLocation","citizen","tax_residence","clearError","prevStep","goToPreviousStep","submitForm","payload","clone","tax_identification_confirm","agreed_tnc","agreed_tos","confirmation_checkbox","tax_identification_number","risk_tolerance","accumulator","val","setRealAccountFormData","realAccountSignup","updateValue","setSubmitting","goToNextStep","should_override","saveFormData","createRealAccount","cloned_items","assign","getCurrent","step_index","form_data","document_type","setIsRiskWarningVisible","real_account_signup_target","onFinishSuccess","new_account_maltainvest","onOpenWelcomeModal","new_account_samoa","new_account_real","account_settings","idv_submit_data","identity_verification_document_add","formatIDVFormValues","code","fetchAccountSettings","setShouldShowRiskWarningModal","setShouldShowAppropriatenessWarningModal","onError","accept_risk","employment_status","wizard_steps","properties","bypass_to_personal","getPropsForChild","BodyComponent","body","onSave","closeRealAccountSignup","has_currency","navHeader","Wizard","nav","FinishedModalItem","account_status","onLoading","setSubSectionIndex","financial_assessment","refreshNotifications","setIsRealAccountSignupModalVisible","upgrade_info","Headers","heading","FIAT_CURRENCY_TYPE","CRYPTO_CURRENCY_TYPE","AddCryptoCurrency","onClickBack","should_show_cancel","should_show_crypto_only","should_show_fiat_only","hasNoAvailableCrypto","getReorderedFiatCurrencies","reorderCurrencies","getReorderedCryptoCurrencies","legal_allowed_currencies","canAddCrypto","actions","canAddFiat","messages","is_add_fiat","CurrencyRadioButton","deriv","website_name","string","func","bool","all_payment_agent_list","has_payment_agent","agent","currencies","deposit_target","is_add_crypto","usePaymentAgentList","getReorderedCurrencies","allowed_currencies_payment_agent_availability","setShouldShowAllAvailableCurrencies","crypto","fiat","AddFiat","second_line_label","AddCrypto","AddCurrency","client_currency","current_currency_type","current_fiat_currency","can_change_fiat_currency","open_chat_window","non_fiat_mesage","fiat_currency","ChangeAccountCurrency","closeModal","AddOrManageAccounts","createCryptoAccount","is_add_currency","manage_real_account_tab_index","onSuccessSetAccountCurrency","resetRealAccountSignupTarget","setCurrency","setIsDeposit","setShouldShowCancel","initial_active_index","setActiveIndex","fetchMt5LoginList","previous_currency","echo_req","set_account_currency","manageOrChangeAccount","fiat_section","is_mf_active","autohide","header_fit_content","fractional_digits","is_deposit_suspended","is_suspended","is_withdrawal_suspended","stake_default","transfer_between_accounts","modules","setAccountCurrency","cashier","general_store","should_show_all_available_currencies","isLoading","hasAllCryptos","addNewCryptoAccount","reorderCryptoCurrencies","show_add_button","target_account","continueRouteAfterChooseCrypto","ChooseCurrency","currency_title","FinishedAddCurrency","redirectToLegacyPlatform","deposit_real_account_signup_target","IconNextCurrency","IconWon","SuccessMessage","prev","FinishedSetCurrency","IconPrevCurrency","IconArrow","SetCurrency","noCryptoAvailable","error_message","Heading","Message","details","error_details","address_line_1","getSignupFormFields","TryAgain","large","ErrorCTA","SignupErrorContent","error_field","is_invalid_field_error","IOMHeading","DialogHeading","DialogMessage","Array","isArray","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","getActionButton","DialogDismissButton","switchToVirtual","getDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","CloseIcon","StatusDialogContainer","icon_size","getStatus","defaultProps","choose_crypto_currency","add_currency","finished_add_currency","restricted_country_signup_error","invalid_input_error","WizardHeading","maltainvest_signup","deposit_cash_signup","cfd_score","fetchFinancialAssessment","is_from_restricted_country","is_real_acc_signup_on","setParams","setRealAccountSignupParams","setShouldShowVerifiedAccount","should_show_appropriateness_warning_modal","should_show_risk_warning_modal","state_value","is_trading_assessment_for_new_user_enabled","setIsClosingCreateRealAccountModal","state_index","is_trading_experience_incomplete","current_action","setCurrentAction","is_risk_warning_visible","real_account_form_data","risk_warning_title","local_props","closeModalthenOpenWelcomeModal","showErrorModal","closeSetCurrencySuccessModal","modal_content","setAssessmentDecline","curr","showSetCurrencySuccess","current_currency","setIsLoading","cacheFormValues","setRiskWarningTitle","active_modal_index","modal_pages_indices","onErrorConfirm","getActiveModalIndex","active_modal_index_no","set_currency","signup_error","account_wizard","add_or_manage_account","showStatusDialog","assessment_decline","handleRiskAcceptance","handleOnDecline","handleOnAccept","getModalWidth","is_set_currency_modal_visible","has_set_currency","is_hidden","onClickLink","suffix_icon","setMobileLanguageMenuOpen","is_trade_text","deriv_static_url","traders_hub_path","is_languages_link_on_mobile","is_external_link","isExternalLink","is_cashier_link","is_mobile_language_menu_open","expandSubMenu","MobileDrawer","has_subheader","submenu_title","submenu_toggle_class","ToggleMenuDrawer","toggleTheme","should_allow_authentication","active_account_landing_company","is_pending_proof_of_ownership","is_payment_agent_visible","payment_agent","is_account_transfer_visible","useAccountTransferVisible","is_onramp_visible","useOnrampVisible","is_payment_agent_transfer_visible","usePaymentAgentTransferVisible","is_p2p_enabled","useIsP2PEnabled","transitionExit","setTransitionExit","primary_routes_config","setPrimaryRoutesConfig","is_submenu_expanded","primary_routes","is_trading_hub_category","getFilteredRoutesConfig","processRoutes","clearTimeout","has_border_bottom","all_routes_config","routes_to_filter","subroutes_config","flatMap","getRoutesWithSubMenu","route_config","has_subroutes","submenu_icon","submenu_suffix_icon","route_config_path","section_icon","section_title","subroute","subindex","route_path","icon_class","ToggleSwitch","handleToggle","is_enabled","getPlatformSettings","DefaultHeader","addNotificationMessage","client_notifications","header_extension","is_bot_allowed","is_dxtrade_allowed","is_mt5_allowed","is_trading_assessment_for_existing_user_enabled","is_switching","removeUpdateNotification","filterPlatformsForClients","config","getDecimalPlaces","new_version_available","account_switcher_disabled_message","is_account_switcher_disabled","is_accounts_switcher_on","Divider","DTraderHeader","viewBox","clipPath","capitalizeFirstLetter","selected_region","openFailedVerificationModal","multipliers_account_status","CurrencySelectionModal","current_loginid","getStatusBadgeConfig","badge_text","badge_icon","is_selected","notifications_store","setIsOnboardingVisited","DefaultMobileLinks","modal_data","cashier_routes","account_balance","active_modal","traders_hub_routes","DerivRealAccountRequiredModal","is_eu_user","Dialog","confirm_button_text","cancel_button_text","is_closed_on_cancel","is_closed_on_confirm","is_deriv_account_needed_modal_visible","openDerivRealAccountNeededModal","MT5AccountNeededModal","account_needed_modal_props","target_label","target_dmt5_label","dmt5_label","deriv_label","deriv_account","dmt5_account","required_account","is_account_needed_modal_on","closeAccountNeededModal","portal_id","dialog_status","setDialogStatus","external_link","setExternalLink","onCancelDialog","onClickExternalLink","link_element","tagName","destination","URL","host","RegExp","getCurrentProductionDomain","isThirdPartyLink","open","dismissable","should_show_assessment_complete_modal","setShouldShowAssessmentCompleteModal","should_show_cooldown_modal","unblock_date","formatDate","unblock_time","formatTime","real_account_unblock_date","setMT5NotificationModal","mt5_community_url","is_mt5_notification_modal_visible","UILoader","has_full_height","footer","selectRegion","is_need_real_account_for_cashier_modal_visible","regulation","active_real_regulation","is_ready_to_deposit_modal_visible","onEscapeButtonCancel","should_show_risk_accept_modal","setShouldShowWarningModal","RiskAcceptTestWarningModal","handleAcceptAppropriatenessTestWarning","trading_assessment","setShouldShowTradingAssessmentModal","should_show_trading_assessment_modal","setShouldShowTradeAssessmentForm","updateAccountStatus","setIsTradingAssessmentForExistingUserEnabled","TradingAssessmentExistingUser","setFormValue","assessment_questions","setAssessmentQuestions","form_payload","trading_experience_regulated","handleAcceptRisk","setShouldMoveToNext","should_show_trade_assessment_form","handleCancel","setFinancialAndTradingAssessment","AccountSignupModal","ResetOrUnlinkPasswordModal","UnlinkPasswordModal","RedirectToLoginModal","SetResidenceModal","RealityCheckModal","WelcomeModal","ResetEmailModal","UpdateEmailModal","WarningScamMessageModal","WarningCloseCreateRealAccountModal","AdditionalKycInfoModal","InformationSubmittedModal","is_welcome_modal_visible","is_closing_create_real_account_modal","is_set_residence_modal_visible","is_reality_check_visible","has_maltainvest_account","setCFDScore","is_warning_scam_message_modal_visible","is_additional_kyc_info_modal_open","is_kyc_information_submitted_modal_open","temp_session_signup_params","url_action_param","ComponentToLoad","RedirectNotice","is_appstore_storage","Loadable","loader","loading","loaded","Routes","addRouteHistoryItem","setAppRouterHistory","setInitialRouteHistoryItem","initial_route","unlisten_to_change","route_to","has_lang","replaceState","urlForLanguage","MobxPropTypes","AppToastMessages","toasts","removeToast","top_toasts","is_bottom","bottom_toasts","createToast","toast_config","Toast","toast_messages","EndpointSection","formik","useFormik","toString","getFieldProps","classNameLabel","isValid","dirty","flag_name","is_devtool_open","setIsDevtoolOpen","is_translation_loaded","initCashierStore","attachModule","initCFDStore","loadSmartchartsStyles","setUrlLanguage","initFormErrorMessages","initializeTranslations","process","growthbookKey","platform_passthrough","AppWithoutTranslation","App","withTranslation","common_store","updateStore","is_online","setNetworkStatus","NetworkMonitorBase","BinarySocketGeneral","types_map_config","getClientAccountType","TypesMapConfig","gaming","virtual","getAvailableAccount","BaseStore","options","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","partial_fetch_time","makeObservable","this","observable","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","onUnmount","assertHasValidCache","local_storage_properties","session_storage_properties","store_name","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","snapshot","toJS","p","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","storage","stringify","getSnapshot","local_storage_snapshot","session_storage_snapshot","k","propertyName","concat","rules","property","intercept","change","newValue","trigger","inputs","hasOwnProperty","validator","Validator","isPassed","listener","switch_broadcast","switchEndSignal","isProduction","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","has_real_account_signup_ended","setRealAccountSignupEnd","reactions","act","freeze","Symbol","setDeviceDataCookie","cookie_name","cookie_value","cookie_object","getCookieObject","LANGUAGE_KEY","storage_key","eu_shortcode_regex","eu_excluded_regex","ClientStore","preferred_language","trading_platform_available_accounts","derivez_available_accounts","switched","currencies_list","selected_currency","is_populating_account_list","is_populating_mt5_account_list","is_populating_dxtrade_account_list","has_reality_check","is_reality_check_dismissed","reality_check_dur","reality_check_timeout","website_status","device_data","is_authorize","is_account_setting_loaded","has_enabled_two_fa","has_changed_two_fa","landing_companies","is_beta_chart","standpoint","iom","svg","malta","maltainvest","gaming_company","financial_company","mt5_disabled_signup_types","real","demo","mt5_login_list_error","dxtrade_accounts_list","ctrader_accounts_list","derivez_accounts_list","dxtrade_accounts_list_error","dxtrade_disabled_signup_types","statement","amount_mt5","amount_dxtrade","signup","reset_password","payment_withdraw","payment_agent_withdraw","trading_platform_mt5_password_reset","trading_platform_dxtrade_password_reset","request_email","social_email_change","system_email_change","new_email","account_limits","self_exclusion","local_currency_config","decimal_places","mt5_trading_servers","dxtrade_trading_servers","is_cfd_poi_completed","is_mt5_account_list_updated","prev_real_account_loginid","p2p_advertiser_info","prev_account_type","external_url_params","hasAnyRealAccount","hasAccountErrorInCFDList","CFD_PLATFORMS","setExternalParams","params","getIsMarketTypeMatching","isMT5Allowed","is_france","isDxtradeAllowed","clients_country","isBotAllowed","is_eu_or_multipliers_only","is_options_blocked","setPreferredLanguage","isEuCountrySelected","selected_country","isEuCountry","isAccountOfType","client_account_type","isDisabled","isAccountOfTypeDisabled","filtered_list","every","shouldCompleteTax","setPrevRealAccountLoginid","logind","setPrevAccountType","acc_type","setIsBetaChart","client_country","computed","account_open_date","is_svg","reality_check_duration","reality_check_dismissed","first_switchable_real_loginid","upgradeable_currencies","current_landing_company","has_real_mt5_login","has_real_dxtrade_login","has_account_error_in_mt5_real_list","has_account_error_in_mt5_demo_list","has_account_error_in_dxtrade_real_list","has_account_error_in_dxtrade_demo_list","active_accounts","all_loginids","is_crypto","default_currency","is_financial_assessment_incomplete","is_financial_assessment_needed","is_authentication_needed","is_identity_verification_needed","is_tnc_needed","is_social_signup","isEligibleForMoreDemoMt5Svg","isEligibleForMoreRealMt5","setIsCfdPoiCompleted","setCitizen","is_mt5_password_not_set","is_dxtrade_password_not_set","is_financial_information_incomplete","is_deposit_lock","is_withdrawal_lock","authentication_status","social_identity_provider","is_pending_authentication","is_financial_account","is_valid_login","has_restricted_mt5_account","has_mt5_account_with_rejected_poa","should_restrict_bvi_account_creation","should_restrict_vanuatu_account_creation","should_show_eu_content","should_show_eu_error","is_uk","is_brazil","can_have_mlt_account","can_have_mf_account","can_upgrade","can_upgrade_to","is_single_currency","is_multipliers_only","resetLocalStorageValues","getBasicUpgradeInfo","setMT5DisabledSignupTypes","setCFDDisabledSignupTypes","getLimits","setCookieAccount","updateSelfExclusion","responsePayoutCurrencies","responseAuthorize","setWebsiteStatus","accountRealReaction","setLoginInformation","updateAccountCurrency","email_address","is_website_status_ready","updateAccountList","resetMt5AccountListPopulation","responseWebsiteStatus","responseLandingCompany","setStandpoint","setRealityCheck","setLoginId","setAccounts","setSwitched","setIsAuthorize","setIsLoggingIn","broadcastAccountChange","switchAccountHandler","registerReactions","setBalanceActiveAccount","setBalanceOtherAccounts","selectCurrency","setResidence","setEmail","setAccountSettings","setAccountStatus","cleanUp","storeClientAccounts","setUserLogin","canStoreClientAccounts","setDeviceData","getSignupParams","onSetResidence","onSetCitizen","onSignup","setResidenceList","resetMt5ListPopulatedState","updateMt5LoginList","responseMT5TradingServers","responseMt5LoginList","responseDxtradeTradingServers","responseTradingPlatformAvailableAccounts","responseDerivezAvailableAccounts","responseTradingPlatformAccountsList","responseStatement","getChangeableFields","syncWithLegacyPlatforms","setVisibilityRealityCheck","clearRealityCheckTimeout","setRealityCheckDuration","cleanupRealityCheck","setTwoFAStatus","setTwoFAChangedStatus","getTwoFAStatus","updateMT5Status","setP2pAdvertiserInfo","getRedirectionLanguage","created_at","has_no_mt5","has_no_dxtrade","has_no_transaction","transactions","has_no_deposit_attempt_account_status","has_account_criteria","getDefaultAllowedCurrencies","currencies_config","company","getAccountInfo","types_map","authentication","needs_verification","cooling_off_expiration_date","client_tnc_status","terms_conditions_version","status_name","document_status","identity_status","identity","valid_login_ids_regex","token","mt5_account","is_current_mf","mt_gaming_company","financial_shortcode","gaming_shortcode","mt_gaming_shortcode","swap_free","is_other_eu","can_open_multi","cur","is_synthetic","available_account","existing_demo_accounts","has_matching_account","has_no_svg_account","existing_real_accounts","country","isOptionsBlocked","isMultipliersOnly","accepted_bch","Set","State","indexOf","canUpgrade","disabled_types_obj","current_list","runInAction","api_initial_load_error","get_limits","getRegion","removeCookies","score","get_self_exclusion","getSelfExclusion","payout_currencies","isCrypto","has_tooltip","authorize","session_start","parseInt","moment","utc","valueOf","landing_company_name","local_currencies","setCurrencies","expires","cookie","client_accounts","has_client_accounts","client_id","oauth_token","BinarySocket","authorize_response","new_data","landing_company_fullname","get_settings_response","get_settings","DEFAULT_CRYPTO_ACCOUNT_CURRENCY","is_maltainvest_account","is_samoa_account","document_number","document_additional","required_form_values","reject","is_set_storage","new_account","removeNotificationByKey","is_down","excluded_until","param","param_to_set","value_to_set","removeAllNotificationMessages","login_new_user","search_params","redirect_url","loginid_param","unused_params","setIsNewAccount","redirect_route","query_string","filterUrlQuery","stored_language","toggleSetResidenceModal","filteredQuery","excludeParamsFromUrlQuery","is_completed","getAccount","is_pre_switch","isUnableToFindLoginId","handleNotFoundLoginId","from_login_id","SocketCache","should_switch_socket_connection","getToken","setLoginFlag","obj_balance","resetVirtualBalanceNotification","account_transfer","is_mt5_transfer_in_progress","account_id","total","total_real","getPropertyValue","total_mt5","total_dxtrade","has_mt5","has_dxtrade","settings","account_status_response","get_account_status","is_initialized","requestLogout","is_logged_out","obj_params","map_names","client_object","selected_acct","acct1","is_social_signup_provider","account_key","search_param_without_account","is_client_logging_in","token1","endsWith","isTestLink","isLocal","isStaging","signup_provider","is_ready_to_process","is_cross_checked","acct","isDesktopOs","signup_params","cb","set_settings","citizenship","new_account_virtual","switchToNewlyCreatedAccount","new_user_login","curr1","residence_list_response","trading_servers","display_login","login","trading_server","trading_platform_accounts","readonly_fields","immutable_fields","smartTrader","binaryBot","iframe","origin","getUrlSmartTrader","contentWindow","postMessage","restricted_countries","risk_classification","duration","get_financial_assessment","account_security","totp_action","is_low_risk_cr_eu_real","Boolean","p2p_config","supported_currencies","toLocaleLowerCase","CommonStore","allowed_languages","app_router","changing_language_timer_id","currentLanguage","deposit_url","is_socket_opened","selected_contract_type","services_error","was_socket_opened","withdraw_url","new_url","searchParams","pushState","changeLanguage","changeCurrentLanguage","is_from_derivgo","routeBackInApp","routeTo","setAppstorePlatform","setDepositURL","setIsSocketOpened","setPlatform","setSelectedContractType","setServerTime","setServicesError","setWithdrawURL","showError","contract_type","new_language","platform_name","ext_url","decodeURI","is_external","should_broadcast_account_change","broadcastAccountChangeAfterAuthorize","you_are_offline","toggleServicesErrorModal","addToast","router_action","check_existing","findIndex","splice","unshift","additional_platform_path","route_to_item_idx","route_to_item","history_item","parent_path","split","ui_store","GTMStore","is_gtm_applicable","visitorId","common_variables","accountSwitcherListener","pushTransactionData","eventHandler","userId","loggedIn","theme","gtm_object","dataLayer","extra_data","transaction","moment_now","gtm_transactions","isAfter","epochToMoment","timestamp","unix","transactions_arr","transaction_id","bom_account_type","bom_today","time","transaction_time","login_event","is_new_account","affiliate_token","country_abbrev","today","bom_date_joined","event_name","ModulesStore","module","NotificationStore","push_notifications","p2p_order_props","p2p_redirect_to","p2p_completed_orders","handlePOAAddressMismatchNotifications","getStatusValidations","poa_address_mismatch","showPOAAddressMismatchWarningNotification","showPOAAddressMismatchSuccessNotification","showPOAAddressMismatchFailureNotification","addNotificationBar","addNotificationMessageByKey","addVerificationNotifications","filterNotificationMessages","getP2pCompletedOrders","handleClientNotifications","setClientNotifications","setP2POrderProps","setP2PRedirectTo","setShouldShowPopups","showCompletedOrderNotification","unmarkNotificationMessage","updateNotifications","debouncedGetP2pCompletedOrders","debounce","order_id","checkNotificationMessages","unique","sortFn","poi_verified","poi_failed","poa_verified","resticted_mt5_with_pending_poa","resticted_mt5_with_failed_poa","poa_rejected_for_mt5","poa_failed","getPathname","is_disposable","notifications_list","refined_list","is_p2p_notifications_visible","refined","is_poi_dob_mismatch","upgradable_daily_limits","max_daily_buy","max_daily_sell","is_10k_withdrawal_limit_reached","withdraw","malta_account","cr_account","is_website_up","site_status","has_trustpilot","trustpilot","site_maintenance","ownership","cashier_validation","cashier_locked","deposit_locked","document_needs_action","mt5_withdrawal_locked","personal_details_locked","poi_name_mismatch","withdrawal_locked","additional_kyc_info","two_f_a","need_fa","poi_dob_mismatch","notify_financial_assessment","getCashierValidations","cashier_locked_status","documents_expired","FinancialAssessmentRequired","no_residence","no_withdrawal_or_trading_status","SelfExclusion","system_maintenance","unwelcome_status","withdrawal_locked_status","ASK_AUTHENTICATE","ASK_CURRENCY","ASK_FINANCIAL_RISK_APPROVAL","ASK_FIX_DETAILS","ASK_SELF_EXCLUSION_MAX_TURNOVER_SET","ASK_TIN_INFORMATION","ASK_UK_FUNDS_PROTECTION","needs_poa","needs_poi","onfido_submissions_left","services","onfido","submissions_left","poo_required","requests","poo_rejected","svg_needs_poi_poa","svg_needs_poa","svg_needs_poi","svg_poi_expired","last_rejected","authenticate","ask_financial_risk_approval","risk","tax","ask_uk_funds_protection","max_turnover_limit_not_set","required_fields","withdrawal_locked_review","no_withdrawal_or_trading","unwelcome","dp2p","order","advertiser_details","client_details","is_reviewable","order_status","p2p_daily_limit_increase","daysSince","tnc","hasMissingRequiredField","mt5_notification","isMultiplierContract","deriv_go","advertiser_name","notification_key","setP2POrderTab","navigateToOrderDetails","notification_redirect_action","should_close_persistent","notifs","is_persistent","max_reset_limit","reset_virtual_balance","client_data","two_fa_status","platform_name_trader","platform_name_go","getUrlBase","routeToMyProfile","install_pwa","installWithDeferredPrompt","remaining","password_changed","exclusion_end","notification_obj","wallets_migrated","wallets_failed","toggleAdditionalKycInfoModal","p2p_order_list","active","UIStore","url_hashed_values","is_account_settings_visible","is_reports_visible","reports_route_tab_index","is_history_tab_active","should_show_cancellation_warning","notification_messages_ui","matchMedia","matches","has_only_forward_starting_contracts","has_read_scam_message","is_services_error_visible","is_unsupported_contract_modal_visible","is_account_signup_modal_visible","is_link_expired_modal_visible","is_reset_password_modal_visible","is_reset_email_modal_visible","is_update_email_modal_visible","is_reset_trading_password_modal_visible","is_chart_countdown_visible","is_chart_layout_default","pwa_prompt_event","screen_width","innerWidth","screen_height","is_onscreen_keyboard_active","is_advanced_duration","advanced_duration_unit","advanced_expiry_type","simple_duration_unit","duration_t","duration_s","duration_m","duration_h","duration_d","purchase_states","show_positions_toggle","modal_index","is_top_up_virtual_open","is_top_up_virtual_in_progress","is_top_up_virtual_success","real_account_signup","success_message","current_focus","mobile_toast_timeout","is_nativepicker_visible","is_landscape","is_real_tab_enabled","should_show_multipliers_onboarding","choose_crypto_currency_target","app_contents_scroll_ref","is_wallet_modal_visible","is_switch_to_deriv_account_modal_visible","is_cfd_reset_password_modal_enabled","getDurationFromUnit","unit","remove","add","closeSuccessTopUpModal","closeTopUpModal","disableRouteModal","handleResize","is_desktop","is_tablet","onChangeUiStore","openPositionsDrawer","openSwitchToRealAccountModal","openTopUpModal","populateFooterExtensions","populateHeaderExtensions","populateSettingsExtensions","removePWAPromptEvent","resetPurchaseStates","resetRealAccountSignupParams","setAccountSwitcherDisabledMessage","setCFDPasswordResetModal","setChartCountdown","setChartLayout","setCurrentFocus","setHasOnlyForwardingContracts","setHashedValue","setIsNativepickerVisible","setReportsTabIndex","toggleWelcomeModal","toggleShouldShowRealAccountsList","toggleShouldShowMultipliersOnboarding","shouldNavigateAfterChooseCrypto","setIsWalletModalVisible","setIsRealTabEnabled","setManageRealAccountActiveTabIndex","setModalIndex","setPromptHandler","setPurchaseState","setPWAPromptEvent","setRouteModal","setScamMessageLocalStorage","setTopUpInProgress","toggleAccountSettings","toggleCancellationWarning","toggleCashier","toggleHistoryTab","toggleLinkExpiredModal","toggleOnScreenKeyboard","toggleReports","toggleUnsupportedContractModal","toggleKycInformationSubmittedModal","autorun","menu_items","condition","el_purchase_buttons","getElementsByClassName","bind","is_default","state_change","has_ended","isTouchDevice","toast_index","tab_index","should_persist","prompt","deferred_prompt","userChoice","outcome","next_location","ActiveSymbolsStore","active_symbols","setActiveSymbols","ChartBarrierStore","high_barrier","low_barrier","onChartBarrierChange","hideBarrierLine","line_style","not_draggable","shade","lineStyle","shadeColor","high","low","relative","draggable","hidePriceLines","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","barrier_count","default_shade","BARRIER_LINE_STYLES","has_barrier","should_display","CONTRACT_SHADES","barriersToString","DEFAULT_SHADES","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","barriers","contract_info","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","has_stop_loss","obj_limit_order","obj_barrier","display_name","BARRIER_COLORS","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","removeBarrier","l","getLimitOrder","contract_update","has_contract_update_stop_loss","has_contract_update_take_profit","contract_update_stop_loss","contract_update_take_profit","new_take_profit","Math","abs","take_profit","order_amount","new_stop_loss","stop_loss","PortfolioStore","positions","all_positions","positions_map","open_accu_contract","main_barrier","getPositionById","createTransformer","responseQueue","active_positions","deepClone","proposalOpenContractQueueHandler","throttledUpdatePositions","populateResultDetailsFromTransaction","transaction_response","contract_id","getPositionIndexById","is_sold","is_expired","is_valid_to_sell","buy_price","exit_tick_time","date_expiry","sell_price","String","profit","updatePositions","populateResultDetails","contract_response","proposal_open_contract","getDurationTime","duration_unit","getDurationUnitText","getDurationPeriod","exit_spot","exit_tick","current_spot","isValidToSell","getDisplayStatus","profit_loss","sell_time","getEndTime","current_spot_time","entry_spot","isUserSold","res","proposalOpenContractHandler","setActivePositions","throttle","initializePortfolio","clearTable","portfolioHandler","onBuyResponse","transactionHandler","onClickCancel","onClickSell","handleSell","populateContractUpdate","pushNewPosition","removePositionById","onHoverPosition","logoutListener","networkStatusChangeListener","onMount","override","totals","is_active_empty","active_positions_count","is_empty","setPurchaseSpotBarrier","updateLimitOrderBarriers","setContractType","is_accumulator","is_multiplier","is_turbos","has_subscribed_to_poc_and_transaction","portfolio","contracts","filterDisabledPositions","pos","formatPortfolioPosition","pos1","pos2","reference","new_pos","longcode","subscriber","poc","updateContractTradeStore","updateContractReplayStore","unsubscribe","contract_trade","has_poc","addContract","updateProposal","contract_replay","populateConfig","portfolio_position","is_limit_order_update","proposal","formatted_position","indicative","prev_indicative","new_indicative","bid_price","tick_count","current_tick","getCurrentTick","hovered_position_id","updateTradeStore","is_sell_requested","msg_type","contractCancelled","sell","sell_info","sold_for","contractSold","subform_name","contract_idx","removeContract","underlying","isEnded","preSwitchAccountListener","payout","purchase","portfolio_pos","isAccumulatorContract","purchase_spot_barrier","hideOffscreenBarrier","TURBOS","hour_to_granularity_map","getExpiryTime","getChartType","start_time","expiry_time","diff","asHours","getChartGranularity","calculateGranularity","m","MarkerLine","marker_config","LINE_END","content_config","LINE_START","MarkerSpot","spot_count","MarkerSpotLabel","align_label","has_hover_toggle","is_value_hidden","spot_className","spot_epoch","spot_value","spot_profit","show_label","setShowLabel","handleHoverToggle","marker_spot","onMouseEnter","onMouseLeave","addComma","parseFloat","MARKER_TYPES_CONFIG","ContentComponent","LINE_PURCHASE","SPOT_ENTRY","SPOT_SELL","SPOT_EXIT","SPOT_MIDDLE","createMarkerConfig","marker_type","extend","getSpotCount","isDigitContract","isSmartTraderContract","createMarkerSpotEntry","entry_tick_time","component_props","entry_tick","entry_tick_display_value","createMarkerSpotExit","tick","is_user_sold","exit_tick_display_value","should_show_spot_exit","should_show_profit_label","isVanillaContract","marker_spot_type","createChartMarkers","is_delayed_markers_update","tick_stream","should_show_10_last_ticks","isAccumulatorContractOpen","markers","end_time","chart_type","date_start","tick_markers","createTickMarkers","spot_markers","marker_spots","line_markers","marker_lines","marker","react_key","purchase_time","addLabelAlignment","arr","prev_tick","is_smarttrader_contract","is_accu_contract_closed","isOpen","available_ticks","audit_details","all_ticks","ticks","epoch","exit_tick_count","isEntrySpot","_tick","is_entry_spot","is_middle_spot","isExitSpot","_idx","is_exit_spot","is_current_last_spot","exit_spot_index","is_accu_current_last_spot","is_accu_preexit_spot","spot","tick_display_value","createMarkerSpotMiddle","should_highlight_previous_spot","dark_theme","bg","fg","grey_border","lost","sold","won","light_theme","getColor","is_dark_theme","is_vanilla","colors","currency_symbols","AUD","EUR","GBP","JPY","USD","BTC","BCH","ETH","ETC","LTC","UST","getMarkerContractType","getStartText","is_non_tick_contract","symbol","toFixed","max","calculateMarker","is_last_contract","barrier_price","transaction_ids","is_accumulator_contract","is_digit_contract","is_tick_contract","is_high_low_contract","isHighLow","is_touch_contract","isTouchContract","isTurbosContract","price","quote","last_tick","getTickStreamMarkers","getContractStatus","previous_tick","getAccumulatorBarrierMarkers","prev_epoch","is_accumulator_trade_without_contract","has_crossed_accu_barriers","barrier_spot_distance","contract_status","is_accu_contract_ended","barrier_color","tick_color","getAccumulatorMarkers","in_contract_details","hasPersistentBorders","ContractStore","getContractValidationRules","digits_info","contract_config","display_status","is_ended","is_static_chart","accu_high_barrier","accu_low_barrier","accumulator_previous_spot_time","cached_barriers_data","contract_update_history","contract_update_config","barriers_array","markers_array","is_ongoing_contract","cacheProposalOpenContractResponse","createBarriersArray","isBarrierSupported","populateContractUpdateConfig","populateContractUpdateHistory","clearContractUpdateConfigValues","updateLimitOrder","getContractsArray","prev_contract_info","getAccuBarriersForContractDetails","updateBarriersArray","calculate_marker","start","end","granularity","first_tick_epoch","start_epoch","scroll_to_epoch","end_epoch","getChartConfig","extendObservable","getDigitInfo","is_settleable","sell_expired","getContractUpdateConfig","isEqualObject","contract_store","order_date","current_spot_high_barrier","current_spot_low_barrier","getAccuBarriersDefaultTimeout","ticks_epochs","ticks_epoch_array","price_array","epoch_array","ContractReplayStore","chart_state","is_market_closed","error_code","is_chart_loading","is_chart_scaling","is_forward_starting","indicative_status","should_forget_first","handleSubscribeProposalOpenContract","subscribeProposalOpenContract","forgetProposalOpenContract","setAccountSwitcherListener","removeErrorMessage","removeAccountSwitcherListener","updateMargin","chartStateChange","isForwardStarting","floor","option","market_close_prop","ContractTradeStore","contracts_map","prev_chart_type","prev_granularity","accu_barriers_timeout_id","accumulator_barriers_data","accumulator_contract_barriers_data","applicable_contracts","trade_type","trade_types","getContractTypesConfig","is_call_put","isCallPut","trade_type_is_supported","clearAccumulatorBarriersData","updateAccumulatorBarriersData","updateChartType","updateGranularity","filtered_contracts","accountSwitchListener","last_contract","getContractById","savePreviousChartMode","setNewAccumulatorBarriersData","accumulators_high_barrier","accumulators_low_barrier","should_update_contract_barriers","should_clear_contract_data_only","should_clear_timeout","new_barriers_data","prev_spot_time","ticks_history_prev_spot_time","current_spot_data","tick_update_timestamp","Date","now","delayed_barriers_data","proposal_prev_spot_time","hidden","getAccuBarriersDTraderTimeout","barriers_update_timestamp","has_default_timeout","tick_chart_types","switch_to_tick_chart","contract_current_spot","should_highlight_contract_barriers","getLastContractMarkerIndex","should_show_poc_barriers","accu_barriers_difference","bottom","font","existing_contract","contract","TradersHubStore","available_platforms","available_cfd_accounts","available_mt5_accounts","available_dxtrade_accounts","available_ctrader_accounts","available_derivez_accounts","combined_cfd_mt5_accounts","selected_account_type","is_onboarding_visited","is_failed_verification_modal_visible","is_regulators_compare_modal_visible","is_tour_open","is_account_type_modal_visible","account_type_card","selected_platform_type","open_failed_verification_for","is_account_transfer_modal_open","selected_account","is_real_wallets_upgrade_on","is_wallet_migration_failed","active_modal_tab","active_modal_wallet_id","hasMultipleSVGAccounts","getAvailableCFDAccounts","getAvailableDxtradeAccounts","getAvailableCTraderAccounts","getAvailableDerivEzAccounts","getExistingAccounts","handleTabItemClick","setWalletModalActiveTab","setWalletModalActiveWalletID","is_demo_low_risk","is_eu_selected","is_real","is_currency_switcher_disabled_for_mf","no_CR_account","no_MF_account","CFDs_restricted_countries","financial_restricted_countries","openDemoCFDAccount","openModal","openRealAccount","selectAccountType","selectAccountTypeCard","switchToCRAccount","setCombinedCFDMT5Accounts","setSelectedAccount","should_show_exit_traders_modal","startTrade","toggleAccountTransferModal","closeAccountTransferModal","toggleAccountTypeModalVisibility","toggleFailedVerificationModalVisibility","toggleIsTourOpen","toggleRegulatorsCompareModal","showTopUpModal","toggleWalletsUpgrade","setWalletsMigrationFailedPopup","getAvailablePlatforms","setSwitchEU","active_demo","active_real_mf","mf_account","tab","wallet_id","appstore_platforms","getAppstorePlatforms","availability","is_visited","is_low_risk_cr_client","platform_type","all_available_accounts","getCFDAvailableAccount","getAvailableMt5Accounts","current_list_keys","maltainvest_account","_acc","toggleMT5TradeModal","setMT5TradeAccount","onfido_status","manual_status","poa_status","STATUS","need_poa_resubmission","poa_pending","poa_not_submitted","poi_verified_by_onfido_or_manual","poi_pending_by_onfido_or_manual","poi_not_submitted_by_onfido_or_manual","manual","createCFDAccount","enableCFDPasswordModal","toggleJurisdictionModal","modal_id","short_code_and_region","short_code","charAt","toUpperCase","existing_accounts","existing_account","sub_title","display_balance","getShortCodeAndRegion","action_type","setJurisdictionSelectedShortcode","setAccountType","category","jurisdiction","setCurrentAccount","RootStore","chart_barrier_store","configure","enforceActions","clear","evt","new_currency","old_currency","oldValue","setStorageEvents","NetworkMonitor","PageError","classNameImage","image_url","doLogout","close_chat","client_store","gtm_store","session_duration_limit","session_start_time","session_timeout","onDisconnect","responseTimeoutErrorTimer","onOpen","onMessage","setSessionDurationLimit","handleError","subscribeBalances","authorizeAccount","is_ready","expectResponse","ResponseHandlers","websiteStatus","is_active_tab","user_limits","remaining_session_time","flow","mt5_list_response","balance_response","landing_company_response","active_platform","getActionFromUrl","balanceOtherAccounts","balanceActiveAccount","is_updating","rand_timeout","random","necessary_withdrawal_fields","necessary_signup_fields","necessary_signup_fields_mapped","required_settings_fields","getRequiredFields","status_arr","validations","stats","cashier_arr","MobxContent","MobxContentProvider","Provider","mobxStores","propsToSelectFn","BaseComponent","own_props","ObservedComponent","isReactComponent","isClassComponent","useObserver","injectStorePropsToComponent"],"sourceRoot":""}