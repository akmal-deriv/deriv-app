{"version":3,"file":"cfd/js/getDerivEzWebTerminalLink.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,iBAAkBA,QAAQ,wBAClC,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,gBAAiB,uBAAwBJ,GACvB,iBAAZC,QACdA,QAAQ,cAAgBD,EAAQG,QAAQ,iBAAkBA,QAAQ,wBAElEJ,EAAK,cAAgBC,EAAQD,EAAK,iBAAkBA,EAAK,uBAC1D,CATD,CASGO,MAAM,CAACC,EAA2CC,I,wFCTrDN,EAAOD,QAAUM,C,4BCAjBL,EAAOD,QAAUO,C,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaX,QAGrB,IAAIC,EAASO,EAAyBE,GAAY,CAGjDV,QAAS,CAAC,GAOX,OAHAa,EAAoBH,GAAUT,EAAQA,EAAOD,QAASS,GAG/CR,EAAOD,OACf,CCrBAS,EAAoBK,EAAKb,IACxB,IAAIc,EAASd,GAAUA,EAAOe,WAC7B,IAAOf,EAAiB,QACxB,IAAM,EAEP,OADAQ,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACjB,EAASmB,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAErB,EAASoB,IAC5EE,OAAOC,eAAevB,EAASoB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,MCoClF,E,4FAAA,GAAqCI,EAAAA,EAAAA,uBAA7BC,WAAwB,EAAZC,a","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/external umd \"@deriv/shared\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/./src/Helpers/constants.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/shared\"), require(\"@deriv/translations\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/shared\", \"@deriv/translations\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv/shared\"), require(\"@deriv/translations\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv/shared\"], root[\"@deriv/translations\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { OSDetect, getPlatformFromUrl } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TCFDsPlatformType, TMobilePlatforms } from 'Components/props.types';\nimport { CFD_PLATFORMS, MOBILE_PLATFORMS, DESKTOP_PLATFORMS, CATEGORY } from './cfd-config';\n\nconst platformsText = (platform: TCFDsPlatformType) => {\n    switch (platform) {\n        case CFD_PLATFORMS.CTRADER:\n            return 'cTrader';\n        case CFD_PLATFORMS.DERIVEZ:\n            return 'EZ';\n        case CFD_PLATFORMS.DXTRADE:\n            return 'X';\n        default:\n            return '';\n    }\n};\n\nconst platformsIcons = (platform: TCFDsPlatformType) => {\n    switch (platform) {\n        case CFD_PLATFORMS.DERIVEZ:\n            return 'DerivEz';\n        case CFD_PLATFORMS.DXTRADE:\n            return 'Dxtrade';\n        case CFD_PLATFORMS.CTRADER:\n            return 'Ctrader';\n        default:\n            return '';\n    }\n};\n\nconst getTitle = (market_type: string, is_eu_user: boolean) => {\n    if (is_eu_user) localize('MT5 CFDs');\n    return market_type;\n};\n\nconst { is_staging, is_test_link } = getPlatformFromUrl();\n\nconst REAL_DXTRADE_URL = 'https://dx.deriv.com';\nconst DEMO_DXTRADE_URL = 'https://dx-demo.deriv.com';\n\nconst CTRADER_DESKTOP_DOWNLOAD = 'https://getctrader.com/deriv/ctrader-deriv-setup.exe';\nconst CTRADER_DOWNLOAD_LINK = 'https://ctrader.com/download/';\n\nconst CTRADER_UAT_URL = 'https://ct-uat.deriv.com/';\nconst CTRADER_PRODUCTION_URL = 'https://ct.deriv.com/';\n\nconst DERIVEZ_URL = 'https://dqwsqxuu0r6t9.cloudfront.net/';\nconst DERIVEZ_IOS_APP_URL = 'https://apps.apple.com/my/app/deriv-go/id1550561298';\nconst DERIVEZ_ANDROID_APP_URL = 'https://play.google.com/store/apps/details?id=com.deriv.app&pli=1';\nconst DERIVEZ_HUAWEI_APP_URL = 'https://appgallery.huawei.com/#/app/C103801913';\n\nconst DXTRADE_IOS_APP_URL = 'https://apps.apple.com/us/app/deriv-x/id1563337503';\nconst DXTRADE_ANDROID_APP_URL = 'https://play.google.com/store/apps/details?id=com.deriv.dx';\nconst DXTRADE_HUAWEI_APP_URL = 'https://appgallery.huawei.com/app/C104633219';\n\nconst CTRADER_IOS_APP_URL = 'https://apps.apple.com/cy/app/ctrader/id767428811';\nconst CTRADER_ANDROID_APP_URL = 'https://play.google.com/store/apps/details?id=com.deriv.ct';\n\nconst getBrokerName = () => 'Deriv.com Limited';\n\nconst CTRADER_URL = is_staging || is_test_link ? CTRADER_UAT_URL : CTRADER_PRODUCTION_URL;\n\nconst getTopUpConfig = () => {\n    return {\n        minimum_amount: 1000,\n        additional_amount: 10000,\n    };\n};\n\nconst getPlatformDXTradeDownloadLink = (platform?: TMobilePlatforms) => {\n    switch (platform) {\n        case MOBILE_PLATFORMS.IOS:\n            return DXTRADE_IOS_APP_URL;\n        case MOBILE_PLATFORMS.HAUWEI:\n            return DXTRADE_HUAWEI_APP_URL;\n        case MOBILE_PLATFORMS.ANDROID:\n            return DXTRADE_ANDROID_APP_URL;\n        default:\n            return '';\n    }\n};\n\nconst getPlatformDerivEZDownloadLink = (platform: TMobilePlatforms) => {\n    switch (platform) {\n        case MOBILE_PLATFORMS.IOS:\n            return DERIVEZ_IOS_APP_URL;\n        case MOBILE_PLATFORMS.ANDROID:\n            return DERIVEZ_ANDROID_APP_URL;\n        case MOBILE_PLATFORMS.HAUWEI:\n            return DERIVEZ_HUAWEI_APP_URL;\n        default:\n            return '';\n    }\n};\n\nconst getPlatformCTraderDownloadLink = (platform: TMobilePlatforms) => {\n    switch (platform) {\n        case MOBILE_PLATFORMS.IOS:\n            return CTRADER_IOS_APP_URL;\n        case MOBILE_PLATFORMS.ANDROID:\n            return CTRADER_ANDROID_APP_URL;\n        case MOBILE_PLATFORMS.HAUWEI:\n            return '';\n        default:\n            return CTRADER_ANDROID_APP_URL;\n    }\n};\n\nconst getPlatformMt5DownloadLink = (platform: string | undefined = undefined) => {\n    switch (platform || OSDetect()) {\n        case DESKTOP_PLATFORMS.WINDOWS:\n            return 'https://download.mql5.com/cdn/web/deriv.com.limited/mt5/deriv5setup.exe';\n        case DESKTOP_PLATFORMS.LINUX:\n            return 'https://www.metatrader5.com/en/terminal/help/start_advanced/install_linux';\n        case MOBILE_PLATFORMS.IOS:\n            return 'https://download.mql5.com/cdn/mobile/mt5/ios?server=Deriv-Demo,Deriv-Server,Deriv-Server-02';\n        case DESKTOP_PLATFORMS.MACOS:\n            return 'https://download.mql5.com/cdn/web/metaquotes.software.corp/mt5/MetaTrader5.dmg';\n        case MOBILE_PLATFORMS.HAUWEI:\n            return 'https://appgallery.huawei.com/#/app/C102015329';\n        case MOBILE_PLATFORMS.ANDROID:\n            return 'https://download.mql5.com/cdn/mobile/mt5/android?server=Deriv-Demo,Deriv-Server,Deriv-Server-02';\n        default:\n            return '';\n    }\n};\n\nconst getDXTradeWebTerminalLink = (category: string, token?: string) => {\n    let url = category === CATEGORY.REAL ? REAL_DXTRADE_URL : DEMO_DXTRADE_URL;\n\n    if (token) {\n        url += `?token=${token}`;\n    }\n\n    return url;\n};\n\nconst getCTraderWebTerminalLink = (category: string, token?: string) => {\n    return `${CTRADER_URL}${token && `?token=${token}`}`;\n};\n\nconst getDerivEzWebTerminalLink = (category: string, token?: string) => {\n    let url = DERIVEZ_URL;\n\n    if (token) {\n        url += `?lang=en&token=${token}`;\n    }\n\n    return url;\n};\n\nexport {\n    REAL_DXTRADE_URL,\n    DEMO_DXTRADE_URL,\n    CTRADER_URL,\n    DERIVEZ_URL,\n    CTRADER_DOWNLOAD_LINK,\n    getBrokerName,\n    platformsText,\n    getPlatformDXTradeDownloadLink,\n    getPlatformCTraderDownloadLink,\n    getPlatformDerivEZDownloadLink,\n    getPlatformMt5DownloadLink,\n    CTRADER_DESKTOP_DOWNLOAD,\n    getDXTradeWebTerminalLink,\n    getCTraderWebTerminalLink,\n    platformsIcons,\n    getTitle,\n    getDerivEzWebTerminalLink,\n    getTopUpConfig,\n};\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","getPlatformFromUrl","is_staging","is_test_link"],"sourceRoot":""}