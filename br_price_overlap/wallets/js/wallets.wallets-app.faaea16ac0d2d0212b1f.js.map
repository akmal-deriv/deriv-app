{"version":3,"file":"wallets/js/wallets.wallets-app.faaea16ac0d2d0212b1f.js","mappings":"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","sources":["webpack://@deriv/wallets/../translations/src/components/localize.jsx","webpack://@deriv/wallets/../translations/src/components/index.js","webpack://@deriv/wallets/../translations/src/i18next/i18next.ts","webpack://@deriv/wallets/../api/src/APIContext.ts","webpack://@deriv/wallets/../api/src/useAPI.ts","webpack://@deriv/wallets/../api/src/utils/query-utils.ts","webpack://@deriv/wallets/../api/src/useInfiniteQuery.ts","webpack://@deriv/wallets/../api/src/useMutation.ts","webpack://@deriv/wallets/../api/src/useQuery.ts","webpack://@deriv/wallets/../api/src/APIProvider.tsx","webpack://@deriv/wallets/../utils/src/getAccountsFromLocalStorage.ts","webpack://@deriv/wallets/../utils/src/getActiveLoginIDFromLocalStorage.ts","webpack://@deriv/wallets/../utils/src/getActiveAuthTokenIDFromLocalStorage.ts","webpack://@deriv/wallets/../utils/src/getTruncatedString.ts","webpack://@deriv/wallets/../utils/src/unFormatLocaleString.ts","webpack://@deriv/wallets/../api/src/useInvalidateQuery.ts","webpack://@deriv/wallets/../api/src/hooks/useAuthorize.ts","webpack://@deriv/wallets/../api/src/hooks/useAccountTypes.ts","webpack://@deriv/wallets/../api/src/hooks/useBalance.ts","webpack://@deriv/wallets/../api/src/hooks/useCurrencyConfig.ts","webpack://@deriv/wallets/../api/src/hooks/useAccountsList.ts","webpack://@deriv/wallets/../api/src/hooks/useWalletAccountsList.ts","webpack://@deriv/wallets/../api/src/hooks/useActiveWalletAccount.ts","webpack://@deriv/wallets/../api/src/hooks/useSettings.ts","webpack://@deriv/wallets/../api/src/hooks/useLandingCompany.ts","webpack://@deriv/wallets/../api/src/hooks/useAllAvailableAccounts.ts","webpack://@deriv/wallets/../api/src/hooks/useAvailableMT5Accounts.ts","webpack://@deriv/wallets/../api/src/hooks/useAvailableWallets.ts","webpack://@deriv/wallets/../api/src/hooks/useMT5AccountsList.ts","webpack://@deriv/wallets/../api/src/hooks/useDxtradeAccountsList.ts","webpack://@deriv/wallets/../api/src/hooks/useCtraderAccountsList.ts","webpack://@deriv/wallets/../api/src/hooks/useCancelCryptoTransaction.ts","webpack://@deriv/wallets/../api/src/hooks/useCashierFiatAddress.ts","webpack://@deriv/wallets/../api/src/hooks/useCreateMT5Account.ts","webpack://@deriv/wallets/../api/src/hooks/useCreateNewRealAccount.ts","webpack://@deriv/wallets/../api/src/hooks/useCreateOtherCFDAccount.ts","webpack://@deriv/wallets/../api/src/useSubscription.ts","webpack://@deriv/wallets/../api/src/hooks/useCryptoTransactions.ts","webpack://@deriv/wallets/../api/src/hooks/useDepositCryptoAddress.ts","webpack://@deriv/wallets/../api/src/hooks/useDynamicLeverage.ts","webpack://@deriv/wallets/../api/src/hooks/useSortedMT5Accounts.ts","webpack://@deriv/wallets/../api/src/hooks/useTradingPlatformPasswordChange.ts","webpack://@deriv/wallets/../api/src/hooks/useTransactions.ts","webpack://@deriv/wallets/../api/src/hooks/useTransferBetweenAccounts.ts","webpack://@deriv/wallets/../api/src/hooks/useVerifyEmail.ts","webpack://@deriv/wallets/./src/hooks/useDevice.ts","webpack://@deriv/wallets/./src/components/ModalProvider/ModalProvider.tsx","webpack://@deriv/wallets/./src/components/Base/Divider/Divider.tsx","webpack://@deriv/wallets/./src/public/images/warning.svg","webpack://@deriv/wallets/./src/components/Base/InlineMessage/InlineMessage.tsx","webpack://@deriv/wallets/./src/public/images/alert-annouce.svg","webpack://@deriv/wallets/./src/public/images/alert-danger.svg","webpack://@deriv/wallets/./src/public/images/alert-info.svg","webpack://@deriv/wallets/./src/public/images/close-icon.svg","webpack://@deriv/wallets/./src/components/Base/WalletText/WalletText.tsx","webpack://@deriv/wallets/./src/components/Base/ModalStepWrapper/ModalStepWrapper.tsx","webpack://@deriv/wallets/./src/public/images/ic-close-dark.svg","webpack://@deriv/wallets/./src/components/Base/ModalWrapper/ModalWrapper.tsx","webpack://@deriv/wallets/./src/components/Base/ProgressBar/ProgressBar.tsx","webpack://@deriv/wallets/./src/components/Base/Tabs/Tabs.tsx","webpack://@deriv/wallets/./src/components/Base/Tabs/TabList.tsx","webpack://@deriv/wallets/./src/components/Base/Tabs/TabPanel.tsx","webpack://@deriv/wallets/./src/components/Base/Tabs/TabPanels.tsx","webpack://@deriv/wallets/./src/components/Base/Tooltip/Tooltip.tsx","webpack://@deriv/wallets/./src/components/Base/WalletButton/WalletButton.tsx","webpack://@deriv/wallets/./src/components/Base/WalletButtonGroup/WalletButtonGroup.tsx","webpack://@deriv/wallets/./src/public/images/ic-checkmark-circle.svg","webpack://@deriv/wallets/./src/public/images/clipboard.svg","webpack://@deriv/wallets/./src/components/Base/WalletClipboard/WalletClipboard.tsx","webpack://@deriv/wallets/./src/public/images/pointed-down-arrow-icon.svg","webpack://@deriv/wallets/./src/utils/reactNodeToString.ts","webpack://@deriv/wallets/./src/components/Base/WalletDropdown/WalletDropdown.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/components/TransactionStatusError/TransactionStatusError.tsx","webpack://@deriv/wallets/./src/public/images/ic-cross-light.svg","webpack://@deriv/wallets/./src/features/cashier/components/WalletActionModal/WalletActionModal.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/components/CryptoTransaction/CryptoTransaction.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/components/TransactionStatusSuccess/TransactionStatusSuccess.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/utils/transactionDisplayMapper.ts","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/hooks/useRecentTransactions.ts","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/TransactionStatus.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoAddress/DepositCryptoAddress.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoCurrencyDetails/DepositCryptoCurrencyDetails.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoDisclaimers/DepositCryptoDisclaimers.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoTryFiatOnRamp/DepositCryptoTryFiatOnRamp.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/DepositCrypto.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/DepositFiat/DepositFiat.tsx","webpack://@deriv/wallets/./src/utils/utils.ts","webpack://@deriv/wallets/./src/components/WalletsActionScreen/WalletsActionScreen.tsx","webpack://@deriv/wallets/./src/public/images/ic-demo-reset-balance.svg","webpack://@deriv/wallets/./src/public/images/ic-demo-reset-balance-done.svg","webpack://@deriv/wallets/./src/features/cashier/modules/ResetBalance/ResetBalance.tsx","webpack://@deriv/wallets/./src/public/images/filter.svg","webpack://@deriv/wallets/./src/public/images/eusdt.svg","webpack://@deriv/wallets/./src/components/WalletCardIcon/WalletCardIcon.tsx","webpack://@deriv/wallets/./src/public/images/bitcoin.svg","webpack://@deriv/wallets/./src/public/images/demo.svg","webpack://@deriv/wallets/./src/public/images/eth.svg","webpack://@deriv/wallets/./src/public/images/eur.svg","webpack://@deriv/wallets/./src/public/images/gbp.svg","webpack://@deriv/wallets/./src/public/images/ltc.svg","webpack://@deriv/wallets/./src/public/images/usd.svg","webpack://@deriv/wallets/./src/public/images/usdc.svg","webpack://@deriv/wallets/./src/components/WalletGradientBackground/WalletGradientBackground.tsx","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompletedRow/TransactionsCompletedRow.tsx","webpack://@deriv/wallets/./src/public/images/no-recent-transactions.svg","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsNoDataState/TransactionsNoDataState.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsTable/TransactionsTable.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompleted/TransactionsCompleted.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPendingRow/TransactionsPendingRow.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPending/TransactionsPending.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/Transactions.tsx","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountCard/TransferFormAccountCard.tsx","webpack://@deriv/wallets/./src/components/Loader/Loader.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountSelection/TransferFormAccountSelection.tsx","webpack://@deriv/wallets/./src/public/images/ic-dropdown.svg","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormDropdown/TransferFormDropdown.tsx","webpack://@deriv/wallets/./src/hooks/useInputDecimalFormatter.ts","webpack://@deriv/wallets/./src/hooks/useInputATMFormatter.ts","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormInputField/TransferFormInputField.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/TransferForm.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/Transfer.tsx","webpack://@deriv/wallets/./src/public/images/email-verification.svg","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationRequest/WithdrawalVerificationRequest.tsx","webpack://@deriv/wallets/./src/public/images/email-sent.svg","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationSent/WithdrawalVerificationSent.tsx","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerification.tsx","webpack://@deriv/wallets/./src/features/cashier/flows/WalletDeposit/WalletDeposit.tsx","webpack://@deriv/wallets/./src/features/cashier/flows/WalletResetBalance/WalletResetBalance.tsx","webpack://@deriv/wallets/./src/features/cashier/flows/WalletTransactions/WalletTransactions.tsx","webpack://@deriv/wallets/./src/features/cashier/flows/WalletTransfer/WalletTransfer.tsx","webpack://@deriv/wallets/./src/features/cashier/flows/WalletWithdrawal/WalletWithdrawal.tsx","webpack://@deriv/wallets/./src/features/cashier/components/WalletCashierContent/WalletCashierContent.tsx","webpack://@deriv/wallets/./src/public/images/ic-cashier-deposit.svg","webpack://@deriv/wallets/./src/public/images/ic-cashier-statement.svg","webpack://@deriv/wallets/./src/public/images/ic-cashier-transfer.svg","webpack://@deriv/wallets/./src/public/images/ic-cashier-withdrawal.svg","webpack://@deriv/wallets/./src/public/images/plus-thin.svg","webpack://@deriv/wallets/./src/features/cashier/components/WalletCashierHeader/WalletCashierHeader.tsx","webpack://@deriv/wallets/./src/features/cashier/WalletCashier.tsx","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsListEmptyState.tsx","webpack://@deriv/wallets/./src/public/images/ctrader.svg","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AddedCTraderAccountsList/AddedCTraderAccountsList.tsx","webpack://@deriv/wallets/./src/public/images/ic-password-show.svg","webpack://@deriv/wallets/./src/public/images/mt5-derived.svg","webpack://@deriv/wallets/./src/public/images/mt5-financial.svg","webpack://@deriv/wallets/./src/public/images/mt5-swap-free.svg","webpack://@deriv/wallets/./src/features/cfd/constants.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.tsx","webpack://@deriv/wallets/./src/public/images/add-icon.svg","webpack://@deriv/wallets/./src/public/images/ic-dxtrade-password.svg","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/components/DynamicLeverageContext/DynamicLeverageContext.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTableColumnHeader.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageMarketCard.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageScreen.tsx","webpack://@deriv/wallets/./src/public/images/ic-back-arrow.svg","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTitle.tsx","webpack://@deriv/wallets/./src/public/images/ic-documents.svg","webpack://@deriv/wallets/./src/public/images/ic-id-card.svg","webpack://@deriv/wallets/./src/public/images/ic-not-applicable.svg","webpack://@deriv/wallets/./src/public/images/ic-selfie.svg","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction_maltainvest_contents.ts","webpack://@deriv/wallets/./src/public/images/ic-verification-failed-status.svg","webpack://@deriv/wallets/./src/public/images/ic-verification-pending-status.svg","webpack://@deriv/wallets/./src/public/images/ic-verification-success-status.svg","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-verification-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardBack.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardRow.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardTag.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCard.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-bvi-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-labuan-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-svg-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/jurisdiction-contents/jurisdiction-vanuatu-contents.ts","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionScreen.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/JurisdictionModal/JurisdictionModal.tsx","webpack://@deriv/wallets/./src/features/cfd/modals/MT5AccountTypeModal/MT5AccountTypeModal.tsx","webpack://@deriv/wallets/./src/public/images/ic-mt5-password.svg","webpack://@deriv/wallets/./src/features/cfd/modals/MT5PasswordModal/MT5PasswordModal.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/GetMoreMT5Accounts/GetMoreMT5Accounts.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountTypeCard/MT5AccountTypeCard.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountType/MT5AccountType.tsx","webpack://@deriv/wallets/./src/public/images/deriv-apps.svg","webpack://@deriv/wallets/./src/public/images/derivx.svg","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.tsx","webpack://@deriv/wallets/./src/features/cfd/screens/Success/Success.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AvailableCTraderAccountsList/AvailableCTraderAccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/components/CTraderList/CTraderList.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAccordionLoader/WalletsAccordionLoader.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAddMoreLoader/WalletsAddMoreLoader.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsCarouselLoader/WalletsCarouselLoader.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsDepositCryptoAddressLoader/WalletsDepositCryptoAddressLoader.tsx","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsTransactionStatusLoader/WalletsTransactionStatusLoader.tsx","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.tsx","webpack://@deriv/wallets/./src/helpers/urls.ts","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/components/MT5PlatformsList/MT5PlatformsList.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AddedDxtradeAccountsList/AddedDxtradeAccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AvailableDxtradeAccountsList/AvailableDxtradeAccountsList.tsx","webpack://@deriv/wallets/./src/features/cfd/components/OtherCFDPlatformsList/OtherCFDPlatformsList.tsx","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.tsx","webpack://@deriv/wallets/./src/public/images/ic-appstore-binary-bot.svg","webpack://@deriv/wallets/./src/public/images/ic-appstore-deriv-bot.svg","webpack://@deriv/wallets/./src/public/images/ic-appstore-deriv-go.svg","webpack://@deriv/wallets/./src/public/images/ic-appstore-deriv-trader.svg","webpack://@deriv/wallets/./src/public/images/ic-appstore-smart-trader.svg","webpack://@deriv/wallets/./src/constants/constants.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsGetAccount.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsTradingAccount.tsx","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.tsx","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.tsx","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.tsx","webpack://@deriv/wallets/./src/components/WalletListCardIBalance/WalletListCardIBalance.tsx","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.tsx","webpack://@deriv/wallets/./src/components/WalletListCardTitle/WalletListCardTitle.tsx","webpack://@deriv/wallets/./src/components/WalletListCardIDetails/WalletListCardIDetails.tsx","webpack://@deriv/wallets/./src/components/WalletListCard/WalletListCard.tsx","webpack://@deriv/wallets/./src/components/WalletsAccordion/WalletsAccordion.tsx","webpack://@deriv/wallets/./src/components/DesktopWalletsList/DesktopWalletsList.tsx","webpack://@deriv/wallets/./src/components/WalletCard/WalletCard.tsx","webpack://@deriv/wallets/./src/public/images/no-wallet.svg","webpack://@deriv/wallets/./src/components/WalletNoWalletFoundState/WalletNoWalletFoundState.tsx","webpack://@deriv/wallets/./src/public/images/check.svg","webpack://@deriv/wallets/./src/public/images/plus.svg","webpack://@deriv/wallets/./src/public/images/currencies/eusdt.svg","webpack://@deriv/wallets/./src/components/WalletAddMoreCurrencyIcon/WalletAddMoreCurrencyIcon.tsx","webpack://@deriv/wallets/./src/public/images/currencies/aud.svg","webpack://@deriv/wallets/./src/public/images/currencies/btc.svg","webpack://@deriv/wallets/./src/public/images/currencies/eth.svg","webpack://@deriv/wallets/./src/public/images/currencies/eur.svg","webpack://@deriv/wallets/./src/public/images/currencies/gbp.svg","webpack://@deriv/wallets/./src/public/images/currencies/ltc.svg","webpack://@deriv/wallets/./src/public/images/currencies/usd.svg","webpack://@deriv/wallets/./src/public/images/currencies/usdc.svg","webpack://@deriv/wallets/./src/components/WalletAddMoreCurrencyIcon/index.ts","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardBanner/WalletsAddMoreCardBanner.tsx","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardBanner/index.ts","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardContent/WalletsAddMoreCardContent.tsx","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardContent/index.ts","webpack://@deriv/wallets/./src/components/WalletsAddMoreCard/WalletsAddMoreCard.tsx","webpack://@deriv/wallets/./src/components/WalletsAddMoreCard/index.ts","webpack://@deriv/wallets/./src/components/WalletsAddMoreCarousel/WalletsAddMoreCarousel.tsx","webpack://@deriv/wallets/./src/components/WalletsCarouselContent/WalletsCarouselContent.tsx","webpack://@deriv/wallets/./src/components/WalletsCarousel/WalletsCarousel.tsx","webpack://@deriv/wallets/./src/public/images/ic-cashier-error.svg","webpack://@deriv/wallets/./src/components/WalletsErrorScreen/WalletsErrorScreen.tsx","webpack://@deriv/wallets/./src/components/WalletTourGuide/WalletTourGuideSettings.tsx","webpack://@deriv/wallets/./src/components/WalletTourGuide/WalletTourGuide.tsx","webpack://@deriv/wallets/./src/routes/CashierModalRoute/CashierModalRoute.tsx","webpack://@deriv/wallets/./src/routes/WalletsListingRoute/WalletsListingRoute.tsx","webpack://@deriv/wallets/./src/routes/Router.tsx","webpack://@deriv/wallets/./src/AppContent.tsx","webpack://@deriv/wallets/./src/App.tsx","webpack://@deriv/wallets/./src/AppContent.scss","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.scss","webpack://@deriv/wallets/./src/components/Base/Divider/Divider.scss","webpack://@deriv/wallets/./src/components/Base/InlineMessage/InlineMessage.scss","webpack://@deriv/wallets/./src/components/Base/ModalStepWrapper/ModalStepWrapper.scss","webpack://@deriv/wallets/./src/components/Base/ModalWrapper/ModalWrapper.scss","webpack://@deriv/wallets/./src/components/Base/ProgressBar/ProgressBar.scss","webpack://@deriv/wallets/./src/components/Base/Tabs/TabList.scss","webpack://@deriv/wallets/./src/components/Base/Tooltip/Tooltip.scss","webpack://@deriv/wallets/./src/components/Base/WalletAlertMessage/WalletAlertMessage.scss","webpack://@deriv/wallets/./src/components/Base/WalletButton/WalletButton.scss","webpack://@deriv/wallets/./src/components/Base/WalletButtonGroup/WalletButtonGroup.scss","webpack://@deriv/wallets/./src/components/Base/WalletClipboard/WalletClipboard.scss","webpack://@deriv/wallets/./src/components/Base/WalletDropdown/WalletDropdown.scss","webpack://@deriv/wallets/./src/components/Base/WalletText/WalletText.scss","webpack://@deriv/wallets/./src/components/Base/WalletTextField/WalletTextField.scss","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.scss","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.scss","webpack://@deriv/wallets/./src/components/DesktopWalletsList/DesktopWalletsList.scss","webpack://@deriv/wallets/./src/components/FadedAnimatedList/FadedAnimatedList.scss","webpack://@deriv/wallets/./src/components/Loader/Loader.scss","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAccordionLoader/WalletsAccordionLoader.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAddMoreLoader/WalletsAddMoreLoader.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsCarouselLoader/WalletsCarouselLoader.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsDepositCryptoAddressLoader/WalletsDepositCryptoAddressLoader.scss","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsTransactionStatusLoader/WalletsTransactionStatusLoader.scss","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.scss","webpack://@deriv/wallets/./src/components/WalletAddMoreCurrencyIcon/WalletAddMoreCurrencyIcon.scss","webpack://@deriv/wallets/./src/components/WalletCard/WalletCard.scss","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.scss","webpack://@deriv/wallets/./src/components/WalletGradientBackground/WalletGradientBackground.scss","webpack://@deriv/wallets/./src/components/WalletListCard/WalletListCard.scss","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.scss","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.scss","webpack://@deriv/wallets/./src/components/WalletListCardIBalance/WalletListCardIBalance.scss","webpack://@deriv/wallets/./src/components/WalletListCardIDetails/WalletListCardIDetails.scss","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.scss","webpack://@deriv/wallets/./src/components/WalletNoWalletFoundState/WalletNoWalletFoundState.scss","webpack://@deriv/wallets/./src/components/WalletTourGuide/WalletTourGuide.scss","webpack://@deriv/wallets/./src/components/WalletsAccordion/WalletsAccordion.scss","webpack://@deriv/wallets/./src/components/WalletsActionScreen/WalletsActionScreen.scss","webpack://@deriv/wallets/./src/components/WalletsAddMoreCard/WalletsAddMoreCard.scss","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardBanner/WalletsAddMoreCardBanner.scss","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardContent/WalletsAddMoreCardContent.scss","webpack://@deriv/wallets/./src/components/WalletsAddMoreCarousel/WalletsAddMoreCarousel.scss","webpack://@deriv/wallets/./src/components/WalletsCarouselContent/WalletsCarouselContent.scss","webpack://@deriv/wallets/./src/features/cashier/WalletCashier.scss","webpack://@deriv/wallets/./src/features/cashier/components/WalletActionModal/WalletActionModal.scss","webpack://@deriv/wallets/./src/features/cashier/components/WalletCashierHeader/WalletCashierHeader.scss","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/DepositCrypto.scss","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoAddress/DepositCryptoAddress.scss","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoDisclaimers/DepositCryptoDisclaimers.scss","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoTryFiatOnRamp/DepositCryptoTryFiatOnRamp.scss","webpack://@deriv/wallets/./src/features/cashier/modules/DepositFiat/DepositFiat.scss","webpack://@deriv/wallets/./src/features/cashier/modules/ResetBalance/ResetBalance.scss","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/TransactionStatus.scss","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/components/CryptoTransaction/CryptoTransaction.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/Transactions.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompleted/TransactionsCompleted.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompletedRow/TransactionsCompletedRow.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsNoDataState/TransactionsNoDataState.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPending/TransactionsPending.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPendingRow/TransactionsPendingRow.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsTable/TransactionsTable.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/TransferForm.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountCard/TransferFormAccountCard.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountSelection/TransferFormAccountSelection.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormDropdown/TransferFormDropdown.scss","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormInputField/TransferFormInputField.scss","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationRequest/WithdrawalVerificationRequest.scss","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationSent/WithdrawalVerificationSent.scss","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.scss","webpack://@deriv/wallets/./src/features/cfd/components/CTraderList/CTraderList.scss","webpack://@deriv/wallets/./src/features/cfd/components/MT5PlatformsList/MT5PlatformsList.scss","webpack://@deriv/wallets/./src/features/cfd/components/ModalTradeWrapper/ModalTradeWrapper.scss","webpack://@deriv/wallets/./src/features/cfd/components/OtherCFDPlatformsList/OtherCFDPlatformsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AddedCTraderAccountsList/AddedCTraderAccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AvailableCTraderAccountsList/AvailableCTraderAccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AddedDxtradeAccountsList/AddedDxtradeAccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AvailableDxtradeAccountsList/AvailableDxtradeAccountsList.scss","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.scss","webpack://@deriv/wallets/./src/features/cfd/modals/JurisdictionModal/JurisdictionModal.scss","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.scss","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageMarketCard.scss","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageScreen.scss","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTableColumnHeader.scss","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTitle.scss","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.scss","webpack://@deriv/wallets/./src/features/cfd/screens/GetMoreMT5Accounts/GetMoreMT5Accounts.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCard.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardBack.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardRow.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardTag.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionScreen.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountType/MT5AccountType.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountTypeCard/MT5AccountTypeCard.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeDetailsItem/MT5TradeDetailsItem.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5TradeLink.scss","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeScreen.scss","webpack://@deriv/wallets/./src/features/cfd/screens/Success/Success.scss","webpack://@deriv/wallets/./src/index.scss","webpack://@deriv/wallets/./src/routes/CashierModalRoute/CashierModalRoute.scss","webpack://@deriv/wallets/./src/routes/WalletsListingRoute/WalletsListingRoute.scss","webpack://@deriv/wallets/./src/styles/fonts.scss","webpack://@deriv/wallets/../../node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://@deriv/wallets/./src/AppContent.scss?074a","webpack://@deriv/wallets/./src/components/AccountsList/AccountsList.scss?bc2a","webpack://@deriv/wallets/./src/components/Base/Divider/Divider.scss?70c7","webpack://@deriv/wallets/./src/components/Base/InlineMessage/InlineMessage.scss?601b","webpack://@deriv/wallets/./src/components/Base/ModalStepWrapper/ModalStepWrapper.scss?aad6","webpack://@deriv/wallets/./src/components/Base/ModalWrapper/ModalWrapper.scss?c29e","webpack://@deriv/wallets/./src/components/Base/ProgressBar/ProgressBar.scss?9f1d","webpack://@deriv/wallets/./src/components/Base/Tabs/TabList.scss?b13f","webpack://@deriv/wallets/./src/components/Base/Tooltip/Tooltip.scss?99a7","webpack://@deriv/wallets/./src/components/Base/WalletAlertMessage/WalletAlertMessage.scss?d518","webpack://@deriv/wallets/./src/components/Base/WalletButton/WalletButton.scss?75f6","webpack://@deriv/wallets/./src/components/Base/WalletButtonGroup/WalletButtonGroup.scss?7170","webpack://@deriv/wallets/./src/components/Base/WalletClipboard/WalletClipboard.scss?e929","webpack://@deriv/wallets/./src/components/Base/WalletDropdown/WalletDropdown.scss?5a99","webpack://@deriv/wallets/./src/components/Base/WalletText/WalletText.scss?407e","webpack://@deriv/wallets/./src/components/Base/WalletTextField/WalletTextField.scss?c594","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSection.scss?1be7","webpack://@deriv/wallets/./src/components/DerivAppsSection/DerivAppsSuccessFooter.scss?188d","webpack://@deriv/wallets/./src/components/DesktopWalletsList/DesktopWalletsList.scss?c0ec","webpack://@deriv/wallets/./src/components/FadedAnimatedList/FadedAnimatedList.scss?55c6","webpack://@deriv/wallets/./src/components/Loader/Loader.scss?7781","webpack://@deriv/wallets/./src/components/OptionsAndMultipliersListing/OptionsAndMultipliersListing.scss?d22a","webpack://@deriv/wallets/./src/components/SkeletonLoader/TradingAppCardLoader/TradingAppCardLoader.scss?8dea","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAccordionLoader/WalletsAccordionLoader.scss?c185","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsAddMoreLoader/WalletsAddMoreLoader.scss?10b3","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsCarouselLoader/WalletsCarouselLoader.scss?448a","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsDepositCryptoAddressLoader/WalletsDepositCryptoAddressLoader.scss?3e66","webpack://@deriv/wallets/./src/components/SkeletonLoader/WalletsTransactionStatusLoader/WalletsTransactionStatusLoader.scss?f244","webpack://@deriv/wallets/./src/components/TradingAccountCard/TradingAccountCard.scss?3571","webpack://@deriv/wallets/./src/components/WalletAddMoreCurrencyIcon/WalletAddMoreCurrencyIcon.scss?0524","webpack://@deriv/wallets/./src/components/WalletCard/WalletCard.scss?a2c1","webpack://@deriv/wallets/./src/components/WalletCurrencyCard/WalletCurrencyCard.scss?d0c6","webpack://@deriv/wallets/./src/components/WalletGradientBackground/WalletGradientBackground.scss?f2b3","webpack://@deriv/wallets/./src/components/WalletListCard/WalletListCard.scss?fb0c","webpack://@deriv/wallets/./src/components/WalletListCardActions/WalletListCardActions.scss?e14e","webpack://@deriv/wallets/./src/components/WalletListCardBadge/WalletListCardBadge.scss?f214","webpack://@deriv/wallets/./src/components/WalletListCardIBalance/WalletListCardIBalance.scss?6600","webpack://@deriv/wallets/./src/components/WalletListCardIDetails/WalletListCardIDetails.scss?4584","webpack://@deriv/wallets/./src/components/WalletMarketCurrencyIcon/WalletMarketCurrencyIcon.scss?10e2","webpack://@deriv/wallets/./src/components/WalletNoWalletFoundState/WalletNoWalletFoundState.scss?f270","webpack://@deriv/wallets/./src/components/WalletTourGuide/WalletTourGuide.scss?1e49","webpack://@deriv/wallets/./src/components/WalletsAccordion/WalletsAccordion.scss?54da","webpack://@deriv/wallets/./src/components/WalletsActionScreen/WalletsActionScreen.scss?536c","webpack://@deriv/wallets/./src/components/WalletsAddMoreCard/WalletsAddMoreCard.scss?c506","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardBanner/WalletsAddMoreCardBanner.scss?7f8e","webpack://@deriv/wallets/./src/components/WalletsAddMoreCardContent/WalletsAddMoreCardContent.scss?dfa9","webpack://@deriv/wallets/./src/components/WalletsAddMoreCarousel/WalletsAddMoreCarousel.scss?fa8d","webpack://@deriv/wallets/./src/components/WalletsCarouselContent/WalletsCarouselContent.scss?6c9f","webpack://@deriv/wallets/./src/features/cashier/WalletCashier.scss?510c","webpack://@deriv/wallets/./src/features/cashier/components/WalletActionModal/WalletActionModal.scss?aef3","webpack://@deriv/wallets/./src/features/cashier/components/WalletCashierHeader/WalletCashierHeader.scss?7dbb","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/DepositCrypto.scss?b230","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoAddress/DepositCryptoAddress.scss?9087","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoDisclaimers/DepositCryptoDisclaimers.scss?1206","webpack://@deriv/wallets/./src/features/cashier/modules/DepositCrypto/components/DepositCryptoTryFiatOnRamp/DepositCryptoTryFiatOnRamp.scss?9293","webpack://@deriv/wallets/./src/features/cashier/modules/DepositFiat/DepositFiat.scss?394b","webpack://@deriv/wallets/./src/features/cashier/modules/ResetBalance/ResetBalance.scss?ba04","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/TransactionStatus.scss?bff3","webpack://@deriv/wallets/./src/features/cashier/modules/TransactionStatus/components/CryptoTransaction/CryptoTransaction.scss?e93a","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/Transactions.scss?1b47","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompleted/TransactionsCompleted.scss?612c","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsCompletedRow/TransactionsCompletedRow.scss?9659","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsNoDataState/TransactionsNoDataState.scss?eb76","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPending/TransactionsPending.scss?084f","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsPendingRow/TransactionsPendingRow.scss?4b6a","webpack://@deriv/wallets/./src/features/cashier/modules/Transactions/components/TransactionsTable/TransactionsTable.scss?ddbf","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/TransferForm.scss?770b","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountCard/TransferFormAccountCard.scss?043e","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormAccountSelection/TransferFormAccountSelection.scss?b242","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormDropdown/TransferFormDropdown.scss?5511","webpack://@deriv/wallets/./src/features/cashier/modules/Transfer/TransferForm/components/TransferFormInputField/TransferFormInputField.scss?b442","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationRequest/WithdrawalVerificationRequest.scss?8483","webpack://@deriv/wallets/./src/features/cashier/modules/WithdrawalVerification/WithdrawalVerificationSent/WithdrawalVerificationSent.scss?a251","webpack://@deriv/wallets/./src/features/cfd/CFDPlatformsList.scss?a4df","webpack://@deriv/wallets/./src/features/cfd/components/CTraderList/CTraderList.scss?ceb8","webpack://@deriv/wallets/./src/features/cfd/components/MT5PlatformsList/MT5PlatformsList.scss?894e","webpack://@deriv/wallets/./src/features/cfd/components/ModalTradeWrapper/ModalTradeWrapper.scss?4af6","webpack://@deriv/wallets/./src/features/cfd/components/OtherCFDPlatformsList/OtherCFDPlatformsList.scss?1673","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AddedCTraderAccountsList/AddedCTraderAccountsList.scss?faa1","webpack://@deriv/wallets/./src/features/cfd/flows/CTrader/AvailableCTraderAccountsList/AvailableCTraderAccountsList.scss?096e","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AddedMT5AccountsList/AddedMT5AccountsList.scss?760d","webpack://@deriv/wallets/./src/features/cfd/flows/MT5/AvailableMT5AccountsList/AvailableMT5AccountsList.scss?eba4","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AddedDxtradeAccountsList/AddedDxtradeAccountsList.scss?6d83","webpack://@deriv/wallets/./src/features/cfd/flows/OtherCFDs/Dxtrade/AvailableDxtradeAccountsList/AvailableDxtradeAccountsList.scss?d56d","webpack://@deriv/wallets/./src/features/cfd/modals/DxtradeEnterPasswordModal/DxtradeEnterPasswordModal.scss?737c","webpack://@deriv/wallets/./src/features/cfd/modals/JurisdictionModal/JurisdictionModal.scss?594a","webpack://@deriv/wallets/./src/features/cfd/screens/CreatePassword/CreatePassword.scss?c0d1","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageMarketCard.scss?7048","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageScreen.scss?b04b","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTableColumnHeader.scss?c862","webpack://@deriv/wallets/./src/features/cfd/screens/DynamicLeverage/DynamicLeverageTitle.scss?c1e0","webpack://@deriv/wallets/./src/features/cfd/screens/EnterPassword/EnterPassword.scss?91a4","webpack://@deriv/wallets/./src/features/cfd/screens/GetMoreMT5Accounts/GetMoreMT5Accounts.scss?0671","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCard.scss?5cca","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardBack.scss?1074","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardRow.scss?d777","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionCard/JurisdictionCardTag.scss?605b","webpack://@deriv/wallets/./src/features/cfd/screens/Jurisdiction/JurisdictionScreen.scss?a4da","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountType/MT5AccountType.scss?4643","webpack://@deriv/wallets/./src/features/cfd/screens/MT5AccountTypeCard/MT5AccountTypeCard.scss?fa28","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeDetailsItem/MT5TradeDetailsItem.scss?0333","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeLink/MT5TradeLink.scss?e3cc","webpack://@deriv/wallets/./src/features/cfd/screens/MT5TradeScreen/MT5TradeScreen.scss?edf2","webpack://@deriv/wallets/./src/features/cfd/screens/Success/Success.scss?4253","webpack://@deriv/wallets/./src/index.scss?e81c","webpack://@deriv/wallets/./src/routes/CashierModalRoute/CashierModalRoute.scss?6b75","webpack://@deriv/wallets/./src/routes/WalletsListingRoute/WalletsListingRoute.scss?6267","webpack://@deriv/wallets/./src/styles/fonts.scss?27c1","webpack://@deriv/wallets/../translations/src/translations/ lazy ^\\.\\/.*\\.json$ chunkName: [request] namespace object"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Trans } from 'react-i18next';\n\nconst Localize = ({ i18n_default_text, values, components, options, i18n, shouldUnescape }) => (\n    <Trans\n        i18n={i18n}\n        defaults={i18n_default_text}\n        values={values}\n        components={components}\n        tOptions={options}\n        shouldUnescape={shouldUnescape}\n    />\n);\n\n// Trans needs to have the i18n instance in scope\n// eslint-disable-next-line react/display-name\nconst withI18n = i18n => props => <Localize i18n={i18n} {...props} />;\n\nLocalize.propTypes = {\n    components: PropTypes.arrayOf(PropTypes.node),\n    i18n: PropTypes.object.isRequired,\n    i18n_default_text: PropTypes.string,\n    options: PropTypes.object,\n    values: PropTypes.object,\n    shouldUnescape: PropTypes.bool,\n};\n\nexport default withI18n;\n","import Localize from './localize.jsx';\n\nexport default Localize;\n","import { str as crc32 } from 'crc-32';\nimport i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { isProduction } from '../../../shared/src/utils/config/config';\nimport withI18n from '../components';\n\nconst LANGUAGE_KEY = 'i18n_language';\nconst DEFAULT_LANGUAGE = 'EN';\nconst ALL_LANGUAGES = Object.freeze({\n    ACH: 'Translations',\n    EN: 'English',\n    ES: 'Español',\n    DE: 'Deutsch',\n    FR: 'Français',\n    ID: 'Indonesian',\n    IT: 'Italiano',\n    KO: '한국어',\n    PL: 'Polish',\n    RU: 'Русский',\n    TR: 'Türkçe',\n    VI: 'Tiếng Việt',\n    ZH_CN: '简体中文',\n    ZH_TW: '繁體中文',\n    TH: 'ไทย',\n});\n\nexport const getAllowedLanguages = () => {\n    const allowed_languages = {\n        EN: 'English',\n        ES: 'Español',\n        DE: 'Deutsch',\n        KO: '한국어',\n        RU: 'Русский',\n        FR: 'Français',\n        IT: 'Italiano',\n        TH: 'ไทย',\n        TR: 'Türkçe',\n        VI: 'Tiếng Việt',\n    };\n    const exclude_languages = ['ACH'];\n    // TODO Change language_list to const when languages are available in prod.\n    type Key = keyof typeof ALL_LANGUAGES;\n    let language_list = Object.keys(getAllLanguages())\n        .filter(key => !exclude_languages.includes(key))\n        .reduce((obj: { [key: string]: string }, key) => {\n            obj[key] = getAllLanguages()[key as Key];\n            return obj;\n        }, {});\n\n    // TODO Remove production check when all languages are available in prod.\n    if (isProduction()) language_list = allowed_languages;\n\n    return language_list;\n};\n\nconst isStaging = () => /staging-app\\.deriv\\.com/i.test(window.location.hostname);\n\nconst isLocal = () => /localhost\\.binary\\.sx/i.test(window.location.hostname);\n\nconst isLanguageAvailable = (lang: string) => {\n    if (!lang) return false;\n\n    const selected_language = lang.toUpperCase();\n    const is_ach = selected_language === 'ACH';\n\n    if (is_ach) return isStaging() || isLocal();\n\n    return Object.keys(getAllowedLanguages()).includes(selected_language);\n};\n\nexport const getRedirectionLanguage = (preferred_language: string) => {\n    const language_query = new URLSearchParams(window.location.search).get('lang');\n    const is_language_query_valid = language_query && isLanguageAvailable(language_query);\n    return is_language_query_valid ? language_query : preferred_language ?? DEFAULT_LANGUAGE;\n};\n\nexport const getAllLanguages = () => ALL_LANGUAGES;\n\nexport const getInitialLanguage = () => {\n    const url_params = new URLSearchParams(window.location.search);\n    const query_lang = url_params.get('lang');\n    const local_storage_language = localStorage.getItem(LANGUAGE_KEY);\n\n    if (query_lang) {\n        const query_lang_uppercase = query_lang.toUpperCase();\n        if (isLanguageAvailable(query_lang_uppercase)) {\n            localStorage.setItem(LANGUAGE_KEY, query_lang_uppercase);\n            return query_lang_uppercase;\n        }\n    }\n\n    if (local_storage_language) {\n        if (isLanguageAvailable(local_storage_language)) {\n            return local_storage_language;\n        }\n    }\n\n    return DEFAULT_LANGUAGE;\n};\n\nconst loadLanguageJson = async (lang: string) => {\n    if (!i18n.hasResourceBundle(lang, 'translations') && lang.toUpperCase() !== DEFAULT_LANGUAGE) {\n        const response = await import(/* webpackChunkName: \"[request]\" */ `../translations/${lang.toLowerCase()}.json`);\n\n        const lang_json = response;\n        i18n.addResourceBundle(lang, 'translations', lang_json);\n        document.documentElement.setAttribute('lang', lang);\n    }\n};\n\nconst initial_language = getInitialLanguage();\nconst i18n_config = {\n    react: {\n        hashTransKey(defaultValue: string) {\n            return crc32(defaultValue);\n        },\n        useSuspense: false,\n    },\n    lng: initial_language,\n    fallbackLng: 'EN',\n    ns: ['translations'],\n    defaultNS: 'translations',\n};\n\ni18n.use(initReactI18next) // passes i18n down to react-i18next\n    .init(i18n_config);\n\nexport const initializeTranslations = async () => {\n    if (isStaging() || isLocal()) {\n        loadIncontextTranslation();\n    }\n    await loadLanguageJson(initial_language);\n};\n\nexport const getLanguage = () => i18n.language || initial_language;\n\n// eslint-disable-next-line no-unused-vars\nexport const changeLanguage = async (lang: string, cb: (arg0: string) => void) => {\n    if (isLanguageAvailable(lang)) {\n        await loadLanguageJson(lang);\n        await i18n.changeLanguage(lang, () => {\n            localStorage.setItem(LANGUAGE_KEY, lang);\n            cb(lang);\n        });\n    }\n};\n\n// <Localize /> component wrapped with i18n\nexport const Localize = withI18n(i18n);\n\nexport const localize = (string: string, values?: Record<string, unknown>) => {\n    if (!string) return '';\n\n    return i18n.t(crc32(string).toString(), { defaultValue: string, ...values });\n};\n\nconst loadIncontextTranslation = () => {\n    const is_ach = getLanguage().toUpperCase() === 'ACH';\n    if (is_ach) {\n        const jipt = document.createElement('script');\n        jipt.type = 'text/javascript';\n        jipt.text = `\n            var _jipt = []; _jipt.push(['project', 'deriv-app']);\n            var crowdin = document.createElement(\"script\");\n            crowdin.setAttribute('src', '//cdn.crowdin.com/jipt/jipt.js');\n            document.head.appendChild(crowdin);\n        `;\n        document.head.appendChild(jipt);\n    }\n};\n","import { createContext } from 'react';\n\n// Don't need to type `deriv_api` here, We will be using these methods inside\n// the `useQuery`, `useMutation` and `useSubscription` hook to make it type-safe.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst APIContext = createContext<Record<string, any> | null>(null);\n\nexport default APIContext;\n","import { useCallback, useContext } from 'react';\n\nimport type {\n    TSocketEndpointNames,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nimport APIContext from './APIContext';\n\nconst useAPI = () => {\n    const api = useContext(APIContext);\n\n    const send = useCallback(\n        async <T extends TSocketEndpointNames | TSocketPaginateableEndpointNames = TSocketEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): Promise<TSocketResponseData<T>> => {\n            const response = await api?.send({ [name]: 1, ...(payload || {}) });\n\n            if (response.error) {\n                throw response.error;\n            }\n\n            return response;\n        },\n        [api]\n    );\n\n    const subscribe = useCallback(\n        <T extends TSocketSubscribableEndpointNames>(\n            name: T,\n            payload?: TSocketRequestPayload<T>\n        ): {\n            subscribe: (\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onData: (response: any) => void,\n                // The type will be handled by the `useSubscription` hook.\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                onError: (response: any) => void\n            ) => { unsubscribe?: VoidFunction };\n        } => api?.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }),\n        [api]\n    );\n\n    return {\n        send,\n        subscribe,\n    };\n};\n\nexport default useAPI;\n","export const getQueryKeys = (name: string, props?: Record<string, unknown>) => {\n    if (!props) return [name];\n\n    delete props.req_id;\n    if (name && props[name] === 1) delete props[name];\n\n    if (Object.keys(props).length === 0) return [name];\n\n    const ordered_props = Object.keys(props)\n        .sort((a, b) => a.localeCompare(b))\n        .reduce((obj, key) => {\n            obj[key] = props[key];\n\n            return obj;\n        }, {} as { [k: string]: unknown });\n\n    const query_props = JSON.stringify(ordered_props);\n\n    return [name, query_props];\n};\n","import { useInfiniteQuery as _useInfiniteQuery } from '@tanstack/react-query';\n\nimport type {\n    TSocketAcceptableProps,\n    TSocketError,\n    TSocketPaginatateableRequestCleaned,\n    TSocketPaginateableEndpointNames,\n    TSocketRequestInfiniteQueryOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils';\n\nconst useInfiniteQuery = <T extends TSocketPaginateableEndpointNames>(\n    name: T,\n    ...props: TSocketAcceptableProps<T, true, 'useInfiniteQuery'>\n) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketPaginatateableRequestCleaned<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestInfiniteQueryOptions<T>) : undefined;\n    const { send } = useAPI();\n\n    const initial_offset = payload?.offset || 0;\n    const limit = payload?.limit || 50;\n\n    return _useInfiniteQuery<TSocketResponseData<T>, TSocketError<T>>(\n        getQueryKeys(name, payload),\n\n        ({ pageParam = 0 }) =>\n            send(name, {\n                ...payload,\n                limit,\n                offset: pageParam * limit + initial_offset,\n            } as unknown as TSocketRequestPayload<T>),\n        {\n            ...options,\n            getNextPageParam: options?.getNextPageParam ? options.getNextPageParam : (_lastPage, pages) => pages.length,\n        }\n    );\n};\n\nexport default useInfiniteQuery;\n","import { useCallback } from 'react';\nimport { useMutation as _useMutation } from '@tanstack/react-query';\nimport useAPI from './useAPI';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestMutationOptions,\n    TSocketRequestPayload,\n    TSocketResponseData,\n} from '../types';\n\nconst useMutation = <T extends TSocketEndpointNames>(name: T, options?: TSocketRequestMutationOptions<T>) => {\n    const { send } = useAPI();\n    const { mutate: _mutate, ...rest } = _useMutation<\n        TSocketResponseData<T>,\n        TSocketError<T>,\n        TSocketAcceptableProps<T>\n    >(props => {\n        const prop = props?.[0];\n        const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n        return send(name, payload);\n    }, options);\n\n    const mutate = useCallback((...payload: TSocketAcceptableProps<T>) => _mutate(payload), [_mutate]);\n\n    return {\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useMutation;\n","import { useQuery as _useQuery } from '@tanstack/react-query';\nimport type {\n    TSocketAcceptableProps,\n    TSocketEndpointNames,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketRequestQueryOptions,\n    TSocketResponseData,\n} from '../types';\nimport useAPI from './useAPI';\nimport { getQueryKeys } from './utils';\n\nconst useQuery = <T extends TSocketEndpointNames>(name: T, ...props: TSocketAcceptableProps<T, true>) => {\n    const prop = props?.[0];\n    const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n    const options = prop && 'options' in prop ? (prop.options as TSocketRequestQueryOptions<T>) : undefined;\n    const { send } = useAPI();\n\n    return _useQuery<TSocketResponseData<T>, TSocketError<T>>(\n        getQueryKeys(name, payload),\n        () => send(name, payload),\n        options\n    );\n};\n\nexport default useQuery;\n","import React, { PropsWithChildren } from 'react';\n// @ts-expect-error `@deriv/deriv-api` is not in TypeScript, Hence we ignore the TS error.\nimport DerivAPIBasic from '@deriv/deriv-api/dist/DerivAPIBasic';\nimport { getAppId, getSocketURL, useWS } from '@deriv/shared';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport APIContext from './APIContext';\n\ndeclare global {\n    interface Window {\n        ReactQueryClient?: QueryClient;\n        DerivAPI?: Record<string, DerivAPIBasic>;\n    }\n}\n\n// This is a temporary workaround to share a single `QueryClient` instance between all the packages.\n// Later once we have each package separated we won't need this anymore and can remove this.\nconst getSharedQueryClientContext = (): QueryClient => {\n    if (!window.ReactQueryClient) {\n        window.ReactQueryClient = new QueryClient();\n    }\n\n    return window.ReactQueryClient;\n};\n\n// This is a temporary workaround to share a single `DerivAPIBasic` instance for every unique URL.\n// Later once we have each package separated we won't need this anymore and can remove this.\nconst getDerivAPIInstance = (): DerivAPIBasic => {\n    const endpoint = getSocketURL();\n    const app_id = getAppId();\n    const language = 'EN'; // Need to use the language from the app context.\n    const brand = 'deriv';\n    const wss = `wss://${endpoint}/websockets/v3?app_id=${app_id}&l=${language}&brand=${brand}`;\n\n    if (!window.DerivAPI) {\n        window.DerivAPI = {};\n    }\n\n    if (!window.DerivAPI?.[wss]) {\n        window.DerivAPI[wss] = new DerivAPIBasic({ connection: new WebSocket(wss) });\n    }\n\n    return window.DerivAPI?.[wss];\n};\n\nconst queryClient = getSharedQueryClientContext();\n\ntype TProps = {\n    /** If set to true, the APIProvider will instantiate it's own socket connection. */\n    standalone?: boolean;\n};\n\nconst APIProvider = ({ children, standalone = false }: PropsWithChildren<TProps>) => {\n    const WS = useWS();\n    // Use the new API instance if the `standalone` prop is set to true,\n    // else use the legacy socket connection.\n    const active_connection = standalone ? getDerivAPIInstance() : WS;\n\n    return (\n        <APIContext.Provider value={active_connection}>\n            <QueryClientProvider client={queryClient}>\n                {children}\n                {/* <ReactQueryDevtools /> */}\n            </QueryClientProvider>\n        </APIContext.Provider>\n    );\n};\n\nexport default APIProvider;\n","import type { AuthorizeResponse } from '@deriv/api-types';\n\ntype TLocalStorageAccount = {\n    token: string;\n    accepted_bch: number;\n    landing_company_shortcode: string;\n    residence: string;\n    session_start: number;\n};\n\ntype TLocalStorageAccountsList = {\n    [k: string]: TLocalStorageAccount &\n        NonNullable<NonNullable<NonNullable<AuthorizeResponse['authorize']>['account_list']>>[number];\n};\n\n/**\n * Gets the current user `accounts` list from the `localStorage`.\n */\nconst getAccountsFromLocalStorage = () => {\n    const data = localStorage.getItem('client.accounts');\n\n    // If there is no accounts list, return undefined.\n    if (!data) return;\n\n    // Cast parsed JSON data to infer return type\n    return JSON.parse(data) as TLocalStorageAccountsList;\n};\n\nexport default getAccountsFromLocalStorage;\n","/**\n * Gets the active `loginid` for the current user from the `localStorage`.\n */\nconst getActiveLoginIDFromLocalStorage = () => {\n    const active_loginid = localStorage.getItem('active_loginid');\n\n    // If there is no active loginid, return undefined.\n    if (!active_loginid) return;\n\n    return active_loginid;\n};\n\nexport default getActiveLoginIDFromLocalStorage;\n","import getAccountsFromLocalStorage from './getAccountsFromLocalStorage';\nimport getActiveLoginIDFromLocalStorage from './getActiveLoginIDFromLocalStorage';\n\n/**\n * Gets the current user's auth `token` for the active `loginid` from the `localStorage`.\n */\nconst getActiveAuthTokenIDFromLocalStorage = () => {\n    const accounts = getAccountsFromLocalStorage();\n    const active_loginid = getActiveLoginIDFromLocalStorage();\n\n    // If there is no active loginid or no accounts list, return undefined.\n    if (!active_loginid || !accounts) return;\n\n    return accounts[active_loginid]?.token;\n};\n\nexport default getActiveAuthTokenIDFromLocalStorage;\n","/**\n * Transform string to truncated string / string with ellipsis\n */\nconst getTruncatedString = (\n    input: string,\n    options?: {\n        type: 'head' | 'middle' | 'tail';\n        length?: number;\n    }\n) => {\n    const { type = 'tail', length = 8 } = options || {};\n    if (input.length <= length) {\n        return input;\n    }\n    switch (type) {\n        case 'head':\n            return `...${input.substring(input.length - length)}`;\n        case 'middle':\n            return `${input.substring(0, length / 2)}...${input.substring(input.length - length / 2)}`;\n        case 'tail':\n            return `${input.substring(0, length)}...`;\n        default:\n            return input;\n    }\n};\n\nexport default getTruncatedString;\n","const unFormatLocaleString = (input: string, locale: Intl.LocalesArgument) => {\n    const parts = (12345.6789).toLocaleString(locale).match(/(\\D+)/g);\n\n    if (parts && parts.length > 1) {\n        const is_reverse = parts[parts.length - 1] !== '.';\n        const decimal = parts[parts.length - 1];\n        const thousand = parts[0];\n\n        if (is_reverse) return input.replaceAll(decimal, 'temp').replaceAll(thousand, '').replaceAll('temp', '.');\n\n        return input.replaceAll(thousand, '');\n    }\n\n    return input;\n};\n\nexport default unFormatLocaleString;\n","import { useCallback } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { TSocketEndpointNames } from '../types';\n\ntype TOptions = Parameters<ReturnType<typeof useQueryClient>['invalidateQueries']>[1];\n\nconst useInvalidateQuery = () => {\n    const queryClient = useQueryClient();\n\n    const invalidate = useCallback(\n        <T extends TSocketEndpointNames>(name: T | T[], options?: TOptions) => {\n            return queryClient.invalidateQueries(Array.isArray(name) ? name : [name], options);\n        },\n        [queryClient]\n    );\n\n    return invalidate;\n};\n\nexport default useInvalidateQuery;\n","import { useCallback, useMemo } from 'react';\nimport { getActiveAuthTokenIDFromLocalStorage, getActiveLoginIDFromLocalStorage } from '@deriv/utils';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useQuery from '../useQuery';\n\n/** A custom hook that authorize the user with the given token. If no token is given,\n * it will use the current token from localStorage.\n */\nconst useAuthorize = () => {\n    const current_token = getActiveAuthTokenIDFromLocalStorage();\n    const invalidate = useInvalidateQuery();\n\n    const { data, ...rest } = useQuery('authorize', {\n        payload: { authorize: current_token || '' },\n        options: { enabled: Boolean(current_token) },\n    });\n\n    // Add additional information to the authorize response.\n    const modified_authorize = useMemo(() => ({ ...data?.authorize }), [data?.authorize]);\n\n    const switchAccount = useCallback(\n        (loginid: string) => {\n            const active_loginid = getActiveLoginIDFromLocalStorage();\n            if (active_loginid !== loginid) {\n                localStorage.setItem('active_loginid', loginid);\n                invalidate('authorize');\n            }\n        },\n        [invalidate]\n    );\n\n    return {\n        /** The authorize response. */\n        data: modified_authorize,\n        /** Function to switch to another account */\n        switchAccount,\n        ...rest,\n    };\n};\n\nexport default useAuthorize;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook to get available account types for a specific landing company. */\nconst useAccountTypes = (landing_company?: string) => {\n    const { data, ...rest } = useQuery('get_account_types', {\n        payload: { company: landing_company },\n        options: { enabled: Boolean(landing_company) },\n    });\n\n    // Add additional information to the account types response.\n    const modified_account_types = useMemo(() => {\n        if (!data?.get_account_types) return;\n\n        return {\n            ...data.get_account_types,\n            /** Landing company for the account types */\n            landing_company,\n        };\n    }, [data?.get_account_types, landing_company]);\n\n    return {\n        /** The account types response. */\n        data: modified_account_types,\n        ...rest,\n    };\n};\n\nexport default useAccountTypes;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook that gets the balance for all the user accounts. */\nconst useBalance = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: balance_data, ...rest } = useQuery('balance', {\n        payload: { account: 'all' },\n        options: {\n            enabled: isSuccess,\n            refetchInterval: 30000, // Refetch every 30 seconds to simulate subscription.\n        },\n    });\n\n    // Add additional information to the balance data.\n    const modified_balance = useMemo(() => ({ ...balance_data?.balance }), [balance_data?.balance]);\n\n    return {\n        /** The balance response. */\n        data: modified_balance,\n        ...rest,\n    };\n};\n\nexport default useBalance;\n","import { useCallback, useMemo } from 'react';\nimport useQuery from '../useQuery';\n\n/** A custom hook to get the currency config information from `website_status` endpoint and `crypto_config` endpoint. */\nconst useCurrencyConfig = () => {\n    const { data: website_status_data, ...rest } = useQuery('website_status');\n    const { data: crypto_config_data } = useQuery('crypto_config');\n\n    // Add additional information to the currency config.\n    const modified_currencies_config = useMemo(() => {\n        if (!website_status_data?.website_status?.currencies_config) return undefined;\n\n        const website_status_currencies_config = website_status_data.website_status.currencies_config;\n\n        return Object.keys(website_status_currencies_config).map(currency => {\n            const currency_config = website_status_currencies_config[currency];\n\n            return {\n                ...currency_config,\n                /** determine if the currency is a `crypto` currency */\n                is_crypto: currency_config?.type === 'crypto',\n                /** determine if the currency is a `fiat` currency */\n                is_fiat: currency_config?.type === 'fiat',\n                /** determine if the currency is `Australian Dollar` */\n                is_AUD: currency === 'AUD',\n                /** determine if the currency is `US Dollar` */\n                is_USD: currency === 'USD',\n                /** determine if the currency is `Euro` */\n                is_EUR: currency === 'EUR',\n                /** determine if the currency is `Pound Sterling` */\n                is_GBP: currency === 'GBP',\n                /** determine if the currency is `Bitcoin` */\n                is_BTC: currency === 'BTC',\n                /** determine if the currency is `Ethereum` */\n                is_ETH: currency === 'ETH',\n                /** determine if the currency is `Litecoin` */\n                is_LTC: currency === 'LTC',\n                /** determine if the currency is `Multi-Collateral DAI` */\n                is_DAI: currency === 'DAI',\n                /** determine if the currency is `IDK` */\n                is_IDK: currency === 'IDK',\n                /** determine if the currency is `Paxos Standard` */\n                is_PAX: currency === 'PAX',\n                /** determine if the currency is `Binary Coin` */\n                is_USB: currency === 'USB',\n                /** determine if the currency is `Tether Omni` */\n                is_USDT: currency === 'UST',\n                /** determine if the currency is `True USD` */\n                is_TUSD: currency === 'TUSD',\n                /** determine if the currency is `Binance USD` */\n                is_BUSD: currency === 'BUSD',\n                /** determine if the currency is `STATIS Euro` */\n                is_EURS: currency === 'EURS',\n                /** determine if the currency is `Tether ERC20` */\n                is_eUSDT: currency === 'eUSDT',\n                /** determine if the currency is `Tether TRC20` */\n                is_tUSDT: currency === 'tUSDT',\n                /** determine if the currency is `USD Coin` */\n                is_USDC: currency === 'USDC',\n                /** determine if the currency is `USDK` */\n                is_USDK: currency === 'USDK',\n                /** Currency code */\n                code: currency,\n                /** Currency display code */\n                display_code: currency === 'UST' ? 'USDT' : currency,\n            };\n        });\n    }, [website_status_data?.website_status?.currencies_config]);\n\n    // Add additional information to the crypto config.\n    const modified_crypto_config = useMemo(() => {\n        return modified_currencies_config?.map(currency_config => ({\n            ...currency_config,\n            ...crypto_config_data?.crypto_config?.currencies_config[currency_config.code],\n        }));\n    }, [crypto_config_data?.crypto_config?.currencies_config, modified_currencies_config]);\n\n    // Transform the currency config array into a record object.\n    const transformed_currencies_config = useMemo(() => {\n        return modified_crypto_config?.reduce<Record<string, typeof modified_crypto_config[number]>>(\n            (previous, current) => ({ ...previous, [current.code]: current }),\n            {}\n        );\n    }, [modified_crypto_config]);\n\n    const getConfig = useCallback(\n        (currency: string) => transformed_currencies_config?.[currency],\n        [transformed_currencies_config]\n    );\n\n    return {\n        /** Available currencies and their information */\n        data: transformed_currencies_config,\n        /** Returns the currency config object for the given currency */\n        getConfig,\n        ...rest,\n    };\n};\n\nexport default useCurrencyConfig;\n","import { useMemo } from 'react';\nimport useAuthorize from './useAuthorize';\nimport useBalance from './useBalance';\nimport useCurrencyConfig from './useCurrencyConfig';\n\n/** A custom hook that returns the list of accounts for the current user. */\nconst useAccountsList = () => {\n    const { data: authorize_data, ...rest } = useAuthorize();\n    const { data: balance_data } = useBalance();\n    const { getConfig } = useCurrencyConfig();\n\n    // Add additional information to the authorize response.\n    const modified_accounts = useMemo(() => {\n        return authorize_data.account_list?.map(account => {\n            return {\n                ...account,\n                /** Creation time of the account. */\n                created_at: account.created_at ? new Date(account.created_at) : undefined,\n                /** Date till client has excluded him/herself from the website, only present if client is self excluded. */\n                excluded_until: account.excluded_until ? new Date(account.excluded_until) : undefined,\n                /** Indicating whether the wallet is the currently active account. */\n                is_active: account.loginid === authorize_data.loginid,\n                /** indicating whether the account is a virtual-money account. */\n                is_virtual: Boolean(account.is_virtual),\n                /** indicating whether the account is marked as disabled or not. */\n                is_disabled: Boolean(account.is_disabled),\n                /** indicating whether the account is a trading account. */\n                is_trading: account.account_category === 'trading',\n                /** indicating whether the account is a wallet account. */\n                is_wallet: account.account_category === 'wallet',\n                /** The account ID of specified account. */\n                loginid: `${account.loginid}`,\n                /** Account's currency config information */\n                currency_config: account.currency ? getConfig(account.currency) : undefined,\n            } as const;\n        });\n    }, [authorize_data.account_list, authorize_data.loginid, getConfig]);\n\n    // Add balance to each account\n    const modified_accounts_with_balance = useMemo(\n        () =>\n            modified_accounts?.map(account => {\n                const balance = balance_data?.accounts?.[account.loginid]?.balance || 0;\n\n                return {\n                    ...account,\n                    /** The balance of the account. */\n                    balance,\n                    /** The balance of the account in currency format. */\n                    display_balance: `${Intl.NumberFormat(authorize_data?.preferred_language || 'en-US', {\n                        minimumFractionDigits: account.currency_config?.fractional_digits || 2,\n                        maximumFractionDigits: account.currency_config?.fractional_digits || 2,\n                        minimumIntegerDigits: 1,\n                    }).format(balance)} ${account.currency_config?.display_code || 'USD'}`,\n                };\n            }),\n        [balance_data?.accounts, modified_accounts, authorize_data?.preferred_language]\n    );\n\n    return {\n        /** The list of accounts for the current user. */\n        data: modified_accounts_with_balance,\n        ...rest,\n    };\n};\n\nexport default useAccountsList;\n","import { useMemo } from 'react';\nimport useAccountsList from './useAccountsList';\n\n/** A custom hook that gets the list of all wallet accounts for the current user. */\nconst useWalletAccountsList = () => {\n    const { data: account_list_data, ...rest } = useAccountsList();\n\n    // Filter out non-wallet accounts.\n    const filtered_accounts = useMemo(\n        () => account_list_data?.filter(account => account.is_wallet),\n        [account_list_data]\n    );\n\n    // Add additional information to each wallet account.\n    const modified_accounts = useMemo(() => {\n        return filtered_accounts?.map(wallet => {\n            const wallet_currency_type = wallet.is_virtual ? 'Demo' : wallet.currency || '';\n            const dtrade_loginid = wallet.linked_to?.find(account => account.platform === 'dtrade')?.loginid;\n\n            return {\n                ...wallet,\n                /** Returns the wallet's currency type. ex: `Demo`, `USD`, etc. */\n                wallet_currency_type,\n                /** Landing company shortcode the account belongs to. */\n                landing_company_name: wallet.landing_company_name?.replace('maltainvest', 'malta'),\n                /** Indicating whether the wallet is a maltainvest wallet. */\n                is_malta_wallet: wallet.landing_company_name === 'malta',\n                /** The DTrade account ID of this wallet */\n                dtrade_loginid,\n                /** Returns if the wallet is a crypto wallet. */\n                is_crypto: wallet.currency_config?.is_crypto,\n            } as const;\n        });\n    }, [filtered_accounts]);\n\n    // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n    const sorted_accounts = useMemo(() => {\n        if (!modified_accounts) return;\n\n        return [...modified_accounts].sort((a, b) => {\n            if (a.is_virtual !== b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if (a.currency_config?.is_crypto !== b.currency_config?.is_crypto) {\n                return a.currency_config?.is_crypto ? 1 : -1;\n            }\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        });\n    }, [modified_accounts]);\n\n    return {\n        /** The list of wallet accounts for the current user. */\n        data: sorted_accounts,\n        ...rest,\n    };\n};\n\nexport default useWalletAccountsList;\n","import { useMemo } from 'react';\nimport useWalletAccountsList from './useWalletAccountsList';\n\n/** A custom hook that returns the wallet object for the current active wallet. */\nconst useActiveWalletAccount = () => {\n    const { data, ...rest } = useWalletAccountsList();\n    const active_wallet = useMemo(() => data?.find(wallet => wallet.is_active), [data]);\n\n    return {\n        /** User's current active wallet. */\n        data: active_wallet,\n        ...rest,\n    };\n};\n\nexport default useActiveWalletAccount;\n","import { useCallback, useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useInvalidateQuery from '../useInvalidateQuery';\nimport useMutation from '../useMutation';\n\ntype TSetSettingsPayload = NonNullable<\n    NonNullable<NonNullable<Parameters<ReturnType<typeof useMutation<'set_settings'>>['mutate']>>[0]>['payload']\n>;\n\n/** A custom hook to get and update the user settings. */\nconst useSettings = () => {\n    const { data, ...rest } = useQuery('get_settings');\n    const { mutate, ...mutate_rest } = useMutation('set_settings', { onSuccess: () => invalidate('get_settings') });\n    const invalidate = useInvalidateQuery();\n\n    const update = useCallback((payload: TSetSettingsPayload) => mutate({ payload }), [mutate]);\n\n    // Add additional information to the settings response.\n    const modified_settings = useMemo(() => ({ ...data?.get_settings }), [data?.get_settings]);\n\n    return {\n        /** The settings response. */\n        data: modified_settings,\n        /** Function to update user settings */\n        update,\n        /** The mutation related information */\n        mutation: mutate_rest,\n        ...rest,\n    };\n};\n\nexport default useSettings;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useSettings from './useSettings';\n\n/** A custom hook that returns the available landing companies of the user's country. */\nconst useLandingCompany = () => {\n    const { data: settings_data } = useSettings();\n    const { data, ...rest } = useQuery('landing_company', {\n        payload: { landing_company: settings_data?.country_code || '' },\n        options: { enabled: Boolean(settings_data?.country_code) },\n    });\n\n    // Add additional information to the landing company response.\n    const modified_landing_company = useMemo(() => {\n        if (!data?.landing_company) return;\n\n        return { ...data.landing_company };\n    }, [data?.landing_company]);\n\n    return {\n        /** The landing company response. */\n        data: modified_landing_company,\n        ...rest,\n    };\n};\n\nexport default useLandingCompany;\n","import { useMemo } from 'react';\nimport useAccountTypes from './useAccountTypes';\nimport useLandingCompany from './useLandingCompany';\n\n/** A custom hook to get all available accounts that user can have. */\nconst useAllAvailableAccounts = () => {\n    const { data: landing_company_data } = useLandingCompany();\n    const { data: account_types_data, ...rest } = useAccountTypes(landing_company_data?.financial_company?.shortcode);\n\n    // Add additional information to the account types response.\n    const modified_account_types_data = useMemo(() => {\n        if (!account_types_data) return;\n\n        return { ...account_types_data };\n    }, [account_types_data]);\n\n    return {\n        /** The account types response. */\n        data: modified_account_types_data,\n        ...rest,\n    };\n};\n\nexport default useAllAvailableAccounts;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\nconst market_type_to_leverage_mapper: Record<string, number> = {\n    gaming: 500,\n    financial: 1000,\n    all: 100,\n};\n\n/** A custom hook to get the list of available MT5 accounts. */\nconst useAvailableMT5Accounts = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: mt5_available_accounts, ...rest } = useQuery('trading_platform_available_accounts', {\n        payload: { platform: 'mt5' },\n        options: { enabled: isSuccess },\n    });\n\n    const modified_mt5_available_accounts = useMemo(\n        () =>\n            mt5_available_accounts?.trading_platform_available_accounts?.map(account => {\n                return {\n                    ...account,\n                    /** The market type for the account */\n                    market_type: account.market_type === 'gaming' ? 'synthetic' : account.market_type,\n                    /** The platform for the account */\n                    platform: 'mt5',\n                    /** Leverage for the account */\n                    leverage:\n                        market_type_to_leverage_mapper[\n                            account.market_type as keyof typeof market_type_to_leverage_mapper\n                        ],\n                } as const;\n            }),\n        [mt5_available_accounts?.trading_platform_available_accounts]\n    );\n\n    return {\n        /** The available MT5 accounts */\n        data: modified_mt5_available_accounts,\n        ...rest,\n    };\n};\n\nexport default useAvailableMT5Accounts;\n","import { useMemo } from 'react';\nimport useAllAvailableAccounts from './useAllAvailableAccounts';\nimport useCurrencyConfig from './useCurrencyConfig';\nimport useWalletAccountsList from './useWalletAccountsList';\n\n/** A custom hook that gets the list of available wallets. */\nconst useAvailableWallets = () => {\n    const { data: account_type_data, ...rest } = useAllAvailableAccounts();\n    const { data: added_wallets } = useWalletAccountsList();\n    const { getConfig } = useCurrencyConfig();\n\n    /** Get the available wallets for the wallet account type */\n    const modified_available_wallets = useMemo(() => {\n        if (!account_type_data) return;\n        const { crypto, doughflow } = account_type_data?.wallet || {};\n        const crypto_currencies = crypto?.currencies;\n        const fiat_currencies = doughflow?.currencies;\n\n        if (!crypto_currencies || !fiat_currencies) return [];\n        const available_currencies = [...fiat_currencies, ...crypto_currencies];\n        const non_virtual_wallets = added_wallets?.filter(wallet => !wallet.is_virtual);\n\n        /** Compare the available wallets with the added wallets and add `is_added` flag */\n        const modified_wallets = non_virtual_wallets?.map(wallet => ({\n            currency: wallet.currency,\n            landing_company_name: wallet.landing_company_name,\n            is_added: true,\n        }));\n\n        /** Compare the available wallets with the added wallets and add `is_added` flag */\n        const available_wallets = available_currencies\n            .filter(currency => !modified_wallets?.some(wallet => wallet.currency === currency))\n            .map(currency => ({\n                currency,\n                landing_company_name: account_type_data?.landing_company,\n                is_added: false,\n            }));\n\n        return [...available_wallets, ...(modified_wallets || [])];\n    }, [account_type_data, added_wallets]);\n\n    /** Sort the available wallets by fiat, crypto, then virtual */\n    const sorted_available_wallets = useMemo(() => {\n        if (!modified_available_wallets) return;\n\n        const getConfigIsCrypto = (currency: string) => getConfig(currency)?.is_crypto;\n\n        // Sort the non-added wallets alphabetically by fiat, crypto, then virtual\n        modified_available_wallets.sort((a, b) => {\n            const a_config = getConfigIsCrypto(a.currency || 'BTC');\n            const b_config = getConfigIsCrypto(b.currency || 'BTC');\n\n            if (a_config !== b_config) return a.currency ? 1 : -1;\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        });\n\n        // Sort the added wallets alphabetically by fiat, crypto, then virtual (if any)\n        if (Array.isArray(modified_available_wallets)) {\n            modified_available_wallets?.sort((a, b) => {\n                const a_config = getConfigIsCrypto(a.currency || 'BTC');\n                const b_config = getConfigIsCrypto(b.currency || 'BTC');\n                if (a_config !== b_config) return a_config ? 1 : -1;\n\n                return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n            });\n        }\n\n        return [...modified_available_wallets];\n    }, [modified_available_wallets, getConfig]);\n\n    return {\n        /** Sorted available wallets */\n        data: sorted_available_wallets,\n        ...rest,\n    };\n};\n\nexport default useAvailableWallets;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useActiveWalletAccount from './useActiveWalletAccount';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook that gets the list created MT5 accounts of the user. */\nconst useMT5AccountsList = () => {\n    const { data: authorize_data, isSuccess } = useAuthorize();\n    const { data: wallet } = useActiveWalletAccount();\n\n    const { data: mt5_accounts, ...mt5_accounts_rest } = useQuery('mt5_login_list', {\n        options: { enabled: isSuccess },\n    });\n\n    /**\n     * @description The list of created MT5 accounts\n     */\n    const modified_mt5_accounts = useMemo(() => {\n        /** Adding the neccesary properties to the response */\n        const getAccountInfo = (login?: string) => {\n            return {\n                /** The platform of the account linked to the wallet */\n                platform: wallet?.linked_to?.find(linked => linked.loginid === login)?.platform,\n                /** The formatted display login of the account */\n                display_login: login?.replace(/^(MT[DR]?)/, ''),\n            };\n        };\n\n        const displayBalanceFormat = (balance: number, currency: string) => {\n            try {\n                return `${Intl.NumberFormat(authorize_data?.preferred_language || 'en-US', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                    minimumIntegerDigits: 1,\n                }).format(balance)} ${currency || 'USD'}`;\n            } catch (error) {\n                return `${balance} ${currency || 'USD'}`;\n            }\n        };\n\n        return mt5_accounts?.mt5_login_list?.map(account => ({\n            ...account,\n            ...getAccountInfo(account.login),\n            /** The id of the account */\n            loginid: account.login,\n            /** The platform of the account */\n            platform: 'mt5',\n            /** The balance of the account in currency format. */\n            display_balance: displayBalanceFormat(account.balance || 0, account.currency || 'USD'),\n        }));\n    }, [authorize_data?.preferred_language, mt5_accounts?.mt5_login_list, wallet?.linked_to]);\n\n    return {\n        /** The list of created MT5 accounts */\n        data: modified_mt5_accounts,\n        ...mt5_accounts_rest,\n    };\n};\n\nexport default useMT5AccountsList;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook that gets the list of created Deriv X accounts. */\nconst useDxtradeAccountsList = () => {\n    const { data: authorize_data, isSuccess } = useAuthorize();\n    const { data: dxtrade_accounts, ...rest } = useQuery('trading_platform_accounts', {\n        payload: { platform: 'dxtrade' },\n        options: { enabled: isSuccess },\n    });\n\n    /** Adding necessary properties to Deriv X accounts */\n    const modified_dxtrade_accounts = useMemo(\n        () =>\n            dxtrade_accounts?.trading_platform_accounts?.map(account => ({\n                ...account,\n                /** The balance of the account in currency format. */\n                display_balance: `${Intl.NumberFormat(authorize_data?.preferred_language || 'en-US', {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                    minimumIntegerDigits: 1,\n                }).format(account?.balance || 0)} ${account?.currency || 'USD'}`,\n            })),\n        [authorize_data?.preferred_language, dxtrade_accounts?.trading_platform_accounts]\n    );\n\n    return {\n        /** List of all created Deriv X accounts */\n        data: modified_dxtrade_accounts,\n        ...rest,\n    };\n};\n\nexport default useDxtradeAccountsList;\n","import { useMemo } from 'react';\nimport useQuery from '../useQuery';\nimport useAuthorize from './useAuthorize';\n\n/** A custom hook that gets the list of created cTrader accounts. */\nconst useCtraderAccountsList = () => {\n    const { isSuccess } = useAuthorize();\n    const { data: ctrader_accounts, ...rest } = useQuery('trading_platform_accounts', {\n        payload: { platform: 'ctrader' },\n        options: { enabled: isSuccess },\n    });\n\n    /** Adding neccesary properties to cTrader accounts */\n    const modified_ctrader_accounts = useMemo(\n        () =>\n            ctrader_accounts?.trading_platform_accounts?.map(account => ({\n                ...account,\n                /** The id of the cTrader account */\n                id: account.account_id,\n            })),\n        [ctrader_accounts?.trading_platform_accounts]\n    );\n\n    return {\n        /** List of all created cTrader accounts */\n        data: modified_ctrader_accounts,\n        ...rest,\n    };\n};\n\nexport default useCtraderAccountsList;\n","import useMutation from '../useMutation';\n\n/** A custom hooks for cancelling crypto transaction  */\nconst useCancelCryptoTransaction = () => {\n    const { data, mutate, ...rest } = useMutation('cashier_withdrawal_cancel');\n\n    return {\n        /** The cancel crypto transaction response */\n        data: data?.cashier_withdrawal_cancel,\n        /** Function to cancel crypto transaction */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useCancelCryptoTransaction;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TCashierParam = NonNullable<\n    Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>\n>[0]['payload']['cashier'];\n\ntype TParams = Omit<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'cashier'>>['mutate']>>[0]['payload'],\n    'cashier' | 'provider'\n>;\n\n/** A custom hook to get the deposit and withdrawal fiat address. */\nconst useCashierFiatAddress = () => {\n    const { data, mutate: _mutate, ...rest } = useMutation('cashier');\n    const iframe_url = typeof data?.cashier === 'string' ? data?.cashier : undefined;\n\n    const mutate = useCallback(\n        (cashier: TCashierParam, payload?: TParams) =>\n            _mutate({ payload: { cashier, provider: 'doughflow', ...payload } }),\n        [_mutate]\n    );\n\n    return {\n        /** The deposit/withdrawal fiat iframe */\n        data: iframe_url,\n        /** Function to get deposit/withdrawal fiat address */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useCashierFiatAddress;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook to create MT5 accounts. */\nconst useCreateMT5Account = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('mt5_new_account', {\n        onSuccess: () => {\n            invalidate('mt5_login_list');\n        },\n    });\n\n    // Add additional information to the create MT5 account response.\n    const modified_data = useMemo(() => {\n        if (!data?.mt5_new_account) return undefined;\n\n        return { ...data?.mt5_new_account };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the create MT5 account API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateMT5Account;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook that creates a new real trading account. */\nconst useCreateNewRealAccount = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('new_account_real', {\n        onSuccess: () => {\n            invalidate('authorize');\n        },\n    });\n\n    // Add additional information to the new real trading account response.\n    const modified_data = useMemo(() => {\n        if (!data?.new_account_real) return;\n\n        return { ...data?.new_account_real };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the new account real API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateNewRealAccount;\n","import { useMemo } from 'react';\nimport useMutation from '../useMutation';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\n/** A custom hook to create third party CFD accounts. */\nconst useCreateOtherCFDAccount = () => {\n    const invalidate = useInvalidateQuery();\n    const { data, ...rest } = useMutation('trading_platform_new_account', {\n        onSuccess: () => {\n            invalidate('trading_platform_accounts');\n        },\n    });\n\n    // Add additional information to the create Other CFD account response.\n    const modified_data = useMemo(() => {\n        if (!data) return undefined;\n\n        return { ...data };\n    }, [data]);\n\n    return {\n        /** The response and the mutation of the create third party CFDs API request */\n        data: modified_data,\n        ...rest,\n    };\n};\n\nexport default useCreateOtherCFDAccount;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport useAPI from './useAPI';\nimport type {\n    TSocketAcceptableProps,\n    TSocketError,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [isSubscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<TSocketError<T>>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const { subscribe: _subscribe } = useAPI();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            try {\n                subscriber.current = _subscribe(name, payload).subscribe(\n                    response => {\n                        setData(response);\n                        setIsLoading(false);\n                    },\n                    response => {\n                        setError(response.error);\n                        setIsLoading(false);\n                    }\n                );\n            } catch (e) {\n                setError(e as TSocketError<T>);\n            }\n        },\n        [_subscribe, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return {\n        subscribe,\n        unsubscribe,\n        isLoading,\n        isSubscribed,\n        error,\n        data,\n    };\n};\n\nexport default useSubscription;\n","import { useCallback, useEffect, useMemo, useState } from 'react';\nimport useSubscription from '../useSubscription';\nimport { getTruncatedString } from '@deriv/utils';\n\ntype TTransaction = NonNullable<\n    NonNullable<ReturnType<typeof useSubscription<'cashier_payments'>>['data']>['cashier_payments']\n>['crypto'][number];\n\ntype TStatus = TTransaction['status_code'];\n\ntype TDepositStatus = 'PENDING' | 'CONFIRMED' | 'ERROR';\n\ntype TWithdrawalStatus = Exclude<TStatus, TDepositStatus>;\n\n// Since BE sends the `status_code` for both `deposit` and `withdrawal` in the same field,\n// Here we modify the BE type to make `status_code` type more specific to the `transaction_type` field.\ntype TModifiedTransaction = Omit<TTransaction, 'status_code' | 'transaction_type'> &\n    (\n        | { transaction_type: 'deposit'; status_code: TDepositStatus }\n        | { transaction_type: 'withdrawal'; status_code: TWithdrawalStatus }\n    );\n\n/** A custom hook that returns the list of pending crypto transactions for the current user. */\nconst useCryptoTransactions = () => {\n    const { subscribe, data, ...rest } = useSubscription('cashier_payments');\n    const [transactions, setTransactions] = useState<TModifiedTransaction[]>();\n\n    // Reset transactions data\n    const resetData = useCallback(() => setTransactions(undefined), []);\n\n    useEffect(() => {\n        setTransactions(old_transactions => {\n            const new_transactions = data?.cashier_payments?.crypto as TModifiedTransaction[] | undefined;\n\n            if (!new_transactions) return old_transactions;\n\n            if (!old_transactions) return new_transactions;\n\n            const updated_transactions = [...old_transactions];\n\n            // For each new transaction, check if it exists in the old transactions.\n            new_transactions.forEach(new_transaction => {\n                // Find the index of the new transaction in the old transactions if exists.\n                const index = updated_transactions.findIndex(\n                    old_transaction => old_transaction.id === new_transaction.id\n                );\n\n                // If the new transaction does not exist in the old transactions, add it, otherwise update it.\n                if (index === -1) {\n                    updated_transactions.push(new_transaction);\n                } else {\n                    updated_transactions[index] = new_transaction;\n                }\n            });\n\n            return updated_transactions;\n        });\n    }, [data?.cashier_payments?.crypto]);\n\n    // Add additional information to each transaction.\n    const modified_transactions = useMemo(() => {\n        if (!transactions || !transactions.length) return undefined;\n\n        return transactions.map(transaction => ({\n            ...transaction,\n            /** Formatted transaction hash */\n            formatted_transaction_hash: transaction.transaction_hash\n                ? getTruncatedString(transaction.transaction_hash, { type: 'middle' })\n                : 'NA',\n            /** Formatted address hash */\n            formatted_address_hash: transaction.address_hash\n                ? getTruncatedString(transaction.address_hash, { type: 'middle' })\n                : 'NA',\n            /** Formatted confirmations status */\n            formatted_confirmations:\n                transaction.status_code === 'CONFIRMED' ? 'Confirmed' : transaction.confirmations || 'Pending',\n            /** Determine if the transaction is a deposit or not. */\n            is_deposit: transaction.transaction_type === 'deposit',\n            /** Determine if the transaction is a withdrawal or not. */\n            is_withdrawal: transaction.transaction_type === 'withdrawal',\n        }));\n    }, [transactions]);\n\n    // Sort transactions by submit time.\n    const sorted_transactions = useMemo(\n        () => modified_transactions?.sort((a, b) => b.submit_date - a.submit_date),\n        [modified_transactions]\n    );\n    // Get the last transaction if exists.\n    const last_transaction = modified_transactions?.[0];\n\n    return {\n        /** List of user transactions sorted by submit time. */\n        data: sorted_transactions,\n        /** Returns the last transaction if exists. */\n        last_transaction,\n        /** Reset transactions data */\n        resetData,\n        subscribe,\n        ...rest,\n    };\n};\n\nexport default useCryptoTransactions;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\n/** A custom hook to get the deposit crypto address. */\nconst useDepositCryptoAddress = () => {\n    const { data, mutate: _mutate, ...rest } = useMutation('cashier');\n    const deposit_address = typeof data?.cashier !== 'string' ? data?.cashier?.deposit?.address : undefined;\n\n    const mutate = useCallback(\n        () => _mutate({ payload: { cashier: 'deposit', provider: 'crypto', type: 'api' } }),\n        [_mutate]\n    );\n\n    return {\n        ...rest,\n        mutate,\n        data: deposit_address,\n    };\n};\n\nexport default useDepositCryptoAddress;\n","// TODO: hardcoded dynamic leverage values, to be replaced with API call\nconst dynamic_leverages = [\n    {\n        key: 'forex',\n        title: 'Forex majors',\n        description: '',\n        leverage: 'Up to 1:1500',\n        data: [\n            {\n                from: 0.01,\n                to: 1,\n                leverage: 1500,\n            },\n            {\n                from: 1.01,\n                to: 5,\n                leverage: 1000,\n            },\n            {\n                from: 5.01,\n                to: 10,\n                leverage: 500,\n            },\n            {\n                from: 10.01,\n                to: 15,\n                leverage: 100,\n            },\n        ],\n    },\n    {\n        key: 'metals',\n        title: 'Metals',\n        description: '(XAUUSD, XAGUSD)',\n        leverage: 'Up to 1:1000',\n        data: [\n            {\n                from: 0.01,\n                to: 1,\n                leverage: 1000,\n            },\n            {\n                from: 1.01,\n                to: 5,\n                leverage: 500,\n            },\n            {\n                from: 5.01,\n                to: 10,\n                leverage: 100,\n            },\n            {\n                from: 10.01,\n                to: 15,\n                leverage: 50,\n            },\n        ],\n    },\n    {\n        key: 'cryptocurrencies',\n        title: 'Cryptocurrencies',\n        description: '(BTCUSD, ETHUSD)',\n        leverage: 'Up to 1:300',\n        data: [\n            {\n                from: 0.01,\n                to: 1,\n                leverage: 300,\n            },\n            {\n                from: 1.01,\n                to: 3,\n                leverage: 200,\n            },\n            {\n                from: 3.01,\n                to: 5,\n                leverage: 100,\n            },\n            {\n                from: 5.01,\n                to: 10,\n                leverage: 50,\n            },\n        ],\n    },\n    {\n        key: 'stock_indices',\n        title: 'Stock indices',\n        description: '(US_30, US_100, US_500)',\n        leverage: 'Up to 1:300',\n        data: [\n            {\n                from: 0.1,\n                to: 5,\n                leverage: 300,\n            },\n            {\n                from: 5.1,\n                to: 50,\n                leverage: 200,\n            },\n            {\n                from: 50.1,\n                to: 5,\n                leverage: 100,\n            },\n        ],\n    },\n];\n\n/** A custom hook that gets dynamic leverage values. */\nconst useDynamicLeverage = () => {\n    // TODO: replace with API call once the endpoint is ready.\n\n    return {\n        data: dynamic_leverages,\n    };\n};\n\nexport default useDynamicLeverage;\n","import { useMemo } from 'react';\nimport useMT5AccountsList from './useMT5AccountsList';\nimport useAvailableMT5Accounts from './useAvailableMT5Accounts';\n\n/** A custom hook to get the sorted added and non-added MT5 accounts. */\nconst useSortedMT5Accounts = () => {\n    const { data: all_available_mt5_accounts } = useAvailableMT5Accounts();\n    const { data: mt5_accounts, ...rest } = useMT5AccountsList();\n\n    const modified_data = useMemo(() => {\n        if (!all_available_mt5_accounts || !mt5_accounts) return;\n\n        return all_available_mt5_accounts?.map(available_account => {\n            const created_account = mt5_accounts?.find(account => {\n                return (\n                    available_account.market_type === account.market_type &&\n                    available_account.shortcode === account.landing_company_short\n                );\n            });\n            if (created_account)\n                return {\n                    ...created_account,\n                    /** Determine if the account is added or not */\n                    is_added: true,\n                } as const;\n\n            return {\n                ...available_account,\n                /** Determine if the account is added or not */\n                is_added: false,\n            } as const;\n        });\n    }, [all_available_mt5_accounts, mt5_accounts]);\n\n    // // Reduce out the added and non added accounts to make sure only one of each market_type is shown for not added\n    const filtered_data = useMemo(() => {\n        if (!modified_data) return;\n\n        const added_accounts = modified_data.filter(account => account.is_added);\n        const non_added_accounts = modified_data.filter(account => !account.is_added);\n\n        const filtered_non_added_accounts = non_added_accounts.reduce((acc, account) => {\n            const existing_account = acc.find(acc_account => acc_account.market_type === account.market_type);\n            const added_account = added_accounts.find(acc_account => acc_account.market_type === account.market_type);\n            if (existing_account || added_account) return acc;\n\n            return [...acc, account];\n        }, [] as typeof non_added_accounts);\n\n        return [...added_accounts, ...filtered_non_added_accounts];\n    }, [modified_data]);\n\n    // Sort the data by market_type to make sure the order is 'synthetic', 'financial', 'all'\n    const sorted_data = useMemo(() => {\n        const market_type_order = ['synthetic', 'financial', 'all'];\n\n        if (!filtered_data) return;\n\n        const sorted_data = market_type_order.reduce((acc, market_type) => {\n            const accounts = filtered_data.filter(account => account.market_type === market_type);\n            if (!accounts.length) return acc;\n            return [...acc, ...accounts];\n        }, [] as typeof filtered_data);\n\n        return sorted_data;\n    }, [filtered_data]);\n\n    return {\n        data: sorted_data,\n        ...rest,\n    };\n};\n\nexport default useSortedMT5Accounts;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'trading_platform_password_change'>>['mutate']>[0]['payload'];\n\n/** A custom hook that change the Trading Platform Password. */\nconst useTradingPlatformPasswordChange = () => {\n    const { mutate: _mutate, ...rest } = useMutation('trading_platform_password_change');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useTradingPlatformPasswordChange;\n","import { useEffect, useMemo, useState } from 'react';\nimport useInfiniteQuery from '../useInfiniteQuery';\nimport { TSocketRequestPayload } from '../../types';\nimport useAuthorize from './useAuthorize';\nimport useInvalidateQuery from '../useInvalidateQuery';\n\ntype TFilter = NonNullable<TSocketRequestPayload<'statement'>['payload']>['action_type'];\n\n/** A custom hook to get the summary of account transactions */\nconst useTransactions = () => {\n    const { isFetching, isSuccess } = useAuthorize();\n    const [filter, setFilter] = useState<TFilter>();\n    const invalidate = useInvalidateQuery();\n    const { data, fetchNextPage, remove, ...rest } = useInfiniteQuery('statement', {\n        options: {\n            enabled: !isFetching && isSuccess,\n            getNextPageParam: (lastPage, pages) => {\n                if (!lastPage?.statement?.count) return;\n\n                return pages.length;\n            },\n        },\n        payload: {\n            action_type: filter,\n        },\n    });\n\n    useEffect(() => {\n        invalidate('statement');\n    }, [filter, invalidate]);\n\n    useEffect(() => {\n        return () => {\n            remove();\n        };\n    }, [remove]);\n\n    // Flatten the data array.\n    const flatten_data = useMemo(() => {\n        if (!data?.pages?.length) return;\n\n        return data?.pages?.flatMap(page => page?.statement?.transactions);\n    }, [data?.pages]);\n\n    // Modify the data.\n    const modified_data = useMemo(() => {\n        if (!flatten_data?.length) return;\n\n        return flatten_data?.map(transaction => ({\n            ...transaction,\n        }));\n    }, [flatten_data]);\n\n    return {\n        /** List of account transactions */\n        data: modified_data,\n        /** Fetch the next page of transactions */\n        fetchNextPage,\n        /** Filter the transactions by type */\n        setFilter,\n        ...rest,\n    };\n};\n\nexport default useTransactions;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = NonNullable<\n    NonNullable<Parameters<ReturnType<typeof useMutation<'transfer_between_accounts'>>['mutate']>[0]>['payload']\n>;\n\n/** A custom hook used to transfer money between client accounts */\nconst useTransferBetweenAccounts = () => {\n    const { mutate: _mutate, ...rest } = useMutation('transfer_between_accounts');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useTransferBetweenAccounts;\n","import { useCallback } from 'react';\nimport useMutation from '../useMutation';\n\ntype TPayload = Parameters<ReturnType<typeof useMutation<'verify_email'>>['mutate']>[0]['payload'];\n\n/** A custom hook for verifying email address */\nconst useVerifyEmail = () => {\n    const { mutate: _mutate, ...rest } = useMutation('verify_email');\n\n    const mutate = useCallback((payload: TPayload) => _mutate({ payload }), [_mutate]);\n\n    return {\n        /** The mutation function that accepts a payload and sends it to the server */\n        mutate,\n        ...rest,\n    };\n};\n\nexport default useVerifyEmail;\n","import { useWindowSize } from 'usehooks-ts';\n\n/** A custom hook to check for the client device and determine the layout to be rendered */\nconst useDevice = () => {\n    const { width } = useWindowSize();\n    const isMobile = width < 768;\n    const isTablet = width >= 768 && width < 1024;\n    const isDesktop = width >= 1024;\n\n    return {\n        isDesktop,\n        isMobile,\n        isTablet,\n    };\n};\n\nexport default useDevice;\n","import React, { RefObject, createContext, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useOnClickOutside } from 'usehooks-ts';\nimport { MT5AccountType } from '../../features/cfd/screens';\nimport useDevice from '../../hooks/useDevice';\n\ntype TModalContext = {\n    hide: () => void;\n    isOpen: boolean;\n    modalState?: TModalState;\n    setModalState: (newModalState: Partial<TModalState>) => void;\n    show: (ModalContent: React.ReactNode, options?: TModalShowOptions) => void;\n};\n\ntype TMarketTypes = React.ComponentProps<typeof MT5AccountType>['selectedMarketType'];\n\ntype TModalState = {\n    marketType?: TMarketTypes;\n    platform?: string;\n};\n\ntype TModalShowOptions = {\n    rootRef?: React.RefObject<HTMLElement>;\n};\n\nconst ModalContext = createContext<TModalContext | null>(null);\n\nexport const useModal = () => {\n    const context = useContext(ModalContext);\n\n    if (!context) throw new Error('useModal() must be called within a component wrapped in ModalProvider.');\n\n    return context;\n};\n\nconst ModalProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const modalRef = useRef<HTMLDivElement>(null);\n    const [content, setContent] = useState<React.ReactNode | null>();\n    const modalState = useRef<TModalState>();\n    const { isDesktop } = useDevice();\n\n    const [customRootRef, setCustomRootRef] = useState<RefObject<HTMLElement> | null>(null);\n    const rootRef = useRef<HTMLElement>(document.getElementById('wallets_modal_root'));\n    const rootResponsiveRef = useRef<HTMLElement | null>(document.getElementById('wallets_modal_responsive_root'));\n\n    const setModalState = (newModalState: Partial<TModalState>) => {\n        modalState.current = {\n            ...modalState.current,\n            ...newModalState,\n        };\n    };\n\n    const show = (ModalContent: React.ReactNode, options?: TModalShowOptions) => {\n        setContent(ModalContent);\n        setCustomRootRef(options?.rootRef?.current ? options?.rootRef : null);\n    };\n\n    useEffect(() => {\n        if (!rootResponsiveRef.current) {\n            rootResponsiveRef.current = document.getElementById('wallets_modal_responsive_root');\n        }\n    }, []);\n\n    const hide = () => {\n        setContent(null);\n    };\n\n    useOnClickOutside(modalRef, isDesktop ? hide : () => undefined);\n\n    const modalRootRef = useMemo(() => {\n        if (customRootRef?.current) return customRootRef;\n        if (isDesktop) return rootRef;\n        return rootResponsiveRef;\n    }, [isDesktop, customRootRef]);\n\n    return (\n        <ModalContext.Provider\n            value={{ hide, isOpen: content !== null, modalState: modalState.current, setModalState, show }}\n        >\n            {children}\n            {modalRootRef?.current &&\n                content &&\n                createPortal(<div ref={modalRef}>{content}</div>, modalRootRef.current)}\n        </ModalContext.Provider>\n    );\n};\n\nexport default ModalProvider;\n","import React from 'react';\nimport './Divider.scss';\n\ntype TProps = {\n    color?: React.CSSProperties['borderColor'];\n    margin?: React.CSSProperties['margin'];\n    variant?: 'horizontal' | 'vertical';\n};\n\nconst Divider: React.FC<TProps> = ({ color = '#f2f3f4', margin, variant = 'horizontal' }) => (\n    <div className={`wallets-divider__${variant}`} style={{ borderColor: color, margin }} />\n);\n\nexport default Divider;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><path fill=\"#FFAD3A\" d=\"M8 0a8 8 0 110 16A8 8 0 018 0zm0 10.7c-.4 0-.7.1-1 .4-.2.2-.3.5-.3.9s.1.7.4 1c.2.2.5.3.9.3s.7-.1 1-.4c.2-.2.3-.5.3-.9s-.1-.7-.4-1c-.2-.2-.5-.3-.9-.3zm1.2-7.4c-.3-.5-.9-.7-1.5-.6-.6.2-1 .7-1 1.3v1L7 9.3c0 .5.5.8 1 .8.6 0 1-.4 1-.8v-.9l.2-2.6.1-1.8v-.6z\" /></svg>);","import React, { useMemo } from 'react';\nimport useDevice from '../../../hooks/useDevice';\nimport AlertAnnounce from '../../../public/images/alert-annouce.svg';\nimport AlertDanger from '../../../public/images/alert-danger.svg';\nimport AlertInfo from '../../../public/images/alert-info.svg';\nimport Warning from '../../../public/images/warning.svg';\nimport './InlineMessage.scss';\n\nconst typeIconMapper = {\n    announcement: AlertAnnounce,\n    error: AlertDanger,\n    information: AlertInfo,\n    warning: Warning,\n};\n\ntype TProps = RequireAtLeastOne<{ children: React.ReactNode; message: React.ReactNode; title: React.ReactNode }> & {\n    size?: 'lg' | 'md' | 'sm' | 'xs';\n    type?: keyof typeof typeIconMapper;\n    variant?: 'contained' | 'outlined';\n};\n\nconst InlineMessage: React.FC<TProps> = ({ children, message, size = 'xs', title, type = 'warning', variant }) => {\n    const { isMobile } = useDevice();\n    const Icon = typeIconMapper[type];\n    const iconSize = size === 'lg' && !isMobile ? 24 : 16;\n\n    const sizeToFontSizeMapper: Record<string, string> = useMemo(\n        () => ({\n            lg: isMobile ? '14px' : '16px',\n            md: isMobile ? '12px' : '14px',\n            sm: isMobile ? '10px' : '12px',\n            xs: isMobile ? '8px' : '10px',\n        }),\n        [isMobile]\n    );\n\n    const fontSize = sizeToFontSizeMapper[size];\n\n    return (\n        <div\n            className={`wallets-inline-message \n                         wallets-inline-message--${type} \n                         wallets-inline-message--${size} \n                         wallets-inline-message--${variant} \n                         `}\n        >\n            <Icon className={`wallets-inline-message__icon--${size}`} height={iconSize} width={iconSize} />\n            <span className={`wallets-inline-message__messages inline-message__messages--${size}`} style={{ fontSize }}>\n                {title && <strong>{title}</strong>}\n                {message && <span>{message}</span>}\n                {children}\n            </span>\n        </div>\n    );\n};\n\nexport default InlineMessage;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M16 8A8 8 0 110 8a8 8 0 0116 0zM5.976 10.423a1.35 1.35 0 01-1.301-.972c.747.1 1.608.232 2.41.393a1.355 1.355 0 01-1.11.579zM11.219 3.5c-.423 0-.781.327-.781.729v.32c-.405.39-1.377 1.054-3 1.529-1.116.328-3.063.515-3.418.546-.018-.023-.031-.046-.054-.067a.558.558 0 00-.394-.157.545.545 0 00-.557.526L3 9.105c-.001.14.057.28.162.38a.565.565 0 00.394.166h.003a.577.577 0 00.394-.162c.03.269.12.527.269.765.273.436.707.742 1.224.867.16.038.326.058.49.058.812 0 1.509-.465 1.816-1.16 1.432.467 2.28 1.07 2.685 1.432v.32c0 .402.359.729.782.729.422 0 .78-.327.78-.728V4.229c0-.402-.358-.73-.78-.73z\" fill=\"#4BB4B3\" /><path d=\"M0 0h16v16H0z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><g fill=\"none\"><path fill=\"#EC3F3F\" d=\"M7.031.6a1.082 1.082 0 011.937 0l3.366 6.73 3.55 7.102c.36.72-.164 1.568-.969 1.568H1.085a1.083 1.083 0 01-.969-1.568l3.55-7.102L7.031.6zM8 11c.375 0 .687-.29.712-.665l.28-4.095C9.066 5.582 8.602 5 8 5s-1.066.582-.992 1.24l.28 4.095A.714.714 0 008 11zm1 2.012v-.024C9 12.43 8.576 12 8 12c-.575 0-1 .43-1 .988v.024c0 .557.425.988 1 .988.576 0 1-.432 1-.988z\" /><path d=\"M0 0h16v16H0z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" {...props}><g fill=\"none\"><path fill=\"#2196F3\" d=\"M16 8A8 8 0 110 8a8 8 0 0116 0zm-7 4V7a1 1 0 00-1-1H6a1 1 0 001 1v5a1 1 0 001 1h2a1 1 0 00-1-1zm0-8a1 1 0 10-2 0 1 1 0 002 0z\" /><path d=\"M0 0h16v16H0z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" {...props}><path d=\"M2.293 3.707a1 1 0 011.414-1.414L8 6.586l4.293-4.293a1 1 0 111.414 1.414L9.414 8l4.293 4.293a1 1 0 01-1.414 1.414L8 9.414l-4.293 4.293a1 1 0 01-1.414-1.414L6.586 8 2.293 3.707z\" fill=\"#333\" /></svg>);","import React, { CSSProperties, ElementType, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { TGenericSizes } from '../types';\nimport './WalletText.scss';\n\ninterface WalletTextProps {\n    align?: CSSProperties['textAlign'];\n    as?: ElementType;\n    children: ReactNode;\n    color?: CSSProperties['color'] | 'error' | 'general' | 'primary' | 'success' | 'warning';\n    fontStyle?: CSSProperties['fontStyle'];\n    lineHeight?: TGenericSizes;\n    size?: Exclude<TGenericSizes, '3xs' | '6xl' | '7xl'>;\n    weight?: CSSProperties['fontWeight'];\n}\n\nconst WalletText: React.FC<WalletTextProps> = ({\n    align = 'left',\n    as = 'span',\n    children,\n    color = 'general',\n    fontStyle = 'normal',\n    lineHeight,\n    size = 'md',\n    weight = 'normal',\n}) => {\n    const textClassNames = classNames(\n        'wallet-text',\n        `wallets-text__size--${size}`,\n        `wallets-text__weight--${weight}`,\n        `wallets-text__align--${align}`,\n        `wallets-text__color--${color}`,\n        `wallets-text__line-height--${lineHeight}`,\n        `wallets-text__font-style--${fontStyle}`\n    );\n\n    const Tag = as;\n\n    return <Tag className={textClassNames}>{children}</Tag>;\n};\n\nexport default WalletText;\n","import React, { FC, PropsWithChildren, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport CloseIcon from '../../../public/images/close-icon.svg';\nimport { useModal } from '../../ModalProvider';\nimport { WalletText } from '../WalletText';\nimport './ModalStepWrapper.scss';\n\ntype TModalStepWrapperProps = {\n    renderFooter?: () => ReactNode;\n    shouldFixedFooter?: boolean;\n    shouldHideHeader?: boolean;\n    title?: string;\n};\n\nconst ModalStepWrapper: FC<PropsWithChildren<TModalStepWrapperProps>> = ({\n    children,\n    renderFooter,\n    shouldFixedFooter = true,\n    shouldHideHeader = false,\n    title,\n}) => {\n    const { hide } = useModal();\n    const hasRenderFooter = typeof renderFooter === 'function';\n    const fixedFooter = shouldFixedFooter && hasRenderFooter;\n\n    return (\n        <div\n            className={classNames('wallets-modal-step-wrapper', {\n                'wallets-modal-step-wrapper--fixed-footer': fixedFooter && !shouldHideHeader,\n                'wallets-modal-step-wrapper--no-header': shouldHideHeader && !fixedFooter,\n                'wallets-modal-step-wrapper--no-header--fixed-footer': shouldHideHeader && fixedFooter,\n            })}\n        >\n            {!shouldHideHeader && (\n                <div className='wallets-modal-step-wrapper__header'>\n                    <WalletText weight='bold'>{title}</WalletText>\n                    <CloseIcon className='wallets-modal-step-wrapper__header-close-icon' onClick={hide} />\n                </div>\n            )}\n            <div className='wallets-modal-step-wrapper__body'>\n                {children}\n                {!shouldFixedFooter && hasRenderFooter && (\n                    <div className='wallets-modal-step-wrapper__footer'>{renderFooter()}</div>\n                )}\n            </div>\n            {shouldFixedFooter && hasRenderFooter && (\n                <div className='wallets-modal-step-wrapper__footer'>{renderFooter()}</div>\n            )}\n        </div>\n    );\n};\n\nexport default ModalStepWrapper;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" {...props}><path d=\"M3.707 2.293L8 6.587l4.293-4.294a1 1 0 011.414 1.414L9.414 8.001l4.293 4.295a1 1 0 01-1.414 1.414L8 9.416 3.707 13.71a1 1 0 01-1.414-1.414l4.292-4.295-4.292-4.294a1 1 0 011.414-1.414z\" fill=\"var(--text-prominent)\" /></svg>);","import React, { FC } from 'react';\nimport CloseIcon from '../../../public/images/ic-close-dark.svg';\nimport { useModal } from '../../ModalProvider';\nimport './ModalWrapper.scss';\n\ntype TProps = {\n    hideCloseButton?: boolean;\n};\n\nconst ModalWrapper: FC<React.PropsWithChildren<TProps>> = ({ children, hideCloseButton = false }) => {\n    const { hide } = useModal();\n\n    return (\n        <div className='wallets-modal-wrapper'>\n            {!hideCloseButton && <CloseIcon className='wallets-modal-wrapper__close-icon' onClick={hide} />}\n            {children}\n        </div>\n    );\n};\n\nexport default ModalWrapper;\n","import React from 'react';\nimport './ProgressBar.scss';\n\ntype TProps = {\n    activeIndex: number;\n    indexes: string[];\n    isTransition?: boolean;\n    setActiveIndex: (index: string) => void;\n};\n\nconst ProgressBar: React.FC<TProps> = ({ activeIndex, indexes, isTransition = true, setActiveIndex }) => {\n    return (\n        <div className='wallets-progress-bar'>\n            {indexes.map((value, idx) => {\n                const currentIndex = idx + 1;\n                const isActive = currentIndex === activeIndex;\n\n                const barClassname = isActive ? 'wallets-progress-bar-active' : 'wallets-progress-bar-inactive';\n\n                return (\n                    <div\n                        className={`${barClassname} ${isTransition ? 'wallets-progress-bar-transition' : ''}`}\n                        key={`progress-bar-${currentIndex}`}\n                        onClick={() => setActiveIndex(value)}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ProgressBar;\n","import React, { createContext, useContext, useState } from 'react';\n\ntype TTabContext = {\n    activeTabIndex: number;\n    setActiveTabIndex: React.Dispatch<React.SetStateAction<number>>;\n};\n\nconst TabsContext = createContext<TTabContext | null>(null);\n\nexport const useTabs = () => {\n    const context = useContext(TabsContext);\n\n    if (!context) {\n        throw new Error('Seems you forgot to wrap the components in \"<Tabs />\"');\n    }\n\n    return context;\n};\n\ntype TTabsProps = {\n    className?: string;\n};\n\nexport const Tabs = ({ children, className }: React.PropsWithChildren<TTabsProps>) => {\n    const [activeTabIndex, setActiveTabIndex] = useState(0);\n\n    return (\n        <TabsContext.Provider value={{ activeTabIndex, setActiveTabIndex }}>\n            <div className={className}>{children}</div>\n        </TabsContext.Provider>\n    );\n};\n\nexport default Tabs;\n","import React from 'react';\nimport { useTabs } from './Tabs';\nimport './TabList.scss';\n\ntype TTabListProps = {\n    list: string[];\n};\n\nexport const TabList = ({ list }: TTabListProps) => {\n    const { activeTabIndex, setActiveTabIndex } = useTabs();\n\n    return (\n        <div className='wallets-tabs-list' data-list-count={list.length}>\n            {list.map((tab, i) => (\n                <div\n                    className={`wallets-tabs-list-item wallets-tabs-list-item--${\n                        i === activeTabIndex ? 'active' : 'disabled'\n                    }`}\n                    key={i}\n                    onClick={() => setActiveTabIndex(i)}\n                >\n                    {tab}\n                </div>\n            ))}\n        </div>\n    );\n};\n","import React from 'react';\n\nconst TabPanel = ({ children }: React.PropsWithChildren<unknown>) => {\n    return <div>{children}</div>;\n};\n\nexport default TabPanel;\n","import React, { Children } from 'react';\nimport { useTabs } from './Tabs';\n\nconst TabPanels = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { activeTabIndex } = useTabs();\n\n    return (\n        <div>\n            {Children.map(children, (child, index) => {\n                if (index !== activeTabIndex) return undefined;\n\n                return child;\n            })}\n        </div>\n    );\n};\n\nexport default TabPanels;\n","import React from 'react';\nimport './Tooltip.scss';\n\ntype TProps = {\n    alignment?: 'bottom' | 'left' | 'right' | 'top';\n    isVisible: boolean;\n    message: string;\n};\n\nconst Tooltip: React.FC<React.PropsWithChildren<TProps>> = ({ alignment = 'left', children, isVisible, message }) => {\n    return (\n        <div className={`wallets-tooltip`}>\n            {children}\n            {isVisible && (\n                <div className={`wallets-tooltip__content wallets-tooltip__content--${alignment}`}>\n                    <div className={`wallets-tooltip__arrow wallets-tooltip__arrow--${alignment}`} />\n                    <div className='wallets-tooltip__message'>{message}</div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Tooltip;\n","import React, { ComponentProps, CSSProperties, ReactElement } from 'react';\nimport classNames from 'classnames';\nimport { TGenericSizes } from '../types';\nimport { WalletText } from '../WalletText';\nimport './WalletButton.scss';\n\ntype TVariant = 'contained' | 'ghost' | 'outlined';\n\ninterface WalletButtonProps {\n    color?: CSSProperties['color'] | 'primary-light' | 'primary';\n    disabled?: ComponentProps<'button'>['disabled'];\n    icon?: ReactElement;\n    isFullWidth?: boolean;\n    onClick?: ComponentProps<'button'>['onClick'];\n    rounded?: Extract<TGenericSizes, 'md' | 'sm'>;\n    size?: Extract<TGenericSizes, 'lg' | 'md' | 'sm'>;\n    text?: React.ReactNode;\n    variant?: TVariant;\n}\n\nconst WalletButton: React.FC<WalletButtonProps> = ({\n    color = 'primary',\n    disabled = false,\n    icon,\n    isFullWidth = false,\n    onClick,\n    rounded = 'sm',\n    size = 'md',\n    text,\n    variant = 'contained',\n}) => {\n    const isContained = variant === 'contained';\n    const isOutlined = variant === 'outlined';\n    const isGhost = variant === 'ghost';\n    const hasIcon = !!icon;\n    const hasText = !!text;\n\n    const buttonClassNames = classNames(\n        'wallets-button',\n        `wallets-button__size--${size}`,\n        `wallets-button__variant--${variant}`,\n        `wallets-button__rounded--${rounded}`,\n        isContained && `wallets-button__color--${color}`,\n        isFullWidth && 'wallets-button__full-width'\n    );\n\n    const buttonFontColor = () => {\n        if (isContained) {\n            switch (color) {\n                case 'black':\n                    return 'white';\n                case 'primary-light':\n                    return 'error';\n                case 'primary':\n                    return 'white';\n                case 'white':\n                    return 'general';\n                default:\n                    return 'white';\n            }\n        } else if (isOutlined) {\n            return 'general';\n        } else if (isGhost) {\n            return 'error';\n        }\n    };\n\n    const buttonFontSizeMapper = {\n        lg: 'sm',\n        md: 'sm',\n        sm: 'xs',\n    } as const;\n\n    return (\n        <button className={buttonClassNames} disabled={disabled} onClick={onClick}>\n            {hasIcon && icon}\n            {hasText && (\n                <WalletText\n                    align='center'\n                    color={buttonFontColor()}\n                    size={buttonFontSizeMapper[size] || 'sm'}\n                    weight='bold'\n                >\n                    {text}\n                </WalletText>\n            )}\n        </button>\n    );\n};\n\nexport default WalletButton;\n","import React, { FC, PropsWithChildren } from 'react';\nimport classNames from 'classnames';\nimport './WalletButtonGroup.scss';\n\ntype TWalletButtonGroupProps = {\n    isFlex?: boolean;\n    isVertical?: boolean;\n};\n\nconst WalletButtonGroup: FC<PropsWithChildren<TWalletButtonGroupProps>> = ({ children, isFlex, isVertical }) => {\n    return (\n        <div\n            className={classNames('wallets-button-group', {\n                'wallets-button-group--flex': isFlex,\n                'wallets-button-group--vertical': isVertical,\n            })}\n        >\n            {children}\n        </div>\n    );\n};\n\nexport default WalletButtonGroup;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"16\" height=\"16\" rx=\"8\" fill=\"#4BB4B3\" /><path d=\"M6.975 9.323L5.307 7.838a.51.51 0 00-.668 0 .386.386 0 000 .594l1.997 1.777a.517.517 0 00.672 0l5.053-4.491a.386.386 0 000-.594.51.51 0 00-.668 0L6.975 9.323z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"17\" height=\"16\" fill=\"none\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.5 5.5A1.5 1.5 0 014 4h6a1.5 1.5 0 011.5 1.5v8A1.5 1.5 0 0110 15H4a1.5 1.5 0 01-1.5-1.5v-8zM4 5a.5.5 0 00-.5.5v8a.5.5 0 00.5.5h6a.5.5 0 00.5-.5v-8A.5.5 0 0010 5H4z\" fill=\"#333\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.5 7.5A.5.5 0 015 7h4a.5.5 0 010 1H5a.5.5 0 01-.5-.5zM4.5 9.5A.5.5 0 015 9h4a.5.5 0 010 1H5a.5.5 0 01-.5-.5zM4.5 11.5A.5.5 0 015 11h4a.5.5 0 010 1H5a.5.5 0 01-.5-.5z\" fill=\"#333\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.5 2.5A1.5 1.5 0 017 1h6a1.5 1.5 0 011.5 1.5v8A1.5 1.5 0 0113 12h-1.5v-1H13a.5.5 0 00.5-.5v-8A.5.5 0 0013 2H7a.5.5 0 00-.5.5V4h-1V2.5z\" fill=\"#333\" /></svg>);","import React, { useEffect, useRef, useState } from 'react';\nimport { useCopyToClipboard, useHover } from 'usehooks-ts';\nimport useDevice from '../../../hooks/useDevice';\nimport CheckmarkCircle from '../../../public/images/ic-checkmark-circle.svg';\nimport Clipboard from '../../../public/images/clipboard.svg';\nimport { Tooltip } from '../Tooltip';\nimport './WalletClipboard.scss';\n\ntype TProps = {\n    infoMessage?: string;\n    popoverAlignment: 'bottom' | 'left' | 'right' | 'top';\n    successMessage: string;\n    textCopy: string;\n};\n\nconst WalletClipboard = ({\n    //  info_message, popoverAlignment, success_message,\n    textCopy,\n}: TProps) => {\n    const [, copy] = useCopyToClipboard();\n    const { isMobile } = useDevice();\n    const [isCopied, setIsCopied] = useState(false);\n    const hoverRef = useRef(null);\n    const isHovered = useHover(hoverRef);\n    let timeoutClipboard: ReturnType<typeof setTimeout>;\n\n    const onClick = (event: { stopPropagation: () => void }) => {\n        setIsCopied(true);\n        copy(textCopy);\n        timeoutClipboard = setTimeout(() => {\n            setIsCopied(false);\n        }, 2000);\n        event.stopPropagation();\n    };\n\n    useEffect(() => {\n        return () => clearTimeout(timeoutClipboard);\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <Tooltip alignment='right' isVisible={isHovered && !isMobile} message={isCopied ? 'Copied!' : 'Copy'}>\n            <button className='wallets-clipboard' onClick={onClick} ref={hoverRef}>\n                {isCopied ? <CheckmarkCircle /> : <Clipboard />}\n            </button>\n        </Tooltip>\n    );\n};\n\nexport default WalletClipboard;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.146 5.146a.5.5 0 01.708 0L8 10.293l5.146-5.147a.5.5 0 01.708.708l-5.5 5.5a.5.5 0 01-.708 0l-5.5-5.5a.5.5 0 010-.708z\" fill=\"#333\" /></svg>);","import React, { isValidElement } from 'react';\n\nconst reactNodeToString = function (reactNode: React.ReactNode): string {\n    let string = '';\n    if (typeof reactNode === 'string') {\n        string = reactNode;\n    } else if (typeof reactNode === 'number') {\n        string = reactNode.toString();\n    } else if (reactNode instanceof Array) {\n        reactNode.forEach(function (child) {\n            string += reactNodeToString(child);\n        });\n    } else if (isValidElement(reactNode)) {\n        string += reactNodeToString(reactNode.props.children);\n    }\n    return string;\n};\n\nexport default reactNodeToString;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useCombobox } from 'downshift';\nimport ArrowIcon from '../../../public/images/pointed-down-arrow-icon.svg';\nimport reactNodeToString from '../../../utils/reactNodeToString';\nimport { WalletText } from '../WalletText';\nimport './WalletDropdown.scss';\n\ntype TProps = {\n    icon?: React.ReactNode;\n    label?: React.ReactNode;\n    list: {\n        text: React.ReactNode;\n        value: string;\n    }[];\n    listHeight?: 'lg' | 'md' | 'sm';\n    onSelect: (value: string) => void;\n    type?: 'comboBox' | 'prompt';\n    value: string | undefined;\n};\n\nconst WalletDropdown: React.FC<TProps> = ({\n    icon,\n    label,\n    list,\n    listHeight = 'md',\n    onSelect,\n    type = 'prompt',\n    value,\n}) => {\n    const [items, setItems] = useState(list);\n    const [shouldFilterList, setShouldFilterList] = useState(false);\n    const clearFilter = useCallback(() => {\n        setShouldFilterList(false);\n        setItems(list);\n    }, [list]);\n    const { getInputProps, getItemProps, getLabelProps, getMenuProps, getToggleButtonProps, isOpen } = useCombobox({\n        items,\n        itemToString(item) {\n            return item ? reactNodeToString(item.text) : '';\n        },\n        onInputValueChange({ inputValue }) {\n            if (shouldFilterList) {\n                setItems(\n                    list.filter(item =>\n                        reactNodeToString(item.text)\n                            .toLowerCase()\n                            .includes(inputValue?.toLowerCase() ?? '')\n                    )\n                );\n            }\n        },\n        onIsOpenChange({ isOpen }) {\n            if (!isOpen) {\n                clearFilter();\n            }\n        },\n        onSelectedItemChange({ selectedItem }) {\n            onSelect(selectedItem?.value ?? '');\n        },\n        selectedItem: items.find(item => item.value === value),\n    });\n\n    useEffect(() => {\n        setItems(list);\n    }, [list]);\n\n    return (\n        <div className='wallets-dropdown'>\n            <div className='wallets-dropdown__content'>\n                {icon && <div className='wallets-dropdown__icon'>{icon}</div>}\n                <input\n                    className='wallets-dropdown__field'\n                    id='dropdown-text'\n                    onKeyUp={() => setShouldFilterList(true)}\n                    placeholder={reactNodeToString(label)}\n                    readOnly={type !== 'comboBox'}\n                    type='text'\n                    value={value}\n                    {...getInputProps()}\n                />\n                <label\n                    className={classNames('wallets-dropdown__label', {\n                        'wallets-dropdown__label--with-icon': !!icon,\n                    })}\n                    htmlFor='dropdown-text'\n                    {...getLabelProps()}\n                >\n                    {label}\n                </label>\n                <button\n                    className={classNames('wallets-dropdown__button', {\n                        'wallets-dropdown__button--active': isOpen,\n                    })}\n                    {...getToggleButtonProps()}\n                >\n                    <ArrowIcon />\n                </button>\n            </div>\n            <ul className={`wallets-dropdown__items wallets-dropdown__items--${listHeight}`} {...getMenuProps()}>\n                {isOpen &&\n                    items.map((item, index) => (\n                        <li\n                            className={classNames('wallets-dropdown__item', {\n                                'wallets-dropdown__item--active': value === item.value,\n                            })}\n                            key={item.value}\n                            onClick={() => clearFilter()}\n                            {...getItemProps({ index, item })}\n                        >\n                            <WalletText size='sm' weight={value === item.value ? 'bold' : 'normal'}>\n                                {item.text}\n                            </WalletText>\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default WalletDropdown;\n","import React from 'react';\nimport { Divider, WalletButton, WalletText } from '../../../../../../components/Base';\n\ntype TTransactionStatusError = {\n    refresh: VoidFunction;\n};\n\nconst TransactionStatusError: React.FC<TTransactionStatusError> = ({ refresh }) => (\n    <React.Fragment>\n        <WalletText lineHeight='sm' size='xs'>\n            Unfortunately, we cannot retrieve the information at this time.\n        </WalletText>\n        <Divider color='#d6dadb' /> {/* --color-grey-5 */}\n        <WalletButton\n            color='transparent'\n            isFullWidth={true}\n            onClick={refresh}\n            size='sm'\n            text='Refresh'\n            variant='outlined'\n        />\n    </React.Fragment>\n);\n\nexport default TransactionStatusError;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"10\" height=\"10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M.854.146L5 4.293 9.146.146a.5.5 0 11.708.708L5.707 5l4.147 4.146a.5.5 0 01-.708.708L5 5.707.854 9.854a.5.5 0 01-.708-.708L4.293 5 .146.854A.5.5 0 11.854.146z\" fill=\"#333\" /></svg>);","import React from 'react';\nimport { ModalWrapper, WalletButton, WalletText } from '../../../../components/Base';\nimport useDevice from '../../../../hooks/useDevice';\nimport './WalletActionModal.scss';\n\ntype TWalletActionModal = {\n    actionButtonsOptions: {\n        isPrimary?: boolean;\n        onClick: VoidFunction;\n        text: string;\n    }[];\n    description: string;\n    hideCloseButton?: React.ComponentProps<typeof ModalWrapper>['hideCloseButton'];\n    title: string;\n};\n\nconst WalletActionModal: React.FC<TWalletActionModal> = ({\n    actionButtonsOptions,\n    description,\n    hideCloseButton = false,\n    title,\n}) => {\n    const { isMobile } = useDevice();\n    return (\n        <ModalWrapper hideCloseButton={hideCloseButton}>\n            <div className='wallets-action-modal'>\n                <WalletText lineHeight={isMobile ? 'md' : 'xl'} weight='bold'>\n                    {title}\n                </WalletText>\n                <WalletText lineHeight={isMobile ? 'sm' : 'lg'} size='sm'>\n                    {description}\n                </WalletText>\n                <div className='wallets-action-modal__buttons-container'>\n                    {actionButtonsOptions.map(action => (\n                        <WalletButton\n                            color={action.isPrimary ? 'primary' : 'transparent'}\n                            key={action.text}\n                            onClick={action.onClick}\n                            size='lg'\n                            text={action.text}\n                            variant={action.isPrimary ? 'contained' : 'outlined'}\n                        />\n                    ))}\n                </div>\n            </div>\n        </ModalWrapper>\n    );\n};\n\nexport default WalletActionModal;\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useCancelCryptoTransaction } from '@deriv/api';\nimport { WalletText } from '../../../../../../components/Base';\nimport { useModal } from '../../../../../../components/ModalProvider';\nimport IcCrossLight from '../../../../../../public/images/ic-cross-light.svg';\nimport { THooks } from '../../../../../../types';\nimport { WalletActionModal } from '../../../../components/WalletActionModal';\nimport useRecentTransactions from '../../hooks/useRecentTransactions';\nimport './CryptoTransaction.scss';\n\ntype TCryptoTransaction = {\n    currencyDisplayCode: THooks.CurrencyConfig['code'];\n    transaction: NonNullable<ReturnType<typeof useRecentTransactions>['recentTransactions']>[number];\n};\n\nconst CryptoTransaction: React.FC<TCryptoTransaction> = ({ currencyDisplayCode: currency, transaction }) => {\n    const { hide, show } = useModal();\n\n    const { mutate } = useCancelCryptoTransaction();\n\n    const cancelTransaction = useCallback(() => {\n        mutate({ payload: { id: transaction.id } });\n        hide();\n    }, [hide, mutate, transaction.id]);\n\n    return (\n        <div className='wallets-crypto-transaction'>\n            <div className='wallets-crypto-transaction__type-and-status'>\n                <WalletText lineHeight='sm' size='xs'>\n                    {transaction.is_deposit ? `Deposit ${currency}` : `Withdrawal ${currency}`}\n                </WalletText>\n                <div className='wallets-crypto-transaction__status'>\n                    <div\n                        className={classNames(\n                            'wallets-crypto-transaction__status__dot',\n                            `wallets-crypto-transaction__status__dot--${transaction.status_code\n                                .toLowerCase()\n                                .replace('_', '-')}`\n                        )}\n                    />\n                    <WalletText lineHeight='2xs' size='2xs'>\n                        {transaction.statusName}\n                    </WalletText>\n                    {!!transaction.is_valid_to_cancel && (\n                        <button\n                            className='wallets-crypto-transaction__cancel-button'\n                            onClick={() =>\n                                show(\n                                    <WalletActionModal\n                                        actionButtonsOptions={[\n                                            {\n                                                onClick: hide,\n                                                text: \"No, don't cancel\",\n                                            },\n                                            {\n                                                isPrimary: true,\n                                                onClick: cancelTransaction,\n                                                text: 'Yes, cancel',\n                                            },\n                                        ]}\n                                        description='Are you sure you want to cancel this transaction?'\n                                        hideCloseButton={true}\n                                        title='Cancel transaction'\n                                    />\n                                )\n                            }\n                        >\n                            <IcCrossLight />\n                        </button>\n                    )}\n                </div>\n            </div>\n            <div className='wallets-crypto-transaction__amount-and-date'>\n                <WalletText color='less-prominent' size='2xs'>\n                    {transaction.amount} {currency}\n                </WalletText>\n                <WalletText color='less-prominent' size='2xs'>\n                    {transaction.submitDateDisplay}\n                </WalletText>\n            </div>\n            <WalletText lineHeight='2xs' size='2xs'>\n                Address:{' '}\n                <a className='wallets-crypto-transaction__red-text' href={transaction.address_url}>\n                    {transaction.formatted_address_hash}\n                </a>\n            </WalletText>\n            <WalletText lineHeight='2xs' size='2xs'>\n                Transaction hash:{' '}\n                <a className='wallets-crypto-transaction__red-text' href={transaction.transaction_url}>\n                    {transaction.formatted_transaction_hash}\n                </a>\n            </WalletText>\n            {transaction.is_deposit && (\n                <div>\n                    <WalletText lineHeight='2xs' size='2xs'>\n                        Confirmations:{' '}\n                        <span className='wallets-crypto-transaction__red-text'>{transaction.confirmationDisplay}</span>\n                    </WalletText>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CryptoTransaction;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Divider, WalletButton, WalletText } from '../../../../../../components/Base';\nimport { THooks } from '../../../../../../types';\nimport useRecentTransactions from '../../hooks/useRecentTransactions';\nimport { CryptoTransaction } from '../CryptoTransaction';\n\ntype TTransactionStatusSuccess = {\n    recentTransactions: ReturnType<typeof useRecentTransactions>['recentTransactions'];\n    transactionType?: THooks.CryptoTransactions['transaction_type'];\n    wallet: THooks.ActiveWalletAccount;\n};\n\nconst TransactionStatusSuccess: React.FC<TTransactionStatusSuccess> = ({\n    recentTransactions,\n    transactionType,\n    wallet,\n}) => {\n    const history = useHistory();\n\n    const filteredTransactions =\n        recentTransactions?.filter(\n            el => !transactionType || (transactionType === 'deposit' ? el.is_deposit : el.is_withdrawal)\n        ) || [];\n\n    return (\n        <React.Fragment>\n            {filteredTransactions?.length > 0 ? (\n                <React.Fragment>\n                    {filteredTransactions?.slice(0, 3).map((transaction, index) => (\n                        <React.Fragment key={transaction.id}>\n                            <CryptoTransaction\n                                currencyDisplayCode={wallet.currency_config?.code || ''}\n                                key={transaction.id}\n                                transaction={transaction}\n                            />\n                            <Divider\n                                color={index < filteredTransactions.length - 1 && index < 2 ? '#e6e9e9' : '#d6dadb'}\n                            />\n                        </React.Fragment>\n                    ))}\n                    {filteredTransactions.length > 3 && (\n                        <WalletButton\n                            color='transparent'\n                            isFullWidth={true}\n                            onClick={() => {\n                                // should navigate to transactions page with \"Pending transactions\" toggle on and filter set to `transactionType`\n                                history.push('wallets/cashier/transactions');\n                            }}\n                            size='sm'\n                            text='View more'\n                            variant='outlined'\n                        />\n                    )}\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <WalletText size='xs'>No recent transactions.</WalletText>\n                    <Divider color='#d6dadb' /> {/* --color-grey-5 */}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default TransactionStatusSuccess;\n","import moment from 'moment';\nimport { THooks } from '../../../../../types';\n\nconst transactionDetailsMapper = (transaction: THooks.CryptoTransactions) => {\n    if (transaction.transaction_type === 'deposit') {\n        return {\n            CONFIRMED: {\n                confirmationDisplay: 'Confirmed',\n                description: 'Your deposit is successful.',\n                statusName: 'Successful',\n            },\n            ERROR: {\n                confirmationDisplay: 'NA',\n                description:\n                    'Your deposit is unsuccessful due to an error on the blockchain. Please contact your crypto wallet service provider for more info.',\n                statusName: 'Unsuccessful',\n            },\n            PENDING: {\n                confirmationDisplay: transaction.confirmations ? `${transaction.confirmations}` : 'Pending',\n                description: 'We’ve received your request and are waiting for more blockchain confirmations.',\n                statusName: 'In process',\n            },\n        }[transaction.status_code];\n    }\n\n    return {\n        CANCELLED: {\n            confirmationDisplay: '-',\n            description: 'You’ve cancelled your withdrawal request.',\n            statusName: 'Cancelled',\n        },\n        ERROR: {\n            confirmationDisplay: '-',\n            description:\n                'Your withdrawal is unsuccessful due to an error on the blockchain. Please contact us via live chat for more info.',\n            statusName: 'Unsuccessful',\n        },\n        LOCKED: {\n            confirmationDisplay: '-',\n            description:\n                \"We're reviewing your withdrawal request. You may still cancel this transaction if you wish. Once we start processing, you won't be able to cancel.\",\n            statusName: 'In review',\n        },\n        PERFORMING_BLOCKCHAIN_TXN: {\n            confirmationDisplay: '-',\n            description: 'We’re sending your request to the blockchain.',\n            statusName: 'In process',\n        },\n        PROCESSING: {\n            confirmationDisplay: '-',\n            description: 'We’re awaiting confirmation from the blockchain.',\n            statusName: 'In process',\n        },\n        REJECTED: {\n            confirmationDisplay: '-',\n            description: \"Your withdrawal is unsuccessful. We've sent you an email with more information.\",\n            statusName: 'Unsuccessful',\n        },\n        REVERTED: {\n            confirmationDisplay: '-',\n            description: \"Your withdrawal is unsuccessful. We've sent you an email with more information.\",\n            statusName: 'Unsuccessful',\n        },\n        REVERTING: {\n            confirmationDisplay: '-',\n            description: \"We're processing your withdrawal.\",\n            statusName: 'In process',\n        },\n        SENT: {\n            confirmationDisplay: '-',\n            description: 'Your withdrawal is successful.',\n            statusName: 'Successful',\n        },\n        VERIFIED: {\n            confirmationDisplay: '-',\n            description: 'We’re processing your withdrawal.',\n            statusName: 'In process',\n        },\n    }[transaction.status_code];\n};\n\nconst transactionDisplayMapper = (transaction: THooks.CryptoTransactions) => {\n    const submitDateDisplay = moment\n        .unix(transaction.submit_date || 0)\n        .utc()\n        .format('MMM D, YYYY');\n    return {\n        ...transaction,\n        ...transactionDetailsMapper(transaction),\n        submitDateDisplay,\n    };\n};\n\nexport default transactionDisplayMapper;\n","import { useCallback, useEffect, useMemo } from 'react';\nimport { useCryptoTransactions } from '@deriv/api';\nimport { THooks } from '../../../../../types';\nimport transactionDisplayMapper from '../utils/transactionDisplayMapper';\n\n// This hook is used to populate transactions from `useCryptoTransactions` with data that is needed for the UI.\nconst useRecentTransactions = (transactionType?: THooks.CryptoTransactions['transaction_type']) => {\n    const { data: transactions, resetData, subscribe, unsubscribe, ...rest } = useCryptoTransactions();\n\n    useEffect(() => {\n        subscribe({ payload: { transaction_type: transactionType } });\n        return () => unsubscribe();\n    }, [subscribe, transactionType, unsubscribe]);\n\n    const refresh = useCallback(() => {\n        unsubscribe();\n        resetData();\n        subscribe({ payload: { transaction_type: transactionType } });\n    }, [resetData, subscribe, transactionType, unsubscribe]);\n\n    const recentTransactions = useMemo(\n        () => transactions?.map(transaction => transactionDisplayMapper(transaction)),\n        [transactions]\n    );\n\n    return { recentTransactions, refresh, ...rest };\n};\n\nexport default useRecentTransactions;\n","import React, { useCallback, useMemo } from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { Divider, WalletText } from '../../../../components/Base';\nimport { WalletsTransactionStatusLoader } from '../../../../components';\nimport Warning from '../../../../public/images/warning.svg';\nimport { THooks } from '../../../../types';\nimport { TransactionStatusError } from './components/TransactionStatusError';\nimport { TransactionStatusSuccess } from './components/TransactionStatusSuccess';\nimport useRecentTransactions from './hooks/useRecentTransactions';\nimport './TransactionStatus.scss';\n\ntype TTransactionStatus = {\n    transactionType?: THooks.CryptoTransactions['transaction_type'];\n};\n\nconst TransactionStatus: React.FC<TTransactionStatus> = ({ transactionType }) => {\n    const {\n        error: recentTransactionsError,\n        isLoading: isTransactionsLoading,\n        recentTransactions,\n        refresh: refreshRecentTransactions,\n    } = useRecentTransactions(transactionType);\n    const {\n        data: wallet,\n        error: activeWalletAccountError,\n        isLoading: isActiveWalletAccountLoading,\n        refetch,\n    } = useActiveWalletAccount();\n\n    const isLoading = useMemo(\n        () => isTransactionsLoading || isActiveWalletAccountLoading,\n        [isTransactionsLoading, isActiveWalletAccountLoading]\n    );\n\n    const isError = useMemo(\n        () => !!activeWalletAccountError || !!recentTransactionsError,\n        [activeWalletAccountError, recentTransactionsError]\n    );\n\n    const refresh = useCallback(() => {\n        refreshRecentTransactions();\n        refetch();\n    }, [refetch, refreshRecentTransactions]);\n\n    return (\n        <div className='wallets-transaction-status'>\n            <div className='wallets-transaction-status__header'>\n                <WalletText weight='bold'>Transaction status</WalletText>\n                {isError && <Warning />}\n            </div>\n            <Divider color='#d6dadb' /> {/* --color-grey-5 */}\n            <div className='wallets-transaction-status__body'>\n                {!isError && isLoading && <WalletsTransactionStatusLoader />}\n                {isError && <TransactionStatusError refresh={refresh} />}\n                {!isLoading && !isError && wallet && (\n                    <TransactionStatusSuccess\n                        recentTransactions={recentTransactions}\n                        transactionType={transactionType}\n                        wallet={wallet}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionStatus;\n","import React, { useEffect } from 'react';\nimport QRCode from 'qrcode.react';\nimport { useAuthorize, useDepositCryptoAddress } from '@deriv/api';\nimport { WalletClipboard, WalletText } from '../../../../../../components/Base';\nimport { WalletsDepositCryptoAddressLoader } from '../../../../../../components';\nimport useDevice from '../../../../../../hooks/useDevice';\nimport './DepositCryptoAddress.scss';\n\nconst DepositCryptoAddress = () => {\n    const { data: depositCryptoAddress, isLoading, mutate } = useDepositCryptoAddress();\n    const { isSuccess: isAuthorizeSuccess } = useAuthorize();\n    const { isMobile } = useDevice();\n\n    useEffect(() => {\n        if (isAuthorizeSuccess) {\n            mutate();\n        }\n    }, [isAuthorizeSuccess, mutate]);\n\n    if (isLoading)\n        return (\n            <div className='wallets-deposit-crypto-address__loader'>\n                <WalletsDepositCryptoAddressLoader />\n            </div>\n        );\n\n    return (\n        <div className='wallets-deposit-crypto-address'>\n            <QRCode size={128} value={depositCryptoAddress || ''} />\n            <div className='wallets-deposit-crypto-address__hash'>\n                <div className='wallets-deposit-crypto-address__hash-text'>\n                    <WalletText size='sm' weight='bold'>\n                        {depositCryptoAddress}\n                    </WalletText>\n                </div>\n                <div className='wallets-deposit-crypto-address__hash-clipboard'>\n                    <div className='wallets-deposit-crypto-address__hash-divider' />\n                    <WalletClipboard\n                        infoMessage={isMobile ? undefined : 'copy'}\n                        popoverAlignment={isMobile ? 'left' : 'bottom'}\n                        successMessage='copied'\n                        textCopy={depositCryptoAddress || ''}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default DepositCryptoAddress;\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletText } from '../../../../../../components';\n\nconst DepositCryptoCurrencyDetails = () => {\n    const { data } = useActiveWalletAccount();\n\n    return (\n        <WalletText align='center' size='md' weight='bold'>\n            Send only {data?.currency_config?.name} ({data?.currency_config?.display_code}) to this address\n        </WalletText>\n    );\n};\n\nexport default DepositCryptoCurrencyDetails;\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { InlineMessage, WalletText } from '../../../../../../components/Base';\nimport './DepositCryptoDisclaimers.scss';\n\n// Check with BE to see if we can get the network name from the API.\nconst cryptoCurrencyToNetworkMapper: Record<string, string> = {\n    BTC: 'Bitcoin (BTC)',\n    ETH: 'Ethereum (ETH)',\n    eUSDT: 'Ethereum (ERC20) ',\n    LTC: 'Litecoin (LTC)',\n    tUSDT: 'Tron (TRC20) ',\n    USDC: 'Ethereum (ERC20)',\n    UST: 'Omnicore',\n};\n\nconst DepositCryptoDisclaimers = () => {\n    const { data } = useActiveWalletAccount();\n    const { currency } = data || {};\n\n    return (\n        <div className='wallets-deposit-crypto-disclaimers'>\n            <InlineMessage>\n                <div className='wallets-deposit-crypto-disclaimers__content'>\n                    <WalletText size='2xs' weight='bold'>\n                        To avoid loss of funds:\n                    </WalletText>\n                    <br />\n                    {data?.currency_config?.minimum_deposit && (\n                        <li>\n                            A minimum deposit value of {data?.currency_config?.minimum_deposit} {currency} is required.\n                            Otherwise, the funds will be lost and cannot be recovered.\n                        </li>\n                    )}\n                    <li>Do not send other cryptocurrencies to this address.</li>\n                    <li>Make sure to copy your Deriv account address correctly into your crypto wallet.</li>\n                    <li>\n                        In your cryptocurrency wallet, make sure to select{' '}\n                        <strong>{currency && cryptoCurrencyToNetworkMapper[currency]} network</strong> when you transfer\n                        funds to Deriv.\n                    </li>\n                </div>\n            </InlineMessage>\n            <div className='wallets-deposit-crypto-disclaimers__note'>\n                <WalletText size='xs' weight='bold'>\n                    Note:\n                </WalletText>\n                <WalletText size='xs'>\n                    &nbsp;You’ll receive an email when your deposit start being processed.\n                </WalletText>\n            </div>\n        </div>\n    );\n};\n\nexport default DepositCryptoDisclaimers;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { WalletText } from '../../../../../../components';\nimport './DepositCryptoTryFiatOnRamp.scss';\n\nconst DepositCryptoTryFiatOnRamp = () => {\n    const history = useHistory();\n\n    return (\n        <div className='wallets-deposit-crypto-try-fiat-onramp'>\n            <WalletText size='xs'>\n                Looking for a way to buy cryptocurrencies?&nbsp;\n                <a\n                    className='link wallets-deposit-crypto-try-fiat-onramp__link'\n                    onClick={() => history.push('/wallets/cashier/on-ramp')}\n                >\n                    Try Fiat onramp\n                </a>\n                .\n            </WalletText>\n        </div>\n    );\n};\n\nexport default DepositCryptoTryFiatOnRamp;\n","import React from 'react';\nimport { Divider } from '../../../../components/Base';\nimport { TransactionStatus } from '../TransactionStatus';\nimport DepositCryptoAddress from './components/DepositCryptoAddress/DepositCryptoAddress';\nimport DepositCryptoCurrencyDetails from './components/DepositCryptoCurrencyDetails/DepositCryptoCurrencyDetails';\nimport DepositCryptoDisclaimers from './components/DepositCryptoDisclaimers/DepositCryptoDisclaimers';\nimport DepositCryptoTryFiatOnRamp from './components/DepositCryptoTryFiatOnRamp/DepositCryptoTryFiatOnRamp';\nimport './DepositCrypto.scss';\n\nconst DepositCrypto = () => {\n    return (\n        <div className='wallets-deposit-crypto'>\n            <div className='wallets-deposit-crypto__main-content'>\n                <DepositCryptoCurrencyDetails />\n                <DepositCryptoAddress />\n                <DepositCryptoDisclaimers />\n                <Divider />\n                <DepositCryptoTryFiatOnRamp />\n            </div>\n            <TransactionStatus transactionType='deposit' />\n        </div>\n    );\n};\n\nexport default DepositCrypto;\n","import React, { useEffect, useState } from 'react';\nimport { useAuthorize, useCashierFiatAddress } from '@deriv/api';\nimport { Loader, WalletsErrorScreen } from '../../../../components';\nimport { isServerError } from '../../../../utils/utils';\nimport './DepositFiat.scss';\n\nconst DepositFiat = () => {\n    const { isSuccess: isAuthorizeSuccess } = useAuthorize();\n    const { data: iframeUrl, error: depositError, isError, mutate } = useCashierFiatAddress();\n    const [isLoading, setIsLoading] = useState(true);\n\n    useEffect(() => {\n        setIsLoading(true);\n    }, [iframeUrl]);\n\n    useEffect(() => {\n        if (isAuthorizeSuccess) {\n            mutate('deposit');\n        }\n    }, [isAuthorizeSuccess, mutate]);\n\n    if (isError && isServerError(depositError.error))\n        return <WalletsErrorScreen message={depositError.error.message} />;\n\n    return (\n        <React.Fragment>\n            {isLoading && <Loader />}\n            {iframeUrl && (\n                <iframe\n                    className='wallets-deposit-fiat__iframe'\n                    key={iframeUrl}\n                    onLoad={() => setIsLoading(false)}\n                    src={iframeUrl}\n                    style={{ display: isLoading ? 'none' : 'block' }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default DepositFiat;\n","type TServerError = {\n    code: string;\n    details?: { [key: string]: string };\n    fields?: string[];\n    message: string;\n};\n\nexport const isServerError = (error: unknown): error is TServerError =>\n    typeof error === 'object' && error !== null && 'code' in error;\n","import React, { ComponentProps, PropsWithChildren, ReactNode, isValidElement } from 'react';\nimport classNames from 'classnames';\nimport WalletButton from '../Base/WalletButton/WalletButton';\nimport WalletText from '../Base/WalletText/WalletText';\nimport './WalletsActionScreen.scss';\n\ntype TProps = {\n    actionText?: ReactNode;\n    actionVariant?: ComponentProps<typeof WalletButton>['variant'];\n    description: ReactNode;\n    disabled?: boolean;\n    icon?: ReactNode;\n    onAction?: () => void;\n    title?: string;\n    type?: 'modal' | 'page';\n};\n\n/**\n * Generic component to display status / action screen / final screen\n * As its common and repeated in many places,\n * at the moment of writing this, there are already 3 different patterns use to display ex\n *\n * @param icon\n * @param title\n * @param description\n * @param actionText\n * @param onAction\n * @constructor\n */\nconst WalletsActionScreen: React.FC<PropsWithChildren<TProps>> = ({\n    actionText,\n    actionVariant = 'contained',\n    description,\n    disabled = false,\n    icon,\n    onAction,\n    title,\n    type = 'page',\n}) => {\n    return (\n        <div\n            className={classNames('wallets-action-screen', {\n                'wallets-action-screen__modal': type === 'modal',\n            })}\n        >\n            {icon}\n            <div className='wallets-action-screen__content'>\n                {title && (\n                    <WalletText align='center' size='md' weight='bold'>\n                        {title}\n                    </WalletText>\n                )}\n                {isValidElement(description) ? (\n                    description\n                ) : (\n                    <WalletText align='center' size='md'>\n                        {description}\n                    </WalletText>\n                )}\n            </div>\n            {actionText && (\n                <WalletButton\n                    color='primary'\n                    disabled={disabled}\n                    onClick={onAction}\n                    size='lg'\n                    text={actionText}\n                    variant={actionVariant}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default WalletsActionScreen;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"128\" height=\"128\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"#fff\" d=\"M0 0h128v128H0z\" /><g clipPath=\"url(#a)\"><path d=\"M85.69 29.914h-9.296l4.87-16.822H23.936c-5.977 0-10.846 4.87-10.846 10.846v61.755c0 3.762 3.099 6.861 6.861 6.861h65.74c3.763 0 6.861-3.099 6.861-6.861V36.776c0-3.763-3.099-6.862-6.861-6.862zM23.937 17.74h51.13l-1.107 3.763H23.714a2.456 2.456 0 00-2.434 2.435 2.456 2.456 0 002.434 2.434h49.139l-1.107 3.763H25.928c-5.091 0-8.19-2.434-8.19-5.976 0-3.763 2.656-6.419 6.198-6.419z\" fill=\"#85ACB0\" /><path d=\"M39.873 56.916H26.371v5.09h13.502v-5.09zm20.805 0H47.176v5.09h13.502v-5.09zm18.594 0H65.769v5.09h13.502v-5.09zm-33.201 6.865h-5.09v5.091h5.09v-5.09z\" fill=\"#fff\" /><path d=\"M87.862 114.909c14.937 0 27.045-12.108 27.045-27.045 0-14.937-12.108-27.046-27.045-27.046-14.937 0-27.046 12.109-27.046 27.046s12.11 27.045 27.046 27.045z\" fill=\"#FF444F\" style={{\n      mixBlendMode: \"multiply\"\n    }} /><path d=\"M100.258 74.117l4.508-4.508H92.145v12.622l4.733-4.733c2.704 2.479 4.282 6.085 4.282 9.916 0 6.987-5.184 12.622-11.945 13.523v4.958c9.466-.901 16.903-8.79 16.903-18.48 0-4.959-2.028-9.917-5.86-13.298zM69.606 88.092c0 5.183 2.028 9.916 5.86 13.522l-4.508 4.508h12.621V93.501l-4.733 4.733c-2.705-2.48-4.282-6.086-4.282-9.917 0-6.987 5.184-12.621 11.945-13.523v-4.958c-9.24.676-16.903 8.564-16.903 18.256z\" fill=\"#fff\" /></g><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M13.09 13.092h101.818V114.91H13.09z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"128\" height=\"128\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"#fff\" d=\"M0 0h128v128H0z\" /><g clipPath=\"url(#a)\"><path d=\"M85.69 29.914h-9.296l4.87-16.822H23.936c-5.977 0-10.846 4.87-10.846 10.846v61.755c0 3.762 3.099 6.861 6.861 6.861h65.74c3.763 0 6.861-3.099 6.861-6.861V36.776c0-3.763-3.099-6.862-6.861-6.862zM23.937 17.74h51.13l-1.107 3.763H23.714a2.456 2.456 0 00-2.434 2.435 2.456 2.456 0 002.434 2.434h49.139l-1.107 3.763H25.928c-5.091 0-8.19-2.434-8.19-5.976 0-3.763 2.656-6.419 6.198-6.419z\" fill=\"#85ACB0\" /><path d=\"M39.873 56.916H26.371v5.09h13.502v-5.09zm20.805 0H47.176v5.09h13.502v-5.09zm18.594 0H65.769v5.09h13.502v-5.09zm-33.201 6.865h-5.09v5.091h5.09v-5.09z\" fill=\"#fff\" /><path d=\"M88.378 114.941c14.669 0 26.561-11.892 26.561-26.561 0-14.67-11.892-26.562-26.561-26.562-14.67 0-26.562 11.892-26.562 26.562 0 14.669 11.892 26.561 26.562 26.561z\" fill=\"#FF444F\" style={{\n      mixBlendMode: \"multiply\"\n    }} /><path d=\"M84.615 99.005l-9.517-9.518 3.984-4.205 5.533 5.533 13.06-13.06 3.984 4.206-17.044 17.044z\" fill=\"#fff\" /></g><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M13.09 13.092h101.818V114.91H13.09z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useMutation } from '@deriv/api';\nimport WalletsActionScreen from '../../../../components/WalletsActionScreen/WalletsActionScreen';\nimport IcResetDemoBalance from '../../../../public/images/ic-demo-reset-balance.svg';\nimport IcResetDemoBalanceDone from '../../../../public/images/ic-demo-reset-balance-done.svg';\nimport './ResetBalance.scss';\n\nconst ResetBalance = () => {\n    const history = useHistory();\n    const { isSuccess: isResetBalanceSuccess, mutate } = useMutation('topup_virtual');\n\n    const resetBalance = () => {\n        mutate();\n    };\n    return (\n        <div className='wallets-reset-balance'>\n            <WalletsActionScreen\n                actionText={isResetBalanceSuccess ? 'Transfer funds' : 'Reset balance'}\n                description={\n                    isResetBalanceSuccess\n                        ? 'Your balance has been reset to 10,000.00 USD.'\n                        : 'Reset your virtual balance to 10,000.00 USD.'\n                }\n                icon={isResetBalanceSuccess ? <IcResetDemoBalanceDone /> : <IcResetDemoBalance />}\n                onAction={isResetBalanceSuccess ? () => history.push(`/wallets/cashier/transfer`) : resetBalance}\n                title={isResetBalanceSuccess ? 'Success' : 'Reset balance'}\n            />\n        </div>\n    );\n};\n\nexport default ResetBalance;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"none\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4 8a.5.5 0 01.5-.5h7a.5.5 0 010 1h-7A.5.5 0 014 8zM2 5a.5.5 0 01.5-.5h11a.5.5 0 010 1h-11A.5.5 0 012 5zM6 11a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3A.5.5 0 016 11z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.58 10.172h6.825c.163 0 .313.086.394.225l1.989 3.414c.103.177.072.4-.075.544L8.24 19.697a.46.46 0 01-.64 0l-5.465-5.335a.445.445 0 01-.068-.555l2.125-3.42a.456.456 0 01.388-.215zm5.944 1.524v.958H8.58v.664c1.365.07 2.39.362 2.397.712v.728c-.008.35-1.032.64-2.397.712v1.63H7.289v-1.63c-1.366-.071-2.39-.363-2.397-.712v-.728c.007-.35 1.031-.641 2.397-.712v-.664H5.345v-.958h5.179zm-2.59 3.273c1.457 0 2.675-.246 2.973-.575-.252-.28-1.167-.499-2.327-.56v.696a12.472 12.472 0 01-1.291 0v-.695c-1.16.06-2.075.28-2.328.559.298.329 1.516.575 2.973.575z\" fill=\"#009393\" /><path d=\"M16.452 12.024l1.577-.175v1.512h1.37v1.314h-1.38v2.038c0 .482.204.723.613.723.263 0 .482-.044.657-.131l.361 1.314c-.357.14-.737.22-1.139.241-.635.03-1.14-.12-1.512-.449-.365-.336-.547-.902-.547-1.698v-2.038h-.965v-1.314h.965v-1.337zM25.303 16.549h-3.977c.044.277.194.507.45.69.255.175.595.263 1.018.263.606 0 1.074-.142 1.402-.427l.888.986c-.54.533-1.315.8-2.323.8-.964 0-1.712-.26-2.246-.779-.526-.518-.788-1.22-.788-2.103 0-.832.259-1.504.777-2.016.519-.518 1.216-.777 2.093-.777.957 0 1.687.292 2.19.876.512.584.684 1.413.516 2.487zm-3.977-1.15h2.564a.746.746 0 00-.395-.636c-.248-.153-.548-.23-.898-.23a1.41 1.41 0 00-.81.23c-.227.153-.38.365-.46.636zM26.618 12.024l1.578-.175v1.512h1.369v1.314h-1.38v2.038c0 .482.204.723.613.723.263 0 .482-.044.657-.131l.362 1.314c-.358.14-.738.22-1.14.241-.635.03-1.139-.12-1.511-.449-.365-.336-.548-.902-.548-1.698v-2.038h-.964v-1.314h.964v-1.337zM30.408 11.071h1.589v2.925c.387-.504.935-.756 1.643-.756 1.439 0 2.158.866 2.158 2.597v2.903h-1.577v-2.892c0-.373-.095-.661-.285-.866-.183-.204-.43-.306-.745-.306-.343 0-.632.116-.865.35-.227.234-.34.559-.34.975v2.739h-1.578V11.07zM41.985 16.549H38.01c.044.277.193.507.449.69.255.175.595.263 1.019.263.606 0 1.073-.142 1.402-.427l.888.986c-.541.533-1.315.8-2.323.8-.964 0-1.713-.26-2.246-.779-.526-.518-.789-1.22-.789-2.103 0-.832.26-1.504.778-2.016.519-.518 1.216-.777 2.093-.777.956 0 1.687.292 2.19.876.512.584.683 1.413.515 2.487zm-3.976-1.15h2.563a.746.746 0 00-.394-.636c-.248-.153-.548-.23-.898-.23-.315 0-.585.077-.811.23-.227.153-.38.365-.46.636zM42.64 13.339h1.468l.12.591c.344-.482.825-.723 1.446-.723.511 0 .953.165 1.326.493l-.657 1.25a1.452 1.452 0 00-.866-.274c-.358 0-.657.113-.898.34-.241.218-.362.521-.362.908v2.816H42.64v-5.401z\" fill=\"#009393\" /></svg>);","import React from 'react';\nimport useDevice from '../../hooks/useDevice';\nimport Bitcoin from '../../public/images/bitcoin.svg';\nimport Demo from '../../public/images/demo.svg';\nimport ETH from '../../public/images/eth.svg';\nimport EUR from '../../public/images/eur.svg';\nimport Tether from '../../public/images/eusdt.svg';\nimport GBP from '../../public/images/gbp.svg';\nimport LTC from '../../public/images/ltc.svg';\nimport USD from '../../public/images/usd.svg';\nimport USDC from '../../public/images/usdc.svg';\nimport { TGenericSizes } from '../../types';\n\nconst typeToIconMapper = {\n    BTC: Bitcoin,\n    Demo,\n    ETH,\n    EUR,\n    eUSDT: Tether,\n    GBP,\n    LTC,\n    tUSDT: Tether,\n    USD,\n    USDC,\n    UST: Tether,\n};\n\nconst typeToWidthMapper = {\n    rectangleIcon: {\n        lg: { desktop: 90, mobile: 45 },\n        md: { desktop: 72, mobile: 36 },\n        sm: { desktop: 60, mobile: 60 },\n        xl: { desktop: 120, mobile: 80 },\n    },\n    roundedIcon: {\n        lg: { desktop: 48, mobile: 32 },\n        md: { desktop: 24, mobile: 24 },\n        sm: { desktop: 16, mobile: 16 },\n        xl: { desktop: 56, mobile: 48 },\n    },\n};\n\nconst typesWithRoundedIcon = ['EUR', 'GBP', 'USD'];\n\ntype TProps = {\n    size?: Extract<TGenericSizes, 'lg' | 'md' | 'sm' | 'xl'>;\n    type: Omit<string, keyof typeof typeToIconMapper> | keyof typeof typeToIconMapper;\n};\n\nconst WalletCardIcon: React.FC<TProps> = ({ size = 'lg', type }) => {\n    const { isMobile } = useDevice();\n\n    let iconType = type as keyof typeof typeToIconMapper;\n\n    if (!Object.keys(typeToIconMapper).includes(iconType)) iconType = 'USD';\n\n    const Icon = typeToIconMapper[iconType];\n    const isRoundedIcon = typesWithRoundedIcon.includes(iconType);\n    const width =\n        typeToWidthMapper[isRoundedIcon ? 'roundedIcon' : 'rectangleIcon'][size][isMobile ? 'mobile' : 'desktop'];\n\n    if (!Icon) return null;\n\n    return <Icon width={width} />;\n};\n\nexport default WalletCardIcon;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M33.06 13.647a2.68 2.68 0 011.215.265l-.428.992a4.202 4.202 0 00-.348-.123 1.492 1.492 0 00-.44-.056c-.414 0-.74.145-.984.436-.243.29-.365.681-.365 1.172 0 .29.061.526.185.705.122.18.35.27.678.27a2.23 2.23 0 00.872-.18l.092 1.018a4.43 4.43 0 01-.519.167c-.19.047-.416.072-.68.072-.346 0-.639-.052-.879-.153a1.68 1.68 0 01-.594-.416 1.575 1.575 0 01-.34-.611 2.56 2.56 0 01-.104-.736c0-.387.06-.752.184-1.095.122-.342.299-.641.528-.898.228-.255.506-.458.833-.607.326-.148.69-.222 1.093-.222zM22.88 11.629l-.519 2.206c.111-.051.223-.09.335-.12.112-.028.232-.043.36-.043.268 0 .5.05.695.146.196.097.358.228.487.393.128.166.223.36.285.582a2.7 2.7 0 01.091.719c0 .393-.07.765-.213 1.115-.143.351-.336.656-.582.916-.246.26-.537.464-.872.615-.334.151-.697.227-1.088.227l-.265-.004a3.681 3.681 0 01-.43-.039 4.747 4.747 0 01-.516-.103 2.54 2.54 0 01-.515-.188l1.45-6.217 1.297-.205zm13.783 2.018c.29 0 .546.046.767.137.22.091.402.22.545.385.142.166.25.36.322.586.073.224.109.474.109.748 0 .341-.053.684-.159 1.026-.105.342-.263.65-.47.924a2.468 2.468 0 01-.774.67c-.31.174-.669.262-1.077.262-.296 0-.552-.046-.77-.137a1.425 1.425 0 01-.54-.385 1.669 1.669 0 01-.323-.586 2.396 2.396 0 01-.108-.747c0-.343.054-.686.162-1.027.11-.342.27-.65.483-.923.21-.274.471-.498.778-.673.307-.173.66-.26 1.055-.26zm-7.262-1.205l-.318 1.325h1.39l-.25 1.043H28.84l-.368 1.574a1.806 1.806 0 00-.059.367.685.685 0 00.042.296.371.371 0 00.18.192c.086.045.21.068.372.068.134 0 .264-.012.39-.038.126-.025.253-.061.381-.107l.093.975c-.168.063-.35.117-.545.162a3.067 3.067 0 01-.696.069c-.385 0-.683-.059-.896-.175a1.006 1.006 0 01-.453-.48 1.542 1.542 0 01-.116-.696c.01-.263.05-.539.116-.83l.822-3.54 1.298-.205zm-2.385 1.325l-1.055 4.498h-1.24l1.047-4.498h1.248zm13.796 0l-1.055 4.498h-1.241l1.047-4.498h1.25zm2.669-.103c.654 0 1.104.194 1.353.582.249.387.292.918.13 1.59l-.57 2.43h-1.248l.553-2.378c.033-.15.06-.292.08-.433.02-.139.018-.261-.005-.367a.44.44 0 00-.154-.257c-.082-.065-.206-.098-.373-.098-.162 0-.327.018-.494.052l-.813 3.48h-1.249l1.014-4.293c.094-.028.2-.062.314-.098a4.46 4.46 0 01.863-.18c.176-.02.376-.03.599-.03zm-20.735 1.069c-.078 0-.18.015-.305.043a.751.751 0 00-.34.18l-.552 2.342.088.018a.75.75 0 00.18.017h.15c.196 0 .38-.049.553-.145.173-.096.323-.227.449-.39a1.98 1.98 0 00.406-1.193c0-.274-.045-.487-.134-.641-.09-.154-.254-.231-.494-.231zm13.8-.008a.771.771 0 00-.485.162c-.14.109-.257.245-.352.41a2.066 2.066 0 00-.215.544c-.046.197-.07.383-.07.56 0 .285.045.508.134.668.09.158.251.238.486.238a.767.767 0 00.486-.162 1.4 1.4 0 00.352-.41c.095-.166.166-.347.214-.544a2.42 2.42 0 00.07-.56c0-.284-.044-.507-.134-.667-.09-.16-.251-.24-.486-.24zm-9.797-3.011c.173 0 .329.053.468.158.14.106.21.267.21.483a.81.81 0 01-.072.338.891.891 0 01-.46.458.802.802 0 01-.8-.09c-.14-.105-.21-.266-.21-.483a.81.81 0 01.072-.338.898.898 0 01.46-.458.81.81 0 01.332-.068zm13.795 0a.76.76 0 01.47.158c.139.106.21.267.21.483 0 .12-.026.233-.072.338a.89.89 0 01-.46.458.804.804 0 01-.8-.09c-.14-.105-.21-.266-.21-.483a.81.81 0 01.071-.338.887.887 0 01.46-.458.809.809 0 01.331-.068z\" fill=\"#4D4D4D\" /><circle cx=\"11\" cy=\"15\" r=\"6.75\" fill=\"#F7931B\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.401 11.821l.298-1.217.726.184-.292 1.193c.195.046.391.093.582.14l.29-1.185.725.184-.297 1.219c.917.322 1.588.805 1.455 1.704-.095.658-.452.977-.926 1.088.65.347.982.878.667 1.8-.392 1.142-1.323 1.239-2.561.998l-.301 1.23-.726-.184.296-1.213c-.187-.048-.38-.099-.579-.154l-.297 1.219-.725-.185.3-1.232c-.487-.126-.974-.252-1.462-.376l.36-.849s.535.145.528.135c.206.052.297-.086.333-.177l.814-3.335c.01-.158-.043-.357-.338-.432.012-.008-.527-.133-.527-.133l.193-.792c.488.124.974.256 1.464.37zm.168 3.305l-.176-.042-.398 1.632.141.037c.592.16 1.888.51 2.094-.335.21-.864-1.05-1.152-1.661-1.292zm.517-2.234a6.08 6.08 0 01-.148-.034l-.362 1.48c.034.008.075.02.12.032.495.134 1.57.426 1.758-.34.192-.786-.857-1.022-1.368-1.138z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M6.677 11.38l-.391 2.218H4.928c-1.266 0-2.474 1.026-2.697 2.293l-.095.539c-.223 1.266.622 2.293 1.889 2.293h1.132c.923 0 1.803-.748 1.965-1.67l1.043-5.912-1.488.239zm-.963 5.463c-.05.285-.307.517-.592.517h-.688c-.57 0-.95-.462-.85-1.032l.059-.336c.101-.57.644-1.033 1.214-1.033h1.189l-.332 1.884zm11.419 1.88l.89-5.054h1.41l-.891 5.053h-1.41zm.152-4.996l-.212 1.202a3.59 3.59 0 00-1.568-.099l-.686 3.894h-1.41l.845-4.794a4.767 4.767 0 013.031-.203zm-5.713-.13h-1.097c-1.07 0-2.088.866-2.276 1.935l-.222 1.256c-.188 1.069.524 1.935 1.593 1.935h2.334l.239-1.358H9.95c-.356 0-.594-.289-.53-.646l.007-.043h3.535l.202-1.144c.188-1.07-.525-1.935-1.593-1.935zm.178 1.827l-.009.072H9.64l.011-.064c.064-.356.389-.67.746-.67h.82c.354 0 .592.309.534.662zm13.181-1.755c-.48 1.277-1.581 3.45-2.648 5.053h-1.41c-.49-1.526-.806-3.654-.866-5.054h1.41c.026.457.23 2.15.464 3.334a45.816 45.816 0 001.639-3.333h1.411z\" fill=\"#FF444F\" /><path d=\"M28.878 17.721a2.733 2.733 0 00.233.943l-.79.117a2.118 2.118 0 01-.197-.516c-.134.13-.317.26-.55.39-.231.129-.522.194-.872.194-.285 0-.534-.044-.746-.132a1.462 1.462 0 01-.539-.374 1.687 1.687 0 01-.336-.578 2.707 2.707 0 01-.143-.734c-.026-.434.02-.858.14-1.273.12-.415.315-.784.584-1.108a2.94 2.94 0 011.035-.783c.422-.197.921-.296 1.498-.296a2.411 2.411 0 01.44.039l.404-2.275.933-.155-1.02 5.686c-.024.149-.044.291-.061.428a2.257 2.257 0 00-.013.427zm-2.038.36c.272 0 .5-.057.684-.17.184-.114.343-.245.476-.394a4.554 4.554 0 01.063-.729l.433-2.43a1.187 1.187 0 00-.196-.024 4.585 4.585 0 00-.204-.005c-.37 0-.699.071-.988.214-.29.143-.532.334-.728.573-.195.24-.34.517-.434.831-.095.315-.131.643-.11.987.01.149.034.291.075.427.04.137.1.258.178.365a.86.86 0 00.303.258.955.955 0 00.448.097zM32.029 18.849c-.33 0-.619-.048-.864-.141a1.842 1.842 0 01-.627-.39 1.692 1.692 0 01-.395-.577 2.162 2.162 0 01-.16-.7 4.15 4.15 0 01.123-1.312c.11-.421.282-.794.515-1.118.233-.324.525-.582.876-.773a2.505 2.505 0 011.217-.286c.265 0 .495.034.691.102.195.068.356.16.484.277.127.116.224.25.292.403.067.152.106.31.116.471.019.305-.02.563-.118.773-.097.21-.232.387-.404.53a1.864 1.864 0 01-.617.33 5.37 5.37 0 01-.746.185c-.26.045-.524.076-.792.092l-.76.044a1.035 1.035 0 00.003.204c.009.15.035.29.08.423.043.133.117.25.22.35.103.1.243.18.418.238.175.058.402.087.681.087.123 0 .25-.01.382-.034a3.1 3.1 0 00.373-.087c.118-.036.223-.071.315-.107a.68.68 0 00.193-.102l.125.768a3 3 0 01-.613.228c-.284.081-.62.122-1.008.122zm-1.095-2.78c.375-.013.717-.037 1.026-.073.309-.036.574-.097.795-.185.222-.087.391-.205.508-.354.117-.15.169-.344.154-.584a.587.587 0 00-.046-.184.522.522 0 00-.127-.18.675.675 0 00-.237-.136c-.1-.036-.22-.054-.363-.054-.227 0-.436.049-.627.146-.192.097-.36.225-.507.384a2.134 2.134 0 00-.364.554c-.097.21-.168.432-.212.666zM40.13 13.561c.285 0 .529.044.732.131a1.359 1.359 0 01.788.875c.064.198.102.407.116.627.009.143.007.296-.006.462a4.43 4.43 0 01-.062.48l-.463 2.586h-.904l.426-2.39c.023-.15.05-.317.081-.501.03-.185.04-.368.03-.55a1.52 1.52 0 00-.067-.36.828.828 0 00-.164-.3.785.785 0 00-.3-.205 1.218 1.218 0 00-.46-.077c-.208 0-.406.04-.596.121-.19.081-.346.164-.47.248.018.09.035.18.05.267.015.088.025.174.03.258.01.15.007.3-.006.452a6.815 6.815 0 01-.055.452l-.463 2.585h-.903l.426-2.39.076-.506c.027-.188.035-.376.023-.564a1.63 1.63 0 00-.06-.355.86.86 0 00-.15-.296.693.693 0 00-.26-.2.976.976 0 00-.403-.072c-.162 0-.319.01-.47.029-.15.02-.277.045-.379.078l-.767 4.276h-.904l.868-4.86c.286-.09.6-.163.944-.218.343-.055.65-.083.923-.083.272 0 .505.047.698.141.194.094.35.219.47.374.062-.045.148-.097.258-.155a3 3 0 01.379-.165c.142-.052.298-.098.468-.136.169-.04.344-.059.526-.059zM44.294 18.849c-.531 0-.957-.157-1.278-.472-.32-.314-.498-.746-.532-1.297a4.66 4.66 0 01.088-1.186c.081-.415.228-.797.44-1.147.211-.35.495-.638.85-.865.356-.227.796-.34 1.32-.34.532 0 .958.157 1.279.471.32.315.498.747.531 1.298a4.66 4.66 0 01-.087 1.186 3.498 3.498 0 01-.44 1.146c-.212.35-.495.639-.85.865-.356.227-.796.34-1.32.34zm.108-.768c.292 0 .548-.084.767-.253.22-.168.401-.384.544-.646.142-.263.246-.553.31-.87.065-.318.088-.626.07-.924-.02-.33-.108-.592-.262-.787-.155-.194-.407-.292-.757-.292-.291 0-.547.085-.767.253-.22.169-.4.384-.543.647a3.103 3.103 0 00-.31.87 3.521 3.521 0 00-.07.923c.02.33.107.593.262.787.154.195.407.292.756.292z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M2.75 14.812l3.458 2.046V9.071L2.75 14.811z\" fill=\"#828CAD\" /><path d=\"M6.208 9.07v7.788l3.463-2.046L6.208 9.07z\" fill=\"#63688E\" /><path d=\"M2.75 15.47l3.458 4.876v-2.834L2.75 15.471z\" fill=\"#8A93B3\" /><path d=\"M6.208 17.512v2.834l3.463-4.875-3.463 2.041z\" fill=\"#63688E\" /><path opacity=\".6\" d=\"M6.208 13.242L2.75 14.813l3.458 2.046V13.243z\" fill=\"#63688E\" /><path opacity=\".6\" d=\"M6.208 13.242v3.617l3.463-2.046-3.463-1.57z\" fill=\"#474A75\" /><path d=\"M20.563 11.156c.155 0 .28.126.28.281v2.723a1.594 1.594 0 012.625 1.215v1.688a.281.281 0 01-.562 0v-1.688a1.031 1.031 0 00-2.062 0v1.688a.281.281 0 01-.563 0v-5.625c0-.156.126-.282.282-.282zM42.125 13.781c-.393 0-.753.143-1.031.379v-.098a.281.281 0 00-.563 0v3a.281.281 0 10.563 0v-1.687a1.031 1.031 0 012.062 0v1.688a.281.281 0 10.563 0v-1.688a1.031 1.031 0 012.062 0v1.688a.281.281 0 10.563 0v-1.688a1.594 1.594 0 00-2.907-.904 1.592 1.592 0 00-1.312-.69zM36.781 14.063a.281.281 0 00-.562 0v1.687a1.594 1.594 0 002.625 1.215v.098a.281.281 0 10.562 0v-3a.281.281 0 00-.562 0v1.687a1.031 1.031 0 01-2.063 0v-1.688zM29.281 14.063v3a.281.281 0 10.563 0v-1.847l.002-.012a1.358 1.358 0 01.184-.423c.148-.221.396-.437.845-.437a.281.281 0 000-.563c-.457 0-.792.159-1.031.367v-.085a.281.281 0 00-.563 0zM18.219 12.938a.281.281 0 00-.563 0v.843H17a.281.281 0 000 .563h.656v2.719a.281.281 0 00.563 0v-2.72h.656a.281.281 0 000-.562h-.656v-.844z\" fill=\"#63688E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.095 13.804a1.78 1.78 0 101.15 2.817.281.281 0 10-.452-.334 1.219 1.219 0 01-2.166-.443h2.685a.281.281 0 00.282-.281 1.781 1.781 0 00-1.5-1.76zm.903 1.477h-2.371a1.218 1.218 0 012.372 0zM25.637 14.04a1.78 1.78 0 012.707 1.523v.28h-2.967a1.22 1.22 0 002.166.443.281.281 0 11.452.335 1.781 1.781 0 11-2.358-2.58zm-.26 1.241h2.371a1.221 1.221 0 00-1.82-.76 1.218 1.218 0 00-.551.76zM33.97 13.804a1.78 1.78 0 101.15 2.817.281.281 0 10-.452-.334 1.219 1.219 0 01-2.166-.443h2.967v-.281a1.781 1.781 0 00-1.5-1.76zm.903 1.477h-2.371a1.218 1.218 0 012.372 0z\" fill=\"#63688E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#283991\" /><path d=\"M16.863 3.976l-.39-1.2-.39 1.2h-1.264l1.022.743-.39 1.2 1.022-.742 1.021.743-.39-1.201 1.022-.743h-1.263zM16.863 26.65l-.39-1.202-.39 1.202h-1.264l1.022.742-.39 1.2 1.022-.741 1.021.742-.39-1.201 1.022-.742h-1.263zM22.695 4.785l.39 1.201h1.263l-1.022.743.39 1.2-1.02-.742-1.023.743.39-1.201-1.021-.743h1.263l.39-1.201zM27.33 10.175l-.39-1.201-.39 1.2h-1.263l1.022.743-.39 1.201 1.022-.742 1.021.742-.39-1.201 1.022-.742H27.33zM27.042 19.556l.39 1.202h1.263l-1.022.742.39 1.2-1.021-.741-1.022.742.39-1.2-1.022-.743h1.263l.39-1.202zM6.548 10.175l-.39-1.201-.39 1.2H4.505l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.201 1.021-.742H6.548zM27.925 14.02l.39 1.202h1.263l-1.022.742.39 1.201-1.021-.742-1.022.742.39-1.201-1.022-.742h1.263l.39-1.201zM5.583 15.222l-.39-1.201-.39 1.2H3.54l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.201 1.021-.742H5.583zM6.021 19.556l.39 1.202h1.263l-1.021.742.39 1.2-1.022-.741L5 22.7l.39-1.2-1.021-.743H5.63l.39-1.202zM23.268 25.125l-.39-1.201-.39 1.2h-1.263l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.2 1.021-.743h-1.263zM10.452 4.785l.39 1.201h1.263l-1.022.743.39 1.2-1.021-.742-1.022.743.39-1.201-1.022-.743h1.263l.39-1.201zM10.381 25.048l-.39-1.201-.39 1.201H8.336l1.022.742-.39 1.201 1.022-.741 1.022.741-.39-1.2 1.021-.743h-1.263z\" fill=\"#F8D12E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#fff\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.674.55c2.047.553 3.932 1.5 5.567 2.757l-5.567 5.567V.551zM1.051 11.827a15.942 15.942 0 012.757-5.568l5.567 5.568H1.05zm28.142-5.567a15.944 15.944 0 012.756 5.567h-8.324l5.568-5.567zM1.05 20.174a15.944 15.944 0 002.757 5.567l5.567-5.567H1.05zm5.708 8.518a15.944 15.944 0 005.567 2.756v-8.323L6.76 28.692zm0-25.385A15.943 15.943 0 0112.326.551v8.323L6.76 3.307zm13.915 28.141a15.944 15.944 0 005.567-2.756l-5.567-5.567v8.323zm8.519-5.707l-5.568-5.567h8.324a15.942 15.942 0 01-2.756 5.567z\" fill=\"#283991\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32.365 13.913H18.587V.135a16.16 16.16 0 00-4.174 0v13.778H.635a16.16 16.16 0 000 4.174h13.778v13.778a16.166 16.166 0 004.174 0V18.087h13.778a16.166 16.166 0 000-4.174zm-11.691 6.26l7.14 7.14c.328-.328.641-.67.94-1.026l-6.112-6.113h-1.968zm-8.348.001v1.967l-6.113 6.113a16.04 16.04 0 01-1.027-.94l7.14-7.14zm.004-8.348l-7.14-7.14c-.328.329-.641.672-.94 1.027l6.113 6.113h1.967zm15.484-7.14l-7.14 7.14V9.86l6.113-6.113c.355.299.698.612 1.027.94z\" fill=\"#F44336\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M11.028 9.75a5.28 5.28 0 100 10.558 5.28 5.28 0 000-10.558zm.085 5.453l-.549 1.853h2.938a.15.15 0 01.12.06.151.151 0 01.024.133l-.256.88a.201.201 0 01-.194.145H8.71l.759-2.562-.84.256.186-.6.84-.255 1.065-3.598a.2.2 0 01.193-.147h1.137a.15.15 0 01.12.06.152.152 0 01.025.132l-.894 3.043.84-.256-.18.61-.848.246z\" fill=\"#A5A8A9\" /><path d=\"M21.062 11.31a.402.402 0 11.08.8.402.402 0 01-.08-.8zM19.031 11.354h.33c.063 0 .102.028.092.102l-.857 6.723a.1.1 0 01-.07.096.099.099 0 01-.043.003h-.327c-.067 0-.089-.035-.081-.099l.845-6.726a.107.107 0 01.035-.073.106.106 0 01.076-.027zM20.749 13.292h.325c.072 0 .094.035.091.101l-.601 4.786a.103.103 0 01-.12.099h-.326c-.061 0-.1-.034-.092-.099l.61-4.789a.101.101 0 01.071-.094.102.102 0 01.042-.004z\" fill=\"#4D4D4E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M35.422 13.213a1.86 1.86 0 00-1.848 1.414 9.71 9.71 0 00-.203 1.157c-.053.383-.083.77-.092 1.156a1.405 1.405 0 00.407 1.022c.266.256.63.383 1.092.383a1.86 1.86 0 001.174-.383c.331-.255.566-.615.664-1.021.092-.381.16-.768.203-1.157.052-.388.082-.777.09-1.168a1.345 1.345 0 00-.402-1.021 1.51 1.51 0 00-1.085-.382zm.923 2.106c-.03.244-.05.4-.056.465-.061.494-.116.847-.163 1.058-.064.302-.23.572-.47.766-.233.19-.526.291-.827.287a.968.968 0 01-1.03-1.022c.003-.205.018-.41.046-.613.03-.244.05-.399.056-.465.061-.474.116-.828.163-1.057.064-.302.23-.572.469-.766.234-.19.527-.29.828-.287a.968.968 0 011.03 1.022 5.048 5.048 0 01-.046.612z\" fill=\"#4D4D4E\" /><path d=\"M38.456 13.292h.326c.064 0 .09.035.081.098l-.601 4.79a.103.103 0 01-.112.098h-.327c-.062 0-.101-.03-.092-.099l.613-4.789a.106.106 0 01.112-.098zM42.912 13.574c-.225-.235-.54-.35-.95-.35a1.746 1.746 0 00-.734.152 1.495 1.495 0 00-.572.46c-.026.026-.04.02-.04-.02l.05-.426c.008-.06-.019-.098-.081-.098h-.326a.105.105 0 00-.077.025.105.105 0 00-.035.073l-.602 4.79c-.007.062.014.098.082.098h.327a.105.105 0 00.112-.099l.438-3.431c.063-.298.22-.567.45-.766.224-.195.512-.3.808-.294a.903.903 0 01.691.277c.179.202.27.466.255.736.002.073-.002.146-.01.218l-.417 3.26a.08.08 0 00.015.07.095.095 0 00.077.029h.325a.105.105 0 00.078-.026.102.102 0 00.035-.073l.419-3.342c.014-.127.02-.23.02-.296a1.331 1.331 0 00-.338-.967zM39.015 11.356a.402.402 0 10-.373.712.402.402 0 00.373-.712zM29.971 13.604c.338-.262.756-.4 1.184-.391.398-.023.789.112 1.087.377a1.34 1.34 0 01.404 1.021v.116a.059.059 0 01-.06.06h-.384a.074.074 0 01-.054-.024.077.077 0 01-.021-.055v-.007a.968.968 0 00-1.032-1.022c-.3-.004-.592.097-.826.286a1.342 1.342 0 00-.464.771c-.048.23-.102.584-.163 1.058-.008.066-.03.262-.056.465a5.069 5.069 0 00-.046.613.966.966 0 001.03 1.021c.3.005.593-.096.827-.286.24-.194.405-.464.47-.766v-.02a.063.063 0 01.062-.047h.402a.047.047 0 01.036.018.046.046 0 01.009.039 4.137 4.137 0 01-.027.108 1.818 1.818 0 01-.663 1.022c-.336.257-.75.392-1.173.383-.462 0-.826-.128-1.092-.383a1.395 1.395 0 01-.409-1.022c.01-.387.04-.773.092-1.157.047-.389.115-.775.205-1.157.099-.405.332-.766.662-1.021z\" fill=\"#4D4D4E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.86 13.599a1.509 1.509 0 00-1.086-.383 1.859 1.859 0 00-1.848 1.413 9.86 9.86 0 00-.203 1.157c-.06.383-.09.77-.092 1.157a1.405 1.405 0 00.407 1.022c.266.255.63.383 1.092.383a1.86 1.86 0 001.174-.383c.332-.255.566-.615.664-1.022l.027-.108a.046.046 0 00-.045-.057h-.406a.064.064 0 00-.063.048v.019a1.342 1.342 0 01-.468.766c-.236.187-.53.286-.83.278a.968.968 0 01-1.031-1.021c.002-.18.015-.358.037-.535l2.949-.913a.12.12 0 00.094-.12c.018-.152.03-.412.032-.677a1.406 1.406 0 00-.404-1.024zm-.116 1.377a.068.068 0 01-.048.063l-2.444.755v-.01c.06-.474.116-.828.163-1.058.064-.301.23-.572.469-.766.234-.189.526-.29.827-.286a1.005 1.005 0 01.748.291c.302.295.303.61.285 1.011z\" fill=\"#4D4D4E\" /><path d=\"M23.557 17.738a.08.08 0 00-.041.01c-.21.098-.61.192-.821.014-.152-.148-.12-.41-.085-.705a4.49 4.49 0 01.005-.036l.357-2.877h1.022a.129.129 0 00.081-.023c.02-.02.031-.048.031-.077l.028-.227c.004-.063-.023-.098-.082-.098h-1.021l.194-1.584c.009-.056-.007-.098-.082-.098h-.315a.1.1 0 00-.078.024.101.101 0 00-.035.074l-.143 1.117-.061.505-.432 3.507c-.053.46.043.83.417 1 .33.122.694.117 1.021-.013a.12.12 0 00.076-.096l.04-.33a.079.079 0 00-.035-.075.08.08 0 00-.04-.012z\" fill=\"#4D4D4E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#fff\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.823 0a15.92 15.92 0 00-8.297 2.903h18.465A15.922 15.922 0 0017.693 0H15.823zM4.398 5.806A15.972 15.972 0 002.5 8.709H31.017a15.957 15.957 0 00-1.898-2.903H4.398zM.566 14.544c.087-.997.267-1.967.53-2.903h30.786c.263.936.443 1.906.53 2.903H.566zm.006 2.904c.093.997.28 1.967.547 2.902h30.74c.268-.935.455-1.905.547-2.902H.572zm3.624 8.708a15.982 15.982 0 01-1.924-2.903H30.706a15.978 15.978 0 01-1.924 2.903H4.196zm11.617 5.789l.048.002.049.002a15.751 15.751 0 009.697-2.889H7.371a15.75 15.75 0 008.44 2.885z\" fill=\"#F44336\" /><path d=\"M16.159.008C7.964.174 1.287 6.5.569 14.548h15.59V.008z\" fill=\"#283991\" /><path d=\"M3.7 9.04l.243.748h.79l-.64.463.245.749-.639-.463-.638.463.244-.749-.639-.463h.79l.243-.748zM3.7 11.684l.243.749h.79l-.64.463.245.749-.639-.463-.638.463.244-.75-.639-.462h.79l.243-.749zM6.35 5.072l.243.75h.79l-.639.462.244.749-.638-.463-.639.463.244-.749-.638-.463h.789l.244-.749zM6.35 7.717l.243.749h.79l-.639.462.244.75-.638-.463-.639.462.244-.749-.638-.462h.789l.244-.749zM6.35 10.362l.243.749h.79l-.639.462.244.75-.638-.464-.639.463.244-.749-.638-.462h.789l.244-.75zM1.687 12.322l-.244-.749.639-.462h-.79l-.017-.055c-.086.267-.165.538-.237.811l.011-.008.638.463zM3.061 8.355l.638-.463.639.463-.244-.749.638-.463h-.79L3.7 6.395l-.244.748h-.29l-.16.247.3.216-.244.75zM6.35 3.925l.638.463-.244-.749.638-.463h-.456c-.387.29-.76.595-1.119.917l-.096.295.639-.463zM8.362 3.066L9 2.603l.638.463-.244-.75.638-.462h-.789l-.033-.1c-.267.136-.532.278-.79.428l.185.135-.243.749zM9 3.75l.244.748h.789l-.639.464.244.749L9 5.247l-.638.464.243-.75-.638-.463h.79L9 3.75zM9 6.395l.244.748h.789l-.639.463.244.75L9 7.891l-.638.463.243-.749-.638-.463h.79L9 6.395zM9 9.04l.244.748h.789l-.639.463.244.749L9 10.537 8.362 11l.243-.749-.638-.463h.79L9 9.04zM9 11.684l.244.749h.789l-.639.463.244.749L9 13.182l-.638.463.243-.75-.638-.462h.79L9 11.684zM11.65 2.428l.244.748h.789l-.638.463.243.749-.638-.463-.638.463.244-.749-.639-.463h.79l.243-.748zM11.65 5.072l.244.75h.789l-.638.462.243.749-.638-.463-.638.463.244-.749-.639-.463h.79l.243-.749zM11.65 7.717l.244.749h.789l-.638.462.243.75-.638-.463-.638.462.244-.749-.639-.462h.79l.243-.749zM11.65 10.362l.244.749h.789l-.638.462.243.75-.638-.464-.638.463.244-.749-.639-.462h.79l.243-.75zM14.3 1.105l.244.75h.79l-.639.462.244.749-.638-.463-.639.463.244-.75-.638-.462h.788l.245-.749zM14.3 3.75l.244.748h.79l-.639.464.244.749-.638-.464-.639.464.244-.75-.638-.463h.788l.245-.748zM14.3 6.395l.244.748h.79l-.639.463.244.75-.638-.464-.639.463.244-.749-.638-.463h.788l.245-.748zM14.3 9.04l.244.748h.79l-.639.463.244.749-.638-.463-.639.463.244-.749-.638-.463h.788l.245-.748zM14.3 11.684l.244.749h.79l-.639.463.244.749-.638-.463-.639.463.244-.75-.638-.462h.788l.245-.749z\" fill=\"#EFEFEF\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M17.812 12.458h.328c.084 0 .151.068.151.151v2.936c0 .928.503 1.514 1.439 1.514.935 0 1.438-.586 1.438-1.513V12.61c0-.084.067-.152.151-.152h.328c.084 0 .152.068.152.151v2.945c0 1.263-.694 2.068-2.07 2.068s-2.068-.813-2.068-2.061V12.61a.149.149 0 01.151-.151zm4.953 4a.134.134 0 01.198-.014c.34.33.848.615 1.492.615.904 0 1.194-.487 1.194-.874 0-.61-.616-.777-1.285-.96-.814-.213-1.72-.44-1.72-1.437 0-.837.746-1.408 1.744-1.408.716 0 1.282.22 1.7.606.06.054.065.148.013.21l-.198.242a.133.133 0 01-.194.012c-.371-.348-.86-.507-1.368-.507-.61 0-1.043.328-1.043.805 0 .51.586.662 1.233.837.828.221 1.771.48 1.771 1.545 0 .737-.502 1.49-1.87 1.49-.82 0-1.436-.289-1.856-.708a.153.153 0 01-.012-.202l.201-.252zm4.289-3.849a.15.15 0 01.15-.15h1.583c1.574 0 2.603 1.102 2.603 2.54 0 1.445-1.027 2.532-2.603 2.532h-1.582a.151.151 0 01-.151-.151v-4.77zm1.735 4.36c1.232 0 1.946-.884 1.946-1.97 0-1.097-.692-1.978-1.947-1.978h-1.102v3.947h1.102zm8.913-1.278c0-1.066.702-1.925 1.819-1.925s1.819.86 1.819 1.925c0 1.066-.702 1.933-1.819 1.933-1.118 0-1.819-.869-1.819-1.932zm3.036 0c0-.745-.433-1.415-1.217-1.415s-1.225.67-1.225 1.415c0 .753.44 1.423 1.225 1.423.784 0 1.216-.67 1.216-1.423zm1.149-2.837c0-.214.175-.38.38-.38.213 0 .388.166.388.38a.39.39 0 01-.388.388.39.39 0 01-.38-.388zm.25 1.003h.266c.083 0 .151.068.151.151v3.372a.151.151 0 01-.15.15h-.267a.151.151 0 01-.152-.15v-3.372c0-.083.069-.15.152-.15zm3.705 1.271c0-.646-.328-.852-.821-.852-.448 0-.875.274-1.089.571v2.533a.151.151 0 01-.151.15h-.266a.151.151 0 01-.151-.15v-3.372c0-.083.067-.15.151-.15h.266c.083 0 .151.067.151.15v.38c.258-.303.761-.622 1.308-.622.769 0 1.172.388 1.172 1.186v2.426a.151.151 0 01-.15.151h-.267a.151.151 0 01-.151-.151v-2.25h-.002zm-13.01-.13c0-1.56 1.148-2.623 2.586-2.623.852 0 1.45.37 1.854.88a.134.134 0 01-.04.2l-.283.156a.151.151 0 01-.191-.036 1.732 1.732 0 00-1.34-.636c-1.088 0-1.932.853-1.932 2.062 0 1.202.844 2.06 1.932 2.06.553 0 1.04-.255 1.339-.634a.153.153 0 01.192-.039l.288.158c.074.04.091.138.038.202-.42.512-1.005.877-1.857.877-1.438-.002-2.587-1.066-2.587-2.626z\" fill=\"#4D4E50\" /><path d=\"M8.75 21a6 6 0 100-12 6 6 0 000 12z\" fill=\"#2775CA\" /><path d=\"M7.625 19.009c0 .14-.11.221-.247.178a4.502 4.502 0 010-8.574c.137-.042.247.038.247.18v.347c0 .095-.072.205-.162.236A3.757 3.757 0 005 14.898a3.757 3.757 0 002.464 3.522c.09.034.162.142.162.236v.353z\" fill=\"#fff\" /><path d=\"M9.124 17.712a.189.189 0 01-.188.189h-.374a.19.19 0 01-.188-.19v-.592c-.819-.11-1.22-.57-1.328-1.193a.175.175 0 01.175-.202h.428c.09 0 .165.063.184.153.08.372.294.657.95.657.485 0 .829-.271.829-.676s-.203-.558-.913-.676c-1.05-.14-1.546-.458-1.546-1.282 0-.635.479-1.129 1.223-1.235v-.581a.19.19 0 01.189-.189h.373a.19.19 0 01.19.189v.597c.604.109.987.452 1.112 1.022a.174.174 0 01-.172.209h-.395a.19.19 0 01-.181-.138c-.106-.363-.364-.518-.814-.518-.496 0-.753.24-.753.576 0 .356.146.534.908.645 1.032.14 1.563.435 1.563 1.313 0 .666-.494 1.204-1.268 1.33v.592h-.004z\" fill=\"#fff\" /><path d=\"M10.122 19.187c-.136.043-.247-.038-.247-.179v-.349c0-.103.064-.2.162-.234a3.758 3.758 0 002.464-3.523 3.759 3.759 0 00-2.463-3.523.27.27 0 01-.163-.235v-.348c0-.141.11-.224.247-.179a4.502 4.502 0 013.13 4.287 4.505 4.505 0 01-3.13 4.283z\" fill=\"#fff\" /></svg>);","import React from 'react';\nimport { THooks } from '../../types';\nimport './WalletGradientBackground.scss';\n\ntype TProps = {\n    bodyClassName?: string;\n    children: React.ReactNode;\n    currency: THooks.WalletAccountsList['wallet_currency_type'];\n    device?: 'desktop' | 'mobile';\n    hasShine?: boolean;\n    isDemo?: THooks.WalletAccountsList['is_virtual'];\n    theme?: 'dark' | 'grey' | 'light';\n    type?: 'card' | 'header';\n};\n\nconst WalletGradientBackground: React.FC<TProps> = ({\n    bodyClassName,\n    children,\n    currency,\n    device = 'desktop',\n    hasShine = false,\n    isDemo = false,\n    theme = 'light',\n    type = 'card',\n}) => {\n    const getClassName = () => {\n        if (isDemo) return `wallets-gradient--demo-${device}-${type}-${theme}`;\n        if (theme !== 'dark' && theme !== 'light') return `wallets-gradient__palette--${theme}`;\n        return `wallets-gradient--${currency}-${device}-${type}-${theme}`;\n    };\n\n    return (\n        <div className={`wallets-gradient ${bodyClassName} ${getClassName()}`}>\n            {hasShine && !isDemo && <span className='wallets-gradient__shine' />}\n            {children}\n        </div>\n    );\n};\n\nexport default WalletGradientBackground;\n","import React from 'react';\nimport { TGenericSizes, THooks } from '../../types';\nimport { WalletCardIcon } from '../WalletCardIcon';\nimport { WalletGradientBackground } from '../WalletGradientBackground';\nimport './WalletCurrencyCard.scss';\n\ntype TProps = {\n    currency: THooks.WalletAccountsList['wallet_currency_type'];\n    isDemo?: THooks.WalletAccountsList['is_virtual'];\n    size?: Extract<TGenericSizes, 'lg' | 'md' | 'sm'>;\n};\n\nconst WalletCurrencyCard: React.FC<TProps> = ({ currency, isDemo, size = 'lg' }: TProps) => {\n    return (\n        <WalletGradientBackground currency={currency} isDemo={isDemo} type='card'>\n            <div className={`wallets-currency-card wallets-currency-card-${size}`}>\n                <WalletCardIcon size={size} type={currency} />\n            </div>\n        </WalletGradientBackground>\n    );\n};\n\nexport default WalletCurrencyCard;\n","import React, { useMemo } from 'react';\nimport { useActiveWalletAccount, useTransactions } from '@deriv/api';\nimport { WalletCurrencyCard } from '../../../../../../components/WalletCurrencyCard';\nimport './TransactionsCompletedRow.scss';\n\ntype TProps = {\n    transaction: NonNullable<ReturnType<typeof useTransactions>['data']>[number];\n};\n\nconst TransactionsCompletedRow: React.FC<TProps> = ({ transaction }) => {\n    const { data } = useActiveWalletAccount();\n    const displayCode = useMemo(() => data?.currency_config?.display_code || 'USD', [data]);\n\n    const formattedAmount = useMemo(() => {\n        if (!transaction?.amount) return;\n\n        if (transaction.amount > 0) {\n            return `+${transaction.amount}`;\n        }\n        return transaction.amount;\n    }, [transaction]);\n\n    return (\n        <div className='wallets-transactions-completed-row'>\n            <div className='wallets-transactions-completed-row__account-details'>\n                <WalletCurrencyCard currency={data?.currency || 'USD'} isDemo={data?.is_virtual} size='md' />\n                <div>\n                    <p className='wallets-transactions-completed-row__account-details__action-type'>\n                        {transaction.action_type}\n                    </p>\n                    <p className='wallets-transactions-completed-row__account-details__wallet-name'>\n                        {displayCode} Wallet\n                    </p>\n                </div>\n            </div>\n            <div className='wallets-transactions-completed-row__transaction-details'>\n                <p\n                    className={`wallets-transactions-completed-row__transaction-details__amount ${\n                        transaction?.amount && transaction.amount < 0\n                            ? 'wallets-transactions-completed-row__transaction-details__amount--negative'\n                            : ''\n                    }`}\n                >\n                    {formattedAmount}\n                </p>\n                <p className='wallets-transactions-completed-row__transaction-details__balance'>\n                    Balance: {transaction.balance_after}\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionsCompletedRow;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_15167_14624)\"><path d=\"M64 128c35.346 0 64-28.654 64-64 0-35.346-28.654-64-64-64C28.654 0 0 28.654 0 64c0 35.346 28.654 64 64 64z\" fill=\"url(#paint0_linear_15167_14624)\" /><path d=\"M105 55c0-11.03-8.97-20-20-20-4.18 0-8.07 1.3-11.28 3.5H50.75L27.25 62v54.38C37.65 123.69 50.32 128 64 128s26.55-4.38 37-11.8V66.94c2.5-3.34 4-7.47 4-11.95V55z\" fill=\"url(#paint1_linear_15167_14624)\" /><path d=\"M104.36 70.82C107.89 66.51 110 61 110 55c0-13.81-11.19-25-25-25S60 41.19 60 55s11.19 25 25 25c6 0 11.51-2.12 15.82-5.64l19.69 19.69a63.4 63.4 0 002.3-4.77l-18.45-18.45v-.01zM85 75c-11.03 0-20-8.97-20-20s8.97-20 20-20 20 8.97 20 20-8.97 20-20 20z\" fill=\"#FF444F\" /><path d=\"M50.75 38.5L27.25 62h19.5c2.21 0 4-1.79 4-4V38.5z\" fill=\"#fff\" /></g><defs><linearGradient id=\"paint0_linear_15167_14624\" x1=\"64\" y1=\"128\" x2=\"64\" y2=\"0\" gradientUnits=\"userSpaceOnUse\"><stop stopColor=\"#85ACB0\" /><stop offset=\"1\" stopColor=\"#B6CDD0\" /></linearGradient><linearGradient id=\"paint1_linear_15167_14624\" x1=\"66.12\" y1=\"35\" x2=\"66.13\" y2=\"128\" gradientUnits=\"userSpaceOnUse\"><stop stopColor=\"#F5F5F5\" /><stop offset=\".37\" stopColor=\"#ECECEC\" /><stop offset=\".96\" stopColor=\"#D3D3D3\" /><stop offset=\"1\" stopColor=\"#D2D2D2\" /></linearGradient><clipPath id=\"clip0_15167_14624\"><path fill=\"#fff\" d=\"M0 0h128v128H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport NoRecentTransactions from '../../../../../../public/images/no-recent-transactions.svg';\nimport './TransactionsNoDataState.scss';\n\nconst TransactionsNoDataState = () => {\n    const history = useHistory();\n\n    return (\n        <div className='wallets-transactions-no-data-state'>\n            <NoRecentTransactions />\n            <p className='wallets-transactions-no-data-state__title'>No recent transactions</p>\n            <p className='wallets-transactions-no-data-state__description'>\n                Make a deposit or transfer funds from your existing trading account(s) or other Wallet(s).\n            </p>\n            <div className='wallets-transactions-no-data-state__buttons'>\n                <button\n                    className='wallets-transactions-no-data-state__buttons__transfer'\n                    onClick={() => history.push('/wallets/cashier/transfer')}\n                >\n                    Transfer funds\n                </button>\n                <button\n                    className='wallets-transactions-no-data-state__buttons__deposit'\n                    onClick={() => history.push('/wallets/cashier/deposit')}\n                >\n                    Deposit funds\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionsNoDataState;\n","import React, { useMemo, useRef } from 'react';\nimport { ColumnDef, getCoreRowModel, getGroupedRowModel, GroupingState, useReactTable } from '@tanstack/react-table';\nimport './TransactionsTable.scss';\n\ntype TProps<T> = {\n    columns: ColumnDef<T>[];\n    data: T[];\n    fetchMore?: (target: HTMLDivElement) => void;\n    groupBy?: GroupingState;\n    rowGroupRender: (data: T) => JSX.Element;\n    rowRender: (data: T) => JSX.Element;\n};\n\nconst TransactionsTable = <T,>({ columns, data, fetchMore, groupBy, rowGroupRender, rowRender }: TProps<T>) => {\n    const table = useReactTable({\n        columns,\n        data,\n        getCoreRowModel: getCoreRowModel<T>(),\n        getGroupedRowModel: getGroupedRowModel<T>(),\n        state: { grouping: useMemo(() => groupBy, [groupBy]) },\n    });\n    const tableContainerRef = useRef<HTMLDivElement>(null);\n\n    return (\n        <div\n            className='wallets-transactions-table'\n            onScroll={e => (fetchMore ? fetchMore(e.target as HTMLDivElement) : null)}\n            ref={tableContainerRef}\n        >\n            <div className='wallets-transactions-table__content'>\n                {table.getRowModel().rows.map(rowGroup => (\n                    <div className='wallets-transactions-table__row' key={rowGroup.id}>\n                        {rowGroupRender(rowGroup.original)}\n                        {rowGroup.subRows.map(row => (\n                            <div key={row.id}>{rowRender(row.original)}</div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionsTable;\n","import React, { useCallback, useEffect } from 'react';\nimport moment from 'moment';\nimport { useTransactions } from '@deriv/api';\nimport { TSocketRequestPayload } from '@deriv/api/types';\nimport { Loader } from '../../../../../../components';\nimport { TransactionsCompletedRow } from '../TransactionsCompletedRow';\nimport { TransactionsNoDataState } from '../TransactionsNoDataState';\nimport { TransactionsTable } from '../TransactionsTable';\nimport './TransactionsCompleted.scss';\n\ntype TFilter = NonNullable<TSocketRequestPayload<'statement'>['payload']>['action_type'];\n\ntype TProps = {\n    filter?: TFilter;\n};\n\nconst TransactionsCompleted: React.FC<TProps> = ({ filter }) => {\n    const { data: transactions, fetchNextPage, isFetching, isLoading, setFilter } = useTransactions();\n\n    const fetchMoreOnBottomReached = useCallback(\n        (containerRefElement?: HTMLDivElement | null) => {\n            if (containerRefElement) {\n                const { clientHeight, scrollHeight, scrollTop } = containerRefElement;\n                //once the user has scrolled within 300px of the bottom of the table, fetch more data if there is any\n                if (scrollHeight - scrollTop - clientHeight < 300 && !isFetching) {\n                    fetchNextPage();\n                }\n            }\n        },\n        [fetchNextPage, isFetching]\n    );\n\n    useEffect(() => {\n        setFilter(filter);\n    }, [filter]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!transactions && (isFetching || isLoading)) return <Loader />;\n\n    if (!transactions) return <TransactionsNoDataState />;\n\n    return (\n        <TransactionsTable\n            columns={[\n                {\n                    accessorFn: row => row.transaction_time && moment.unix(row.transaction_time).format('DD MMM YYYY'),\n                    accessorKey: 'date',\n                    header: 'Date',\n                },\n            ]}\n            data={transactions}\n            fetchMore={fetchMoreOnBottomReached}\n            groupBy={['date']}\n            rowGroupRender={transaction => (\n                <p className='wallets-transactions-completed__group-title'>\n                    {transaction.transaction_time && moment.unix(transaction.transaction_time).format('DD MMM YYYY')}\n                </p>\n            )}\n            rowRender={transaction => <TransactionsCompletedRow transaction={transaction} />}\n        />\n    );\n};\n\nexport default TransactionsCompleted;\n","import React, { useMemo } from 'react';\nimport moment from 'moment';\nimport { useActiveWalletAccount, useCryptoTransactions } from '@deriv/api';\nimport { WalletCurrencyCard } from '../../../../../../components/WalletCurrencyCard';\nimport './TransactionsPendingRow.scss';\n\nconst statusCodeMapper = {\n    deposit: {\n        CONFIRMED: {\n            description: 'Your deposit is successful.',\n            name: 'Successful',\n        },\n        ERROR: {\n            description:\n                'Your deposit is unsuccessful due to an error on the blockchain. Please contact your crypto wallet service provider for more info.',\n            name: 'Unsuccessful',\n        },\n        PENDING: {\n            description: 'We’ve received your request and are waiting for more blockchain confirmations.',\n            name: 'In process',\n        },\n    },\n    withdrawal: {\n        CANCELLED: {\n            description: 'You’ve cancelled your withdrawal request.',\n            name: 'Cancelled',\n        },\n        ERROR: {\n            description:\n                'Your withdrawal is unsuccessful due to an error on the blockchain. Please contact us via live chat for more info.',\n            name: 'Unsuccessful',\n        },\n        LOCKED: {\n            description:\n                \"We're reviewing your withdrawal request. You may still cancel this transaction if you wish. Once we start processing, you won't be able to cancel.\",\n            name: 'In review',\n        },\n        PERFORMING_BLOCKCHAIN_TXN: {\n            description: 'We’re sending your request to the blockchain.',\n            name: 'In process',\n        },\n        PROCESSING: {\n            description: 'We’re awaiting confirmation from the blockchain.',\n            name: 'In process',\n        },\n        REJECTED: {\n            description: \"Your withdrawal is unsuccessful. We've sent you an email with more information.\",\n            name: 'Unsuccessful',\n        },\n        REVERTED: {\n            description: \"Your withdrawal is unsuccessful. We've sent you an email with more information.\",\n            name: 'Unsuccessful',\n        },\n        REVERTING: {\n            description: \"We're processing your withdrawal.\",\n            name: 'In process',\n        },\n        SENT: {\n            description: 'Your withdrawal is successful.',\n            name: 'Successful',\n        },\n        VERIFIED: {\n            description: 'We’re processing your withdrawal.',\n            name: 'In process',\n        },\n    },\n};\n\ntype TProps = {\n    transaction: NonNullable<ReturnType<typeof useCryptoTransactions>['data']>[number];\n};\n\nconst TransactionsCryptoRow: React.FC<TProps> = ({ transaction }) => {\n    const { data } = useActiveWalletAccount();\n    const displayCode = useMemo(() => data?.currency_config?.display_code || 'USD', [data]);\n    const formattedStatus = useMemo(() => {\n        if (transaction.transaction_type === 'deposit') {\n            return statusCodeMapper.deposit[transaction.status_code];\n        } else if (transaction.transaction_type === 'withdrawal') {\n            return statusCodeMapper.withdrawal[transaction.status_code];\n        }\n    }, [transaction]);\n\n    return (\n        <div className='wallets-transactions-pending-row'>\n            <div className='wallets-transactions-pending-row-details'>\n                <WalletCurrencyCard currency={data?.currency || 'USD'} isDemo={data?.is_virtual} size='md' />\n                <div>\n                    <p className='wallets-transactions-pending-row__title'>{transaction.transaction_type}</p>\n                    <p className='wallets-transactions-pending-row-details__wallet-name'>{displayCode} Wallet</p>\n                </div>\n            </div>\n            <div className='wallets-transactions-pending-row__transaction-hash'>\n                <p className='wallets-transactions-pending-row__title'>Transaction hash</p>\n                <p className='wallets-transactions-pending-row__transaction-value'>\n                    {transaction.formatted_transaction_hash}\n                </p>\n            </div>\n            <div className='wallets-transactions-pending-row__transaction-address'>\n                <p className='wallets-transactions-pending-row__title'>Address</p>\n                <p className='wallets-transactions-pending-row__transaction-value'>\n                    {transaction.formatted_address_hash}\n                </p>\n            </div>\n            <div>\n                <p className='wallets-transactions-pending-row__title'>Confirmations</p>\n                <p className='wallets-transactions-pending-row__transaction-value wallets-transactions-pending-row__transaction-value--center'>\n                    {transaction.formatted_confirmations}\n                </p>\n            </div>\n            <div>\n                <p className='wallets-transactions-pending-row__title'>Time</p>\n                <p>{moment.unix(transaction.submit_date).toLocaleString()}</p>\n            </div>\n            <div\n                className={`wallets-transactions-pending-row__transaction-amount ${\n                    transaction.is_deposit ? 'wallets-transactions-pending-row__transaction-amount__deposit' : ''\n                }`}\n            >\n                {transaction.is_deposit ? '+' : '-'}\n                {transaction.amount} {displayCode}\n            </div>\n            <div className='wallets-transactions-pending-row__transaction-status'>\n                <span>{formattedStatus?.name}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default TransactionsCryptoRow;\n","import React, { useEffect } from 'react';\nimport moment from 'moment';\nimport { useCryptoTransactions } from '@deriv/api';\nimport { Loader } from '../../../../../../components';\nimport { TransactionsNoDataState } from '../TransactionsNoDataState';\nimport { TransactionsPendingRow } from '../TransactionsPendingRow';\nimport { TransactionsTable } from '../TransactionsTable';\nimport './TransactionsPending.scss';\n\ntype TProps = {\n    filter?: NonNullable<\n        NonNullable<NonNullable<Parameters<ReturnType<typeof useCryptoTransactions>['subscribe']>>[0]>['payload']\n    >['transaction_type'];\n};\n\nconst TransactionsPending: React.FC<TProps> = ({ filter = 'all' }) => {\n    const { data: transactions, isLoading, isSubscribed, resetData, subscribe, unsubscribe } = useCryptoTransactions();\n\n    useEffect(() => {\n        resetData();\n        subscribe({ payload: { transaction_type: filter } });\n\n        return () => unsubscribe();\n    }, [filter, resetData, subscribe, unsubscribe]);\n\n    if (!isSubscribed || isLoading) return <Loader />;\n\n    if (!transactions) return <TransactionsNoDataState />;\n\n    return (\n        <div className='wallets-transactions-pending'>\n            <TransactionsTable\n                columns={[\n                    {\n                        accessorFn: row => moment.unix(row.submit_date).format('DD MMM YYYY'),\n                        accessorKey: 'date',\n                        header: 'Date',\n                    },\n                ]}\n                data={transactions}\n                groupBy={['date']}\n                rowGroupRender={transaction => (\n                    <p className='wallets-transactions-pending__group-title'>\n                        {moment.unix(transaction.submit_date).format('DD MMM YYYY')}\n                    </p>\n                )}\n                rowRender={transaction => <TransactionsPendingRow transaction={transaction} />}\n            />\n        </div>\n    );\n};\n\nexport default TransactionsPending;\n","import React, { ComponentProps, useEffect, useState } from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletDropdown } from '../../../../components';\nimport FilterIcon from '../../../../public/images/filter.svg';\nimport { TransactionsCompleted, TransactionsPending } from './components';\nimport './Transactions.scss';\n\ntype TTransactionsPendingFilter = ComponentProps<typeof TransactionsPending>['filter'];\ntype TTransactionCompletedFilter = ComponentProps<typeof TransactionsCompleted>['filter'];\ntype TFilterValue = TTransactionCompletedFilter | TTransactionsPendingFilter;\n\nconst filtersMapper: Record<string, Record<string, TFilterValue>> = {\n    completed: {\n        all: undefined,\n        deposit: 'deposit',\n        transfer: 'transfer',\n        withdrawal: 'withdrawal',\n    },\n    pending: {\n        all: 'all',\n        deposit: 'deposit',\n        withdrawal: 'withdrawal',\n    },\n};\n\nconst Transactions = () => {\n    const { data } = useActiveWalletAccount();\n    const [isPendingActive, setIsPendingActive] = useState(false);\n    const [filterValue, setFilterValue] = useState('all');\n\n    useEffect(() => {\n        if (!data?.currency_config?.is_crypto && isPendingActive) {\n            setIsPendingActive(false);\n        }\n    }, [data?.currency_config?.is_crypto, isPendingActive]);\n\n    useEffect(() => {\n        if (isPendingActive && !Object.keys(filtersMapper.pending).includes(filterValue)) {\n            setFilterValue('all');\n        }\n        if (!isPendingActive && !Object.keys(filtersMapper.completed).includes(filterValue)) {\n            setFilterValue('all');\n        }\n    }, [filterValue, isPendingActive]); // eslint-disable-line react-hooks/exhaustive-deps\n\n    return (\n        <div className='wallets-transactions'>\n            <div className='wallets-transactions__header'>\n                {data?.currency_config?.is_crypto && (\n                    <div className='wallets-transactions__toggle'>\n                        <p>Pending Transactions</p>\n                        <input\n                            checked={isPendingActive}\n                            className='wallets-transactions__toggle-switch'\n                            id='toggle-pending'\n                            onChange={() => setIsPendingActive(!isPendingActive)}\n                            type='checkbox'\n                        />\n                        <label className='wallets-transactions__toggle-switch__label' htmlFor='toggle-pending'>\n                            <span className='wallets-transactions__toggle-switch__button' />\n                        </label>\n                    </div>\n                )}\n                <WalletDropdown\n                    icon={<FilterIcon />}\n                    label='Filter'\n                    list={Object.keys(filtersMapper[isPendingActive ? 'pending' : 'completed']).map(key => ({\n                        text: key.replace(/^\\w/, c => c.toUpperCase()),\n                        value: key,\n                    }))}\n                    onSelect={value => setFilterValue(value)}\n                    value={filterValue}\n                />\n            </div>\n            {isPendingActive ? (\n                <TransactionsPending filter={filtersMapper.pending[filterValue] as TTransactionsPendingFilter} />\n            ) : (\n                <TransactionsCompleted filter={filtersMapper.completed[filterValue] as TTransactionCompletedFilter} />\n            )}\n        </div>\n    );\n};\n\nexport default Transactions;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\nimport './WalletListCardBadge.scss';\n\ntype TProps = {\n    isDemo?: THooks.WalletAccountsList['is_virtual'];\n    label?: THooks.WalletAccountsList['landing_company_name'];\n};\n\nconst WalletListCardBadge: React.FC<TProps> = ({ isDemo, label }) => {\n    const className = isDemo ? 'wallets-list-card__badge--demo' : 'wallets-list-card__badge';\n\n    const formattedLabel = label === 'virtual' ? 'Demo' : label?.toUpperCase() || 'SVG';\n\n    return (\n        <div className={className}>\n            <div className='wallets-list-card__name'>\n                <WalletText color={isDemo ? 'white' : 'black'} size='2xs' weight='bold'>\n                    {formattedLabel}\n                </WalletText>\n            </div>\n        </div>\n    );\n};\n\nexport default WalletListCardBadge;\n","import React from 'react';\nimport { useAccountsList } from '@deriv/api';\nimport { WalletCurrencyCard } from '../../../../../../../components/WalletCurrencyCard';\nimport { WalletListCardBadge } from '../../../../../../../components/WalletListCardBadge';\nimport './TransferFormAccountCard.scss';\n\ntype TProps = {\n    account?: NonNullable<ReturnType<typeof useAccountsList>['data']>[number];\n    type?: 'input' | 'modal';\n};\n\nconst WalletTransferFromAccountCard: React.FC<TProps> = ({ account, type = 'modal' }) => {\n    const isInput = type === 'input';\n\n    return (\n        <div className='wallets-transfer-form-account-card'>\n            <div\n                className={`wallets-transfer-form-account-card__content ${\n                    isInput ? 'wallets-transfer-form-account-card__content--is-input' : ''\n                }`}\n            >\n                <div className='wallets-transfer-form-account-card__content__card'>\n                    <WalletCurrencyCard\n                        currency={account?.currency_config?.display_code || 'USD'}\n                        isDemo={account?.is_virtual}\n                        size={isInput ? 'sm' : 'md'}\n                    />\n                </div>\n                <div className='wallets-transfer-form-account-card__details'>\n                    <p\n                        className={`wallets-transfer-form-account-card__details__title ${\n                            isInput ? 'wallets-transfer-form-account-card__details__title--is-input' : ''\n                        }`}\n                    >\n                        {account?.currency_config?.display_code || 'USD'} Wallet\n                    </p>\n                    <span\n                        className={`wallets-transfer-form-account-card__details__balance ${\n                            isInput ? 'wallets-transfer-form-account-card__details__balance--is-input' : ''\n                        }`}\n                    >\n                        Balance: {account?.display_balance}\n                    </span>\n                </div>\n            </div>\n            {type === 'modal' && (\n                <WalletListCardBadge isDemo={account?.is_virtual} label={account?.landing_company_name} />\n            )}\n        </div>\n    );\n};\n\nexport default WalletTransferFromAccountCard;\n","import React from 'react';\nimport './Loader.scss';\n\ntype TProps = {\n    color?: React.CSSProperties['color'];\n};\n\nconst Loader: React.FC<TProps> = ({ color = '#85ACB0' }) => (\n    <div className='wallets-loader'>\n        <span className='wallets-loader__element' style={{ backgroundColor: color }} />\n        <span className='wallets-loader__element' style={{ backgroundColor: color }} />\n        <span className='wallets-loader__element' style={{ backgroundColor: color }} />\n        <span className='wallets-loader__element' style={{ backgroundColor: color }} />\n        <span className='wallets-loader__element' style={{ backgroundColor: color }} />\n    </div>\n);\n\nexport default Loader;\n","import React from 'react';\nimport { useAccountsList } from '@deriv/api';\nimport { Loader } from '../../../../../../../components/Loader';\nimport { useModal } from '../../../../../../../components/ModalProvider';\nimport CloseIcon from '../../../../../../../public/images/close-icon.svg';\nimport TransferFromAccountCard from '../TransferFormAccountCard/TransferFormAccountCard';\nimport './TransferFormAccountSelection.scss';\n\ntype TProps = {\n    label: string;\n    onSelect: (value: NonNullable<ReturnType<typeof useAccountsList>['data']>[number]) => void;\n};\n\nconst TransferFormAccountSelection: React.FC<TProps> = ({ label, onSelect }) => {\n    const { data, isLoading } = useAccountsList();\n    const modal = useModal();\n\n    if (isLoading) return <Loader />;\n\n    return (\n        <div className='wallets-transfer-form-account-selection'>\n            <div className='wallets-transfer-form-account-selection__header'>\n                <span className='wallets-transfer-form-account-selection__header__label'>{label}</span>\n                <button\n                    className='wallets-transfer-form-account-selection__header__close-button'\n                    onClick={() => modal.hide()}\n                >\n                    <CloseIcon />\n                </button>\n            </div>\n            <div className='wallets-transfer-form-account-selection__accounts'>\n                {data?.map(account => (\n                    <button\n                        className='wallets-transfer-form-account-selection__account'\n                        key={`account-selection-${account?.loginid}`}\n                        onClick={() => {\n                            onSelect(account);\n                            modal.hide();\n                        }}\n                    >\n                        <TransferFromAccountCard account={account} />\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default TransferFormAccountSelection;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8 9.586l5.293-5.293a1 1 0 111.414 1.414l-6 6a1 1 0 01-1.414 0l-6-6a1 1 0 011.414-1.414L8 9.586z\" fill=\"#333\" /></svg>);","import React, { useState } from 'react';\nimport { useFormikContext } from 'formik';\nimport { useAccountsList } from '@deriv/api';\nimport { useModal } from '../../../../../../../components/ModalProvider';\nimport { WalletListCardBadge } from '../../../../../../../components/WalletListCardBadge';\nimport IcDropdown from '../../../../../../../public/images/ic-dropdown.svg';\nimport TransferFormAccountCard from '../TransferFormAccountCard/TransferFormAccountCard';\nimport TransferFormAccountSelection from '../TransferFormAccountSelection/TransferFormAccountSelection';\nimport './TransferFormDropdown.scss';\n\ntype TProps = {\n    fieldName: string;\n    initialAccount?: NonNullable<ReturnType<typeof useAccountsList>['data']>[number];\n    label: string;\n};\n\nconst TransferFormDropdown: React.FC<TProps> = ({ fieldName, initialAccount, label }) => {\n    const [selectedAccount, setSelectedAccount] = useState(initialAccount);\n    const modal = useModal();\n\n    const { setFieldValue } = useFormikContext();\n\n    const handleSelect = (value: typeof selectedAccount) => {\n        setSelectedAccount(value);\n        setFieldValue(fieldName, value);\n    };\n\n    return (\n        <div className='wallets-transfer-form-dropdown'>\n            <div className='wallets-transfer-form-dropdown__divider' />\n            <div className='wallets-transfer-form-dropdown__content'>\n                <span className='wallets-transfer-form-dropdown__content__label'>{label}</span>\n                <div className='wallets-transfer-form-dropdown__content__selection'>\n                    {selectedAccount && <TransferFormAccountCard account={selectedAccount} type='input' />}\n                </div>\n            </div>\n            <div className='wallets-transfer-form-dropdown__icons'>\n                {selectedAccount && (\n                    <WalletListCardBadge\n                        isDemo={selectedAccount?.is_virtual}\n                        label={selectedAccount?.landing_company_name}\n                    />\n                )}\n                <IcDropdown\n                    className='wallets-transfer-form-dropdown__icons-dropdown'\n                    onClick={() => modal.show(<TransferFormAccountSelection label={label} onSelect={handleSelect} />)}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default TransferFormDropdown;\n","import { useCallback, useEffect, useState } from 'react';\n\ntype TOptions = {\n    fractionDigits?: number;\n    withSign?: boolean;\n};\n\nconst useInputDecimalFormatter = (initial?: number, options?: TOptions) => {\n    const [value, setValue] = useState('');\n    const { fractionDigits = 2, withSign = false } = options || {};\n\n    const onChange = useCallback(\n        (e: DeepPartial<React.ChangeEvent<HTMLInputElement>> | React.ChangeEvent<HTMLInputElement>) => {\n            setValue(oldValue => {\n                const newValue = e?.target?.value || '';\n                const isEmpty = newValue === '';\n\n                // The field has been cleared, So we return the new value.\n                if (isEmpty) return newValue;\n\n                const text = withSign ? newValue : newValue.replaceAll(/[+-]/g, '');\n                const inputs = text.split('.');\n\n                // The field contains more than one dot, So we return the old value as only one dot\n                // is allowed.\n                if (inputs.length > 2) return oldValue;\n\n                const left = inputs[0];\n                const right = inputs.length > 1 ? inputs[1] : null;\n                const hasRight = right !== null && right !== '';\n\n                // The field value is positive or negative sign, So we return the new value without\n                // any calculations.\n                if ((left === '-' || left === '+') && !hasRight) return newValue;\n\n                // The field value is 0, So we return the new value without any calculations.\n                if (left === '0' && !hasRight) return newValue;\n\n                const isNumber = !isNaN(Number(newValue));\n\n                // The input value is not a valid number, So we return the old value.\n                if (!isNumber) return oldValue;\n\n                const newLeft = left.replaceAll(/[+-]/g, '');\n                const hasDecimal = newValue.includes('.');\n\n                // The field starts with 0 but doesn't have decimal point, So we return the old value\n                // as the only valid input at this step is decimal point.\n                if (newLeft.startsWith('0') && newLeft.length !== 1 && !hasDecimal) return oldValue;\n\n                // The field have a decimal point and decimal places are already as allowed fraction\n                // digits, So we remove the extra decimal digits from the right and return the new value.\n                if (hasRight && right.length > fractionDigits) {\n                    const newRight = right.substring(0, fractionDigits);\n\n                    return `${left}.${newRight}`;\n                }\n\n                return newValue;\n            });\n        },\n        [fractionDigits, withSign]\n    );\n\n    useEffect(() => {\n        if (initial) onChange({ target: { value: `${initial}` } });\n    }, [initial, onChange]);\n\n    return { onChange, value };\n};\n\nexport default useInputDecimalFormatter;\n","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { unFormatLocaleString } from '@deriv/utils';\nimport useInputDecimalFormatter from './useInputDecimalFormatter';\n\ntype TOptions = {\n    fractionDigits?: number;\n    locale?: Intl.LocalesArgument;\n};\n\nconst useInputATMFormatter = (initial?: number, options?: TOptions) => {\n    const isPasting = useRef(false);\n    const { onChange: onChangeDecimal, value } = useInputDecimalFormatter(undefined, options);\n    const { fractionDigits = 2, locale } = options || {};\n\n    const formattedValue = useMemo(\n        () => `${Number(value).toLocaleString(locale, { minimumFractionDigits: fractionDigits })}`,\n        [fractionDigits, locale, value]\n    );\n\n    const onChange = useCallback(\n        (e: DeepPartial<React.ChangeEvent<HTMLInputElement>> | React.ChangeEvent<HTMLInputElement>) => {\n            const newValue = e?.target?.value || '';\n            const unformatted = unFormatLocaleString(newValue, locale);\n            // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n            const shifted = Math.fround(unformatted * 10).toFixed(fractionDigits);\n            // @ts-expect-error shouldn't cast to number because we will lose the trailing zeros.\n            const unShifted = Math.fround(unformatted / 10).toFixed(fractionDigits);\n            const unformattedFraction = unformatted.split('.')?.[1]?.length || fractionDigits;\n\n            // If the user is pasting, we don't need to shift the decimal point,\n            // We just need to format the value.\n            if (isPasting.current) {\n                isPasting.current = false;\n                return onChangeDecimal({ target: { value: unformatted } });\n            }\n\n            // The new value has one more decimal places than the fraction digits,\n            // so we need to shift the decimal point to the left.\n            if (unformattedFraction - 1 === fractionDigits) {\n                return onChangeDecimal({ target: { value: shifted } });\n            }\n\n            // The new value has one less decimal places than the fraction digits,\n            // so we need to shift the decimal point to the right.\n            if (unformattedFraction + 1 === fractionDigits) {\n                return onChangeDecimal({ target: { value: unShifted } });\n            }\n\n            // The new value has the same number of decimal places as the fraction digits,\n            // so we don't need to shift the decimal point.\n            if (unformattedFraction === fractionDigits) {\n                return onChangeDecimal({ target: { value: unformatted } });\n            }\n\n            // The new value has more decimal places than the fraction digits,\n            // so we chop the extra decimal points.\n            if (unformattedFraction - 1 > fractionDigits) {\n                return onChangeDecimal({ target: { value: unformatted } });\n            }\n\n            // The new value has less decimal places than the fraction digits,\n            // so we add the missing extra decimal point.\n            if (unformattedFraction + 1 < fractionDigits) {\n                return onChangeDecimal({ target: { value: unformatted } });\n            }\n\n            return onChangeDecimal({ target: { value: unformatted } });\n        },\n        [locale, fractionDigits, onChangeDecimal]\n    );\n\n    const onPaste: React.ClipboardEventHandler<HTMLInputElement> = useCallback(\n        e => (isPasting.current = e.type === 'paste'),\n        []\n    );\n\n    useEffect(() => {\n        if (initial) {\n            isPasting.current = true;\n            onChange({\n                target: {\n                    value: `${Number(initial).toLocaleString(locale, { minimumFractionDigits: fractionDigits })}`,\n                },\n            });\n        }\n    }, [fractionDigits, initial, locale, onChange]);\n\n    return { onChange, onPaste, value: formattedValue };\n};\n\nexport default useInputATMFormatter;\n","import React, { useEffect } from 'react';\nimport { useFormikContext } from 'formik';\nimport useInputATMFormatter from '../../../../../../../hooks/useInputATMFormatter';\nimport './TransferFormInputField.scss';\n\ntype TProps = {\n    defaultValue?: number;\n    fieldName: string;\n    fractionDigits?: number;\n    label: string;\n};\n\nconst WalletTransferFormInputField: React.FC<TProps> = ({ defaultValue, fieldName, fractionDigits = 2, label }) => {\n    const { setFieldValue } = useFormikContext();\n    const { onChange, value } = useInputATMFormatter(defaultValue, {\n        fractionDigits,\n    });\n\n    useEffect(() => {\n        setFieldValue(fieldName, Number(value));\n    }, [fieldName, setFieldValue, value]);\n\n    return (\n        <div className='wallets-transfer-form-input-field'>\n            <label className='wallets-transfer-form-input-field__label'>{label}</label>\n            <input className='wallets-transfer-form-input-field__input' onChange={onChange} value={value} />\n        </div>\n    );\n};\n\nexport default WalletTransferFormInputField;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport { useActiveWalletAccount, useTransferBetweenAccounts } from '@deriv/api';\nimport { TransferFormDropdownModule, TransferFormInputFieldModule } from './components';\nimport './TransferForm.scss';\n\ntype TInitialValues = {\n    amountReceive: number;\n    amountSend: number;\n    fromAccount?: NonNullable<ReturnType<typeof useActiveWalletAccount>['data']>;\n    toAccount?: NonNullable<ReturnType<typeof useActiveWalletAccount>['data']>;\n};\n\nconst TransferForm = () => {\n    const { data: activeAccount } = useActiveWalletAccount();\n    const { mutate } = useTransferBetweenAccounts();\n    const initialValues: TInitialValues = {\n        amountReceive: 0,\n        amountSend: 0,\n        fromAccount: activeAccount,\n        toAccount: undefined,\n    };\n\n    return (\n        <div className='wallets-transfer'>\n            <Formik\n                initialValues={initialValues}\n                onSubmit={values => {\n                    mutate({\n                        account_from: values.fromAccount?.loginid,\n                        account_to: values.toAccount?.loginid,\n                        amount: Number(values.amountSend),\n                        currency: values.fromAccount?.currency,\n                    });\n                }}\n            >\n                {props => (\n                    <form className='wallets-transfer__form' onSubmit={props.handleSubmit}>\n                        <div className='wallets-transfer__form__fields'>\n                            <div className='wallets-transfer__form__fields-section'>\n                                <TransferFormInputFieldModule\n                                    defaultValue={props.values.amountSend}\n                                    fieldName='amountSend'\n                                    fractionDigits={props.values.fromAccount?.currency_config?.fractional_digits}\n                                    label='Amount you send'\n                                />\n                                <TransferFormDropdownModule\n                                    fieldName='fromAccount'\n                                    initialAccount={props.initialValues.fromAccount}\n                                    label='Transfer from'\n                                />\n                            </div>\n                            <div style={{ height: '20px' }} />\n                            <div className='wallets-transfer__form__fields-section'>\n                                <TransferFormInputFieldModule\n                                    defaultValue={props.values.amountReceive}\n                                    fieldName='amountReceive'\n                                    fractionDigits={props.values.toAccount?.currency_config?.fractional_digits}\n                                    label='Estimated amount'\n                                />\n                                <TransferFormDropdownModule fieldName='toAccount' label='Transfer to' />\n                            </div>\n                        </div>\n                        <button className='wallets-transfer__form__submit-button' type='submit'>\n                            Transfer\n                        </button>\n                    </form>\n                )}\n            </Formik>\n        </div>\n    );\n};\n\nexport default TransferForm;\n","import React from 'react';\nimport { TransferForm } from './TransferForm';\n\nconst Transfer = () => <TransferForm />;\n\nexport default Transfer;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"102\" height=\"103\" fill=\"none\" {...props}><path d=\"M25.545 37.576v23.152L42.81 48.975l-17.265-11.4zM74.927 35.031h-47.81l24.28 16.048 23.53-16.048zM59.145 49.398L76.454 60.82V37.623l-17.31 11.775z\" fill=\"#85ACB0\" /><path d=\"M51.42 54.665l-5.91-3.917L25.545 64.36v3.608h50.909v-3.564L56.489 51.212l-5.069 3.453z\" fill=\"#85ACB0\" /><path d=\"M51 15.687c19.744 0 35.814 16.07 35.814 35.814S70.744 87.314 51 87.314s-35.813-16.07-35.813-35.813c0-19.744 16.07-35.814 35.813-35.814zm0-4.87c-22.466 0-40.683 18.218-40.683 40.684 0 22.466 18.217 40.683 40.683 40.683 22.467 0 40.683-18.217 40.683-40.683S73.467 10.818 51 10.818z\" fill=\"#85ACB0\" /><path opacity=\".6\" d=\"M49.473 99.996c-.045-1.328 1.04-2.434 2.39-2.434a2.419 2.419 0 012.457 2.368c.022 1.35-1.062 2.435-2.39 2.479h-.045c-1.306 0-2.39-1.085-2.412-2.413zm-10.67.93a2.4 2.4 0 01-1.77-2.922 2.389 2.389 0 012.922-1.77c1.306.31 2.08 1.615 1.77 2.921-.265 1.085-1.261 1.837-2.368 1.837-.177 0-.376-.022-.553-.066zm23.242-2.147a2.404 2.404 0 011.66-2.988c1.284-.376 2.612.376 2.988 1.66a2.431 2.431 0 01-1.66 2.988 2.45 2.45 0 01-.686.089 2.385 2.385 0 01-2.302-1.749zm-35.614-2.678c-1.151-.642-1.572-2.103-.93-3.298.642-1.174 2.103-1.594 3.298-.952a2.445 2.445 0 01.952 3.298 2.435 2.435 0 01-2.125 1.24 2.17 2.17 0 01-1.195-.288zm47.412-1.771c-.687-1.129-.31-2.634.84-3.32 1.13-.686 2.635-.31 3.32.84.687 1.13.333 2.635-.818 3.299a2.295 2.295 0 01-1.24.354c-.819.022-1.638-.42-2.102-1.173zm-58.037-6.065c-.974-.93-1.018-2.457-.088-3.409a2.419 2.419 0 113.497 3.343 2.374 2.374 0 01-1.749.73c-.597 0-1.217-.221-1.66-.664zm68.307-1.261a2.399 2.399 0 01-.044-3.431 2.392 2.392 0 013.408-.067c.974.952.996 2.48.067 3.431a2.446 2.446 0 01-1.749.73 2.493 2.493 0 01-1.682-.663zM7.483 77.95c-.685-1.151-.331-2.634.82-3.32a2.392 2.392 0 013.32.796c.686 1.129.31 2.634-.82 3.32a2.316 2.316 0 01-1.26.355c-.798.022-1.594-.399-2.06-1.151zm84.665-.709c-1.151-.642-1.572-2.125-.93-3.298a2.47 2.47 0 013.32-.93 2.45 2.45 0 01.93 3.299 2.4 2.4 0 01-2.103 1.24c-.42 0-.841-.112-1.217-.31zM2.128 65.843c-.355-1.284.353-2.634 1.637-3.01 1.284-.354 2.634.354 3.01 1.638a2.424 2.424 0 01-1.638 3.01 2.45 2.45 0 01-.664.11c-1.062 0-2.014-.708-2.346-1.748zm95.288-.066a2.408 2.408 0 01-1.749-2.944 2.402 2.402 0 012.922-1.749 2.44 2.44 0 011.771 2.944 2.459 2.459 0 01-2.944 1.749zM.113 52.762v-.023c0-.199.022-.42.066-.62a1.91 1.91 0 01-.088-.62 2.404 2.404 0 012.412-2.412 2.423 2.423 0 012.369 2.988c.044.177.088.377.088.576a2.452 2.452 0 01-2.368 2.479h-.066a2.424 2.424 0 01-2.413-2.368zm96.949-1.838c-.023-1.35 1.062-2.434 2.412-2.456 1.328 0 2.435 1.062 2.435 2.412a2.395 2.395 0 01-2.413 2.435h-.022a2.414 2.414 0 01-2.412-2.39zM3.522 41.34c-1.306-.332-2.059-1.682-1.727-2.966.332-1.284 1.682-2.058 2.966-1.704a2.391 2.391 0 011.705 2.944c-.266 1.084-1.262 1.815-2.347 1.815-.177 0-.376-.022-.597-.089zm91.857-2.28a2.38 2.38 0 011.66-2.966 2.395 2.395 0 012.989 1.66c.354 1.284-.377 2.634-1.683 2.989-.199.066-.42.088-.641.088-1.063 0-2.037-.686-2.325-1.77zM7.75 29.432c-1.15-.664-1.55-2.147-.885-3.32.642-1.151 2.147-1.55 3.298-.886a2.447 2.447 0 01.885 3.32 2.424 2.424 0 01-2.102 1.218 2.38 2.38 0 01-1.196-.332zm82.894-1.372c-.687-1.151-.288-2.634.863-3.32 1.129-.665 2.634-.288 3.298.863.686 1.128.288 2.634-.841 3.32-.376.243-.82.332-1.24.332a2.551 2.551 0 01-2.08-1.195zm-75.744-9.031c-.93-.952-.952-2.48 0-3.409a2.399 2.399 0 013.43-.022c.952.952.952 2.479 0 3.409a2.385 2.385 0 01-1.704.73c-.62 0-1.261-.243-1.726-.708zm68.373-.399a2.418 2.418 0 01-.044-3.43 2.438 2.438 0 013.43-.045v.022c.952.93.974 2.457.022 3.41a2.397 2.397 0 01-1.726.73 2.288 2.288 0 01-1.682-.687zm-58.79-7.791c-.663-1.173-.265-2.656.886-3.32a2.445 2.445 0 013.32.863 2.42 2.42 0 01-.863 3.32c-.376.2-.797.31-1.217.31-.863 0-1.66-.42-2.125-1.173zm49.228.575a2.422 2.422 0 01-.908-3.297c.664-1.174 2.125-1.572 3.32-.93 1.151.642 1.55 2.147.908 3.298a2.424 2.424 0 01-2.103 1.217 2.115 2.115 0 01-1.217-.287zM35.86 5.35c-.354-1.284.42-2.612 1.704-2.966a2.407 2.407 0 012.966 1.704 2.41 2.41 0 01-2.324 3.055A2.412 2.412 0 0135.86 5.35zM62.598 6.92h.023c-1.306-.354-2.103-1.682-1.75-2.966a2.418 2.418 0 012.945-1.748 2.418 2.418 0 011.748 2.944 2.438 2.438 0 01-2.368 1.815c-.177.022-.398 0-.598-.045zm-14.32-3.895C48.254 1.676 49.361.59 50.69.59a2.437 2.437 0 012.435 2.412 2.423 2.423 0 01-2.413 2.435h-.022c-1.306 0-2.413-1.084-2.413-2.412z\" fill=\"#85ACB0\" /><path d=\"M81.988.59l-19.92 8.722v16.335c0 8.787 5.068 16.866 13.236 21.094l6.684 3.453 6.685-3.475c8.168-4.228 13.236-12.307 13.236-21.094V9.312L81.989.59z\" fill=\"#FF444F\" /><path d=\"M79.132 18.985a2.862 2.862 0 012.856-2.855 2.862 2.862 0 012.855 2.855v1.328h3.43v-1.328c0-3.475-2.832-6.308-6.307-6.308-3.476 0-6.309 2.833-6.309 6.308v1.328h3.431v-1.328h.044zM90.067 22.017H73.931a2.022 2.022 0 00-2.014 2.014v12.064c0 1.106.907 2.014 2.014 2.014h16.136a2.022 2.022 0 002.014-2.014V24.03a2.007 2.007 0 00-2.014-2.014z\" fill=\"#fff\" /></svg>);","import React from 'react';\nimport EmailVerification from '../../../../../public/images/email-verification.svg';\nimport WalletsActionScreen from '../../../../../components/WalletsActionScreen/WalletsActionScreen';\nimport { WalletText } from '../../../../../components';\nimport './WithdrawalVerificationRequest.scss';\n\ntype TProps = {\n    sendEmail: () => void;\n};\n\nconst WithdrawalVerificationRequest: React.FC<TProps> = ({ sendEmail }) => {\n    return (\n        <div className='wallets-withdrawal-verification-request'>\n            <WalletsActionScreen\n                actionText='Send email'\n                description={\n                    <div className='wallets-withdrawal-verification-request__description'>\n                        <WalletText align='center'>\n                            Click the button below and we’ll send you an email with a link. Click that link to verify\n                            your withdrawal request.\n                        </WalletText>\n                        <WalletText align='center'>\n                            This is to protect your account from unauthorised withdrawals.\n                        </WalletText>\n                    </div>\n                }\n                icon={\n                    <div className='wallets-withdrawal-verification-request__icon'>\n                        <EmailVerification />\n                    </div>\n                }\n                onAction={sendEmail}\n                title='Please help us verify your withdrawal request.'\n            />\n        </div>\n    );\n};\n\nexport default WithdrawalVerificationRequest;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"102\" height=\"102\" fill=\"none\" {...props}><path d=\"M.09 49.01v43.317L28.048 70.99.091 49.01zM88.63 49.01v43.317L60.674 70.99 88.63 49.01zM4.518 101.909h79.685a4.44 4.44 0 004.427-4.427v-.642L44.405 62.044.09 96.84v.642a4.44 4.44 0 004.427 4.427z\" fill=\"#85ACB0\" /><path d=\"M84.203 39.933H4.518A4.44 4.44 0 00.09 44.36v.642l44.314 34.795L88.63 45.002v-.642a4.44 4.44 0 00-4.427-4.427z\" fill=\"#85ACB0\" opacity=\".6\" /><path d=\"M77.563 48.787c13.447 0 24.348-10.9 24.348-24.348 0-13.447-10.9-24.348-24.348-24.348-13.447 0-24.348 10.9-24.348 24.348 0 13.447 10.9 24.348 24.348 24.348z\" fill=\"#FF444F\" /><path d=\"M75.793 35.064V21.296h-5.335v-3.254c.753.022 1.46-.044 2.17-.155.707-.11 1.327-.376 1.88-.708a4.75 4.75 0 001.417-1.328c.377-.554.642-1.218.753-2.037h3.43v21.228h-4.316v.022z\" fill=\"#fff\" /></svg>);","import React, { useState } from 'react';\nimport EmailSent from '../../../../../public/images/email-sent.svg';\nimport WalletsActionScreen from '../../../../../components/WalletsActionScreen/WalletsActionScreen';\nimport './WithdrawalVerificationSent.scss';\n\ntype TProps = {\n    counter: number;\n    sendEmail: () => void;\n};\n\nconst WithdrawalVerificationSent: React.FC<TProps> = ({ counter, sendEmail }) => {\n    const [showResend, setShowResend] = useState(false);\n\n    return (\n        <div className='wallets-withdrawal-verification-sent'>\n            <WalletsActionScreen\n                actionText={!showResend && 'Didn’t receive the email?'}\n                actionVariant='ghost'\n                description='Please check your email for the verification link to complete the process.'\n                icon={\n                    <div className='wallets-withdrawal-verification-sent__icon'>\n                        <EmailSent />\n                    </div>\n                }\n                onAction={() => {\n                    sendEmail();\n                    setShowResend(!showResend);\n                }}\n                title='We’ve sent you an email.'\n            />\n            <div className='wallets-withdrawal-verification-sent__resend'>\n                {showResend && (\n                    <WalletsActionScreen\n                        actionText={`Resend email${counter ? ` in ${counter}s` : ''}`}\n                        description='Check your spam or junk folder. If it’s not there, try resending the email.'\n                        disabled={!!counter}\n                        onAction={sendEmail}\n                        title='Didn’t receive the email?'\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WithdrawalVerificationSent;\n","import React, { useState } from 'react';\nimport { useCountdown } from 'usehooks-ts';\nimport { useSettings, useVerifyEmail } from '@deriv/api';\nimport { WithdrawalVerificationRequest } from './WithdrawalVerificationRequest';\nimport { WithdrawalVerificationSent } from './WithdrawalVerificationSent';\n\nconst WithdrawalVerification = () => {\n    const [emailSent, setEmailSent] = useState(false);\n    const { data } = useSettings();\n    const { mutate } = useVerifyEmail();\n    const [count, { resetCountdown, startCountdown }] = useCountdown({\n        countStart: 60,\n        intervalMs: 1000,\n    });\n\n    const handleSendEmail = async () => {\n        if (data.email) {\n            await mutate({\n                type: 'payment_withdraw',\n                verify_email: data.email,\n            });\n            setEmailSent(true);\n            resetCountdown();\n            startCountdown();\n        }\n    };\n\n    if (emailSent) return <WithdrawalVerificationSent counter={count} sendEmail={handleSendEmail} />;\n    return <WithdrawalVerificationRequest sendEmail={handleSendEmail} />;\n};\n\nexport default WithdrawalVerification;\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { DepositCryptoModule, DepositFiatModule } from '../../modules';\n\nconst WalletDeposit = () => {\n    const { data } = useActiveWalletAccount();\n    const isCrypto = data?.currency_config?.is_crypto;\n\n    if (isCrypto) {\n        return <DepositCryptoModule />;\n    }\n\n    return <DepositFiatModule />;\n};\n\nexport default WalletDeposit;\n","import React from 'react';\nimport { ResetBalanceModule } from '../../modules';\n\nconst WalletResetBalance = () => <ResetBalanceModule />;\n\nexport default WalletResetBalance;\n","import React from 'react';\nimport { TransactionsModule } from '../../modules';\n\nconst WalletTransactions = () => <TransactionsModule />;\n\nexport default WalletTransactions;\n","import React from 'react';\nimport { TransferModule } from '../../modules';\n\nconst WalletTransfer = () => {\n    return <TransferModule />;\n};\n\nexport default WalletTransfer;\n","import React from 'react';\nimport { WithdrawalVerificationModule } from '../../modules';\n\nconst WalletWithdrawal = () => {\n    return <WithdrawalVerificationModule />;\n};\n\nexport default WalletWithdrawal;\n","import React, { useEffect } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport { WalletDeposit } from '../../flows/WalletDeposit';\nimport { WalletResetBalance } from '../../flows/WalletResetBalance';\nimport { WalletTransactions } from '../../flows/WalletTransactions';\nimport { WalletTransfer } from '../../flows/WalletTransfer';\nimport { WalletWithdrawal } from '../../flows/WalletWithdrawal';\n\nconst WalletCashierContent = () => {\n    const history = useHistory();\n\n    const isDeposit = useRouteMatch('/wallets/cashier/deposit');\n    const isResetBalance = useRouteMatch('/wallets/cashier/reset-balance');\n    const isTransfer = useRouteMatch('/wallets/cashier/transfer');\n    const isTransactions = useRouteMatch('/wallets/cashier/transactions');\n    const isWithdraw = useRouteMatch('/wallets/cashier/withdraw');\n\n    useEffect(() => {\n        // redirect to deposit page if no other page is matched\n        if (!isTransfer && !isDeposit && !isTransactions && !isWithdraw && !isResetBalance) {\n            history.push('/wallets/cashier/deposit');\n        }\n    }, [isTransfer, isDeposit, isTransactions, isWithdraw, isResetBalance, history]);\n\n    if (isDeposit) return <WalletDeposit />;\n\n    if (isResetBalance) return <WalletResetBalance />;\n\n    if (isTransfer) return <WalletTransfer />;\n\n    if (isTransactions) return <WalletTransactions />;\n\n    if (isWithdraw) {\n        return <WalletWithdrawal />;\n    }\n\n    return <></>;\n};\n\nexport default WalletCashierContent;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_714_1462)\"><path d=\"M4.5 0a4.49 4.49 0 014.242 2.989H12.5a2.5 2.5 0 012.5 2.5v2.779A2 2 0 0116 10v2a2 2 0 01-1.016 1.741C14.844 14.995 13.786 16 12.5 16H2.54C1.16 16 .003 14.84.003 13.46V5h.024A4.5 4.5 0 014.5 0zm8 3.989H8.972a4.5 4.5 0 01-7.969 3.344v6.127c0 .829.709 1.54 1.537 1.54h9.96c.64 0 1.187-.425 1.402-1H11a2 2 0 01-2-2v-2a2 2 0 012-2h3V5.489a1.5 1.5 0 00-1.5-1.5zM14 9h-3a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1v-2a1 1 0 00-1-1zm-2 1a1 1 0 110 2 1 1 0 010-2zM4.5 1a3.5 3.5 0 100 7 3.5 3.5 0 000-7zm0 1.5A.5.5 0 015 3v1h1a.5.5 0 01.492.41l.008.09A.5.5 0 016 5H5v1a.5.5 0 01-.41.492L4.5 6.5A.5.5 0 014 6V5H3a.5.5 0 01-.492-.41L2.5 4.5A.5.5 0 013 4h1V3a.5.5 0 01.41-.492L4.5 2.5z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0_714_1462\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_714_1515)\"><path d=\"M14.5 0A1.5 1.5 0 0116 1.5v13a1.5 1.5 0 01-1.5 1.5h-13A1.5 1.5 0 010 14.5v-13A1.5 1.5 0 011.5 0h13zm0 1h-13a.5.5 0 00-.5.5V3h14v1H1v10.5a.5.5 0 00.5.5h13a.5.5 0 00.5-.5v-13a.5.5 0 00-.5-.5zm-2 10a.5.5 0 010 1h-7a.5.5 0 010-1h7zm-9 0a.5.5 0 110 1 .5.5 0 010-1zm9-4a.5.5 0 010 1h-7a.5.5 0 010-1h7zm-9 0a.5.5 0 110 1 .5.5 0 010-1z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0_714_1515\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_714_1471)\"><path d=\"M11 10.293L14.793 6.5 11 2.707V4.5a.5.5 0 01-.5.5h-3a.5.5 0 010-1H10V1.5a.5.5 0 01.854-.354l5 5a.5.5 0 010 .708l-5 5A.498.498 0 0110 11.5V8H5.5a.5.5 0 01-.5-.5V5.707L1.207 9.5 5 13.293V11.5a.5.5 0 01.5-.5h3a.5.5 0 010 1H6v2.5a.5.5 0 01-.854.354l-5-5a.5.5 0 010-.708l5-5A.5.5 0 016 4.5V7h4.5a.5.5 0 01.5.5v2.793z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0_714_1471\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_714_1473)\"><path d=\"M4.5 0a4.49 4.49 0 014.242 2.989H12.5a2.5 2.5 0 012.5 2.5v2.779A2 2 0 0116 10v2a2 2 0 01-1.016 1.741C14.844 14.995 13.786 16 12.5 16H2.54C1.16 16 .003 14.84.003 13.46V5h.024A4.5 4.5 0 014.5 0zm8 3.989H8.972a4.5 4.5 0 01-7.969 3.344v6.127c0 .829.709 1.54 1.537 1.54h9.96c.64 0 1.187-.425 1.402-1H11a2 2 0 01-2-2v-2a2 2 0 012-2h3V5.489a1.5 1.5 0 00-1.5-1.5zM14 9h-3a1 1 0 00-1 1v2a1 1 0 001 1h3a1 1 0 001-1v-2a1 1 0 00-1-1zm-2 1a1 1 0 110 2 1 1 0 010-2zM4.5 1a3.5 3.5 0 100 7 3.5 3.5 0 000-7zM6 4a.5.5 0 010 1H3a.5.5 0 110-1h3z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0_714_1473\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9 2.5a.5.5 0 00-1 0v5H3a.5.5 0 000 1h5v5a.5.5 0 001 0v-5h5a.5.5 0 000-1H9v-5z\" fill=\"#333\" /></svg>);","import React, { useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletCardIcon, WalletGradientBackground, WalletText } from '../../../../components';\nimport { WalletListCardBadge } from '../../../../components/WalletListCardBadge';\nimport useDevice from '../../../../hooks/useDevice';\nimport CloseIcon from '../../../../public/images/close-icon.svg';\nimport IcCashierDeposit from '../../../../public/images/ic-cashier-deposit.svg';\nimport IcCashierStatement from '../../../../public/images/ic-cashier-statement.svg';\nimport IcCashierTransfer from '../../../../public/images/ic-cashier-transfer.svg';\nimport IcCashierWithdrawal from '../../../../public/images/ic-cashier-withdrawal.svg';\nimport ResetBalance from '../../../../public/images/plus-thin.svg';\nimport './WalletCashierHeader.scss';\n\ntype TProps = {\n    hideWalletDetails: boolean;\n};\n\nconst realAccountTabs = [\n    {\n        icon: <IcCashierDeposit />,\n        path: 'deposit',\n        text: 'Deposit',\n    },\n    {\n        icon: <IcCashierWithdrawal />,\n        path: 'withdraw',\n        text: 'Withdraw',\n    },\n    {\n        icon: <IcCashierTransfer />,\n        path: 'transfer',\n        text: 'Transfer',\n    },\n    {\n        icon: <IcCashierStatement />,\n        path: 'transactions',\n        text: 'Transactions',\n    },\n] as const;\n\nconst virtualAccountTabs = [\n    {\n        icon: <IcCashierTransfer />,\n        path: 'transfer',\n        text: 'Transfer',\n    },\n    {\n        icon: <IcCashierStatement />,\n        path: 'transactions',\n        text: 'Transactions',\n    },\n    {\n        icon: <ResetBalance />,\n        path: 'reset-balance',\n        text: 'Reset balance',\n    },\n] as const;\n\nconst WalletCashierHeader: React.FC<TProps> = ({ hideWalletDetails }) => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isMobile } = useDevice();\n    const activeTabRef = useRef<HTMLButtonElement>(null);\n    const history = useHistory();\n    const location = useLocation();\n    const tabs = activeWallet?.is_virtual ? virtualAccountTabs : realAccountTabs;\n\n    useEffect(() => {\n        if (isMobile && activeTabRef.current) {\n            activeTabRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'center' });\n        }\n    }, [location.pathname, isMobile]);\n\n    return (\n        <WalletGradientBackground\n            currency={activeWallet?.currency_config?.display_code || 'USD'}\n            device={isMobile ? 'mobile' : 'desktop'}\n            isDemo={activeWallet?.is_virtual}\n            theme='light'\n            type='header'\n        >\n            <main className='wallets-cashier-header'>\n                <section className='wallets-cashier-header__info'>\n                    <div className='wallets-cashier-header__top-left-info'>\n                        <div\n                            className={classNames('wallets-cashier-header__details', {\n                                'wallets-cashier-header__details--hide-details': hideWalletDetails,\n                            })}\n                        >\n                            <WalletText\n                                color={activeWallet?.is_virtual ? 'system-dark-2-general-text' : 'general'}\n                                size='md'\n                            >\n                                {activeWallet?.currency} Wallet\n                            </WalletText>\n                            {activeWallet?.landing_company_name && (\n                                <WalletListCardBadge\n                                    isDemo={activeWallet?.is_virtual}\n                                    label={activeWallet?.landing_company_name}\n                                />\n                            )}\n                        </div>\n                        <WalletText color={activeWallet?.is_virtual ? 'white' : 'general'} size='xl' weight='bold'>\n                            {activeWallet?.display_balance}\n                        </WalletText>\n                    </div>\n                    <div className='wallets-cashier-header__top-right-info'>\n                        {activeWallet?.wallet_currency_type && (\n                            <div\n                                className={classNames('wallets-cashier-header__currency-icon', {\n                                    'wallets-cashier-header__currency-icon--hide-currency-icon': hideWalletDetails,\n                                })}\n                            >\n                                <WalletCardIcon size='xl' type={activeWallet?.wallet_currency_type} />\n                            </div>\n                        )}\n                        <CloseIcon\n                            className={classNames('wallets-cashier-header__close-icon', {\n                                'wallets-cashier-header__close-icon--white': activeWallet?.is_virtual,\n                            })}\n                            onClick={() => history.push('/wallets')}\n                        />\n                    </div>\n                </section>\n                <section className='wallets-cashier-header__tabs'>\n                    {tabs.map(tab => {\n                        const isActiveTab = location.pathname === `/wallets/cashier/${tab.path}`;\n                        return (\n                            <button\n                                className={`wallets-cashier-header__tab ${\n                                    isActiveTab ? 'wallets-cashier-header__tab--active' : ''\n                                }`}\n                                key={`cashier-tab-${tab.path}`}\n                                onClick={() => history.push(`/wallets/cashier/${tab.path}`)}\n                                ref={isActiveTab ? activeTabRef : null}\n                            >\n                                <div\n                                    className={classNames('wallets-cashier-header__tab-icon', {\n                                        'wallets-cashier-header__tab-icon--system-dark-2-general-text':\n                                            activeWallet?.is_virtual && !isActiveTab,\n                                    })}\n                                >\n                                    {tab.icon}\n                                </div>\n                                <WalletText\n                                    color={\n                                        activeWallet?.is_virtual && !isActiveTab\n                                            ? 'system-dark-2-general-text'\n                                            : 'general'\n                                    }\n                                    size='sm'\n                                    weight={isActiveTab ? 'bold' : 'normal'}\n                                >\n                                    {tab.text}\n                                </WalletText>\n                            </button>\n                        );\n                    })}\n                </section>\n            </main>\n        </WalletGradientBackground>\n    );\n};\n\nexport default WalletCashierHeader;\n","import React, { useState } from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletCashierContent, WalletCashierHeader } from './components';\nimport './WalletCashier.scss';\nimport { Loader } from '../../components';\n\nconst WalletCashier = () => {\n    const { isLoading } = useActiveWalletAccount();\n    const [isContentScrolled, setIsContentScrolled] = useState(false);\n\n    const onContentScroll = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const target = e.target as HTMLDivElement;\n        setIsContentScrolled(target.scrollTop > 0);\n    };\n\n    if (isLoading) return <Loader />;\n\n    return (\n        <div className='wallets-cashier'>\n            <WalletCashierHeader hideWalletDetails={isContentScrolled} />\n            <div className='wallets-cashier-content' onScroll={onContentScroll}>\n                <WalletCashierContent />\n            </div>\n        </div>\n    );\n};\n\nexport default WalletCashier;\n","import React, { useMemo } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useWalletAccountsList } from '@deriv/api';\nimport './CFDPlatformsList.scss';\n\nconst CFDPlatformsListEmptyState = () => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { data: walletAccountsList } = useWalletAccountsList();\n    const history = useHistory();\n\n    const fiatAccount = useMemo(\n        () => walletAccountsList?.find(account => account.account_type === 'doughflow'),\n        [walletAccountsList]\n    );\n\n    return (\n        <div className='wallets-cfd-list__cfd-empty-state'>\n            <p className='wallets-cfd-list__cfd-empty-state__description'>\n                To trade CFDs, you’ll need to use your {fiatAccount?.wallet_currency_type} Wallet. Click Transfer to\n                move your {activeWallet?.currency} to your {fiatAccount?.wallet_currency_type} Wallet.\n            </p>\n            <button\n                className='wallets-cfd-list__cfd-empty-state__transfer-button'\n                onClick={() => history.push('/wallets/cashier/transfer')}\n            >\n                Transfer\n            </button>\n        </div>\n    );\n};\n\nexport default CFDPlatformsListEmptyState;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_46860_196174)\"><path d=\"M0 9a9 9 0 019-9h30a9 9 0 019 9v30a9 9 0 01-9 9H9a9 9 0 01-9-9V9z\" fill=\"#E22526\" /><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM45.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#B51E1E\" /><path d=\"M13.51 25.607c0-.798.126-1.547.378-2.247a5.394 5.394 0 011.134-1.848 5.289 5.289 0 011.785-1.26c.7-.308 1.498-.462 2.394-.462a7.26 7.26 0 011.617.168c.49.098.966.245 1.428.44l-.65 2.5a7.886 7.886 0 00-.967-.294 5.049 5.049 0 00-1.176-.126c-.924 0-1.617.287-2.079.86-.448.575-.672 1.33-.672 2.269 0 .994.21 1.764.63 2.31.434.546 1.183.819 2.247.819.378 0 .784-.035 1.218-.105.434-.07.833-.182 1.197-.336l.441 2.562a7.34 7.34 0 01-1.365.399 9.004 9.004 0 01-1.806.168c-1.008 0-1.876-.147-2.604-.441-.728-.308-1.33-.721-1.806-1.24a4.994 4.994 0 01-1.029-1.826 8.153 8.153 0 01-.315-2.31zM34.49 16.577v2.793H30.1v11.76h-3.276V19.37h-4.389v-2.793H34.49z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_46860_196174\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useCtraderAccountsList } from '@deriv/api';\nimport { TradingAccountCard } from '../../../../../components';\nimport { WalletButton, WalletText } from '../../../../../components/Base';\nimport CTrader from '../../../../../public/images/ctrader.svg';\nimport './AddedCTraderAccountsList.scss';\n\nconst AddedCTraderAccountsList: React.FC = () => {\n    const history = useHistory();\n    const { data: cTraderAccounts } = useCtraderAccountsList();\n\n    const leading = () => (\n        <div className='wallets-added-ctrader-accounts__icon'>\n            <CTrader />\n        </div>\n    );\n\n    const trailing = () => (\n        <div className='wallets-added-ctrader-accounts__actions'>\n            <WalletButton\n                onClick={() => {\n                    history.push('/wallets/cashier/transfer');\n                }}\n                text='Transfer'\n                variant='outlined'\n            />\n            <WalletButton text='Open' />\n        </div>\n    );\n\n    return (\n        <div className='wallets-added-ctrader-accounts'>\n            <TradingAccountCard leading={() => leading()} trailing={() => trailing()}>\n                <div className='wallets-added-ctrader-accounts__details'>\n                    {cTraderAccounts?.map(account => (\n                        <React.Fragment key={`added-ctrader-${account.login}`}>\n                            <WalletText size='sm'>Deriv cTrader</WalletText>\n                            <WalletText size='sm' weight='bold'>\n                                {account?.display_balance}\n                            </WalletText>\n                            <WalletText color='primary' size='sm' weight='bold'>\n                                {account.login}\n                            </WalletText>\n                        </React.Fragment>\n                    ))}\n                </div>\n            </TradingAccountCard>\n        </div>\n    );\n};\n\nexport default AddedCTraderAccountsList;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M14.174 2.118a.5.5 0 01.646.764l-2.048 1.732A7.925 7.925 0 0115.331 8c-1.154 2.927-4 5-7.334 5a7.83 7.83 0 01-3.907-1.038l-2.27 1.92a.5.5 0 11-.646-.764l2.048-1.733A7.925 7.925 0 01.664 8c1.153-2.927 4-5 7.333-5a7.83 7.83 0 013.91 1.038l2.267-1.92zM11.91 5.344l-1.332 1.128c.266.448.42.97.42 1.528 0 1.653-1.347 3-3 3-.736 0-1.411-.267-1.934-.708l-1.106.935c.918.5 1.953.773 3.04.773 2.584 0 4.877-1.55 6-4a7.047 7.047 0 00-2.088-2.656zM7.997 4c-2.578 0-4.877 1.55-6 4a7.05 7.05 0 002.087 2.656l1.333-1.128A2.98 2.98 0 014.997 8c0-1.653 1.347-3 3-3 .736 0 1.412.267 1.934.709l1.105-.935A6.336 6.336 0 007.997 4zM9.8 7.13L6.842 9.633A2 2 0 009.8 7.13zM7.997 6a2 2 0 00-1.801 2.87l2.956-2.503A1.99 1.99 0 007.997 6z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_46779_156471)\"><path d=\"M0 34.5h48V39a9 9 0 01-9 9H9a9 9 0 01-9-9v-4.5z\" fill=\"#2A3052\" /><path d=\"M40.042 34.5H0V9.262L44.872 2.18c.33.284.64.593.926.922L40.042 34.5z\" fill=\"#0364B9\" /><path d=\"M0 9a9 9 0 019-9h30c2.244 0 4.296.822 5.872 2.18L0 9.262V9zM40.042 34.5l5.756-31.398A8.963 8.963 0 0148 9v25.5h-7.958z\" fill=\"#0A559E\" /><path d=\"M11.013 14.526c.216.396.462.888.738 1.476.288.576.582 1.206.882 1.89.312.672.618 1.362.918 2.07l.846 1.998.846-1.998c.3-.708.6-1.398.9-2.07.312-.684.606-1.314.882-1.89.288-.588.54-1.08.756-1.476h2.556c.12.828.228 1.758.324 2.79.108 1.02.198 2.088.27 3.204.084 1.104.156 2.214.216 3.33.072 1.116.132 2.166.18 3.15h-2.736a323.856 323.856 0 00-.144-3.96 106.97 106.97 0 00-.27-4.32l-.72 1.674-.792 1.836c-.252.612-.498 1.2-.738 1.764-.24.552-.444 1.026-.612 1.422h-1.962c-.168-.396-.372-.87-.612-1.422-.24-.564-.492-1.152-.756-1.764-.252-.612-.51-1.224-.774-1.836l-.72-1.674a106.97 106.97 0 00-.27 4.32c-.06 1.428-.108 2.748-.144 3.96H7.341c.048-.984.102-2.034.162-3.15l.216-3.33c.084-1.116.174-2.184.27-3.204.108-1.032.222-1.962.342-2.79h2.682zM32.032 14.526v2.394H28.27V27h-2.808V16.92H21.7v-2.394h10.332zM37.977 23.328a1.77 1.77 0 00-.234-.918c-.157-.276-.427-.504-.81-.684-.385-.18-.9-.318-1.548-.414-.648-.096-1.465-.144-2.448-.144.132-1.116.24-2.25.324-3.402.083-1.152.15-2.232.197-3.24h6.75v2.25h-4.5c-.023.432-.053.852-.09 1.26a18.04 18.04 0 01-.09 1.044c1.753.12 3.043.534 3.87 1.242.84.696 1.26 1.668 1.26 2.916 0 .576-.102 1.11-.306 1.602-.203.492-.51.918-.917 1.278-.409.36-.925.642-1.549.846-.611.204-1.332.306-2.16.306-.323 0-.666-.024-1.026-.072a9.615 9.615 0 01-1.026-.162c-.324-.06-.617-.126-.882-.198a3.463 3.463 0 01-.611-.216l.486-2.214c.3.132.695.264 1.188.396.492.12 1.08.18 1.764.18.828 0 1.428-.162 1.8-.486.372-.336.558-.726.558-1.17zM16.307 43.221l.225.018h.315c.702 0 1.22-.177 1.557-.53.342-.355.513-.844.513-1.468 0-.654-.162-1.149-.486-1.485-.324-.336-.837-.504-1.54-.504a5.06 5.06 0 00-.296.01c-.102 0-.198.005-.288.017v3.942zm4.059-1.98c0 .54-.084 1.011-.252 1.413a2.596 2.596 0 01-.72 1 3.008 3.008 0 01-1.125.593 5.237 5.237 0 01-1.494.198c-.252 0-.546-.012-.882-.036a6.766 6.766 0 01-.99-.126v-6.075c.324-.06.66-.099 1.008-.117.354-.024.657-.036.909-.036.534 0 1.017.06 1.449.18.438.12.813.31 1.125.567.312.258.552.588.72.99.168.402.252.885.252 1.45zM23.365 38.055c.936 0 1.653.168 2.151.504.498.33.747.846.747 1.548 0 .438-.102.795-.306 1.071-.198.27-.486.483-.864.64.126.155.258.335.396.54.138.197.273.407.405.63.138.215.27.443.396.683.126.234.243.465.351.693h-1.575a74.68 74.68 0 00-.35-.62c-.115-.21-.235-.415-.36-.613-.12-.198-.24-.384-.36-.558-.12-.18-.24-.342-.36-.486h-.694v2.277h-1.404v-6.147c.306-.06.621-.102.945-.126a12.3 12.3 0 01.882-.036zm.081 1.197c-.102 0-.195.003-.279.01a35.48 35.48 0 00-.225.017v1.692h.396c.528 0 .906-.066 1.134-.198.228-.132.342-.357.342-.675 0-.306-.117-.522-.35-.648-.229-.132-.568-.198-1.018-.198zM29.264 44.364a46.903 46.903 0 01-.73-1.629 61.66 61.66 0 01-.683-1.674 87.318 87.318 0 01-.604-1.584c-.18-.504-.335-.954-.468-1.35h1.549l.387 1.17.431 1.242.432 1.188c.139.378.268.705.387.981.114-.276.24-.603.378-.98.145-.379.288-.775.433-1.189.15-.414.294-.828.431-1.242.145-.42.276-.81.396-1.17h1.494c-.138.396-.297.846-.477 1.35a61.66 61.66 0 01-1.278 3.258c-.24.564-.483 1.107-.729 1.63h-1.35z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_46779_156471\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_46779_156493)\"><path d=\"M0 34.5h48V39a9 9 0 01-9 9H9a9 9 0 01-9-9v-4.5z\" fill=\"#71BD0E\" /><path d=\"M40.042 34.5H0V9.262L44.872 2.18c.33.284.64.593.926.922L40.042 34.5z\" fill=\"#0364B9\" /><path d=\"M0 9a9 9 0 019-9h30c2.244 0 4.296.822 5.872 2.18L0 9.262V9zM40.042 34.5l5.756-31.398A8.963 8.963 0 0148 9v25.5h-7.958z\" fill=\"#0A559E\" /><path d=\"M11.013 14.526c.216.396.462.888.738 1.476.288.576.582 1.206.882 1.89.312.672.618 1.362.918 2.07l.846 1.998.846-1.998c.3-.708.6-1.398.9-2.07.312-.684.606-1.314.882-1.89.288-.588.54-1.08.756-1.476h2.556c.12.828.228 1.758.324 2.79.108 1.02.198 2.088.27 3.204.084 1.104.156 2.214.216 3.33.072 1.116.132 2.166.18 3.15h-2.736a323.856 323.856 0 00-.144-3.96 106.97 106.97 0 00-.27-4.32l-.72 1.674-.792 1.836c-.252.612-.498 1.2-.738 1.764-.24.552-.444 1.026-.612 1.422h-1.962c-.168-.396-.372-.87-.612-1.422-.24-.564-.492-1.152-.756-1.764-.252-.612-.51-1.224-.774-1.836l-.72-1.674a106.97 106.97 0 00-.27 4.32c-.06 1.428-.108 2.748-.144 3.96H7.341c.048-.984.102-2.034.162-3.15l.216-3.33c.084-1.116.174-2.184.27-3.204.108-1.032.222-1.962.342-2.79h2.682zM32.032 14.526v2.394H28.27V27h-2.808V16.92H21.7v-2.394h10.332zM37.977 23.328a1.77 1.77 0 00-.234-.918c-.157-.276-.427-.504-.81-.684-.385-.18-.9-.318-1.548-.414-.648-.096-1.465-.144-2.448-.144.132-1.116.24-2.25.324-3.402.083-1.152.15-2.232.197-3.24h6.75v2.25h-4.5c-.023.432-.053.852-.09 1.26a18.04 18.04 0 01-.09 1.044c1.753.12 3.043.534 3.87 1.242.84.696 1.26 1.668 1.26 2.916 0 .576-.102 1.11-.306 1.602-.203.492-.51.918-.917 1.278-.409.36-.925.642-1.549.846-.611.204-1.332.306-2.16.306-.323 0-.666-.024-1.026-.072a9.615 9.615 0 01-1.026-.162c-.324-.06-.617-.126-.882-.198a3.463 3.463 0 01-.611-.216l.486-2.214c.3.132.695.264 1.188.396.492.12 1.08.18 1.764.18.828 0 1.428-.162 1.8-.486.372-.336.558-.726.558-1.17zM17.31 44.369v-6.237h4.176v1.179h-2.772v1.305h2.466v1.179h-2.466v2.574H17.31zM22.478 38.132h1.404v6.237h-1.404v-6.237zM29.51 44.369a31.385 31.385 0 00-1.304-2.115 21.51 21.51 0 00-1.494-1.971v4.086h-1.386v-6.237h1.143c.198.198.417.44.657.729.24.288.483.597.729.927.252.324.5.663.747 1.017.246.348.477.684.693 1.008v-3.681h1.395v6.237h-1.18z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_46779_156493\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_46779_156515)\"><path d=\"M39 0H9a9 9 0 00-9 9v26.25h48V9a9 9 0 00-9-9z\" fill=\"#0364B9\" /><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM48 9c0-2.256-.83-4.32-2.202-5.899L39.904 35.25 48 35.25V9z\" fill=\"#0A559E\" /><path d=\"M0 34.5h48V39a9 9 0 01-9 9H9a9 9 0 01-9-9v-4.5z\" fill=\"#0CC\" /><path d=\"M11.02 14.526c.215.396.461.888.737 1.476.288.576.582 1.206.882 1.89.312.672.618 1.362.918 2.07l.846 1.998.846-1.998c.3-.708.6-1.398.9-2.07.312-.684.606-1.314.882-1.89.288-.588.54-1.08.756-1.476h2.556c.12.828.228 1.758.324 2.79.108 1.02.198 2.088.27 3.204.084 1.104.156 2.214.216 3.33.072 1.116.132 2.166.18 3.15h-2.736a323.856 323.856 0 00-.144-3.96 106.97 106.97 0 00-.27-4.32l-.72 1.674-.792 1.836c-.252.612-.498 1.2-.738 1.764-.24.552-.444 1.026-.612 1.422H13.36c-.168-.396-.372-.87-.612-1.422-.24-.564-.492-1.152-.756-1.764-.252-.612-.51-1.224-.774-1.836l-.72-1.674a106.97 106.97 0 00-.27 4.32c-.06 1.428-.108 2.748-.144 3.96H7.347c.048-.984.102-2.034.162-3.15l.216-3.33c.084-1.116.174-2.184.27-3.204.108-1.032.222-1.962.342-2.79h2.682zM32.038 14.526v2.394h-3.762V27h-2.808V16.92h-3.762v-2.394h10.332zM37.982 23.328a1.77 1.77 0 00-.234-.918c-.156-.276-.426-.504-.81-.684-.384-.18-.9-.318-1.548-.414-.648-.096-1.464-.144-2.448-.144.132-1.116.24-2.25.324-3.402.084-1.152.15-2.232.198-3.24h6.75v2.25h-4.5c-.024.432-.054.852-.09 1.26a18.04 18.04 0 01-.09 1.044c1.752.12 3.042.534 3.87 1.242.84.696 1.26 1.668 1.26 2.916 0 .576-.102 1.11-.306 1.602-.204.492-.51.918-.918 1.278-.408.36-.924.642-1.548.846-.612.204-1.332.306-2.16.306-.324 0-.666-.024-1.026-.072a9.615 9.615 0 01-1.026-.162c-.324-.06-.618-.126-.882-.198a3.463 3.463 0 01-.612-.216l.486-2.214c.3.132.696.264 1.188.396.492.12 1.08.18 1.764.18.828 0 1.428-.162 1.8-.486.372-.336.558-.726.558-1.17zM16.964 43.307c.198 0 .36-.015.486-.045.132-.036.237-.081.315-.135a.48.48 0 00.162-.207.722.722 0 00.045-.261c0-.204-.096-.372-.288-.504-.192-.138-.522-.285-.99-.441a8.642 8.642 0 01-.612-.243 2.45 2.45 0 01-.549-.351 1.754 1.754 0 01-.396-.513 1.635 1.635 0 01-.153-.738c0-.288.054-.546.162-.774.108-.234.261-.432.46-.594.197-.162.437-.285.72-.37.281-.09.6-.134.953-.134.42 0 .783.045 1.09.135.305.09.557.189.755.297l-.405 1.107a3.496 3.496 0 00-.585-.234 2.374 2.374 0 00-.765-.108c-.336 0-.579.048-.729.144-.144.09-.216.23-.216.423 0 .114.027.21.081.288.054.078.13.15.225.216.102.06.216.117.342.17.132.049.276.1.432.154.324.12.606.24.846.36.24.114.438.249.594.405.162.156.282.339.36.549.078.21.117.465.117.765 0 .582-.204 1.035-.612 1.359-.408.318-1.023.477-1.845.477-.276 0-.525-.018-.747-.054a4.527 4.527 0 01-.594-.117 3.727 3.727 0 01-.44-.153 3.616 3.616 0 01-.307-.153l.396-1.116c.186.102.414.195.684.279.276.078.612.117 1.008.117zM24.599 38.807c.072.246.15.525.234.837l.279.954.306.99c.102.33.2.636.297.918.078-.306.156-.64.234-1 .084-.36.162-.731.234-1.115.072-.384.14-.765.207-1.143.072-.384.138-.753.198-1.107h1.458a61.47 61.47 0 01-.73 3.177 44.455 44.455 0 01-.881 3.06h-1.287a42.39 42.39 0 01-.612-1.81c-.198-.635-.393-1.271-.585-1.907l-.576 1.908c-.192.63-.393 1.233-.603 1.809h-1.287a48.004 48.004 0 01-.891-3.06 68.177 68.177 0 01-.72-3.177h1.52a64.524 64.524 0 00.424 2.25c.078.384.156.756.234 1.116.084.36.168.693.252.999.108-.294.213-.606.315-.936.102-.33.2-.66.297-.99.096-.33.183-.648.26-.954l.226-.82h1.197zM28.948 44.378V38.14h4.176v1.179h-2.772v1.305h2.466v1.179h-2.466v2.574h-1.404z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_46779_156515\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport DerivedMT5Icon from '../../public/images/mt5-derived.svg';\nimport FinancialMT5Icon from '../../public/images/mt5-financial.svg';\nimport SwapFreeMT5Icon from '../../public/images/mt5-swap-free.svg';\nimport { TPlatforms } from '../../types';\n\nexport const MarketTypeDetails = {\n    all: {\n        description:\n            'Trade swap-free CFDs on MT5 with synthetics, forex, stocks, stock indices, cryptocurrencies and ETFs',\n        icon: <SwapFreeMT5Icon />,\n        title: 'Swap-Free',\n    },\n    financial: {\n        description: 'This account offers CFDs on financial instruments.',\n        icon: <FinancialMT5Icon />,\n        title: 'Financial',\n    },\n    synthetic: {\n        description: 'This account offers CFDs on derived instruments.',\n        icon: <DerivedMT5Icon />,\n        title: 'Derived',\n    },\n} as const;\n\nexport const PlatformToTitleMapper: Record<TPlatforms.All, string> = {\n    ctrader: 'Deriv cTrader',\n    derivez: 'Deriv EZ',\n    dxtrade: 'Deriv X',\n    mt5: 'Deriv MT5',\n};\n","import React from 'react';\nimport { WalletButton } from '../../../../components/Base';\nimport useDevice from '../../../../hooks/useDevice';\nimport PasswordShowIcon from '../../../../public/images/ic-password-show.svg';\nimport { TPlatforms } from '../../../../types';\nimport { PlatformToTitleMapper } from '../../constants';\nimport './CreatePassword.scss';\n\n// TODO: Refactor the unnecessary props out once FlowProvider is integrated\ntype TProps = {\n    icon: React.ReactNode;\n    isLoading?: boolean;\n    onPasswordChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPrimaryClick: () => void;\n    password: string;\n    platform: TPlatforms.All;\n};\n\nconst CreatePassword: React.FC<TProps> = ({\n    icon,\n    isLoading,\n    onPasswordChange,\n    onPrimaryClick,\n    password,\n    platform,\n}) => {\n    const { isMobile } = useDevice();\n\n    const title = PlatformToTitleMapper[platform];\n    return (\n        <div className='wallets-create-password'>\n            {!isMobile && icon}\n            <div className='wallets-create-password-title'>Create a {title} password</div>\n            <span className='wallets-create-password-subtitle'>\n                You can use this password for all your {title} accounts.\n            </span>\n            <div className='wallets-create-password-input'>\n                <input onChange={onPasswordChange} placeholder={`${title} password`} type='password' />\n                <PasswordShowIcon className='wallets-create-password-input-trailing-icon' />\n            </div>\n            {!isMobile && (\n                <WalletButton\n                    disabled={!password || isLoading}\n                    onClick={onPrimaryClick}\n                    size='lg'\n                    text={`Create ${title} password`}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default CreatePassword;\n","import React from 'react';\nimport { WalletButton } from '../../../../components/Base';\nimport useDevice from '../../../../hooks/useDevice';\nimport PasswordShowIcon from '../../../../public/images/ic-password-show.svg';\nimport { TMarketTypes, TPlatforms } from '../../../../types';\nimport { PlatformToTitleMapper } from '../../constants';\nimport './EnterPassword.scss';\n\n// TODO: Refactor the unnecessary props out once FlowProvider is integrated\ntype TProps = {\n    isLoading?: boolean;\n    marketType: TMarketTypes.CreateOtherCFDAccount;\n    onPasswordChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPrimaryClick?: () => void;\n    onSecondaryClick?: () => void;\n    password: string;\n    platform: TPlatforms.All;\n};\n\nconst EnterPassword: React.FC<TProps> = ({\n    isLoading,\n    marketType,\n    onPasswordChange,\n    onPrimaryClick,\n    onSecondaryClick,\n    password,\n    platform,\n}) => {\n    const { isDesktop } = useDevice();\n    const title = PlatformToTitleMapper[platform];\n    return (\n        <div className='wallets-enter-password'>\n            <div className='wallets-enter-password--container'>\n                {isDesktop && <div className='wallets-enter-password-title'>Enter your {title} password</div>}\n                <span className='wallets-enter-password-subtitle'>\n                    Enter your {title} password to add a {title} {marketType} account.\n                </span>\n                <div className='wallets-enter-password-input'>\n                    <input onChange={onPasswordChange} placeholder={`${title} password`} type='password' />\n                    <PasswordShowIcon className='wallets-create-password-input-trailing-icon' />\n                </div>\n            </div>\n            {isDesktop && (\n                <div className='wallets-enter-password-buttons'>\n                    <WalletButton onClick={onSecondaryClick} size='lg' text='Forgot password?' variant='outlined' />\n                    <WalletButton\n                        disabled={!password || isLoading}\n                        onClick={onPrimaryClick}\n                        size='lg'\n                        text='Add account'\n                    />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default EnterPassword;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"none\" {...props}><rect width=\"32\" height=\"32\" rx=\"16\" fill=\"#D6DADB\" /><path d=\"M16.375 7.75a1 1 0 011 1v5.875h5.875a1 1 0 011 1v.75a1 1 0 01-1 1h-5.875v5.875a1 1 0 01-1 1h-.75a1 1 0 01-1-1v-5.875H8.75a1 1 0 01-1-1v-.75a1 1 0 011-1h5.875V8.75a1 1 0 011-1h.75z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"122\" height=\"108\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M95.785 100H4.215C1.915 100 0 98.084 0 95.785V4.215C0 1.915 1.916 0 4.215 0h91.57C98.085 0 100 1.916 100 4.215v91.187c0 2.682-1.916 4.598-4.215 4.598z\" fill=\"#BCE4E5\" /><path opacity=\".5\" d=\"M85.44 82.375H14.56c-2.3 0-3.832-1.915-3.832-3.831V65.517c0-2.299 1.916-3.831 3.831-3.831h70.499c2.298 0 3.831 1.916 3.831 3.831v13.027c.383 1.916-1.533 3.831-3.448 3.831z\" fill=\"#fff\" /><path d=\"M24.904 72.03l2.3 1.15-1.15 1.533-2.3-1.533v2.682H21.84V73.18l-2.299 1.533-1.15-1.533 2.3-1.15-2.3-1.149 1.15-1.915 2.3 1.532v-2.682h1.915v2.682l2.299-1.532 1.15 1.532-2.3 1.533zm13.41 0l2.3 1.15-1.15 1.533-2.3-1.533v2.682h-1.532V73.18l-2.298 1.533-1.15-1.533 2.299-1.15-2.299-1.149 1.15-1.915 2.298 1.532v-2.682h1.916v2.682l2.299-1.532 1.15 1.532-2.683 1.533zm13.793 0l2.3 1.15-1.15 1.533-2.299-1.533v2.682h-1.916V73.18l-2.299 1.533-1.149-1.533 2.299-1.15-2.299-1.149 1.15-1.532 2.298 1.532V68.2h1.916v2.682l2.299-1.532 1.15 1.532-2.3 1.15zm13.41 0l2.3 1.15-1.15 1.533-2.3-1.533v2.682h-1.915V73.18l-2.299 1.533-1.15-1.533 2.3-1.15-2.3-1.149 1.15-1.532 2.3 1.532V68.2h1.915v2.682l2.299-1.532 1.15 1.532-2.3 1.15zm13.793 0l2.3 1.15-1.15 1.533-2.299-1.533v2.682h-1.916V73.18l-2.299 1.533-1.149-1.533 2.299-1.15-2.299-1.532 1.15-1.532 2.298 1.532v-2.682h1.916v2.682l2.299-1.532 1.15 1.532-2.3 1.533z\" fill=\"#fff\" /><path opacity=\".5\" d=\"M50.191 53.257c12.273 0 22.223-9.95 22.223-22.222 0-12.273-9.95-22.223-22.223-22.223S27.97 18.762 27.97 31.035s9.95 22.222 22.222 22.222z\" fill=\"#fff\" /><path d=\"M58.62 29.502H40.996c-1.15 0-2.299 1.15-2.299 2.299v10.728c0 1.15 1.15 2.299 2.299 2.299H58.62c1.15 0 2.3-1.15 2.3-2.299V32.184c.382-1.532-.767-2.682-2.3-2.682zM51.724 41.38h-3.065l.766-4.215c-.766-.383-1.15-1.15-1.15-1.916 0-1.15.767-2.299 2.3-2.299 1.149 0 2.298.767 2.298 2.3 0 .766-.383 1.532-1.15 1.915v4.215zm-6.897-13.41l-.383-1.533c-.766-3.065 1.15-5.747 4.215-6.514 3.065-.766 5.747 1.15 6.513 4.215l.383 1.533 3.065-.767-.383-1.532c-.766-4.598-5.364-7.663-9.961-6.514-4.598.767-7.663 5.364-6.514 9.962l.383 1.533 2.682-.384z\" fill=\"#72AEB2\" /><path opacity=\".2\" d=\"M62.452 89.655H37.548c-.766 0-1.15-.383-1.15-1.15 0-.765.384-1.149 1.15-1.149h24.904c.766 0 1.15.384 1.15 1.15 0 .766-.384 1.15-1.15 1.15z\" fill=\"#000\" /><path d=\"M100 108c12.15 0 22-9.85 22-22s-9.85-22-22-22-22 9.85-22 22 9.85 22 22 22z\" fill=\"#72AEB2\" /><path d=\"M107.383 94.752h-4.224l-3.624-6.168h-.072l-3.528 6.168H92l5.376-8.664L92.263 78h4.248l3.264 5.664h.072L103.16 78h3.936l-5.16 8.16 5.448 8.592z\" fill=\"#fff\" /></svg>);","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount, useCreateOtherCFDAccount, useDxtradeAccountsList } from '@deriv/api';\nimport { ModalWrapper, WalletButton } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport DxTradePasswordIcon from '../../../../public/images/ic-dxtrade-password.svg';\nimport { CreatePassword, Success } from '../../screens';\nimport './DxtradeEnterPasswordModal.scss';\n\nconst DxtradeEnterPasswordModal = () => {\n    const history = useHistory();\n    const [password, setPassword] = useState('');\n    const { isLoading, isSuccess, mutate } = useCreateOtherCFDAccount();\n    const { data: dxtradeAccount, isSuccess: dxtradeAccountListSuccess } = useDxtradeAccountsList();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { hide } = useModal();\n    const accountType = activeWallet?.is_virtual ? 'demo' : 'real';\n\n    const onSubmit = () => {\n        mutate({\n            payload: {\n                account_type: accountType,\n                market_type: 'all',\n                password,\n                platform: 'dxtrade',\n            },\n        });\n    };\n\n    const successDescription =\n        accountType === 'demo'\n            ? 'Transfer virtual funds from your Demo Wallet to your Deriv X Demo account to practise trading.'\n            : `Transfer funds from your ${activeWallet?.currency} Wallet to your Deriv X account to start trading.`;\n\n    const dxtradeBalance = dxtradeAccount?.find(account => account.market_type === 'all')?.display_balance;\n\n    return (\n        <ModalWrapper hideCloseButton={isSuccess}>\n            {isSuccess && dxtradeAccountListSuccess && (\n                <Success\n                    description={successDescription}\n                    displayBalance={dxtradeBalance || ''}\n                    marketType='all'\n                    platform='dxtrade'\n                    renderButton={() => (\n                        <div className='wallets-dxtrade-enter-password__button'>\n                            <WalletButton onClick={hide} size='lg' text='Maybe later' variant='outlined' />\n                            <WalletButton\n                                onClick={() => {\n                                    hide();\n                                    history.push('/wallets/cashier/transfer');\n                                }}\n                                size='lg'\n                                text='Transfer funds'\n                            />\n                        </div>\n                    )}\n                    title={`Your Deriv X${accountType === 'demo' ? ` ${accountType}` : ''} account is ready`}\n                />\n            )}\n            {!isSuccess && (\n                <CreatePassword\n                    icon={<DxTradePasswordIcon />}\n                    isLoading={isLoading}\n                    onPasswordChange={e => setPassword(e.target.value)}\n                    onPrimaryClick={onSubmit}\n                    password={password}\n                    platform='dxtrade'\n                />\n            )}\n        </ModalWrapper>\n    );\n};\n\nexport default DxtradeEnterPasswordModal;\n","import { createContext, useContext } from 'react';\n\ntype TDynamicLeverageContext = {\n    isDynamicLeverageVisible: boolean;\n    toggleDynamicLeverage: () => void;\n};\n\nconst DynamicLeverageContext = createContext<TDynamicLeverageContext>({\n    isDynamicLeverageVisible: false,\n    toggleDynamicLeverage: () => null,\n});\n\nexport const useDynamicLeverageModalState = () => {\n    const context = useContext(DynamicLeverageContext);\n\n    if (!context)\n        throw new Error(\n            'useDynamicLeverageModalState() must be called within a component wrapped in DynamicLeverageProvider.'\n        );\n\n    return context;\n};\n\nexport default DynamicLeverageContext;\n","import React, { FC } from 'react';\nimport { WalletText } from '../../../../components/Base';\nimport './DynamicLeverageTableColumnHeader.scss';\n\ntype TDynamicLeverageTableColumnHeader = {\n    subtitle: string;\n    title: string;\n};\n\nexport const DynamicLeverageTableColumnHeader: FC<TDynamicLeverageTableColumnHeader> = ({ subtitle, title }) => (\n    <div className='wallets-dynamic-leverage-screen__table-cell'>\n        <WalletText align='center' size='sm' weight='bold'>\n            {title}\n        </WalletText>\n        <WalletText align='center' size='xs'>\n            {subtitle}\n        </WalletText>\n    </div>\n);\n","import React, { FC } from 'react';\nimport { WalletText } from '../../../../components/Base';\nimport { THooks } from '../../../../types';\nimport { DynamicLeverageTableColumnHeader } from './DynamicLeverageTableColumnHeader';\nimport './DynamicLeverageMarketCard.scss';\n\ntype TDynamicLeverageMarketCardProps = THooks.DynamicLeverage;\n\nexport const DynamicLeverageMarketCard: FC<TDynamicLeverageMarketCardProps> = ({\n    data,\n    description,\n    leverage,\n    title,\n}) => (\n    <div className='wallets-dynamic-leverage-modal__market'>\n        <div className='wallets-dynamic-leverage-modal__market-title'>\n            <WalletText align='center' data-testid='market_title' size='sm' weight='bold'>\n                {title}\n            </WalletText>\n            {description && (\n                <WalletText align='center' data-testid='description_title' fontStyle='italic' size='2xs'>\n                    {description}\n                </WalletText>\n            )}\n            <WalletText align='center' color='error' data-testid='leverage_title' size='xs'>\n                {leverage}\n            </WalletText>\n        </div>\n        <div className='wallets-dynamic-leverage-modal__market-table'>\n            <div className='wallets-dynamic-leverage-modal__market-table-header-row'>\n                <DynamicLeverageTableColumnHeader subtitle='(lots)' title='From' />\n                <DynamicLeverageTableColumnHeader subtitle='(lots)' title='to' />\n                <DynamicLeverageTableColumnHeader subtitle='(1:x)' title='Leverage' />\n            </div>\n            <div>\n                {data?.map(columns => (\n                    <div\n                        className='wallets-dynamic-leverage-modal__market-table-row'\n                        key={`${columns.from}-${columns.to}-${columns.leverage}`}\n                    >\n                        {Object.entries(columns).map(([columnKey, value]) => (\n                            <div key={`${title}_${columnKey}_${value}`}>\n                                <WalletText align='center' size='sm'>\n                                    {value}\n                                </WalletText>\n                            </div>\n                        ))}\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useDynamicLeverage } from '@deriv/api';\nimport { WalletText } from '../../../../components';\nimport { useDynamicLeverageModalState } from '../../components/DynamicLeverageContext';\nimport { DynamicLeverageMarketCard } from './DynamicLeverageMarketCard';\nimport './DynamicLeverageScreen.scss';\n\nconst DynamicLeverageScreen = () => {\n    const { data: dynamicLeverages } = useDynamicLeverage();\n    const { isDynamicLeverageVisible } = useDynamicLeverageModalState();\n\n    return (\n        <div\n            className={classNames('wallets-dynamic-leverage-screen__container', {\n                'wallets-dynamic-leverage-screen__container--flip': isDynamicLeverageVisible,\n            })}\n        >\n            <WalletText>\n                Enjoy dynamic leverage of <strong>up to 1:1500</strong> when trading selected instruments in the forex,\n                commodities, cryptocurrencies, and stock indices markets. Our dynamic leverage adjusts automatically to\n                your trading position, based on asset type and trading volume.\n            </WalletText>\n            <div className='wallets-dynamic-leverage-screen__content'>\n                {dynamicLeverages.map(market => (\n                    <DynamicLeverageMarketCard\n                        data={market.data}\n                        description={market.description}\n                        key={`dynamic-leverage-screen__${market.key}`}\n                        leverage={market.leverage}\n                        title={market.title}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\nexport default DynamicLeverageScreen;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_18916_80425)\"><path d=\"M8.707.293a1 1 0 010 1.414L3.414 7 15 7a1 1 0 110 2L3.414 8.999l5.293 5.294a1 1 0 11-1.414 1.414l-7-7-.073-.082a1.096 1.096 0 01-.007-.008l.08.09a1.009 1.009 0 01-.289-.617A1.035 1.035 0 010 8v-.02c0-.023.002-.046.004-.07L0 8a1.008 1.008 0 01.213-.617c.025-.031.051-.062.08-.09l7-7a1 1 0 011.414 0z\" fill=\"#333\" /></g><defs><clipPath id=\"clip0_18916_80425\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React, { FC } from 'react';\nimport { WalletText } from '../../../../components';\nimport useDevice from '../../../../hooks/useDevice';\nimport BackArrow from '../../../../public/images/ic-back-arrow.svg';\nimport { useDynamicLeverageModalState } from '../../components/DynamicLeverageContext';\nimport './DynamicLeverageTitle.scss';\n\nexport const DynamicLeverageTitle: FC = () => {\n    const { isMobile } = useDevice();\n\n    const { toggleDynamicLeverage } = useDynamicLeverageModalState();\n\n    return (\n        <div className='wallets-dynamic-leverage-screen__title'>\n            <BackArrow\n                className='wallets-dynamic-leverage-screen__title-back'\n                data-testid='back_icon'\n                onClick={toggleDynamicLeverage}\n            />\n            <WalletText color='prominent' size={isMobile ? 'sm' : 'md'} weight='bold'>\n                Get more out of Deriv MT5 Financial\n            </WalletText>\n        </div>\n    );\n};\n\nexport default DynamicLeverageTitle;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M7.031 2.165a1.5 1.5 0 011.938 0l5.854 4.953a.5.5 0 11-.646.764L13 6.886V12.5a1.5 1.5 0 01-1.5 1.5h-7A1.5 1.5 0 013 12.5V6.886l-1.177.996a.5.5 0 11-.646-.764l5.854-4.953zM4 6.04v6.46a.5.5 0 00.5.5H6v-2.5A1.5 1.5 0 017.5 9h1a1.5 1.5 0 011.5 1.5V13h1.5a.5.5 0 00.5-.5V6.04L8.323 2.928a.5.5 0 00-.646 0L4 6.04zM9 13v-2.5a.5.5 0 00-.5-.5h-1a.5.5 0 00-.5.5V13h2z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M2.5 3A1.5 1.5 0 001 4.5v7A1.5 1.5 0 002.5 13h11a1.5 1.5 0 001.5-1.5v-7A1.5 1.5 0 0013.5 3h-11zM0 4.5A2.5 2.5 0 012.5 2h11A2.5 2.5 0 0116 4.5v7a2.5 2.5 0 01-2.5 2.5h-11A2.5 2.5 0 010 11.5v-7z\" fill=\"#333\" /><path d=\"M9 6.5a.5.5 0 01.5-.5h4a.5.5 0 010 1h-4a.5.5 0 01-.5-.5zM9 8a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3A.5.5 0 019 8zM9 9.5a.5.5 0 01.5-.5h3a.5.5 0 010 1h-3a.5.5 0 01-.5-.5z\" fill=\"#333\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3 7a2 2 0 113.453 1.375A3 3 0 018 11H2a3 3 0 011.547-2.625A1.993 1.993 0 013 7zm2 1a1 1 0 100-2 1 1 0 000 2zm-1.732 2a2 2 0 013.464 0H3.268z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><g clipPath=\"url(#clip0_18861_79947)\" fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"#333\"><path d=\"M8 15A7 7 0 108 1a7 7 0 000 14zm0 1A8 8 0 108 0a8 8 0 000 16z\" /><path d=\"M4 8a.5.5 0 01.5-.5h7a.5.5 0 010 1h-7A.5.5 0 014 8z\" /></g><defs><clipPath id=\"clip0_18861_79947\"><path fill=\"#fff\" d=\"M0 0h16v16H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.854 2.44A1.5 1.5 0 016.914 2h2.172a1.5 1.5 0 011.06.44l1.415 1.414a.5.5 0 00.353.146H13.5A1.5 1.5 0 0115 5.5v6a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 011 11.5v-6A1.5 1.5 0 012.5 4h1.586a.5.5 0 00.353-.146l1.415-1.415zm1.06.56a.5.5 0 00-.353.146L5.146 4.561A1.5 1.5 0 014.086 5H2.5a.5.5 0 00-.5.5v6a.5.5 0 00.5.5h11a.5.5 0 00.5-.5v-6a.5.5 0 00-.5-.5h-1.586a1.5 1.5 0 01-1.06-.44L9.439 3.147A.5.5 0 009.086 3H6.914z\" fill=\"#333\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 10a2 2 0 100-4 2 2 0 000 4zm0 1a3 3 0 100-6 3 3 0 000 6z\" fill=\"#333\" /></svg>);","import { TJurisdictionCardItems } from './props.types';\n\nexport const getJurisdictionMaltainvestContents = (): TJurisdictionCardItems => ({\n    contents: {\n        financial: [\n            {\n                description: 'Synthetics, Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '140+',\n                    displayTextSkinColor: 'red-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:30',\n                    displayTextSkinColor: 'brown-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.5 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Malta Financial Services Authority (MFSA) (licence no. IS/70156)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        synthetic: [\n            {\n                description: 'Synthetics, Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '140+',\n                    displayTextSkinColor: 'red-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:30',\n                    displayTextSkinColor: 'brown-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.5 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n            },\n            {\n                description: 'Malta Financial Services Authority (MFSA) (licence no. IS/70156)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n    },\n    header: 'Malta',\n    isOverHeaderAvailable: false,\n    verificationDocs: {\n        financial: ['selfie', 'identityDocument', 'nameAndAddress'],\n        synthetic: ['selfie', 'identityDocument', 'nameAndAddress'],\n    },\n});\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#EC3F3F\" /><path d=\"M11.75 7.25h-7.5a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#FFAD3A\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 12.5a4.5 4.5 0 100-9 4.5 4.5 0 000 9zM8 14A6 6 0 108 2a6 6 0 000 12z\" fill=\"#fff\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M8 5a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5H8A.75.75 0 017.25 8V5.75A.75.75 0 018 5z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"16\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#4BB4B3\" /><path d=\"M4.78 7.845a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.06 0l5.25-5.25a.75.75 0 00-1.06-1.06L6.5 9.565l-1.72-1.72z\" fill=\"#fff\" /></svg>);","import { TJurisdictionVerificationItems, TJurisdictionVerificationStatus } from './props.types';\n\ntype TJurisdictionVerificationContents = {\n    requiredVerificationDocs: TJurisdictionVerificationItems;\n    shortDescription: string;\n    statusReferences: TJurisdictionVerificationStatus[];\n};\nexport const jurisdictionVerificationContents = (): TJurisdictionVerificationContents => ({\n    requiredVerificationDocs: {\n        documentNumber: {\n            icon: 'IcDocumentNumberVerification',\n            text: 'Document number (identity card, passport)',\n        },\n        identityNumber: {\n            icon: 'IcIdentityDocumentVerification',\n            text: 'A copy of your identity document (identity card, passport)',\n        },\n        nameAndAddress: {\n            icon: 'IcNameAndAddressVerification',\n            text: 'A recent utility bill (electricity, water or gas) or recent bank statement or government-issued letter with your name and address.',\n        },\n        notApplicable: {\n            icon: 'IcNotApplicableVerification',\n            text: '',\n        },\n        selfie: {\n            icon: 'IcSelfieVerification',\n            text: 'A selfie of yourself.',\n        },\n    },\n    shortDescription: 'We need you to submit these in order to get this account:',\n    statusReferences: [\n        {\n            color: 'yellow',\n            icon: 'verificationPendingStatusIcon',\n            text: 'Your document is pending for verification.',\n        },\n        {\n            color: 'red',\n            icon: 'verificationFailedStatusIcon',\n            text: 'Verification failed. Resubmit during account creation.',\n        },\n        {\n            color: 'green',\n            icon: 'verificationSuccessStatusIcon',\n            text: 'Your document is verified.',\n        },\n    ],\n});\n","import React, { Dispatch, FC, SetStateAction } from 'react';\nimport { WalletText } from '../../../../../components/Base/WalletText';\nimport BackArrowIcon from '../../../../../public/images/ic-back-arrow.svg';\nimport DocumentsIcon from '../../../../../public/images/ic-documents.svg';\nimport IdCardIcon from '../../../../../public/images/ic-id-card.svg';\nimport NotApplicableIcon from '../../../../../public/images/ic-not-applicable.svg';\nimport SelfieIcon from '../../../../../public/images/ic-selfie.svg';\nimport VerificationFailedStatusIcon from '../../../../../public/images/ic-verification-failed-status.svg';\nimport VerificationPendingStatusIcon from '../../../../../public/images/ic-verification-pending-status.svg';\nimport VerificationSuccessStatusIcon from '../../../../../public/images/ic-verification-success-status.svg';\nimport { jurisdictionVerificationContents } from '../jurisdiction-contents/jurisdiction-verification-contents';\nimport {\n    TJurisdictionCardItemVerification,\n    TJurisdictionCardItemVerificationItem,\n} from '../jurisdiction-contents/props.types';\nimport './JurisdictionCardBack.scss';\n\nconst verificationIconsMapper: Record<string, JSX.Element> = {\n    documentNumber: <IdCardIcon />,\n    nameAndAddress: <DocumentsIcon />,\n    notApplicable: <NotApplicableIcon />,\n    selfie: <SelfieIcon />,\n};\n\nconst verificationStatusIconsMapper: Record<string, JSX.Element> = {\n    verificationFailedStatusIcon: <VerificationFailedStatusIcon />,\n    verificationPendingStatusIcon: <VerificationPendingStatusIcon />,\n    verificationSuccessStatusIcon: <VerificationSuccessStatusIcon />,\n};\n\ntype TJurisdictionCardBackProps = {\n    setIsFlipped: Dispatch<SetStateAction<boolean>>;\n    verificationDocs?: TJurisdictionCardItemVerification;\n};\n\nconst JurisdictionCardBack: FC<TJurisdictionCardBackProps> = ({ setIsFlipped, verificationDocs }) => {\n    const verificationContents = jurisdictionVerificationContents();\n    if (verificationDocs)\n        return (\n            <div className='wallets-jurisdiction-card-back'>\n                <BackArrowIcon\n                    className='wallets-jurisdiction-card-back__icon'\n                    onClick={e => {\n                        e.stopPropagation();\n                        setIsFlipped(false);\n                    }}\n                />\n                <WalletText size='sm'>{verificationContents.shortDescription}</WalletText>\n                {verificationDocs.map((verificationDocument: TJurisdictionCardItemVerificationItem, i) => {\n                    return (\n                        <div className='wallets-jurisdiction-card-back__row' key={`${verificationDocument}-${i}`}>\n                            {verificationIconsMapper[verificationDocument]}\n                            <WalletText size='sm'>\n                                {verificationContents.requiredVerificationDocs[verificationDocument]?.text}\n                            </WalletText>\n                        </div>\n                    );\n                })}\n                <div className='wallets-jurisdiction-card-back__border' />\n                {verificationContents.statusReferences.map((statusReference, i) => {\n                    return (\n                        <div className='wallets-jurisdiction-card-back__row' key={`${statusReference}-${i}`}>\n                            {verificationStatusIconsMapper[statusReference.icon]}\n                            <WalletText size='sm'>{statusReference.text}</WalletText>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    return <></>;\n};\n\nexport default JurisdictionCardBack;\n","import React from 'react';\nimport { WalletText } from '../../../../../components/Base/WalletText';\nimport './JurisdictionCardRow.scss';\n\ntype TJurisdictionCardRowProps = {\n    description?: React.ReactNode | string;\n    renderTag?: () => React.ReactNode;\n    title: string;\n};\n\nconst JurisdictionCardRow: React.FC<TJurisdictionCardRowProps> = ({ description, renderTag, title }) => {\n    return (\n        <div className='wallets-jurisdiction-card-row'>\n            <div className='wallets-jurisdiction-card-row__header'>\n                <WalletText size='sm' weight='bold'>\n                    {title}\n                </WalletText>\n                {renderTag && <div className='wallets-jurisdiction-card-row__header-tag'>{renderTag()}</div>}\n            </div>\n            {description && <WalletText size='xs'>{description}</WalletText>}\n        </div>\n    );\n};\n\nexport default JurisdictionCardRow;\n","import React from 'react';\nimport { WalletText } from '../../../../../components/Base';\nimport './JurisdictionCardTag.scss';\n\ntype TJurisdictionCardTagProps = {\n    tag: string;\n};\nconst JurisdictionCardTag: React.FC<TJurisdictionCardTagProps> = ({ tag }) => {\n    return (\n        <div className='wallets-jurisdiction-card-tag'>\n            <WalletText align='center' color='blue' lineHeight='3xs' size='xs' weight='bold'>\n                {tag}\n            </WalletText>\n        </div>\n    );\n};\n\nexport default JurisdictionCardTag;\n","import React, { useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { WalletText } from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport DocumentsIcon from '../../../../../public/images/ic-documents.svg';\nimport IdCardIcon from '../../../../../public/images/ic-id-card.svg';\nimport NotApplicableIcon from '../../../../../public/images/ic-not-applicable.svg';\nimport SelfieIcon from '../../../../../public/images/ic-selfie.svg';\nimport { useDynamicLeverageModalState } from '../../../components/DynamicLeverageContext';\nimport { getJurisdictionContents } from '../jurisdiction-contents/jurisdiction-contents';\nimport { TJurisdictionCardItems, TJurisdictionCardSection } from '../jurisdiction-contents/props.types';\nimport JurisdictionCardBack from './JurisdictionCardBack';\nimport JurisdictionCardRow from './JurisdictionCardRow';\nimport JurisdictionCardTag from './JurisdictionCardTag';\nimport './JurisdictionCard.scss';\n\ntype TJurisdictionCardProps = {\n    isSelected: boolean;\n    jurisdiction: string;\n    onSelect: (clickedJurisdiction: string) => void;\n    tag?: string;\n};\n\nconst verificationIconsMapper: Record<string, JSX.Element> = {\n    documentNumber: <IdCardIcon />,\n    nameAndAddress: <DocumentsIcon />,\n    notApplicable: <NotApplicableIcon />,\n    selfie: <SelfieIcon />,\n};\n\nconst JurisdictionCard: React.FC<TJurisdictionCardProps> = ({ isSelected, jurisdiction, onSelect }) => {\n    const [isFlipped, setIsFlipped] = useState(false);\n\n    const { toggleDynamicLeverage } = useDynamicLeverageModalState();\n    const { modalState } = useModal();\n\n    const descriptionClickHandler = (tag?: string) => (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n        event.stopPropagation();\n        if (tag === 'dynamicLeverage') {\n            toggleDynamicLeverage();\n        } else {\n            setIsFlipped(true);\n        }\n    };\n\n    const { contents, header, isOverHeaderAvailable, overHeader, verificationDocs } = useMemo<TJurisdictionCardItems>(\n        () => getJurisdictionContents()[jurisdiction],\n        [jurisdiction]\n    );\n    const marketType = modalState?.marketType || 'all';\n    const rows = contents[marketType] || [];\n\n    const parseDescription = (row: TJurisdictionCardSection) => {\n        if (row.clickableDescription)\n            return row.clickableDescription.map(description => {\n                if (description.type === 'link') {\n                    return (\n                        <a\n                            className='wallets-jurisdiction-card__link'\n                            key={description.text}\n                            onClick={descriptionClickHandler(description.tag)}\n                        >\n                            {description.text}{' '}\n                        </a>\n                    );\n                }\n                return description.text;\n            });\n        return row.description;\n    };\n\n    return (\n        <div\n            className={classNames('wallets-jurisdiction-card', {\n                'wallets-jurisdiction-card--flip': isFlipped,\n                'wallets-jurisdiction-card--selected': isSelected,\n            })}\n            onClick={() => {\n                onSelect(jurisdiction);\n            }}\n        >\n            <React.Fragment>\n                <div className='wallets-jurisdiction-card-front'>\n                    {isOverHeaderAvailable && <JurisdictionCardTag tag={overHeader || ''} />}\n                    <div className='wallets-jurisdiction-card-front__label'>\n                        <WalletText align='center' size='lg' weight='bold'>\n                            {header}\n                        </WalletText>\n                    </div>\n                    {rows.map(row => {\n                        return (\n                            <JurisdictionCardRow\n                                description={parseDescription(row)}\n                                key={`wallets-jurisdiction-card--${row?.title}`}\n                                renderTag={() => {\n                                    if (!row?.titleIndicators) return;\n\n                                    if (\n                                        row.titleIndicators?.type === 'displayIcons' &&\n                                        verificationDocs &&\n                                        marketType &&\n                                        marketType !== 'all'\n                                    ) {\n                                        return (\n                                            <div className='wallets-jurisdiction-card-front__tag-icons'>\n                                                {!(marketType in verificationDocs)\n                                                    ? verificationIconsMapper.notApplicable\n                                                    : verificationDocs[marketType]?.map(doc => {\n                                                          return verificationIconsMapper[doc];\n                                                      })}\n                                            </div>\n                                        );\n                                    }\n\n                                    if (row?.titleIndicators?.displayText) {\n                                        return (\n                                            <div\n                                                className={`wallets-jurisdiction-card-front__tag wallets-jurisdiction-card-front__tag--${\n                                                    row.titleIndicators?.displayTextSkinColor || ''\n                                                }`}\n                                            >\n                                                <WalletText color='white' size='xs' weight='bold'>\n                                                    {row.titleIndicators.displayText}\n                                                </WalletText>\n                                            </div>\n                                        );\n                                    }\n                                }}\n                                title={row.title}\n                            />\n                        );\n                    })}\n                </div>\n                {marketType && marketType !== 'all' && verificationDocs && (\n                    <JurisdictionCardBack setIsFlipped={setIsFlipped} verificationDocs={verificationDocs[marketType]} />\n                )}\n            </React.Fragment>\n        </div>\n    );\n};\n\nexport default JurisdictionCard;\n","import { getJurisdictionMaltainvestContents } from './jurisdiction_maltainvest_contents';\nimport { getJurisdictionBviContents } from './jurisdiction-bvi-contents';\nimport { getJurisdictionLabuanContents } from './jurisdiction-labuan-contents';\nimport { getJurisdictionSvgContents } from './jurisdiction-svg-contents';\nimport { getJurisdictionVanuatuContents } from './jurisdiction-vanuatu-contents';\nimport { TJurisdictionCardItems } from './props.types';\n\nexport type TJurisdictionContent = {\n    bvi: TJurisdictionCardItems;\n    labuan: TJurisdictionCardItems;\n    maltainvest: TJurisdictionCardItems;\n    svg: TJurisdictionCardItems;\n    vanuatu: TJurisdictionCardItems;\n};\n\nexport const getJurisdictionContents = (): Record<string, TJurisdictionCardItems> => ({\n    bvi: getJurisdictionBviContents(),\n    labuan: getJurisdictionLabuanContents(),\n    maltainvest: getJurisdictionMaltainvestContents(),\n    svg: getJurisdictionSvgContents(),\n    vanuatu: getJurisdictionVanuatuContents(),\n});\n","import { TJurisdictionCardItems } from './props.types';\n\nexport const getJurisdictionBviContents = (): TJurisdictionCardItems => ({\n    contents: {\n        financial: [\n            {\n                description: 'Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '170+',\n                    displayTextSkinColor: 'red-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        tag: 'dynamicLeverage',\n                        text: 'Dynamic Leverage',\n                        type: 'link',\n                    },\n                ],\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.5 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'British Virgin Islands Financial Services Commission (License no. SIBA/L/18/1114)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        synthetic: [\n            {\n                description: 'Synthetics, Baskets and Derived FX',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '40+',\n                    displayTextSkinColor: 'red-darker',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'British Virgin Islands Financial Services Commission (License no. SIBA/L/18/1114)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n    },\n    header: 'British Virgin Islands',\n    isOverHeaderAvailable: false,\n    verificationDocs: {\n        financial: ['documentNumber', 'nameAndAddress'],\n        synthetic: ['documentNumber', 'nameAndAddress'],\n    },\n});\n","import { TJurisdictionCardItems } from './props.types';\n\nexport const getJurisdictionLabuanContents = (): TJurisdictionCardItems => ({\n    contents: {\n        financial: [\n            {\n                description: 'Forex and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '80+',\n                    displayTextSkinColor: 'red-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:100',\n                    displayTextSkinColor: 'yellow-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.6 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Labuan Financial Services Authority (licence no. MB/18/0024)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        synthetic: [\n            {\n                description: 'Forex and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Labuan Financial Services Authority (licence no. MB/18/0024)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n    },\n    header: 'Labuan',\n    isOverHeaderAvailable: true,\n    overHeader: 'Straight-through processing',\n    verificationDocs: {\n        financial: ['documentNumber', 'nameAndAddress'],\n        synthetic: ['documentNumber', 'nameAndAddress'],\n    },\n});\n","import { TJurisdictionCardItems } from './props.types';\n\nexport const getJurisdictionSvgContents = (): TJurisdictionCardItems => ({\n    contents: {\n        all: [\n            {\n                description: 'Synthetics, Forex, Stocks, Stock Indices, Cryptocurrencies, and ETFs',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '40+',\n                    displayTextSkinColor: 'red-darker',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                description: 'You will need to submit proof of identity and address once you reach certain thresholds.',\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Deriv (SVG) LLC (company no. 273 LLC 2020)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        financial: [\n            {\n                description: 'Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '170+',\n                    displayTextSkinColor: 'red-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        tag: 'dynamicLeverage',\n                        text: 'Dynamic Leverage',\n                        type: 'link',\n                    },\n                ],\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.6 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                description: 'You will need to submit proof of identity and address once you reach certain thresholds.',\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Deriv (SVG) LLC (company no. 273 LLC 2020)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        synthetic: [\n            {\n                description: 'Synthetics, Baskets and Derived FX',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '40+',\n                    displayTextSkinColor: 'red-darker',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                description: 'You will need to submit proof of identity and address once you reach certain thresholds.',\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Deriv (SVG) LLC (company no. 273 LLC 2020)',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n    },\n    header: 'St. Vincent & Grenadines',\n    isOverHeaderAvailable: false,\n    verificationDocs: {\n        financial: ['notApplicable'],\n        synthetic: ['notApplicable'],\n    },\n});\n","import { TJurisdictionCardItems } from './props.types';\n\nexport const getJurisdictionVanuatuContents = (): TJurisdictionCardItems => ({\n    contents: {\n        financial: [\n            {\n                description: 'Forex, Stock indices, Commodities and Cryptocurrencies',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '90+',\n                    displayTextSkinColor: 'red-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        tag: 'dynamicLeverage',\n                        text: 'Dynamic Leverage',\n                        type: 'link',\n                    },\n                ],\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'spreadsFrom',\n                title: 'Spreads from',\n                titleIndicators: {\n                    displayText: '0.5 pips',\n                    displayTextSkinColor: 'violet-dark',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Vanuatu Financial Services Commission',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n        synthetic: [\n            {\n                description: 'Synthetics, Baskets and Derived FX',\n                key: 'assets',\n                title: 'Assets',\n                titleIndicators: {\n                    displayText: '40+',\n                    displayTextSkinColor: 'red-darker',\n                    type: 'displayText',\n                },\n            },\n            {\n                key: 'leverage',\n                title: 'Leverage',\n                titleIndicators: {\n                    displayText: '1:1000',\n                    displayTextSkinColor: 'yellow-light',\n                    type: 'displayText',\n                },\n            },\n            {\n                clickableDescription: [\n                    {\n                        text: 'Learn more',\n                        type: 'link',\n                    },\n                    {\n                        text: 'about verifications needed.',\n                        type: 'text',\n                    },\n                ],\n                key: 'verifications',\n                title: 'Verifications',\n                titleIndicators: {\n                    type: 'displayIcons',\n                },\n            },\n            {\n                description: 'Vanuatu Financial Services Commission',\n                key: 'regulator',\n                title: 'Regulator/EDR',\n            },\n        ],\n    },\n    header: 'Vanuatu',\n    isOverHeaderAvailable: false,\n    verificationDocs: {\n        financial: ['documentNumber', 'nameAndAddress'],\n        synthetic: ['documentNumber', 'nameAndAddress'],\n    },\n});\n","import React, { FC, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useAvailableMT5Accounts } from '@deriv/api';\nimport { WalletText } from '../../../../components/Base/WalletText';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { THooks } from '../../../../types';\nimport { useDynamicLeverageModalState } from '../../components/DynamicLeverageContext';\nimport { JurisdictionCard } from './JurisdictionCard';\nimport './JurisdictionScreen.scss';\n\ntype TJurisdictionScreenProps = {\n    selectedJurisdiction: THooks.AvailableMT5Accounts['shortcode'];\n    setSelectedJurisdiction: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst JurisdictionScreen: FC<TJurisdictionScreenProps> = ({ selectedJurisdiction, setSelectedJurisdiction }) => {\n    const { modalState } = useModal();\n    const { data, isLoading } = useAvailableMT5Accounts();\n    const { isDynamicLeverageVisible } = useDynamicLeverageModalState();\n    const jurisdictions = useMemo(\n        () =>\n            data?.filter(account => account.market_type === modalState?.marketType).map(account => account.shortcode) ||\n            [],\n        [data, modalState?.marketType]\n    );\n\n    if (isLoading) return <WalletText>Loading...</WalletText>;\n\n    return (\n        <div\n            className={classNames('wallets-jurisdiction-screen', {\n                'wallets-jurisdiction-screen--flip': isDynamicLeverageVisible,\n            })}\n        >\n            <div className='wallets-jurisdiction-screen__cards'>\n                {jurisdictions.map(jurisdiction => (\n                    <JurisdictionCard\n                        isSelected={selectedJurisdiction === jurisdiction}\n                        jurisdiction={jurisdiction || 'bvi'}\n                        key={jurisdiction}\n                        onSelect={clickedJurisdiction => {\n                            if (clickedJurisdiction === selectedJurisdiction) {\n                                setSelectedJurisdiction('');\n                            } else {\n                                setSelectedJurisdiction(clickedJurisdiction);\n                            }\n                        }}\n                        tag='Straight-through processing'\n                    />\n                ))}\n            </div>\n\n            <div className='wallets-jurisdiction-screen__tnc'>\n                {selectedJurisdiction && selectedJurisdiction !== 'svg' && (\n                    <>\n                        Add Your Deriv MT5 Financial account under Deriv (V) Ltd, regulated by the Vanuatu Financial\n                        Services Commission.\n                        <div className='wallets-jurisdiction-screen__tnc-checkbox'>\n                            <input id='tnc-checkbox' type='checkbox' />\n                            <label htmlFor='tnc-checkbox' style={{ cursor: 'pointer' }}>\n                                <WalletText>I confirm and accept Deriv (V) Ltd&lsquo;s Terms and Conditions</WalletText>\n                            </label>\n                        </div>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default JurisdictionScreen;\n","import React, { useCallback, useState } from 'react';\nimport { useAvailableMT5Accounts } from '@deriv/api';\nimport { ModalStepWrapper, WalletButton } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport useDevice from '../../../../hooks/useDevice';\nimport { DynamicLeverageContext } from '../../components/DynamicLeverageContext';\nimport { MarketTypeDetails } from '../../constants';\nimport { DynamicLeverageScreen, DynamicLeverageTitle } from '../../screens/DynamicLeverage';\nimport { JurisdictionScreen } from '../../screens/Jurisdiction';\nimport { MT5PasswordModal } from '..';\nimport './JurisdictionModal.scss';\n\nconst JurisdictionModal = () => {\n    const [selectedJurisdiction, setSelectedJurisdiction] = useState('');\n    const [isDynamicLeverageVisible, setIsDynamicLeverageVisible] = useState(false);\n\n    const { modalState, show } = useModal();\n    const { isLoading } = useAvailableMT5Accounts();\n    const { isMobile } = useDevice();\n\n    const marketType = modalState?.marketType || 'all';\n    const platform = modalState?.platform || 'mt5';\n\n    const { title } = MarketTypeDetails[marketType];\n\n    const toggleDynamicLeverage = useCallback(() => {\n        setIsDynamicLeverageVisible(!isDynamicLeverageVisible);\n    }, [isDynamicLeverageVisible, setIsDynamicLeverageVisible]);\n\n    const jurisdictionTitle = `Choose a jurisdiction for your Deriv MT5 ${title} account`;\n\n    const modalFooter = isDynamicLeverageVisible\n        ? undefined\n        : () => (\n              <WalletButton\n                  disabled={!selectedJurisdiction}\n                  isFullWidth={isMobile}\n                  onClick={() => show(<MT5PasswordModal marketType={marketType} platform={platform} />)}\n                  text='Next'\n              />\n          );\n\n    if (isLoading) return <h1>Loading...</h1>;\n\n    return (\n        <DynamicLeverageContext.Provider value={{ isDynamicLeverageVisible, toggleDynamicLeverage }}>\n            <ModalStepWrapper\n                renderFooter={modalFooter}\n                shouldHideHeader={isDynamicLeverageVisible}\n                title={jurisdictionTitle}\n            >\n                {isDynamicLeverageVisible && <DynamicLeverageTitle />}\n                <div className='wallets-jurisdiction-modal'>\n                    <JurisdictionScreen\n                        selectedJurisdiction={selectedJurisdiction}\n                        setSelectedJurisdiction={setSelectedJurisdiction}\n                    />\n                    <DynamicLeverageScreen />\n                </div>\n            </ModalStepWrapper>\n        </DynamicLeverageContext.Provider>\n    );\n};\n\nexport default JurisdictionModal;\n","import React, { useState } from 'react';\nimport { ModalStepWrapper, WalletButton } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport { MT5AccountType } from '../../screens';\nimport { JurisdictionModal } from '../JurisdictionModal';\n\ntype TMarketTypes = React.ComponentProps<typeof MT5AccountType>['selectedMarketType'];\n\nconst MT5AccountTypeModal = () => {\n    const [selectedMarketType, setSelectedMarketType] = useState<TMarketTypes>(undefined);\n    const { setModalState, show } = useModal();\n\n    return (\n        <ModalStepWrapper\n            renderFooter={() => (\n                <WalletButton\n                    disabled={!selectedMarketType}\n                    onClick={() => {\n                        setModalState({\n                            marketType: selectedMarketType,\n                        });\n                        show(<JurisdictionModal />);\n                    }}\n                    text='Next'\n                />\n            )}\n            title='Select Deriv MT5’s account type'\n        >\n            <MT5AccountType onMarketTypeSelect={setSelectedMarketType} selectedMarketType={selectedMarketType} />\n        </ModalStepWrapper>\n    );\n};\n\nexport default MT5AccountTypeModal;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"122\" height=\"108\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M95.785 100H4.215C1.915 100 0 98.084 0 95.785V4.215C0 1.915 1.916 0 4.215 0h91.57C98.085 0 100 1.916 100 4.215v91.187c0 2.682-1.916 4.598-4.215 4.598z\" fill=\"#BCE4E5\" /><path opacity=\".5\" d=\"M85.44 82.375H14.56c-2.3 0-3.832-1.915-3.832-3.831V65.517c0-2.299 1.916-3.831 3.831-3.831h70.499c2.298 0 3.831 1.915 3.831 3.831v13.027c.383 1.916-1.533 3.831-3.448 3.831z\" fill=\"#fff\" /><path d=\"M24.904 72.03l2.3 1.15-1.15 1.532-2.3-1.532v2.682H21.84V73.18l-2.299 1.532-1.15-1.532 2.3-1.15-2.3-1.149 1.15-1.916 2.3 1.533v-2.682h1.915v2.682l2.299-1.533 1.15 1.533-2.3 1.532zm13.41 0l2.3 1.15-1.15 1.532-2.3-1.532v2.682h-1.532V73.18l-2.298 1.532-1.15-1.532 2.299-1.15-2.299-1.149 1.15-1.916 2.298 1.533v-2.682h1.916v2.682l2.299-1.533 1.15 1.533-2.683 1.532zm13.793 0l2.3 1.15-1.15 1.532-2.299-1.532v2.682h-1.916V73.18l-2.299 1.532-1.149-1.532 2.299-1.15-2.299-1.15 1.15-1.532 2.298 1.533v-2.682h1.916v2.682l2.299-1.533 1.15 1.533-2.3 1.15zm13.41 0l2.3 1.15-1.15 1.532-2.3-1.532v2.682h-1.915V73.18l-2.299 1.532-1.15-1.532 2.3-1.15-2.3-1.15 1.15-1.532 2.3 1.533v-2.682h1.915v2.682l2.299-1.533 1.15 1.533-2.3 1.15zm13.793 0l2.3 1.15-1.15 1.532-2.299-1.532v2.682h-1.916V73.18l-2.299 1.532-1.149-1.532 2.299-1.15-2.299-1.532 1.15-1.533 2.298 1.533v-2.682h1.916v2.682l2.299-1.533 1.15 1.533-2.3 1.532z\" fill=\"#fff\" /><path opacity=\".5\" d=\"M50.191 53.257c12.273 0 22.223-9.95 22.223-22.222 0-12.273-9.95-22.223-22.223-22.223S27.97 18.762 27.97 31.035s9.95 22.222 22.222 22.222z\" fill=\"#fff\" /><path d=\"M58.62 29.502H40.996c-1.15 0-2.299 1.15-2.299 2.299v10.728c0 1.15 1.15 2.299 2.299 2.299H58.62c1.15 0 2.3-1.15 2.3-2.3V32.185c.382-1.533-.767-2.682-2.3-2.682zm-6.896 11.877h-3.065l.766-4.214c-.766-.383-1.15-1.15-1.15-1.916 0-1.15.767-2.299 2.3-2.299 1.149 0 2.298.767 2.298 2.3 0 .765-.383 1.532-1.15 1.915v4.214zM44.827 27.97l-.383-1.533c-.766-3.066 1.15-5.748 4.215-6.514s5.747 1.15 6.513 4.215l.383 1.532 3.065-.766-.383-1.532c-.766-4.598-5.364-7.663-9.961-6.514-4.598.766-7.663 5.364-6.514 9.962l.383 1.532 2.682-.383z\" fill=\"#72AEB2\" /><path opacity=\".2\" d=\"M62.452 89.655H37.548c-.766 0-1.15-.383-1.15-1.15 0-.765.384-1.149 1.15-1.149h24.904c.766 0 1.15.384 1.15 1.15 0 .766-.384 1.15-1.15 1.15z\" fill=\"#000\" /><path d=\"M100 108c12.15 0 22-9.85 22-22s-9.85-22-22-22-22 9.85-22 22 9.85 22 22 22z\" fill=\"#72AEB2\" /><path d=\"M84.424 82.624h3.156c.552 0 1.056.088 1.512.264.456.176.844.44 1.164.792.32.344.568.78.744 1.308.176.52.264 1.128.264 1.824 0 .696-.088 1.308-.264 1.836-.176.52-.424.956-.744 1.308a3.08 3.08 0 01-1.164.78c-.456.176-.96.264-1.512.264h-3.156v-8.376zm3.156 6.756c.544 0 .972-.152 1.284-.456.312-.304.468-.792.468-1.464v-1.296c0-.672-.156-1.16-.468-1.464-.312-.304-.74-.456-1.284-.456h-1.332v5.136h1.332zm11.475-3.876h-.036l-.612 1.224-1.632 2.964-1.596-2.952-.636-1.32h-.036V91h-1.716v-8.376h1.932l2.052 3.924h.024l2.028-3.924h1.944V91h-1.716v-5.496zm7.06-1.26V91h-1.824v-6.756h-2.268v-1.62h6.36v1.62h-2.268zm8.856-.048h-3.804l-.18 2.652h.096c.08-.2.168-.38.264-.54a1.69 1.69 0 01.36-.42c.136-.12.3-.212.492-.276a2.17 2.17 0 01.684-.096c.36 0 .696.06 1.008.18a2.4 2.4 0 011.368 1.368c.136.328.204.7.204 1.116 0 .424-.072.82-.216 1.188a2.47 2.47 0 01-.624.936 2.909 2.909 0 01-1.008.624c-.4.144-.856.216-1.368.216-.408 0-.768-.044-1.08-.132a3.392 3.392 0 01-.828-.348 3.064 3.064 0 01-.624-.516 3.685 3.685 0 01-.456-.612l1.308-1.032c.184.328.404.608.66.84.256.224.6.336 1.032.336.432 0 .756-.124.972-.372.224-.248.336-.576.336-.984v-.096c0-.384-.112-.688-.336-.912-.224-.224-.532-.336-.924-.336-.328 0-.6.068-.816.204a2.094 2.094 0 00-.48.384l-1.476-.204.312-4.74h5.124v1.572z\" fill=\"#fff\" /></svg>);","import React, { useState } from 'react';\nimport {\n    useActiveWalletAccount,\n    useAvailableMT5Accounts,\n    useCreateMT5Account,\n    useMT5AccountsList,\n    useSettings,\n    useTradingPlatformPasswordChange,\n} from '@deriv/api';\nimport { ModalStepWrapper, ModalWrapper, WalletButton, WalletButtonGroup } from '../../../../components/Base';\nimport { useModal } from '../../../../components/ModalProvider';\nimport useDevice from '../../../../hooks/useDevice';\nimport MT5PasswordIcon from '../../../../public/images/ic-mt5-password.svg';\nimport { TMarketTypes, TPlatforms } from '../../../../types';\nimport { MarketTypeDetails, PlatformToTitleMapper } from '../../constants';\nimport { CreatePassword, EnterPassword, Success } from '../../screens';\n\ntype TProps = {\n    marketType: TMarketTypes.SortedMT5Accounts;\n    platform: TPlatforms.All;\n};\n\nconst MT5PasswordModal: React.FC<TProps> = ({ marketType, platform }) => {\n    const [password, setPassword] = useState('');\n    const { isLoading: createMT5AccountLoading, isSuccess, mutate } = useCreateMT5Account();\n    const { isLoading: tradingPlatformPasswordChangeLoading, mutate: tradingPasswordChange } =\n        useTradingPlatformPasswordChange();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { data: mt5Accounts } = useMT5AccountsList();\n    const { data: availableMT5Accounts } = useAvailableMT5Accounts();\n    const { data: settings } = useSettings();\n    const { hide } = useModal();\n    const { isMobile } = useDevice();\n\n    const hasMT5Account = mt5Accounts?.find(account => account.login);\n    const isDemo = activeWallet?.is_virtual;\n    const marketTypeTitle =\n        marketType === 'all' && Object.keys(PlatformToTitleMapper).includes(platform)\n            ? PlatformToTitleMapper[platform]\n            : MarketTypeDetails[marketType].title;\n\n    const onSubmit = async () => {\n        const accountType = marketType === 'synthetic' ? 'gaming' : marketType;\n\n        // in order to create account, we need to set a password through trading_platform_password_change endpoint first\n        // then only mt5_create_account can be called, otherwise it will response an error for password required\n        if (!mt5Accounts?.length) {\n            await tradingPasswordChange({\n                new_password: password,\n                platform: 'mt5',\n            });\n        }\n\n        mutate({\n            payload: {\n                account_type: activeWallet?.is_virtual ? 'demo' : accountType,\n                address: settings?.address_line_1 || '',\n                city: settings?.address_city || '',\n                company: 'svg',\n                country: settings?.country_code || '',\n                email: settings?.email || '',\n                leverage: availableMT5Accounts?.find(acc => acc.market_type === marketType)?.leverage || 500,\n                mainPassword: password,\n                ...(marketType === 'financial' && { mt5_account_type: 'financial' }),\n                ...(marketType === 'all' && { sub_account_category: 'swap_free' }),\n                name: settings?.first_name || '',\n                phone: settings?.phone || '',\n                state: settings?.address_state || '',\n                zipCode: settings?.address_postcode || '',\n            },\n        });\n    };\n\n    const renderTitle = () => {\n        if (isSuccess) {\n            return ' ';\n        }\n        if (hasMT5Account) {\n            return `Add a ${isDemo ? 'demo' : 'real'} ${PlatformToTitleMapper.mt5} account`;\n        }\n        return `Create a ${isDemo ? 'demo' : 'real'} ${PlatformToTitleMapper.mt5} account`;\n    };\n\n    const renderFooter = () => {\n        if (isSuccess) return <WalletButton isFullWidth onClick={() => hide()} size='lg' text='Continue' />;\n        if (hasMT5Account)\n            return (\n                <WalletButtonGroup>\n                    <WalletButton isFullWidth size='lg' text='Forgot password?' variant='outlined' />\n                    <WalletButton\n                        disabled={!password || tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                        isFullWidth\n                        onClick={onSubmit}\n                        size='lg'\n                        text='Add account'\n                    />\n                </WalletButtonGroup>\n            );\n        return (\n            <WalletButton\n                disabled={!password || tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                isFullWidth\n                onClick={onSubmit}\n                size='lg'\n                text='Create Deriv MT5 password'\n            />\n        );\n    };\n\n    if (isMobile) {\n        return (\n            <ModalStepWrapper renderFooter={renderFooter} title={renderTitle()}>\n                {isSuccess && (\n                    <Success\n                        description={`You can now start practicing trading with your ${marketTypeTitle} ${\n                            isDemo ? ' demo' : 'real'\n                        } account.`}\n                        displayBalance={\n                            mt5Accounts?.find(account => account.market_type === marketType)?.display_balance || ''\n                        }\n                        marketType={marketType}\n                        platform={platform}\n                        renderButton={() => <WalletButton isFullWidth onClick={hide} size='lg' text='Continue' />}\n                        title={`Your ${marketTypeTitle} ${isDemo ? ' demo' : 'real'} account is ready`}\n                    />\n                )}\n                {!isSuccess &&\n                    (hasMT5Account ? (\n                        <EnterPassword\n                            marketType={marketType}\n                            onPasswordChange={e => setPassword(e.target.value)}\n                            onPrimaryClick={onSubmit}\n                            password={password}\n                            platform='mt5'\n                        />\n                    ) : (\n                        <CreatePassword\n                            icon={<MT5PasswordIcon />}\n                            onPasswordChange={e => setPassword(e.target.value)}\n                            onPrimaryClick={onSubmit}\n                            password={password}\n                            platform='mt5'\n                        />\n                    ))}\n            </ModalStepWrapper>\n        );\n    }\n\n    return (\n        <ModalWrapper hideCloseButton={isSuccess}>\n            {isSuccess && (\n                <Success\n                    description={`You can now start practicing trading with your ${marketTypeTitle} ${\n                        isDemo ? ' demo' : 'real'\n                    } account.`}\n                    displayBalance={\n                        mt5Accounts?.find(account => account.market_type === marketType)?.display_balance || ''\n                    }\n                    marketType={marketType}\n                    platform={platform}\n                    renderButton={() => <WalletButton isFullWidth onClick={hide} size='lg' text='Continue' />}\n                    title={`Your ${marketTypeTitle} ${isDemo ? ' demo' : 'real'} account is ready`}\n                />\n            )}\n            {!isSuccess &&\n                (hasMT5Account ? (\n                    <EnterPassword\n                        isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                        marketType={marketType}\n                        onPasswordChange={e => setPassword(e.target.value)}\n                        onPrimaryClick={onSubmit}\n                        password={password}\n                        platform='mt5'\n                    />\n                ) : (\n                    <CreatePassword\n                        icon={<MT5PasswordIcon />}\n                        isLoading={tradingPlatformPasswordChangeLoading || createMT5AccountLoading}\n                        onPasswordChange={e => setPassword(e.target.value)}\n                        onPrimaryClick={onSubmit}\n                        password={password}\n                        platform='mt5'\n                    />\n                ))}\n        </ModalWrapper>\n    );\n};\n\nexport default MT5PasswordModal;\n","import React from 'react';\nimport { useModal } from '../../../../components/ModalProvider';\nimport AddIcon from '../../../../public/images/add-icon.svg';\nimport { MT5AccountTypeModal } from '../../modals';\nimport './GetMoreMT5Accounts.scss';\n\nconst GetMoreMT5Accounts: React.FC = () => {\n    const { show } = useModal();\n\n    return (\n        <div className='wallets-get-more-mt5-accounts' onClick={() => show(<MT5AccountTypeModal />)}>\n            <div className='wallets-get-more-mt5-accounts-container'>\n                <div className='wallets-get-more-mt5-accounts-container-icon'>\n                    <AddIcon />\n                </div>\n                <div className='wallets-get-more-mt5-accounts-container-details'>\n                    <div className='wallets-get-more-mt5-accounts-container-details-title'>Get more</div>\n                    <div className='wallets-get-more-mt5-accounts-container-details-description'>\n                        Get more Deriv MT5 accounts under your preferred jurisdictions.\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default GetMoreMT5Accounts;\n","import React from 'react';\nimport './MT5AccountTypeCard.scss';\n\ntype TProps = {\n    description: string;\n    icon: JSX.Element;\n    isSelected: boolean;\n    onClick: () => void;\n    title: string;\n};\n\nconst MT5AccountTypeCard: React.FC<TProps> = ({ description, icon, isSelected, onClick, title }) => {\n    return (\n        <div className={`wallets-mt5-account-type-card${isSelected ? '-selected' : ''}`} onClick={onClick}>\n            <div className='wallets-mt5-account-type-card-list'>\n                <div className='wallets-mt5-account-type-card-list-content'>\n                    <div className='wallets-mt5-account-type-card-list-content-details'>\n                        {icon}\n                        <div className='wallets-mt5-account-type-card-list-content-details-title-description'>\n                            <div className='wallets-mt5-account-type-card-list-content-details-title'>{title}</div>\n                            <div className='wallets-mt5-account-type-card-list-content-details-description'>\n                                {description}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MT5AccountTypeCard;\n","import React from 'react';\nimport DerivedMT5 from '../../../../public/images/mt5-derived.svg';\nimport FinancialMT5 from '../../../../public/images/mt5-financial.svg';\nimport SwapFreeMT5 from '../../../../public/images/mt5-swap-free.svg';\nimport { MT5AccountTypeCard } from '../MT5AccountTypeCard';\nimport './MT5AccountType.scss';\n\nconst marketTypeDetailsMapper = {\n    all: {\n        description:\n            'Trade swap-free CFDs on MT5 with synthetics, forex, stocks, stock indices, cryptocurrencies, and ETFs.',\n        icon: <SwapFreeMT5 />,\n        title: 'Swap-Free',\n    },\n    financial: {\n        description: 'Trade CFDs on MT5 with forex, stocks and indices, commodities, cryptocurrencies, and ETFs.',\n        icon: <FinancialMT5 />,\n        title: 'Financial',\n    },\n    synthetic: {\n        description: 'Trade CFDs on MT5 with derived indices that simulate real-world market movements.',\n        icon: <DerivedMT5 />,\n        title: 'Derived',\n    },\n};\n\ntype TProps = {\n    onMarketTypeSelect: (marketType: keyof typeof marketTypeDetailsMapper) => void;\n    selectedMarketType?: keyof typeof marketTypeDetailsMapper;\n};\n\nconst MT5AccountType: React.FC<TProps> = ({ onMarketTypeSelect, selectedMarketType }) => {\n    const sortedMarketTypeEntries = Object.entries(marketTypeDetailsMapper).sort(([keyA], [keyB]) => {\n        const order = ['synthetic', 'financial', 'all'];\n        return order.indexOf(keyA) - order.indexOf(keyB);\n    });\n    return (\n        <div className='wallets-mt5-account-type-content'>\n            {sortedMarketTypeEntries.map(([key, value]) => (\n                <MT5AccountTypeCard\n                    description={value.description}\n                    icon={value.icon}\n                    isSelected={selectedMarketType === key}\n                    key={key}\n                    // @ts-expect-error the key always is the type of keyof typeof marketTypeDetailsMapper.\n                    onClick={() => onMarketTypeSelect(key === selectedMarketType ? undefined : key)}\n                    title={value.title}\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default MT5AccountType;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#a)\"><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zm36.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#303541\" /><path d=\"M0 9.261V39a9 9 0 009 9h29.205-.638l8.23-44.898a9.063 9.063 0 00-.925-.923L0 9.261z\" fill=\"#414652\" /><path d=\"M25.5 28.5c0-1.65 1.35-3 3-3h6c1.65 0 3 1.35 3 3v6c0 1.65-1.35 3-3 3h-6c-1.65 0-3-1.35-3-3v-6z\" fill=\"#EF8933\" /><path d=\"M10.5 28.5c0-1.65 1.35-3 3-3h6c1.65 0 3 1.35 3 3v6c0 1.65-1.35 3-3 3h-6c-1.65 0-3-1.35-3-3v-6z\" fill=\"#4B6FA8\" /><path d=\"M25.5 13.5c0-1.65 1.35-3 3-3h6c1.65 0 3 1.35 3 3v6c0 1.65-1.35 3-3 3h-6c-1.65 0-3-1.35-3-3v-6z\" fill=\"#76C0E3\" /><path d=\"M10.5 13.5c0-1.65 1.35-3 3-3h6c1.65 0 3 1.35 3 3v6c0 1.65-1.35 3-3 3h-6c-1.65 0-3-1.35-3-3v-6z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"a\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_46779_350302)\"><path d=\"M9 0a9 9 0 00-9 9v.261L44.871 2.18A8.965 8.965 0 0039 0H9zM45.797 3.102l-8.231 44.897h1.433a9 9 0 009-9V9c0-2.255-.83-4.318-2.202-5.897z\" fill=\"#E12E3A\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M37.566 48H9a9 9 0 01-9-9V9.261L44.871 2.18c.33.285.64.593.926.923l-8.231 44.897z\" fill=\"#FF444F\" /><path d=\"M14.316 28.599c.154.014.33.028.525.042h.735c1.638 0 2.85-.413 3.633-1.239.798-.826 1.197-1.967 1.197-3.423 0-1.526-.378-2.681-1.134-3.465-.756-.784-1.953-1.176-3.59-1.176-.225 0-.456.007-.694.021a5.09 5.09 0 00-.672.042v9.198zm9.471-4.62c0 1.26-.196 2.359-.588 3.297-.392.938-.952 1.715-1.68 2.331-.714.616-1.589 1.078-2.625 1.386-1.036.308-2.198.462-3.486.462-.588 0-1.274-.028-2.058-.084a15.788 15.788 0 01-2.31-.294V16.902a18.02 18.02 0 012.352-.273 32.05 32.05 0 012.121-.084c1.246 0 2.373.14 3.381.42 1.022.28 1.897.721 2.625 1.323s1.288 1.372 1.68 2.31c.392.938.588 2.065.588 3.381z\" fill=\"#fff\" /><path d=\"M33.032 31.266a39.04 39.04 0 00-1.344-2.457 27.232 27.232 0 00-1.659-2.562c-.196.252-.448.602-.756 1.05-.294.448-.595.924-.903 1.428-.294.504-.574.987-.84 1.449-.266.462-.462.826-.588 1.092h-3.738a52.268 52.268 0 012.142-3.57 125.528 125.528 0 012.751-3.969l-4.683-7.014h3.969l2.835 4.536 2.772-4.536h3.738l-4.62 7.056c1.176 1.526 2.163 2.94 2.961 4.242.798 1.288 1.428 2.373 1.89 3.255h-3.927z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_46779_350302\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React, { ComponentType, SVGAttributes } from 'react';\nimport useDevice from '../../hooks/useDevice';\nimport CTraderIcon from '../../public/images/ctrader.svg';\nimport DerivAppIcon from '../../public/images/deriv-apps.svg';\nimport DerivXIcon from '../../public/images/derivx.svg';\nimport DerivedMT5Icon from '../../public/images/mt5-derived.svg';\nimport FinancialMT5Icon from '../../public/images/mt5-financial.svg';\nimport SwapFreeMT5Icon from '../../public/images/mt5-swap-free.svg';\nimport { THooks, TPlatforms } from '../../types';\nimport { WalletCardIcon } from '../WalletCardIcon';\nimport { WalletGradientBackground } from '../WalletGradientBackground';\nimport './WalletMarketCurrencyIcon.scss';\n\nconst marketTypeToIconMapper: Record<string, ComponentType<SVGAttributes<SVGElement>>> = {\n    all: SwapFreeMT5Icon,\n    financial: FinancialMT5Icon,\n    synthetic: DerivedMT5Icon,\n};\n\nconst marketTypeToPlatformIconMapper: Record<string, ComponentType<SVGAttributes<SVGElement>>> = {\n    ctrader: CTraderIcon,\n    dxtrade: DerivXIcon,\n};\n\ntype TWalletMarketCurrencyIconProps = {\n    currency: Exclude<THooks.ActiveWalletAccount['currency'], undefined>;\n    isDemo: THooks.ActiveWalletAccount['is_virtual'];\n    marketType?: THooks.SortedMT5Accounts['market_type'];\n    platform?: TPlatforms.All;\n};\n\nconst WalletMarketCurrencyIcon: React.FC<TWalletMarketCurrencyIconProps> = ({\n    currency,\n    isDemo,\n    marketType,\n    platform,\n}) => {\n    const { isMobile } = useDevice();\n\n    let MarketTypeIcon: ComponentType<SVGAttributes<SVGElement>>;\n    if (marketType && platform) {\n        MarketTypeIcon =\n            marketType === 'all' && Object.keys(marketTypeToPlatformIconMapper).includes(platform)\n                ? marketTypeToPlatformIconMapper[platform]\n                : marketTypeToIconMapper[marketType];\n    } else {\n        MarketTypeIcon = DerivAppIcon;\n    }\n\n    return (\n        <div className='wallets-market-currency-icon'>\n            <MarketTypeIcon className='wallets-market-currency-icon__after' />\n            <div\n                className={`wallets-market-currency-icon__before wallets-market-currency-icon__before-${\n                    isDemo ? 'demo' : 'real'\n                }`}\n            >\n                <WalletGradientBackground currency={currency} hasShine isDemo={isDemo} type='card'>\n                    <WalletCardIcon size={isMobile ? 'xl' : 'lg'} type={isDemo ? 'Demo' : currency} />\n                </WalletGradientBackground>\n            </div>\n        </div>\n    );\n};\n\nexport default WalletMarketCurrencyIcon;\n","import React, { ReactNode } from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletText } from '../../../../components';\nimport { WalletGradientBackground } from '../../../../components/WalletGradientBackground';\nimport { WalletMarketCurrencyIcon } from '../../../../components/WalletMarketCurrencyIcon';\nimport useDevice from '../../../../hooks/useDevice';\nimport { TDisplayBalance, TMarketTypes, TPlatforms } from '../../../../types';\nimport { MarketTypeDetails, PlatformToTitleMapper } from '../../constants';\nimport './Success.scss';\n\ntype TSuccessProps = {\n    description: string;\n    displayBalance:\n        | TDisplayBalance.CtraderAccountsList\n        | TDisplayBalance.DxtradeAccountsList\n        | TDisplayBalance.MT5AccountsList;\n    marketType?: TMarketTypes.SortedMT5Accounts;\n    platform?: TPlatforms.All;\n    renderButton: () => ReactNode;\n    title: string;\n};\n\nconst Success: React.FC<TSuccessProps> = ({\n    description,\n    displayBalance,\n    marketType,\n    platform,\n    renderButton,\n    title,\n}) => {\n    const { data } = useActiveWalletAccount();\n    const { isDesktop } = useDevice();\n    const isDemo = data?.is_virtual;\n    const landingCompanyName = data?.landing_company_name?.toUpperCase();\n\n    const isMarketTypeAll = marketType === 'all';\n\n    let marketTypeTitle = 'Deriv Apps';\n\n    if (marketType && platform) {\n        const isPlatformValid = Object.keys(PlatformToTitleMapper).includes(platform);\n        if (isMarketTypeAll && isPlatformValid) {\n            marketTypeTitle = PlatformToTitleMapper[platform];\n        } else {\n            marketTypeTitle = MarketTypeDetails[marketType].title;\n        }\n    }\n\n    const platformTitlePrefix = platform === 'mt5' ? PlatformToTitleMapper.mt5 : '';\n\n    return (\n        <div className='wallets-success'>\n            <WalletGradientBackground\n                bodyClassName='wallets-success__info'\n                currency={data?.currency || 'USD'}\n                hasShine\n                theme='grey'\n            >\n                <div className={`wallets-success__info-badge wallets-success__info-badge--${isDemo ? 'demo' : 'real'}`}>\n                    <WalletText color='white' size='2xs' weight='bold'>\n                        {isDemo ? 'Demo' : 'Real'}\n                    </WalletText>\n                </div>\n                <WalletMarketCurrencyIcon\n                    currency={data?.currency || 'USD'}\n                    isDemo={isDemo || false}\n                    marketType={marketType}\n                    platform={platform}\n                />\n                <WalletText size='2xs'>\n                    {platformTitlePrefix} {marketTypeTitle} {!isDemo && `(${landingCompanyName})`}\n                </WalletText>\n                <WalletText color='primary' size='2xs'>\n                    {data?.currency} Wallet\n                </WalletText>\n                <WalletText size='sm' weight='bold'>\n                    {displayBalance}\n                </WalletText>\n            </WalletGradientBackground>\n            <WalletText align='center' size='md' weight='bold'>\n                {title}\n            </WalletText>\n            <WalletText align='center' size='sm'>\n                {description}\n            </WalletText>\n            {isDesktop && renderButton()}\n        </div>\n    );\n};\n\nexport default Success;\n","import React from 'react';\nimport { useActiveWalletAccount, useCreateOtherCFDAccount, useCtraderAccountsList } from '@deriv/api';\nimport { TradingAccountCard, WalletsErrorScreen } from '../../../../../components';\nimport { ModalWrapper, WalletButton, WalletText } from '../../../../../components/Base';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport CTrader from '../../../../../public/images/ctrader.svg';\nimport { Success } from '../../../screens';\nimport './AvailableCTraderAccountsList.scss';\n\nconst ctraderMapper = [\n    {\n        description: 'This account offers CFDs on a feature-rich trading platform.',\n        icon: <CTrader />,\n        title: 'Deriv cTrader',\n    },\n];\n\nconst AvailableCTraderAccountsList: React.FC = () => {\n    const { hide, show } = useModal();\n    const { isSuccess, mutate } = useCreateOtherCFDAccount();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { data: cTraderAccounts } = useCtraderAccountsList();\n\n    const accountType = activeWallet?.is_virtual ? 'demo' : 'real';\n\n    const onSubmit = () => {\n        mutate({\n            payload: {\n                account_type: accountType,\n                market_type: 'all',\n                platform: 'ctrader',\n            },\n        });\n    };\n\n    const onClickHandler = () => {\n        onSubmit();\n        show(\n            <ModalWrapper>\n                {isSuccess && (\n                    <Success\n                        description={`Transfer your virtual funds from your ${accountType} wallet to your ${ctraderMapper[0].title} ${accountType} account to practice trading.`}\n                        displayBalance={cTraderAccounts?.find(account => account.login)?.display_balance}\n                        marketType='all'\n                        platform='cTrader'\n                        renderButton={() => <WalletButton isFullWidth onClick={hide} size='lg' text='Continue' />}\n                        title={`Your ${ctraderMapper[0].title} ${accountType} account is ready`}\n                    />\n                )}\n                {!isSuccess && (\n                    <div className='wallets-error-screen'>\n                        <WalletsErrorScreen message='Sorry, an error occurred. Please try again later.' />\n                    </div>\n                )}\n            </ModalWrapper>\n        );\n    };\n\n    return (\n        <div className='wallets-available-ctrader-accounts'>\n            {ctraderMapper.map(account => (\n                <TradingAccountCard\n                    {...account}\n                    key={`wallets-available-ctrader-accounts--${account.title}`}\n                    leading={() => <div>{account.icon}</div>}\n                    trailing={() => (\n                        <WalletButton\n                            color='primary-light'\n                            onClick={() => {\n                                onClickHandler();\n                            }}\n                            text='Get'\n                        />\n                    )}\n                >\n                    <div className='wallets-available-ctrader-accounts__details'>\n                        <WalletText size='sm' weight='bold'>\n                            {account.title}\n                        </WalletText>\n                        <WalletText size='xs'>{account.description}</WalletText>\n                    </div>\n                </TradingAccountCard>\n            ))}\n        </div>\n    );\n};\n\nexport default AvailableCTraderAccountsList;\n","import React from 'react';\nimport { useCtraderAccountsList } from '@deriv/api';\nimport { WalletText } from '../../../../components/Base';\nimport { AddedCTraderAccountsList, AvailableCTraderAccountsList } from '../../flows/CTrader';\nimport './CTraderList.scss';\n\nconst CTraderList: React.FC = () => {\n    const { data } = useCtraderAccountsList();\n    const hasCTraderAccount = !!data?.length;\n    return (\n        <div className='wallets-ctrader'>\n            <WalletText weight='bold'>Deriv cTrader</WalletText>\n\n            <div className='wallets-ctrader__content'>\n                {hasCTraderAccount ? <AddedCTraderAccountsList /> : <AvailableCTraderAccountsList />}\n            </div>\n        </div>\n    );\n};\n\nexport default CTraderList;\n","import React from 'react';\nimport './TradingAppCardLoader.scss';\n\nconst TradingAppCardLoader: React.FC = () => {\n    return (\n        <div className='wallets-trading-app-card-loader'>\n            <div className='wallets-trading-app-card-loader__content'>\n                <div className='wallets-skeleton wallets-trading-app-card-loader__content__icon' />\n                <div className='wallets-trading-app-card-loader__content__details'>\n                    <div className='wallets-skeleton wallets-trading-app-card-loader__content__details--title' />\n                    <div className='wallets-skeleton wallets-trading-app-card-loader__content__details--description' />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TradingAppCardLoader;\n","import React from 'react';\nimport './WalletsAccordionLoader.scss';\n\nconst WalletsAccordionLoader = () => {\n    return (\n        <div className='wallets-accordion-loader'>\n            <div className='wallets-skeleton wallets-accordion-loader__item' />\n            <div className='wallets-skeleton wallets-accordion-loader__item wallets-accordion-loader__item-expanded' />\n            <div className='wallets-skeleton wallets-accordion-loader__item' />\n        </div>\n    );\n};\n\nexport default WalletsAccordionLoader;\n","import React from 'react';\nimport './WalletsAddMoreLoader.scss';\n\nconst WalletsAddMoreLoader = () => {\n    return (\n        <div className='wallets-skeleton wallets-add-more-loader'>\n            <div className='wallets-skeleton wallets-add-more-loader__body' />\n        </div>\n    );\n};\n\nexport default WalletsAddMoreLoader;\n","import React from 'react';\nimport './WalletsCarouselLoader.scss';\n\nconst WalletsCarouselLoader = () => {\n    return (\n        <div className='wallets-carousel-loader'>\n            <div className='wallets-carousel-loader__card-container'>\n                {Array.from({ length: 3 }).map((_, idx) => (\n                    <div\n                        className='wallets-skeleton wallets-carousel-loader__card'\n                        key={`wallets-carousel-loader-card-${idx}`}\n                    >\n                        <div className='wallets-skeleton wallets-carousel-loader__card-body' />\n                    </div>\n                ))}\n            </div>\n            <div className='wallets-carousel-loader__progress-bar'>\n                <div className='wallets-skeleton wallets-carousel-loader__progress-bar__item wallets-carousel-loader__progress-bar__item--active' />\n                <div className='wallets-skeleton wallets-carousel-loader__progress-bar__item' />\n            </div>\n            <div className='wallets-carousel-loader__actions'>\n                {Array.from({ length: 4 }).map((_, idx) => (\n                    <div\n                        className='wallets-skeleton wallets-carousel-loader__actions-button'\n                        key={`wallets-carousel-loader-action-${idx}`}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default WalletsCarouselLoader;\n","import React from 'react';\nimport './WalletsDepositCryptoAddressLoader.scss';\n\nconst WalletsDepositCryptoAddressLoader = () => {\n    return (\n        <div className='wallets-deposit-crypto-address-loader'>\n            <div className='wallets-deposit-crypto-address-loader__qr-code wallets-skeleton' />\n            <div className='wallets-deposit-crypto-address-loader__text wallets-skeleton' />\n        </div>\n    );\n};\n\nexport default WalletsDepositCryptoAddressLoader;\n","import React from 'react';\nimport './WalletsTransactionStatusLoader.scss';\n\nconst WalletsTransactionStatusLoader = () => {\n    return <div className='wallets-transaction-status-loader wallets-skeleton' />;\n};\n\nexport default WalletsTransactionStatusLoader;\n","import React from 'react';\nimport './TradingAccountCard.scss';\n\ntype TProps = {\n    leading?: () => React.ReactNode;\n    trailing?: () => React.ReactNode;\n};\n\nconst TradingAccountCard: React.FC<React.PropsWithChildren<TProps>> = ({ children, leading, trailing }) => {\n    return (\n        <div className='wallets-trading-account-card'>\n            {leading?.()}\n            <div className='wallets-trading-account-card__content'>\n                {children}\n                {trailing?.()}\n            </div>\n        </div>\n    );\n};\n\nexport default TradingAccountCard;\n","const isBrowser = () => typeof window !== 'undefined';\n\nconst derivComUrl = 'deriv.com';\nconst derivMeUrl = 'deriv.me';\nconst derivBeUrl = 'deriv.be';\n\nconst supportedDomains = [derivComUrl, derivMeUrl, derivBeUrl];\nconst domainUrlInitial = (isBrowser() && window.location.hostname.split('app.')[1]) || '';\nconst domainUrl = supportedDomains.includes(domainUrlInitial) ? domainUrlInitial : derivComUrl;\n\nexport const derivUrls = Object.freeze({\n    BINARYBOT_PRODUCTION: `https://bot.${domainUrl}`,\n    BINARYBOT_STAGING: `https://staging-bot.${domainUrl}`,\n    DERIV_APP_PRODUCTION: `https://app.${domainUrl}`,\n    DERIV_APP_STAGING: `https://staging-app.${domainUrl}`,\n    DERIV_COM_PRODUCTION: `https://${domainUrl}`,\n    DERIV_COM_PRODUCTION_EU: `https://eu.${domainUrl}`,\n    DERIV_COM_STAGING: `https://staging.${domainUrl}`,\n    DERIV_HOST_NAME: domainUrl,\n    SMARTTRADER_PRODUCTION: `https://smarttrader.${domainUrl}`,\n    SMARTTRADER_STAGING: `https://staging-smarttrader.${domainUrl}`,\n});\n\nexport const whatsappUrl = 'https://wa.me/35699578341';\n\nlet defaultLanguage: string;\n\nexport const normalizePath = (path: string) => (path ? path.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_./()#])/g, '') : '');\n\nexport const getlangFromUrl = () => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const lang = urlParams.get('lang');\n    return lang;\n};\n\nexport const getActionFromUrl = () => {\n    const queryString = window.location.search;\n    const urlParams = new URLSearchParams(queryString);\n    const action = urlParams.get('action');\n    return action;\n};\n\nexport const getUrlSmartTrader = () => {\n    const { isStagingDerivApp } = getPlatformFromUrl();\n    const urlLang = getlangFromUrl();\n    const i18NLanguage = window.localStorage.getItem('i18n_language') || urlLang || 'en';\n\n    let baseLink = '';\n\n    if (isStagingDerivApp) {\n        baseLink = derivUrls.SMARTTRADER_STAGING;\n    } else {\n        baseLink = derivUrls.SMARTTRADER_PRODUCTION;\n    }\n\n    return `${baseLink}/${i18NLanguage.toLowerCase()}/trading.html`;\n};\n\nexport const getUrlBinaryBot = (isLanguageRequired = true) => {\n    const { isStagingDerivApp } = getPlatformFromUrl();\n\n    const urlLang = getlangFromUrl();\n    const i18NLanguage = window.localStorage.getItem('i18n_language') || urlLang || 'en';\n\n    const baseLink = isStagingDerivApp ? derivUrls.BINARYBOT_STAGING : derivUrls.BINARYBOT_PRODUCTION;\n\n    return isLanguageRequired ? `${baseLink}/?l=${i18NLanguage.toLowerCase()}` : baseLink;\n};\n\nexport const getPlatformFromUrl = (domain = window.location.hostname) => {\n    const resolutions = {\n        isDerivApp: /^app\\.deriv\\.(com|me|be)$/i.test(domain),\n        isStagingDerivApp: /^staging-app\\.deriv\\.(com|me|be)$/i.test(domain),\n        isTestLink: /^(.*)\\.binary\\.sx$/i.test(domain),\n    };\n\n    return {\n        ...resolutions,\n        isStaging: resolutions.isStagingDerivApp,\n    };\n};\n\nexport const isStaging = (domain = window.location.hostname) => {\n    const { isStagingDerivApp } = getPlatformFromUrl(domain);\n\n    return isStagingDerivApp;\n};\n\nexport const getStaticUrl = (path = '', isDocument = false, isEuUrl = false) => {\n    const host = isEuUrl ? derivUrls.DERIV_COM_PRODUCTION_EU : derivUrls.DERIV_COM_PRODUCTION;\n    let lang = defaultLanguage?.toLowerCase();\n\n    if (lang && lang !== 'en') {\n        lang = `/${lang}`;\n    } else {\n        lang = '';\n    }\n\n    if (isDocument) return `${host}/${normalizePath(path)}`;\n\n    // Deriv.com supports languages separated by '-' not '_'\n    if (host === derivUrls.DERIV_COM_PRODUCTION && lang.includes('_')) {\n        lang = lang.replace('_', '-');\n    }\n\n    return `${host}${lang}/${normalizePath(path)}`;\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuthorize } from '@deriv/api';\nimport { WalletButton } from '../../../../../components/Base';\nimport { TradingAccountCard } from '../../../../../components/TradingAccountCard';\nimport { getStaticUrl } from '../../../../../helpers/urls';\nimport { THooks } from '../../../../../types';\nimport { MarketTypeDetails } from '../../../constants';\nimport './AddedMT5AccountsList.scss';\n\ntype TProps = {\n    account: THooks.MT5AccountsList;\n};\n\nconst MT5AccountIcon: React.FC<TProps> = ({ account }) => {\n    const IconToLink = () => {\n        switch (account.market_type) {\n            case 'financial':\n            case 'synthetic':\n            case 'all':\n                return window.open(getStaticUrl('/dmt5'));\n            default:\n                return window.open(getStaticUrl('/dmt5'));\n        }\n    };\n    return (\n        <div className='wallets-added-mt5__icon' onClick={() => IconToLink()}>\n            {MarketTypeDetails[account.market_type || 'all'].icon}\n        </div>\n    );\n};\n\nconst AddedMT5AccountsList: React.FC<TProps> = ({ account }) => {\n    const { data: activeWallet } = useAuthorize();\n    const history = useHistory();\n    const { title } = MarketTypeDetails[account.market_type || 'all'];\n\n    return (\n        <TradingAccountCard\n            leading={() => <MT5AccountIcon account={account} />}\n            trailing={() => (\n                <div className='wallets-added-mt5__actions'>\n                    <WalletButton\n                        onClick={() => {\n                            history.push('/wallets/cashier/transfer');\n                        }}\n                        text='Transfer'\n                        variant='outlined'\n                    />\n                    <WalletButton text='Open' />\n                </div>\n            )}\n        >\n            <div className='wallets-added-mt5__details'>\n                <div className='wallets-added-mt5__details-title'>\n                    <p className='wallets-added-mt5__details-title-text'>{title}</p>\n                    {!activeWallet?.is_virtual && (\n                        <div className='wallets-added-mt5__details-title-landing-company'>\n                            <p className='wallets-added-mt5__details-title-landing-company-text'>\n                                {account.landing_company_short}\n                            </p>\n                        </div>\n                    )}\n                </div>\n                <p className='wallets-added-mt5__details-balance'>{account.display_balance}</p>\n                <p className='wallets-added-mt5__details-loginid'>{account.display_login}</p>\n            </div>\n        </TradingAccountCard>\n    );\n};\n\nexport default AddedMT5AccountsList;\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { TradingAccountCard, WalletButton } from '../../../../../components';\nimport { useModal } from '../../../../../components/ModalProvider';\nimport { getStaticUrl } from '../../../../../helpers/urls';\nimport { THooks } from '../../../../../types';\nimport { MarketTypeDetails } from '../../../constants';\nimport { JurisdictionModal, MT5PasswordModal } from '../../../modals';\nimport './AvailableMT5AccountsList.scss';\n\ntype TProps = {\n    account: THooks.SortedMT5Accounts;\n};\n\nconst MT5AccountIcon: React.FC<TProps> = ({ account }) => {\n    const IconToLink = () => {\n        switch (account.market_type) {\n            case 'financial':\n            case 'synthetic':\n            case 'all':\n                return window.open(getStaticUrl('/dmt5'));\n            default:\n                return window.open(getStaticUrl('/dmt5'));\n        }\n    };\n    return (\n        <div className='wallets-available-mt5__icon' onClick={() => IconToLink()}>\n            {MarketTypeDetails[account.market_type || 'all'].icon}\n        </div>\n    );\n};\n\nconst AvailableMT5AccountsList: React.FC<TProps> = ({ account }) => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { setModalState, show } = useModal();\n    const { description, title } = MarketTypeDetails[account.market_type || 'all'];\n\n    return (\n        <TradingAccountCard\n            leading={() => <MT5AccountIcon account={account} />}\n            trailing={() => (\n                <WalletButton\n                    color='primary-light'\n                    onClick={() => {\n                        setModalState({\n                            marketType: account.market_type,\n                        });\n                        show(\n                            activeWallet?.is_virtual ? (\n                                <MT5PasswordModal\n                                    marketType={account?.market_type || 'synthetic'}\n                                    platform={account.platform}\n                                />\n                            ) : (\n                                <JurisdictionModal />\n                            )\n                        );\n                    }}\n                    text='Get'\n                />\n            )}\n        >\n            <div className='wallets-available-mt5__details'>\n                <p className='wallets-available-mt5__details-title'>{title}</p>\n                <p className='wallets-available-mt5__details-description'>{description}</p>\n            </div>\n        </TradingAccountCard>\n    );\n};\n\nexport default AvailableMT5AccountsList;\n","import React, { useEffect, useMemo } from 'react';\nimport { useActiveWalletAccount, useAuthorize, useInvalidateQuery, useSortedMT5Accounts } from '@deriv/api';\nimport { TradingAppCardLoader } from '../../../../components/SkeletonLoader';\nimport { AddedMT5AccountsList, AvailableMT5AccountsList } from '../../flows/MT5';\nimport { GetMoreMT5Accounts } from '../../screens';\nimport './MT5PlatformsList.scss';\n\nconst MT5PlatformsList: React.FC = () => {\n    const { isFetching } = useAuthorize();\n    const { data, isFetchedAfterMount } = useSortedMT5Accounts();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const invalidate = useInvalidateQuery();\n\n    const hasMT5Account = useMemo(() => {\n        return data?.some(account => account.is_added);\n    }, [data]);\n\n    useEffect(() => {\n        if (!isFetching) {\n            invalidate('mt5_login_list');\n        }\n    }, [invalidate, isFetching]);\n\n    return (\n        <React.Fragment>\n            <section className='wallets-mt5-list'>\n                <div className='wallets-mt5-list__title'>\n                    <h1>Deriv MT5</h1>\n                </div>\n            </section>\n            {!isFetchedAfterMount && <TradingAppCardLoader />}\n            <div className='wallets-mt5-list__content'>\n                {isFetchedAfterMount &&\n                    data?.map((account, index) => {\n                        if (account.is_added)\n                            return (\n                                <AddedMT5AccountsList\n                                    account={account}\n                                    key={`added-mt5-list${account.loginid}-${index}`}\n                                />\n                            );\n\n                        return (\n                            <AvailableMT5AccountsList\n                                account={account}\n                                key={`available-mt5-list${account.name}-${index}`}\n                            />\n                        );\n                    })}\n                {hasMT5Account && !activeWallet?.is_virtual && <GetMoreMT5Accounts />}\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default MT5PlatformsList;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDxtradeAccountsList } from '@deriv/api';\nimport { TradingAccountCard } from '../../../../../../components';\nimport { WalletButton } from '../../../../../../components/Base';\nimport { getStaticUrl } from '../../../../../../helpers/urls';\nimport DerivX from '../../../../../../public/images/derivx.svg';\nimport './AddedDxtradeAccountsList.scss';\n\nconst AddedDxtradeAccountsList: React.FC = () => {\n    const history = useHistory();\n    const { data } = useDxtradeAccountsList();\n\n    return (\n        <TradingAccountCard\n            leading={() => (\n                <div\n                    className='wallets-available-derivx__icon'\n                    onClick={() => {\n                        window.open(getStaticUrl('/derivx'));\n                    }}\n                >\n                    <DerivX />\n                </div>\n            )}\n            trailing={() => (\n                <div className='wallets-available-derivx__actions'>\n                    <WalletButton\n                        onClick={() => {\n                            history.push('/wallets/cashier/transfer');\n                        }}\n                        text='Transfer'\n                        variant='outlined'\n                    />\n                    <WalletButton text='Open' />\n                </div>\n            )}\n        >\n            <div className='wallets-available-derivx__details'>\n                {data?.map(account => (\n                    <React.Fragment key={account?.account_id}>\n                        <p className='wallets-available-derivx__details-title'>Deriv X</p>\n                        <p className='wallets-available-derivx__details-balance'>{account?.display_balance}</p>\n                        <p className='wallets-available-derivx__details-loginid'>{account.login}</p>\n                    </React.Fragment>\n                ))}\n            </div>\n        </TradingAccountCard>\n    );\n};\n\nexport default AddedDxtradeAccountsList;\n","import React from 'react';\nimport { TradingAccountCard } from '../../../../../../components';\nimport { WalletButton, WalletText } from '../../../../../../components/Base';\nimport { useModal } from '../../../../../../components/ModalProvider';\nimport { getStaticUrl } from '../../../../../../helpers/urls';\nimport DerivX from '../../../../../../public/images/derivx.svg';\nimport { DxtradeEnterPasswordModal } from '../../../../modals';\nimport './AvailableDxtradeAccountsList.scss';\n\nconst AvailableDxtradeAccountsList: React.FC = () => {\n    const { show } = useModal();\n\n    return (\n        <TradingAccountCard\n            leading={() => (\n                <div\n                    className='wallets-available-dxtrade__icon'\n                    onClick={() => {\n                        window.open(getStaticUrl('/derivx'));\n                    }}\n                >\n                    <DerivX />\n                </div>\n            )}\n            trailing={() => (\n                <WalletButton color='primary-light' onClick={() => show(<DxtradeEnterPasswordModal />)} text='Get' />\n            )}\n        >\n            <div className='wallets-available-dxtrade__details'>\n                <p className='wallets-available-dxtrade__details-title'>\n                    <WalletText size='sm' weight='bold'>\n                        Deriv X\n                    </WalletText>\n                </p>\n                <WalletText size='xs'>\n                    This account offers CFDs on a highly customisable CFD trading platform.\n                </WalletText>\n            </div>\n        </TradingAccountCard>\n    );\n};\n\nexport default AvailableDxtradeAccountsList;\n","import React, { useEffect } from 'react';\nimport { useAuthorize, useDxtradeAccountsList, useInvalidateQuery } from '@deriv/api';\nimport { TradingAppCardLoader } from '../../../../components/SkeletonLoader';\nimport { AddedDxtradeAccountsList, AvailableDxtradeAccountsList } from '../../flows/OtherCFDs/Dxtrade';\nimport './OtherCFDPlatformsList.scss';\n\nconst OtherCFDPlatformsList: React.FC = () => {\n    const { isFetching } = useAuthorize();\n    const { data, isFetchedAfterMount } = useDxtradeAccountsList();\n    const invalidate = useInvalidateQuery();\n    const hasDxtradeAccount = !!data?.length;\n\n    useEffect(() => {\n        if (!isFetching) {\n            invalidate('trading_platform_accounts');\n        }\n    }, [invalidate, isFetching]);\n\n    return (\n        <div className='wallets-other-cfd'>\n            <div className='wallets-other-cfd__title'>\n                <h1>Other CFD Platforms</h1>\n            </div>\n            <div className='wallets-other-cfd__content'>\n                {!isFetchedAfterMount && <TradingAppCardLoader />}\n                {isFetchedAfterMount &&\n                    (hasDxtradeAccount ? <AddedDxtradeAccountsList /> : <AvailableDxtradeAccountsList />)}\n            </div>\n        </div>\n    );\n};\n\nexport default OtherCFDPlatformsList;\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { WalletText } from '../../components/Base';\nimport useDevice from '../../hooks/useDevice';\nimport CFDPlatformsListEmptyState from './CFDPlatformsListEmptyState';\nimport { CTraderList, MT5PlatformsList, OtherCFDPlatformsList } from './components';\nimport './CFDPlatformsList.scss';\n\nconst CFDPlatformsList = () => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isMobile } = useDevice();\n\n    return (\n        <div className='wallets-cfd-list'>\n            <section className='wallets-cfd-list__header'>\n                {!isMobile && (\n                    <WalletText size='xl' weight='bold'>\n                        <h1>CFDs</h1>\n                    </WalletText>\n                )}\n                <div className='wallets-cfd-list__header-description'>\n                    <h1>\n                        Trade with leverage and tight spreads for better returns on trades.{' '}\n                        <a\n                            className='wallets-cfd-list__header-description__link'\n                            href='https://deriv.com/trade-types/cfds/'\n                            rel='noopener noreferrer'\n                            target='_blank'\n                        >\n                            Learn more\n                        </a>\n                    </h1>\n                </div>\n            </section>\n            {activeWallet?.currency_config?.is_crypto ? (\n                <CFDPlatformsListEmptyState />\n            ) : (\n                <React.Fragment>\n                    <MT5PlatformsList />\n                    {activeWallet?.is_virtual && <CTraderList />}\n                    <OtherCFDPlatformsList />\n                </React.Fragment>\n            )}\n        </div>\n    );\n};\n\nexport default CFDPlatformsList;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_1295_111455)\"><path d=\"M0 9a9 9 0 019-9h30a9 9 0 019 9v30a9 9 0 01-9 9H9a9 9 0 01-9-9V9z\" fill=\"#384177\" /><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM45.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#2A3052\" /><path d=\"M16.578 31.455c-.798 0-1.596-.028-2.394-.084a15.876 15.876 0 01-2.457-.336V16.923a19.356 19.356 0 012.204-.273 25.58 25.58 0 012.226-.105c.924 0 1.771.07 2.541.21.785.126 1.456.35 2.017.672.56.322.994.749 1.302 1.281.322.518.483 1.162.483 1.932 0 1.162-.56 2.079-1.68 2.751.924.35 1.553.826 1.89 1.428.335.602.503 1.281.503 2.037 0 1.526-.56 2.674-1.68 3.444-1.106.77-2.758 1.155-4.956 1.155zm-1.66-6.531v3.759c.239.028.498.049.777.063.28.014.588.021.924.021.98 0 1.771-.14 2.373-.42.602-.28.903-.798.903-1.554 0-.672-.252-1.148-.755-1.428-.505-.294-1.226-.441-2.163-.441h-2.059zm0-2.499h1.597c1.008 0 1.729-.126 2.162-.378.434-.266.651-.686.651-1.26 0-.588-.223-1.001-.671-1.239-.448-.238-1.107-.357-1.974-.357-.28 0-.581.007-.903.021-.322 0-.61.014-.861.042v3.171zM29.637 31.455c-.798 0-1.596-.028-2.394-.084a15.876 15.876 0 01-2.457-.336V16.923a19.356 19.356 0 012.205-.273 25.58 25.58 0 012.226-.105c.924 0 1.77.07 2.54.21.785.126 1.457.35 2.017.672.56.322.994.749 1.302 1.281.322.518.483 1.162.483 1.932 0 1.162-.56 2.079-1.68 2.751.924.35 1.554.826 1.89 1.428.336.602.504 1.281.504 2.037 0 1.526-.56 2.674-1.68 3.444-1.106.77-2.758 1.155-4.956 1.155zm-1.66-6.531v3.759c.239.028.498.049.778.063.28.014.588.021.924.021.98 0 1.77-.14 2.373-.42.602-.28.903-.798.903-1.554 0-.672-.252-1.148-.756-1.428-.504-.294-1.225-.441-2.163-.441h-2.058zm0-2.499h1.597c1.008 0 1.729-.126 2.163-.378.434-.266.65-.686.65-1.26 0-.588-.223-1.001-.671-1.239-.448-.238-1.106-.357-1.974-.357-.28 0-.581.007-.903.021-.322 0-.61.014-.861.042v3.171z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_1295_111455\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_1295_111429)\"><path d=\"M0 9a9 9 0 019-9h30a9 9 0 019 9v30a9 9 0 01-9 9H9a9 9 0 01-9-9V9z\" fill=\"#FF444F\" /><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM45.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#E12E3A\" /><path d=\"M14.316 28.6c.154.013.329.027.525.041h.735c1.638 0 2.849-.413 3.633-1.239.798-.826 1.197-1.967 1.197-3.423 0-1.526-.378-2.68-1.134-3.465-.756-.784-1.953-1.176-3.591-1.176-.224 0-.455.007-.693.021a5.09 5.09 0 00-.672.042V28.6zm9.47-4.62c0 1.26-.195 2.358-.587 3.296-.392.938-.952 1.715-1.68 2.331-.714.616-1.59 1.078-2.625 1.386-1.036.308-2.198.462-3.486.462-.588 0-1.274-.028-2.058-.084a15.788 15.788 0 01-2.31-.294V16.902c.756-.14 1.54-.23 2.352-.273a32.05 32.05 0 012.12-.084c1.247 0 2.374.14 3.382.42 1.022.28 1.897.721 2.625 1.323s1.288 1.372 1.68 2.31c.392.938.588 2.065.588 3.381zM30.324 31.455c-.798 0-1.596-.028-2.394-.084a15.877 15.877 0 01-2.457-.336V16.923a19.355 19.355 0 012.205-.273 25.58 25.58 0 012.226-.105c.924 0 1.771.07 2.541.21.784.126 1.456.35 2.016.672.56.322.994.75 1.302 1.281.322.518.483 1.162.483 1.932 0 1.162-.56 2.08-1.68 2.751.924.35 1.554.826 1.89 1.428.336.602.504 1.281.504 2.037 0 1.526-.56 2.674-1.68 3.444-1.106.77-2.758 1.155-4.956 1.155zm-1.659-6.53v3.758c.238.028.497.05.777.063.28.014.588.021.924.021.98 0 1.771-.14 2.373-.42.602-.28.903-.798.903-1.554 0-.672-.252-1.148-.756-1.428-.504-.294-1.225-.44-2.163-.44h-2.058zm0-2.5h1.596c1.008 0 1.73-.126 2.163-.378.434-.266.651-.686.651-1.26 0-.588-.224-1-.672-1.239-.448-.238-1.106-.357-1.974-.357-.28 0-.58.007-.903.021-.322 0-.609.014-.86.042v3.171z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_1295_111429\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_1295_111465)\"><path d=\"M9 0a9 9 0 00-9 9v.261L44.871 2.18A8.965 8.965 0 0039 0H9zM45.797 3.102l-8.231 44.897h1.433a9 9 0 009-9V9c0-2.255-.83-4.318-2.202-5.897z\" fill=\"#E12E3A\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M37.566 48H9a9 9 0 01-9-9V9.261L44.871 2.18c.33.285.64.593.926.923l-8.231 44.897z\" fill=\"#FF444F\" /><path d=\"M17.635 19.265c-1.526 0-2.632.427-3.318 1.28-.672.84-1.008 1.995-1.008 3.465 0 .714.084 1.365.252 1.953.168.575.42 1.072.756 1.491.336.42.756.75 1.26.988.504.224 1.092.335 1.764.335.364 0 .672-.007.924-.02.266-.015.497-.043.693-.085v-5.06h3.276v7.203c-.392.153-1.022.314-1.89.482-.868.183-1.939.273-3.213.273-1.092 0-2.086-.168-2.982-.503a6.23 6.23 0 01-2.268-1.47c-.63-.645-1.12-1.436-1.47-2.373-.336-.939-.504-2.01-.504-3.213 0-1.218.19-2.296.567-3.235.378-.938.896-1.729 1.554-2.372a6.501 6.501 0 012.31-1.491 8.066 8.066 0 012.856-.505c.686 0 1.302.05 1.848.147a9.19 9.19 0 011.428.316c.406.112.735.23.987.357.266.125.455.223.567.293l-.945 2.625a7.992 7.992 0 00-1.554-.608 6.227 6.227 0 00-1.89-.273zM26.983 24.01c0 .714.084 1.358.252 1.932a4.82 4.82 0 00.756 1.491c.336.407.742.721 1.218.945.476.224 1.022.337 1.638.337.602 0 1.141-.113 1.617-.337.49-.224.896-.538 1.218-.945.336-.42.588-.916.756-1.49.182-.575.273-1.219.273-1.933 0-.713-.09-1.358-.273-1.932-.168-.587-.42-1.084-.756-1.49a3.171 3.171 0 00-1.218-.966c-.476-.224-1.015-.337-1.617-.337-.616 0-1.162.12-1.638.357a3.394 3.394 0 00-1.218.966c-.322.407-.574.904-.756 1.491a6.79 6.79 0 00-.252 1.912zm11.11 0c0 1.246-.19 2.345-.568 3.297-.364.939-.868 1.73-1.512 2.373a6.305 6.305 0 01-2.31 1.428 8.265 8.265 0 01-2.856.483 8.141 8.141 0 01-2.814-.483 6.544 6.544 0 01-2.31-1.428c-.658-.643-1.176-1.434-1.554-2.372-.378-.953-.567-2.052-.567-3.297 0-1.246.196-2.338.588-3.276.392-.953.917-1.75 1.575-2.395a6.646 6.646 0 012.31-1.448 8.02 8.02 0 012.772-.483c.994 0 1.932.16 2.814.483a6.4 6.4 0 012.31 1.448c.658.645 1.176 1.442 1.554 2.395.378.938.567 2.03.567 3.276z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_1295_111465\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_1295_111419)\"><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM45.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#E12E3A\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M37.567 48H9a9 9 0 01-9-9V9.262L44.872 2.18c.33.285.64.593.926.923L37.567 48z\" fill=\"#FF444F\" /><path d=\"M14.908 28.6c.154.013.33.027.525.041h.735c1.638 0 2.85-.413 3.633-1.239.798-.826 1.197-1.967 1.197-3.423 0-1.526-.378-2.68-1.134-3.465-.756-.784-1.953-1.176-3.59-1.176-.225 0-.456.007-.694.021a5.09 5.09 0 00-.672.042V28.6zm9.471-4.62c0 1.26-.196 2.358-.588 3.296-.392.938-.952 1.715-1.68 2.331-.714.616-1.589 1.078-2.625 1.386-1.036.308-2.198.462-3.486.462-.588 0-1.274-.028-2.058-.084a15.791 15.791 0 01-2.31-.294V16.902c.756-.14 1.54-.23 2.352-.273a32.05 32.05 0 012.121-.084c1.246 0 2.373.14 3.381.42 1.022.28 1.897.721 2.625 1.323s1.288 1.372 1.68 2.31c.392.938.588 2.065.588 3.381zM36.368 16.713v2.793h-4.39v11.76h-3.275v-11.76h-4.39v-2.793h12.055z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_1295_111419\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" fill=\"none\" {...props}><g clipPath=\"url(#clip0_1295_111439)\"><path d=\"M0 9a9 9 0 019-9h30a9 9 0 019 9v30a9 9 0 01-9 9H9a9 9 0 01-9-9V9z\" fill=\"#384177\" /><path d=\"M9 0a9 9 0 00-9 9v.261L44.872 2.18A8.965 8.965 0 0039 0H9zM45.798 3.102L37.567 48H39a9 9 0 009-9V9c0-2.256-.83-4.319-2.202-5.898z\" fill=\"#2A3052\" /><path d=\"M17.642 28.799c.462 0 .84-.035 1.134-.105.308-.084.553-.19.735-.316.182-.14.308-.3.378-.483.07-.181.105-.384.105-.608 0-.476-.224-.868-.672-1.177-.448-.322-1.218-.665-2.31-1.029a20.165 20.165 0 01-1.428-.566 5.717 5.717 0 01-1.28-.82 4.093 4.093 0 01-.925-1.197c-.238-.476-.357-1.05-.357-1.722 0-.671.126-1.273.378-1.805a3.854 3.854 0 011.071-1.387c.462-.378 1.022-.665 1.68-.86.658-.21 1.4-.316 2.226-.316.98 0 1.827.105 2.541.316.714.21 1.302.44 1.764.692L21.737 20a8.157 8.157 0 00-1.365-.547c-.49-.168-1.085-.252-1.785-.252-.784 0-1.35.113-1.7.337-.337.21-.505.538-.505.986 0 .267.063.49.19.672.125.182.3.35.524.505.238.14.504.273.798.398.308.113.644.232 1.008.357.756.28 1.414.56 1.974.84.56.267 1.022.582 1.386.945a3.4 3.4 0 01.84 1.282c.182.49.273 1.085.273 1.785 0 1.358-.476 2.415-1.428 3.17-.952.742-2.387 1.113-4.305 1.113a10.95 10.95 0 01-1.743-.126c-.518-.07-.98-.16-1.386-.273a8.696 8.696 0 01-1.029-.357 8.437 8.437 0 01-.714-.357l.924-2.604c.434.239.966.456 1.596.652.644.181 1.428.273 2.352.273zM35.23 16.744v2.794h-4.39v11.76h-3.275v-11.76h-4.39v-2.794H35.23z\" fill=\"#fff\" /></g><defs><clipPath id=\"clip0_1295_111439\"><path fill=\"#fff\" d=\"M0 0h48v48H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { getStaticUrl, getUrlBinaryBot, getUrlSmartTrader } from '../helpers/urls';\nimport IcAppstoreBinaryBot from '../public/images/ic-appstore-binary-bot.svg';\nimport IcAppstoreDerivBot from '../public/images/ic-appstore-deriv-bot.svg';\nimport IcAppstoreDerivGo from '../public/images/ic-appstore-deriv-go.svg';\nimport IcAppstoreDerivTrader from '../public/images/ic-appstore-deriv-trader.svg';\nimport IcAppstoreSmartTrader from '../public/images/ic-appstore-smart-trader.svg';\n\nexport const optionsAndMultipliersContent = [\n    {\n        description: 'Options and multipliers trading platform.',\n        icon: <IcAppstoreDerivTrader />,\n        redirect: '/',\n        title: 'Deriv Trader',\n    },\n    {\n        description: 'Automate your trading, no coding needed.',\n        icon: <IcAppstoreDerivBot />,\n        redirect: '/bot',\n        title: 'Deriv Bot',\n    },\n    {\n        description: 'Our legacy options trading platform.',\n        icon: <IcAppstoreSmartTrader />,\n        isExternal: true,\n        redirect: getUrlSmartTrader(),\n        title: 'SmartTrader',\n    },\n    {\n        description: 'Our legacy automated trading platform.',\n        icon: <IcAppstoreBinaryBot />,\n        isExternal: true,\n        redirect: getUrlBinaryBot(),\n        title: 'Binary Bot',\n    },\n    {\n        description: 'Trade on the go with our mobile app.',\n        icon: <IcAppstoreDerivGo />,\n        isExternal: true,\n        redirect: getStaticUrl('/deriv-go'),\n        title: 'Deriv GO',\n    },\n];\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useDevice from '../../hooks/useDevice';\nimport { WalletButton } from '../Base';\nimport { useModal } from '../ModalProvider';\nimport './DerivAppsSuccessFooter.scss';\n\nconst DerivAppsSuccessFooter = () => {\n    const { hide } = useModal();\n    const { isDesktop } = useDevice();\n    const history = useHistory();\n\n    return (\n        <div className='wallets-deriv-apps-success-footer'>\n            <WalletButton isFullWidth={!isDesktop} onClick={hide} size='lg' text='Maybe later' variant='outlined' />\n            <WalletButton\n                isFullWidth={!isDesktop}\n                onClick={() => {\n                    history.push('wallets/cashier/transfer');\n                    hide();\n                }}\n                size='lg'\n                text='Transfer funds'\n            />\n        </div>\n    );\n};\n\nexport { DerivAppsSuccessFooter };\n","import React, { useCallback, useEffect } from 'react';\nimport { useActiveWalletAccount, useCreateNewRealAccount, useSettings } from '@deriv/api';\nimport { toMoment } from '../../../../shared/src/utils/date';\nimport { Success } from '../../features/cfd/screens/Success';\nimport useDevice from '../../hooks/useDevice';\nimport DerivApps from '../../public/images/deriv-apps.svg';\nimport { THooks } from '../../types';\nimport { ModalStepWrapper, WalletButton, WalletText } from '../Base';\nimport { useModal } from '../ModalProvider';\nimport { DerivAppsSuccessFooter } from './DerivAppsSuccessFooter';\n\ntype TProps = {\n    isMaltaWallet?: THooks.ActiveWalletAccount['is_malta_wallet'];\n};\n\nconst DerivAppsGetAccount: React.FC<TProps> = ({ isMaltaWallet }) => {\n    const { show } = useModal();\n    const { isDesktop } = useDevice();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const { isSuccess: isAccountCreationSuccess, mutate: createNewRealAccount } = useCreateNewRealAccount();\n    const {\n        data: { country_code: countryCode, date_of_birth: dateOfBirth, first_name: firstName, last_name: lastName },\n    } = useSettings();\n\n    const landingCompanyName = activeWallet?.landing_company_name?.toLocaleUpperCase();\n\n    const openSuccessModal = useCallback(() => {\n        show(\n            <ModalStepWrapper\n                renderFooter={isDesktop ? undefined : () => <DerivAppsSuccessFooter />}\n                shouldHideHeader={isDesktop}\n            >\n                <Success\n                    description={`Transfer funds from ${activeWallet?.wallet_currency_type} Wallet to your Deriv Apps (${landingCompanyName}) account to start trading.`}\n                    displayBalance={activeWallet?.display_balance}\n                    renderButton={() => <DerivAppsSuccessFooter />}\n                    title={`Your Deriv Apps (${landingCompanyName}) account is ready`}\n                />\n            </ModalStepWrapper>\n        );\n    }, [activeWallet?.display_balance, activeWallet?.wallet_currency_type, isDesktop, landingCompanyName, show]);\n\n    useEffect(() => {\n        if (isAccountCreationSuccess) {\n            openSuccessModal();\n        }\n    }, [isAccountCreationSuccess, openSuccessModal]);\n\n    const createTradingAccount = () => {\n        createNewRealAccount({\n            payload: {\n                currency: activeWallet?.currency_config?.display_code,\n                date_of_birth: toMoment(dateOfBirth).format('YYYY-MM-DD'),\n                first_name: firstName,\n                last_name: lastName,\n                residence: countryCode || '',\n            },\n        });\n    };\n\n    return (\n        <div className='wallets-deriv-apps-section'>\n            <DerivApps />\n            <div className='wallets-deriv-apps-section__details'>\n                <WalletText size='sm' weight='bold'>\n                    Deriv Apps\n                </WalletText>\n                <WalletText lineHeight='2xs' size='2xs'>\n                    {isMaltaWallet\n                        ? 'Get a Deriv Apps trading account regulated by MFSA to trade multipliers on Deriv Trader.'\n                        : 'Get a Deriv Apps trading account to trade options and multipliers on these apps.'}\n                </WalletText>\n            </div>\n            <WalletButton color='primary-light' onClick={createTradingAccount} text='Get' />\n        </div>\n    );\n};\n\nexport { DerivAppsGetAccount };\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport DerivApps from '../../public/images/deriv-apps.svg';\nimport { THooks } from '../../types';\nimport { WalletButton, WalletText } from '../Base';\nimport { WalletListCardBadge } from '../WalletListCardBadge';\n\ntype TProps = {\n    isDemo?: THooks.ActiveWalletAccount['is_virtual'];\n    label?: THooks.ActiveWalletAccount['landing_company_name'];\n    tradingAccountLoginId?: string;\n};\n\nconst DerivAppsTradingAccount: React.FC<TProps> = ({ isDemo, label, tradingAccountLoginId }) => {\n    const history = useHistory();\n    return (\n        <div className='wallets-deriv-apps-section'>\n            <DerivApps />\n            <div className='wallets-deriv-apps-section__details'>\n                <div className='wallets-deriv-apps-section__title-and-badge'>\n                    <WalletText size='sm'>Deriv Apps</WalletText>\n                    <WalletListCardBadge isDemo={isDemo} label={label} />\n                </div>\n                <WalletText size='sm' weight='bold'>\n                    [Balance]\n                </WalletText>\n                <WalletText color='less-prominent' lineHeight='sm' size='xs' weight='bold'>\n                    {tradingAccountLoginId}\n                </WalletText>\n            </div>\n            <WalletButton\n                color='white'\n                onClick={() => {\n                    history.push('wallets/cashier/transfer');\n                }}\n                text='Transfer'\n                variant='outlined'\n            />\n        </div>\n    );\n};\n\nexport { DerivAppsTradingAccount };\n","import React from 'react';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { DerivAppsGetAccount } from './DerivAppsGetAccount';\nimport { DerivAppsTradingAccount } from './DerivAppsTradingAccount';\nimport './DerivAppsSection.scss';\n\nconst DerivAppsSection: React.FC = () => {\n    const { data: activeWallet } = useActiveWalletAccount();\n    const tradingAccountLoginId = activeWallet?.linked_to?.find(account => account?.platform === 'dtrade')?.loginid;\n\n    return tradingAccountLoginId ? (\n        <DerivAppsTradingAccount\n            isDemo={activeWallet?.is_virtual}\n            label={activeWallet?.landing_company_name}\n            tradingAccountLoginId={tradingAccountLoginId}\n        />\n    ) : (\n        <DerivAppsGetAccount isMaltaWallet={activeWallet?.is_malta_wallet} />\n    );\n};\n\nexport default DerivAppsSection;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useHistory } from 'react-router-dom';\nimport { useActiveWalletAccount } from '@deriv/api';\nimport { optionsAndMultipliersContent } from '../../constants/constants';\nimport { getStaticUrl, getUrlBinaryBot, getUrlSmartTrader } from '../../helpers/urls';\nimport useDevice from '../../hooks/useDevice';\nimport { WalletButton, WalletText } from '../Base';\nimport { DerivAppsSection } from '../DerivAppsSection';\nimport { TradingAccountCard } from '../TradingAccountCard';\nimport './OptionsAndMultipliersListing.scss';\n\ntype TShowButtonProps = Pick<typeof optionsAndMultipliersContent[number], 'isExternal' | 'redirect'>;\n\ntype TLinkTitleProps = Pick<typeof optionsAndMultipliersContent[number], 'icon' | 'title'>;\n\nconst LinkTitle: React.FC<TLinkTitleProps> = ({ icon, title }) => {\n    const handleClick = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        event.persist();\n        switch (title) {\n            case 'Deriv Trader':\n                window.open(getStaticUrl(`/dtrader`));\n                break;\n            case 'Deriv Bot':\n                window.open(getStaticUrl(`/dbot`));\n                break;\n            case 'SmartTrader':\n                window.open(getUrlSmartTrader());\n                break;\n            case 'Binary Bot':\n                window.open(getUrlBinaryBot());\n                break;\n            case 'Deriv GO':\n                window.open(getStaticUrl('/deriv-go'));\n                break;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <div className='wallets-options-and-multipliers-listing__content__icon' onClick={handleClick}>\n            {icon}\n        </div>\n    );\n};\n\nconst ShowOpenButton = ({ isExternal, redirect }: TShowButtonProps) => {\n    const history = useHistory();\n    const { data } = useActiveWalletAccount();\n    if (data?.dtrade_loginid) {\n        return (\n            <WalletButton\n                onClick={() => {\n                    if (isExternal) {\n                        window.open(redirect, '_blank');\n                    } else {\n                        history.push(redirect);\n                    }\n                }}\n                text='Open'\n            />\n        );\n    }\n    return null;\n};\n\nconst OptionsAndMultipliersListing: React.FC = () => {\n    const { isMobile } = useDevice();\n    const { data } = useActiveWalletAccount();\n\n    return (\n        <div\n            className={classNames('wallets-options-and-multipliers-listing', {\n                'wallets-options-and-multipliers-listing--border': data?.is_crypto,\n            })}\n        >\n            <section className='wallets-options-and-multipliers-listing__header'>\n                <div className='wallets-options-and-multipliers-listing__header-title'>\n                    {!isMobile && (\n                        <WalletText align='center' size='xl' weight='bold'>\n                            Options & Multipliers\n                        </WalletText>\n                    )}\n                    <div className='wallets-options-and-multipliers-listing__header-subtitle'>\n                        <h1>\n                            Earn a range of payouts by correctly predicting market price movements with{' '}\n                            <a\n                                className='wallets-options-and-multipliers-listing__header-subtitle__link'\n                                href='https://deriv.com/trade-types/options/digital-options/up-and-down/'\n                                key={0}\n                                rel='noopener noreferrer'\n                                target='_blank'\n                            >\n                                options\n                            </a>\n                            , or get the upside of CFDs without risking more than your initial stake with{' '}\n                            <a\n                                className='wallets-options-and-multipliers-listing__header-subtitle__link'\n                                href='https://deriv.com/trade-types/multiplier/'\n                                key={1}\n                                rel='noopener noreferrer'\n                                target='_blank'\n                            >\n                                multipliers\n                            </a>\n                            .\n                        </h1>\n                    </div>\n                </div>\n                <DerivAppsSection />\n            </section>\n            <div className='wallets-options-and-multipliers-listing__content'>\n                {optionsAndMultipliersContent.map(account => {\n                    const title = account.title;\n                    return (\n                        <TradingAccountCard\n                            {...account}\n                            key={`trading-account-card-${account.title}`}\n                            leading={() => <LinkTitle icon={account.icon} title={title} />}\n                            trailing={() => (\n                                <ShowOpenButton isExternal={account.isExternal} redirect={account.redirect} />\n                            )}\n                        >\n                            <div className='wallets-options-and-multipliers-listing__content__details'>\n                                <WalletText size='sm' weight='bold'>\n                                    {account.title}\n                                </WalletText>\n\n                                <WalletText size='xs'>{account.description}</WalletText>\n                            </div>\n                        </TradingAccountCard>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default OptionsAndMultipliersListing;\n","import React from 'react';\nimport { CFDPlatformsList } from '../../features';\nimport useDevice from '../../hooks/useDevice';\nimport { TabList, TabPanel, TabPanels, Tabs } from '../Base';\nimport { OptionsAndMultipliersListing } from '../OptionsAndMultipliersListing';\nimport './AccountsList.scss';\n\nconst AccountsList = () => {\n    const { isMobile } = useDevice();\n\n    if (isMobile) {\n        return (\n            <Tabs className='wallets-accounts-list'>\n                {/* TODO: Localization needed on tab headers */}\n                <TabList list={['CFDs', 'Options & multipliers']} />\n                <TabPanels>\n                    <TabPanel>\n                        <CFDPlatformsList />\n                    </TabPanel>\n                    <TabPanel>\n                        <OptionsAndMultipliersListing />\n                    </TabPanel>\n                </TabPanels>\n            </Tabs>\n        );\n    }\n\n    return (\n        <div className='wallets-accounts-list'>\n            <div className='wallets-accounts-list__content'>\n                <CFDPlatformsList />\n                <OptionsAndMultipliersListing />\n            </div>\n        </div>\n    );\n};\n\nexport default AccountsList;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\nimport './WalletListCardIBalance.scss';\n\ntype TProps = {\n    balance: THooks.WalletAccountsList['display_balance'];\n};\n\nconst WalletListCardIBalance: React.FC<TProps> = ({ balance }) => (\n    <div className='wallets-balance__container'>\n        <WalletText align='right' color='primary' size='xs'>\n            Wallet balance\n        </WalletText>\n\n        <WalletText align='right' size='xl' weight='bold'>\n            {balance}\n        </WalletText>\n    </div>\n);\n\nexport default WalletListCardIBalance;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useAuthorize } from '@deriv/api';\nimport useDevice from '../../hooks/useDevice';\nimport IcCashierAdd from '../../public/images/ic-cashier-deposit.svg';\nimport IcCashierStatement from '../../public/images/ic-cashier-statement.svg';\nimport IcCashierTransfer from '../../public/images/ic-cashier-transfer.svg';\nimport IcCashierWithdrawal from '../../public/images/ic-cashier-withdrawal.svg';\nimport { THooks } from '../../types';\nimport { WalletButton, WalletText } from '../Base';\nimport './WalletListCardActions.scss';\n\nconst getWalletHeaderButtons = (isDemo: boolean, handleAction?: () => void) => {\n    const buttons = [\n        {\n            icon: <IcCashierAdd />,\n            name: isDemo ? 'reset-balance' : 'deposit',\n            text: isDemo ? 'Reset balance' : 'Deposit',\n        },\n        {\n            icon: <IcCashierWithdrawal />,\n            name: 'withdraw',\n            text: 'Withdraw',\n        },\n        {\n            icon: <IcCashierTransfer />,\n            name: 'transfer',\n            text: 'Transfer',\n        },\n        {\n            icon: <IcCashierStatement />,\n            name: 'transactions',\n            text: 'Transactions',\n        },\n    ] as const;\n\n    // Filter out the \"Withdraw\" button when is_demo is true\n    const filteredButtons = isDemo ? buttons.filter(button => button.name !== 'withdraw') : buttons;\n\n    const orderForDemo = ['transfer', 'transactions', 'reset-balance'];\n\n    const sortedButtons = isDemo\n        ? [...filteredButtons].sort((a, b) => orderForDemo.indexOf(a.name) - orderForDemo.indexOf(b.name))\n        : filteredButtons;\n\n    return sortedButtons.map(button => ({\n        ...button,\n        action: () => handleAction?.(),\n    }));\n};\n\ntype TProps = {\n    isActive: THooks.WalletAccountsList['is_active'];\n    isDemo: THooks.WalletAccountsList['is_virtual'];\n    loginid: THooks.WalletAccountsList['loginid'];\n};\n\nconst WalletListCardActions: React.FC<TProps> = ({ isActive, isDemo, loginid }) => {\n    const { switchAccount } = useAuthorize();\n    const { isMobile } = useDevice();\n    const history = useHistory();\n\n    if (isMobile)\n        return (\n            <div className='wallets-mobile-actions__container'>\n                <div className='wallets-mobile-actions'>\n                    {getWalletHeaderButtons(isDemo).map(button => (\n                        <div className='wallets-mobile-actions-content' key={button.name}>\n                            <button\n                                className='wallets-mobile-actions-content-icon'\n                                key={button.name}\n                                onClick={() => {\n                                    history.push(`/wallets/cashier/${button.name}`);\n                                }}\n                            >\n                                {button.icon}\n                            </button>\n                            <WalletText size='sm'>{button.text}</WalletText>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n\n    return (\n        <div className='wallets-header__actions'>\n            {getWalletHeaderButtons(isDemo).map(button => (\n                <WalletButton\n                    icon={button.icon}\n                    key={button.name}\n                    onClick={() => {\n                        switchAccount(loginid);\n                        history.push(`/wallets/cashier/${button.name}`);\n                    }}\n                    rounded='md'\n                    text={isActive ? button.text : undefined}\n                    variant='outlined'\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default WalletListCardActions;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\n\ntype TProps = {\n    title: THooks.WalletAccountsList['currency'];\n};\n\nconst WalletListCardTitle: React.FC<TProps> = ({ title }) => {\n    return (\n        <WalletText size='lg' weight='bold'>\n            {title} Wallet\n        </WalletText>\n    );\n};\n\nexport default WalletListCardTitle;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport WalletListCardActions from '../WalletListCardActions/WalletListCardActions';\nimport WalletListCardBadge from '../WalletListCardBadge/WalletListCardBadge';\nimport WalletListCardTitle from '../WalletListCardTitle/WalletListCardTitle';\nimport './WalletListCardIDetails.scss';\n\ntype TProps = {\n    badge?: THooks.WalletAccountsList['landing_company_name'];\n    currency: THooks.WalletAccountsList['wallet_currency_type'];\n    isActive: THooks.WalletAccountsList['is_active'];\n    isDemo: THooks.WalletAccountsList['is_virtual'];\n    loginid: THooks.WalletAccountsList['loginid'];\n    title: Exclude<THooks.WalletAccountsList['currency'], undefined>;\n};\n\nconst WalletListCardIDetails: React.FC<TProps> = ({ badge, isActive, isDemo, loginid, title }) => (\n    <div className='wallets-list-details__action-container'>\n        <div className='wallets-list-details__elements'>\n            <WalletListCardTitle title={title} />\n            {badge && <WalletListCardBadge isDemo={isDemo} label={badge} />}\n        </div>\n        <WalletListCardActions isActive={isActive} isDemo={isDemo} loginid={loginid} />\n    </div>\n);\n\nexport default WalletListCardIDetails;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletCurrencyCard } from '../WalletCurrencyCard';\nimport WalletListCardIBalance from '../WalletListCardIBalance/WalletListCardIBalance';\nimport WalletListCardIDetails from '../WalletListCardIDetails/WalletListCardIDetails';\nimport './WalletListCard.scss';\n\ntype TProps = {\n    badge?: THooks.WalletAccountsList['landing_company_name'];\n    balance: THooks.WalletAccountsList['display_balance'];\n    currency: THooks.WalletAccountsList['wallet_currency_type'];\n    isActive: THooks.WalletAccountsList['is_active'];\n    isDemo: THooks.WalletAccountsList['is_virtual'];\n    loginid: THooks.WalletAccountsList['loginid'];\n    title: Exclude<THooks.WalletAccountsList['currency'], undefined>;\n};\n\nconst WalletListCard: React.FC<TProps> = ({ badge, balance, currency, isActive, isDemo, loginid, title }) => (\n    <div className='wallets-list-header__card_container'>\n        <div className='wallets-list-header__content'>\n            <div className='wallets-list-header__details-container'>\n                <WalletCurrencyCard currency={currency} isDemo={isDemo} />\n\n                <WalletListCardIDetails\n                    badge={badge}\n                    currency={currency}\n                    isActive={isActive}\n                    isDemo={isDemo}\n                    loginid={loginid}\n                    title={title}\n                />\n            </div>\n            <WalletListCardIBalance balance={balance} />\n        </div>\n    </div>\n);\n\nexport default WalletListCard;\n","import React, { useEffect, useRef } from 'react';\nimport IcDropdown from '../../public/images/ic-dropdown.svg';\nimport { THooks } from '../../types';\nimport './WalletsAccordion.scss';\n\ntype TProps = {\n    isDemo?: THooks.WalletAccountsList['is_virtual'];\n    isOpen?: THooks.WalletAccountsList['is_active'];\n    onToggle?: () => void;\n    renderHeader: () => React.ReactNode;\n};\n\nconst WalletsAccordion: React.FC<React.PropsWithChildren<TProps>> = ({\n    children,\n    isDemo = false,\n    isOpen = false,\n    onToggle,\n    renderHeader,\n}) => {\n    const accordionRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            if (isOpen && accordionRef?.current) {\n                accordionRef.current.style.scrollMarginTop = '24px';\n                accordionRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }, 300);\n        return () => clearTimeout(timeout);\n    }, [isOpen]);\n\n    return (\n        <div\n            className={`wallets-accordion wallets-accordion ${\n                isDemo ? 'wallets-accordion wallets-accordion--virtual' : ''\n            }`}\n            ref={accordionRef}\n        >\n            <div\n                className={`wallets-accordion__header wallets-accordion__header ${\n                    isDemo ? 'wallets-accordion__header wallets-accordion__header--virtual' : ''\n                }`}\n            >\n                {renderHeader()}\n                {!isOpen && (\n                    <div\n                        className={`wallets-accordion__dropdown ${isOpen ? 'wallets-accordion__dropdown--open' : ''}`}\n                        onClick={onToggle}\n                    >\n                        <IcDropdown />\n                    </div>\n                )}\n            </div>\n            <div className={`wallets-accordion__content ${isOpen ? 'wallets-accordion__content--visible' : ''}`}>\n                {isOpen && children}\n            </div>\n        </div>\n    );\n};\n\nexport default WalletsAccordion;\n","import React from 'react';\nimport { useAuthorize, useCurrencyConfig, useWalletAccountsList } from '@deriv/api';\nimport { AccountsList } from '../AccountsList';\nimport { WalletsAccordionLoader } from '../SkeletonLoader';\nimport { WalletListCard } from '../WalletListCard';\nimport { WalletsAccordion } from '../WalletsAccordion';\nimport './DesktopWalletsList.scss';\n\nconst DesktopWalletsList: React.FC = () => {\n    const { data: wallets } = useWalletAccountsList();\n    const { isLoading: isAuthorizeLoading, switchAccount } = useAuthorize();\n    const { isLoading: isCurrencyConfigLoading } = useCurrencyConfig();\n\n    return (\n        <div className='wallets-desktop-wallets-list'>\n            {(isAuthorizeLoading || isCurrencyConfigLoading) && <WalletsAccordionLoader />}\n            {wallets?.map(account => {\n                return (\n                    <WalletsAccordion\n                        isDemo={account.is_virtual}\n                        isOpen={account.is_active}\n                        key={`wallets-accordion-${account.loginid}`}\n                        onToggle={() => switchAccount(account.loginid)}\n                        renderHeader={() => (\n                            <WalletListCard\n                                badge={account.landing_company_name}\n                                balance={account.display_balance}\n                                currency={account.wallet_currency_type || 'USD'}\n                                isActive={account.is_active}\n                                isDemo={account.is_virtual}\n                                loginid={account.loginid}\n                                title={account.currency || 'USD'}\n                            />\n                        )}\n                    >\n                        <AccountsList />\n                    </WalletsAccordion>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default DesktopWalletsList;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\nimport { WalletCardIcon } from '../WalletCardIcon';\nimport { WalletGradientBackground } from '../WalletGradientBackground';\nimport { WalletListCardBadge } from '../WalletListCardBadge';\nimport './WalletCard.scss';\n\ntype TProps = {\n    account: THooks.WalletAccountsList;\n};\n\nconst WalletCard: React.FC<TProps> = ({ account }) => {\n    return (\n        <div className='wallets-card'>\n            <WalletGradientBackground\n                currency={account?.wallet_currency_type || 'USD'}\n                device='mobile'\n                hasShine\n                isDemo={account?.is_virtual}\n                type='card'\n            >\n                <div className='wallets-card__details'>\n                    <div className='wallets-card__details__top'>\n                        <WalletCardIcon type={account?.wallet_currency_type} />\n                        <div className='wallets-card__details-landing_company'>\n                            {account?.landing_company_name && (\n                                <WalletListCardBadge\n                                    isDemo={account?.is_virtual}\n                                    label={account?.landing_company_name}\n                                />\n                            )}\n                        </div>\n                    </div>\n                    <div className='wallets-card__details__bottom'>\n                        <WalletText color={account?.is_virtual ? 'white' : 'black'} size='2xs'>\n                            {account?.currency} Wallet\n                        </WalletText>\n                        <p className='wallets-card__details__bottom__balance'>\n                            <WalletText color={account?.is_virtual ? 'white' : 'black'} size='sm' weight='bold'>\n                                {account?.display_balance}\n                            </WalletText>\n                        </p>\n                    </div>\n                </div>\n            </WalletGradientBackground>\n        </div>\n    );\n};\n\nexport default WalletCard;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 500 500\" {...props}><path d=\"M408.297 119.391c-8.558-18.226-21.799-34.853-39.482-44.904-20.181-11.47-44.005-12.327-66.276-7.522-23.715 5.117-45.294 16.259-66.556 27.553-10.678 5.672-21.35 11.383-32.365 16.384-11.015 5.001-22.33 9.017-34.056 11.992-11.051 2.803-22.311 5.199-32.69 10.068-9.792 4.594-17.971 11.629-24.184 20.464-13.756 19.565-16.392 44.03-16.126 67.311.061 5.308.149 10.617.536 15.91.562 7.673.372 16.35.041 23.801-.334 7.525-1.277 15.008-2.096 22.492-1.59 14.519-2.9 29.753 2.177 43.771 2.676 7.388 7.141 13.801 11.285 20.408 4.052 6.462 7.144 13.246 9.627 20.45 4.773 13.851 8.075 28.754 17.062 40.667 3.439 4.559 7.568 8.578 12.176 11.938 4.037 4.042 8.767 7.388 13.774 10.115 6.481 3.53 13.438 6.135 20.448 8.394 2.751.886 5.517 1.732 8.29 2.561 4.305 1.503 8.69 2.771 13.107 3.733.857.233 1.713.471 2.57.701 16.327 4.377 33.365 7.437 50.234 4.814 3.306-.093 6.583-.686 9.949-2.306a64.174 64.174 0 0014.326-6.533c6.477-3.987 12.321-8.91 18.126-13.797 5.892-4.961 11.805-9.957 18.423-13.94 6.787-4.085 14.253-6.794 21.371-10.214 6.752-3.244 13.091-7.307 17.947-13.092 4.478-5.335 7.628-11.592 9.85-18.168 4.609-13.639 5.156-28.07 6.613-42.264.972-9.467 1.042-19.915 5.756-28.297 9.061-16.113 21.107-30.448 28.372-47.46 9.307-21.794 14.68-45.315 15.095-69.041.396-22.569-3.698-45.489-13.324-65.989z\" fill=\"#a0ccd0\" /><path d=\"M343.964 214.069c-5.154 6.23-9.56 12.912-14.079 19.599-4.433 6.559-9.661 13.425-17.386 16.206-8.607 3.098-18 1.042-26.872.733-8.794-.306-16.779 1.627-24.026 6.719-6.937 4.875-12.52 11.287-18.745 16.979-6.481 5.927-13.72 11.137-21.705 14.845-7.8 3.622-16.577 5.69-25.184 4.484-4.619-.647-8.813-2.481-13.193-3.97-4.492-1.526-9.024-2.008-13.749-1.627-17.522 1.41-34.766 7.854-49.945 16.508-8.407 4.793-16.233 10.357-23.551 16.51a54.292 54.292 0 001.695 5.657c2.676 7.388 7.141 13.801 11.285 20.408 4.052 6.462 7.144 13.246 9.627 20.45 4.773 13.851 8.075 28.754 17.062 40.667 3.439 4.559 7.568 8.578 12.176 11.938 4.037 4.042 8.767 7.388 13.774 10.115 6.481 3.53 13.438 6.135 20.448 8.394 2.751.886 5.517 1.732 8.29 2.561 4.305 1.503 8.69 2.771 13.107 3.733.857.233 1.713.471 2.57.701 16.327 4.377 33.365 7.437 50.234 4.814 3.306-.093 6.583-.686 9.949-2.306a64.174 64.174 0 0014.326-6.533c6.477-3.987 12.321-8.91 18.126-13.797 5.892-4.961 11.805-9.957 18.423-13.94 6.787-4.085 14.253-6.794 21.371-10.214 6.752-3.244 13.091-7.307 17.947-13.092 4.478-5.335 7.628-11.592 9.85-18.168 4.609-13.639 5.156-28.07 6.613-42.264.972-9.467 1.042-19.915 5.756-28.297 9.061-16.113 21.107-30.448 28.372-47.46 9.307-21.794 14.68-45.315 15.095-69.041.138-7.869-.284-15.78-1.282-23.617-14.282 4.873-27.92 11.661-40.297 19.917-13.492 8.997-25.743 19.89-36.082 32.388z\" fill=\"#81bbc1\" /><path d=\"M329.97 389.509c-5.96-1.211-12.004-1.905-18.092-1.736-6.288.175-12.528 1.1-18.732 2.084-11.449 1.817-23.187 3.91-34.758 1.837-5.351-.958-10.532-2.813-15.029-5.907-4.511-3.103-8.311-7.154-13.494-9.195-10.59-4.169-22.14.041-33.076-1.241-10.309-1.209-18.386-8.299-26.643-13.921-4.111-2.799-8.452-5.336-13.209-6.866-4.915-1.581-10.172-2.07-15.307-1.629-9.108.781-17.82 4.209-25.672 8.846a113.299 113.299 0 012.174 5.788c4.773 13.851 8.075 28.754 17.062 40.668 3.439 4.559 7.568 8.578 12.176 11.938 4.037 4.042 8.767 7.388 13.774 10.115 6.481 3.53 13.438 6.135 20.448 8.394 2.751.886 5.517 1.732 8.29 2.561 4.305 1.503 8.69 2.771 13.107 3.733.857.233 1.713.471 2.57.701 16.327 4.377 33.365 7.437 50.234 4.814 3.306-.092 6.583-.685 9.949-2.306a64.174 64.174 0 0014.326-6.533c6.477-3.987 12.321-8.91 18.126-13.797 5.892-4.961 11.805-9.957 18.423-13.94 6.787-4.085 14.253-6.794 21.371-10.214 4.893-2.351 9.561-5.143 13.613-8.698-7.195-1.883-14.333-4.012-21.631-5.496z\" fill=\"#91c4c9\" /><g><defs><path id=\"a\" d=\"M434.626 38.546c-3.242-3.429-8.028-5.043-12.566-5.827-5.74-.991-11.63-1.008-17.435-1.275-6.971-.32-13.941-.656-20.913-.952a2326.823 2326.823 0 00-41.844-1.424c-27.512-.67-55.06-.801-82.567.161-21.807.763-59.085 5.98-86.651 15.616-6.588 2.303-13.12 4.886-18.998 8.371-9.36 4.251-17.647 10.873-23.47 19.253-3.369 4.849-5.606 10.375-6.359 16.237-.824 6.412.205 12.94 2.036 19.097.739 2.482 1.605 4.924 2.543 7.34-2.403 11.636-12.88 18.086-21.017 25.696-8.246 7.712-15.381 16.888-20.016 27.225-5.021 11.197-7.101 23.575-5.14 35.745 1.853 11.495 8.026 21.244 14.471 30.681.042.719.077 1.438.13 2.156.562 7.673.372 16.35.041 23.801-.334 7.525-1.277 15.008-2.096 22.492-1.59 14.519-10.864 36.814-5.787 50.832 2.675 7.387 4.634 9.196 11.152 15.065 5.667 5.104 15.241 11.528 17.724 18.733 4.773 13.851 8.075 28.754 17.062 40.667 3.439 4.559 7.568 8.578 12.176 11.938 4.037 4.042 8.767 7.388 13.774 10.115 6.481 3.53 13.438 6.135 20.448 8.394 2.751.886 5.517 1.732 8.29 2.561 4.305 1.503 8.69 2.771 13.107 3.733.857.233 1.713.471 2.57.701 16.327 4.377 33.365 7.437 50.234 4.814 3.306-.093 6.583-.686 9.949-2.306a64.174 64.174 0 0014.326-6.533c6.477-3.987 12.321-8.91 18.126-13.797 5.892-4.961 11.805-9.957 18.423-13.94 6.787-4.085 14.253-6.794 21.371-10.214 6.752-3.244 13.091-7.307 17.947-13.092 4.478-5.335 7.628-11.592 9.85-18.168 4.61-13.639 5.156-28.07 6.613-42.264.972-9.467 1.042-19.915 5.756-28.297 9.061-16.113 21.107-30.448 28.372-47.46 9.307-21.794 14.68-45.315 15.095-69.041.305-17.402-2.073-35.007-7.584-51.555 3.969-13.013 7.918-26.031 11.899-39.039 2.021-6.603 4.043-13.206 6.056-19.812 1.993-6.541 4.267-13.064 5.928-19.697 1.474-5.891 1.36-12.092-3.026-16.731z\" /></defs><clipPath id=\"b\"><use xlinkHref=\"#a\" overflow=\"visible\" /></clipPath><g clipPath=\"url(#b)\"><path d=\"M379.763 237.882l-196.739-14.739a6 6 0 01-5.45-7.083l28.751-154.243a6 6 0 015.63-4.895l208.362-9.337c3.955-.177 6.995 3.457 6.121 7.319l-40.374 178.319a6.003 6.003 0 01-6.301 4.659z\" fill=\"#d2eef7\" /><path d=\"M367.623 197.998c-.431-.815-1.276-1.248-2.056-1.658a359.326 359.326 0 00-3.804-1.963 204.129 204.129 0 00-7.113-3.481c-9.493-4.389-19.395-7.623-29.964-7.344-5.403.142-10.947.882-16.276-.362-5.036-1.175-9.327-4.376-14.411-5.411-5.287-1.077-10.648-.195-15.926.46-2.517.312-5.028.533-7.564.567-2.3.031-4.611.025-6.884.429-.705.125-1.366.324-2.009.558a291.773 291.773 0 00-12.974 2.836c-4.449 1.08-8.912 2.331-13.001 4.434-1.984 1.021-3.856 2.258-5.532 3.734-1.531 1.349-3.306 3.1-3.431 5.271-.261 4.504 5.347 5.111 8.596 5.391 10.921.938 22.007.061 32.653-2.548 5.475-1.342 10.792-3.274 16.411-3.972 5.294-.658 11.036-1 16.173.697 5.038 1.663 9.324 5.224 14.037 7.597 4.557 2.295 9.397 4.07 14.477 4.723 2.618.336 5.237.33 7.855-.003 2.818-.358 5.592-.9 8.443-.905 5.078-.008 10.296 1.004 15.219-.714 1.895-.661 3.711-1.659 5.12-3.107 1.186-1.217 2.898-3.456 1.961-5.229z\" fill=\"#81bbc1\" /><path d=\"M345.971 192.135l-4.327-4.169a.81.81 0 00-.877-.163l-6.358 2.683a.81.81 0 01-1.121-.668l-2.623-26.944a.81.81 0 01.96-.874l12.498 2.422a.81.81 0 01.652.717l2.564 26.334c.073.749-.826 1.184-1.368.662z\" fill=\"#a0ccd0\" /><path d=\"M339.479 180.318c1.291-.119 2.586.004 3.866.173.982.13 1.972.29 2.965.407l-1.348-13.845a55.7 55.7 0 00-.729.011c-1.404.027-2.801.176-4.198.307-1.422.133-2.851.252-4.28.2-1.478-.054-2.893-.414-4.347-.643-.117-.018-.235-.027-.352-.043l1.486 15.257a11.989 11.989 0 002.851-.652c1.345-.486 2.644-1.039 4.086-1.172z\" fill=\"#81bbc1\" /><path d=\"M393.684 139.524c-.104-.037-.206-.079-.314-.1l-23.336-4.522-4.522 23.336 23.336 4.522c.108.021.219.02.329.024l4.507-23.26z\" fill=\"#a0ccd0\" /><path d=\"M386.174 160.824c-.48-.506-.954-.993-1.241-1.64-.252-.569-.39-1.182-.524-1.787-.298-1.344-.692-2.499-1.468-3.647-.373-.552-.774-1.09-1.084-1.682-.357-.68-.555-1.427-.736-2.169a72.346 72.346 0 00-1.352-4.879c-.249-.777-.472-1.6-.935-2.283-.432-.637-1.042-1.122-1.651-1.581-1.413-1.066-2.81-2.198-4.305-3.148-.986-.627-2.07-1.034-3.191-1.319l-4.176 21.548 21.812 4.227c-.256-.612-.707-1.174-1.149-1.64zM386.83 150.262c1.249-6.444 4.32-11.269 6.861-10.777 2.54.492 3.587 6.115 2.339 12.559-1.249 6.444-4.32 11.269-6.861 10.777-2.541-.492-3.588-6.115-2.339-12.559z\" fill=\"#81bbc1\" /><g fill=\"#a0ccd0\"><path d=\"M388.619 150.609c.408-2.105 1.191-3.724 1.75-3.616.559.108.681 1.903.273 4.008-.408 2.105-1.191 3.724-1.75 3.616-.559-.109-.681-1.903-.273-4.008zM393.183 151.493c.408-2.105 1.191-3.724 1.75-3.616.559.108.681 1.902.273 4.007-.408 2.105-1.191 3.724-1.75 3.615-.559-.106-.681-1.901-.273-4.006z\" /></g><path d=\"M358.281 108.089l-37.551-7.277a.81.81 0 00-.95.943l2.23 12.013a.81.81 0 01-.382.844l-13.458 8.006a.81.81 0 00-.307 1.064l6.603 12.945a.81.81 0 01-.225 1.008l-8.806 6.821a.81.81 0 00-.219 1.021l6.544 12.272a.808.808 0 01-.059.856l-6.95 9.604a.81.81 0 00.502 1.27l39.644 7.683c14.778 2.864 29.08-6.795 31.944-21.573l3.015-15.557c2.862-14.778-6.797-29.08-21.575-31.943z\" fill=\"#a0ccd0\" /><path d=\"M332.116 112.676l-10.622-1.681-1.16-6.252 12.719 2.012a2.997 2.997 0 01-.937 5.921zM337.346 172.173c-1.477-.558-3.001-1.005-4.388-1.776-1.298-.722-2.283-1.829-3.501-2.66-1.275-.87-2.646-1.065-4.152-.806-.798.137-1.576.385-2.379.495-.878.12-1.72-.004-2.558-.279-1.497-.491-2.851-1.337-4.342-1.848-1.52-.521-3.147-.744-4.75-.746-1.428-.002-2.836.179-4.221.474l-2.304 3.184a.81.81 0 00.502 1.27l37.845 7.334c-.864-2.435-3.448-3.772-5.752-4.642z\" fill=\"#81bbc1\" /><g fill=\"none\" stroke=\"#81bbc1\" strokeWidth=\"2.43\" strokeLinecap=\"round\" strokeMiterlimit=\"10\"><path d=\"M367.456 131.819l-12.923 7.826M356.452 129.687l9.064 12.087\" /></g><g><path d=\"M349.566 108.85l14.459-14.308c1.133-1.121 3.034-.104 2.729 1.46l-3.203 16.489a1.62 1.62 0 01-1.898 1.281l-11.256-2.181c-1.278-.247-1.757-1.825-.831-2.741z\" fill=\"#a0ccd0\" /><path d=\"M363.551 112.491l2.908-14.969-.001-.036-8.356 14.505a.81.81 0 00.548 1.2l3.003.582a1.62 1.62 0 001.898-1.282z\" fill=\"#81bbc1\" /></g><path d=\"M213.64 121.352a11.428 11.428 0 00-2.367 5.091c-.417 2.22-.129 4.627 1.102 6.521 1.231 1.894 3.481 3.174 5.729 2.949 1.388-.139 2.819-.98 3.158-2.333.247-.984-.15-2.066-.886-2.763-.737-.697-1.77-1.029-2.783-1.04-2.949-.03-5.504 2.74-5.62 5.686-.116 2.946 1.91 5.741 4.599 6.951s5.885.972 8.589-.205\" fill=\"none\" stroke=\"#a0ccd0\" strokeWidth=\"2.43\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\" /><g><path d=\"M253.454 188.913l4.612-3.851a.809.809 0 01.886-.1l6.151 3.128a.81.81 0 001.165-.586l4.53-26.69a.81.81 0 00-.896-.94l-12.639 1.528a.81.81 0 00-.701.669l-4.428 26.085c-.124.741.742 1.239 1.32.757z\" fill=\"#a0ccd0\" /><path d=\"M259.396 179.442c.719-.451 1.432-.983 2.209-1.329.773-.344 1.561-.216 2.377-.162.747.05 1.45-.01 2.148-.298.632-.261 1.205-.648 1.788-1.001.07-.043.142-.08.213-.12l2.654-15.634a4.673 4.673 0 00-.972-1.013l-12.548 1.517a.81.81 0 00-.701.669l-3.589 21.146c.675-.254 1.323-.602 1.935-.967 1.514-.903 2.993-1.871 4.486-2.808z\" fill=\"#81bbc1\" /></g><g><path d=\"M223.357 134.536l1.902 15.732c1.807 14.944 15.387 25.594 30.331 23.787l32.392-3.917a.811.811 0 00.673-.553l3.902-11.988a.811.811 0 00-.207-.833l-9.993-9.673a.81.81 0 01-.105-1.039l6.289-9.194a.81.81 0 00-.095-1.029l-10.255-10.296a.81.81 0 01-.034-1.107l10.354-11.749a.81.81 0 00.105-.92l-6.11-11.311a.81.81 0 00-.81-.419l-34.554 4.178c-14.943 1.806-25.593 15.386-23.785 30.331z\" fill=\"#a0ccd0\" /><path d=\"M288.394 160.749a12.192 12.192 0 01-4.838 1.29c-1.689.096-3.385-.011-5.071.147-1.496.14-3.005.456-4.319 1.215-1.229.71-2.013 1.858-3.096 2.735-1.489 1.206-3.419.548-5.173.692-1.509.124-2.97.542-4.329 1.208-2.562 1.257-4.582 3.355-5.658 5.98l32.071-3.878a.811.811 0 00.673-.553l3.451-10.602c-1.283.476-2.484 1.159-3.711 1.766zM286.582 107.989l-10.859 1.803a2.997 2.997 0 01-.982-5.912l8.829-1.466 3.012 5.575z\" fill=\"#81bbc1\" /></g><path d=\"M304.348 86.821c-.262-.819-.885-1.503-1.804-1.478-.941.026-1.71.773-2.138 1.55-1.006 1.828-.778 4.212-.523 6.201.161 1.257.417 2.5.781 3.715.283.944 1.255 3.647 1.356 3.861.223.473.833.339 1.086 0 .634-.848 1.23-5.566 1.37-6.806.138-1.22.22-2.444.206-3.673-.011-1.091.002-2.322-.334-3.37zM318.393 92.021c-.421-1.003-1.535-.722-2.267-.304a26.183 26.183 0 00-4.845 3.548c-1.637 1.526-3.094 3.265-4.253 5.182-.087.144-.183.48.09.749a.418.418 0 00.525.074c.216-.113 4.279-1.665 5.948-2.593 1.734-.964 3.317-2.26 4.242-4.049.371-.713.901-1.796.56-2.607zM286.103 92.021c.421-1.003 1.535-.722 2.267-.304a26.217 26.217 0 014.845 3.548c1.637 1.526 3.094 3.265 4.253 5.182.087.144.183.48-.091.749a.418.418 0 01-.525.074c-.216-.113-4.279-1.665-5.948-2.593-1.734-.964-3.317-2.26-4.242-4.049-.37-.713-.9-1.796-.559-2.607z\" fill=\"#81bbc1\" /><g><path d=\"M303.469 204.124c-7.648-6.491-17.287-9.996-25.109-16.263-5.849-4.686-10.762-10.328-14.735-16.607a100.033 100.033 0 01-1.305-7.966c-1.154-9.399-.768-19.223-4.096-28.225-1.438-3.888-3.51-7.582-6.479-10.511-2.934-2.895-6.636-4.847-10.529-6.121-9.825-3.216-20.489-2.182-30.23-5.769-.604-.222-1.014.145-1.127.62-.062.128-.137 2.449-.287 3.444-.024.161-.527 2.281-.542 2.937-.011.5-.106 1.487.345 1.784 7.161 4.704 14.49 10.088 17.609 17.928 3.222 8.098 3.935 17.07 2.622 25.724-1.273 8.392-6.66 15.423-7.871 23.82-.945 6.555.166 13.357 3.128 19.276-7.219 9.091-9.353 21.747-5.637 32.735a36.17 36.17 0 009.179 14.476c3.961 3.811 8.824 6.968 11.698 11.768 3.107 5.189 2.951 11.593 5.76 16.925 1.805 3.427 4.661 6.451 8.134 8.24a13.445 13.445 0 004.059 2.515c4.684 1.845 10.615 1.826 15.06-.666 3.965-2.223 6.031-6.251 7.461-10.396.931-2.699 1.658-5.532 2.735-8.19 1.773-.568 3.602-1.003 5.321-1.703 2.797-1.139 5.066-2.963 6.802-5.436 3.41-4.858 3.923-10.732 3.782-16.494a22.776 22.776 0 002.552-.444c9.703-2.316 14.886-11.987 14.587-21.46-.314-9.913-5.375-19.566-12.887-25.941zM197.045 90.951c-.148-2.79-.3-5.689-1.121-8.378-.811-2.655-2.751-4.585-3.751-7.117-.806-2.04-1.084-4.198-1.336-6.354-.406-3.476-1.066-7.438-4.011-9.707-3.367-2.594-7.743-3.024-11.866-2.477-4.317.573-9.3 1.918-12.6 4.907-1.687 1.528-3.04 3.42-4.517 5.144a102.853 102.853 0 01-4.659 5.111c-3.263 3.328-6.925 6.059-10.504 9.017-3.239 2.677-6.349 6.085-7.129 10.363-.795 4.362 1.119 8.92 2.701 12.913 1.438 3.63 3.244 7.164 5.906 10.055 1.056 3.101 1.749 6.291 1.932 9.657.126 2.312.22 4.658 1.196 6.798.863 1.892 2.398 3.397 4.1 4.549 2.023 1.369 4.354 2.197 6.644 3 2.526.885 4.897 1.958 7.3 3.127 4.244 2.065 8.715 3.213 13.306 1.489 4.229-1.588 7.504-5.129 8.722-9.491.687-2.461.426-4.995.698-7.504.248-2.295 1.308-4.302 2.562-6.2 1.232-1.863 2.628-3.621 3.721-5.574 1.187-2.12 1.819-4.376 2.142-6.775.736-5.464.856-11.052.564-16.553z\" fill=\"#01265a\" /><path d=\"M216.48 122.107c-.034-.04-.057-.085-.088-.127-.209-.791-.47-1.589-.123-2.335.264-.568.517-1.098.62-1.724a8.562 8.562 0 00.079-1.926c-.067-1.078-.331-2.227-1.23-2.921a2.33 2.33 0 00-1.361-.505 1.638 1.638 0 00-.503.077 2.19 2.19 0 00-.512-.549c-.281-.204-.654-.338-1.003-.297-.229.027-.466.091-.637.257-.017.016-.028.038-.044.056-.027.021-.056.036-.081.066-.705.86-.822 1.839-.712 2.921.118 1.154.61 2.482.047 3.587-.051.101-.105.198-.158.295-.036.045-.074.093-.109.133-.29.329-.592.649-.768 1.056-.352.815-.598 1.853-.226 2.691.332.747.798 1.411 1.546 1.788.539.272 1.214.435 1.846.38.264.399.426.871.729 1.249.405.507 1.041.887 1.711.72.556-.139.932-.587 1.189-1.074.326-.618.631-1.329.628-2.039-.005-.731-.387-1.247-.84-1.779z\" fill=\"#ffc564\" /><path d=\"M216.69 125.927c.326-.618.631-1.329.628-2.039-.003-.732-.384-1.249-.838-1.781-.034-.04-.057-.085-.088-.127-.122-.46-.257-.922-.284-1.375a3.396 3.396 0 01-.594-.49c-.735-.798-.909-1.773-1.045-2.811-.208-1.593-.87-3.119-2.524-3.504a3.172 3.172 0 00-1.028-.074c-.072.438-.08.895-.031 1.375.118 1.154.61 2.482.047 3.587-.051.101-.105.198-.158.295-.036.045-.074.093-.109.133-.29.329-.592.649-.768 1.056-.352.815-.598 1.853-.226 2.691.332.747.798 1.411 1.546 1.788.539.272 1.214.435 1.846.38.264.399.426.871.729 1.249.405.507 1.041.887 1.711.72.553-.138.929-.587 1.186-1.073z\" fill=\"#e0a155\" /><path d=\"M221.761 376.919c-.457-10.577-3.171-14.387-4.79-21.131a159.282 159.282 0 01-3.522-20.344 162.481 162.481 0 01-.877-20.49c.146-7.114 1.011-14.116 1.708-21.186.687-6.962.907-14.99-2.63-21.311.845-.383.518-1.918-.511-1.915-3.29.011-6.581.321-9.87.442-3.211.118-6.424.174-9.637.167a306.574 306.574 0 01-9.636-.185c-2.962-.1-6.013-.348-8.987-.423-.946-.024-.926-.11-.946-.024-1.284 5.409-2.44 11.314-3.324 16.454-.798 3.222-2.534 10.052-3.261 13.291-1.768 7.881-3.356 12.187-4.371 20.203a208.684 208.684 0 00-1.658 24.039 215.249 215.249 0 001.086 23.952c.098.966.22 1.932.329 2.898.009 1.361.019 2.722.04 4.083.109 7.058.426 14.125-.018 21.178-.224 3.565-.653 7.11-1.392 10.606-.707 3.346-1.642 6.642-2.275 10.004-1.094 5.81.074 13.974 1.248 18.767.674 2.753.894 5.496 1.035 8.3.165 3.255.446 6.503.844 9.738.778 6.324 1.947 12.623 3.655 18.765.142.512.27.828 1.481 1.028 7.905 1.306 16.041 1.221 24.035 1.733 3.964.254 15.121.913 16.743.758 2.229-.213 4.576-1.126 4.983-2.009 2.768-6.012.708-12.685-2.238-18.07-1.604-2.93-3.437-5.741-4.824-8.786-1.455-3.197-2.208-6.64-2.299-10.148-.377-14.586 8.942-26.712 14.771-39.366 1.633-3.544 3.076-7.202 4.006-10.998.784-3.196 1.246-6.683 1.102-10.02z\" fill=\"#3f79c5\" /><g fill=\"#3c6ea5\"><path d=\"M193.801 316.552c-1.507.283-3.009.593-4.504.929-1.246.28-4.484-.103-4.614.385-1.192 4.453-2.31 8.974-2.736 13.574a35.72 35.72 0 000 6.882c.235 2.336.668 4.658.722 7.009.054 2.338-.558 4.502-.944 6.784-.38 2.248-.109 4.385.259 6.614.71 4.3 1.426 8.621 2.634 12.815a47.781 47.781 0 002.157 6.009c.894 2.031 2.008 3.943 3.074 5.886 1.077 1.963 2.017 3.957 2.658 6.108.67 2.249 1.15 4.556 1.674 6.842 1.072 4.677 2.109 9.363 3.114 14.055.952 4.447 1.779 8.934 2.98 13.324a51.705 51.705 0 002.18 6.382c2.087-11.52 9.348-21.684 14.198-32.213 1.633-3.544 3.076-7.202 4.006-10.998.784-3.195 1.246-6.682 1.102-10.02-.457-10.577-3.171-14.387-4.79-21.131a159.282 159.282 0 01-3.522-20.344 162.481 162.481 0 01-.877-20.49c.003-.156.011-.312.015-.468-3.17.012-6.346.299-9.488.662-3.115.359-6.217.826-9.298 1.404zM198.853 471.935a91.175 91.175 0 00-.627-4.162c-.222-1.266-.431-2.558-.853-3.776-.42-1.211-1.098-2.186-1.826-3.225-.751-1.072-1.028-2.196-1.417-3.423-1.541-4.854-6.376-7.025-10.753-8.73a3132.585 3132.585 0 00-15.923-6.159c-1.236-.474-2.494-.921-3.665-1.545-1.014-.54-1.905-1.232-2.734-2.024-.863-.824-1.673-1.709-2.518-2.555.611 2.639.829 5.27.965 7.958.165 3.255.446 6.503.844 9.738.778 6.324 1.947 12.623 3.655 18.765.142.512.27.828 1.481 1.028 7.905 1.306 16.041 1.221 24.035 1.733 2.081.133 6.141.378 9.766.558l-.006-.075a86.754 86.754 0 00-.424-4.106z\" /></g><g fill=\"none\" stroke=\"#01265a\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M190.339 414.958c-2.627 8.526-4.031 16.332-2.528 21.378 3.493 11.724 12.212 21.376 13.852 27.376 1.641 6 1.38 12.628 1.38 12.628M193.216 406.527a185.129 185.129 0 00-1.794 5.072M196.606 397.849a308.907 308.907 0 00-2.026 5.081M211.652 343.973s-1.565 22.174-8.348 38.087c-1.07 2.511-2.275 5.288-3.532 8.232\" /><g><path d=\"M175.452 303.079c-.567 3.092-2.382 5.846-4.63 8.043-2.248 2.197-4.925 3.898-7.596 5.554M165.081 318.705c-.868.472-1.719.883-2.507 1.201M170.023 315.507c-.921.698-1.94 1.4-2.98 2.05M174.069 311.507c-.559.784-1.113 1.453-1.614 1.943-.15.146-.309.296-.477.449M176.812 306.624a26.732 26.732 0 01-1.36 2.713M178.031 301.852c0 .789-.162 1.688-.439 2.633\" /></g></g><g><path d=\"M313.206 484.448c-2.242-7.836-4.92-15.771-8.866-22.928-3.759-6.817-9.086-12.477-13.723-18.673-1.255-1.677-2.467-3.395-3.569-5.177-1.133-1.833-2.6-3.995-3.556-5.994-3.598-7.52-11.156-41.054-8.477-61.178.83-6.238 2.241-12.38 3.189-18.599.903-5.923 1.476-12.265.238-18.196-1.043-5.001-3.086-8.854-4.935-12.827a99.497 99.497 0 00-7.168-12.822 99.599 99.599 0 00-8.918-11.569c-3.554-3.968-7.301-7.726-10.129-12.276-1.475-2.374-2.739-4.873-3.903-7.411a468.263 468.263 0 01-3.622-8.04c-.639-1.466-.943-1.799-1.788-1.754-2.199.118-4.419.668-6.597.999-2.307.35-4.618.674-6.933.969-4.362.556-8.737 1.02-13.119 1.389-8.945.755-17.882.841-26.844 1.198-.915.036-1.377-.204-1.906.33-2.594 2.618-3.297 5.896-3.602 9.46-.375 4.383-1.352 8.908-.484 13.22a61.261 61.261 0 011.2 14.283c-.146 4.725-2.141 9.352-2.007 14.078-.127.396.018.864.565 1.037 4.544 1.436 8.044 4.287 11.124 7.859 2.993 3.47 5.689 7.14 9.05 10.281a58.126 58.126 0 004.457 3.752c-.018.118-.02.243.011.381 4.945 21.751 10.508 43.376 15.864 65.029 2.361 9.546 4.529 19.342 9.238 28.066 3.789 7.02 9.35 12.677 15.134 18.062.277.322.541.631.763.924a105.847 105.847 0 012.994 4.17 95.923 95.923 0 015.433 8.967 95.821 95.821 0 014.4 9.419 94.886 94.886 0 011.783 4.817c.569 1.676 1.176 5.094 2.216 6.134 1.174 1.174 6.08.287 7.229.188 4.929-.425 9.851-.965 14.765-1.538a627.906 627.906 0 0029.229-4.115c.486-.08 1.103-.184 1.314-.477.25-.345.107-.889-.05-1.438z\" fill=\"#3f79c5\" /><g fill=\"#3c6ea5\"><path d=\"M270.681 487.642c1.403-2.724 2.551-5.613 2.998-8.659.491-3.346.207-6.716.098-10.078-.109-3.323.277-6.562.557-9.865.26-3.064.194-6.146-.803-9.083-1.771-5.215-5.807-9.409-10.993-11.285a18.212 18.212 0 00-8.474-.935c-3.034.391-5.85 1.613-8.563 2.974-4.207 2.109-8.809 4.85-13.587 4.666 3.288 4.38 7.191 8.272 11.217 12.02.277.322.541.631.763.924a105.847 105.847 0 012.994 4.17 95.923 95.923 0 015.433 8.967 95.821 95.821 0 014.4 9.419 94.886 94.886 0 011.783 4.817c.569 1.676 1.176 5.094 2.216 6.134 1.174 1.174 6.08.287 7.229.188l.27-.026.207-.346a71.793 71.793 0 002.255-4.002zM252.195 384.281c-1.943 6.206-2.925 12.783-2 19.262.82 5.738 3.162 11.161 6.31 15.998 7.006 10.768 17.501 18.308 27.113 26.553 2.749 2.358 5.434 4.792 7.96 7.39 2.597 2.671 5.052 5.48 7.753 8.05 2.39 2.275 5.04 4.37 7.936 5.937a76.112 76.112 0 00-2.928-5.95c-3.759-6.817-9.086-12.477-13.723-18.673-1.255-1.677-2.467-3.395-3.569-5.177-1.133-1.833-2.6-3.995-3.556-5.994-3.598-7.52-11.156-41.054-8.477-61.178.83-6.238 2.241-12.38 3.189-18.599.903-5.923 1.476-12.265.238-18.196-.586-2.81-1.492-5.252-2.497-7.562-3.07 6.957-4.566 14.716-7.167 21.833-4.576 12.532-12.581 23.525-16.582 36.306z\" /></g><g><g fill=\"none\" stroke=\"#01265a\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M260.572 409.207c.754 5.504 2.099 10.848 4.428 15.635 7.044 14.478 17.217 19.565 25.435 37.957 8.217 18.391 9.99 25.351 9.99 25.351M259.819 400.52c.093 2.111.241 4.228.466 6.331M259.917 381.864c-.104 4.21-.262 8.792-.225 13.5M260.238 371.528c-.14 2.032-.228 3.91-.238 5.575-.004.598-.011 1.207-.021 1.827M262.848 343.987c-.51 6.797-1.405 14.327-2.056 21.045M263.239 333.795a91.545 91.545 0 01-.128 6.062M253.227 309.122c3.924 5.775 7.13 11.492 9.034 17.02M228.937 268.365s8.386 20.02 15.964 29.553a231.458 231.458 0 014.527 5.874\" /></g><g fill=\"none\" stroke=\"#01265a\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M220.989 304.595c2.807 3.834 7.237 6.228 11.825 7.462 4.589 1.234 9.385 1.417 14.133 1.594M244.472 317.492c1.284.113 2.496.192 3.571.232M236.679 316.502a99.91 99.91 0 004.222.611M228.585 314.402c.97.419 1.889.751 2.714.973.536.144 1.112.285 1.717.42M222.132 310.794a42.387 42.387 0 003.734 2.281M216.38 305.641c.702.958 1.698 1.969 2.87 2.965\" /></g><g fill=\"none\" stroke=\"#01265a\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M190.23 309.497c.95 2.525 2.47 4.806 4.635 6.385M189.438 284.752a274.265 274.265 0 00-.489 8.318c-.181 4.104-.323 8.179.236 12.249.04.291.086.582.139.873M190.848 271.041a236.227 236.227 0 00-1.231 11.448\" /><g><path d=\"M194.953 322.368c-.033 1.637-.062 3.284-.088 4.942M199.772 271.041c-3.17 11.8-4.294 29.146-4.752 48.295\" /></g></g><path d=\"M190.799 283.695a1.76 1.76 0 113.52-.001 1.76 1.76 0 01-3.52.001z\" fill=\"#ffc564\" /><path d=\"M191.214 284.819a1.75 1.75 0 001.345.637 1.756 1.756 0 00.772-3.337c-.504.63-.889 1.442-1.377 1.976-.195.215-.488.457-.74.724z\" fill=\"#e0a155\" /></g></g><g><path d=\"M249.66 286.378c-.492-.651-1.011-1.263-1.454-1.952-.487-.759-.978-1.516-1.467-2.275-.5-.775-.998-1.55-1.419-2.372-.105-.206-.073-.768-.358-.723-4.81.773-8.005 2.147-11.946 3.481-5.365 1.816-10.751 3.587-16.223 5.056-5.491 1.474-11.081 2.658-16.746 3.204a70.708 70.708 0 01-8.283.328c-2.775-.059-5.565-.155-8.069-1.483-2.576-1.366-4.984-2.87-7.733-3.899-2.28-.853-6.44-2.434-6.929-1.504-.159.302-.154.493-.235.874-.173.819-.483 1.612-.73 2.41-.25.809-.594 1.598-.699 2.439-.13 1.035 8.28 4.301 12.5 6.517 5.018 2.635 10.56 4.137 16.216 4.461 6.164.353 12.362-.98 18.347-2.32 2.943-.659 5.814-1.513 8.603-2.662 2.789-1.149 5.498-2.483 8.29-3.626 3.251-1.331 6.596-2.417 9.96-3.421 1.76-.526 3.527-1.029 5.295-1.531 1.09-.309 2.704-.41 3.268-.751.089-.052-.124-.167-.188-.251z\" fill=\"#824d41\" /><path d=\"M240.312 282.635c-1.816 1.093-3.933 1.494-5.942 2.086a31.04 31.04 0 00-5.739 2.366 32.14 32.14 0 00-5.171 3.433c-1.709 1.385-3.207 3.007-5.131 4.11-1.883 1.081-3.942 1.816-5.815 2.918a22.705 22.705 0 00-3.033 2.132c1.662-.331 3.314-.693 4.95-1.059 2.943-.659 5.814-1.513 8.603-2.662 2.789-1.149 5.498-2.483 8.29-3.626 3.251-1.331 6.596-2.417 9.96-3.421 1.76-.526 3.527-1.029 5.295-1.531 1.09-.309 2.704-.41 3.268-.751.09-.054-.123-.169-.187-.253-.492-.651-1.011-1.263-1.454-1.952-.487-.759-.978-1.516-1.467-2.275-.5-.775-.998-1.55-1.419-2.372-.105-.206-.073-.768-.358-.723-.37.06-.715.129-1.067.195-1.08 1.252-2.158 2.527-3.583 3.385z\" fill=\"#593934\" /><g><path d=\"M205.395 299.992a36.438 36.438 0 00-.317-3.475 36.994 36.994 0 00-.631-3.43c-.208-.891-.431-1.844-.958-2.609-1.282-1.858-3.518-1.524-5.495-1.437-2.74.12-5.482.215-8.22.38-.079.005-.599-.021-.755.101-.435.342-.56.937-.72 1.446a19.33 19.33 0 00-.469 1.772 21.614 21.614 0 00-.449 3.575 21.004 21.004 0 00.173 3.658c.127.952.251 1.988.882 2.756.633.772 1.612.988 2.565 1.035 1.256.062 2.527.006 3.785.004l7.895-.017c.139 0 1.128.105 2.042-1.021.631-.776.71-1.781.672-2.738z\" fill=\"#ffc564\" /><path d=\"M205.395 299.992a36.438 36.438 0 00-.317-3.475 36.994 36.994 0 00-.631-3.43c-.208-.891-.431-1.844-.958-2.609-.805-1.168-1.987-1.469-3.245-1.511-.654.776-1.182 1.645-1.469 2.649-.371 1.298-.219 2.745-.818 3.978-.273.561-.66.919-1.225 1.173-.583.262-1.098.486-1.536.97-.679.749-1.027 2.009-1.958 2.493-.557.29-1.232.228-1.839.249a8.428 8.428 0 00-1.882.269 8.047 8.047 0 00-1.705.686c.126.468.313.914.625 1.295.633.772 1.612.988 2.565 1.035 1.256.062 2.527.006 3.785.004l7.895-.017c.139 0 1.128.105 2.042-1.021.63-.776.709-1.781.671-2.738z\" fill=\"#e0a155\" /></g><g fill=\"#3f79c5\"><path d=\"M232.078 288.568c-.739-1.323-1.433-2.686-2.247-3.964-.643-1.009-1.438-2.008-2.531-2.553-1.099-.548-2.637-.688-3.502.36-.119.145-.551.766.154 2.511.416 1.031 1.046 1.966 1.569 2.944l2.314 4.328c.637 1.191 1.206 2.608 2.302 3.458.93.721 2.313.941 3.259.122 2.281-1.969-.265-5.32-1.318-7.206zM179.054 283.563c-.759-.625-2.065-.602-2.578.878-.12.345-.238.696-.357 1.029-.233.655-.468 1.309-.696 1.965l-1.289 3.706c-.443 1.274-.889 2.546-1.329 3.821-.3.869-.567 1.964.269 2.631.794.634 1.911.261 2.503-.457.706-.856 1.06-2.06 1.48-3.074.983-2.37 1.845-4.797 2.462-7.29.263-1.062.5-2.414-.465-3.209z\" /></g></g><g><path d=\"M182.449 168.119c-.133-1.2-.635-2.342-1.561-3.14-.69-.594-4.029-1.156-4.85-1.188-2.881-.626-5.954-.73-8.752.263-11.264 3.994-12.851 8.472-14.336 11.314-.816 1.562-6.201 13.828-7.87 18.253-1.954 5.181-3.912 10.36-5.839 15.551-2.151 5.796-6.814 17.613-6.719 17.844 1.425 3.46 2.981 6.855 4.281 10.367 1.234 3.337 2.326 6.727 3.649 10.03 2.354 5.877 5.609 11.607 11.041 15.144a17.797 17.797 0 004.425 2.093c.88.273 2.216.573 3.052.072.086.03.181.027.272-.04 2.995-2.217 5.462-5.337 7.194-8.62 1.941-3.679 2.777-7.739 3.199-11.845.469-4.565.734-9.141 1.298-13.697.579-4.674 1.384-9.3 2.217-13.934.929-5.169 4.038-20.926 4.554-23.431l1.731-8.401 1.733-8.4.881-4.26c.268-1.302.549-2.64.4-3.975z\" fill=\"#ffc7ae\" /><g fill=\"#fcad97\"><path d=\"M145.767 203.498c.14.783.287 1.566.388 2.355.18 1.395.169 2.806.392 4.196a15.473 15.473 0 001.104 3.704 15.474 15.474 0 004.436 5.832c.442.357.948.839 1.562.795.574-.041.927-.479 1.155-.964.559-1.189 1.015-2.428 1.544-3.63 1.084-2.461 2.356-4.844 4.342-6.7 1.896-1.772 4.147-3.154 5.678-5.292 1.421-1.985 2.03-5.028.036-6.885-.944-.879-2.23-1.142-3.478-1.206-1.524-.078-3.064-.012-4.589-.007a12797.637 12797.637 0 00-13.478.056c-.189.001-.384-.002-.58 0-.458 1.214-.911 2.431-1.369 3.645.659.751 1.39 1.436 2.057 2.198.498.569.669 1.173.8 1.903zM162.055 236.247c-.517-1.336-1.389-2.491-2.481-3.413-1.121-.947-2.399-1.674-3.736-2.27-1.22-.544-2.515-.93-3.736-1.471-.831-.625-1.625-1.291-2.226-2.126-.46-.64-.836-1.336-1.224-2.023-.339-1.218-.582-2.461-1.121-3.615-.78-1.671-2.237-2.676-3.764-3.609-.388-.237-.785-.451-1.176-.679-1.329-1.244-2.759-2.377-4.213-3.471-.202-.152-.408-.318-.617-.486-1.052 2.756-2.255 5.868-3.243 8.452.479 1.858.158 3.818.699 5.656.277.942.788 1.793 1.28 2.635l1.704 2.913c1.136 1.942 2.275 3.882 3.414 5.823.991 1.689 1.931 3.429 3.05 5.039 1.006 1.447 2.185 2.722 3.704 3.637.813.49 1.589.918 2.084 1.762.461.786.78 1.619 1.366 2.329 1.049 1.27 2.598 1.948 3.805 3.036.608.548 1.017 1.339 1.716 1.779.69.434 1.266.421 2.054.289.18-.03.527-.375.644-.548 1.099-1.624 1.881-3.459 2.486-5.322.383-1.18.659-2.402.814-3.637.019-.055.044-.108.063-.163.253-.769.427-1.58.439-2.392.014-.999-.302-1.88-.606-2.814-.562-1.735-.52-3.607-1.179-5.311z\" /></g><g><path d=\"M189.279 173.211c.006-1.855.001-3.664-.946-5.321-.972-1.7-2.55-2.778-4.396-3.34-1.095-.333-2.187-.648-3.265-1.034a228.149 228.149 0 00-3.426-1.197c-3.176-1.193-6.598-1.233-9.924-.704-1.773.282-3.517.726-5.229 1.265-1.634.514-3.249 1.075-4.606 2.151-1.37 1.086-2.531 2.482-3.566 3.882-1.02 1.38-1.975 2.874-2.533 4.506-.504 1.475-.744 3.063-1.003 4.616-.015.03-.032.058-.04.098-.635 3.249-3.394 5.465-5.054 8.18-.836 1.367-1.324 2.929-2.238 4.25-.512.74-1.182 1.19-1.877 1.736a3.898 3.898 0 00-1.359 2.006c-.069.231.048.471.243.596 4.708 3.02 8.42 7.52 13.708 9.627 1.345.536 2.734.799 4.156 1.037 1.457.244 2.853.607 4.224 1.163 2.608 1.058 4.973 2.62 7.492 3.858 2.898 1.424 6.003 2.435 9.262 1.992.119-.016.581-.212.727-.271.331-.132.602-.533.36-.884-.506-.731-.256-1.587-.036-2.381.249-.895.449-1.763.501-2.694.058-1.049.055-2.083.249-3.12.187-.996.452-1.981.735-2.955.522-1.802.89-3.771 2.094-5.26 1.062-1.315 2.371-2.434 3.129-3.973.849-1.725 1.132-3.663 1.507-5.53.404-2.01.907-4.028 1.039-6.079.132-2.066.065-4.151.072-6.22z\" fill=\"#fff\" /><g fill=\"#d5f3ff\"><path d=\"M166.138 205.337c1.149-1.59 1.6-3.549 2.05-5.423.477-1.989 1.135-3.775 2.328-5.45 1.054-1.481 2.322-2.794 3.491-4.182 1.171-1.39 2.258-2.854 2.975-4.535.798-1.871 1.161-3.875 1.366-5.89.206-2.021.39-4.121.281-6.152-.107-2.006-.741-3.784-2.093-5.288-.639-.71-1.372-1.326-2.115-1.923-.333-.268-.757-.073-.894.217-7.323 2.855-8.638 11.873-13.15 17.433-.664.818-1.415 1.537-2.331 2.067-.937.542-1.927.966-2.825 1.576-1.737 1.179-3.295 2.542-5.158 3.538-1.881 1.006-3.865 1.799-5.773 2.75-.905.451-1.963 1.117-2.515 2.013 3.941 2.914 7.363 6.594 11.993 8.439 1.345.536 2.734.799 4.156 1.037 1.457.244 2.853.607 4.224 1.163.504.205.994.441 1.483.677a6.424 6.424 0 002.507-2.067zM154.314 182.523c.633-1.098-.226-2.503-.743-3.463-.419-.779-.888-1.526-1.277-2.323-.337-.69-.642-1.417-1.122-2.024-.04-.051-.082-.096-.123-.143-.288 1.133-.471 2.308-.664 3.464-.015.03-.032.058-.04.098-.433 2.216-1.853 3.951-3.24 5.693 1.343-.257 2.665-.396 4.051-.365 1.117.024 2.502.203 3.158-.937z\" /></g></g><g><path d=\"M162.072 258.833c-2.663-11.544-8.251-22.32-15.474-31.708-3.608-4.689-7.67-9.022-12.163-12.875-2.367-2.03-4.888-3.881-7.183-5.995-1.136-1.046-2.221-2.159-3.165-3.384-.993-1.289-1.784-2.707-2.509-4.159-1.56-3.122-2.824-6.397-4.968-9.187-1.988-2.587-2.567-6.44-7.097-6.981-2.967-.354-10.156.412-13.373 3.756-3.262 3.391-4.329 8.126-3.255 12.654.588 2.478 1.698 4.81 2.901 7.041 1.317 2.444 2.73 4.836 4.095 7.253l8.479 15.02c4.747 8.41 9.399 16.905 15.163 24.678 2.768 3.734 5.774 7.301 9.128 10.524a63.309 63.309 0 005.383 4.623c1.912 1.465 3.907 2.867 6.141 3.796 2.206.918 4.689 1.311 6.997.523 2.08-.71 3.771-2.194 5.147-3.869 1.543-1.877 2.842-3.973 4.086-6.056.692-1.159 1.617-2.167 2.486-3.219.017-.344-.701-1.926-.819-2.435z\" fill=\"#ffc7ae\" /><g fill=\"#fcad97\"><path d=\"M112.714 189.868c-3.538.1-7.162.458-10.44 1.88-2.531 1.098-5.483 3.237-6.144 6.076-.155-.065-.361-.032-.392.162a72.833 72.833 0 00-.377 2.714c-.115.967-.28 1.972-.228 2.948.091 1.699 1.23 2.784 2.402 3.885 1.289 1.21 2.771 2.176 4.072 3.362.685.625 1.027 1.315 1.38 2.158.3.714.7 1.333 1.307 1.822 1.077.868 2.467 1.208 3.81 1.397 1.698.24 3.425.36 5.137.451 3.76.2 7.484-.074 10.982-1.56 1.773-.753 3.493-1.64 5.227-2.478.645-.312 1.295-.62 1.938-.94-1.405-1.132-2.808-2.267-4.135-3.49-1.136-1.046-2.221-2.159-3.165-3.384-.993-1.289-1.784-2.707-2.509-4.159-1.56-3.122-2.824-6.397-4.968-9.187-.24-.312-.458-.643-.667-.984a3.298 3.298 0 00-.568-.366c-.832-.394-1.768-.332-2.662-.307zM152.989 260.152c-2.263-2.247-1.795-5.918-3.54-8.538-1.764-2.649-4.004-4.933-6.287-7.134-2.348-2.264-4.792-4.45-7.479-6.308-5.344-3.697-11.543-5.975-17.345-8.83-5.549-2.73-10.921-5.825-15.695-9.781-.217-.18-.426-.368-.641-.551l6.356 11.26c4.747 8.41 9.399 16.905 15.163 24.678 2.768 3.734 5.774 7.301 9.128 10.524a63.309 63.309 0 005.383 4.623c1.912 1.465 3.907 2.867 6.141 3.796 2.206.918 4.689 1.311 6.997.523 2.08-.71 3.771-2.194 5.147-3.869 1.543-1.877 2.842-3.973 4.086-6.056.191-.32.448-.626.635-.949-.841-.537-4.256.378-8.049-3.388z\" /></g></g><g><path d=\"M258.98 154.316c-2.062-2.7-5.243-4.446-8.538-5.139-8.368-1.76-16.485 2.402-23.524 6.426-3.711 2.122-7.407 4.308-11.405 5.854-3.79 1.466-7.78 2.419-11.814 2.897-8.247.977-16.427.093-24.543-1.447-.828-.157-1.736-.215-2.48-.484-.459-.166-.941-.216-1.31.245-4.125 5.152-5.525 10.771-7.479 16.959-.986 3.123-2.012 6.246-3.404 9.216-1.481 3.161-3.471 5.893-5.754 8.519-2.338 2.69-4.754 5.363-6.31 8.604-1.464 3.049-2.236 6.381-2.396 9.754-.324 6.811 1.824 13.549 5.546 19.212a44.305 44.305 0 002.63 3.564c.043.214.107.491.184.803-.009 5.049.121 11.053 5.058 13.855.235.133.478.25.721.366.142.222.312.43.441.663.25.449.393.95.451 1.46.139 1.223-.182 2.445-.35 3.648-.277 1.976-.097 4.166 1.643 5.438.846.618 1.874.904 2.748 1.474.237.155.454.335.66.527l.189.589c-.054.635-.082 1.271-.158 1.907-.098.819-.222 1.64-.264 2.465-.071 1.403.136 2.951 1.012 4.099a.69.69 0 00.582.282c1.149.36 2.296.728 3.437 1.115a82.658 82.658 0 0011.448 2.994c6.983 1.295 14.051 1.892 21.054.398 3.364-.717 6.487-2.043 9.725-3.162 3.473-1.2 7.015-2.197 10.596-3.02 4.553-1.047 9.175-1.821 13.806-2.451.022-1.449.118-2.905.55-4.292.534-1.711 1.833-3.188 2.206-4.937.313-1.466-.55-2.921-.732-4.359-.185-1.466.054-2.897.638-4.247 1.124-2.599 3.321-4.555 4.452-7.148 1.421-3.258-.579-6.838.758-10.104-.152-2.478-.33-4.955-.528-7.43-.552-6.883-1.126-13.788-.831-20.699.158-3.698.55-7.396 1.291-11.025.366-1.791 1.177-5.069 2.011-7.03.98-2.304 5.094-10.338 5.826-12.425 1.456-4.15 2.905-8.374 3.825-12.68.827-3.868.833-7.98-1.668-11.254z\" fill=\"#fff\" /><g fill=\"#d5f3ff\"><path d=\"M247.947 173.734c-.656-2.443-2.465-4.841-5.091-5.284-2.961-.499-5.346 1.744-7.215 3.719-.961 1.015-1.885 2.083-2.478 3.361-.711 1.534-.915 3.217-1.473 4.8-1.033 2.931-3.427 5.135-4.509 8.057-1.108 2.992-.892 6.247-1.629 9.319-.739 3.082-2.544 5.755-3.602 8.721-1.085 3.042-.82 5.97-.228 9.085.373 1.965.809 3.993.488 5.998-.251 1.57-.934 3.055-1.858 4.34-1.988 2.763-5.021 4.517-8.249 5.434-7.382 2.095-15.175.408-22.652 1.849-.345.026-.691.045-1.036.085-1.686.196-4.272.246-4.603 2.354-.617 3.932 4.007 6.638 7.029 7.787 4.318 1.642 8.967 1.987 13.463 2.888 2.318.464 4.597 1.084 6.753 2.067 2.014.918 3.963 2.018 6.09 2.665 2.555.777 5.131.543 7.756.46 2.629-.083 5.137.371 7.593 1.309 2.49.951 4.734 2.34 7.002 3.716 1.153.699 2.396 1.325 3.689 1.586a8.086 8.086 0 01.655-3.94c1.124-2.599 3.321-4.555 4.452-7.148 1.421-3.258-.579-6.838.758-10.104-.152-2.478-.33-4.955-.528-7.43-.552-6.883-1.126-13.788-.831-20.699.158-3.698.55-7.396 1.291-11.025a56.976 56.976 0 011.034-4.17c-.542-3.186-1.005-6.383-1.305-9.587-.311-3.348.111-6.947-.766-10.213zM238.835 264.682c-2.395-.136-4.766-.397-7.103.313-2.196.666-4.299 1.722-6.406 2.622-2.176.931-4.731 1.691-6.376 3.483-.254.277-.19.664.112.871 2.509 1.72 5.667 1.623 8.545 1.161 1.715-.275 3.413-.682 5.147-.829 1.574-.133 3.148-.01 4.717.133l.199.018c1.169-.18 2.339-.349 3.51-.508.022-1.449.118-2.905.55-4.292.332-1.064.959-2.036 1.476-3.041a31.234 31.234 0 01-4.371.069zM171.954 269.709c1.086.329 2.137.772 3.266.936 2.461.357 4.352-1.191 6.513-2.076a22.272 22.272 0 017.205-1.621c.987-.054 2.08-.115 2.793-.898.595-.654.675-1.627.397-2.439-.729-2.129-3.142-2.416-5.086-2.327a24.835 24.835 0 00-7.358 1.468c-1.326.484-2.581 1.1-3.829 1.756a15.397 15.397 0 01-3.962 1.45c-.82.178-1.643.343-2.465.51.109.088.225.166.328.262l.189.589c-.054.635-.082 1.271-.158 1.907l-.023.184a6.887 6.887 0 012.19.299zM172.141 258.086c2.776-.038 5.497.09 8.213-.611 2.04-.526 5.064-1.25 5.391-3.758.135-1.036-.353-1.993-1.306-2.443-1.031-.486-2.304-.365-3.406-.299a27.063 27.063 0 00-4.213.584c-1.401.31-2.783.714-4.2.953-3.675.62-7.346-.332-11.008-.753.524.52 1.122.994 1.83 1.395.235.133.478.25.721.366.142.222.312.43.441.663.25.449.393.95.451 1.46.139 1.223-.182 2.445-.35 3.648-.028.201-.048.405-.065.61 1.175-.461 2.306-1.037 3.53-1.365 1.295-.348 2.634-.432 3.971-.45z\" /></g></g></g><g><path d=\"M231.079 153.115c-1.946-.698-3.865-2.185-5.12-3.762-1.509-1.896-2.814-3.973-4.192-5.965a3696.017 3696.017 0 00-9.059-13.054c-2.726-3.906-5.557-7.756-7.98-11.861-2.362-4.001-4.231-7.595-5.326-12.624-.115-.528-.165-1.194-.824-1.177-3.122.084-5.878 2.239-7.684 4.633-2.204 2.923-3.411 6.552-4.508 10.003-1.132 3.559-2.014 7.188-3.097 10.761-1.111 3.663-4.792 11.412-4.949 11.935-.533 1.771.198 4.474 1.978 6.66.902 1.107 1.763 2.419 2.517 3.631 2.48 3.985 4.457 8.467 3.007 13.193-.664 2.165-1.767 4.164-2.54 6.289-.797 2.189-1.227 4.49-1.461 6.803-.455 4.509-.353 9.333.225 13.829.258 2.01.789 3.994 2.05 5.62 1.17 1.51 2.815 2.49 4.579 3.163 4.178 1.593 7.628 1.947 12.002 1.276 4.201-.644 6.781-2.04 10.422-5.053 3.432-2.84 5.409-5.715 6.696-9.905 1.673-5.442 2.723-12.702 4.238-18.19 1.331-4.818 5.02-9.493 8.087-13.533.882-1.16 1.605-2.432.939-2.672z\" fill=\"#ffc7ae\" /><g fill=\"#fcad97\"><path d=\"M212.837 170.479c-.789.355-1.59.691-2.405 1.008-3.441 1.337-6.967 2.457-10.326 4-3.228 1.483-6.369 3.382-8.748 6.061-1.207 1.359-2.13 2.894-2.977 4.495-.885 1.672-1.721 3.417-3 4.832-.994 1.1-2.177 2.036-3.011 3.243.322 1.406.846 2.751 1.747 3.913 1.17 1.51 2.815 2.49 4.579 3.163 4.178 1.593 7.628 1.947 12.002 1.276.452-.069.878-.152 1.296-.24a60.314 60.314 0 004.127-1.4c1.624-.806 3.179-1.908 4.999-3.414 3.432-2.84 5.409-5.715 6.696-9.905 1.673-5.442 2.723-12.702 4.238-18.19 1.331-4.818 5.02-9.493 8.087-13.533.881-1.161 1.604-2.433.938-2.672a10.314 10.314 0 01-1.846-.902c-3.548 4.191-7.015 8.449-10.568 12.635-1.746 2.056-3.609 4.075-5.828 5.63zM190.716 157.947c1.241-1.073 2.063-2.497 2.706-3.987a22.794 22.794 0 001.484-4.83c.324-1.732.463-3.501.39-5.262a23.525 23.525 0 00-.225-2.384c-.128-.892-.377-1.771-.467-2.667-.086-.862.079-1.702.193-2.553.131-.982.196-1.967.215-2.957.031-1.69-.042-3.377-.323-5.045-.304-1.805-.847-3.657-1.814-5.226-.158-.256-.815-1.068-1.429-1.678-1.136-1.129-4.034-.683-5.717.132-.835 2.854-1.576 5.734-2.439 8.58-1.111 3.663-4.792 11.412-4.949 11.935-.533 1.771.198 4.474 1.978 6.66.902 1.107 1.763 2.419 2.517 3.631 1.558 2.503 2.916 5.202 3.352 8.035.194-.063.395-.122.583-.189 1.43-.503 2.792-1.199 3.945-2.195z\" /></g><path d=\"M194.495 116.859c-.168-3.959-1.166-7.853-1.997-11.711l-2.507-11.643c-.763-3.543-1.385-7.191-2.957-10.487-2.701-5.663-8.625-8.937-14.765-9.277-6.442-.356-12.658 2.657-17.382 6.854-4.68 4.158-8.162 9.826-9.522 15.956-1.42 6.401-.193 12.645 3.056 18.287 3.631 6.306 7.712 11.433 10.779 18.092 2.882 6.258 7.973 15.848 12.471 18.2 1.376.719 3.203.431 4.763-.155 2.839-1.066 5.097-3.152 6.913-5.531 1.982-2.596 3.488-5.521 5.005-8.402 1.624-3.084 3.175-6.217 4.347-9.506 1.219-3.422 1.951-7.033 1.796-10.677z\" fill=\"#ffc7ae\" /><path d=\"M171.273 129.405c-.516-.675-1.194-1.182-1.868-1.687-.845-.632-1.692-1.262-2.509-1.931-1.412-1.155-2.728-2.425-4.16-3.558-.674-.533-1.361-1.053-2.101-1.493-.705-.42-1.469-.746-2.324-.764-.902-.019-1.057.164-.738.496 1.542 1.61 2.468 3.697 3.207 5.77.844 2.367 1.434 4.823 2.089 7.247.144.531.223 1.168.492 1.654.2.361.558.552.923.714a3.639 3.639 0 002.895.056 4.064 4.064 0 002.038-1.86c.182-.344.381-.82.497-1.309a7.03 7.03 0 00.806-.58c.323-.257.692-.496.95-.821.507-.635.251-1.347-.197-1.934zM185.51 127.549c-1.281-1.477-3.332-1.764-5.167-2.051-1.997-.312-2.671-.187-3.418.41-.687.549-.963 1.392-.831 2.251.267 1.741 1.944 2.73 3.508 3.13.957.245 1.941.389 2.912.565.912.166 1.878.354 2.765-.014.751-.312 1.37-.98 1.389-1.827.021-.898-.591-1.81-1.158-2.464z\" fill=\"#fcad97\" /><g fill=\"#01265a\"><path d=\"M182.472 108.963c-.607-.518-1.578-.49-2.948-.551-3.084-.138-5.406 1.432-8.071 2.497-1.401.56-2.941.845-4.424 1.101-1.438.248-4.711.451-4.88.453-.131.001-.202.2-.071.262 1.463.698 3.363.825 4.964.815a21.217 21.217 0 005.117-.64c1.718-.437 3.314-1.147 4.922-1.877.879-.399 1.766-.779 2.706-1.012a7.19 7.19 0 011.345-.212c.453-.024.852.049 1.255-.18.22-.125.291-.481.085-.656zM173.791 120.104c-.043-.149-.396-.629-.499-.736-.212-.218-.933-.769-1.051-.868a1.914 1.914 0 00-.449-.266c-.572-.255-1.369-.169-1.635.477-.283.689.464 1.254.894 1.666.264.253.532.503.804.75.244.222.488.485.779.644.028.015.424.208.555.237a.372.372 0 00.358-.101c.201-.199.251-.604.285-.871.041-.304.045-.633-.041-.932z\" /></g><g fill=\"#01265a\"><path d=\"M155.045 115.458c-.044-.086-.175-.145-.269-.11-.232.089-.289.307-.387.515a7.476 7.476 0 01-1.03 1.612 7.626 7.626 0 01-.911.904c-.161.135-.329.26-.502.379-.156.106-.348.273-.536.306-.25.043-.348.369-.231.568.06.103.223.893.393 1.02.204.152.427.147.654.046.862-.383 1.418-1.209 1.806-2.036.207-.441.398-.896.574-1.35.093-.239.143-.5.223-.744.085-.262.341-.87.216-1.11zM158.259 124.647a2.756 2.756 0 00-1.448-.867c-.333-.077-.732.078-.757.442-.001.021-.009.208.053.279.158.18.31.366.462.551.146.177.301.348.442.53.143.184.272.379.389.58.117.2.206.436.381.596a.75.75 0 00.152.111 1 1 0 00.095.04l.063.022a.533.533 0 00.469-.046c.268-.164.352-.464.353-.761.002-.566-.29-1.067-.654-1.477z\" /><path d=\"M158.036 126.91l-.008-.004c-.018-.005-.026-.008.008.004z\" /></g><path d=\"M167.839 141.604c.107-.939.82-1.741 1.688-2.117.867-.376 1.862-.371 2.784-.164.923.207 1.79.604 2.649.998\" fill=\"none\" stroke=\"#f2a28f\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\" /><path d=\"M214.947 118.829c-.236-1.306-1.101-2.447-1.436-3.785-.701-2.806-.457-5.69-.691-8.534-.18-2.183-.352-4.368-.39-6.559-.036-2.088.172-4.162.184-6.247.021-3.84-1.439-7.193-3.512-10.356-2.297-3.506-4.797-6.891-7.204-10.322-1.073-1.529-2.086-3.154-3.352-4.534-1.21-1.318-2.738-2.179-4.339-2.934-3.597-1.696-7.263-3.759-11.088-4.888-8.077-2.383-14.476 4.006-20.591 8.154a80.956 80.956 0 01-5.69 3.525c-1.799 1.014-3.687 1.887-5.434 2.99-3.073 1.94-5.529 4.971-5.092 8.738.362 7.608 4.322 14.809 10.49 19.262 6.242 4.506 13.98 5.934 21.243 7.961 3.675 1.025 7.332 2.223 10.663 4.115 3.38 1.92 6.204 4.612 9.351 6.864 3.036 2.173 6.771 4.111 10.624 3.772 3.731-.326 6.981-3.261 6.264-7.222z\" fill=\"#01265a\" /><g><path d=\"M196.367 108.719c-.288-1.819-.377-3.741-1.019-5.482-.583-1.581-1.647-2.907-3.161-3.683-3.016-1.547-6.641-.488-8.526 2.269-2.35 3.436-1.715 8.104-.636 11.872.046.16.479.723.601.931.181.308.365.612.555.914.379.604.759 1.208 1.143 1.81l1.116 1.752c.206.324.415.681.674.983.03.078.067.155.131.228 1.005 1.152 2.584 1.661 4.085 1.486 1.595-.186 2.958-1.111 3.916-2.373 2.337-3.078 1.682-7.166 1.121-10.707z\" fill=\"#ffc7ae\" /><g fill=\"none\" stroke=\"#f2a28f\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M185.749 113.4c.576-.507.861-1.276.959-2.037.099-.761.033-1.532.026-2.299-.01-1.049.092-2.109.438-3.099.346-.99.95-1.909 1.808-2.512.857-.604 1.98-.863 2.987-.571\" /><path d=\"M191.222 114.49c.607-.47.88-1.299.764-2.058-.117-.759-.588-1.436-1.205-1.894-.617-.457-1.368-.707-2.128-.815-.62-.088-1.268-.084-1.853.14\" /></g></g></g><g><path d=\"M303.179 245.746c-1.459-10.927-5.888-21.133-10.145-31.207-2.162-5.117-4.357-10.221-6.101-15.501-.881-2.668-1.652-5.374-2.254-8.12-.603-2.75-.928-5.538-1.401-8.311-.921-5.406-3.264-9.986-6.881-14.087-3.444-3.904-7.557-7.44-11.711-10.569-2.35-1.77-4.985-3.36-7.903-3.951-2.853-.578-5.799-.325-8.342 1.065-7.703 4.21-10.638 9.689-11.638 14.715-.89 4.471.932 7.689 2.636 10.824a456.938 456.938 0 017.402 14.194c1.655 3.316 3.48 6.564 4.824 10.019 4.273 10.987 7.144 22.439 10.032 33.888 2.81 11.142 5.265 23.298 13.887 31.595 3.114 2.997 6.832 5.341 10.939 6.476 5.769 1.594 10.853 1.956 11.18 1.507 6.745-9.253 6.976-21.302 5.476-32.537z\" fill=\"#ffc7ae\" /><path d=\"M284.199 191.475c-.164-1.401-2.527-.915-3.432-.784-1.512.218-3.005.59-4.497.909l-9.394 2.006c-1.388.296-2.877.577-4.231 1.119a84.675 84.675 0 00-.888-2.186c-1.088-2.555-2.462-4.926-4.356-6.971a22.273 22.273 0 00-6.104-4.63 21.898 21.898 0 00-7.318-2.278c-1.628-.204-3.783-.285-5.226.674.227.428.457.851.687 1.273a456.938 456.938 0 017.402 14.194c1.655 3.316 3.48 6.564 4.824 10.019 4.273 10.987 7.144 22.439 10.032 33.888.202.801.403 1.609.604 2.419.787.333 1.587.641 2.41.897 2.619.813 5.416 1.659 8.149 1.406 5.509-.51 6.324-1.684 7.415-3.794 2.348-4.541.989-11.79-.783-17.196-.885-2.7-2.096-5.294-3.662-7.668-1.573-2.385-3.434-4.563-5.262-6.753-.468-.561-.927-1.132-1.385-1.703a12.886 12.886 0 01-.529-.868c-.266-.488-.298-.965-.298-1.512 0-.517.039-.901.437-1.262.02-.018.042-.03.062-.047l.233-.077c2.818-.978 5.419-2.451 7.664-4.418 2.203-1.931 4.193-4.236 6.93-5.422.637-.278.562-.84.516-1.235z\" fill=\"#fcad97\" /><g><path d=\"M289.958 189.378c-1.352-1.551-2.607-3.179-3.811-4.845-1.634-3.237-1.608-7.347-2.991-10.662a11.409 11.409 0 00-1.923-3.118c-.806-.929-1.748-1.751-2.433-2.78-1.348-2.024-1.761-4.504-2.923-6.626a11.559 11.559 0 00-2.369-3.025c-.525-.471-1.286-.889-1.913-1.382-.917-.721-1.481-1.806-2.145-2.797-1.329-1.982-2.721-4.057-4.887-5.206-2.345-1.243-5.062-1.232-7.646-1.17-5.301.127-11.685.381-15.883 4.197-4.241 3.855-5.365 4.25-7.182 6.896a22.347 22.347 0 00-3.781 10.294c-.422 4.006.275 8.034 1.909 11.706.811 1.821 1.804 3.567 2.887 5.258.396.873.785 1.746 1.107 2.661.447 1.268.831 2.554 1.352 3.795a15.61 15.61 0 002.064 3.52c.915 1.188 1.939 2.292 2.782 3.534a15.874 15.874 0 012.709 7.98c.04.706-.034 1.404-.02 2.11.038 1.863.512 1.766.958 1.747 6.25-.268 11.855-3.33 16.907-6.787 2.677-1.831 5.265-3.79 7.979-5.567 2.743-1.796 5.634-3.325 8.635-4.643 3.37-1.481 6.847-2.695 10.311-3.933.508-.181.663-.749.307-1.157z\" fill=\"#fff\" /><g fill=\"#d5f3ff\"><path d=\"M273.052 193.461c-2.137.122-4.265.322-6.409.279-2.14-.043-4.281-.293-6.303-1.025-1.913-.693-3.565-1.892-5.165-3.12-1.554-1.192-3.095-2.438-4.874-3.284-1.947-.927-4.047-1.159-6.131-1.608-1.948-.419-3.673-1.22-5.222-2.477-1.459-1.184-2.719-2.587-3.994-3.96a44.228 44.228 0 00-2.188-2.229c-.748-.699-1.544-1.455-2.492-1.869-.051-.022-.103-.039-.155-.058a23.436 23.436 0 001.861 6.751c.811 1.821 1.804 3.567 2.887 5.258.396.873.785 1.746 1.107 2.661.447 1.268.831 2.554 1.352 3.795a15.61 15.61 0 002.064 3.52c.915 1.188 1.939 2.292 2.782 3.534a15.874 15.874 0 012.709 7.98c.04.706-.034 1.404-.02 2.11.038 1.863.512 1.766.958 1.747 6.25-.268 11.855-3.33 16.907-6.787 2.677-1.831 5.265-3.79 7.979-5.567 2.583-1.691 5.3-3.138 8.113-4.403-.025-.023-.047-.048-.074-.068-1.635-1.204-3.738-1.292-5.692-1.18zM279.925 181.547c-1.888-.078-3.882-.411-5.764-.138-1.363.199-2.661 1.252-2.085 2.757.647 1.69 2.542 1.771 4.072 1.65 2-.158 4.007-.162 6.006.012a34.38 34.38 0 015.714 1 80.288 80.288 0 01-1.722-2.296c-.52-1.031-.865-2.155-1.147-3.309-1.674.313-3.366.394-5.074.324zM273.075 168.249c-.853 1.069-1.657 2.402-1.165 3.814.431 1.24 1.728 1.689 2.942 1.552 1.5-.17 2.626-1.255 4.064-1.586 1.09-.251 2.185.037 3.266-.001a11.326 11.326 0 00-.949-1.275c-.806-.929-1.748-1.751-2.433-2.78-1.046-1.57-1.532-3.414-2.239-5.153-.235.496-.479.989-.75 1.472-.791 1.412-1.729 2.696-2.736 3.957zM263.263 157.176c-.942.298-2.021.687-2.19 1.804-.374 2.466 3.893 1.757 5.192 1.472a11.644 11.644 0 003.595-1.457c.846-.523 1.645-1.178 2.559-1.47a13.396 13.396 0 01-.825-.584c-.635-.499-1.098-1.174-1.544-1.869-1.043.243-2.067.566-3.084.9-1.233.405-2.465.813-3.703 1.204z\" /></g></g><g><path d=\"M299.14 269.436c-.099-.529-.472-1.588-1.106-2.543-1.245-1.874-2.658-3.536-4.074-5.181-1.718-1.995-3.197-4.217-4.278-6.62a17.09 17.09 0 01-1.136-3.556 36.83 36.83 0 00-.486-4.215l-.006-.121c-.003-.079-.027-.147-.051-.216-2.25-12.325-10.492-23.185-19.404-31.841-6.014-5.841-12.549-11.106-18.716-16.78-3.059-2.814-6.039-5.729-8.803-8.836-2.639-2.966-4.965-6.192-7.616-9.147-5.026-5.603-13.462-10.852-21.243-6.921-.582.294-5.072 2.559-7.57 3.395-2.648.885-5.476.954-8.06 2.067-4.715 2.031-8.068 6.109-11.307 9.927-1.699 2.003-3.463 3.986-5.475 5.681-.501.422-1.02.816-1.554 1.194-.455.321-.917.637-1.242 1.098-.664.942-.369 2.116.458 2.849 2.111 1.871 5.176.308 7.238-.789 2.389-1.27 4.745-2.658 6.762-4.479 1.139-1.028 2.115-2.23 3.307-3.201a10.722 10.722 0 013.447-1.856c2.54-.823 5.25-.744 7.727.246 1.507 2.405 2.796 5.327 5.391 6.622.823.411 1.711.552 2.607.667 6.233 1.833 9.623 8.638 12.885 13.766a909.471 909.471 0 0113.28 21.546c4.289 7.178 8.319 14.511 12.62 21.68 1.96 3.267 4.138 6.407 6.814 9.134 2.682 2.733 5.74 5.078 8.852 7.296 6.004 4.279 12.528 8.533 19.874 9.99 3.269.649 6.893 1.045 9.251-1.789.739-.889 1.494-1.852 1.821-2.997.593-2.082.104-4.414-.207-6.07z\" fill=\"#ffc7ae\" /><g fill=\"#fcad97\"><path d=\"M287.672 273.284c-2.196-1.925-3.742-4.252-5.156-6.787-1.516-2.718-3.084-5.382-4.928-7.894-7.093-9.67-17.119-16.399-28.011-21.142a120.506 120.506 0 00-8.207-3.198l-.05-.018c3.842 6.521 7.521 13.138 11.414 19.626 1.96 3.267 4.138 6.407 6.814 9.134 2.682 2.733 5.74 5.078 8.852 7.296 6.004 4.279 12.528 8.533 19.874 9.99 2.464.489 5.128.833 7.301-.24-2.179-2.647-5.347-4.527-7.903-6.767zM232.182 209.207c.466-2.511-.146-5.132-.149-7.664-.002-2.641.3-5.257.84-7.84.503-2.406 1.03-4.992.028-7.307a2.917 2.917 0 00-.149-.728c-.327-.913-1.354-1.198-2.215-1.372-1.004-.204-2.031-.219-3.047-.115-2.118.216-4.268.729-6.31 1.322a17.015 17.015 0 00-5.524 2.738 29.388 29.388 0 00-4.528 4.221c-.626.721-1.21 1.516-1.631 2.378.541.547 1.143 1.023 1.845 1.374.823.411 1.711.552 2.607.667 6.233 1.833 9.623 8.638 12.885 13.766 1.117 1.756 2.209 3.528 3.313 5.292.542-.869.733-1.991 1.006-2.949.356-1.25.792-2.505 1.029-3.783zM211.915 180.536c-.617-2.016-4.6-1.598-4.75-1.602-.614-.015-1.192.159-1.753.393-1.262.524-2.523 1.089-3.677 1.825-1.13.721-2.174 1.575-3.35 2.224-1.121.619-2.336 1.028-3.519 1.508-2.211.897-4.036 2.152-5.228 4.269-.568 1.009-.98 2.108-1.297 3.219-.158.554-.337 1.132-.413 1.704-.071.532.16.878.489 1.271.247.296.539.572.862.772.759-.535 1.5-1.095 2.192-1.719 1.139-1.028 2.115-2.23 3.307-3.201a10.722 10.722 0 013.447-1.856c1.287-.417 2.618-.6 3.939-.553 2.022-.898 4.079-1.732 6.028-2.77 1.935-1.03 4.508-2.922 3.723-5.484z\" /></g></g></g><g><path d=\"M206.542 218.632c-.283-2.052-.817-4.056-1.47-6.018-1.314-3.949-3.029-7.735-4.074-11.775-.261-1.008-.52-2.02-.882-2.998-.342-.925-.811-1.776-1.239-2.661-.762-1.573-.678-3.626-2.074-4.851-1.445-1.269-3.449-1.159-5.197-.719-1.913.482-3.792 1.138-5.614 1.893-.945.392-1.876.817-2.794 1.267a68.491 68.491 0 00-8.596 4.208c-2.685 1.558-5.308 3.279-7.707 5.253-2.564 2.111-4.869 4.517-7.208 6.869-1.263 1.269-2.555 2.518-3.767 3.837-.867.944-1.621 2.001-1.802 3.259-1.77-1.032-2.455-3.447-3.132-5.293-.848-2.312-1.781-4.61-2.995-6.757-1.18-2.085-2.651-4.06-4.514-5.586-2.1-1.72-4.592-2.769-7.213-3.414-2.755-.678-5.789-1.267-8.626-.883-1.242.169-2.114.763-2.731 1.855-.66 1.169-1.142 2.434-1.81 3.604-1.494 2.618-3.215 5.107-4.814 7.661-1.585 2.532-3.111 5.117-4.88 7.528-.925 1.261-2.176 2.416-2.847 3.842-.532 1.132-.606 2.454-.244 3.65.792 2.613 3.495 3.178 5.437 4.709 3.504 2.761 6.176 6.662 8.515 10.316 2.34 3.654 4.827 7.173 7.881 10.274 3.029 3.076 6.514 5.732 10.379 7.67 4.229 2.12 8.91 3.182 12.87 5.844 1.084.729 2.151 1.494 3.352 2.024.534.235 1.083.423 1.642.575 1.892.907 4.146.455 6.035-.286 2.185-.858 4.16-2.164 6.415-2.852 2.169-.662 4.444-.961 6.44-2.104 1.714-.981 3.133-2.389 4.457-3.834 1.333-1.455 2.603-2.982 4.109-4.267 1.47-1.254 3.198-2.142 4.86-3.109 1.628-.947 3.26-2 4.447-3.489 1.406-1.765 2.104-4.089 2.971-6.147 1.035-2.454 1.998-4.946 3.59-7.104 1.343-1.821 2.565-3.713 2.819-6.121.344-3.236.264-4.035.011-5.87z\" fill=\"#824d41\" /><path d=\"M204.379 223.535c-.028-.24-.106-.501-.244-.639-.469-.471-.873-.904-1.509-1.141-.92-.343-1.912-.065-2.766.332-1.667.773-3.034 2.091-4.23 3.457-1.254 1.433-2.375 2.982-3.704 4.349-1.318 1.355-2.83 2.496-4.406 3.534-3.158 2.08-6.554 3.788-9.536 6.131a22.11 22.11 0 00-4.123 4.251c-1.273 1.718-2.338 3.575-3.514 5.359-1.66 2.519-4.589 4.357-6.76 6.383-.719.671-2.964.659-4.222.231-1.059-.36-1.982-1.209-2.822-1.918-1.749-1.477-3.398-3.142-4.741-5.001-.65-.9-1.231-1.856-1.678-2.874-.503-1.145-.754-2.38-1.221-3.539-.82-2.032-2.114-3.808-3.492-5.494-2.949-3.608-6.085-7.237-9.666-10.234-1.73-1.448-3.59-2.749-5.726-3.521-1.997-.721-4.121-.988-6.217-1.246-2.394-.295-4.863-.538-7.101-1.503-1.021-.44-2.032-1.303-3.198-1.26-.757.028-1.504.823-1.712 1.38-.315.842-.194 1.318-.027 1.802.317.918 1.102 1.588 1.886 2.11 1.697 1.132 3.552 2.007 5.279 3.088.992.621 1.917 1.317 2.738 2.119a112.162 112.162 0 003.129 4.908c2.408 3.557 5.003 7.017 7.814 10.266 2.558 2.957 5.35 5.737 8.554 7.995a28.728 28.728 0 005.133 2.9c1.848.799 3.767 1.412 5.635 2.16a20.231 20.231 0 015.146 2.974c1.438 1.142 2.935 2.286 4.836 2.422 1.909.136 3.674-.836 5.277-1.746a24.895 24.895 0 015.522-2.321c1.929-.555 3.887-1.051 5.694-1.945 1.614-.799 3.027-1.953 4.289-3.228 1.295-1.309 2.449-2.746 3.661-4.13a30.637 30.637 0 014.057-3.89c1.536-1.215 3.112-2.381 4.299-3.961 1.197-1.593 1.942-3.454 2.87-5.204 1.929-3.638 5.484-6.369 6.568-10.454a7.745 7.745 0 00.228-2.902z\" fill=\"#593934\" /><path d=\"M204.136 222.896c-.469-.471-.873-.904-1.509-1.141-.92-.343-1.912-.065-2.766.332-1.667.773-3.034 2.091-4.23 3.457-1.254 1.433-2.375 2.982-3.704 4.349-1.318 1.355-2.83 2.496-4.406 3.534-3.158 2.08-6.554 3.788-9.536 6.131a22.11 22.11 0 00-4.123 4.251c-1.061 1.432-1.981 2.96-2.938 4.462.537.034 1.075.068 1.617.114 2.192.187 3.895 1.569 6.051 1.853 2.101.276 4.281-.051 6.367-.325.552-.073 1.101-.162 1.652-.245a30.303 30.303 0 013.804-3.613c1.536-1.215 3.112-2.381 4.299-3.961 1.197-1.593 1.942-3.454 2.87-5.204 1.929-3.638 5.484-6.369 6.568-10.454a7.765 7.765 0 00.228-2.902c-.029-.239-.107-.499-.244-.638z\" opacity=\".05\" fill=\"#ddca8e\" /><path d=\"M153.051 218.717c-.403-2.183-1.021-4.249-2.039-6.227-1.002-1.947-2.219-3.795-3.55-5.531-2.611-3.407-5.844-6.371-9.837-8.057-1.141-.482-2.326-.869-3.545-1.096-1.095-.204-2.483-.476-3.566-.127-.171.055-.314.082-.416.196-.083.093-.114.262-.209.386-.516.676-.894 1.512-1.325 2.248l-1.32 2.251-2.575 4.396-2.575 4.396c-.846 1.444-1.891 2.887-2.433 4.477-.241.706-.086.8.304.917 2.497.748 5.049 1.296 7.538 2.076 2.428.761 4.798 1.699 7.029 2.929 4.245 2.339 8.016 5.598 11.088 9.338 1.633 1.988 4.344 7.808 5.08 7.748.994-.081 1.121-1.061 1.168-1.858.124-2.104.251-4.207.365-6.311l.338-6.188c.059-1.072.11-2.145.16-3.217.028-.647.379-2.426.32-2.746z\" fill=\"#ddca8e\" /><path d=\"M148.581 231.132c-1.275-2.291-3.053-4.262-5.104-5.885-2.108-1.668-4.442-3.033-6.84-4.239-2.542-1.279-5.157-2.433-7.871-3.3-1.55-.495-3.133-.878-4.748-1.091-1.533-.202-2.816-.505-4.33-.104-.338.09-.376.571-.05.82.081.062 4.441 2.025 6.713 3a458.215 458.215 0 017.079 3.103c2.146.963 4.368 1.878 6.338 3.178 2.04 1.346 3.365 3.256 4.717 5.244a567.878 567.878 0 014.879 7.327c.204.31.723.524 1.007.472.323-.059.484-.422.45-.839-.221-2.7-.918-5.311-2.24-7.686z\" fill=\"#593934\" /><g fill=\"none\" stroke=\"#593934\" strokeWidth=\".5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M152.305 229.858c-2.93-5.625-6.819-10.841-11.91-14.618-4.943-3.667-11.097-5.89-17.227-5.526M152.886 220.219c-3.352-4.3-6.76-8.626-11.025-12.02-4.132-3.287-9.207-5.663-14.467-5.699\" /></g><g><path d=\"M178.504 225.321a167.117 167.117 0 01-1.672-3.902 180.041 180.041 0 01-2.052-5.204 162.005 162.005 0 01-1.842-5.156c-.305-.902-.614-1.804-.915-2.708-.139-.416-.252-1.034-.518-1.47-.023-.339-.282-.647-.684-.488a33.57 33.57 0 00-8.744 5.093 32.166 32.166 0 00-3.699 3.476 31.284 31.284 0 00-1.611 1.948c-.501.653-1.309 1.187-1.466 2.075-.101.572.08 1.419.17 1.979.129.805.263 1.608.402 2.411.278 1.604.604 3.2.941 4.792a184.3 184.3 0 001.627 7.016c.178.703.986 4.287 1.527 5.288.214.395.74.262.958-.125 1.39-2.481 4.524-5.259 7.231-7.001a196.649 196.649 0 0110.014-6.023c.274-.154.643-.288.743-.506.182-.402-.236-1.103-.41-1.495z\" fill=\"#e5d7aa\" /><path d=\"M178.379 226.205c-3.633 1.934-7.334 3.692-10.768 5.982-1.67 1.113-3.277 2.329-4.763 3.679-1.323 1.202-2.517 2.535-2.724 4.379-.022.195-.015.444.137.521.254.13.671.096.912-.183 2.398-2.772 5.053-5.243 8.144-7.231 1.662-1.069 3.423-1.971 5.094-3.024a31.706 31.706 0 004.513-3.415c.39-.355-.105-.942-.545-.708z\" fill=\"#593934\" /></g><path d=\"M197.709 220.877l-12.015 5.628a3.204 3.204 0 01-4.301-1.617l-8.696-19.484c-.728-1.631-.06-3.671 1.505-4.567l11.449-6.553c1.706-.976 3.736-.383 4.519 1.337l9.354 20.559c.796 1.75-.024 3.858-1.815 4.697z\" fill=\"#6f9ad3\" /><g opacity=\".65\" fill=\"#593934\"><path d=\"M126.223 227.695c4.121 3.028 7.755 6.729 11.203 10.489 3.388 3.695 6.61 7.538 9.965 11.263 1.56 1.732 3.18 3.42 4.978 4.908 1.713 1.418 3.669 2.861 5.805 3.558 1.028.335 2.038.354 3.037-.081.155-.067.257-.321.195-.479-1.283-3.244-2.479-6.511-3.534-9.837-.545-1.721-.8-3.425-.653-5.229.124-1.53.282-3.002.066-4.532-.392-2.777-1.48-5.425-2.45-8.038-.959-2.583-1.824-5.368-1.296-8.146.425-2.234 1.69-4.829 1.215-7.103-.314.534-.545 1.106-.635 1.729-1.77-1.032-2.455-3.447-3.132-5.293-.848-2.312-1.781-4.61-2.995-6.757-1.18-2.085-2.651-4.06-4.514-5.586-2.1-1.72-4.592-2.769-7.213-3.414-2.755-.678-5.789-1.267-8.626-.883-1.242.169-2.114.763-2.731 1.855-.66 1.169-1.142 2.434-1.81 3.604-1.494 2.618-3.215 5.107-4.814 7.661-1.585 2.532-3.111 5.117-4.88 7.528-.925 1.261-2.176 2.416-2.847 3.842a4.93 4.93 0 00-.437 1.672c1.012.435 2.142.679 3.174.962 4.66 1.275 9.039 3.449 12.929 6.307zM193.22 193.499c-1.675.071-3.338.268-4.873.948-.039.004-.077.004-.121.021-4.115 1.609-6.642 5.356-8.761 9.039-1.215 2.112-2.379 4.284-3.899 6.2-1.412 1.78-3.348 3.218-4.251 5.359-.751 1.779-.541 4.118 1.242 5.213.978.601 2.098.407 3.178.575 1.114.173 1.793 1.166 2.785 1.62.992.454 2.086.584 3.163.66 1.314.092 2.632.144 3.949.174 1.301.029 2.617.071 3.916-.023 1.248-.09 2.318-.452 3.438-.988 1.268-.606 2.554-.622 3.916-.831 1.423-.218 2.769-.748 4.166-1.077 1.103-.26 2.239-.351 3.335-.006 1.243.391 1.807 1.233 2.137 2.45.025.09.078.153.129.218.17-2.081.08-2.895-.13-4.417-.283-2.052-.817-4.056-1.47-6.018-1.314-3.949-3.029-7.735-4.074-11.775-.261-1.008-.52-2.02-.882-2.998-.342-.925-.811-1.776-1.239-2.661-.214-.443-.361-.925-.493-1.415-.106-.017-.212-.04-.318-.055a26.571 26.571 0 00-4.843-.213z\" /></g><g><path d=\"M138.58 249.002c-2.335.098-4.159 2.37-3.986 4.979.167 2.515 2.131 4.255 4.311 3.979l1.231-.156-.24-8.858-1.316.056z\" fill=\"#e0a155\" /><path d=\"M135.967 253.863c-.145-2.579 1.652-4.821 3.929-4.917 2.182-.092 3.886 1.845 3.886 4.247 0 2.322-1.601 4.351-3.646 4.61-2.129.27-4.029-1.454-4.169-3.94z\" fill=\"#ffc564\" /><g fill=\"none\" stroke=\"#e0a155\" strokeWidth=\".5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M140.867 256.557a2.73 2.73 0 01-.76.204c-1.604.187-3.012-1.128-3.103-2.987-.093-1.911 1.236-3.573 2.923-3.663.269-.014.53.013.778.077M142.858 252.991c.007.092.012.186.012.281.007 1.109-.466 2.123-1.196 2.77M142.001 250.972c.315.338.559.76.707 1.235\" /></g><g><path d=\"M123.233 284.223c-2.349-1.624-6.071-.529-8.006 2.202-1.73 2.442-1.292 5.228.756 6.41l1.163.671 7.414-8.367-1.327-.916z\" fill=\"#e0a155\" /><path d=\"M116.554 287.257c1.99-2.65 5.712-3.703 8.005-2.117 2.202 1.522 1.893 4.69-.378 6.9-2.048 1.993-5.094 2.588-7.036 1.467-2.007-1.16-2.372-3.878-.591-6.25z\" fill=\"#ffc564\" /><g fill=\"none\" stroke=\"#e0a155\" strokeWidth=\".5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M118.739 292.961a3.1 3.1 0 01-.817-.331c-1.526-.898-1.747-2.976-.363-4.742 1.503-1.917 4.223-2.652 5.908-1.517.27.182.491.399.665.643M123.528 291.217a5.845 5.845 0 01-.242.261c-.973.982-2.258 1.53-3.432 1.586M124.608 288.723a3.834 3.834 0 01-.501 1.672\" /></g></g><g><path d=\"M99.917 341.263c1.452 2.712 4.95 2.79 7.748.368 2.679-2.319 3.864-6.211 2.712-8.867l-.692-1.594-10.642 8.461.874 1.632z\" fill=\"#e0a155\" /><path d=\"M106.94 340.123c-2.846 2.415-6.411 2.283-7.897-.492-1.547-2.889-.159-7.308 3.015-9.656 3.028-2.24 6.406-1.62 7.627 1.195 1.177 2.713-.022 6.642-2.745 8.953z\" fill=\"#ffc564\" /><g fill=\"none\" stroke=\"#e0a155\" strokeWidth=\".5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M107.862 331.238a3.3 3.3 0 01.592.911c.914 2.053-.003 5.046-2.085 6.786-2.153 1.799-4.813 1.654-5.902-.436a3.946 3.946 0 01-.377-1.12M102.349 331.604c.115-.1.233-.196.354-.287 1.419-1.07 2.962-1.3 4.14-.797M100.278 334.813a7.01 7.01 0 011.151-2.228\" /></g></g></g><g><path d=\"M142.943 206.257c-3.04-3.314-5.968-6.698-8.565-10.377-1.178-1.67-2.228-3.433-3.446-5.074-1.089-1.467-2.382-2.819-4.135-3.455-2.136-.775-4.409-.052-6.601-.078-2.075-.025-4.065-.791-6-1.465-1.912-.667-3.873-1.32-5.918-1.36a12.56 12.56 0 00-5.704 1.227c-3.725 1.8-6.772 6.161-6.772 10.136 0 1.993.046 4.026.868 5.877.562 1.266 1.435 2.307 2.583 3.004.022.023.043.047.072.064.118.07.247.125.371.186l.029.015c.778.376 1.646.61 2.42.985.919.444 1.795.992 2.487 1.751.778.853 1.174 1.94 1.617 2.986.434 1.025.94 1.976 1.631 2.853 1.371 1.74 3.316 3.088 5.278 4.081 2.053 1.04 4.302 1.739 6.599 1.952.06.006.109-.01.162-.021.008.001.015.003.023.003 1.219.08 2.332-.483 3.53-.594 1.085-.101 2.362-.328 2.847-1.45.197-.455.209-.996-.037-1.436-.271-.486-.726-.68-1.208-.9-1.009-.46-1.763-1.241-2.32-2.19-.894-1.523-1.246-3.271-1.7-4.978.11.135.215.274.325.409 1.302 1.578 2.624 3.153 4.002 4.666 1.323 1.453 2.878 2.434 4.894 2.458 1 .012 2.008-.179 2.967-.451.753-.213 1.612-.526 1.92-1.318.321-.825-.155-1.657-.894-2.055-.4-.216-.844-.296-1.271-.44a5.293 5.293 0 01-1.261-.646c-1.572-1.061-2.554-2.783-3.316-4.474-.85-1.884-1.557-3.82-2.48-5.674l-.278-.559a79.413 79.413 0 006.582 5.273c1.713 1.233 3.508 2.663 5.555 3.283 1.791.543 3.876.25 5.143-1.222.256-.297.273-.695.001-.992z\" fill=\"#ffc7ae\" /><path d=\"M119.305 193.601c-.85.35-1.264 1.237-1.47 2.078-.132.542-.196 1.116-.469 1.611-.272.492-.729.843-1.208 1.118-.95.544-2.038.784-3.001 1.301-1.747.939-2.486 2.785-3.774 4.185-.832.904-1.869 1.221-2.992 1.627-.951.344-1.822.812-2.63 1.395.31.234.607.485.872.775.778.853 1.174 1.94 1.617 2.986.043.102.091.199.135.299.045.025.086.057.132.081 1.351.722 2.899.99 4.356 1.418 3.018.886 6.074 1.901 9.259 1.825a12.191 12.191 0 003.216-.49 6.414 6.414 0 01-.595-.834c-.894-1.523-1.246-3.271-1.7-4.978.11.135.215.274.325.409 1.275 1.546 2.571 3.087 3.919 4.571.975-.562 1.85-1.271 2.792-1.906.624-.42 1.268-.81 1.929-1.169.169-.092.369-.18.573-.27-.937-.999-1.615-2.25-2.172-3.486-.85-1.884-1.557-3.82-2.48-5.674l-.278-.559c.061.055.126.104.188.159-.935-1.393-2.597-4.151-4.139-5.678-.64-.633-1.488-1.172-2.405-.794z\" fill=\"#fcad97\" /><g fill=\"none\" stroke=\"#f2a28f\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M125.718 200.249c-1.081-1.691-2.175-3.398-3.617-4.793-1.442-1.395-3.286-2.47-5.288-2.609M120.778 207.998c-.665-1.59-1.335-3.191-2.283-4.63-.948-1.44-2.2-2.725-3.766-3.444M122.345 219.17c.34-1.732-.519-3.635-2.044-4.524-.608-.355-1.3-.558-1.88-.958-.902-.623-1.426-1.644-1.966-2.599-1.797-3.18-4.253-6.14-7.563-7.685M132.886 211.283a17.115 17.115 0 01-2.936-.629M120.66 187.391a27.494 27.494 0 01-7.922-.148M97.407 203.133c1.722 1.815 4.51 2.19 6.425 3.801 1.397 1.175 2.196 2.89 3.05 4.503.854 1.613 1.885 3.259 3.515 4.081\" /></g></g><g><path d=\"M233.289 185.849c-.326-1.678-1.627-2.883-2.948-3.849-1.481-1.082-3.087-1.984-4.693-2.867-1.54-.846-3.106-1.882-4.837-2.284-1.747-.405-3.582-.294-5.358-.215-1.958.086-3.876.375-5.714 1.074a16.48 16.48 0 00-2.549 1.222c-.418.247-.826.513-1.219.799-.15.109-2.988 2.502-4.268 3.374-1.33.906-2.689 1.775-4.052 2.63-1.348.846-2.711 1.671-4.123 2.407-.601.314-1.207.614-1.731 1.051-.314.262-1.781 1.778-2.165 2.315-.585.82-1.133 1.669-1.686 2.511-1.209 1.842-2.246 3.725-3.203 5.71-.958 1.986-1.938 3.963-2.871 5.961-.159.341-.298.69-.424 1.045-.784.474-1.477 1.154-2.077 1.816-.723.798-1.351 1.678-1.773 2.672a6.814 6.814 0 00-.531 3.014c.027.573.096 1.144.153 1.714.057.564.048 1.193.231 1.732.301.886 1.262 1.138 2.089 1.275.913.151 1.802.087 2.494-.525.281.519.771.97 1.218 1.204 1.06.554 2.458.706 3.526.104.277-.156.536-.354.787-.568a4.22 4.22 0 00.446.272c.059.03.116.059.176.086.388.194.83.312 1.209.368a5.49 5.49 0 002.301-.159c.88-.251 1.671-.688 2.407-1.213.51.08 1.089-.025 1.57-.072a38.143 38.143 0 002.262-.277c1.467-.233 3.104-.482 4.396-1.258 1.329-.798 2.506-1.929 3.711-2.898.569-.457 1.14-.922 1.768-1.296.046-.028.103-.047.153-.071 1.876-.509 4.006.05 5.883-.584 2.171-.734 3.791-2.473 5.147-4.245 2.989-3.906 4.777-8.546 7.526-12.602.751-1.107 1.569-2.168 2.489-3.14.925-.977 1.958-1.775 2.994-2.622.016-.013.023-.029.036-.043 1.066-.872 1.523-2.164 1.25-3.568z\" fill=\"#ffc7ae\" /><path d=\"M210.533 212.089c-1.538-.475-2.663-1.742-4.279-2.061-1.488-.293-3.024-.019-4.506-.314-1.652-.329-2.613-1.719-4.002-2.535-1.308-.769-4.183-2.69-4.818-1.516-.127.234-3.175 4.306-6.331 7.781-2.412 2.655-4.248 5.208-4.558 4.99.281.519.771.97 1.218 1.204 1.06.554 2.458.706 3.526.104.277-.156.536-.354.787-.568a4.22 4.22 0 00.446.272c.059.03.116.059.176.086.388.194.83.312 1.209.368a5.49 5.49 0 002.301-.159c.88-.251 1.671-.688 2.407-1.213.51.08 1.089-.025 1.57-.072a38.143 38.143 0 002.262-.277c1.467-.233 3.104-.482 4.396-1.258 1.329-.798 2.506-1.929 3.711-2.898.569-.457 1.14-.922 1.768-1.296.046-.028.103-.047.153-.071 1.494-.405 3.147-.141 4.707-.334-.726.039-1.452-.02-2.143-.233z\" fill=\"#fcad97\" /><g fill=\"none\" stroke=\"#f2a28f\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeMiterlimit=\"10\"><path d=\"M181.916 218.466c3.713-4.539 8.6-8.162 11.489-13.266 1.769-3.126 2.7-6.666 4.427-9.816M181.395 206.761l1.686-1.241M187.431 218.947a85.268 85.268 0 018.292-7.068c1.699-1.27 3.461-2.491 4.868-4.078a13.307 13.307 0 003.28-7.712M194.086 218.58c3.195-2.567 6.734-4.588 9.786-7.324.681-.611 1.553-1.477 2.042-2.25.725-1.147 1.66-3.41 2.511-4.467M207.305 178.849l-4.937 3.456c-3.322 2.326-6.983 4.123-10.287 6.475-2.07 1.474-3.413 3.843-4.766 6.23\" /></g></g></g></g></g></g></svg>);","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport useDevice from '../../hooks/useDevice';\nimport NoWalletIcon from '../../public/images/no-wallet.svg';\nimport { WalletButton, WalletText } from '../Base';\nimport './WalletNoWalletFoundState.scss';\n\nconst WalletNoWalletFoundState: React.FC = () => {\n    const { isMobile } = useDevice();\n    const history = useHistory();\n\n    return (\n        <div className='wallets-no-wallet-found-state'>\n            <NoWalletIcon height={300} width={300} />\n            <div className='wallets-no-wallet-found-state__container'>\n                <div className='wallets-no-wallet-found-state__content'>\n                    <WalletText size='3xl' weight='bold'>\n                        You have no wallet account 🐣\n                    </WalletText>\n                    <WalletText size={isMobile ? 'sm' : 'md'}>\n                        Disable the <span className='wallets-no-wallet-found-state__emphasized-text'>next_wallet</span>{' '}\n                        feature flag to see Trader&apos;s Hub.\n                    </WalletText>\n                </div>\n                <WalletButton onClick={() => history.push('/endpoint')} size='lg' text='Endpoint' />\n            </div>\n        </div>\n    );\n};\n\nexport default WalletNoWalletFoundState;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M4.207 7.793a1 1 0 00-1.414 1.414l3 3a1 1 0 001.414 0l7-7a1 1 0 00-1.414-1.414L6.5 10.086 4.207 7.793z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"17\" height=\"16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M8.5 2a1 1 0 011 1v4h4a1 1 0 110 2h-4v4a1 1 0 11-2 0V9h-4a1 1 0 010-2h4V3a1 1 0 011-1z\" fill=\"#333\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.58 10.172h6.825c.163 0 .313.086.394.225l1.989 3.414c.103.177.072.4-.075.544L8.24 19.697a.46.46 0 01-.64 0l-5.465-5.335a.445.445 0 01-.068-.555l2.125-3.42a.456.456 0 01.388-.215zm5.944 1.524v.958H8.58v.664c1.365.07 2.39.362 2.397.712v.728c-.008.35-1.032.64-2.397.712v1.63H7.289v-1.63c-1.366-.071-2.39-.363-2.397-.712v-.728c.007-.35 1.031-.641 2.397-.712v-.664H5.345v-.958h5.179zm-2.59 3.273c1.457 0 2.675-.246 2.973-.575-.252-.28-1.167-.499-2.327-.56v.696a12.472 12.472 0 01-1.291 0v-.695c-1.16.06-2.075.28-2.328.559.298.329 1.516.575 2.973.575z\" fill=\"#009393\" /><path d=\"M16.452 12.024l1.577-.175v1.512h1.37v1.314h-1.38v2.038c0 .482.204.723.613.723.263 0 .482-.044.657-.131l.361 1.314c-.357.14-.737.22-1.139.241-.635.03-1.14-.12-1.512-.449-.365-.336-.547-.902-.547-1.698v-2.038h-.965v-1.314h.965v-1.337zM25.303 16.549h-3.977c.044.277.194.507.45.69.255.175.595.263 1.018.263.606 0 1.074-.142 1.402-.427l.888.986c-.54.533-1.315.8-2.323.8-.964 0-1.712-.26-2.246-.779-.526-.518-.788-1.22-.788-2.103 0-.832.259-1.504.777-2.016.519-.518 1.216-.777 2.093-.777.957 0 1.687.292 2.19.876.512.584.684 1.413.516 2.487zm-3.977-1.15h2.564a.746.746 0 00-.395-.636c-.248-.153-.548-.23-.898-.23a1.41 1.41 0 00-.81.23c-.227.153-.38.365-.46.636zM26.618 12.024l1.578-.175v1.512h1.369v1.314h-1.38v2.038c0 .482.204.723.613.723.263 0 .482-.044.657-.131l.362 1.314c-.358.14-.738.22-1.14.241-.635.03-1.139-.12-1.511-.449-.365-.336-.548-.902-.548-1.698v-2.038h-.964v-1.314h.964v-1.337zM30.408 11.071h1.589v2.925c.387-.504.935-.756 1.643-.756 1.439 0 2.158.866 2.158 2.597v2.903h-1.577v-2.892c0-.373-.095-.661-.285-.866-.183-.204-.43-.306-.745-.306-.343 0-.632.116-.865.35-.227.234-.34.559-.34.975v2.739h-1.578V11.07zM41.985 16.549H38.01c.044.277.193.507.449.69.255.175.595.263 1.019.263.606 0 1.073-.142 1.402-.427l.888.986c-.541.533-1.315.8-2.323.8-.964 0-1.713-.26-2.246-.779-.526-.518-.789-1.22-.789-2.103 0-.832.26-1.504.778-2.016.519-.518 1.216-.777 2.093-.777.956 0 1.687.292 2.19.876.512.584.683 1.413.515 2.487zm-3.976-1.15h2.563a.746.746 0 00-.394-.636c-.248-.153-.548-.23-.898-.23-.315 0-.585.077-.811.23-.227.153-.38.365-.46.636zM42.64 13.339h1.468l.12.591c.344-.482.825-.723 1.446-.723.511 0 .953.165 1.326.493l-.657 1.25a1.452 1.452 0 00-.866-.274c-.358 0-.657.113-.898.34-.241.218-.362.521-.362.908v2.816H42.64v-5.401z\" fill=\"#009393\" /></svg>);","import React, { useMemo } from 'react';\nimport AUDIcon from '../../public/images/currencies/aud.svg';\nimport BTCIcon from '../../public/images/currencies/btc.svg';\nimport ETHIcon from '../../public/images/currencies/eth.svg';\nimport EURIcon from '../../public/images/currencies/eur.svg';\nimport TetherIcon from '../../public/images/currencies/eusdt.svg';\nimport GBPIcon from '../../public/images/currencies/gbp.svg';\nimport LTCIcon from '../../public/images/currencies/ltc.svg';\nimport USDIcon from '../../public/images/currencies/usd.svg';\nimport USDCIcon from '../../public/images/currencies/usdc.svg';\nimport { THooks } from '../../types';\n\nconst currencies = {\n    aud: AUDIcon,\n    btc: BTCIcon,\n    eth: ETHIcon,\n    eur: EURIcon,\n    eusdt: TetherIcon,\n    gbp: GBPIcon,\n    ltc: LTCIcon,\n    tusdt: TetherIcon,\n    usd: USDIcon,\n    usdc: USDCIcon,\n    ust: TetherIcon,\n};\n\ntype TWalletCurrencyIconProps = {\n    currency: THooks.AvailableWallets['currency'];\n};\n\nconst WalletAddMoreCurrencyIcon: React.FC<TWalletCurrencyIconProps> = ({ currency }) => {\n    const CurrencyIcon = useMemo(() => currencies[currency as keyof typeof currencies], [currency]);\n\n    if (CurrencyIcon) {\n        return (\n            <div className='wallets-add-more-currency-icon'>\n                <CurrencyIcon />\n            </div>\n        );\n    }\n\n    return <span>LOGO</span>;\n};\n\nexport default WalletAddMoreCurrencyIcon;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 21 21\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path fill=\"#283991\" d=\"M9.993 0v19.986c5.52 0 9.993-4.474 9.993-9.993C19.986 4.473 15.512 0 9.993 0z\" /><path fill=\"#283991\" d=\"M9.993 0C4.474 0 0 4.474 0 9.993c0 5.52 4.474 9.993 9.993 9.993 5.52 0 5.52-19.986 0-19.986z\" /><path fill=\"#FFF\" d=\"M6.853 15.319l.674-.84-1.04.188-.362-1.008-.393 1.008-1.062-.188.675.821-.701.821 1.069-.168.36.988.393-.987 1.09.194zm7.966.741l.382-.475-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.606-.095.204.56.222-.56.618.111zm0-10.518l.382-.477-.59.107-.205-.57-.222.57-.603-.107.383.466-.397.465.606-.095.204.56.222-.56.618.11zm2.472 2.721l.382-.476-.59.107-.205-.572-.222.572-.603-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11zm-4.611 1.21l.382-.476-.59.107-.204-.572-.223.572-.602-.107.383.465-.397.465.605-.095.205.56.222-.56.618.11z\" /><path fill=\"#283991\" d=\"M2.099 3.87c-.157.202-.307.41-.448.623h1.07L2.1 3.87zM7.26 9.993h.962l-.963-.962zM4.068 1.947c-.23.169-.45.348-.664.536l.664.663v-1.2zm-.963 8.046h.963V9.03zM9.993 0c-.948 0-1.864.135-2.734.382v2.764L9.993.412V0zm0 9.072V7.684H8.606zm-9.581.921l2.31-2.309H.272A10.004 10.004 0 000 9.994h.412zm8.193-5.5h1.388V3.105z\" /><g fill=\"#FFF\"><path d=\"M9.993 9.363v-.291L8.606 7.684h1.387v-.496H7.818zm-7.271-4.87H1.65c-.107.162-.209.328-.307.497H3.45L2.2 3.74a9.019 9.019 0 00-.1.13l.623.623zM4.068 9.03v.963h.497v-1.69l-1.69 1.69h.23zM7.26.382a8.964 8.964 0 00-.497.155v3.336l3.23-3.23v-.23L7.26 3.146V.382zM4.05 7.684l.018-.017.48-.48H.401a9.55 9.55 0 00-.13.497h2.45l-2.31 2.31h1.33l2.309-2.31z\" /><path d=\"M.412 9.993l2.31-2.309-2.31 2.31zM9.993 4.99v-.497H8.605l1.388-1.388v-1.33L6.78 4.99z\" /><path d=\"M9.993 3.105L8.605 4.493l1.388-1.388zm-5.925.041l-.664-.663a10.16 10.16 0 00-.676.653l1.34 1.34.014.015.483.482V1.605c-.169.11-.335.222-.497.342v1.2zM7.26 9.03l.962.963H9.49L6.763 7.266v2.727h.496z\" /></g><path fill=\"#D32030\" d=\"M4.068 4.476l.034.034-.034-.034z\" /><path fill=\"#F44336\" d=\"M8.314 7.684l-.496-.496h2.175V4.99H6.78l-.016.017V4.99h.016l3.214-3.214V.643l-3.23 3.23V.537a9.957 9.957 0 00-2.198 1.068v3.368l.017.017h-.017v-.017l-.483-.482.003.002h-.017v-.017l-1.34-1.34c-.184.195-.36.396-.528.605L3.449 4.99H1.344a9.918 9.918 0 00-.942 2.198h4.145l.018-.018v.018h-.018l-.479.48v.017h-.017L1.74 9.993h1.134l1.69-1.69v1.69h2.198V7.266L9.49 9.993h.375c.043-.044.087-.089.129-.135v-.495l-1.68-1.679z\" /><path fill=\"#D32030\" d=\"M6.763 3.873l3.23-3.23zM4.092 7.709v-.042l-.041.042zm.497-.539l-.042.042h.042zm2.174-2.14l.04-.04h-.04zm-2.695-.513h.04l-.006-.007-.034-.034zm.538.496l-.041-.04v.04z\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"none\" {...props}><path d=\"M33.06 13.647a2.68 2.68 0 011.215.265l-.428.992a4.202 4.202 0 00-.348-.123 1.492 1.492 0 00-.44-.056c-.414 0-.74.145-.984.436-.243.29-.365.681-.365 1.172 0 .29.061.526.185.705.122.18.35.27.678.27a2.23 2.23 0 00.872-.18l.092 1.018a4.43 4.43 0 01-.519.167c-.19.047-.416.072-.68.072-.346 0-.639-.052-.879-.153a1.68 1.68 0 01-.594-.416 1.575 1.575 0 01-.34-.611 2.56 2.56 0 01-.104-.736c0-.387.06-.752.184-1.095.122-.342.299-.641.528-.898.228-.255.506-.458.833-.607.326-.148.69-.222 1.093-.222zM22.88 11.629l-.519 2.206c.111-.051.223-.09.335-.12.112-.028.232-.043.36-.043.268 0 .5.05.695.146.196.097.358.228.487.393.128.166.223.36.285.582a2.7 2.7 0 01.091.719c0 .393-.07.765-.213 1.115-.143.351-.336.656-.582.916-.246.26-.537.464-.872.615-.334.151-.697.227-1.088.227l-.265-.004a3.681 3.681 0 01-.43-.039 4.747 4.747 0 01-.516-.103 2.54 2.54 0 01-.515-.188l1.45-6.217 1.297-.205zm13.783 2.018c.29 0 .546.046.767.137.22.091.402.22.545.385.142.166.25.36.322.586.073.224.109.474.109.748 0 .341-.053.684-.159 1.026-.105.342-.263.65-.47.924a2.468 2.468 0 01-.774.67c-.31.174-.669.262-1.077.262-.296 0-.552-.046-.77-.137a1.425 1.425 0 01-.54-.385 1.669 1.669 0 01-.323-.586 2.396 2.396 0 01-.108-.747c0-.343.054-.686.162-1.027.11-.342.27-.65.483-.923.21-.274.471-.498.778-.673.307-.173.66-.26 1.055-.26zm-7.262-1.205l-.318 1.325h1.39l-.25 1.043H28.84l-.368 1.574a1.806 1.806 0 00-.059.367.685.685 0 00.042.296.371.371 0 00.18.192c.086.045.21.068.372.068.134 0 .264-.012.39-.038.126-.025.253-.061.381-.107l.093.975c-.168.063-.35.117-.545.162a3.067 3.067 0 01-.696.069c-.385 0-.683-.059-.896-.175a1.006 1.006 0 01-.453-.48 1.542 1.542 0 01-.116-.696c.01-.263.05-.539.116-.83l.822-3.54 1.298-.205zm-2.385 1.325l-1.055 4.498h-1.24l1.047-4.498h1.248zm13.796 0l-1.055 4.498h-1.241l1.047-4.498h1.25zm2.669-.103c.654 0 1.104.194 1.353.582.249.387.292.918.13 1.59l-.57 2.43h-1.248l.553-2.378c.033-.15.06-.292.08-.433.02-.139.018-.261-.005-.367a.44.44 0 00-.154-.257c-.082-.065-.206-.098-.373-.098-.162 0-.327.018-.494.052l-.813 3.48h-1.249l1.014-4.293c.094-.028.2-.062.314-.098a4.46 4.46 0 01.863-.18c.176-.02.376-.03.599-.03zm-20.735 1.069c-.078 0-.18.015-.305.043a.751.751 0 00-.34.18l-.552 2.342.088.018a.75.75 0 00.18.017h.15c.196 0 .38-.049.553-.145.173-.096.323-.227.449-.39a1.98 1.98 0 00.406-1.193c0-.274-.045-.487-.134-.641-.09-.154-.254-.231-.494-.231zm13.8-.008a.771.771 0 00-.485.162c-.14.109-.257.245-.352.41a2.066 2.066 0 00-.215.544c-.046.197-.07.383-.07.56 0 .285.045.508.134.668.09.158.251.238.486.238a.767.767 0 00.486-.162 1.4 1.4 0 00.352-.41c.095-.166.166-.347.214-.544a2.42 2.42 0 00.07-.56c0-.284-.044-.507-.134-.667-.09-.16-.251-.24-.486-.24zm-9.797-3.011c.173 0 .329.053.468.158.14.106.21.267.21.483a.81.81 0 01-.072.338.891.891 0 01-.46.458.802.802 0 01-.8-.09c-.14-.105-.21-.266-.21-.483a.81.81 0 01.072-.338.898.898 0 01.46-.458.81.81 0 01.332-.068zm13.795 0a.76.76 0 01.47.158c.139.106.21.267.21.483 0 .12-.026.233-.072.338a.89.89 0 01-.46.458.804.804 0 01-.8-.09c-.14-.105-.21-.266-.21-.483a.81.81 0 01.071-.338.887.887 0 01.46-.458.809.809 0 01.331-.068z\" fill=\"#4D4D4D\" /><circle cx=\"11\" cy=\"15\" r=\"6.75\" fill=\"#F7931B\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M10.401 11.821l.298-1.217.726.184-.292 1.193c.195.046.391.093.582.14l.29-1.185.725.184-.297 1.219c.917.322 1.588.805 1.455 1.704-.095.658-.452.977-.926 1.088.65.347.982.878.667 1.8-.392 1.142-1.323 1.239-2.561.998l-.301 1.23-.726-.184.296-1.213c-.187-.048-.38-.099-.579-.154l-.297 1.219-.725-.185.3-1.232c-.487-.126-.974-.252-1.462-.376l.36-.849s.535.145.528.135c.206.052.297-.086.333-.177l.814-3.335c.01-.158-.043-.357-.338-.432.012-.008-.527-.133-.527-.133l.193-.792c.488.124.974.256 1.464.37zm.168 3.305l-.176-.042-.398 1.632.141.037c.592.16 1.888.51 2.094-.335.21-.864-1.05-1.152-1.661-1.292zm.517-2.234a6.08 6.08 0 01-.148-.034l-.362 1.48c.034.008.075.02.12.032.495.134 1.57.426 1.758-.34.192-.786-.857-1.022-1.368-1.138z\" fill=\"#fff\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M2.75 14.812l3.458 2.046V9.071L2.75 14.811z\" fill=\"#828CAD\" /><path d=\"M6.208 9.07v7.788l3.463-2.046L6.208 9.07z\" fill=\"#63688E\" /><path d=\"M2.75 15.47l3.458 4.876v-2.834L2.75 15.471z\" fill=\"#8A93B3\" /><path d=\"M6.208 17.512v2.834l3.463-4.875-3.463 2.041z\" fill=\"#63688E\" /><path opacity=\".6\" d=\"M6.208 13.242L2.75 14.813l3.458 2.046V13.243z\" fill=\"#63688E\" /><path opacity=\".6\" d=\"M6.208 13.242v3.617l3.463-2.046-3.463-1.57z\" fill=\"#474A75\" /><path d=\"M20.563 11.156c.155 0 .28.126.28.281v2.723a1.594 1.594 0 012.625 1.215v1.688a.281.281 0 01-.562 0v-1.688a1.031 1.031 0 00-2.062 0v1.688a.281.281 0 01-.563 0v-5.625c0-.156.126-.282.282-.282zM42.125 13.781c-.393 0-.753.143-1.031.379v-.098a.281.281 0 00-.563 0v3a.281.281 0 10.563 0v-1.687a1.031 1.031 0 012.062 0v1.688a.281.281 0 10.563 0v-1.688a1.031 1.031 0 012.062 0v1.688a.281.281 0 10.563 0v-1.688a1.594 1.594 0 00-2.907-.904 1.592 1.592 0 00-1.312-.69zM36.781 14.063a.281.281 0 00-.562 0v1.687a1.594 1.594 0 002.625 1.215v.098a.281.281 0 10.562 0v-3a.281.281 0 00-.562 0v1.687a1.031 1.031 0 01-2.063 0v-1.688zM29.281 14.063v3a.281.281 0 10.563 0v-1.847l.002-.012a1.358 1.358 0 01.184-.423c.148-.221.396-.437.845-.437a.281.281 0 000-.563c-.457 0-.792.159-1.031.367v-.085a.281.281 0 00-.563 0zM18.219 12.938a.281.281 0 00-.563 0v.843H17a.281.281 0 000 .563h.656v2.719a.281.281 0 00.563 0v-2.72h.656a.281.281 0 000-.562h-.656v-.844z\" fill=\"#63688E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.095 13.804a1.78 1.78 0 101.15 2.817.281.281 0 10-.452-.334 1.219 1.219 0 01-2.166-.443h2.685a.281.281 0 00.282-.281 1.781 1.781 0 00-1.5-1.76zm.903 1.477h-2.371a1.218 1.218 0 012.372 0zM25.637 14.04a1.78 1.78 0 012.707 1.523v.28h-2.967a1.22 1.22 0 002.166.443.281.281 0 11.452.335 1.781 1.781 0 11-2.358-2.58zm-.26 1.241h2.371a1.221 1.221 0 00-1.82-.76 1.218 1.218 0 00-.551.76zM33.97 13.804a1.78 1.78 0 101.15 2.817.281.281 0 10-.452-.334 1.219 1.219 0 01-2.166-.443h2.967v-.281a1.781 1.781 0 00-1.5-1.76zm.903 1.477h-2.371a1.218 1.218 0 012.372 0z\" fill=\"#63688E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#283991\" /><path d=\"M16.863 3.976l-.39-1.2-.39 1.2h-1.264l1.022.743-.39 1.2 1.022-.742 1.021.743-.39-1.201 1.022-.743h-1.263zM16.863 26.65l-.39-1.202-.39 1.202h-1.264l1.022.742-.39 1.2 1.022-.741 1.021.742-.39-1.201 1.022-.742h-1.263zM22.695 4.785l.39 1.201h1.263l-1.022.743.39 1.2-1.02-.742-1.023.743.39-1.201-1.021-.743h1.263l.39-1.201zM27.33 10.175l-.39-1.201-.39 1.2h-1.263l1.022.743-.39 1.201 1.022-.742 1.021.742-.39-1.201 1.022-.742H27.33zM27.042 19.556l.39 1.202h1.263l-1.022.742.39 1.2-1.021-.741-1.022.742.39-1.2-1.022-.743h1.263l.39-1.202zM6.548 10.175l-.39-1.201-.39 1.2H4.505l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.201 1.021-.742H6.548zM27.925 14.02l.39 1.202h1.263l-1.022.742.39 1.201-1.021-.742-1.022.742.39-1.201-1.022-.742h1.263l.39-1.201zM5.583 15.222l-.39-1.201-.39 1.2H3.54l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.201 1.021-.742H5.583zM6.021 19.556l.39 1.202h1.263l-1.021.742.39 1.2-1.022-.741L5 22.7l.39-1.2-1.021-.743H5.63l.39-1.202zM23.268 25.125l-.39-1.201-.39 1.2h-1.263l1.022.743-.39 1.201 1.021-.742 1.022.742-.39-1.2 1.021-.743h-1.263zM10.452 4.785l.39 1.201h1.263l-1.022.743.39 1.2-1.021-.742-1.022.743.39-1.201-1.022-.743h1.263l.39-1.201zM10.381 25.048l-.39-1.201-.39 1.201H8.336l1.022.742-.39 1.201 1.022-.741 1.022.741-.39-1.2 1.021-.743h-1.263z\" fill=\"#F8D12E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#fff\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M20.674.55c2.047.553 3.932 1.5 5.567 2.757l-5.567 5.567V.551zM1.051 11.827a15.942 15.942 0 012.757-5.568l5.567 5.568H1.05zm28.142-5.567a15.944 15.944 0 012.756 5.567h-8.324l5.568-5.567zM1.05 20.174a15.944 15.944 0 002.757 5.567l5.567-5.567H1.05zm5.708 8.518a15.944 15.944 0 005.567 2.756v-8.323L6.76 28.692zm0-25.385A15.943 15.943 0 0112.326.551v8.323L6.76 3.307zm13.915 28.141a15.944 15.944 0 005.567-2.756l-5.567-5.567v8.323zm8.519-5.707l-5.568-5.567h8.324a15.942 15.942 0 01-2.756 5.567z\" fill=\"#283991\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M32.365 13.913H18.587V.135a16.16 16.16 0 00-4.174 0v13.778H.635a16.16 16.16 0 000 4.174h13.778v13.778a16.166 16.166 0 004.174 0V18.087h13.778a16.166 16.166 0 000-4.174zm-11.691 6.26l7.14 7.14c.328-.328.641-.67.94-1.026l-6.112-6.113h-1.968zm-8.348.001v1.967l-6.113 6.113a16.04 16.04 0 01-1.027-.94l7.14-7.14zm.004-8.348l-7.14-7.14c-.328.329-.641.672-.94 1.027l6.113 6.113h1.967zm15.484-7.14l-7.14 7.14V9.86l6.113-6.113c.355.299.698.612 1.027.94z\" fill=\"#F44336\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M11.028 9.75a5.28 5.28 0 100 10.558 5.28 5.28 0 000-10.558zm.085 5.453l-.549 1.853h2.938a.15.15 0 01.12.06.151.151 0 01.024.133l-.256.88a.201.201 0 01-.194.145H8.71l.759-2.562-.84.256.186-.6.84-.255 1.065-3.598a.2.2 0 01.193-.147h1.137a.15.15 0 01.12.06.152.152 0 01.025.132l-.894 3.043.84-.256-.18.61-.848.246z\" fill=\"#A5A8A9\" /><path d=\"M21.062 11.31a.402.402 0 11.08.8.402.402 0 01-.08-.8zM19.031 11.354h.33c.063 0 .102.028.092.102l-.857 6.723a.1.1 0 01-.07.096.099.099 0 01-.043.003h-.327c-.067 0-.089-.035-.081-.099l.845-6.726a.107.107 0 01.035-.073.106.106 0 01.076-.027zM20.749 13.292h.325c.072 0 .094.035.091.101l-.601 4.786a.103.103 0 01-.12.099h-.326c-.061 0-.1-.034-.092-.099l.61-4.789a.101.101 0 01.071-.094.102.102 0 01.042-.004z\" fill=\"#4D4D4E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M35.422 13.213a1.86 1.86 0 00-1.848 1.414 9.71 9.71 0 00-.203 1.157c-.053.383-.083.77-.092 1.156a1.405 1.405 0 00.407 1.022c.266.256.63.383 1.092.383a1.86 1.86 0 001.174-.383c.331-.255.566-.615.664-1.021.092-.381.16-.768.203-1.157.052-.388.082-.777.09-1.168a1.345 1.345 0 00-.402-1.021 1.51 1.51 0 00-1.085-.382zm.923 2.106c-.03.244-.05.4-.056.465-.061.494-.116.847-.163 1.058-.064.302-.23.572-.47.766-.233.19-.526.291-.827.287a.968.968 0 01-1.03-1.022c.003-.205.018-.41.046-.613.03-.244.05-.399.056-.465.061-.474.116-.828.163-1.057.064-.302.23-.572.469-.766.234-.19.527-.29.828-.287a.968.968 0 011.03 1.022 5.048 5.048 0 01-.046.612z\" fill=\"#4D4D4E\" /><path d=\"M38.456 13.292h.326c.064 0 .09.035.081.098l-.601 4.79a.103.103 0 01-.112.098h-.327c-.062 0-.101-.03-.092-.099l.613-4.789a.106.106 0 01.112-.098zM42.912 13.574c-.225-.235-.54-.35-.95-.35a1.746 1.746 0 00-.734.152 1.495 1.495 0 00-.572.46c-.026.026-.04.02-.04-.02l.05-.426c.008-.06-.019-.098-.081-.098h-.326a.105.105 0 00-.077.025.105.105 0 00-.035.073l-.602 4.79c-.007.062.014.098.082.098h.327a.105.105 0 00.112-.099l.438-3.431c.063-.298.22-.567.45-.766.224-.195.512-.3.808-.294a.903.903 0 01.691.277c.179.202.27.466.255.736.002.073-.002.146-.01.218l-.417 3.26a.08.08 0 00.015.07.095.095 0 00.077.029h.325a.105.105 0 00.078-.026.102.102 0 00.035-.073l.419-3.342c.014-.127.02-.23.02-.296a1.331 1.331 0 00-.338-.967zM39.015 11.356a.402.402 0 10-.373.712.402.402 0 00.373-.712zM29.971 13.604c.338-.262.756-.4 1.184-.391.398-.023.789.112 1.087.377a1.34 1.34 0 01.404 1.021v.116a.059.059 0 01-.06.06h-.384a.074.074 0 01-.054-.024.077.077 0 01-.021-.055v-.007a.968.968 0 00-1.032-1.022c-.3-.004-.592.097-.826.286a1.342 1.342 0 00-.464.771c-.048.23-.102.584-.163 1.058-.008.066-.03.262-.056.465a5.069 5.069 0 00-.046.613.966.966 0 001.03 1.021c.3.005.593-.096.827-.286.24-.194.405-.464.47-.766v-.02a.063.063 0 01.062-.047h.402a.047.047 0 01.036.018.046.046 0 01.009.039 4.137 4.137 0 01-.027.108 1.818 1.818 0 01-.663 1.022c-.336.257-.75.392-1.173.383-.462 0-.826-.128-1.092-.383a1.395 1.395 0 01-.409-1.022c.01-.387.04-.773.092-1.157.047-.389.115-.775.205-1.157.099-.405.332-.766.662-1.021z\" fill=\"#4D4D4E\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M27.86 13.599a1.509 1.509 0 00-1.086-.383 1.859 1.859 0 00-1.848 1.413 9.86 9.86 0 00-.203 1.157c-.06.383-.09.77-.092 1.157a1.405 1.405 0 00.407 1.022c.266.255.63.383 1.092.383a1.86 1.86 0 001.174-.383c.332-.255.566-.615.664-1.022l.027-.108a.046.046 0 00-.045-.057h-.406a.064.064 0 00-.063.048v.019a1.342 1.342 0 01-.468.766c-.236.187-.53.286-.83.278a.968.968 0 01-1.031-1.021c.002-.18.015-.358.037-.535l2.949-.913a.12.12 0 00.094-.12c.018-.152.03-.412.032-.677a1.406 1.406 0 00-.404-1.024zm-.116 1.377a.068.068 0 01-.048.063l-2.444.755v-.01c.06-.474.116-.828.163-1.058.064-.301.23-.572.469-.766.234-.189.526-.29.827-.286a1.005 1.005 0 01.748.291c.302.295.303.61.285 1.011z\" fill=\"#4D4D4E\" /><path d=\"M23.557 17.738a.08.08 0 00-.041.01c-.21.098-.61.192-.821.014-.152-.148-.12-.41-.085-.705a4.49 4.49 0 01.005-.036l.357-2.877h1.022a.129.129 0 00.081-.023c.02-.02.031-.048.031-.077l.028-.227c.004-.063-.023-.098-.082-.098h-1.021l.194-1.584c.009-.056-.007-.098-.082-.098h-.315a.1.1 0 00-.078.024.101.101 0 00-.035.074l-.143 1.117-.061.505-.432 3.507c-.053.46.043.83.417 1 .33.122.694.117 1.021-.013a.12.12 0 00.076-.096l.04-.33a.079.079 0 00-.035-.075.08.08 0 00-.04-.012z\" fill=\"#4D4D4E\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 33 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect x=\".5\" width=\"32\" height=\"32\" rx=\"16\" fill=\"#fff\" /><path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M15.823 0a15.92 15.92 0 00-8.297 2.903h18.465A15.922 15.922 0 0017.693 0H15.823zM4.398 5.806A15.972 15.972 0 002.5 8.709H31.017a15.957 15.957 0 00-1.898-2.903H4.398zM.566 14.544c.087-.997.267-1.967.53-2.903h30.786c.263.936.443 1.906.53 2.903H.566zm.006 2.904c.093.997.28 1.967.547 2.902h30.74c.268-.935.455-1.905.547-2.902H.572zm3.624 8.708a15.982 15.982 0 01-1.924-2.903H30.706a15.978 15.978 0 01-1.924 2.903H4.196zm11.617 5.789l.048.002.049.002a15.751 15.751 0 009.697-2.889H7.371a15.75 15.75 0 008.44 2.885z\" fill=\"#F44336\" /><path d=\"M16.159.008C7.964.174 1.287 6.5.569 14.548h15.59V.008z\" fill=\"#283991\" /><path d=\"M3.7 9.04l.243.748h.79l-.64.463.245.749-.639-.463-.638.463.244-.749-.639-.463h.79l.243-.748zM3.7 11.684l.243.749h.79l-.64.463.245.749-.639-.463-.638.463.244-.75-.639-.462h.79l.243-.749zM6.35 5.072l.243.75h.79l-.639.462.244.749-.638-.463-.639.463.244-.749-.638-.463h.789l.244-.749zM6.35 7.717l.243.749h.79l-.639.462.244.75-.638-.463-.639.462.244-.749-.638-.462h.789l.244-.749zM6.35 10.362l.243.749h.79l-.639.462.244.75-.638-.464-.639.463.244-.749-.638-.462h.789l.244-.75zM1.687 12.322l-.244-.749.639-.462h-.79l-.017-.055c-.086.267-.165.538-.237.811l.011-.008.638.463zM3.061 8.355l.638-.463.639.463-.244-.749.638-.463h-.79L3.7 6.395l-.244.748h-.29l-.16.247.3.216-.244.75zM6.35 3.925l.638.463-.244-.749.638-.463h-.456c-.387.29-.76.595-1.119.917l-.096.295.639-.463zM8.362 3.066L9 2.603l.638.463-.244-.75.638-.462h-.789l-.033-.1c-.267.136-.532.278-.79.428l.185.135-.243.749zM9 3.75l.244.748h.789l-.639.464.244.749L9 5.247l-.638.464.243-.75-.638-.463h.79L9 3.75zM9 6.395l.244.748h.789l-.639.463.244.75L9 7.891l-.638.463.243-.749-.638-.463h.79L9 6.395zM9 9.04l.244.748h.789l-.639.463.244.749L9 10.537 8.362 11l.243-.749-.638-.463h.79L9 9.04zM9 11.684l.244.749h.789l-.639.463.244.749L9 13.182l-.638.463.243-.75-.638-.462h.79L9 11.684zM11.65 2.428l.244.748h.789l-.638.463.243.749-.638-.463-.638.463.244-.749-.639-.463h.79l.243-.748zM11.65 5.072l.244.75h.789l-.638.462.243.749-.638-.463-.638.463.244-.749-.639-.463h.79l.243-.749zM11.65 7.717l.244.749h.789l-.638.462.243.75-.638-.463-.638.462.244-.749-.639-.462h.79l.243-.749zM11.65 10.362l.244.749h.789l-.638.462.243.75-.638-.464-.638.463.244-.749-.639-.462h.79l.243-.75zM14.3 1.105l.244.75h.79l-.639.462.244.749-.638-.463-.639.463.244-.75-.638-.462h.788l.245-.749zM14.3 3.75l.244.748h.79l-.639.464.244.749-.638-.464-.639.464.244-.75-.638-.463h.788l.245-.748zM14.3 6.395l.244.748h.79l-.639.463.244.75-.638-.464-.639.463.244-.749-.638-.463h.788l.245-.748zM14.3 9.04l.244.748h.79l-.639.463.244.749-.638-.463-.639.463.244-.749-.638-.463h.788l.245-.748zM14.3 11.684l.244.749h.79l-.639.463.244.749-.638-.463-.639.463.244-.75-.638-.462h.788l.245-.749z\" fill=\"#EFEFEF\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg viewBox=\"0 0 49 30\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><path d=\"M17.812 12.458h.328c.084 0 .151.068.151.151v2.936c0 .928.503 1.514 1.439 1.514.935 0 1.438-.586 1.438-1.513V12.61c0-.084.067-.152.151-.152h.328c.084 0 .152.068.152.151v2.945c0 1.263-.694 2.068-2.07 2.068s-2.068-.813-2.068-2.061V12.61a.149.149 0 01.151-.151zm4.953 4a.134.134 0 01.198-.014c.34.33.848.615 1.492.615.904 0 1.194-.487 1.194-.874 0-.61-.616-.777-1.285-.96-.814-.213-1.72-.44-1.72-1.437 0-.837.746-1.408 1.744-1.408.716 0 1.282.22 1.7.606.06.054.065.148.013.21l-.198.242a.133.133 0 01-.194.012c-.371-.348-.86-.507-1.368-.507-.61 0-1.043.328-1.043.805 0 .51.586.662 1.233.837.828.221 1.771.48 1.771 1.545 0 .737-.502 1.49-1.87 1.49-.82 0-1.436-.289-1.856-.708a.153.153 0 01-.012-.202l.201-.252zm4.289-3.849a.15.15 0 01.15-.15h1.583c1.574 0 2.603 1.102 2.603 2.54 0 1.445-1.027 2.532-2.603 2.532h-1.582a.151.151 0 01-.151-.151v-4.77zm1.735 4.36c1.232 0 1.946-.884 1.946-1.97 0-1.097-.692-1.978-1.947-1.978h-1.102v3.947h1.102zm8.913-1.278c0-1.066.702-1.925 1.819-1.925s1.819.86 1.819 1.925c0 1.066-.702 1.933-1.819 1.933-1.118 0-1.819-.869-1.819-1.932zm3.036 0c0-.745-.433-1.415-1.217-1.415s-1.225.67-1.225 1.415c0 .753.44 1.423 1.225 1.423.784 0 1.216-.67 1.216-1.423zm1.149-2.837c0-.214.175-.38.38-.38.213 0 .388.166.388.38a.39.39 0 01-.388.388.39.39 0 01-.38-.388zm.25 1.003h.266c.083 0 .151.068.151.151v3.372a.151.151 0 01-.15.15h-.267a.151.151 0 01-.152-.15v-3.372c0-.083.069-.15.152-.15zm3.705 1.271c0-.646-.328-.852-.821-.852-.448 0-.875.274-1.089.571v2.533a.151.151 0 01-.151.15h-.266a.151.151 0 01-.151-.15v-3.372c0-.083.067-.15.151-.15h.266c.083 0 .151.067.151.15v.38c.258-.303.761-.622 1.308-.622.769 0 1.172.388 1.172 1.186v2.426a.151.151 0 01-.15.151h-.267a.151.151 0 01-.151-.151v-2.25h-.002zm-13.01-.13c0-1.56 1.148-2.623 2.586-2.623.852 0 1.45.37 1.854.88a.134.134 0 01-.04.2l-.283.156a.151.151 0 01-.191-.036 1.732 1.732 0 00-1.34-.636c-1.088 0-1.932.853-1.932 2.062 0 1.202.844 2.06 1.932 2.06.553 0 1.04-.255 1.339-.634a.153.153 0 01.192-.039l.288.158c.074.04.091.138.038.202-.42.512-1.005.877-1.857.877-1.438-.002-2.587-1.066-2.587-2.626z\" fill=\"#4D4E50\" /><path d=\"M8.75 21a6 6 0 100-12 6 6 0 000 12z\" fill=\"#2775CA\" /><path d=\"M7.625 19.009c0 .14-.11.221-.247.178a4.502 4.502 0 010-8.574c.137-.042.247.038.247.18v.347c0 .095-.072.205-.162.236A3.757 3.757 0 005 14.898a3.757 3.757 0 002.464 3.522c.09.034.162.142.162.236v.353z\" fill=\"#fff\" /><path d=\"M9.124 17.712a.189.189 0 01-.188.189h-.374a.19.19 0 01-.188-.19v-.592c-.819-.11-1.22-.57-1.328-1.193a.175.175 0 01.175-.202h.428c.09 0 .165.063.184.153.08.372.294.657.95.657.485 0 .829-.271.829-.676s-.203-.558-.913-.676c-1.05-.14-1.546-.458-1.546-1.282 0-.635.479-1.129 1.223-1.235v-.581a.19.19 0 01.189-.189h.373a.19.19 0 01.19.189v.597c.604.109.987.452 1.112 1.022a.174.174 0 01-.172.209h-.395a.19.19 0 01-.181-.138c-.106-.363-.364-.518-.814-.518-.496 0-.753.24-.753.576 0 .356.146.534.908.645 1.032.14 1.563.435 1.563 1.313 0 .666-.494 1.204-1.268 1.33v.592h-.004z\" fill=\"#fff\" /><path d=\"M10.122 19.187c-.136.043-.247-.038-.247-.179v-.349c0-.103.064-.2.162-.234a3.758 3.758 0 002.464-3.523 3.759 3.759 0 00-2.463-3.523.27.27 0 01-.163-.235v-.348c0-.141.11-.224.247-.179a4.502 4.502 0 013.13 4.287 4.505 4.505 0 01-3.13 4.283z\" fill=\"#fff\" /></svg>);","import WalletAddMoreCurrencyIcon from './WalletAddMoreCurrencyIcon';\nimport './WalletAddMoreCurrencyIcon.scss';\n\nexport default WalletAddMoreCurrencyIcon;\n","import React from 'react';\nimport CheckIcon from '../../public/images/check.svg';\nimport PlusIcon from '../../public/images/plus.svg';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\nimport WalletAddMoreCurrencyIcon from '../WalletAddMoreCurrencyIcon';\n\ntype TProps = THooks.AvailableWallets;\n\nconst WalletsAddMoreCardBanner: React.FC<TProps> = ({\n    currency,\n    is_added: isAdded,\n    landing_company_name: landingCompanyName,\n}) => {\n    return (\n        <div className='wallets-add-more__banner'>\n            <div className='wallets-add-more__banner-header'>\n                <span className='wallets-add-more__banner-logo'>\n                    <WalletAddMoreCurrencyIcon currency={currency ? currency.toLowerCase() : ''} />\n                </span>\n                <div className='wallets-add-more__banner-landing-company'>\n                    <WalletText align='right' size='xs' weight='bold'>\n                        {landingCompanyName}\n                    </WalletText>\n                </div>\n            </div>\n            <button\n                className={`wallets-add-more__banner-button ${\n                    isAdded ? 'wallets-add-more__banner-button--is-added' : ''\n                }`}\n            >\n                {isAdded ? (\n                    <CheckIcon className='wallets-add-more__banner-button-icon' />\n                ) : (\n                    <PlusIcon className='wallets-add-more__banner-button-icon' />\n                )}\n                {isAdded ? 'Added' : 'Add'}\n            </button>\n        </div>\n    );\n};\n\nexport default WalletsAddMoreCardBanner;\n","import WalletsAddMoreCardBanner from './WalletsAddMoreCardBanner';\nimport './WalletsAddMoreCardBanner.scss';\n\nexport default WalletsAddMoreCardBanner;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletText } from '../Base';\n\ntype TWalletDescriptionMapper = {\n    [key: string]: string;\n};\n\ntype TProps = {\n    currency: Exclude<THooks.AvailableWallets['currency'], undefined>;\n};\n\nconst walletDescriptionMapper: TWalletDescriptionMapper = {\n    AUD: 'Deposit and withdraw Australian dollars using credit or debit cards, e-wallets, or bank wires.',\n    BTC: \"Deposit and withdraw Bitcoin, the world's most popular cryptocurrency, hosted on the Bitcoin blockchain.\",\n    ETH: 'Deposit and withdraw Ether, the fastest growing cryptocurrency, hosted on the Ethereum blockchain.',\n    EUR: 'Deposit and withdraw euros into your accounts regulated by MFSA using credit or debit cards and e-wallets.',\n    eUSDT: 'Deposit and withdraw Tether ERC20, a version of Tether hosted on the Ethereum blockchain.',\n    LTC: 'Deposit and withdraw Litecoin, the cryptocurrency with low transaction fees, hosted on the Litecoin blockchain.',\n    PaymentAgent: 'Deposit and withdraw funds via authorised, independent payment agents.',\n    tUSDT: 'Deposit and withdraw Tether TRC20, a version of Tether hosted on the TRON blockchain.',\n    USD: 'Deposit and withdraw US dollars using credit or debit cards, e-wallets, or bank wires.',\n    USDC: 'Deposit and withdraw USD Coin, hosted on the Ethereum blockchain.',\n    UST: 'Deposit and withdraw Tether Omni, hosted on the Bitcoin blockchain.',\n};\n\nconst WalletsAddMoreCardContent: React.FC<TProps> = ({ currency }) => {\n    return (\n        <div className='wallets-add-more__content'>\n            <WalletText size='md' weight='bold'>\n                {currency} Wallet\n            </WalletText>\n\n            <WalletText size='sm'>{walletDescriptionMapper[currency]}</WalletText>\n        </div>\n    );\n};\n\nexport default WalletsAddMoreCardContent;\n","import WalletsAddMoreCardContent from './WalletsAddMoreCardContent';\nimport './WalletsAddMoreCardContent.scss';\n\nexport default WalletsAddMoreCardContent;\n","import React from 'react';\nimport { THooks } from '../../types';\nimport { WalletGradientBackground } from '../WalletGradientBackground';\nimport WalletsAddMoreCardBanner from '../WalletsAddMoreCardBanner';\nimport WalletsAddMoreCardContent from '../WalletsAddMoreCardContent';\n\ntype TProps = THooks.AvailableWallets;\n\nconst WalletsAddMoreCard: React.FC<TProps> = ({\n    currency,\n    is_added: isAdded,\n    landing_company_name: landingCompanyName,\n}) => {\n    return (\n        <div className='wallets-add-more__card'>\n            <WalletGradientBackground currency={currency || 'USD'} device='mobile' hasShine type='card'>\n                <WalletsAddMoreCardBanner\n                    currency={currency || 'USD'}\n                    is_added={isAdded}\n                    landing_company_name={landingCompanyName ?? ''}\n                />\n            </WalletGradientBackground>\n            <WalletsAddMoreCardContent currency={currency ?? ''} />\n        </div>\n    );\n};\n\nexport default WalletsAddMoreCard;\n","import WalletsAddMoreCard from './WalletsAddMoreCard';\nimport './WalletsAddMoreCard.scss';\n\nexport default WalletsAddMoreCard;\n","import React, { useEffect, useRef } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport { useHover } from 'usehooks-ts';\nimport { useAvailableWallets } from '@deriv/api';\nimport useDevice from '../../hooks/useDevice';\nimport { WalletText } from '../Base';\nimport { WalletsAddMoreLoader } from '../SkeletonLoader';\nimport WalletsAddMoreCard from '../WalletsAddMoreCard';\nimport './WalletsAddMoreCarousel.scss';\n\nconst WalletsAddMoreCarousel: React.FC = () => {\n    const { isDesktop, isMobile } = useDevice();\n    const { data: availableWallets, isLoading } = useAvailableWallets();\n    const [walletsAddMoreEmblaRef, walletsAddMoreEmblaAPI] = useEmblaCarousel({\n        align: 0,\n        containScroll: 'trimSnaps',\n    });\n    const hoverRef = useRef<HTMLDivElement>(null);\n    const isHover = useHover(hoverRef);\n\n    useEffect(() => {\n        if (!walletsAddMoreEmblaAPI) return;\n\n        walletsAddMoreEmblaAPI.reInit({ watchDrag: isMobile });\n    }, [walletsAddMoreEmblaAPI, isMobile]);\n\n    return (\n        <div className='wallets-add-more' ref={hoverRef}>\n            <div className='wallets-add-more__header'>\n                <WalletText size='2xl' weight='bold'>\n                    Add more Wallets\n                </WalletText>\n            </div>\n            <div className='wallets-add-more__carousel' data-testid='dt-wallets-add-more' ref={walletsAddMoreEmblaRef}>\n                <div className='wallets-add-more__carousel-wrapper'>\n                    {isLoading &&\n                        Array.from({ length: 8 }).map((_, idx) => (\n                            <WalletsAddMoreLoader key={`wallets-add-more-loader-${idx}`} />\n                        ))}\n                    {availableWallets?.map(wallet => (\n                        <WalletsAddMoreCard\n                            currency={wallet.currency}\n                            is_added={wallet.is_added}\n                            key={`wallets_add_more_${wallet.currency}-${wallet.landing_company_name}`}\n                            landing_company_name={wallet.landing_company_name}\n                        />\n                    ))}\n                </div>\n                {isDesktop && isHover && (\n                    <React.Fragment>\n                        <button\n                            className='wallets-add-more__carousel-btn wallets-add-more__carousel-btn--prev'\n                            disabled={!walletsAddMoreEmblaAPI?.canScrollPrev()}\n                            onClick={() => walletsAddMoreEmblaAPI?.scrollPrev()}\n                        >\n                            &lt;\n                        </button>\n                        <button\n                            className='wallets-add-more__carousel-btn wallets-add-more__carousel-btn--next'\n                            disabled={!walletsAddMoreEmblaAPI?.canScrollNext()}\n                            onClick={() => walletsAddMoreEmblaAPI?.scrollNext()}\n                        >\n                            &gt;\n                        </button>\n                    </React.Fragment>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default WalletsAddMoreCarousel;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport useEmblaCarousel from 'embla-carousel-react';\nimport { useActiveWalletAccount, useAuthorize, useCurrencyConfig, useWalletAccountsList } from '@deriv/api';\nimport { ProgressBar } from '../Base';\nimport { WalletsCarouselLoader } from '../SkeletonLoader';\nimport { WalletCard } from '../WalletCard';\nimport { WalletListCardActions } from '../WalletListCardActions';\nimport './WalletsCarouselContent.scss';\n\nconst WalletsCarouselContent: React.FC = () => {\n    const { isLoading: isAuthorizeLoading, switchAccount } = useAuthorize();\n    const { isLoading: isCurrencyConfigLoading } = useCurrencyConfig();\n    const [walletsCarouselEmblaRef, walletsCarouselEmblaApi] = useEmblaCarousel({\n        containScroll: false,\n        skipSnaps: true,\n    });\n    const { data: walletAccountsList } = useWalletAccountsList();\n    const { data: activeWallet } = useActiveWalletAccount();\n    const activeWalletIndex = useMemo(\n        () =>\n            walletAccountsList?.findIndex(item => item?.is_active) ||\n            walletsCarouselEmblaApi?.selectedScrollSnap() ||\n            0,\n        [walletAccountsList, walletsCarouselEmblaApi]\n    );\n\n    const [progressBarActiveIndex, setProgressBarActiveIndex] = useState(activeWalletIndex + 1);\n\n    useEffect(() => {\n        walletsCarouselEmblaApi?.scrollTo(activeWalletIndex);\n        setProgressBarActiveIndex(activeWalletIndex + 1);\n    }, [activeWalletIndex, walletsCarouselEmblaApi]);\n\n    useEffect(() => {\n        walletsCarouselEmblaApi?.on('settle', () => {\n            const scrollSnapIndex = walletsCarouselEmblaApi?.selectedScrollSnap();\n            const loginid = walletAccountsList?.[scrollSnapIndex]?.loginid;\n            switchAccount(loginid || '');\n        });\n\n        walletsCarouselEmblaApi?.on('select', () => {\n            const scrollSnapIndex = walletsCarouselEmblaApi?.selectedScrollSnap();\n            setProgressBarActiveIndex(scrollSnapIndex + 1);\n        });\n    }, [walletsCarouselEmblaApi, switchAccount, walletAccountsList]);\n\n    const amountOfSteps = useMemo(() => walletAccountsList?.map(wallet => wallet.loginid), [walletAccountsList]);\n\n    if (isAuthorizeLoading || isCurrencyConfigLoading) {\n        return <WalletsCarouselLoader />;\n    }\n\n    return (\n        <div className='wallets-carousel-content' ref={walletsCarouselEmblaRef}>\n            <div className='wallets-carousel-content__container'>\n                {walletAccountsList?.map(account => (\n                    <WalletCard account={account} key={`wallet-card-${account.loginid}`} />\n                ))}\n            </div>\n            <div className='wallets-carousel-content__progress-bar'>\n                <ProgressBar\n                    activeIndex={progressBarActiveIndex}\n                    indexes={amountOfSteps || []}\n                    isTransition\n                    setActiveIndex={switchAccount}\n                />\n            </div>\n            <WalletListCardActions\n                isActive={activeWallet?.is_active || false}\n                isDemo={activeWallet?.is_virtual || false}\n                loginid={activeWallet?.loginid || ''}\n            />\n        </div>\n    );\n};\n\nexport default WalletsCarouselContent;\n","import React from 'react';\nimport { AccountsList } from '../AccountsList';\nimport { WalletsCarouselContent } from '../WalletsCarouselContent';\n\nconst WalletsCarousel: React.FC = () => {\n    return (\n        <React.Fragment>\n            <WalletsCarouselContent />\n            <AccountsList />\n        </React.Fragment>\n    );\n};\n\nexport default WalletsCarousel;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"128\" height=\"128\" {...props}><g fill=\"none\" transform=\"translate(5 5)\"><circle cx=\"59\" cy=\"59\" r=\"59\" fill=\"#FF444F\" /><path fill=\"#FFF\" d=\"M53.049 81.01v-1.488c0-2.848 1.744-5.13 5.951-5.13s5.926 2.205 5.926 5.13v1.616c0 2.873-1.719 5.13-5.926 5.13s-5.951-2.385-5.951-5.258zm3.95-17.085l-3.155-18.957V32.142a6.644 6.644 0 015.13-2.822 6.516 6.516 0 015.13 2.822v12.826l-3.052 18.957a2.232 2.232 0 01-1.975 1.488 2.206 2.206 0 01-2.078-1.488z\" /></g></svg>);","import React from 'react';\nimport IcCashierError from '../../public/images/ic-cashier-error.svg';\nimport WalletsActionScreen from '../WalletsActionScreen/WalletsActionScreen';\n\ntype TProps = {\n    message: string;\n};\n\nconst ErrorState: React.FC<TProps> = ({\n    message = 'Sorry an error occurred. Please try accessing our cashier page again.',\n}) => {\n    return (\n        <WalletsActionScreen\n            actionText='Try again'\n            actionVariant='ghost'\n            description={message}\n            icon={<IcCashierError />}\n            onAction={() => window.location.reload()}\n            title={'Oops, something went wrong!'}\n        />\n    );\n};\n\nexport default ErrorState;\n","import React from 'react';\nimport { Step, TooltipRenderProps } from 'react-joyride';\nimport { WalletButton, WalletText } from '../Base';\nimport './WalletTourGuide.scss';\n\nexport const tourStepConfig: Step[] = [\n    {\n        content: (\n            <WalletText size='sm'>\n                This is your Wallet. These are the functions that you can perform within this Wallet and you can\n                conveniently view your total balance here.\n            </WalletText>\n        ),\n        disableBeacon: true,\n        disableOverlayClose: true,\n        target: '.wallets-accordion__header:has(+ .wallets-accordion__content--visible)',\n        title: (\n            <WalletText color='red' size='sm' weight='bold'>\n                Wallets\n            </WalletText>\n        ),\n    },\n    {\n        content: <WalletText size='sm'>Step 2</WalletText>,\n        disableBeacon: true,\n        disableOverlayClose: true,\n        target: '.wallets-accordion__header:has(+ .wallets-accordion__content--visible)',\n        title: (\n            <WalletText color='red' size='sm' weight='bold'>\n                Wallets\n            </WalletText>\n        ),\n    },\n];\n\nexport const TooltipComponent: React.FC<TooltipRenderProps> = ({\n    backProps,\n    closeProps,\n    continuous,\n    index,\n    isLastStep,\n    primaryProps,\n    step,\n    tooltipProps,\n}) => {\n    return (\n        <div {...tooltipProps} className='wallets-tour-guide__container'>\n            <div className='wallets-tour-guide__header'>{step?.title as React.ReactNode}</div>\n            {<div className='wallets-tour-guide__content'>{step.content as React.ReactNode}</div>}\n            <div className='wallets-tour-guide__footer'>\n                {index > 0 && <WalletButton {...backProps} color='white' text='Back' variant='outlined' />}\n                {continuous && <WalletButton {...primaryProps} text={isLastStep ? 'Close' : 'Next'} />}\n                {!continuous && <WalletButton {...closeProps} text='Close' />}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport Joyride, { CallBackProps } from 'react-joyride';\nimport { TooltipComponent, tourStepConfig } from './WalletTourGuideSettings';\nimport './WalletTourGuide.scss';\n\ntype TProps = {\n    isStarted?: boolean;\n    setIsStarted?: (value: boolean) => void;\n};\n\nconst WalletTourGuide: React.FC<TProps> = ({ isStarted, setIsStarted }) => {\n    const callbackHandle = (data: CallBackProps) => {\n        if (data.action === 'reset') {\n            setIsStarted?.(false);\n        }\n    };\n\n    return (\n        <Joyride\n            callback={callbackHandle}\n            continuous\n            disableCloseOnEsc\n            disableScrolling\n            floaterProps={{\n                disableAnimation: true,\n            }}\n            run={isStarted}\n            steps={tourStepConfig}\n            tooltipComponent={TooltipComponent}\n        />\n    );\n};\n\nexport default WalletTourGuide;\n","import React from 'react';\nimport { WalletCashier } from '../../features';\nimport './CashierModalRoute.scss';\n\nconst CashierModalRoute: React.FC = () => (\n    <div className='wallets-cashier-modal-route'>\n        <WalletCashier />\n    </div>\n);\n\nexport default CashierModalRoute;\n","import React from 'react';\nimport { DesktopWalletsList, WalletsAddMoreCarousel, WalletsCarousel, WalletTourGuide } from '../../components';\nimport useDevice from '../../hooks/useDevice';\nimport './WalletsListingRoute.scss';\n\nconst WalletsListingRoute: React.FC = () => {\n    const { isMobile } = useDevice();\n    return (\n        <div className='wallets-listing-route'>\n            {isMobile ? <WalletsCarousel /> : <DesktopWalletsList />}\n            <WalletsAddMoreCarousel />\n            <WalletTourGuide />\n        </div>\n    );\n};\n\nexport default WalletsListingRoute;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useWalletAccountsList } from '@deriv/api';\nimport { WalletNoWalletFoundState } from '../components';\nimport { CashierModalRoute } from './CashierModalRoute';\nimport { WalletsListingRoute } from './WalletsListingRoute';\n\nconst prefix = '/wallets';\n\ntype TRoutes =\n    | `${typeof prefix}/cashier/deposit`\n    | `${typeof prefix}/cashier/reset-balance`\n    | `${typeof prefix}/cashier/transactions`\n    | `${typeof prefix}/cashier/transfer`\n    | `${typeof prefix}/cashier/withdraw`\n    | `${typeof prefix}/cashier`\n    | `${typeof prefix}`;\n\ndeclare module 'react-router-dom' {\n    export function useHistory(): { push: (path: TRoutes | string) => void };\n\n    export function useRouteMatch(path: TRoutes): boolean;\n}\n\nconst Router: React.FC = () => {\n    const { data: walletAccounts, isLoading } = useWalletAccountsList();\n\n    if ((!walletAccounts || !walletAccounts.length) && !isLoading)\n        return <Route component={WalletNoWalletFoundState} path={prefix} />;\n\n    return (\n        <Switch>\n            <Route component={CashierModalRoute} path={`${prefix}/cashier`} />\n            <Route component={WalletsListingRoute} path={prefix} />\n        </Switch>\n    );\n};\n\nexport default Router;\n","import React from 'react';\nimport { Router } from './routes';\nimport './AppContent.scss';\n\nconst AppContent: React.FC = () => {\n    return (\n        <div className='wallets-app'>\n            <div id='wallets_modal_responsive_root' className='wallets-modal-responsive-root'></div>\n            <Router />\n        </div>\n    );\n};\n\nexport default AppContent;\n","import React from 'react';\nimport { APIProvider } from '@deriv/api';\nimport { ModalProvider } from './components/ModalProvider';\nimport AppContent from './AppContent';\nimport './styles/fonts.scss';\nimport './index.scss';\n\nconst App: React.FC = () => (\n    <APIProvider standalone>\n        <ModalProvider>\n            <AppContent />\n        </ModalProvider>\n    </APIProvider>\n);\n\nexport default App;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-app{display:flex;flex-direction:column;align-items:center;gap:2.4rem;width:100%;align-self:stretch;background:#f2f3f4;background:var(--system-light-7-secondary-background, #f2f3f4);min-height:calc(100vh - 8.4rem)}@media(max-width: 767px){.wallets-app{overflow-y:auto;height:calc(100svh - 4rem)}}.wallets-modal-responsive-root{position:absolute;z-index:1}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AppContent.scss\"],\"names\":[],\"mappings\":\"AA0pBA,aACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,kBAAA,CACA,kBAAA,CAAA,8DAAA,CACA,+BAAA,CAzBA,yBAiBJ,aAWQ,eAAA,CACA,0BAAA,CAAA,CAIR,+BACI,iBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-app {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n    width: 100%;\\n    align-self: stretch;\\n    background: var(--system-light-7-secondary-background, #f2f3f4);\\n    min-height: calc(100vh - 8.4rem); // 100vh - (4.8rem header + 3.6rem footer)\\n\\n    @include mobile {\\n        overflow-y: auto;\\n        height: calc(100svh - 4rem); // 100svh - 4rem (header)\\n    }\\n}\\n\\n.wallets-modal-responsive-root {\\n    position: absolute;\\n    z-index: 1;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-accounts-list{height:100%;width:100%}@media(min-width: 1024px){.wallets-accounts-list{border-radius:0 0 1.6rem 1.6rem}}@media(max-width: 767px){.wallets-accounts-list{padding:1rem;width:100%;height:auto;background:#fff}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AccountsList.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,WAAA,CACA,UAAA,CAPA,0BAKJ,uBAKQ,+BAAA,CAAA,CAtBJ,yBAiBJ,uBASQ,YAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-accounts-list {\\n    height: 100%;\\n    width: 100%;\\n\\n    @include desktop {\\n        border-radius: 0 0 1.6rem 1.6rem;\\n    }\\n\\n    @include mobile {\\n        padding: 1rem;\\n        width: 100%;\\n        height: auto;\\n        background: #ffffff;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-divider__horizontal{border-top:1px solid}.wallets-divider__vertical{border-right:1px solid}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Divider.scss\"],\"names\":[],\"mappings\":\"AA2pBI,6BACI,oBAAA,CAGJ,2BACI,sBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-divider {\\n    &__horizontal {\\n        border-top: 1px solid;\\n    }\\n\\n    &__vertical {\\n        border-right: 1px solid;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-inline-message{display:flex;flex-direction:row;align-items:flex-start;padding:8px;gap:8px;border-radius:4px;height:-moz-min-content;height:min-content}@media(min-width: 768px){.wallets-inline-message--lg{padding:16px;gap:16px;border-radius:8px}}.wallets-inline-message--warning{background:rgba(255,173,58,.16)}.wallets-inline-message--information{background:rgba(55,124,252,.16)}.wallets-inline-message--announcement{background:rgba(75,180,179,.16)}.wallets-inline-message--error{background:rgba(236,63,63,.16)}.wallets-inline-message__icon--sm{margin-top:1px}@media(max-width: 767px){.wallets-inline-message__icon--sm{margin-top:0}}.wallets-inline-message__icon--md{margin-top:2px}@media(max-width: 767px){.wallets-inline-message__icon--md{margin-top:1px}}@media(max-width: 767px){.wallets-inline-message__icon--lg{margin-top:1px}}.wallets-inline-message__messages{display:inline-flex;align-self:center;flex-direction:column;flex:1}.wallets-inline-message__messages--xs{margin-top:1px}@media(max-width: 767px){.wallets-inline-message__messages--xs{margin-top:2px}}@media(max-width: 767px){.wallets-inline-message__messages--sm{margin-top:1px}}.wallets-inline-message--outlined{background-color:rgba(0,0,0,0);border:1px solid}.wallets-inline-message--outlined.wallets-inline-message--warning{color:#ffad3a;border-color:#ffad3a}.wallets-inline-message--outlined.wallets-inline-message--information{color:#377cfc;border-color:#377cfc}.wallets-inline-message--outlined.wallets-inline-message--announcement{color:#4bb4b3;border-color:#4bb4b3}.wallets-inline-message--outlined.wallets-inline-message--error{color:#ec3f3f;border-color:#ec3f3f}\", \"\",{\"version\":3,\"sources\":[\"webpack://./InlineMessage.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wBACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,WAAA,CACA,OAAA,CACA,iBAAA,CACA,uBAAA,CAAA,kBAAA,CApEA,yBAsEA,4BAEQ,YAAA,CACA,QAAA,CACA,iBAAA,CAAA,CAIR,iCACI,+BAAA,CAGJ,qCACI,+BAAA,CAGJ,sCACI,+BAAA,CAGJ,+BACI,8BAAA,CAIA,kCACI,cAAA,CApDR,yBAmDI,kCAIQ,YAAA,CAAA,CAIR,kCACI,cAAA,CA5DR,yBA2DI,kCAIQ,cAAA,CAAA,CA/DZ,yBAmEI,kCAEQ,cAAA,CAAA,CAKZ,kCACI,mBAAA,CACA,iBAAA,CACA,qBAAA,CACA,MAAA,CAEA,sCACI,cAAA,CAjFR,yBAgFI,sCAIQ,cAAA,CAAA,CApFZ,yBAwFI,sCAEQ,cAAA,CAAA,CAKZ,kCACI,8BAAA,CACA,gBAAA,CAGJ,kEACI,aAAA,CACA,oBAAA,CAGJ,sEACI,aAAA,CACA,oBAAA,CAGJ,uEACI,aAAA,CACA,oBAAA,CAGJ,gEACI,aAAA,CACA,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-inline-message {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: flex-start;\\n    padding: 8px;\\n    gap: 8px;\\n    border-radius: 4px;\\n    height: min-content;\\n\\n    &--lg {\\n        @include tablet-up {\\n            padding: 16px;\\n            gap: 16px;\\n            border-radius: 4px * 2;\\n        }\\n    }\\n\\n    &--warning {\\n        background: rgba(255, 173, 58, 0.16);\\n    }\\n\\n    &--information {\\n        background: rgba(55, 124, 252, 0.16);\\n    }\\n\\n    &--announcement {\\n        background: rgba(75, 180, 179, 0.16);\\n    }\\n\\n    &--error {\\n        background: rgba(236, 63, 63, 0.16);\\n    }\\n\\n    &__icon {\\n        &--sm {\\n            margin-top: 1px;\\n\\n            @include mobile {\\n                margin-top: 0;\\n            }\\n        }\\n\\n        &--md {\\n            margin-top: 2px;\\n\\n            @include mobile {\\n                margin-top: 1px;\\n            }\\n        }\\n\\n        &--lg {\\n            @include mobile {\\n                margin-top: 1px;\\n            }\\n        }\\n    }\\n\\n    &__messages {\\n        display: inline-flex;\\n        align-self: center;\\n        flex-direction: column;\\n        flex: 1;\\n\\n        &--xs {\\n            margin-top: 1px;\\n\\n            @include mobile {\\n                margin-top: 2px;\\n            }\\n        }\\n\\n        &--sm {\\n            @include mobile {\\n                margin-top: 1px;\\n            }\\n        }\\n    }\\n\\n    &--outlined {\\n        background-color: transparent;\\n        border: 1px solid;\\n    }\\n\\n    &--outlined#{&}--warning {\\n        color: rgba(255, 173, 58);\\n        border-color: rgba(255, 173, 58);\\n    }\\n\\n    &--outlined#{&}--information {\\n        color: rgba(55, 124, 252);\\n        border-color: rgba(55, 124, 252);\\n    }\\n\\n    &--outlined#{&}--announcement {\\n        color: rgba(75, 180, 179);\\n        border-color: rgba(75, 180, 179);\\n    }\\n\\n    &--outlined#{&}--error {\\n        color: rgba(236, 63, 63);\\n        border-color: rgba(236, 63, 63);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-modal-step-wrapper{background-color:#fff;border-radius:.8rem}@media(max-width: 767px){.wallets-modal-step-wrapper{height:calc(100vh - 4rem);width:100vw;margin:0;border-radius:0;display:grid;grid-template-rows:6rem auto}.wallets-modal-step-wrapper--fixed-footer{grid-template-rows:6rem auto 7rem}.wallets-modal-step-wrapper--no-header{grid-template-rows:auto}.wallets-modal-step-wrapper--no-header--fixed-footer{grid-template-rows:auto 7rem}}.wallets-modal-step-wrapper__header{padding:2rem;border-bottom:.2rem solid #f2f3f4;display:flex;justify-content:space-between;align-items:center}.wallets-modal-step-wrapper__header-close-icon{cursor:pointer}@media(max-width: 767px){.wallets-modal-step-wrapper__header{display:grid;grid-template-columns:auto 2rem;background-color:#fff;position:relative;z-index:99;width:100%;padding:0 2rem}}@media(max-width: 767px){.wallets-modal-step-wrapper__body{overflow-y:scroll}}.wallets-modal-step-wrapper__footer{padding:2rem;height:10%;width:100%;bottom:0;border-top:.2rem solid #f2f3f4;display:flex;justify-content:flex-end;align-items:center}@media(max-width: 767px){.wallets-modal-step-wrapper__footer{background-color:#fff;position:relative;z-index:99;height:auto}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ModalStepWrapper.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BACI,qBAAA,CACA,mBAAA,CAnBA,yBAiBJ,4BAKQ,yBAAA,CACA,WAAA,CACA,QAAA,CACA,eAAA,CACA,YAAA,CACA,4BAAA,CAEA,0CACI,iCAAA,CAGJ,uCACI,uBAAA,CAGJ,qDACI,4BAAA,CAAA,CAIR,oCACI,YAAA,CACA,iCAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CAEA,+CACI,cAAA,CAlDR,yBA0CA,oCAYQ,YAAA,CACA,+BAAA,CACA,qBAAA,CACA,iBAAA,CACA,UAAA,CACA,UAAA,CACA,cAAA,CAAA,CA5DR,yBAgEA,kCAEQ,iBAAA,CAAA,CAIR,oCACI,YAAA,CACA,UAAA,CACA,UAAA,CACA,QAAA,CACA,8BAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CA9EJ,yBAsEA,oCAWQ,qBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-modal-step-wrapper {\\n    background-color: #ffffff;\\n    border-radius: 0.8rem;\\n\\n    @include mobile {\\n        height: calc(100vh - 4rem);\\n        width: 100vw;\\n        margin: 0;\\n        border-radius: 0;\\n        display: grid;\\n        grid-template-rows: 6rem auto;\\n\\n        &--fixed-footer {\\n            grid-template-rows: 6rem auto 7rem;\\n        }\\n\\n        &--no-header {\\n            grid-template-rows: auto;\\n        }\\n\\n        &--no-header--fixed-footer {\\n            grid-template-rows: auto 7rem;\\n        }\\n    }\\n\\n    &__header {\\n        padding: 2rem;\\n        border-bottom: 0.2rem solid #f2f3f4;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n\\n        &-close-icon {\\n            cursor: pointer;\\n        }\\n\\n        @include mobile {\\n            display: grid;\\n            grid-template-columns: auto 2rem;\\n            background-color: #ffffff;\\n            position: relative;\\n            z-index: 99;\\n            width: 100%;\\n            padding: 0 2rem;\\n        }\\n    }\\n\\n    &__body {\\n        @include mobile {\\n            overflow-y: scroll;\\n        }\\n    }\\n\\n    &__footer {\\n        padding: 2rem;\\n        height: 10%;\\n        width: 100%;\\n        bottom: 0;\\n        border-top: 0.2rem solid #f2f3f4;\\n        display: flex;\\n        justify-content: flex-end;\\n        align-items: center;\\n\\n        @include mobile {\\n            background-color: #ffffff;\\n            position: relative;\\n            z-index: 99;\\n            height: auto;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-modal-wrapper{position:relative}.wallets-modal-wrapper__close-icon{position:absolute;top:2rem;right:2rem;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ModalWrapper.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,iBAAA,CAEA,mCACI,iBAAA,CACA,QAAA,CACA,UAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-modal-wrapper {\\n    position: relative;\\n\\n    &__close-icon {\\n        position: absolute;\\n        top: 2rem;\\n        right: 2rem;\\n        cursor: pointer;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-progress-bar{display:flex;justify-content:center;cursor:pointer}.wallets-progress-bar-active{width:2.5rem;height:.8rem;background-color:#ff444f;border-radius:1rem}.wallets-progress-bar-inactive{width:.8rem;height:.8rem;margin:0 .4rem;border-radius:50%;background-color:#c2c2c2}.wallets-progress-bar-transition{transition:all .24s linear}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ProgressBar.scss\"],\"names\":[],\"mappings\":\"AA0pBA,sBACI,YAAA,CACA,sBAAA,CACA,cAAA,CAEA,6BACI,YAAA,CACA,YAAA,CACA,wBAAA,CACA,kBAAA,CAGJ,+BACI,WAAA,CACA,YAAA,CACA,cAAA,CACA,iBAAA,CACA,wBAAA,CAGJ,iCACI,0BAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-progress-bar {\\n    display: flex;\\n    justify-content: center;\\n    cursor: pointer;\\n\\n    &-active {\\n        width: 2.5rem;\\n        height: 0.8rem;\\n        background-color: #ff444f;\\n        border-radius: 1rem;\\n    }\\n\\n    &-inactive {\\n        width: 0.8rem;\\n        height: 0.8rem;\\n        margin: 0 0.4rem;\\n        border-radius: 50%;\\n        background-color: #c2c2c2;\\n    }\\n\\n    &-transition {\\n        transition: all 0.24s linear;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-tabs-list{display:grid;grid-auto-columns:1fr;position:relative;background-color:#f2f3f4;height:5rem;margin-top:1rem;border-radius:.7rem}.wallets-tabs-list-item{grid-row:1;display:flex;justify-content:center;align-items:center;cursor:pointer;font-size:1.6rem}.wallets-tabs-list-item--active{font-weight:bold;background-color:#fff;margin:.6rem;border-radius:.5rem}.wallets-tabs-list-item--disabled{color:#999}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TabList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,mBACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,wBAAA,CACA,WAAA,CACA,eAAA,CACA,mBAAA,CAEA,wBACI,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,cAAA,CACA,gBAAA,CAEA,gCACI,gBAAA,CACA,qBAAA,CACA,YAAA,CACA,mBAAA,CAGJ,kCACI,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-tabs {\\n    &-list {\\n        display: grid;\\n        grid-auto-columns: 1fr;\\n        position: relative;\\n        background-color: #f2f3f4;\\n        height: 5rem;\\n        margin-top: 1rem;\\n        border-radius: 0.7rem;\\n\\n        &-item {\\n            grid-row: 1;\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            cursor: pointer;\\n            font-size: 1.6rem;\\n\\n            &--active {\\n                font-weight: bold;\\n                background-color: #ffffff;\\n                margin: 0.6rem;\\n                border-radius: 0.5rem;\\n            }\\n\\n            &--disabled {\\n                color: #999999;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-tooltip{width:-moz-fit-content;width:fit-content;height:-moz-fit-content;height:fit-content;position:relative}.wallets-tooltip__content{display:flex;align-items:center;position:absolute}.wallets-tooltip__content--right{top:50%;left:100%;transform:translateY(-50%)}.wallets-tooltip__content--top{flex-direction:column-reverse;top:-100%}.wallets-tooltip__content--bottom{flex-direction:column;bottom:-100%}.wallets-tooltip__content--left{flex-direction:row-reverse;top:50%;transform:translate(-100%, -50%)}.wallets-tooltip__arrow{background:#d6dadb;background:var(--system-light-5-active-background, #d6dadb)}.wallets-tooltip__arrow--right{width:.4rem;height:.8rem;-webkit-clip-path:polygon(0 50%, 100% 100%, 100% 0);clip-path:polygon(0 50%, 100% 100%, 100% 0)}.wallets-tooltip__arrow--top{width:.8rem;height:.4rem;-webkit-clip-path:polygon(0 0, 50% 100%, 100% 0);clip-path:polygon(0 0, 50% 100%, 100% 0)}.wallets-tooltip__arrow--bottom{width:.8rem;height:.4rem;-webkit-clip-path:polygon(0% 100%, 50% 0%, 100% 100%);clip-path:polygon(0% 100%, 50% 0%, 100% 100%)}.wallets-tooltip__arrow--left{width:.4rem;height:.8rem;-webkit-clip-path:polygon(100% 50%, 0 0, 0 100%);clip-path:polygon(100% 50%, 0 0, 0 100%)}.wallets-tooltip__message{max-height:3.4rem;padding:.8rem;border-radius:4px;font-size:1.2rem;background:#d6dadb;background:var(--system-light-5-active-background, #d6dadb)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Tooltip.scss\"],\"names\":[],\"mappings\":\"AA0pBA,iBACI,sBAAA,CAAA,iBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,iBAAA,CAEA,0BACI,YAAA,CACA,kBAAA,CACA,iBAAA,CAEA,iCACI,OAAA,CACA,SAAA,CACA,0BAAA,CAGJ,+BACI,6BAAA,CACA,SAAA,CAGJ,kCACI,qBAAA,CACA,YAAA,CAGJ,gCACI,0BAAA,CACA,OAAA,CACA,gCAAA,CAIR,wBACI,kBAAA,CAAA,2DAAA,CAEA,+BACI,WAAA,CACA,YAAA,CACA,mDAAA,CAAA,2CAAA,CAGJ,6BACI,WAAA,CACA,YAAA,CACA,gDAAA,CAAA,wCAAA,CAGJ,gCACI,WAAA,CACA,YAAA,CACA,qDAAA,CAAA,6CAAA,CAGJ,8BACI,WAAA,CACA,YAAA,CACA,gDAAA,CAAA,wCAAA,CAIR,0BACI,iBAAA,CACA,aAAA,CACA,iBAAA,CACA,gBAAA,CAEA,kBAAA,CAAA,2DAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-tooltip {\\n    width: fit-content;\\n    height: fit-content;\\n    position: relative;\\n\\n    &__content {\\n        display: flex;\\n        align-items: center;\\n        position: absolute;\\n\\n        &--right {\\n            top: 50%;\\n            left: 100%;\\n            transform: translateY(-50%);\\n        }\\n\\n        &--top {\\n            flex-direction: column-reverse;\\n            top: -100%;\\n        }\\n\\n        &--bottom {\\n            flex-direction: column;\\n            bottom: -100%;\\n        }\\n\\n        &--left {\\n            flex-direction: row-reverse;\\n            top: 50%;\\n            transform: translate(-100%, -50%);\\n        }\\n    }\\n\\n    &__arrow {\\n        background: var(--system-light-5-active-background, #d6dadb);\\n\\n        &--right {\\n            width: 0.4rem;\\n            height: 0.8rem;\\n            clip-path: polygon(0 50%, 100% 100%, 100% 0);\\n        }\\n\\n        &--top {\\n            width: 0.8rem;\\n            height: 0.4rem;\\n            clip-path: polygon(0 0, 50% 100%, 100% 0);\\n        }\\n\\n        &--bottom {\\n            width: 0.8rem;\\n            height: 0.4rem;\\n            clip-path: polygon(0% 100%, 50% 0%, 100% 100%);\\n        }\\n\\n        &--left {\\n            width: 0.4rem;\\n            height: 0.8rem;\\n            clip-path: polygon(100% 50%, 0 0, 0 100%);\\n        }\\n    }\\n\\n    &__message {\\n        max-height: 3.4rem;\\n        padding: 0.8rem;\\n        border-radius: 4px;\\n        font-size: 1.2rem;\\n\\n        background: var(--system-light-5-active-background, #d6dadb);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-alert-message{display:flex;flex-direction:row;-moz-column-gap:.8rem;column-gap:.8rem;justify-content:flex-start}@media(max-width: 767px){.wallets-alert-message{margin:0}}.wallets-alert-message__icon-container{position:relative}.wallets-alert-message__icon-container__line{border:1px solid #d6dadb;border:1px solid var(--light-5-active-background, #d6dadb);position:absolute;height:100%;top:50%;left:50%;transform:translate(-50%, -50%)}.wallets-alert-message__icon-container__icon{display:flex;position:relative;margin-top:.8rem}.wallets-alert-message__message-container,.wallets-alert-message__button-container{display:flex;align-items:center}.wallets-alert-message__message-container{padding:.6rem 0}.wallets-alert-message__button-container{margin-left:auto}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletAlertMessage.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,YAAA,CACA,kBAAA,CACA,qBAAA,CAAA,gBAAA,CACA,0BAAA,CArBA,yBAiBJ,uBAOQ,QAAA,CAAA,CAGJ,uCACI,iBAAA,CAEA,6CACI,wBAAA,CAAA,0DAAA,CACA,iBAAA,CACA,WAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CAGJ,6CACI,YAAA,CACA,iBAAA,CACA,gBAAA,CAIR,mFAEI,YAAA,CACA,kBAAA,CAGJ,0CACI,eAAA,CAGJ,yCACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-alert-message {\\n    display: flex;\\n    flex-direction: row;\\n    column-gap: 0.8rem;\\n    justify-content: flex-start;\\n\\n    @include mobile {\\n        margin: 0;\\n    }\\n\\n    &__icon-container {\\n        position: relative;\\n\\n        &__line {\\n            border: 1px solid var(--light-5-active-background, #d6dadb);\\n            position: absolute;\\n            height: 100%;\\n            top: 50%;\\n            left: 50%;\\n            transform: translate(-50%, -50%);\\n        }\\n\\n        &__icon {\\n            display: flex;\\n            position: relative;\\n            margin-top: 0.8rem;\\n        }\\n    }\\n\\n    &__message-container,\\n    &__button-container {\\n        display: flex;\\n        align-items: center;\\n    }\\n\\n    &__message-container {\\n        padding: 0.6rem 0;\\n    }\\n\\n    &__button-container {\\n        margin-left: auto;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-button{display:inline-flex;justify-content:center;align-items:center;gap:.8rem;cursor:pointer}.wallets-button:disabled{opacity:.32;cursor:not-allowed}.wallets-button__size--sm{padding:.3rem .8rem;height:auto}.wallets-button__size--md{padding:.6rem 1.6rem;height:3.2rem}.wallets-button__size--lg{padding:1rem 1.6rem;height:4rem}.wallets-button__color--primary{background-color:#ff444f}.wallets-button__color--primary:hover{background-color:#eb3e48}.wallets-button__color--primary-light{background-color:rgba(255,68,79,.1607843137)}.wallets-button__color--primary-light:hover{background-color:rgba(255,68,79,.2392156863)}.wallets-button__color--white{background-color:#fff}.wallets-button__color--white:hover{background-color:#d6dadb}.wallets-button__color--black{background-color:#0e0e0e}.wallets-button__color--black:hover{background-color:#323738}.wallets-button__variant--contained{border:none}.wallets-button__variant--outlined{border:1px solid #999;border:1px solid var(--system-light-3-less-prominent-text, #999);background:none}.wallets-button__variant--outlined:hover{background:rgba(0,0,0,.0784313725)}.wallets-button__variant--ghost{background:none;border:none}.wallets-button__variant--ghost:hover{background:rgba(255,68,79,.0784313725)}.wallets-button__rounded--sm{border-radius:.4rem}.wallets-button__rounded--md{border-radius:6.4rem}.wallets-button__rounded--lg{border-radius:100%}.wallets-button__full-width{width:100%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletButton.scss\"],\"names\":[],\"mappings\":\"AA6rBA,gBACI,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,cAAA,CAEA,yBACI,WAAA,CACA,kBAAA,CAIA,0BACI,mBAAA,CACA,WAAA,CAFJ,0BACI,oBAAA,CACA,aAAA,CAFJ,0BACI,mBAAA,CACA,WAAA,CAKJ,gCACI,wBAAA,CACA,sCACI,wBAAA,CAHR,sCACI,4CAAA,CACA,4CACI,4CAAA,CAHR,8BACI,qBAAA,CACA,oCACI,wBAAA,CAHR,8BACI,wBAAA,CACA,oCACI,wBAAA,CAMR,oCACI,WAAA,CAEJ,mCACI,qBAAA,CAAA,gEAAA,CACA,eAAA,CACA,yCACI,kCAAA,CAGR,gCACI,eAAA,CACA,WAAA,CACA,sCACI,sCAAA,CAMR,6BACI,mBAAA,CAEJ,6BACI,oBAAA,CAEJ,6BACI,kBAAA,CAIR,4BACI,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n$color-map: (\\n    'primary': (\\n        backgroundcolor: #ff444f,\\n        hover: #eb3e48,\\n    ),\\n    'primary-light': (\\n        backgroundcolor: #ff444f29,\\n        hover: #ff444f3d,\\n        color: #ff444f,\\n    ),\\n    'white': (\\n        backgroundcolor: #fff,\\n        hover: #d6dadb,\\n    ),\\n    'black': (\\n        backgroundcolor: #0e0e0e,\\n        hover: #323738,\\n    ),\\n);\\n\\n$size-map: (\\n    'sm': (\\n        height: auto,\\n        padding: 0.3rem 0.8rem,\\n    ),\\n    'md': (\\n        height: 3.2rem,\\n        padding: 0.6rem 1.6rem,\\n    ),\\n    'lg': (\\n        height: 4rem,\\n        padding: 1rem 1.6rem,\\n    ),\\n);\\n\\n.wallets-button {\\n    display: inline-flex;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 0.8rem;\\n    cursor: pointer;\\n\\n    &:disabled {\\n        opacity: 0.32;\\n        cursor: not-allowed;\\n    }\\n\\n    @each $size, $values in $size-map {\\n        &__size--#{$size} {\\n            padding: map-get($values, padding);\\n            height: map-get($values, height);\\n        }\\n    }\\n\\n    @each $color, $values in $color-map {\\n        &__color--#{$color} {\\n            background-color: map-get($values, backgroundcolor);\\n            &:hover {\\n                background-color: map-get($values, hover);\\n            }\\n        }\\n    }\\n\\n    &__variant {\\n        &--contained {\\n            border: none;\\n        }\\n        &--outlined {\\n            border: 1px solid var(--system-light-3-less-prominent-text, #999);\\n            background: none;\\n            &:hover {\\n                background: #00000014;\\n            }\\n        }\\n        &--ghost {\\n            background: none;\\n            border: none;\\n            &:hover {\\n                background: #ff444f14;\\n            }\\n        }\\n    }\\n\\n    &__rounded {\\n        &--sm {\\n            border-radius: 0.4rem;\\n        }\\n        &--md {\\n            border-radius: 6.4rem;\\n        }\\n        &--lg {\\n            border-radius: 100%;\\n        }\\n    }\\n\\n    &__full-width {\\n        width: 100%;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-button-group{display:grid;width:100%;grid-gap:1.2rem;gap:1.2rem;grid-auto-columns:minmax(0, 1fr);grid-auto-flow:column}.wallets-button-group--flex{grid-auto-columns:auto}.wallets-button-group--vertical{flex-direction:column}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletButtonGroup.scss\"],\"names\":[],\"mappings\":\"AA0pBA,sBACI,YAAA,CACA,UAAA,CACA,eAAA,CAAA,UAAA,CACA,gCAAA,CACA,qBAAA,CAEA,4BACI,sBAAA,CAGJ,gCACI,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-button-group {\\n    display: grid;\\n    width: 100%;\\n    gap: 1.2rem;\\n    grid-auto-columns: minmax(0, 1fr);\\n    grid-auto-flow: column;\\n\\n    &--flex {\\n        grid-auto-columns: auto;\\n    }\\n\\n    &--vertical {\\n        flex-direction: column;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-clipboard{all:unset;border-radius:0rem .4rem .4rem 0rem;border-left:none;display:flex;align-items:center;justify-content:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletClipboard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mBACI,SAAA,CACA,mCAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-clipboard {\\n    all: unset;\\n    border-radius: 0rem 0.4rem 0.4rem 0rem;\\n    border-left: none;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dropdown{min-width:12rem;max-width:28rem;position:relative}.wallets-dropdown__button{all:unset;margin:auto;transform:rotate(0);transform-origin:50% 45%;transition:transform .2s cubic-bezier(0.25, 0.1, 0.25, 1)}.wallets-dropdown__button--active{transform:rotate(180deg)}.wallets-dropdown__content{height:4rem;width:100%;border-radius:.4rem;padding:1rem 1.6rem;border:.1rem solid #d6dadb;border:.1rem solid var(--system-light-5-active-background, #d6dadb);background:#fff;background:var(--system-light-8-primary-background, #fff);display:flex;gap:.8rem;align-items:center}.wallets-dropdown__content[\\\\:has\\\\(.wallets-dropdown__field\\\\:focus\\\\)]{border:.1rem solid #85acb0;border:.1rem solid var(--brand-blue, #85acb0)}.wallets-dropdown__content[\\\\:has\\\\(.wallets-dropdown__field\\\\:focus\\\\)]{border:.1rem solid #85acb0;border:.1rem solid var(--brand-blue, #85acb0)}.wallets-dropdown__content:has(.wallets-dropdown__field:focus){border:.1rem solid #85acb0;border:.1rem solid var(--brand-blue, #85acb0)}.wallets-dropdown__field{font-family:inherit;outline:0;font-size:1.4rem;color:#333;color:var(--system-light-2-general-text, #333);transition:border-color .2s}.wallets-dropdown__field::-moz-placeholder{color:rgba(0,0,0,0)}.wallets-dropdown__field::placeholder{color:rgba(0,0,0,0)}.wallets-dropdown__field:-moz-placeholder-shown~.wallets-dropdown__label{font-size:1.4rem;cursor:text;top:30%;padding:0}.wallets-dropdown__field:placeholder-shown~.wallets-dropdown__label{font-size:1.4rem;cursor:text;top:30%;padding:0}.wallets-dropdown__field:-moz-placeholder-shown~.wallets-dropdown__label--with-icon{left:4.4rem}.wallets-dropdown__field:placeholder-shown~.wallets-dropdown__label--with-icon{left:4.4rem}.wallets-dropdown label,.wallets-dropdown__field:focus~.wallets-dropdown__label{position:absolute;top:-10%;display:block;transition:.2s;font-size:1rem;color:#999;color:var(--system-light-3-less-prominent-text, #999);background:#fff;background:var(--system-light-8-primary-background, #fff);padding-left:.4rem;padding-right:.4rem;left:1.6rem}.wallets-dropdown__field:focus~.wallets-dropdown__label{color:#85acb0;color:var(--brand-blue, #85acb0)}.wallets-dropdown__items{position:absolute;top:100%;width:100%;display:flex;flex-direction:column;align-items:flex-start;z-index:2;margin-top:.4rem;border-radius:.4rem;background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0 3.2rem 6.4rem 0 rgba(14,14,14,.14);overflow-y:auto}.wallets-dropdown__items>:first-child{border-radius:.4rem .4rem 0 0}.wallets-dropdown__items>:last-child{border-radius:0 0 .4rem .4rem}.wallets-dropdown__items--sm{max-height:22rem}.wallets-dropdown__items--md{max-height:42rem}.wallets-dropdown__items--lg{max-height:66rem}.wallets-dropdown__icon{width:1.6rem;height:1.6rem;margin-left:.4rem}.wallets-dropdown__item{padding:10px 16px;width:100%;z-index:2}.wallets-dropdown__item:hover:not(.wallets-dropdown__item--active){cursor:pointer;background:#e6e9e9;background:var(--system-light-6-hover-background, #e6e9e9)}.wallets-dropdown__item--active{background:#d6dadb;background:var(--system-light-5-active-background, #d6dadb)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletDropdown.scss\"],\"names\":[],\"mappings\":\"AA0pBA,kBACI,eAAA,CACA,eAAA,CACA,iBAAA,CAEA,0BACI,SAAA,CACA,WAAA,CACA,mBAAA,CACA,wBAAA,CACA,yDAAA,CAEA,kCACI,wBAAA,CAIR,2BACI,WAAA,CACA,UAAA,CACA,mBAAA,CACA,mBAAA,CACA,0BAAA,CAAA,mEAAA,CACA,eAAA,CAAA,yDAAA,CACA,YAAA,CACA,SAAA,CACA,kBAAA,CAGJ,qEACI,0BAAA,CAAA,6CAAA,CADJ,qEACI,0BAAA,CAAA,6CAAA,CADJ,+DACI,0BAAA,CAAA,6CAAA,CAGJ,yBACI,mBAAA,CACA,SAAA,CACA,gBAAA,CACA,UAAA,CAAA,8CAAA,CACA,2BAAA,CAGJ,2CACI,mBAAA,CADJ,sCACI,mBAAA,CAGJ,yEACI,gBAAA,CACA,WAAA,CACA,OAAA,CACA,SAAA,CAJJ,oEACI,gBAAA,CACA,WAAA,CACA,OAAA,CACA,SAAA,CAGJ,oFACI,WAAA,CADJ,+EACI,WAAA,CAGJ,gFAEI,iBAAA,CACA,QAAA,CACA,aAAA,CACA,cAAA,CACA,cAAA,CACA,UAAA,CAAA,qDAAA,CACA,eAAA,CAAA,yDAAA,CACA,kBAAA,CAAA,mBAAA,CACA,WAAA,CAGJ,wDACI,aAAA,CAAA,gCAAA,CAGJ,yBACI,iBAAA,CACA,QAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CACA,gBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,+CAAA,CACA,eAAA,CAEA,sCACI,6BAAA,CAGJ,qCACI,6BAAA,CAGJ,6BACI,gBAAA,CAGJ,6BACI,gBAAA,CAGJ,6BACI,gBAAA,CAIR,wBACI,YAAA,CACA,aAAA,CACA,iBAAA,CAGJ,wBACI,iBAAA,CACA,UAAA,CACA,SAAA,CAEA,mEACI,cAAA,CACA,kBAAA,CAAA,0DAAA,CAGJ,gCACI,kBAAA,CAAA,2DAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dropdown {\\n    min-width: 12rem;\\n    max-width: 28rem;\\n    position: relative;\\n\\n    &__button {\\n        all: unset;\\n        margin: auto;\\n        transform: rotate(0);\\n        transform-origin: 50% 45%;\\n        transition: transform 0.2s cubic-bezier(0.25, 0.1, 0.25, 1);\\n\\n        &--active {\\n            transform: rotate(180deg);\\n        }\\n    }\\n\\n    &__content {\\n        height: 4rem;\\n        width: 100%;\\n        border-radius: 0.4rem;\\n        padding: 1rem 1.6rem;\\n        border: 0.1rem solid var(--system-light-5-active-background, #d6dadb);\\n        background: var(--system-light-8-primary-background, #fff);\\n        display: flex;\\n        gap: 0.8rem;\\n        align-items: center;\\n    }\\n\\n    &__content:has(&__field:focus) {\\n        border: 0.1rem solid var(--brand-blue, #85acb0);\\n    }\\n\\n    &__field {\\n        font-family: inherit;\\n        outline: 0;\\n        font-size: 1.4rem;\\n        color: var(--system-light-2-general-text, #333);\\n        transition: border-color 0.2s;\\n    }\\n\\n    &__field::placeholder {\\n        color: transparent;\\n    }\\n\\n    &__field:placeholder-shown ~ &__label {\\n        font-size: 1.4rem;\\n        cursor: text;\\n        top: 30%;\\n        padding: 0;\\n    }\\n\\n    &__field:placeholder-shown ~ &__label--with-icon {\\n        left: 4.4rem;\\n    }\\n\\n    label,\\n    &__field:focus ~ &__label {\\n        position: absolute;\\n        top: -10%;\\n        display: block;\\n        transition: 0.2s;\\n        font-size: 1rem;\\n        color: var(--system-light-3-less-prominent-text, #999);\\n        background: var(--system-light-8-primary-background, #fff);\\n        padding-inline: 0.4rem;\\n        left: 1.6rem;\\n    }\\n\\n    &__field:focus ~ &__label {\\n        color: var(--brand-blue, #85acb0);\\n    }\\n\\n    &__items {\\n        position: absolute;\\n        top: 100%;\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        z-index: 2;\\n        margin-top: 0.4rem;\\n        border-radius: 0.4rem;\\n        background: var(--system-light-8-primary-background, #fff);\\n        box-shadow: 0 3.2rem 6.4rem 0 rgba(14, 14, 14, 0.14);\\n        overflow-y: auto;\\n\\n        & > :first-child {\\n            border-radius: 0.4rem 0.4rem 0 0;\\n        }\\n\\n        & > :last-child {\\n            border-radius: 0 0 0.4rem 0.4rem;\\n        }\\n\\n        &--sm {\\n            max-height: 22rem;\\n        }\\n\\n        &--md {\\n            max-height: 42rem;\\n        }\\n\\n        &--lg {\\n            max-height: 66rem;\\n        }\\n    }\\n\\n    &__icon {\\n        width: 1.6rem;\\n        height: 1.6rem;\\n        margin-left: 0.4rem;\\n    }\\n\\n    &__item {\\n        padding: 10px 16px;\\n        width: 100%;\\n        z-index: 2;\\n\\n        &:hover:not(&--active) {\\n            cursor: pointer;\\n            background: var(--system-light-6-hover-background, #e6e9e9);\\n        }\\n\\n        &--active {\\n            background: var(--system-light-5-active-background, #d6dadb);\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-text__color--general{color:#333}.wallets-text__color--primary{color:#999}.wallets-text__color--success{color:#4bb4b3}.wallets-text__color--warning{color:#ffad3a}.wallets-text__color--error{color:#ec3f3f}.wallets-text__color--white{color:#fff}.wallets-text__color--black{color:#000}.wallets-text__color--less-prominent{color:#999}.wallets-text__color--red{color:#ff444f}.wallets-text__color--blue{color:#377cfc}.wallets-text__color--system-dark-2-general-text{color:#c2c2c2}@media(min-width: 1024px){.wallets-text__size--2xs{font-size:1rem;line-height:1.4rem}}@media(min-width: 1024px){.wallets-text__size--xs{font-size:1.2rem;line-height:1.8rem}}@media(min-width: 1024px){.wallets-text__size--sm{font-size:1.4rem;line-height:2rem}}@media(min-width: 1024px){.wallets-text__size--md{font-size:1.6rem;line-height:2.4rem}}@media(min-width: 1024px){.wallets-text__size--lg{font-size:2rem;line-height:3rem}}@media(min-width: 1024px){.wallets-text__size--xl{font-size:2.4rem;line-height:3.4rem}}@media(min-width: 1024px){.wallets-text__size--2xl{font-size:3.2rem;line-height:4rem}}@media(min-width: 1024px){.wallets-text__size--3xl{font-size:4.8rem;line-height:6rem}}@media(min-width: 1024px){.wallets-text__size--4xl{font-size:6.4rem;line-height:8rem}}@media(min-width: 1024px){.wallets-text__size--5xl{font-size:8rem;line-height:10rem}}@media(max-width: 767px){.wallets-text__size--2xs{font-size:.8rem;line-height:1.2rem}}@media(max-width: 767px){.wallets-text__size--xs{font-size:1rem;line-height:1.4rem}}@media(max-width: 767px){.wallets-text__size--sm{font-size:1.2rem;line-height:1.8rem}}@media(max-width: 767px){.wallets-text__size--md{font-size:1.4rem;line-height:2rem}}@media(max-width: 767px){.wallets-text__size--lg{font-size:1.6rem;line-height:2.4rem}}@media(max-width: 767px){.wallets-text__size--xl{font-size:1.8rem;line-height:2.6rem}}@media(max-width: 767px){.wallets-text__size--2xl{font-size:2.4rem;line-height:3rem}}@media(max-width: 767px){.wallets-text__size--3xl{font-size:2.8rem;line-height:3.4rem}}@media(max-width: 767px){.wallets-text__size--4xl{font-size:3.2rem;line-height:4rem}}@media(max-width: 767px){.wallets-text__size--5xl{font-size:4rem;line-height:5rem}}.wallets-text__line-height--3xs{line-height:1.2rem}.wallets-text__line-height--2xs{line-height:1.4rem}.wallets-text__line-height--xs{line-height:1.6rem}.wallets-text__line-height--sm{line-height:1.8rem}.wallets-text__line-height--md{line-height:2rem}.wallets-text__line-height--lg{line-height:2.2rem}.wallets-text__line-height--xl{line-height:2.4rem}.wallets-text__line-height--2xl{line-height:2.6rem}.wallets-text__line-height--3xl{line-height:2.8rem}.wallets-text__line-height--4xl{line-height:3rem}.wallets-text__line-height--5xl{line-height:3.2rem}.wallets-text__line-height--6xl{line-height:3.4rem}.wallets-text__line-height--7xl{line-height:3.6rem}.wallets-text__weight--light{font-weight:300}.wallets-text__weight--normal{font-weight:400}.wallets-text__weight--bold{font-weight:700}.wallets-text__align--left{text-align:left}.wallets-text__align--center{text-align:center}.wallets-text__align--right{text-align:right}.wallets-text__font-style--italic{font-style:italic}.wallets-text__font-style--normal{font-style:normal}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletText.scss\"],\"names\":[],\"mappings\":\"AAiyBQ,8BACI,UAxIA,CAuIJ,8BACI,UAxIA,CAuIJ,8BACI,aAxIA,CAuIJ,8BACI,aAxIA,CAuIJ,4BACI,aAxIA,CAuIJ,4BACI,UAxIA,CAuIJ,4BACI,UAxIA,CAuIJ,qCACI,UAxIA,CAuIJ,0BACI,aAxIA,CAuIJ,2BACI,aAxIA,CAuIJ,iDACI,aAxIA,CALR,0BAkJI,yBAEQ,cAAA,CACA,kBAAA,CAAA,CArJZ,0BAkJI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CArJZ,0BAkJI,wBAEQ,gBAAA,CACA,gBAAA,CAAA,CArJZ,0BAkJI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CArJZ,0BAkJI,wBAEQ,cAAA,CACA,gBAAA,CAAA,CArJZ,0BAkJI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CArJZ,0BAkJI,yBAEQ,gBAAA,CACA,gBAAA,CAAA,CArJZ,0BAkJI,yBAEQ,gBAAA,CACA,gBAAA,CAAA,CArJZ,0BAkJI,yBAEQ,gBAAA,CACA,gBAAA,CAAA,CArJZ,0BAkJI,yBAEQ,cAAA,CACA,iBAAA,CAAA,CAjKZ,yBAuKI,yBAEQ,eAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,wBAEQ,cAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,wBAEQ,gBAAA,CACA,gBAAA,CAAA,CA1KZ,yBAuKI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,wBAEQ,gBAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,yBAEQ,gBAAA,CACA,gBAAA,CAAA,CA1KZ,yBAuKI,yBAEQ,gBAAA,CACA,kBAAA,CAAA,CA1KZ,yBAuKI,yBAEQ,gBAAA,CACA,gBAAA,CAAA,CA1KZ,yBAuKI,yBAEQ,cAAA,CACA,gBAAA,CAAA,CAMR,gCACI,kBA5DM,CA2DV,gCACI,kBA5DM,CA2DV,+BACI,kBA5DM,CA2DV,+BACI,kBA5DM,CA2DV,+BACI,gBA5DM,CA2DV,+BACI,kBA5DM,CA2DV,+BACI,kBA5DM,CA2DV,gCACI,kBA5DM,CA2DV,gCACI,kBA5DM,CA2DV,gCACI,gBA5DM,CA2DV,gCACI,kBA5DM,CA2DV,gCACI,kBA5DM,CA2DV,gCACI,kBA5DM,CAiEV,6BACI,eAlDM,CAiDV,8BACI,eAlDM,CAiDV,4BACI,eAlDM,CAuDV,2BACI,eAlDK,CAiDT,6BACI,iBAlDK,CAiDT,4BACI,gBAlDK,CAuDT,kCACI,iBAlDK,CAiDT,kCACI,iBAlDK\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n$color-map: (\\n    general: #333333,\\n    primary: #999999,\\n    success: #4bb4b3,\\n    warning: #ffad3a,\\n    error: #ec3f3f,\\n    white: #ffffff,\\n    black: #000000,\\n    less-prominent: #999999,\\n    red: #ff444f,\\n    blue: #377cfc,\\n    system-dark-2-general-text: #c2c2c2,\\n);\\n\\n$desktop-font-size-map: (\\n    '2xs': (\\n        size: 1rem,\\n        line_height: 1.4rem,\\n    ),\\n    'xs': (\\n        size: 1.2rem,\\n        line_height: 1.8rem,\\n    ),\\n    'sm': (\\n        size: 1.4rem,\\n        line_height: 2rem,\\n    ),\\n    'md': (\\n        size: 1.6rem,\\n        line_height: 2.4rem,\\n    ),\\n    'lg': (\\n        size: 2rem,\\n        line_height: 3rem,\\n    ),\\n    'xl': (\\n        size: 2.4rem,\\n        line_height: 3.4rem,\\n    ),\\n    '2xl': (\\n        size: 3.2rem,\\n        line_height: 4rem,\\n    ),\\n    '3xl': (\\n        size: 4.8rem,\\n        line_height: 6rem,\\n    ),\\n    '4xl': (\\n        size: 6.4rem,\\n        line_height: 8rem,\\n    ),\\n    '5xl': (\\n        size: 8rem,\\n        line_height: 10rem,\\n    ),\\n);\\n\\n$mobile-font-size-map: (\\n    '2xs': (\\n        size: 0.8rem,\\n        line_height: 1.2rem,\\n    ),\\n    'xs': (\\n        size: 1rem,\\n        line_height: 1.4rem,\\n    ),\\n    'sm': (\\n        size: 1.2rem,\\n        line_height: 1.8rem,\\n    ),\\n    'md': (\\n        size: 1.4rem,\\n        line_height: 2rem,\\n    ),\\n    'lg': (\\n        size: 1.6rem,\\n        line_height: 2.4rem,\\n    ),\\n    'xl': (\\n        size: 1.8rem,\\n        line_height: 2.6rem,\\n    ),\\n    '2xl': (\\n        size: 2.4rem,\\n        line_height: 3rem,\\n    ),\\n    '3xl': (\\n        size: 2.8rem,\\n        line_height: 3.4rem,\\n    ),\\n    '4xl': (\\n        size: 3.2rem,\\n        line_height: 4rem,\\n    ),\\n    '5xl': (\\n        size: 4rem,\\n        line_height: 5rem,\\n    ),\\n);\\n\\n$line-height-map: (\\n    '3xs': 1.2rem,\\n    '2xs': 1.4rem,\\n    'xs': 1.6rem,\\n    'sm': 1.8rem,\\n    'md': 2rem,\\n    'lg': 2.2rem,\\n    'xl': 2.4rem,\\n    '2xl': 2.6rem,\\n    '3xl': 2.8rem,\\n    '4xl': 3rem,\\n    '5xl': 3.2rem,\\n    '6xl': 3.4rem,\\n    '7xl': 3.6rem,\\n);\\n\\n$font-weight-map: (\\n    light: 300,\\n    normal: 400,\\n    bold: 700,\\n);\\n\\n$font-align-map: (\\n    left: left,\\n    center: center,\\n    right: right,\\n);\\n\\n$font-style-map: (\\n    italic: italic,\\n    normal: normal,\\n);\\n\\n.wallets-text {\\n    @each $color, $value in $color-map {\\n        &__color--#{$color} {\\n            color: $value;\\n        }\\n    }\\n\\n    @each $size, $values in $desktop-font-size-map {\\n        &__size--#{$size} {\\n            @include desktop {\\n                font-size: map-get($values, size);\\n                line-height: map-get($values, line_height);\\n            }\\n        }\\n    }\\n\\n    @each $size, $values in $mobile-font-size-map {\\n        &__size--#{$size} {\\n            @include mobile {\\n                font-size: map-get($values, size);\\n                line-height: map-get($values, line_height);\\n            }\\n        }\\n    }\\n\\n    @each $lineHeight, $value in $line-height-map {\\n        &__line-height--#{$lineHeight} {\\n            line-height: $value;\\n        }\\n    }\\n\\n    @each $weight, $value in $font-weight-map {\\n        &__weight--#{$weight} {\\n            font-weight: $value;\\n        }\\n    }\\n\\n    @each $align, $value in $font-align-map {\\n        &__align--#{$align} {\\n            text-align: $value;\\n        }\\n    }\\n\\n    @each $fontStyle, $value in $font-style-map {\\n        &__font-style--#{$fontStyle} {\\n            font-style: $value;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-textfield{min-width:12rem;max-width:28rem;position:relative}.wallets-textfield__content{height:4rem;width:100%;border-radius:.4rem;padding:1rem 1.6rem;border:1px solid #d6dadb;border:1px solid var(--system-light-5-active-background, #d6dadb);background:#fff;background:var(--system-light-8-primary-background, #fff);display:inline-flex;gap:1.6rem;align-items:center;transition:border-color .2s}.wallets-textfield__content:hover{border-color:#999;border-color:var(--system-light-3-less-prominent-text, #999)}.wallets-textfield__content[\\\\:has\\\\(.wallets-textfield__field\\\\:focus\\\\)]{border:1px solid #85acb0;border:1px solid var(--brand-blue, #85acb0)}.wallets-textfield__content[\\\\:has\\\\(.wallets-textfield__field\\\\:focus\\\\)]{border:1px solid #85acb0;border:1px solid var(--brand-blue, #85acb0)}.wallets-textfield__content:has(.wallets-textfield__field:focus){border:1px solid #85acb0;border:1px solid var(--brand-blue, #85acb0)}.wallets-textfield__field{font-family:inherit;outline:0;font-size:1.4rem;color:#333;color:var(--system-light-2-general-text, #333);transition:border-color .2s;flex:1}.wallets-textfield__field::-moz-placeholder{color:rgba(0,0,0,0)}.wallets-textfield__field::placeholder{color:rgba(0,0,0,0)}.wallets-textfield__field:-moz-placeholder-shown~.wallets-textfield__label{font-size:1.4rem;cursor:text;top:20%;padding:0}.wallets-textfield__field:placeholder-shown~.wallets-textfield__label{font-size:1.4rem;cursor:text;top:20%;padding:0}.wallets-textfield__field:-moz-placeholder-shown~.wallets-textfield__label--with-icon{left:4.4rem}.wallets-textfield__field:placeholder-shown~.wallets-textfield__label--with-icon{left:4.4rem}.wallets-textfield label,.wallets-textfield__field:focus~.wallets-textfield__label{position:absolute;top:-10%;display:block;transition:.2s;font-size:1rem;color:#999;color:var(--system-light-3-less-prominent-text, #999);background:#fff;background:var(--system-light-8-primary-background, #fff);padding-left:.4rem;padding-right:.4rem;left:1.6rem;-webkit-user-select:none;-moz-user-select:none;user-select:none}.wallets-textfield__field:focus~.wallets-textfield__label{color:#85acb0;color:var(--brand-blue, #85acb0)}.wallets-textfield__icon{margin:auto;width:1.6rem;height:1.6rem}.wallets-textfield__message-container{height:2rem;padding:.2rem 0rem 0rem 1.6rem;width:100%}.wallets-textfield__message-container--maxchar{float:right}.wallets-textfield__message-container--msg{float:left}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletTextField.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mBACI,eAAA,CACA,eAAA,CACA,iBAAA,CAEA,4BACI,WAAA,CACA,UAAA,CACA,mBAAA,CACA,mBAAA,CACA,wBAAA,CAAA,iEAAA,CACA,eAAA,CAAA,yDAAA,CACA,mBAAA,CACA,UAAA,CACA,kBAAA,CACA,2BAAA,CAEA,kCACI,iBAAA,CAAA,4DAAA,CAIR,uEACI,wBAAA,CAAA,2CAAA,CADJ,uEACI,wBAAA,CAAA,2CAAA,CADJ,iEACI,wBAAA,CAAA,2CAAA,CAGJ,0BACI,mBAAA,CACA,SAAA,CACA,gBAAA,CACA,UAAA,CAAA,8CAAA,CACA,2BAAA,CACA,MAAA,CAGJ,4CACI,mBAAA,CADJ,uCACI,mBAAA,CAGJ,2EACI,gBAAA,CACA,WAAA,CACA,OAAA,CACA,SAAA,CAJJ,sEACI,gBAAA,CACA,WAAA,CACA,OAAA,CACA,SAAA,CAGJ,sFACI,WAAA,CADJ,iFACI,WAAA,CAGJ,mFAEI,iBAAA,CACA,QAAA,CACA,aAAA,CACA,cAAA,CACA,cAAA,CACA,UAAA,CAAA,qDAAA,CACA,eAAA,CAAA,yDAAA,CACA,kBAAA,CAAA,mBAAA,CACA,WAAA,CACA,wBAAA,CAEA,qBAAA,CAAA,gBAAA,CAGJ,0DACI,aAAA,CAAA,gCAAA,CAGJ,yBACI,WAAA,CACA,YAAA,CACA,aAAA,CAGJ,sCACI,WAAA,CACA,8BAAA,CACA,UAAA,CAEA,+CACI,WAAA,CAGJ,2CACI,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-textfield {\\n    min-width: 12rem;\\n    max-width: 28rem;\\n    position: relative;\\n\\n    &__content {\\n        height: 4rem;\\n        width: 100%;\\n        border-radius: 0.4rem;\\n        padding: 1rem 1.6rem;\\n        border: 1px solid var(--system-light-5-active-background, #d6dadb);\\n        background: var(--system-light-8-primary-background, #fff);\\n        display: inline-flex;\\n        gap: 1.6rem;\\n        align-items: center;\\n        transition: border-color 0.2s;\\n\\n        &:hover {\\n            border-color: var(--system-light-3-less-prominent-text, #999);\\n        }\\n    }\\n\\n    &__content:has(&__field:focus) {\\n        border: 1px solid var(--brand-blue, #85acb0);\\n    }\\n\\n    &__field {\\n        font-family: inherit;\\n        outline: 0;\\n        font-size: 1.4rem;\\n        color: var(--system-light-2-general-text, #333);\\n        transition: border-color 0.2s;\\n        flex: 1;\\n    }\\n\\n    &__field::placeholder {\\n        color: transparent;\\n    }\\n\\n    &__field:placeholder-shown ~ &__label {\\n        font-size: 1.4rem;\\n        cursor: text;\\n        top: 20%;\\n        padding: 0;\\n    }\\n\\n    &__field:placeholder-shown ~ &__label--with-icon {\\n        left: 4.4rem;\\n    }\\n\\n    label,\\n    &__field:focus ~ &__label {\\n        position: absolute;\\n        top: -10%;\\n        display: block;\\n        transition: 0.2s;\\n        font-size: 1rem;\\n        color: var(--system-light-3-less-prominent-text, #999);\\n        background: var(--system-light-8-primary-background, #fff);\\n        padding-inline: 0.4rem;\\n        left: 1.6rem;\\n        -webkit-user-select: none;\\n        -ms-user-select: none;\\n        user-select: none;\\n    }\\n\\n    &__field:focus ~ &__label {\\n        color: var(--brand-blue, #85acb0);\\n    }\\n\\n    &__icon {\\n        margin: auto;\\n        width: 1.6rem;\\n        height: 1.6rem;\\n    }\\n\\n    &__message-container {\\n        height: 2rem;\\n        padding: 0.2rem 0rem 0rem 1.6rem;\\n        width: 100%;\\n\\n        &--maxchar {\\n            float: right;\\n        }\\n\\n        &--msg {\\n            float: left;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deriv-apps-section{display:flex;min-width:35.2rem;height:8.8rem;padding:0rem 1.6rem;align-items:center;gap:1.6rem;border-radius:.8rem;border:.1rem solid #f2f3f4;border:.1rem solid var(--system-light-7-secondary-background, #f2f3f4)}.wallets-deriv-apps-section__title-and-badge{display:flex;align-items:center;gap:.8rem}.wallets-deriv-apps-section__details{display:flex;flex-direction:column;align-items:flex-start;flex:1 0 0;-webkit-user-select:none;-moz-user-select:none;user-select:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DerivAppsSection.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BACI,YAAA,CACA,iBAAA,CACA,aAAA,CACA,mBAAA,CACA,kBAAA,CACA,UAAA,CAEA,mBAAA,CACA,0BAAA,CAAA,sEAAA,CAEA,6CACI,YAAA,CACA,kBAAA,CACA,SAAA,CAGJ,qCACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,UAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deriv-apps-section {\\n    display: flex;\\n    min-width: 35.2rem;\\n    height: 8.8rem;\\n    padding: 0rem 1.6rem;\\n    align-items: center;\\n    gap: 1.6rem;\\n\\n    border-radius: 0.8rem;\\n    border: 0.1rem solid var(--system-light-7-secondary-background, #f2f3f4);\\n\\n    &__title-and-badge {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &__details {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        flex: 1 0 0;\\n        user-select: none;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deriv-apps-success-footer{width:100%;display:flex;justify-content:center;gap:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DerivAppsSuccessFooter.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mCACI,UAAA,CACA,YAAA,CACA,sBAAA,CACA,QAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deriv-apps-success-footer {\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n    gap: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-desktop-wallets-list{max-width:123.2rem;height:-moz-max-content;height:max-content;display:flex;flex-direction:column;gap:2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DesktopWalletsList.scss\"],\"names\":[],\"mappings\":\"AA0pBA,8BACI,kBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-desktop-wallets-list {\\n    max-width: 123.2rem;\\n    height: max-content;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2.4rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-faded-animated-list__list-item-enter,.wallets-faded-animated-list__list-item-appear{opacity:0;grid-template-rows:0fr}.wallets-faded-animated-list__list-item-enter-active,.wallets-faded-animated-list__list-item-appear-active{opacity:1;grid-template-rows:1fr;transition:opacity 250ms ease-in,grid-template-rows 250ms ease-in-out}.wallets-faded-animated-list__list-item-exit{opacity:1;grid-template-rows:1fr}.wallets-faded-animated-list__list-item-exit-active{opacity:0;grid-template-rows:0fr;transition:opacity 250ms ease-in,grid-template-rows 250ms ease-in-out}.wallets-faded-animated-list__list-item--display-grid{display:grid}.wallets-faded-animated-list__list-item--display-grid>:first-child{overflow:hidden}\", \"\",{\"version\":3,\"sources\":[\"webpack://./FadedAnimatedList.scss\"],\"names\":[],\"mappings\":\"AA4pBQ,6FAEI,SAAA,CACA,sBAAA,CAGJ,2GAEI,SAAA,CACA,sBAAA,CACA,qEAAA,CAGJ,6CACI,SAAA,CACA,sBAAA,CAGJ,oDACI,SAAA,CACA,sBAAA,CACA,qEAAA,CAGJ,sDACI,YAAA,CAGJ,mEACI,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-faded-animated-list {\\n    &__list-item {\\n        &-enter,\\n        &-appear {\\n            opacity: 0;\\n            grid-template-rows: 0fr;\\n        }\\n\\n        &-enter-active,\\n        &-appear-active {\\n            opacity: 1;\\n            grid-template-rows: 1fr;\\n            transition: opacity 250ms ease-in, grid-template-rows 250ms ease-in-out;\\n        }\\n\\n        &-exit {\\n            opacity: 1;\\n            grid-template-rows: 1fr;\\n        }\\n\\n        &-exit-active {\\n            opacity: 0;\\n            grid-template-rows: 0fr;\\n            transition: opacity 250ms ease-in, grid-template-rows 250ms ease-in-out;\\n        }\\n\\n        &--display-grid {\\n            display: grid;\\n        }\\n\\n        &--display-grid > :first-child {\\n            overflow: hidden;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-loader{position:absolute;display:flex;width:7.2rem;height:3.2rem;transition:all .4s ease;flex-direction:row;justify-content:space-between;align-items:center;top:50%;left:50%;transform:translate(-50%, -50%)}.wallets-loader__element{display:block;width:.8rem;height:3.2rem;animation:loader 1.5s ease-in infinite both;border-radius:1rem}.wallets-loader__element:nth-child(1){animation-delay:calc(1*.1s)}.wallets-loader__element:nth-child(2){animation-delay:calc(2*.1s)}.wallets-loader__element:nth-child(3){animation-delay:calc(3*.1s)}.wallets-loader__element:nth-child(4){animation-delay:calc(4*.1s)}.wallets-loader__element:nth-child(5){animation-delay:calc(5*.1s)}@keyframes loader{0%{bottom:0;height:50%}12.5%{bottom:0;height:75%}25%{bottom:75%;height:100%}37.5%{bottom:0;height:75%}50%{bottom:0;height:50%}100%{bottom:0;height:50%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Loader.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gBACI,iBAAA,CACA,YAAA,CACA,YAAA,CACA,aAAA,CACA,uBAAA,CACA,kBAAA,CACA,6BAAA,CACA,kBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CAEA,yBAEI,aAAA,CACA,WAAA,CACA,aAAA,CACA,2CAJS,CAKT,kBAAA,CAGI,sCACI,2BAAA,CADJ,sCACI,2BAAA,CADJ,sCACI,2BAAA,CADJ,sCACI,2BAAA,CADJ,sCACI,2BAAA,CAIR,kBACI,GACI,QAAA,CACA,UAAA,CAGJ,MACI,QAAA,CACA,UAAA,CAGJ,IACI,UAAA,CACA,WAAA,CAGJ,MACI,QAAA,CACA,UAAA,CAGJ,IACI,QAAA,CACA,UAAA,CAGJ,KACI,QAAA,CACA,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-loader {\\n    position: absolute;\\n    display: flex;\\n    width: 7.2rem;\\n    height: 3.2rem;\\n    transition: all 0.4s ease;\\n    flex-direction: row;\\n    justify-content: space-between;\\n    align-items: center;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n\\n    &__element {\\n        $loader: loader 1.5s ease-in infinite both;\\n        display: block;\\n        width: 0.8rem;\\n        height: 3.2rem;\\n        animation: $loader;\\n        border-radius: 1rem;\\n\\n        @for $i from 1 through 5 {\\n            &:nth-child(#{$i}) {\\n                animation-delay: calc(#{$i} * 0.1s);\\n            }\\n        }\\n\\n        @keyframes loader {\\n            0% {\\n                bottom: 0;\\n                height: 50%;\\n            }\\n\\n            12.5% {\\n                bottom: 0;\\n                height: 75%;\\n            }\\n\\n            25% {\\n                bottom: 75%;\\n                height: 100%;\\n            }\\n\\n            37.5% {\\n                bottom: 0;\\n                height: 75%;\\n            }\\n\\n            50% {\\n                bottom: 0;\\n                height: 50%;\\n            }\\n\\n            100% {\\n                bottom: 0;\\n                height: 50%;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-options-and-multipliers-listing{width:100%;height:100%;padding-top:2.4rem}@media(max-width: 767px){.wallets-options-and-multipliers-listing{padding-top:0;padding-top:initial}}@media(min-width: 1024px){.wallets-options-and-multipliers-listing--border{border-top:.2rem solid #f2f3f4;border-top:.2rem solid var(--system-light-7-secondary-background, #f2f3f4)}}.wallets-options-and-multipliers-listing__header{display:flex;align-items:center;gap:2rem;align-self:stretch;padding-bottom:2.4rem;justify-content:space-between}.wallets-options-and-multipliers-listing__header-title{display:flex;flex-direction:column;align-items:flex-start}@media(max-width: 767px){.wallets-options-and-multipliers-listing__header{display:flex;flex-direction:column;justify-content:center;padding-top:1.5rem}}.wallets-options-and-multipliers-listing__header-subtitle{font-size:1.6rem;line-height:2.4rem}.wallets-options-and-multipliers-listing__header-subtitle__link{color:#ff444f;color:var(--brand-coral, #ff444f)}.wallets-options-and-multipliers-listing__content{display:grid;grid-gap:1.6rem 4.8rem;gap:1.6rem 4.8rem;grid-template-columns:repeat(3, 1fr);-webkit-user-select:none;-moz-user-select:none;user-select:none}.wallets-options-and-multipliers-listing__content__icon{cursor:pointer}@media(max-width: 767px){.wallets-options-and-multipliers-listing__content{margin:auto 2rem;grid-template-rows:repeat(5, 1fr);grid-template-columns:auto}}.wallets-options-and-multipliers-listing__content__details{flex-grow:1;display:flex;flex-direction:column}\", \"\",{\"version\":3,\"sources\":[\"webpack://./OptionsAndMultipliersListing.scss\"],\"names\":[],\"mappings\":\"AA0pBA,yCACI,UAAA,CACA,WAAA,CACA,kBAAA,CApBA,yBAiBJ,yCAMQ,aAAA,CAAA,mBAAA,CAAA,CAXJ,0BAcA,iDAEQ,8BAAA,CAAA,0EAAA,CAAA,CAIR,iDACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA,CACA,qBAAA,CACA,6BAAA,CAEA,uDACI,YAAA,CACA,qBAAA,CACA,sBAAA,CA3CR,yBAgCA,iDAeQ,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CAAA,CAGJ,0DACI,gBAAA,CACA,kBAAA,CAEA,gEACI,aAAA,CAAA,iCAAA,CAKZ,kDACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,oCAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CAEA,wDACI,cAAA,CAtER,yBA+DA,kDAWQ,gBAAA,CACA,iCAAA,CACA,0BAAA,CAAA,CAGJ,2DACI,WAAA,CACA,YAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-options-and-multipliers-listing {\\n    width: 100%;\\n    height: 100%;\\n    padding-top: 2.4rem;\\n\\n    @include mobile {\\n        padding-top: unset;\\n    }\\n\\n    &--border {\\n        @include desktop {\\n            border-top: 0.2rem solid var(--system-light-7-secondary-background, #f2f3f4);\\n        }\\n    }\\n\\n    &__header {\\n        display: flex;\\n        align-items: center;\\n        gap: 2rem;\\n        align-self: stretch;\\n        padding-bottom: 2.4rem;\\n        justify-content: space-between;\\n\\n        &-title {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n        }\\n\\n        @include mobile {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n            padding-top: 1.5rem;\\n        }\\n\\n        &-subtitle {\\n            font-size: 1.6rem;\\n            line-height: 2.4rem;\\n\\n            &__link {\\n                color: var(--brand-coral, #ff444f);\\n            }\\n        }\\n    }\\n\\n    &__content {\\n        display: grid;\\n        gap: 1.6rem 4.8rem;\\n        grid-template-columns: repeat(3, 1fr);\\n        user-select: none;\\n\\n        &__icon {\\n            cursor: pointer;\\n        }\\n\\n        @include mobile {\\n            margin: auto 2rem;\\n            grid-template-rows: repeat(5, 1fr);\\n            grid-template-columns: auto;\\n        }\\n\\n        &__details {\\n            flex-grow: 1;\\n            display: flex;\\n            flex-direction: column;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-trading-app-card-loader{display:flex;flex-direction:column;gap:24px;padding:1rem 0rem}.wallets-trading-app-card-loader__content{display:flex;flex-direction:row;gap:14px;align-items:center}.wallets-trading-app-card-loader__content__icon{height:50px;border-radius:10px;width:50px}.wallets-trading-app-card-loader__content__details{display:flex;flex-direction:column;gap:10px}.wallets-trading-app-card-loader__content__details--title{height:14px;border-radius:2px;width:60px}.wallets-trading-app-card-loader__content__details--description{height:24px;border-radius:2px;width:200px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader.scss\",\"webpack://./TradingAppCardLoader.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CCipBR,iCACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,iBAAA,CAEA,0CACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA,CAEA,gDACI,WAAA,CACA,kBAAA,CACA,UAAA,CAGJ,mDACI,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,0DACI,WAAA,CACA,iBAAA,CACA,UAAA,CAGJ,gEACI,WAAA,CACA,iBAAA,CACA,WAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader.scss';\\n\\n.wallets-trading-app-card-loader {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 24px;\\n    padding: 1rem 0rem;\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: row;\\n        gap: 14px;\\n        align-items: center;\\n\\n        &__icon {\\n            height: 50px;\\n            border-radius: 10px;\\n            width: 50px;\\n        }\\n\\n        &__details {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 10px;\\n\\n            &--title {\\n                height: 14px;\\n                border-radius: 2px;\\n                width: 60px;\\n            }\\n\\n            &--description {\\n                height: 24px;\\n                border-radius: 2px;\\n                width: 200px;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-accordion-loader{display:flex;flex-direction:column;gap:2.4rem}.wallets-accordion-loader__item{height:12rem;border-radius:1.6rem;width:100%}.wallets-accordion-loader__item-expanded{height:100vh}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader.scss\",\"webpack://./WalletsAccordionLoader.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CCipBR,0BACI,YAAA,CACA,qBAAA,CACA,UAAA,CAEA,gCACI,YAAA,CACA,oBAAA,CACA,UAAA,CAEA,yCACI,YAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader.scss';\\n\\n.wallets-accordion-loader {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2.4rem;\\n\\n    &__item {\\n        height: 12rem;\\n        border-radius: 1.6rem;\\n        width: 100%;\\n\\n        &-expanded {\\n            height: 100vh;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-add-more-loader{border-radius:.8rem;margin-right:1.6rem;width:23.1rem;height:28.1rem}.wallets-add-more-loader__body{width:23rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader.scss\",\"webpack://./WalletsAddMoreLoader.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CCipBR,yBACI,mBAAA,CACA,mBAAA,CACA,aAAA,CACA,cAAA,CAEA,+BACI,WAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader.scss';\\n\\n.wallets-add-more-loader {\\n    border-radius: 0.8rem;\\n    margin-right: 1.6rem;\\n    width: 23.1rem;\\n    height: 28.1rem;\\n\\n    &__body {\\n        width: 23rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-skeleton{background-color:#e2e5e7;background-image:linear-gradient(90deg, rgba(255, 255, 255, 0), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0));background-size:4rem 100%;background-repeat:no-repeat;background-position:left -4rem top 0;animation:shine 1s ease infinite}@keyframes shine{to{background-position:right -4rem top 0}}.wallets-carousel-loader{display:flex;flex-direction:column;gap:1.6rem;width:100%;padding-top:2rem;padding-bottom:2rem}.wallets-carousel-loader__actions{display:flex;justify-content:space-evenly;padding-left:2.4rem;padding-right:2.4rem}.wallets-carousel-loader__actions-button{width:4.2rem;height:4.2rem;border-radius:100%}.wallets-carousel-loader__card{height:11rem;border-radius:.8rem;padding-right:2.4rem}.wallets-carousel-loader__card-body{width:16rem}.wallets-carousel-loader__card-container{display:flex;gap:1.6rem;overflow:hidden;padding-left:30vw}.wallets-carousel-loader__progress-bar{display:flex;align-items:center;justify-content:center;gap:.4rem}.wallets-carousel-loader__progress-bar__item{width:.8rem;height:.8rem;border-radius:50%}.wallets-carousel-loader__progress-bar__item--active{width:2.5rem;border-radius:20%}\", \"\",{\"version\":3,\"sources\":[\"webpack://./../SkeletonLoader.scss\",\"webpack://./WalletsCarouselLoader.scss\"],\"names\":[],\"mappings\":\"AAAA,kBACI,wBAAA,CACA,iHAAA,CACA,yBAAA,CACA,2BAAA,CACA,oCAAA,CACA,gCAAA,CAGJ,iBACI,GACI,qCAAA,CAAA,CCipBR,yBACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,UAAA,CACA,gBAAA,CAAA,mBAAA,CAEA,kCACI,YAAA,CACA,4BAAA,CACA,mBAAA,CAAA,oBAAA,CAEA,yCACI,YAAA,CACA,aAAA,CACA,kBAAA,CAIR,+BACI,YAAA,CACA,mBAAA,CACA,oBAAA,CAEA,oCACI,WAAA,CAGJ,yCACI,YAAA,CACA,UAAA,CACA,eAAA,CACA,iBAAA,CAIR,uCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,SAAA,CAEA,6CACI,WAAA,CACA,YAAA,CACA,iBAAA,CAEA,qDACI,YAAA,CACA,iBAAA\",\"sourcesContent\":[\".wallets-skeleton {\\n    background-color: #e2e5e7;\\n    background-image: linear-gradient(90deg, rgba(#fff, 0), rgba(#fff, 0.5), rgba(#fff, 0));\\n    background-size: 4rem 100%;\\n    background-repeat: no-repeat;\\n    background-position: left -4rem top 0;\\n    animation: shine 1s ease infinite;\\n}\\n\\n@keyframes shine {\\n    to {\\n        background-position: right -4rem top 0;\\n    }\\n}\\n\",\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import '../SkeletonLoader.scss';\\n\\n.wallets-carousel-loader {\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1.6rem;\\n    width: 100%;\\n    padding-block: 2rem;\\n\\n    &__actions {\\n        display: flex;\\n        justify-content: space-evenly;\\n        padding-inline: 2.4rem;\\n\\n        &-button {\\n            width: 4.2rem;\\n            height: 4.2rem;\\n            border-radius: 100%;\\n        }\\n    }\\n\\n    &__card {\\n        height: 11rem;\\n        border-radius: 0.8rem;\\n        padding-right: 2.4rem;\\n\\n        &-body {\\n            width: 16rem;\\n        }\\n\\n        &-container {\\n            display: flex;\\n            gap: 1.6rem;\\n            overflow: hidden;\\n            padding-left: 30vw;\\n        }\\n    }\\n\\n    &__progress-bar {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        gap: 0.4rem;\\n\\n        &__item {\\n            width: 0.8rem;\\n            height: 0.8rem;\\n            border-radius: 50%;\\n\\n            &--active {\\n                width: 2.5rem;\\n                border-radius: 20%;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-crypto-address-loader{display:flex;flex-direction:column;align-items:center;gap:2.4rem}.wallets-deposit-crypto-address-loader__qr-code{width:12.8rem;height:12.8rem}.wallets-deposit-crypto-address-loader__text{width:34.5rem;height:3.6rem;border-radius:4px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsDepositCryptoAddressLoader.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uCACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAEA,gDACI,aAAA,CACA,cAAA,CAGJ,6CACI,aAAA,CACA,aAAA,CACA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-crypto-address-loader {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n\\n    &__qr-code {\\n        width: 12.8rem;\\n        height: 12.8rem;\\n    }\\n\\n    &__text {\\n        width: 34.5rem;\\n        height: 3.6rem;\\n        border-radius: 4px;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transaction-status-loader{width:23.4rem;height:1.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsTransactionStatusLoader.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mCACI,aAAA,CACA,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transaction-status-loader {\\n    width: 23.4rem;\\n    height: 1.8rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-trading-account-card{display:flex;align-items:center;gap:16px;height:88px}@media(min-width: 1024px){.wallets-trading-account-card:nth-child(3n+1):nth-last-child(-n+3)>.wallets-trading-account-card__content,.wallets-trading-account-card:nth-child(3n+1):nth-last-child(-n+3)~.wallets-trading-account-card>.wallets-trading-account-card__content{border-bottom:none}}@media(max-width: 767px){.wallets-trading-account-card:nth-child(1n+1):nth-last-child(-n+1)>.wallets-trading-account-card__content,.wallets-trading-account-card:nth-child(1n+1):nth-last-child(-n+1)~.wallets-trading-account-card>.wallets-trading-account-card__content{border-bottom:none}}.wallets-trading-account-card__content{display:flex;gap:16px;align-items:center;flex-grow:1;height:100%;border-bottom:1px solid #e6e9e9;border-bottom:1px solid var(--system-light-6-hover-background, #e6e9e9)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TradingAccountCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,8BACI,YAAA,CACA,kBAAA,CACA,QAAA,CACA,WAAA,CATA,0BAcI,kPAEI,kBAAA,CAAA,CA5BR,yBAmCI,kPAEI,kBAAA,CAAA,CAIR,uCACI,YAAA,CACA,QAAA,CACA,kBAAA,CACA,WAAA,CACA,WAAA,CACA,+BAAA,CAAA,uEAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-trading-account-card {\\n    display: flex;\\n    align-items: center;\\n    gap: 16px;\\n    height: 88px;\\n\\n    @include desktop {\\n        $columns: 3;\\n        $grid-last-row-children: '&:nth-child(#{$columns}n+1):nth-last-child(-n+#{$columns})';\\n        #{$grid-last-row-children} > &__content,\\n        #{$grid-last-row-children} ~ & > &__content {\\n            border-bottom: none;\\n        }\\n    }\\n\\n    @include mobile {\\n        $columns: 1;\\n        $grid-last-row-children: '&:nth-child(#{$columns}n+1):nth-last-child(-n+#{$columns})';\\n        #{$grid-last-row-children} > &__content,\\n        #{$grid-last-row-children} ~ & > &__content {\\n            border-bottom: none;\\n        }\\n    }\\n\\n    &__content {\\n        display: flex;\\n        gap: 16px;\\n        align-items: center;\\n        flex-grow: 1;\\n        height: 100%;\\n        border-bottom: 1px solid var(--system-light-6-hover-background, #e6e9e9);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-add-more-currency-icon{width:7rem;height:-moz-fit-content;height:fit-content}.wallets-add-more-currency-icon>svg{width:auto;height:3.5rem}@media(max-width: 767px){.wallets-add-more-currency-icon>svg{height:3rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletAddMoreCurrencyIcon.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,UAAA,CACA,uBAAA,CAAA,kBAAA,CAEA,oCACI,UAAA,CACA,aAAA,CAvBJ,yBAqBA,oCAKQ,WAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-add-more-currency-icon {\\n    width: 7rem;\\n    height: fit-content;\\n\\n    & > svg {\\n        width: auto;\\n        height: 3.5rem;\\n\\n        @include mobile {\\n            height: 3rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-card{display:flex;flex-direction:column;align-items:center}.wallets-card__details{display:flex;padding:.8rem;min-width:44.44vw;flex-direction:column;justify-content:space-between;align-items:flex-start;aspect-ratio:1.667}.wallets-card__details__top{display:flex;flex-direction:row;width:100%;justify-content:space-between}.wallets-card__details__bottom{display:flex;flex-direction:column;align-items:flex-start;gap:.4rem}.wallets-card__details-landing_company{display:flex;justify-content:flex-end;align-items:flex-start;gap:.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,cACI,YAAA,CACA,qBAAA,CACA,kBAAA,CAEA,uBACI,YAAA,CACA,aAAA,CACA,iBAAA,CACA,qBAAA,CACA,6BAAA,CACA,sBAAA,CACA,kBAAA,CAEA,4BACI,YAAA,CACA,kBAAA,CACA,UAAA,CACA,6BAAA,CAGJ,+BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CAGJ,uCACI,YAAA,CACA,wBAAA,CACA,sBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-card {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n\\n    &__details {\\n        display: flex;\\n        padding: 0.8rem;\\n        min-width: 44.44vw;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        align-items: flex-start;\\n        aspect-ratio: 1.667;\\n\\n        &__top {\\n            display: flex;\\n            flex-direction: row;\\n            width: 100%;\\n            justify-content: space-between;\\n        }\\n\\n        &__bottom {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n            gap: 0.4rem;\\n        }\\n\\n        &-landing_company {\\n            display: flex;\\n            justify-content: flex-end;\\n            align-items: flex-start;\\n            gap: 0.4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-currency-card{display:flex;justify-content:center;align-items:center;flex-shrink:0;border-radius:.4rem}.wallets-currency-card-lg{min-width:12.2rem;min-height:7.5rem;padding:1rem 1.6rem}.wallets-currency-card-md{width:5rem;height:3.5rem;padding:.2rem .4rem}.wallets-currency-card-sm{width:4.6rem;height:3.1rem;padding:.2rem .4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletCurrencyCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,mBAAA,CAEA,0BACI,iBAAA,CACA,iBAAA,CACA,mBAAA,CAGJ,0BACI,UAAA,CACA,aAAA,CACA,mBAAA,CAGJ,0BACI,YAAA,CACA,aAAA,CACA,mBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-currency-card {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-shrink: 0;\\n    border-radius: 0.4rem;\\n\\n    &-lg {\\n        min-width: 12.2rem;\\n        min-height: 7.5rem;\\n        padding: 1rem 1.6rem;\\n    }\\n\\n    &-md {\\n        width: 5rem;\\n        height: 3.5rem;\\n        padding: 0.2rem 0.4rem;\\n    }\\n\\n    &-sm {\\n        width: 4.6rem;\\n        height: 3.1rem;\\n        padding: 0.2rem 0.4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"../../public/images/wallet-demo-bg-light.svg\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-gradient{position:relative}.wallets-gradient__shine{position:absolute;top:0;right:0;bottom:0;left:0;-webkit-clip-path:polygon(40% 10%, 104% -6.94%, 92.5% 100%, 28% 100%);clip-path:polygon(40% 10%, 104% -6.94%, 92.5% 100%, 28% 100%);mix-blend-mode:overlay;opacity:.16;border-top-right-radius:.8rem;background-color:#fff}.wallets-gradient__palette--grey{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(214, 218, 219, 0.24) 0%, rgb(207, 207, 207) 100%)}.wallets-gradient--USD-desktop-card-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.24) 0%, rgba(40, 57, 145, 0.48) 100%);border-radius:.8rem}.wallets-gradient--USD-desktop-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.24) 0%, rgba(40, 57, 145, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--USD-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.4) 0%, rgba(244, 67, 54, 0.16) 50.52%, rgba(40, 57, 145, 0.56) 100%) #fff}.wallets-gradient--USD-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.24) 0%, rgba(40, 57, 145, 0.48) 100%)}.wallets-gradient--USD-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(244, 67, 54, 0.5) 0%, rgba(244, 67, 54, 0.4) 50.52%, rgba(40, 57, 145, 0.56) 100%) #fff;border-radius:.8rem}.wallets-gradient--USD-mobile-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.4) 0%, rgba(244, 67, 54, 0.16) 50.52%, rgba(40, 57, 145, 0.56) 100%) #151717;border-radius:.8rem}.wallets-gradient--USD-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.4) 0%, rgba(244, 67, 54, 0.16) 50.52%, rgba(40, 57, 145, 0.56) 100%) #fff}.wallets-gradient--USD-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(244, 67, 54, 0.24) 0%, rgba(40, 57, 145, 0.48) 100%)}.wallets-gradient--AUD-desktop-card-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.24) 0%, rgba(255, 205, 0, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--AUD-desktop-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.24) 0%, rgba(255, 205, 0, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--AUD-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.4) 0%, rgba(13, 180, 61, 0.16) 50.52%, rgba(255, 205, 0, 0.56) 100%) #fff}.wallets-gradient--AUD-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.4) 0%, rgba(13, 180, 61, 0.16) 50.52%, rgba(255, 205, 0, 0.56) 100%) #151717}.wallets-gradient--AUD-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(13, 180, 61, 0.5) 0%, rgba(13, 180, 61, 0.4) 50.52%, rgba(255, 205, 0, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--AUD-mobile-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.24) 0%, rgba(255, 205, 0, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--AUD-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.4) 0%, rgba(13, 180, 61, 0.16) 50.52%, rgba(255, 205, 0, 0.56) 100%) #fff}.wallets-gradient--AUD-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(13, 180, 61, 0.4) 0%, rgba(13, 180, 61, 0.16) 50.52%, rgba(255, 205, 0, 0.56) 100%) #151717}.wallets-gradient--EUR-desktop-card-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(248, 209, 46, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--EUR-desktop-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(248, 209, 46, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--EUR-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(248, 209, 46, 0.56) 100%) #fff}.wallets-gradient--EUR-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(248, 209, 46, 0.56) 100%) #151717}.wallets-gradient--EUR-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(40, 57, 145, 0.5) 0%, rgba(40, 57, 145, 0.4) 50.52%, rgba(248, 209, 46, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--EUR-mobile-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(248, 209, 46, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--EUR-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(248, 209, 46, 0.56) 100%) #fff}.wallets-gradient--EUR-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(248, 209, 46, 0.56) 100%) #151717}.wallets-gradient--GBP-desktop-card-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(40, 57, 145, 0.24) 0.01%, rgba(244, 67, 54, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--GBP-desktop-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(40, 57, 145, 0.24) 0.01%, rgba(244, 67, 54, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--GBP-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(244, 67, 54, 0.56) 100%) #fff}.wallets-gradient--GBP-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(244, 67, 54, 0.56) 100%) #151717}.wallets-gradient--GBP-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(40, 57, 145, 0.5) 0%, rgba(40, 57, 145, 0.4) 50.52%, rgba(244, 67, 54, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--GBP-mobile-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.24) 0%, rgba(40, 57, 145, 0.24) 0.01%, rgba(244, 67, 54, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--GBP-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(244, 67, 54, 0.56) 100%) #fff}.wallets-gradient--GBP-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(40, 57, 145, 0.4) 0%, rgba(40, 57, 145, 0.16) 50.52%, rgba(244, 67, 54, 0.56) 100%) #151717}.wallets-gradient--BTC-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(247, 147, 27, 0.24) 0%, rgba(247, 199, 27, 0.477) 99.99%) #fff;border-radius:.8rem}.wallets-gradient--BTC-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(247, 147, 27, 0.24) 0%, rgba(247, 199, 27, 0.477) 99.99%, rgba(255, 100, 68, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--BTC-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(247, 147, 27, 0.4) 0%, rgba(247, 147, 27, 0.16) 50.52%, rgba(247, 199, 27, 0.4) 100%) #fff}.wallets-gradient--BTC-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(247, 147, 27, 0.4) 0%, rgba(247, 147, 27, 0.16) 50.52%, rgba(247, 199, 27, 0.4) 100%) #151717}.wallets-gradient--BTC-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(247, 147, 27, 0.5) 0%, rgba(247, 147, 27, 0.4) 50.52%, rgba(247, 199, 27, 0.477) 99.99%) #fff;border-radius:.8rem}.wallets-gradient--BTC-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(247, 147, 27, 0.24) 0%, rgba(247, 199, 27, 0.477) 99.99%, rgba(255, 100, 68, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--BTC-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(247, 147, 27, 0.4) 0%, rgba(247, 147, 27, 0.16) 50.52%, rgba(247, 199, 27, 0.4) 100%) #fff}.wallets-gradient--BTC-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(247, 147, 27, 0.4) 0%, rgba(247, 147, 27, 0.16) 50.52%, rgba(247, 199, 27, 0.4) 100%) #151717}.wallets-gradient--ETH-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(82, 86, 127, 0.24) 0%, rgba(130, 140, 173, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--ETH-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(82, 86, 127, 0.24) 0%, rgba(130, 140, 173, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--ETH-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(82, 86, 127, 0.4) 0%, rgba(82, 86, 127, 0.16) 50.52%, rgba(130, 140, 173, 0.4) 100%) #fff}.wallets-gradient--ETH-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(82, 86, 127, 0.4) 0%, rgba(82, 86, 127, 0.16) 50.52%, rgba(130, 140, 173, 0.4) 100%) #151717}.wallets-gradient--ETH-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(82, 86, 127, 0.4) 0%, rgba(82, 86, 127, 0.5) 50.52%, rgba(130, 140, 173, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--ETH-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(82, 86, 127, 0.24) 0%, rgba(130, 140, 173, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--ETH-mobile-header-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(82, 86, 127, 0.24) 0%, rgba(130, 140, 173, 0.48) 100%) #fff}.wallets-gradient--ETH-mobile-header-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(82, 86, 127, 0.24) 0%, rgba(130, 140, 173, 0.48) 100%) #151717}.wallets-gradient--LTC-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(165, 168, 169, 0.24) 0%, rgba(193, 204, 207, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--LTC-desktop-card-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.16) 50.52%, rgba(193, 204, 207, 0.4) 100%) #151717;border-radius:.8rem}.wallets-gradient--LTC-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.16) 50.52%, rgba(193, 204, 207, 0.4) 100%) #fff}.wallets-gradient--LTC-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.16) 50.52%, rgba(193, 204, 207, 0.4) 100%) #151717}.wallets-gradient--LTC-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.4) 50.52%, rgba(193, 204, 207, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--LTC-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(165, 168, 169, 0.24) 0%, rgba(193, 204, 207, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--LTC-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.16) 50.52%, rgba(193, 204, 207, 0.4) 100%) #fff}.wallets-gradient--LTC-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(165, 168, 169, 0.4) 0%, rgba(165, 168, 169, 0.16) 50.52%, rgba(193, 204, 207, 0.4) 100%) #151717}.wallets-gradient--UST-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--UST-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--UST-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--UST-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--UST-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.5) 50.52%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--UST-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--UST-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--UST-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--USDT-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--USDT-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--USDT-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--USDT-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--USDT-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.5) 50.52%, rgba(0, 147, 147, 0.48) 100%) #fff}.wallets-gradient--USDT-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717}.wallets-gradient--USDT-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff;border-radius:.8rem}.wallets-gradient--USDT-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717;border-radius:.8rem}.wallets-gradient--tUSDT-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--tUSDT-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--tUSDT-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--tUSDT-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--tUSDT-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.5) 50.52%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--tUSDT-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--tUSDT-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--tUSDT-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--eUSDT-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--eUSDT-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--eUSDT-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--eUSDT-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--eUSDT-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.5) 50.52%, rgba(0, 147, 147, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--eUSDT-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(0, 147, 147, 0.24) 0%, rgba(0, 147, 147, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--eUSDT-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #fff}.wallets-gradient--eUSDT-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(0, 147, 147, 0.4) 0%, rgba(0, 147, 147, 0.16) 50.52%, rgba(4, 217, 217, 0.4) 100%) #151717}.wallets-gradient--USDC-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(39, 117, 202, 0.24) 0%, rgba(34, 76, 225, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--USDC-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(39, 117, 202, 0.24) 0%, rgba(34, 76, 225, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--USDC-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(39, 117, 202, 0.4) 0%, rgba(39, 117, 202, 0.16) 50.52%, rgba(34, 76, 225, 0.4) 100%) #fff}.wallets-gradient--USDC-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(39, 117, 202, 0.4) 0%, rgba(39, 117, 202, 0.16) 50.52%, rgba(34, 76, 225, 0.4) 100%) #151717}.wallets-gradient--USDC-mobile-card-light{background:radial-gradient(160% 190% at 0% 100%, rgba(39, 117, 202, 0.4) 0%, rgba(39, 117, 202, 0.5) 50.52%, rgba(34, 76, 225, 0.48) 100%) #fff;border-radius:.8rem}.wallets-gradient--USDC-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(39, 117, 202, 0.24) 0%, rgba(34, 76, 225, 0.48) 100%) #151717;border-radius:.8rem}.wallets-gradient--USDC-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(39, 117, 202, 0.4) 0%, rgba(39, 117, 202, 0.16) 50.52%, rgba(34, 76, 225, 0.4) 100%) #fff}.wallets-gradient--USDC-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(39, 117, 202, 0.4) 0%, rgba(39, 117, 202, 0.16) 50.52%, rgba(34, 76, 225, 0.4) 100%) #151717}.wallets-gradient--demo-desktop-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(255, 100, 68, 0.24) 0%, rgba(255, 68, 79, 0.48) 100%) #212329;border-radius:.8rem}.wallets-gradient--demo-desktop-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(255, 100, 68, 0.24) 0%, rgba(255, 68, 79, 0.48) 100%) #fbdddd;border-radius:.8rem}.wallets-gradient--demo-desktop-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(255, 100, 68, 0.4) 0%, rgba(255, 100, 68, 0.16) 50.52%, rgba(255, 68, 79, 0.4) 100%) #212329}.wallets-gradient--demo-desktop-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(255, 100, 68, 0.4) 0%, rgba(255, 100, 68, 0.16) 50.52%, rgba(255, 68, 79, 0.4) 100%) #fbdddd}.wallets-gradient--demo-mobile-card-light{background:radial-gradient(100% 277.78% at 0% 100%, rgba(255, 100, 68, 0.24) 0%, rgba(255, 68, 79, 0.68) 100%) #212329;border-radius:.8rem}.wallets-gradient--demo-mobile-card-dark{background:radial-gradient(100% 277.78% at 0% 100%, rgba(255, 100, 68, 0.24) 0%, rgba(255, 68, 79, 0.48) 100%) #fbdddd;border-radius:.8rem}.wallets-gradient--demo-mobile-header-light{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(255, 100, 68, 0.4) 0%, rgba(255, 100, 68, 0.16) 50.52%, rgba(255, 68, 79, 0.4) 100%) #212329}.wallets-gradient--demo-mobile-header-dark{background:radial-gradient(100% 4130.74% at 0% 100%, rgba(255, 100, 68, 0.4) 0%, rgba(255, 100, 68, 0.16) 50.52%, rgba(255, 68, 79, 0.4) 100%) #fbdddd}.wallets-gradient--demo-desktop-header-light:before,.wallets-gradient--demo-mobile-header-light:before,.wallets-gradient--demo-mobile-card-light:before{content:\\\"\\\";display:block;position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");background-repeat:repeat;background-size:7rem;mix-blend-mode:overlay;opacity:.24}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletGradientBackground.scss\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-gradient {\\n    position: relative;\\n\\n    &__shine {\\n        position: absolute;\\n        inset: 0;\\n        clip-path: polygon(40% 10%, 104% -6.94%, 92.5% 100%, 28% 100%);\\n        mix-blend-mode: overlay;\\n        opacity: 0.16;\\n        border-top-right-radius: 0.8rem;\\n        background-color: #fff;\\n    }\\n\\n    &__palette {\\n        &--grey {\\n            background: radial-gradient(\\n                100% 4130.74% at 0% 100%,\\n                rgb(214, 218, 219, 0.24) 0%,\\n                rgba(207, 207, 207, 1) 100%\\n            );\\n        }\\n    }\\n\\n    &--USD {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                        100% 4130.74% at 0% 100%,\\n                        rgba(244, 67, 54, 0.24) 0%,\\n                        rgba(40, 57, 145, 0.48) 100%\\n                    );\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(244, 67, 54, 0.24) 0%,\\n                            rgba(40, 57, 145, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(244, 67, 54, 0.4) 0%,\\n                            rgba(244, 67, 54, 0.16) 50.52%,\\n                            rgba(40, 57, 145, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                        100% 4130.74% at 0% 100%,\\n                        rgba(244, 67, 54, 0.24) 0%,\\n                        rgba(40, 57, 145, 0.48) 100%\\n                    );\\n                }\\n            }\\n        }\\n\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(244, 67, 54, 0.5) 0%,\\n                            rgba(244, 67, 54, 0.4) 50.52%,\\n                            rgba(40, 57, 145, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(244, 67, 54, 0.4) 0%,\\n                            rgba(244, 67, 54, 0.16) 50.52%,\\n                            rgba(40, 57, 145, 0.56) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(244, 67, 54, 0.4) 0%,\\n                            rgba(244, 67, 54, 0.16) 50.52%,\\n                            rgba(40, 57, 145, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                        100% 4130.74% at 0% 100%,\\n                        rgba(244, 67, 54, 0.24) 0%,\\n                        rgba(40, 57, 145, 0.48) 100%\\n                    );\\n                }\\n            }\\n        }\\n    }\\n    &--AUD {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.24) 0%,\\n                            rgba(255, 205, 0, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.24) 0%,\\n                            rgba(255, 205, 0, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.4) 0%,\\n                            rgba(13, 180, 61, 0.16) 50.52%,\\n                            rgba(255, 205, 0, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.4) 0%,\\n                            rgba(13, 180, 61, 0.16) 50.52%,\\n                            rgba(255, 205, 0, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(13, 180, 61, 0.5) 0%,\\n                            rgba(13, 180, 61, 0.4) 50.52%,\\n                            rgba(255, 205, 0, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.24) 0%,\\n                            rgba(255, 205, 0, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.4) 0%,\\n                            rgba(13, 180, 61, 0.16) 50.52%,\\n                            rgba(255, 205, 0, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(13, 180, 61, 0.4) 0%,\\n                            rgba(13, 180, 61, 0.16) 50.52%,\\n                            rgba(255, 205, 0, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--EUR {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(248, 209, 46, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(248, 209, 46, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(248, 209, 46, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(248, 209, 46, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(40, 57, 145, 0.5) 0%,\\n                            rgba(40, 57, 145, 0.4) 50.52%,\\n                            rgba(248, 209, 46, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(248, 209, 46, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(248, 209, 46, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(248, 209, 46, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--GBP {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(40, 57, 145, 0.24) 0.01%,\\n                            rgba(244, 67, 54, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(40, 57, 145, 0.24) 0.01%,\\n                            rgba(244, 67, 54, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(244, 67, 54, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(244, 67, 54, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(40, 57, 145, 0.5) 0%,\\n                            rgba(40, 57, 145, 0.4) 50.52%,\\n                            rgba(244, 67, 54, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.24) 0%,\\n                            rgba(40, 57, 145, 0.24) 0.01%,\\n                            rgba(244, 67, 54, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(244, 67, 54, 0.56) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(40, 57, 145, 0.4) 0%,\\n                            rgba(40, 57, 145, 0.16) 50.52%,\\n                            rgba(244, 67, 54, 0.56) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--BTC {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(247, 147, 27, 0.24) 0%,\\n                            rgba(247, 199, 27, 0.477) 99.99%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(247, 147, 27, 0.24) 0%,\\n                            rgba(247, 199, 27, 0.477) 99.99%,\\n                            rgba(255, 100, 68, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(247, 147, 27, 0.4) 0%,\\n                            rgba(247, 147, 27, 0.16) 50.52%,\\n                            rgba(247, 199, 27, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(247, 147, 27, 0.4) 0%,\\n                            rgba(247, 147, 27, 0.16) 50.52%,\\n                            rgba(247, 199, 27, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(247, 147, 27, 0.5) 0%,\\n                            rgba(247, 147, 27, 0.4) 50.52%,\\n                            rgba(247, 199, 27, 0.477) 99.99%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(247, 147, 27, 0.24) 0%,\\n                            rgba(247, 199, 27, 0.477) 99.99%,\\n                            rgba(255, 100, 68, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(247, 147, 27, 0.4) 0%,\\n                            rgba(247, 147, 27, 0.16) 50.52%,\\n                            rgba(247, 199, 27, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(247, 147, 27, 0.4) 0%,\\n                            rgba(247, 147, 27, 0.16) 50.52%,\\n                            rgba(247, 199, 27, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--ETH {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(82, 86, 127, 0.24) 0%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(82, 86, 127, 0.24) 0%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(82, 86, 127, 0.4) 0%,\\n                            rgba(82, 86, 127, 0.16) 50.52%,\\n                            rgba(130, 140, 173, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(82, 86, 127, 0.4) 0%,\\n                            rgba(82, 86, 127, 0.16) 50.52%,\\n                            rgba(130, 140, 173, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(82, 86, 127, 0.4) 0%,\\n                            rgba(82, 86, 127, 0.5) 50.52%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(82, 86, 127, 0.24) 0%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(82, 86, 127, 0.24) 0%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(82, 86, 127, 0.24) 0%,\\n                            rgba(130, 140, 173, 0.48) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--LTC {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(165, 168, 169, 0.24) 0%,\\n                            rgba(193, 204, 207, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.16) 50.52%,\\n                            rgba(193, 204, 207, 0.4) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.16) 50.52%,\\n                            rgba(193, 204, 207, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.16) 50.52%,\\n                            rgba(193, 204, 207, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.4) 50.52%,\\n                            rgba(193, 204, 207, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(165, 168, 169, 0.24) 0%,\\n                            rgba(193, 204, 207, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.16) 50.52%,\\n                            rgba(193, 204, 207, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(165, 168, 169, 0.4) 0%,\\n                            rgba(165, 168, 169, 0.16) 50.52%,\\n                            rgba(193, 204, 207, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--UST {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.5) 50.52%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--USDT {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.5) 50.52%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n        }\\n    }\\n    &--tUSDT {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.5) 50.52%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--eUSDT {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.5) 50.52%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(0, 147, 147, 0.24) 0%,\\n                            rgba(0, 147, 147, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(0, 147, 147, 0.4) 0%,\\n                            rgba(0, 147, 147, 0.16) 50.52%,\\n                            rgba(4, 217, 217, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--USDC {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(39, 117, 202, 0.24) 0%,\\n                            rgba(34, 76, 225, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(39, 117, 202, 0.24) 0%,\\n                            rgba(34, 76, 225, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(39, 117, 202, 0.4) 0%,\\n                            rgba(39, 117, 202, 0.16) 50.52%,\\n                            rgba(34, 76, 225, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(39, 117, 202, 0.4) 0%,\\n                            rgba(39, 117, 202, 0.16) 50.52%,\\n                            rgba(34, 76, 225, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            160% 190% at 0% 100%,\\n                            rgba(39, 117, 202, 0.4) 0%,\\n                            rgba(39, 117, 202, 0.5) 50.52%,\\n                            rgba(34, 76, 225, 0.48) 100%\\n                        )\\n                        #ffffff;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(39, 117, 202, 0.24) 0%,\\n                            rgba(34, 76, 225, 0.48) 100%\\n                        )\\n                        #151717;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(39, 117, 202, 0.4) 0%,\\n                            rgba(39, 117, 202, 0.16) 50.52%,\\n                            rgba(34, 76, 225, 0.4) 100%\\n                        )\\n                        #ffffff;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(39, 117, 202, 0.4) 0%,\\n                            rgba(39, 117, 202, 0.16) 50.52%,\\n                            rgba(34, 76, 225, 0.4) 100%\\n                        )\\n                        #151717;\\n                }\\n            }\\n        }\\n    }\\n    &--demo {\\n        &-desktop {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(255, 100, 68, 0.24) 0%,\\n                            rgba(255, 68, 79, 0.48) 100%\\n                        )\\n                        #212329;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(255, 100, 68, 0.24) 0%,\\n                            rgba(255, 68, 79, 0.48) 100%\\n                        )\\n                        #fbdddd;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(255, 100, 68, 0.4) 0%,\\n                            rgba(255, 100, 68, 0.16) 50.52%,\\n                            rgba(255, 68, 79, 0.4) 100%\\n                        )\\n                        #212329;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(255, 100, 68, 0.4) 0%,\\n                            rgba(255, 100, 68, 0.16) 50.52%,\\n                            rgba(255, 68, 79, 0.4) 100%\\n                        )\\n                        #fbdddd;\\n                }\\n            }\\n        }\\n        &-mobile {\\n            &-card {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(255, 100, 68, 0.24) 0%,\\n                            rgba(255, 68, 79, 0.68) 100%\\n                        )\\n                        #212329;\\n                    border-radius: 0.8rem;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 277.78% at 0% 100%,\\n                            rgba(255, 100, 68, 0.24) 0%,\\n                            rgba(255, 68, 79, 0.48) 100%\\n                        )\\n                        #fbdddd;\\n                    border-radius: 0.8rem;\\n                }\\n            }\\n\\n            &-header {\\n                &-light {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(255, 100, 68, 0.4) 0%,\\n                            rgba(255, 100, 68, 0.16) 50.52%,\\n                            rgba(255, 68, 79, 0.4) 100%\\n                        )\\n                        #212329;\\n                }\\n                &-dark {\\n                    background: radial-gradient(\\n                            100% 4130.74% at 0% 100%,\\n                            rgba(255, 100, 68, 0.4) 0%,\\n                            rgba(255, 100, 68, 0.16) 50.52%,\\n                            rgba(255, 68, 79, 0.4) 100%\\n                        )\\n                        #fbdddd;\\n                }\\n            }\\n        }\\n        &-desktop-header-light,\\n        &-mobile-header-light,\\n        &-mobile-card-light {\\n            &:before {\\n                content: '';\\n                display: block;\\n                position: absolute;\\n                inset: 0;\\n                width: 100%;\\n                height: 100%;\\n                background-image: url('../../public/images/wallet-demo-bg-light.svg');\\n                background-repeat: repeat;\\n                background-size: 7rem;\\n                mix-blend-mode: overlay;\\n                opacity: 0.24;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-list-header__card_container{flex:1;display:flex;align-items:flex-start;width:100%;border-radius:1.6rem;background:none;z-index:10}.wallets-list-header__content{flex:1;display:flex;flex-direction:row;align-items:center;gap:2.4rem;align-self:stretch}.wallets-list-header__details-container{display:flex;flex:1;align-items:center;gap:2.4rem;align-self:stretch;border-radius:1.6rem}.wallets-list-header__details-container-icon{display:flex;justify-content:center;align-items:center;flex-shrink:0;border-radius:.4rem;padding:1rem 1.6rem;min-width:12.2rem;min-height:7.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCard.scss\"],\"names\":[],\"mappings\":\"AA2pBI,qCACI,MAAA,CACA,YAAA,CACA,sBAAA,CACA,UAAA,CACA,oBAAA,CACA,eAAA,CACA,UAAA,CAGJ,8BACI,MAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CAGJ,wCACI,YAAA,CACA,MAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CACA,oBAAA,CAEA,6CACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,mBAAA,CACA,mBAAA,CACA,iBAAA,CACA,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-list-header {\\n    &__card_container {\\n        flex: 1;\\n        display: flex;\\n        align-items: flex-start;\\n        width: 100%;\\n        border-radius: 1.6rem;\\n        background: none;\\n        z-index: 10;\\n    }\\n\\n    &__content {\\n        flex: 1;\\n        display: flex;\\n        flex-direction: row;\\n        align-items: center;\\n        gap: 2.4rem;\\n        align-self: stretch;\\n    }\\n\\n    &__details-container {\\n        display: flex;\\n        flex: 1;\\n        align-items: center;\\n        gap: 2.4rem;\\n        align-self: stretch;\\n        border-radius: 1.6rem;\\n\\n        &-icon {\\n            display: flex;\\n            justify-content: center;\\n            align-items: center;\\n            flex-shrink: 0;\\n            border-radius: 0.4rem;\\n            padding: 1rem 1.6rem;\\n            min-width: 12.2rem;\\n            min-height: 7.5rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-header__actions{display:flex;align-items:center;gap:.8rem}.wallets-header__actions-label{font-weight:700;display:none;opacity:0;transform:translateX(-100%)}.wallets-header__actions-label--active{animation:show-actions-label .3s ease;display:block;opacity:1;transform:translateX(0)}.wallets-header__button{display:flex;cursor:pointer;height:3.2rem;padding:.6rem 1.6rem;justify-content:center;align-items:center;gap:.8rem;border-radius:6.4rem;border:.1rem solid #999;border:.1rem solid var(--system-light-3-less-prominent-text, #999);background:none}@keyframes show-actions-label{from{transform:translateX(-100%);opacity:0}to{transform:translateX(0);opacity:1}}.wallets-mobile-actions{display:flex;flex-direction:row;align-items:center;cursor:pointer;min-width:5.6rem}.wallets-mobile-actions__container{display:flex;padding:0rem 1.6rem;justify-content:center;align-items:center;gap:.8rem;align-self:stretch}.wallets-mobile-actions-content{display:flex;width:8rem;flex-direction:column;align-items:center;gap:.4rem}.wallets-mobile-actions-content-icon{display:flex;width:3.5rem;height:3.5rem;padding:.8rem;justify-content:center;align-items:center;border-radius:1.6rem;border:.1rem solid #d6dadb;border:.1rem solid var(--system-light-5-active-background, #d6dadb)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardActions.scss\"],\"names\":[],\"mappings\":\"AA2pBI,yBACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,+BACI,eAAA,CACA,YAAA,CACA,SAAA,CACA,2BAAA,CAEA,uCACI,qCAAA,CACA,aAAA,CACA,SAAA,CACA,uBAAA,CAKZ,wBACI,YAAA,CACA,cAAA,CACA,aAAA,CACA,oBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,oBAAA,CACA,uBAAA,CAAA,kEAAA,CACA,eAAA,CAGJ,8BACI,KACI,2BAAA,CACA,SAAA,CAEJ,GACI,uBAAA,CACA,SAAA,CAAA,CAKZ,wBACI,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,cAAA,CACA,gBAAA,CAEA,mCACI,YAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,kBAAA,CAGJ,gCACI,YAAA,CACA,UAAA,CACA,qBAAA,CACA,kBAAA,CACA,SAAA,CAEA,qCACI,YAAA,CACA,YAAA,CACA,aAAA,CACA,aAAA,CACA,sBAAA,CACA,kBAAA,CACA,oBAAA,CACA,0BAAA,CAAA,mEAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-header {\\n    &__actions {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n\\n        &-label {\\n            font-weight: 700;\\n            display: none;\\n            opacity: 0;\\n            transform: translateX(-100%);\\n\\n            &--active {\\n                animation: show-actions-label 0.3s ease;\\n                display: block;\\n                opacity: 1;\\n                transform: translateX(0);\\n            }\\n        }\\n    }\\n\\n    &__button {\\n        display: flex;\\n        cursor: pointer;\\n        height: 3.2rem;\\n        padding: 0.6rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.8rem;\\n        border-radius: 6.4rem;\\n        border: 0.1rem solid var(--system-light-3-less-prominent-text, #999);\\n        background: none;\\n    }\\n\\n    @keyframes show-actions-label {\\n        from {\\n            transform: translateX(-100%);\\n            opacity: 0;\\n        }\\n        to {\\n            transform: translateX(0);\\n            opacity: 1;\\n        }\\n    }\\n}\\n\\n.wallets-mobile-actions {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    cursor: pointer;\\n    min-width: 5.6rem;\\n\\n    &__container {\\n        display: flex;\\n        padding: 0rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.8rem;\\n        align-self: stretch;\\n    }\\n\\n    &-content {\\n        display: flex;\\n        width: 8rem;\\n        flex-direction: column;\\n        align-items: center;\\n        gap: 0.4rem;\\n\\n        &-icon {\\n            display: flex;\\n            width: 3.5rem;\\n            height: 3.5rem;\\n            padding: 0.8rem;\\n            justify-content: center;\\n            align-items: center;\\n            border-radius: 1.6rem;\\n            border: 0.1rem solid var(--system-light-5-active-background, #d6dadb);\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-list-card__badge{display:flex;padding:0rem .4rem;justify-content:center;align-items:center;gap:.4rem;border-radius:.2rem;border:.1rem solid #333;border:.1rem solid var(--system-light-1-prominent-text, #333)}.wallets-list-card__badge--demo{display:flex;padding:.1rem .6rem;justify-content:center;align-items:center;gap:.4rem;border-radius:.2rem;background:#377cfc;background:var(--status-light-information, #377cfc)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardBadge.scss\"],\"names\":[],\"mappings\":\"AA2pBI,0BACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,mBAAA,CACA,uBAAA,CAAA,6DAAA,CAEA,gCACI,YAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,mBAAA,CACA,kBAAA,CAAA,mDAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-list-card {\\n    &__badge {\\n        display: flex;\\n        padding: 0rem 0.4rem;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.4rem;\\n        border-radius: 0.2rem;\\n        border: 0.1rem solid var(--system-light-1-prominent-text, #333);\\n\\n        &--demo {\\n            display: flex;\\n            padding: 0.1rem 0.6rem;\\n            justify-content: center;\\n            align-items: center;\\n            gap: 0.4rem;\\n            border-radius: 0.2rem;\\n            background: var(--status-light-information, #377cfc);\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-balance__container{display:flex;flex-direction:column;align-items:flex-end}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardIBalance.scss\"],\"names\":[],\"mappings\":\"AA2pBI,4BACI,YAAA,CACA,qBAAA,CACA,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-balance {\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-end;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-list-details__action-container{display:flex;flex-direction:column;justify-content:center;align-items:flex-start;gap:.8rem;flex:1 0 0}.wallets-list-details__elements{display:flex;align-items:center;gap:.8rem;align-self:stretch}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletListCardIDetails.scss\"],\"names\":[],\"mappings\":\"AA2pBI,wCACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CACA,SAAA,CACA,UAAA,CAGJ,gCACI,YAAA,CACA,kBAAA,CACA,SAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-list-details {\\n    &__action-container {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: flex-start;\\n        gap: 0.8rem;\\n        flex: 1 0 0;\\n    }\\n\\n    &__elements {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.8rem;\\n        align-self: stretch;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-market-currency-icon{width:9.5rem;height:7rem;position:relative;z-index:0;transform-origin:top left;transform:scale(65%)}.wallets-market-currency-icon__before{position:absolute;bottom:0;right:0;z-index:1}.wallets-market-currency-icon__before-demo{width:90%;transform:scale(75%);transform-origin:bottom right}.wallets-market-currency-icon__before-demo .wallets-gradient svg{transform:scale(85%)}.wallets-market-currency-icon__before-real{width:80%;transform:scale(90%);transform-origin:bottom right}.wallets-market-currency-icon__before-real .wallets-gradient svg{transform:scale(70%)}.wallets-market-currency-icon__after{position:absolute;top:0;left:0;z-index:2}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletMarketCurrencyIcon.scss\"],\"names\":[],\"mappings\":\"AA0pBA,8BAGI,YAAA,CACA,WAAA,CACA,iBAAA,CACA,SAAA,CACA,yBAAA,CACA,oBAAA,CAEA,sCAuBI,iBAAA,CACA,QAAA,CACA,OAAA,CACA,SAAA,CAzBA,2CAEI,SAAA,CAKA,oBAAA,CACA,6BAAA,CAJA,iEACI,oBAAA,CAMR,2CAEI,SAAA,CAKA,oBAAA,CACA,6BAAA,CAJA,iEACI,oBAAA,CAYZ,qCACI,iBAAA,CACA,KAAA,CACA,MAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-market-currency-icon {\\n    $scaling: 65%;\\n\\n    width: 9.5rem;\\n    height: 7rem;\\n    position: relative;\\n    z-index: 0;\\n    transform-origin: top left;\\n    transform: scale($scaling);\\n\\n    &__before {\\n        &-demo {\\n            $scaling-before: $scaling + 10%;\\n            width: $scaling + 25%;\\n\\n            & .wallets-gradient svg {\\n                transform: scale($scaling-before + 10%);\\n            }\\n            transform: scale($scaling-before);\\n            transform-origin: bottom right;\\n        }\\n\\n        &-real {\\n            $scaling-before: $scaling + 25%;\\n            width: $scaling + 15%;\\n\\n            & .wallets-gradient svg {\\n                transform: scale($scaling-before - 20%);\\n            }\\n            transform: scale($scaling-before);\\n            transform-origin: bottom right;\\n        }\\n\\n        position: absolute;\\n        bottom: 0;\\n        right: 0;\\n        z-index: 1;\\n    }\\n\\n    &__after {\\n        position: absolute;\\n        top: 0;\\n        left: 0;\\n        z-index: 2;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-no-wallet-found-state{width:100%;height:calc(100vh - 84px);display:flex;align-items:center;justify-content:center;gap:.5rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}@media(max-width: 767px){.wallets-no-wallet-found-state{height:calc(100vh - 44px);flex-direction:column}}.wallets-no-wallet-found-state__container{display:flex;flex-direction:column;align-items:start;gap:4rem;padding-left:.5rem;padding-right:.5rem}@media(max-width: 767px){.wallets-no-wallet-found-state__container{align-items:center}}.wallets-no-wallet-found-state__content{display:flex;flex-direction:column;gap:1rem}@media(max-width: 767px){.wallets-no-wallet-found-state__content{align-items:center}}.wallets-no-wallet-found-state__emphasized-text{color:#ff444f;color:var(--brand-coral, #ff444f)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletNoWalletFoundState.scss\"],\"names\":[],\"mappings\":\"AA0pBA,+BACI,UAAA,CACA,yBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,SAAA,CACA,eAAA,CAAA,yDAAA,CAxBA,yBAiBJ,+BAUQ,yBAAA,CACA,qBAAA,CAAA,CAGJ,0CACI,YAAA,CACA,qBAAA,CACA,iBAAA,CACA,QAAA,CACA,kBAAA,CAAA,mBAAA,CApCJ,yBA+BA,0CAQQ,kBAAA,CAAA,CAIR,wCACI,YAAA,CACA,qBAAA,CACA,QAAA,CA9CJ,yBA2CA,wCAMQ,kBAAA,CAAA,CAIR,gDACI,aAAA,CAAA,iCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-no-wallet-found-state {\\n    width: 100%;\\n    height: calc(100vh - 84px);\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 0.5rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    @include mobile {\\n        height: calc(100vh - 44px);\\n        flex-direction: column;\\n    }\\n\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: start;\\n        gap: 4rem;\\n        padding-inline: 0.5rem;\\n\\n        @include mobile {\\n            align-items: center;\\n        }\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1rem;\\n\\n        @include mobile {\\n            align-items: center;\\n        }\\n    }\\n\\n    &__emphasized-text {\\n        color: var(--brand-coral, #ff444f);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-tour-guide__container{display:flex;flex-direction:column;align-items:flex-start;align-self:stretch;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff);width:28rem;box-shadow:0rem 3.2rem 6.4rem 0rem rgba(14,14,14,.14)}.wallets-tour-guide__header{display:flex;height:4.8rem;padding:.8rem .8rem .8rem 1.6rem;align-items:center;gap:1rem;align-self:stretch;border-radius:.8rem .8rem 0rem 0rem;background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem -0.1rem 0rem 0rem #f2f3f4 inset}.wallets-tour-guide__content{display:flex;padding:1.6rem;flex-direction:column;align-items:flex-start;gap:.8rem;align-self:stretch}.wallets-tour-guide__footer{display:flex;height:4rem;padding:0rem 1.6rem 1.6rem;justify-content:flex-end;align-items:center;gap:1rem;align-self:stretch}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletTourGuide.scss\"],\"names\":[],\"mappings\":\"AA2pBI,+BACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,WAAA,CAGA,qDAAA,CAGJ,4BACI,YAAA,CACA,aAAA,CACA,gCAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA,CAEA,mCAAA,CACA,eAAA,CAAA,yDAAA,CAGA,+CAAA,CAGJ,6BACI,YAAA,CACA,cAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CACA,kBAAA,CAGJ,4BACI,YAAA,CACA,WAAA,CACA,0BAAA,CACA,wBAAA,CACA,kBAAA,CACA,QAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-tour-guide {\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        align-self: stretch;\\n        border-radius: 0.8rem;\\n        background: var(--system-light-8-primary-background, #fff);\\n        width: 28rem;\\n\\n        /* Shadows/xxxl */\\n        box-shadow: 0rem 3.2rem 6.4rem 0rem rgba(14, 14, 14, 0.14);\\n    }\\n\\n    &__header {\\n        display: flex;\\n        height: 4.8rem;\\n        padding: 0.8rem 0.8rem 0.8rem 1.6rem;\\n        align-items: center;\\n        gap: 1rem;\\n        align-self: stretch;\\n\\n        border-radius: 0.8rem 0.8rem 0rem 0rem;\\n        background: var(--system-light-8-primary-background, #fff);\\n\\n        /* divider/light/bottom/1px */\\n        box-shadow: 0rem -0.1rem 0rem 0rem #f2f3f4 inset;\\n    }\\n\\n    &__content {\\n        display: flex;\\n        padding: 1.6rem;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        gap: 0.8rem;\\n        align-self: stretch;\\n    }\\n\\n    &__footer {\\n        display: flex;\\n        height: 4rem;\\n        padding: 0rem 1.6rem 1.6rem;\\n        justify-content: flex-end;\\n        align-items: center;\\n        gap: 1rem;\\n        align-self: stretch;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"../../public/images/wallet-demo-desktop-bg.svg\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-accordion{width:123.2rem;background:#fff;background:var(--system-light-8-primary-background, #fff);border-radius:1.6rem;position:relative}.wallets-accordion--virtual{background:#fffafa;background:var(--system-light-8-primary-background, #fffafa)}.wallets-accordion__header{width:100%;display:flex;align-items:center;padding:2.4rem;gap:2.4rem;border-radius:1.6rem;position:relative}.wallets-accordion__header--virtual:before{content:\\\"\\\";display:block;position:absolute;top:0;right:0;bottom:0;left:0;width:100%;height:100%;border-radius:1.6rem;background-image:url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");background-repeat:repeat;background-size:6rem;opacity:.24}.wallets-accordion__content{animation:hide-accordion-content .3s ease;transform:translateY(-3rem);opacity:0;display:none}.wallets-accordion__content--visible{animation:show-accordion-content .3s ease;transform:translateY(0);opacity:1;display:block;padding-left:2.4rem;padding-right:2.4rem;padding-bottom:2.4rem}.wallets-accordion__dropdown{transition:all .3s ease;cursor:pointer;z-index:10;display:inline-block;position:relative;padding:2em;margin:-2em}.wallets-accordion__dropdown--open{transform:rotate(180deg);transition:all .3s ease}@keyframes show-accordion-content{from{transform:translateY(-3rem);opacity:0}to{transform:translateY(0);opacity:1}}@keyframes hide-accordion-content{from{transform:translateY(0);opacity:1}to{transform:translateY(-3rem);opacity:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsAccordion.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mBACI,cAAA,CACA,eAAA,CAAA,yDAAA,CACA,oBAAA,CACA,iBAAA,CAEA,4BACI,kBAAA,CAAA,4DAAA,CAGJ,2BACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,cAAA,CACA,UAAA,CACA,oBAAA,CACA,iBAAA,CAGI,2CACI,UAAA,CACA,aAAA,CACA,iBAAA,CACA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,MAAA,CACA,UAAA,CACA,WAAA,CACA,oBAAA,CACA,wDAAA,CACA,wBAAA,CACA,oBAAA,CACA,WAAA,CAKZ,4BACI,yCAAA,CACA,2BAAA,CACA,SAAA,CACA,YAAA,CAEA,qCACI,yCAAA,CACA,uBAAA,CACA,SAAA,CACA,aAAA,CACA,mBAAA,CAAA,oBAAA,CACA,qBAAA,CAIR,6BACI,uBAAA,CACA,cAAA,CACA,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,WAAA,CACA,WAAA,CAEA,mCACI,wBAAA,CACA,uBAAA,CAIR,kCACI,KACI,2BAAA,CACA,SAAA,CAEJ,GACI,uBAAA,CACA,SAAA,CAAA,CAIR,kCACI,KACI,uBAAA,CACA,SAAA,CAEJ,GACI,2BAAA,CACA,SAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-accordion {\\n    width: 123.2rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n    border-radius: 1.6rem;\\n    position: relative;\\n\\n    &--virtual {\\n        background: var(--system-light-8-primary-background, #fffafa);\\n    }\\n\\n    &__header {\\n        width: 100%;\\n        display: flex;\\n        align-items: center;\\n        padding: 2.4rem;\\n        gap: 2.4rem;\\n        border-radius: 1.6rem;\\n        position: relative;\\n\\n        &--virtual {\\n            &:before {\\n                content: '';\\n                display: block;\\n                position: absolute;\\n                inset: 0;\\n                width: 100%;\\n                height: 100%;\\n                border-radius: 1.6rem;\\n                background-image: url('../../public/images/wallet-demo-desktop-bg.svg');\\n                background-repeat: repeat;\\n                background-size: 6rem;\\n                opacity: 0.24;\\n            }\\n        }\\n    }\\n\\n    &__content {\\n        animation: hide-accordion-content 0.3s ease;\\n        transform: translateY(-3rem);\\n        opacity: 0;\\n        display: none;\\n\\n        &--visible {\\n            animation: show-accordion-content 0.3s ease;\\n            transform: translateY(0);\\n            opacity: 1;\\n            display: block;\\n            padding-inline: 2.4rem;\\n            padding-bottom: 2.4rem;\\n        }\\n    }\\n\\n    &__dropdown {\\n        transition: all 0.3s ease;\\n        cursor: pointer;\\n        z-index: 10;\\n        display: inline-block;\\n        position: relative;\\n        padding: 2em;\\n        margin: -2em;\\n\\n        &--open {\\n            transform: rotate(180deg);\\n            transition: all 0.3s ease;\\n        }\\n    }\\n\\n    @keyframes show-accordion-content {\\n        from {\\n            transform: translateY(-3rem);\\n            opacity: 0;\\n        }\\n        to {\\n            transform: translateY(0);\\n            opacity: 1;\\n        }\\n    }\\n\\n    @keyframes hide-accordion-content {\\n        from {\\n            transform: translateY(0);\\n            opacity: 1;\\n        }\\n        to {\\n            transform: translateY(-3rem);\\n            opacity: 0;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-action-screen{display:flex;flex-direction:column;align-items:center;gap:2.4rem}.wallets-action-screen__modal{padding:2.4rem;border-radius:.8rem;background:#fff;box-shadow:0px 32px 64px 0px rgba(14,14,14,.14)}.wallets-action-screen__content{display:flex;flex-direction:column;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsActionScreen.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CAEA,8BACI,cAAA,CACA,mBAAA,CACA,eAAA,CACA,+CAAA,CAGJ,gCACI,YAAA,CACA,qBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-action-screen {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n\\n    &__modal {\\n        padding: 2.4rem;\\n        border-radius: 0.8rem;\\n        background: #fff;\\n        box-shadow: 0px 32px 64px 0px rgba(14, 14, 14, 0.14);\\n    }\\n\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-add-more__card{display:flex;flex-direction:column;gap:2.4rem;padding:1.6rem;width:23.2rem;height:28.2rem;border-radius:1.6rem;flex-shrink:0;border:.1rem solid #d6dadb;border:.1rem solid var(--system-light-5-active-background, #d6dadb);background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem .4rem .6rem -0.2rem rgba(14,14,14,.03),0rem 1.2rem 1.6rem -0.4rem rgba(14,14,14,.08);margin-right:2rem}@media(max-width: 767px){.wallets-add-more__card{width:19.2rem;gap:1.6rem;margin-right:1.6rem}}.wallets-add-more__card:first-child{margin-left:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsAddMoreCard.scss\"],\"names\":[],\"mappings\":\"AA2pBI,wBACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,cAAA,CACA,aAAA,CACA,cAAA,CACA,oBAAA,CACA,aAAA,CACA,0BAAA,CAAA,mEAAA,CACA,eAAA,CAAA,yDAAA,CACA,oGAAA,CACA,iBAAA,CA9BJ,yBAkBA,wBAeQ,aAAA,CACA,UAAA,CACA,mBAAA,CAAA,CAGJ,oCACI,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-add-more {\\n    &__card {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 2.4rem;\\n        padding: 1.6rem;\\n        width: 23.2rem;\\n        height: 28.2rem;\\n        border-radius: 1.6rem;\\n        flex-shrink: 0;\\n        border: 0.1rem solid var(--system-light-5-active-background, #d6dadb);\\n        background: var(--system-light-8-primary-background, #fff);\\n        box-shadow: 0rem 0.4rem 0.6rem -0.2rem rgba(14, 14, 14, 0.03), 0rem 1.2rem 1.6rem -0.4rem rgba(14, 14, 14, 0.08);\\n        margin-right: 2rem;\\n\\n        @include mobile {\\n            width: 19.2rem;\\n            gap: 1.6rem;\\n            margin-right: 1.6rem;\\n        }\\n\\n        &:first-child {\\n            margin-left: 1rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-add-more__banner{border-radius:.8rem;display:flex;flex-direction:column;justify-content:space-between;width:20rem;height:12rem;padding:1.6rem;background:none}@media(max-width: 767px){.wallets-add-more__banner{width:16rem;height:9.6rem;padding:1rem;flex-shrink:0}}.wallets-add-more__banner-header{display:flex;justify-content:space-between}.wallets-add-more__banner-button{background-color:#fff;border:none;border-radius:.5rem;cursor:pointer;display:flex;align-items:center;justify-content:center;width:100%;padding:1rem;font-weight:700}@media(max-width: 767px){.wallets-add-more__banner-button{padding:.3rem .8rem}}.wallets-add-more__banner-button-icon{margin-right:.5rem}.wallets-add-more__banner-button--is-added{opacity:.3;cursor:default}.wallets-add-more__banner-landing-company{align-self:flex-start;border:.1rem solid #000;border-radius:.2rem;padding:0 .4rem;text-transform:uppercase}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsAddMoreCardBanner.scss\"],\"names\":[],\"mappings\":\"AA2pBI,0BACI,mBAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,eAAA,CA1BJ,yBAkBA,0BAWQ,WAAA,CACA,aAAA,CACA,YAAA,CACA,aAAA,CAAA,CAEJ,iCACI,YAAA,CACA,6BAAA,CAEJ,iCACI,qBAAA,CACA,WAAA,CACA,mBAAA,CACA,cAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CACA,YAAA,CACA,eAAA,CAhDR,yBAsCI,iCAaQ,mBAAA,CAAA,CAGJ,sCACI,kBAAA,CAGJ,2CACI,UAAA,CACA,cAAA,CAGR,0CACI,qBAAA,CACA,uBAAA,CACA,mBAAA,CACA,eAAA,CACA,wBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-add-more {\\n    &__banner {\\n        border-radius: 0.8rem;\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: space-between;\\n        width: 20rem;\\n        height: 12rem;\\n        padding: 1.6rem;\\n        background: none;\\n\\n        @include mobile {\\n            width: 16rem;\\n            height: 9.6rem;\\n            padding: 1rem;\\n            flex-shrink: 0;\\n        }\\n        &-header {\\n            display: flex;\\n            justify-content: space-between;\\n        }\\n        &-button {\\n            background-color: #ffffff;\\n            border: none;\\n            border-radius: 0.5rem;\\n            cursor: pointer;\\n            display: flex;\\n            align-items: center;\\n            justify-content: center;\\n            width: 100%;\\n            padding: 1rem;\\n            font-weight: 700;\\n\\n            @include mobile {\\n                padding: 0.3rem 0.8rem;\\n            }\\n\\n            &-icon {\\n                margin-right: 0.5rem;\\n            }\\n\\n            &--is-added {\\n                opacity: 0.3;\\n                cursor: default;\\n            }\\n        }\\n        &-landing-company {\\n            align-self: flex-start;\\n            border: 0.1rem solid #000;\\n            border-radius: 0.2rem;\\n            padding: 0 0.4rem;\\n            text-transform: uppercase;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-add-more__content{display:flex;flex-direction:column;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsAddMoreCardContent.scss\"],\"names\":[],\"mappings\":\"AA2pBI,2BACI,YAAA,CACA,qBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-add-more {\\n    &__content {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-add-more{display:flex;flex-direction:column;width:123.2rem;padding-top:2.4rem}@media(max-width: 767px){.wallets-add-more{padding-top:0;gap:.8rem}}.wallets-add-more__header{margin-bottom:1.6rem}@media(max-width: 767px){.wallets-add-more__header{padding-left:1.6rem;margin-bottom:0}}.wallets-add-more__carousel{overflow:hidden;background-color:#fff;padding:3.2rem 1.6rem;border-radius:.8rem;position:relative;border:.1rem solid #d6dadb;height:100%}@media(max-width: 767px){.wallets-add-more__carousel{padding:1.6rem 0 2.4rem 1.6rem;border-radius:0;border-radius:initial}}.wallets-add-more__carousel-wrapper{height:100%;display:flex;align-items:center;justify-content:flex-start}.wallets-add-more__carousel-btn{z-index:1;position:absolute;height:4rem;width:4rem;border-radius:50%;cursor:pointer;top:45%}.wallets-add-more__carousel-btn--prev{left:1.6rem}.wallets-add-more__carousel-btn--next{right:1.6rem}.wallets-add-more__carousel-btn:disabled{opacity:.3;display:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsAddMoreCarousel.scss\"],\"names\":[],\"mappings\":\"AA0pBA,kBACI,YAAA,CACA,qBAAA,CACA,cAAA,CACA,kBAAA,CArBA,yBAiBJ,kBAOQ,aAAA,CACA,SAAA,CAAA,CAGJ,0BACI,oBAAA,CA7BJ,yBA4BA,0BAIQ,mBAAA,CACA,eAAA,CAAA,CAGR,4BACI,eAAA,CACA,qBAAA,CACA,qBAAA,CACA,mBAAA,CACA,iBAAA,CACA,0BAAA,CACA,WAAA,CA3CJ,yBAoCA,4BAUQ,8BAAA,CACA,eAAA,CAAA,qBAAA,CAAA,CAGJ,oCACI,WAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CAGJ,gCACI,SAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,iBAAA,CACA,cAAA,CACA,OAAA,CAEA,sCACI,WAAA,CAEJ,sCACI,YAAA,CAEJ,yCACI,UAAA,CACA,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-add-more {\\n    display: flex;\\n    flex-direction: column;\\n    width: 123.2rem;\\n    padding-top: 2.4rem;\\n\\n    @include mobile {\\n        padding-top: 0;\\n        gap: 0.8rem;\\n    }\\n\\n    &__header {\\n        margin-bottom: 1.6rem;\\n\\n        @include mobile {\\n            padding-left: 1.6rem;\\n            margin-bottom: 0;\\n        }\\n    }\\n    &__carousel {\\n        overflow: hidden;\\n        background-color: #fff;\\n        padding: 3.2rem 1.6rem;\\n        border-radius: 0.8rem;\\n        position: relative;\\n        border: 0.1rem solid #d6dadb;\\n        height: 100%;\\n\\n        @include mobile {\\n            padding: 1.6rem 0 2.4rem 1.6rem;\\n            border-radius: unset;\\n        }\\n\\n        &-wrapper {\\n            height: 100%;\\n            display: flex;\\n            align-items: center;\\n            justify-content: flex-start;\\n        }\\n\\n        &-btn {\\n            z-index: 1;\\n            position: absolute;\\n            height: 4rem;\\n            width: 4rem;\\n            border-radius: 50%;\\n            cursor: pointer;\\n            top: 45%;\\n\\n            &--prev {\\n                left: 1.6rem;\\n            }\\n            &--next {\\n                right: 1.6rem;\\n            }\\n            &:disabled {\\n                opacity: 0.3;\\n                display: none;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-carousel-content{background-color:#f2f3f4;width:100vw;padding:2rem;overflow:hidden;gap:1.6rem}.wallets-carousel-content__container{height:-moz-max-content;height:max-content;display:flex;align-items:center;justify-content:flex-start;gap:2.4rem}.wallets-carousel-content__progress-bar{display:flex;align-items:center;justify-content:center;padding:1.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsCarouselContent.scss\"],\"names\":[],\"mappings\":\"AA0pBA,0BACI,wBAAA,CACA,WAAA,CACA,YAAA,CACA,eAAA,CACA,UAAA,CAEA,qCACI,uBAAA,CAAA,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,0BAAA,CACA,UAAA,CAGJ,wCACI,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-carousel-content {\\n    background-color: #f2f3f4;\\n    width: 100vw;\\n    padding: 2rem;\\n    overflow: hidden;\\n    gap: 1.6rem;\\n\\n    &__container {\\n        height: max-content;\\n        display: flex;\\n        align-items: center;\\n        justify-content: flex-start;\\n        gap: 2.4rem;\\n    }\\n\\n    &__progress-bar {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        padding: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-cashier{display:flex;flex-direction:column;height:calc(100vh - 8.4rem)}@media(max-width: 767px){.wallets-cashier{height:calc(100svh - 4rem)}}.wallets-cashier-content{padding-top:2.4rem;display:flex;gap:2.4rem;justify-content:center;flex:1;background-color:#fff;overflow:scroll}@media(max-width: 767px){.wallets-cashier-content{padding:2.4rem 1.6rem 0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletCashier.scss\"],\"names\":[],\"mappings\":\"AA0pBA,iBACI,YAAA,CACA,qBAAA,CACA,2BAAA,CApBA,yBAiBJ,iBAMQ,0BAAA,CAAA,CAIR,yBACI,kBAAA,CACA,YAAA,CACA,UAAA,CACA,sBAAA,CACA,MAAA,CACA,qBAAA,CACA,eAAA,CAlCA,yBA2BJ,yBAUQ,uBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-cashier {\\n    display: flex;\\n    flex-direction: column;\\n    height: calc(100vh - (4.8rem + 3.6rem));\\n\\n    @include mobile {\\n        height: calc(100svh - 4rem);\\n    }\\n}\\n\\n.wallets-cashier-content {\\n    padding-top: 2.4rem;\\n    display: flex;\\n    gap: 2.4rem;\\n    justify-content: center;\\n    flex: 1;\\n    background-color: #ffffff;\\n    overflow: scroll;\\n\\n    @include mobile {\\n        padding: 2.4rem 1.6rem 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-action-modal{width:44rem;padding:2.4rem;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff);display:flex;flex-direction:column;gap:2.4rem}@media(max-width: 767px){.wallets-action-modal{width:auto;padding:1.6rem;gap:1.6rem}}.wallets-action-modal__buttons-container{height:4rem;display:flex;justify-content:flex-end;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletActionModal.scss\"],\"names\":[],\"mappings\":\"AA0pBA,sBACI,WAAA,CACA,cAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA,CAxBA,yBAiBJ,sBAUQ,UAAA,CACA,cAAA,CACA,UAAA,CAAA,CAGJ,yCACI,WAAA,CACA,YAAA,CACA,wBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-action-modal {\\n    width: 44rem;\\n    padding: 2.4rem;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n    display: flex;\\n    flex-direction: column;\\n    gap: 2.4rem;\\n\\n    @include mobile {\\n        width: auto;\\n        padding: 1.6rem;\\n        gap: 1.6rem;\\n    }\\n\\n    &__buttons-container {\\n        height: 4rem;\\n        display: flex;\\n        justify-content: flex-end;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-cashier-header{width:100%;max-width:128rem;height:16rem;margin:0 auto;padding-top:2.4rem;position:relative;overflow:hidden;display:flex;flex-direction:column;justify-content:space-between;gap:1.6rem}@media(max-width: 767px){.wallets-cashier-header{padding-top:0;height:-moz-fit-content;height:fit-content}}.wallets-cashier-header__info{display:flex;justify-content:space-between;align-items:center;padding-left:4rem;padding-right:4rem}@media(max-width: 767px){.wallets-cashier-header__info{padding:1.6rem 1.6rem 0rem}}.wallets-cashier-header__top-left-info{display:flex;flex-direction:column;gap:.6rem}.wallets-cashier-header__details{display:flex;gap:2.4rem;align-items:center}@media(max-width: 767px){.wallets-cashier-header__details{opacity:1;max-height:2rem;transition:opacity .25s ease,max-height .25s ease;gap:.8rem}.wallets-cashier-header__details--hide-details{max-height:0;opacity:0}}.wallets-cashier-header__top-right-info{display:flex;gap:1.6rem;align-items:start}@media(max-width: 767px){.wallets-cashier-header__top-right-info{gap:.8rem}}@media(max-width: 767px){.wallets-cashier-header__currency-icon>:first-child{max-height:4.8rem;transition:opacity .2s ease,max-height .2s ease}.wallets-cashier-header__currency-icon--hide-currency-icon>:first-child{max-height:0;opacity:0}}.wallets-cashier-header__close-icon{cursor:pointer}.wallets-cashier-header__close-icon--white path{fill:#fff;fill:var(--light-8-primary-background, #fff)}.wallets-cashier-header__tabs{display:flex;overflow-x:scroll;padding-left:4rem;padding-right:4rem;-ms-overflow-style:none;scrollbar-width:none}.wallets-cashier-header__tabs::-webkit-scrollbar{display:none}@media(max-width: 767px){.wallets-cashier-header__tabs{padding-left:1.6rem;padding-right:1.6rem}}.wallets-cashier-header__tab{all:unset;display:flex;min-width:11.2rem;height:4.8rem;padding-left:1.6rem;padding-right:1.6rem;justify-content:center;align-items:center;gap:.8rem;flex-shrink:0;cursor:pointer}@media(max-width: 767px){.wallets-cashier-header__tab{height:4rem;min-width:7.2rem;padding-left:2.4rem;padding-right:2.4rem}}.wallets-cashier-header__tab--active{border-radius:1.6rem 1.6rem 0rem 0rem;background:#fff;background:var(--light-8-primary-background, #fff)}.wallets-cashier-header__tab-icon--system-dark-2-general-text path{fill:#c2c2c2;fill:var(--system-dark-2-general-text, #c2c2c2)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletCashierHeader.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wBACI,UAAA,CACA,gBAAA,CACA,YAAA,CACA,aAAA,CACA,kBAAA,CACA,iBAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,6BAAA,CACA,UAAA,CA5BA,yBAiBJ,wBAcQ,aAAA,CACA,uBAAA,CAAA,kBAAA,CAAA,CAGJ,8BACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,iBAAA,CAAA,kBAAA,CAvCJ,yBAmCA,8BAOQ,0BAAA,CAAA,CAIR,uCACI,YAAA,CACA,qBAAA,CACA,SAAA,CAGJ,iCACI,YAAA,CACA,UAAA,CACA,kBAAA,CAvDJ,yBAoDA,iCAMQ,SAAA,CACA,eAAA,CACA,iDAAA,CACA,SAAA,CAEA,+CACI,YAAA,CACA,SAAA,CAAA,CAKZ,wCACI,YAAA,CACA,UAAA,CACA,iBAAA,CAzEJ,yBAsEA,wCAMQ,SAAA,CAAA,CA5ER,yBAkFQ,oDACI,iBAAA,CACA,+CAAA,CAGJ,wEACI,YAAA,CACA,SAAA,CAAA,CAKZ,oCACI,cAAA,CAGI,gDACI,SAAA,CAAA,4CAAA,CAKZ,8BACI,YAAA,CACA,iBAAA,CACA,iBAAA,CAAA,kBAAA,CACA,uBAAA,CACA,oBAAA,CAEA,iDACI,YAAA,CAhHR,yBAwGA,8BAYQ,mBAAA,CAAA,oBAAA,CAAA,CAIR,6BACI,SAAA,CACA,YAAA,CACA,iBAAA,CACA,aAAA,CACA,mBAAA,CAAA,oBAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA,CACA,aAAA,CACA,cAAA,CAlIJ,yBAwHA,6BAaQ,WAAA,CACA,gBAAA,CACA,mBAAA,CAAA,oBAAA,CAAA,CAGJ,qCACI,qCAAA,CACA,eAAA,CAAA,kDAAA,CAMA,mEACI,YAAA,CAAA,+CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-cashier-header {\\n    width: 100%;\\n    max-width: 128rem;\\n    height: 16rem;\\n    margin: 0 auto;\\n    padding-top: 2.4rem;\\n    position: relative;\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    gap: 1.6rem;\\n\\n    @include mobile {\\n        padding-top: 0;\\n        height: fit-content;\\n    }\\n\\n    &__info {\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        padding-inline: 4rem;\\n\\n        @include mobile {\\n            padding: 1.6rem 1.6rem 0rem;\\n        }\\n    }\\n\\n    &__top-left-info {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.6rem;\\n    }\\n\\n    &__details {\\n        display: flex;\\n        gap: 2.4rem;\\n        align-items: center;\\n\\n        @include mobile {\\n            opacity: 1;\\n            max-height: 2rem;\\n            transition: opacity 0.25s ease, max-height 0.25s ease;\\n            gap: 0.8rem;\\n\\n            &--hide-details {\\n                max-height: 0;\\n                opacity: 0;\\n            }\\n        }\\n    }\\n\\n    &__top-right-info {\\n        display: flex;\\n        gap: 1.6rem;\\n        align-items: start;\\n\\n        @include mobile {\\n            gap: 0.8rem;\\n        }\\n    }\\n\\n    &__currency-icon {\\n        @include mobile {\\n            & > :first-child {\\n                max-height: 4.8rem;\\n                transition: opacity 0.2s ease, max-height 0.2s ease;\\n            }\\n\\n            &--hide-currency-icon > :first-child {\\n                max-height: 0;\\n                opacity: 0;\\n            }\\n        }\\n    }\\n\\n    &__close-icon {\\n        cursor: pointer;\\n\\n        &--white {\\n            path {\\n                fill: var(--light-8-primary-background, #fff);\\n            }\\n        }\\n    }\\n\\n    &__tabs {\\n        display: flex;\\n        overflow-x: scroll;\\n        padding-inline: 4rem;\\n        -ms-overflow-style: none;\\n        scrollbar-width: none;\\n\\n        &::-webkit-scrollbar {\\n            display: none;\\n        }\\n\\n        @include mobile {\\n            padding-inline: 1.6rem;\\n        }\\n    }\\n\\n    &__tab {\\n        all: unset;\\n        display: flex;\\n        min-width: 11.2rem;\\n        height: 4.8rem;\\n        padding-inline: 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.8rem;\\n        flex-shrink: 0;\\n        cursor: pointer;\\n\\n        @include mobile {\\n            height: 4rem;\\n            min-width: 7.2rem;\\n            padding-inline: 2.4rem;\\n        }\\n\\n        &--active {\\n            border-radius: 1.6rem 1.6rem 0rem 0rem;\\n            background: var(--light-8-primary-background, #fff);\\n        }\\n    }\\n\\n    &__tab-icon {\\n        &--system-dark-2-general-text {\\n            path {\\n                fill: var(--system-dark-2-general-text, #c2c2c2);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-crypto{position:relative;width:100%;display:flex;justify-content:center}@media(max-width: 767px){.wallets-deposit-crypto{flex-direction:column}}.wallets-deposit-crypto__main-content{display:flex;flex-direction:column;padding-top:2.4rem;gap:2.4rem;position:relative}@media(max-width: 767px){.wallets-deposit-crypto__main-content{padding:0}}@media(max-width: 767px){.wallets-deposit-crypto{width:100%;justify-content:start;padding-top:0rem;gap:1.6rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DepositCrypto.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wBACI,iBAAA,CACA,UAAA,CACA,YAAA,CACA,sBAAA,CArBA,yBAiBJ,wBAOQ,qBAAA,CAAA,CAGJ,sCACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,iBAAA,CAhCJ,yBA2BA,sCAQQ,SAAA,CAAA,CAnCR,yBAiBJ,wBAuBQ,UAAA,CACA,qBAAA,CACA,gBAAA,CACA,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-crypto {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n\\n    @include mobile {\\n        flex-direction: column;\\n    }\\n\\n    &__main-content {\\n        display: flex;\\n        flex-direction: column;\\n        padding-top: 2.4rem;\\n        gap: 2.4rem;\\n        position: relative;\\n\\n        @include mobile {\\n            padding: 0;\\n        }\\n    }\\n\\n    @include mobile {\\n        width: 100%;\\n        justify-content: start;\\n        padding-top: 0rem;\\n        gap: 1.6rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-crypto-address{display:flex;flex-direction:column;align-items:center;gap:2.4rem;min-height:6rem}.wallets-deposit-crypto-address__loader{width:100%;display:flex;align-items:center;justify-content:center}.wallets-deposit-crypto-address__hash{width:-moz-fit-content;width:fit-content;display:flex;align-items:center;justify-content:space-between;border:.1rem solid #e6e6e6;border-radius:.4rem}@media(max-width: 767px){.wallets-deposit-crypto-address__hash{width:100%;max-width:32.8rem}}.wallets-deposit-crypto-address__hash-text{overflow-x:hidden;padding:.8rem;text-overflow:ellipsis}.wallets-deposit-crypto-address__hash-clipboard{display:flex;align-items:center;height:100%;gap:.8rem}.wallets-deposit-crypto-address__hash-clipboard .wallets-clipboard{padding:.8rem .8rem .8rem 0}.wallets-deposit-crypto-address__hash-divider{width:1px;height:100%;background:#e6e6e6}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DepositCryptoAddress.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,eAAA,CAEA,wCACI,UAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,sCACI,sBAAA,CAAA,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,0BAAA,CACA,mBAAA,CArCJ,yBA+BA,sCASQ,UAAA,CACA,iBAAA,CAAA,CAGJ,2CACI,iBAAA,CACA,aAAA,CACA,sBAAA,CAGJ,gDACI,YAAA,CACA,kBAAA,CACA,WAAA,CACA,SAAA,CAEA,mEACI,2BAAA,CAIR,8CACI,SAAA,CACA,WAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-crypto-address {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    gap: 2.4rem;\\n    min-height: 6rem;\\n\\n    &__loader {\\n        width: 100%;\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n\\n    &__hash {\\n        width: fit-content;\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n        border: 0.1rem solid #e6e6e6;\\n        border-radius: 0.4rem;\\n\\n        @include mobile {\\n            width: 100%;\\n            max-width: 32.8rem;\\n        }\\n\\n        &-text {\\n            overflow-x: hidden;\\n            padding: 0.8rem;\\n            text-overflow: ellipsis;\\n        }\\n\\n        &-clipboard {\\n            display: flex;\\n            align-items: center;\\n            height: 100%;\\n            gap: 0.8rem;\\n\\n            & .wallets-clipboard {\\n                padding: 0.8rem 0.8rem 0.8rem 0;\\n            }\\n        }\\n\\n        &-divider {\\n            width: 1px;\\n            height: 100%;\\n            background: #e6e6e6;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-crypto-disclaimers{display:flex;flex-direction:column;justify-content:center;gap:2.4rem}@media(max-width: 767px){.wallets-deposit-crypto-disclaimers{gap:1.6rem}}.wallets-deposit-crypto-disclaimers__content{line-height:1.4rem}.wallets-deposit-crypto-disclaimers__note{font-size:1.2rem;line-height:1.8rem;text-align:center;display:flex;justify-content:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DepositCryptoDisclaimers.scss\"],\"names\":[],\"mappings\":\"AA0pBA,oCACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,UAAA,CArBA,yBAiBJ,oCAOQ,UAAA,CAAA,CAGJ,6CACI,kBAAA,CAGJ,0CACI,gBAAA,CACA,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,sBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-crypto-disclaimers {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    gap: 2.4rem;\\n\\n    @include mobile {\\n        gap: 1.6rem;\\n    }\\n\\n    &__content {\\n        line-height: 1.4rem;\\n    }\\n\\n    &__note {\\n        font-size: 1.2rem;\\n        line-height: 1.8rem;\\n        text-align: center;\\n        display: flex;\\n        justify-content: center;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-crypto-try-fiat-onramp{background-color:#f2f3f4;background-color:var(--general-section-1, #f2f3f4);border-radius:.8rem;margin:0 9.3rem;padding:1.6rem 2.4rem}.wallets-deposit-crypto-try-fiat-onramp__link{font-weight:400}@media(max-width: 767px){.wallets-deposit-crypto-try-fiat-onramp{margin:0}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DepositCryptoTryFiatOnRamp.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wCACI,wBAAA,CAAA,kDAAA,CACA,mBAAA,CACA,eAAA,CACA,qBAAA,CAEA,8CACI,eAAA,CAxBJ,yBAiBJ,wCAWQ,QAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-crypto-try-fiat-onramp {\\n    background-color: var(--general-section-1, #f2f3f4);\\n    border-radius: 0.8rem;\\n    margin: 0 9.3rem;\\n    padding: 1.6rem 2.4rem;\\n\\n    &__link {\\n        font-weight: 400;\\n    }\\n\\n    @include mobile {\\n        margin: 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-deposit-fiat__iframe{position:relative;width:50%;max-width:58.8rem;border:none}@media(max-width: 767px){.wallets-deposit-fiat__iframe{width:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DepositFiat.scss\"],\"names\":[],\"mappings\":\"AA2pBI,8BACI,iBAAA,CACA,SAAA,CACA,iBAAA,CACA,WAAA,CAtBJ,yBAkBA,8BAOQ,UAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-deposit-fiat {\\n    &__iframe {\\n        position: relative;\\n        width: 50%;\\n        max-width: 58.8rem;\\n        border: none;\\n\\n        @include mobile {\\n            width: 100%;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-reset-balance{display:flex;align-items:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ResetBalance.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,YAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-reset-balance {\\n    display: flex;\\n    align-items: center;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transaction-status{position:absolute;top:0;right:4rem;width:28.2rem;display:flex;align-self:stretch;flex-direction:column;gap:.8rem;background-color:#f2f3f4;background-color:var(--general-section-1, #f2f3f4);border-radius:.8rem;padding:1.6rem 2.4rem}.wallets-transaction-status__header{width:100%;display:flex;justify-content:space-between;align-items:center}.wallets-transaction-status__body{position:relative;width:100%;display:flex;flex-direction:column;gap:.8rem}@media(max-width: 767px){.wallets-transaction-status{width:100%;position:relative}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionStatus.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BAEI,iBAAA,CACA,KAAA,CACA,UAAA,CACA,aAAA,CAEA,YAAA,CACA,kBAAA,CACA,qBAAA,CACA,SAAA,CACA,wBAAA,CAAA,kDAAA,CACA,mBAAA,CACA,qBAAA,CAEA,oCACI,UAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CAGJ,kCACI,iBAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,SAAA,CA5CJ,yBAiBJ,4BA+BQ,UAAA,CACA,iBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transaction-status {\\n    /* This positioning is temporary, ideally it should be determined by the parent component whenever we use `TransactionStatus` */\\n    position: absolute;\\n    top: 0;\\n    right: 4rem;\\n    width: 28.2rem;\\n\\n    display: flex;\\n    align-self: stretch;\\n    flex-direction: column;\\n    gap: 0.8rem;\\n    background-color: var(--general-section-1, #f2f3f4);\\n    border-radius: 0.8rem;\\n    padding: 1.6rem 2.4rem;\\n\\n    &__header {\\n        width: 100%;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n    }\\n\\n    &__body {\\n        position: relative;\\n        width: 100%;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n    }\\n\\n    @include mobile {\\n        width: 100%;\\n        position: relative;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-crypto-transaction{position:relative;width:100%;display:flex;flex-direction:column;flex:1}.wallets-crypto-transaction__type-and-status{width:100%;display:flex;justify-content:space-between;align-items:flex-start}.wallets-crypto-transaction__amount-and-date{width:100%;display:flex;justify-content:space-between;align-items:center;margin:.4rem 0}.wallets-crypto-transaction__status{display:flex;align-items:center;gap:.2rem}.wallets-crypto-transaction__status__dot{width:.4rem;height:.4rem;border-radius:.2rem}.wallets-crypto-transaction__status__dot--pending,.wallets-crypto-transaction__status__dot--locked,.wallets-crypto-transaction__status__dot--performing-blockchain-txn,.wallets-crypto-transaction__status__dot--processing,.wallets-crypto-transaction__status__dot--reverting,.wallets-crypto-transaction__status__dot--verified{background:#ffad3a;background:var(--status-warning, #ffad3a)}.wallets-crypto-transaction__status__dot--confirmed,.wallets-crypto-transaction__status__dot--sent{background:#4bb4b3;background:var(--status-success, #4bb4b3)}.wallets-crypto-transaction__status__dot--error,.wallets-crypto-transaction__status__dot--cancelled,.wallets-crypto-transaction__status__dot--rejected,.wallets-crypto-transaction__status__dot--reverted{background:#ec3f3f;background:var(--status-danger, #ec3f3f)}.wallets-crypto-transaction__cancel-button{margin-left:.3rem;padding:0;border:none;cursor:pointer}.wallets-crypto-transaction__red-text{color:#ff444f;color:var(--brand-coral, #ff444f);text-decoration:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CryptoTransaction.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BACI,iBAAA,CACA,UAAA,CACA,YAAA,CACA,qBAAA,CACA,MAAA,CAEA,6CACI,UAAA,CACA,YAAA,CACA,6BAAA,CACA,sBAAA,CAGJ,6CACI,UAAA,CACA,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,cAAA,CAGJ,oCACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,yCACI,WAAA,CACA,YAAA,CACA,mBAAA,CAEA,mUAMI,kBAAA,CAAA,yCAAA,CAGJ,mGAEI,kBAAA,CAAA,yCAAA,CAGJ,0MAII,kBAAA,CAAA,wCAAA,CAKZ,2CACI,iBAAA,CACA,SAAA,CACA,WAAA,CACA,cAAA,CAGJ,sCACI,aAAA,CAAA,iCAAA,CACA,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-crypto-transaction {\\n    position: relative;\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n\\n    &__type-and-status {\\n        width: 100%;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: flex-start;\\n    }\\n\\n    &__amount-and-date {\\n        width: 100%;\\n        display: flex;\\n        justify-content: space-between;\\n        align-items: center;\\n        margin: 0.4rem 0;\\n    }\\n\\n    &__status {\\n        display: flex;\\n        align-items: center;\\n        gap: 0.2rem;\\n\\n        &__dot {\\n            width: 0.4rem;\\n            height: 0.4rem;\\n            border-radius: 0.2rem;\\n\\n            &--pending,\\n            &--locked,\\n            &--performing-blockchain-txn,\\n            &--processing,\\n            &--reverting,\\n            &--verified {\\n                background: var(--status-warning, #ffad3a);\\n            }\\n\\n            &--confirmed,\\n            &--sent {\\n                background: var(--status-success, #4bb4b3);\\n            }\\n\\n            &--error,\\n            &--cancelled,\\n            &--rejected,\\n            &--reverted {\\n                background: var(--status-danger, #ec3f3f);\\n            }\\n        }\\n    }\\n\\n    &__cancel-button {\\n        margin-left: 0.3rem;\\n        padding: 0;\\n        border: none;\\n        cursor: pointer;\\n    }\\n\\n    &__red-text {\\n        color: var(--brand-coral, #ff444f);\\n        text-decoration: none;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions{width:100%;display:flex;flex-direction:column;align-items:center}.wallets-transactions__header{width:100%;max-width:80rem;display:flex;gap:16px;justify-content:flex-end}.wallets-transactions__toggle{display:flex;align-items:center;gap:8px;color:#333;color:var(--system-light-2-general-text, #333);font-size:14px;font-style:normal;font-weight:400;line-height:20px}.wallets-transactions__toggle-switch{height:0;width:0;visibility:hidden}.wallets-transactions__toggle-switch__label{display:flex;align-items:center;margin-left:auto;margin-right:1.6rem;padding-left:.4rem;cursor:pointer;width:4.9rem;height:2.52rem;background:var(--general-disabled);border-radius:4.9rem;transition:background-color .25s}.wallets-transactions__toggle-switch__button{width:1.9rem;height:1.9rem;border-radius:1.9rem;transition:transform .25s;background:var(--text-colored-background)}.wallets-transactions__toggle-switch:checked+.wallets-transactions__toggle-switch__label{background:#4bb4b3}.wallets-transactions__toggle-switch:checked+.wallets-transactions__toggle-switch__label .wallets-transactions__toggle-switch__button{transform:translateX(2.25rem)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Transactions.scss\"],\"names\":[],\"mappings\":\"AA0pBA,sBACI,UAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CAEA,8BACI,UAAA,CACA,eAAA,CACA,YAAA,CACA,QAAA,CACA,wBAAA,CAGJ,8BACI,YAAA,CACA,kBAAA,CACA,OAAA,CACA,UAAA,CAAA,8CAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAEA,qCACI,QAAA,CACA,OAAA,CACA,iBAAA,CAEA,4CACI,YAAA,CACA,kBAAA,CACA,gBAAA,CACA,mBAAA,CACA,kBAAA,CACA,cAAA,CACA,YAAA,CACA,cAAA,CACA,kCAAA,CACA,oBAAA,CACA,gCAAA,CAEJ,6CACI,YAAA,CACA,aAAA,CACA,oBAAA,CACA,yBAAA,CACA,yCAAA,CAGJ,yFACI,kBAAA,CAEJ,sIACI,6BAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n\\n    &__header {\\n        width: 100%;\\n        max-width: 80rem;\\n        display: flex;\\n        gap: 16px;\\n        justify-content: flex-end;\\n    }\\n\\n    &__toggle {\\n        display: flex;\\n        align-items: center;\\n        gap: 8px;\\n        color: var(--system-light-2-general-text, #333);\\n\\n        /* desktop/paragraph/P2 - regular */\\n        font-size: 14px;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 20px; /* 142.857% */\\n\\n        &-switch {\\n            height: 0;\\n            width: 0;\\n            visibility: hidden;\\n\\n            &__label {\\n                display: flex;\\n                align-items: center;\\n                margin-left: auto;\\n                margin-right: 1.6rem;\\n                padding-left: 0.4rem;\\n                cursor: pointer;\\n                width: 4.9rem;\\n                height: 2.52rem;\\n                background: var(--general-disabled);\\n                border-radius: 4.9rem;\\n                transition: background-color 0.25s;\\n            }\\n            &__button {\\n                width: 1.9rem;\\n                height: 1.9rem;\\n                border-radius: 1.9rem;\\n                transition: transform 0.25s;\\n                background: var(--text-colored-background);\\n            }\\n\\n            &:checked + &__label {\\n                background: #4bb4b3;\\n            }\\n            &:checked + &__label &__button {\\n                transform: translateX(2.25rem);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-completed{position:relative}.wallets-transactions-completed__group-title{width:7.4rem;height:1.4rem;color:#999;color:var(--system-light-3-less-prominent-text, #999);text-align:right;font-size:1rem;font-style:normal;font-weight:400;line-height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsCompleted.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,iBAAA,CAEA,6CACI,YAAA,CACA,aAAA,CACA,UAAA,CAAA,qDAAA,CACA,gBAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-completed {\\n    position: relative;\\n\\n    &__group-title {\\n        width: 7.4rem;\\n        height: 1.4rem;\\n        color: var(--system-light-3-less-prominent-text, #999);\\n        text-align: right;\\n\\n        /* desktop/extra small/XS - regular */\\n        font-size: 1rem;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 1.4rem; /* 140% */\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-completed-row{display:flex;padding:1.6rem;justify-content:space-between;align-items:center;border-top:.1rem solid #e5e5e5;border-top:.1rem solid var(--system-light-3-border, #e5e5e5)}.wallets-transactions-completed-row-content{display:flex;justify-content:space-between}.wallets-transactions-completed-row__account-details{display:flex;width:-moz-max-content;width:max-content;gap:.8rem}.wallets-transactions-completed-row__account-details__action-type{color:#999;color:var(--system-light-3-less-prominent-text, #999);font-size:1.2rem;font-style:normal;font-weight:400;line-height:1.8rem;text-transform:capitalize}.wallets-transactions-completed-row__account-details__wallet-name{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-transactions-completed-row__transaction-details__amount{color:#4bb4b3;color:var(--status-light-success, #4bb4b3);text-align:right;font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-transactions-completed-row__transaction-details__amount--negative{color:#ec3f3f;color:var(--status-light-danger, #ec3f3f)}.wallets-transactions-completed-row__transaction-details__balance{color:#999;color:var(--system-light-3-less-prominent-text, #999);text-align:right;font-size:1rem;font-style:normal;font-weight:400;line-height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsCompletedRow.scss\"],\"names\":[],\"mappings\":\"AA0pBA,oCACI,YAAA,CACA,cAAA,CACA,6BAAA,CACA,kBAAA,CACA,8BAAA,CAAA,4DAAA,CAEA,4CACI,YAAA,CACA,6BAAA,CAGJ,qDACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,SAAA,CAEA,kEACI,UAAA,CAAA,qDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,yBAAA,CAGJ,kEACI,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAKJ,iEACI,aAAA,CAAA,0CAAA,CACA,gBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAEA,2EACI,aAAA,CAAA,yCAAA,CAIR,kEACI,UAAA,CAAA,qDAAA,CACA,gBAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-completed-row {\\n    display: flex;\\n    padding: 1.6rem;\\n    justify-content: space-between;\\n    align-items: center;\\n    border-top: 0.1rem solid var(--system-light-3-border, #e5e5e5);\\n\\n    &-content {\\n        display: flex;\\n        justify-content: space-between;\\n    }\\n\\n    &__account-details {\\n        display: flex;\\n        width: max-content;\\n        gap: 0.8rem;\\n\\n        &__action-type {\\n            color: var(--system-light-3-less-prominent-text, #999);\\n\\n            /* desktop/small/S - regular */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 400;\\n            line-height: 1.8rem; /* 150% */\\n            text-transform: capitalize;\\n        }\\n\\n        &__wallet-name {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n        }\\n    }\\n\\n    &__transaction-details {\\n        &__amount {\\n            color: var(--status-light-success, #4bb4b3);\\n            text-align: right;\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n\\n            &--negative {\\n                color: var(--status-light-danger, #ec3f3f);\\n            }\\n        }\\n\\n        &__balance {\\n            color: var(--system-light-3-less-prominent-text, #999);\\n            text-align: right;\\n\\n            /* desktop/extra small/XS - regular */\\n            font-size: 1rem;\\n            font-style: normal;\\n            font-weight: 400;\\n            line-height: 1.4rem; /* 140% */\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-no-data-state{display:flex;padding-top:2.4rem;padding-bottom:1.6rem;flex-direction:column;justify-content:center;align-items:center;gap:2.4rem}.wallets-transactions-no-data-state__title{color:#333;color:var(--system-light-1-prominent-text, #333);text-align:center;font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-transactions-no-data-state__description{color:#999;color:var(--system-light-3-less-prominent-text, #999);text-align:center;font-size:1.4rem;font-style:normal;font-weight:400;line-height:2rem}.wallets-transactions-no-data-state__buttons{display:flex;align-items:center;gap:2.4rem}.wallets-transactions-no-data-state__buttons__transfer{all:unset;cursor:pointer;border-radius:.4rem;border:.2rem solid #999;border:.2rem solid var(--system-light-3-less-prominent-text, #999);padding:1rem 1.6rem;color:#333;color:var(--system-light-1-prominent-text, #333);text-align:center;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-transactions-no-data-state__buttons__deposit{all:unset;cursor:pointer;border-radius:.4rem;border:.2rem solid #ff444f;border:.2rem solid var(--button-primary-default, #ff444f);background:#ff444f;background:var(--button-primary-default, #ff444f);padding:1rem 1.6rem;color:#fff;color:var(--system-dark-1-prominent-text, #fff);text-align:center;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsNoDataState.scss\"],\"names\":[],\"mappings\":\"AA0pBA,oCACI,YAAA,CACA,kBAAA,CAAA,qBAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CAEA,2CACI,UAAA,CAAA,gDAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,iDACI,UAAA,CAAA,qDAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,6CACI,YAAA,CACA,kBAAA,CACA,UAAA,CAEA,uDACI,SAAA,CACA,cAAA,CACA,mBAAA,CACA,uBAAA,CAAA,kEAAA,CACA,mBAAA,CACA,UAAA,CAAA,gDAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,sDACI,SAAA,CACA,cAAA,CACA,mBAAA,CACA,0BAAA,CAAA,yDAAA,CACA,kBAAA,CAAA,iDAAA,CACA,mBAAA,CACA,UAAA,CAAA,+CAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-no-data-state {\\n    display: flex;\\n    padding-block: 2.4rem 1.6rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2.4rem;\\n\\n    &__title {\\n        color: var(--system-light-1-prominent-text, #333);\\n        text-align: center;\\n\\n        /* desktop/paragraph/P1 - bold */\\n        font-size: 1.6rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2.4rem; /* 150% */\\n    }\\n\\n    &__description {\\n        color: var(--system-light-3-less-prominent-text, #999);\\n        text-align: center;\\n\\n        /* desktop/paragraph/P2 - regular */\\n        font-size: 1.4rem;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 2rem; /* 142.857% */\\n    }\\n\\n    &__buttons {\\n        display: flex;\\n        align-items: center;\\n        gap: 2.4rem;\\n\\n        &__transfer {\\n            all: unset;\\n            cursor: pointer;\\n            border-radius: 0.4rem;\\n            border: 0.2rem solid var(--system-light-3-less-prominent-text, #999);\\n            padding: 1rem 1.6rem;\\n            color: var(--system-light-1-prominent-text, #333);\\n            text-align: center;\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n\\n        &__deposit {\\n            all: unset;\\n            cursor: pointer;\\n            border-radius: 0.4rem;\\n            border: 0.2rem solid var(--button-primary-default, #ff444f);\\n            background: var(--button-primary-default, #ff444f);\\n            padding: 1rem 1.6rem;\\n            color: var(--system-dark-1-prominent-text, #fff);\\n            text-align: center;\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-pending{position:relative}.wallets-transactions-pending__group-title{width:7.4rem;height:1.4rem;color:#999;color:var(--system-light-3-less-prominent-text, #999);text-align:right;font-size:1rem;font-style:normal;font-weight:400;line-height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsPending.scss\"],\"names\":[],\"mappings\":\"AA0pBA,8BACI,iBAAA,CAEA,2CACI,YAAA,CACA,aAAA,CACA,UAAA,CAAA,qDAAA,CACA,gBAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-pending {\\n    position: relative;\\n\\n    &__group-title {\\n        width: 7.4rem;\\n        height: 1.4rem;\\n        color: var(--system-light-3-less-prominent-text, #999);\\n        text-align: right;\\n\\n        /* desktop/extra small/XS - regular */\\n        font-size: 1rem;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 1.4rem; /* 140% */\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-pending-row{width:100%;height:7.8rem;display:grid;grid-template-columns:1.8fr repeat(4, 1fr) repeat(2, 2fr);grid-gap:1.6rem;gap:1.6rem;align-items:center;border-top:.1rem solid #e5e5e5;border-top:.1rem solid var(--system-light-3-border, #e5e5e5);padding-left:1.6rem;padding-right:1.6rem}.wallets-transactions-pending-row-details{display:flex;width:-moz-max-content;width:max-content;gap:.8rem}.wallets-transactions-pending-row-details__wallet-name{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-transactions-pending-row__title{color:#999;color:var(--system-light-3-less-prominent-text, #999);font-size:1.2rem;font-style:normal;font-weight:400;line-height:1.8rem;text-transform:capitalize}.wallets-transactions-pending-row__transaction-address{width:7rem}.wallets-transactions-pending-row__transaction-amount{color:#ec3f3f;color:var(--status-light-danger, #ec3f3f);text-align:right;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-transactions-pending-row__transaction-amount__deposit{color:#4bb4b3;color:var(--status-light-success, #4bb4b3)}.wallets-transactions-pending-row__transaction-hash{width:9.8rem}.wallets-transactions-pending-row__transaction-status{display:flex;justify-content:flex-end}.wallets-transactions-pending-row__transaction-value{white-space:nowrap;width:100%;color:#ff444f;color:var(--brand-coral, #ff444f);font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-transactions-pending-row__transaction-value--center{text-align:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsPendingRow.scss\"],\"names\":[],\"mappings\":\"AA0pBA,kCACI,UAAA,CACA,aAAA,CACA,YAAA,CACA,yDAAA,CACA,eAAA,CAAA,UAAA,CACA,kBAAA,CACA,8BAAA,CAAA,4DAAA,CACA,mBAAA,CAAA,oBAAA,CAEA,0CACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,SAAA,CAEA,uDACI,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAIR,yCACI,UAAA,CAAA,qDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,yBAAA,CAIA,uDACI,UAAA,CAGJ,sDACI,aAAA,CAAA,yCAAA,CACA,gBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAEA,+DACI,aAAA,CAAA,0CAAA,CAIR,oDACI,YAAA,CAGJ,sDACI,YAAA,CACA,wBAAA,CAGJ,qDACI,kBAAA,CACA,UAAA,CACA,aAAA,CAAA,iCAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAEA,6DACI,iBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-pending-row {\\n    width: 100%;\\n    height: 7.8rem;\\n    display: grid;\\n    grid-template-columns: 1.8fr repeat(4, 1fr) repeat(2, 2fr);\\n    gap: 1.6rem;\\n    align-items: center;\\n    border-top: 0.1rem solid var(--system-light-3-border, #e5e5e5);\\n    padding-inline: 1.6rem;\\n\\n    &-details {\\n        display: flex;\\n        width: max-content;\\n        gap: 0.8rem;\\n\\n        &__wallet-name {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n        }\\n    }\\n\\n    &__title {\\n        color: var(--system-light-3-less-prominent-text, #999);\\n\\n        /* desktop/small/S - regular */\\n        font-size: 1.2rem;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 1.8rem; /* 150% */\\n        text-transform: capitalize;\\n    }\\n\\n    &__transaction {\\n        &-address {\\n            width: 7rem;\\n        }\\n\\n        &-amount {\\n            color: var(--status-light-danger, #ec3f3f);\\n            text-align: right;\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n\\n            &__deposit {\\n                color: var(--status-light-success, #4bb4b3);\\n            }\\n        }\\n\\n        &-hash {\\n            width: 9.8rem;\\n        }\\n\\n        &-status {\\n            display: flex;\\n            justify-content: flex-end;\\n        }\\n\\n        &-value {\\n            white-space: nowrap;\\n            width: 100%;\\n            color: var(--brand-coral, #ff444f);\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n\\n            &--center {\\n                text-align: center;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transactions-table{width:100%;display:flex;flex-direction:column;align-items:center;padding-top:0;padding-bottom:.8rem;height:65vh;overflow:auto}@media(max-width: 767px){.wallets-transactions-table{height:75vh}}.wallets-transactions-table__content{width:100%;max-width:80rem;display:flex;flex-direction:column;gap:1.6rem}.wallets-transactions-table__row{display:flex;flex-direction:column;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransactionsTable.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BACI,UAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,aAAA,CAAA,oBAAA,CACA,WAAA,CACA,aAAA,CAxBA,yBAiBJ,4BAUQ,WAAA,CAAA,CAGJ,qCACI,UAAA,CACA,eAAA,CACA,YAAA,CACA,qBAAA,CACA,UAAA,CAGJ,iCACI,YAAA,CACA,qBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transactions-table {\\n    width: 100%;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    padding-block: 0 0.8rem;\\n    height: 65vh;\\n    overflow: auto;\\n\\n    @include mobile {\\n        height: 75vh;\\n    }\\n\\n    &__content {\\n        width: 100%;\\n        max-width: 80rem;\\n        display: flex;\\n        flex-direction: column;\\n        gap: 1.6rem;\\n    }\\n\\n    &__row {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transfer{display:flex;flex-direction:column;align-items:center;justify-content:center}.wallets-transfer__form{display:flex;flex-direction:column;align-items:flex-end;gap:48px}.wallets-transfer__form__fields-section{border:1px solid #d6dadb;border:1px solid var(--light-5-active-background, #d6dadb);border-radius:4px;color:#333;color:var(--system-light-2-general-text, #333);display:grid;grid-template-columns:1fr 1fr;padding:8px;width:650px}@media(max-width: 767px){.wallets-transfer__form__fields-section{width:100%}}.wallets-transfer__form__submit-button{all:unset;display:flex;padding:10px 16px;justify-content:center;align-items:center;border-radius:4px;background:#ff444f;background:var(--button-primary-default, #ff444f);color:#fff;color:var(--system-dark-1-prominent-text, #fff);text-align:center;font-size:14px;font-style:normal;font-weight:700;line-height:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransferForm.scss\"],\"names\":[],\"mappings\":\"AA0pBA,kBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,wBACI,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,QAAA,CAGI,wCACI,wBAAA,CAAA,0DAAA,CACA,iBAAA,CACA,UAAA,CAAA,8CAAA,CACA,YAAA,CACA,6BAAA,CACA,WAAA,CACA,WAAA,CArCZ,yBA8BQ,wCAUQ,UAAA,CAAA,CAKZ,uCACI,SAAA,CACA,YAAA,CACA,iBAAA,CACA,sBAAA,CACA,kBAAA,CACA,iBAAA,CACA,kBAAA,CAAA,iDAAA,CACA,UAAA,CAAA,+CAAA,CACA,iBAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transfer {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n\\n    &__form {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-end;\\n        gap: 48px;\\n\\n        &__fields {\\n            &-section {\\n                border: 1px solid var(--light-5-active-background, #d6dadb);\\n                border-radius: 4px;\\n                color: var(--system-light-2-general-text, #333);\\n                display: grid;\\n                grid-template-columns: 1fr 1fr;\\n                padding: 8px;\\n                width: 650px;\\n\\n                @include mobile {\\n                    width: 100%;\\n                }\\n            }\\n        }\\n\\n        &__submit-button {\\n            all: unset;\\n            display: flex;\\n            padding: 10px 16px;\\n            justify-content: center;\\n            align-items: center;\\n            border-radius: 4px;\\n            background: var(--button-primary-default, #ff444f);\\n            color: var(--system-dark-1-prominent-text, #fff);\\n            text-align: center;\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 14px;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 20px; /* 142.857% */\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transfer-form-account-card{display:flex;justify-content:space-between;align-items:center;width:inherit}.wallets-transfer-form-account-card__content{display:flex;gap:1.6rem}.wallets-transfer-form-account-card__content--is-input{gap:.8rem}.wallets-transfer-form-account-card__content__card{display:flex;align-items:center;width:-moz-fit-content;width:fit-content}.wallets-transfer-form-account-card__details{display:flex;flex-direction:column;justify-content:center}.wallets-transfer-form-account-card__details__balance{color:#333;color:var(--system-light-2-general-text, #333);font-size:1.2rem;font-style:normal;font-weight:400;line-height:1.4rem}.wallets-transfer-form-account-card__details__balance--is-input{font-size:1rem}.wallets-transfer-form-account-card__details__title{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:2rem;font-style:normal;font-weight:700;line-height:3rem}.wallets-transfer-form-account-card__details__title--is-input{font-size:1rem;line-height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransferFormAccountCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,oCACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,aAAA,CAEA,6CACI,YAAA,CACA,UAAA,CAEA,uDACI,SAAA,CAGJ,mDACI,YAAA,CACA,kBAAA,CACA,sBAAA,CAAA,iBAAA,CAIR,6CACI,YAAA,CACA,qBAAA,CACA,sBAAA,CAEA,sDACI,UAAA,CAAA,8CAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAEA,gEACI,cAAA,CAIR,oDACI,UAAA,CAAA,gDAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAEA,8DACI,cAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transfer-form-account-card {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    width: inherit;\\n\\n    &__content {\\n        display: flex;\\n        gap: 1.6rem;\\n\\n        &--is-input {\\n            gap: 0.8rem;\\n        }\\n\\n        &__card {\\n            display: flex;\\n            align-items: center;\\n            width: fit-content;\\n        }\\n    }\\n\\n    &__details {\\n        display: flex;\\n        flex-direction: column;\\n        justify-content: center;\\n\\n        &__balance {\\n            color: var(--system-light-2-general-text, #333);\\n\\n            /* mobile/small/S - regular */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 400;\\n            line-height: 1.4rem; /* 140% */\\n\\n            &--is-input {\\n                font-size: 1rem;\\n            }\\n        }\\n\\n        &__title {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/subtitle/Sub 2 - bold */\\n            font-size: 2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 3rem; /* 150% */\\n\\n            &--is-input {\\n                font-size: 1rem;\\n                line-height: 1.4rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transfer-form-account-selection{display:flex;width:40rem;flex-direction:column;align-items:flex-start;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem 3.2rem 6.4rem 0rem rgba(14,14,14,.14);max-height:80vh}.wallets-transfer-form-account-selection__account{all:unset;cursor:pointer;border-radius:.4rem;padding:.8rem 1.6rem}.wallets-transfer-form-account-selection__account:hover{background:#e6e6e6;background:var(--system-light-8-primary-background, #e6e6e6)}.wallets-transfer-form-account-selection__accounts{display:flex;flex-direction:column;padding:1.6rem .8rem;width:100%;overflow-y:auto}.wallets-transfer-form-account-selection__header{display:flex;height:5.6rem;padding:0rem 1.6rem 0rem 2.4rem;justify-content:space-between;align-items:center;gap:1.6rem;align-self:stretch;border-bottom:.1rem solid #d6dadb;border-bottom:.1rem solid var(--system-light-5-active-background, #d6dadb)}.wallets-transfer-form-account-selection__header__label{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-transfer-form-account-selection__header__close-button{all:unset;font-size:2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransferFormAccountSelection.scss\"],\"names\":[],\"mappings\":\"AA0pBA,yCACI,YAAA,CACA,WAAA,CACA,qBAAA,CACA,sBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CAEA,qDAAA,CACA,eAAA,CAEA,kDACI,SAAA,CACA,cAAA,CACA,mBAAA,CACA,oBAAA,CAEA,wDACI,kBAAA,CAAA,4DAAA,CAIR,mDACI,YAAA,CACA,qBAAA,CACA,oBAAA,CACA,UAAA,CACA,eAAA,CAGJ,iDACI,YAAA,CACA,aAAA,CACA,+BAAA,CACA,6BAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CACA,iCAAA,CAAA,0EAAA,CAEA,wDACI,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,+DACI,SAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transfer-form-account-selection {\\n    display: flex;\\n    width: 40rem;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n    /* Shadows/xxxl */\\n    box-shadow: 0rem 3.2rem 6.4rem 0rem rgba(14, 14, 14, 0.14);\\n    max-height: 80vh;\\n\\n    &__account {\\n        all: unset;\\n        cursor: pointer;\\n        border-radius: 0.4rem;\\n        padding: 0.8rem 1.6rem;\\n\\n        &:hover {\\n            background: var(--system-light-8-primary-background, #e6e6e6);\\n        }\\n    }\\n\\n    &__accounts {\\n        display: flex;\\n        flex-direction: column;\\n        padding: 1.6rem 0.8rem;\\n        width: 100%;\\n        overflow-y: auto;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        height: 5.6rem;\\n        padding: 0rem 1.6rem 0rem 2.4rem;\\n        justify-content: space-between;\\n        align-items: center;\\n        gap: 1.6rem;\\n        align-self: stretch;\\n        border-bottom: 0.1rem solid var(--system-light-5-active-background, #d6dadb);\\n\\n        &__label {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/paragraph/P1 - bold */\\n            font-size: 1.6rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2.4rem; /* 150% */\\n        }\\n\\n        &__close-button {\\n            all: unset;\\n            font-size: 2rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transfer-form-dropdown{display:flex;gap:.8rem;min-height:6rem}.wallets-transfer-form-dropdown__content{flex:1;display:flex;flex-direction:column}.wallets-transfer-form-dropdown__content__selection{all:unset;bottom:100;padding-top:.5rem;z-index:100;height:100%;width:100%}.wallets-transfer-form-dropdown__content__label{font-size:1.4rem;font-style:normal;font-weight:400;line-height:2rem}.wallets-transfer-form-dropdown__divider{display:flex;align-self:center;width:.1rem;height:80%;background:#d6dadb;background:var(--system-light-5-active-background, #d6dadb)}.wallets-transfer-form-dropdown__icons{display:flex;justify-content:center;align-items:center;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransferFormDropdown.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,YAAA,CACA,SAAA,CACA,eAAA,CAEA,yCACI,MAAA,CACA,YAAA,CACA,qBAAA,CAEA,oDACI,SAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,WAAA,CACA,UAAA,CAGJ,gDAEI,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAIR,yCACI,YAAA,CACA,iBAAA,CACA,WAAA,CACA,UAAA,CACA,kBAAA,CAAA,2DAAA,CAGJ,uCACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transfer-form-dropdown {\\n    display: flex;\\n    gap: 0.8rem;\\n    min-height: 6rem;\\n\\n    &__content {\\n        flex: 1;\\n        display: flex;\\n        flex-direction: column;\\n\\n        &__selection {\\n            all: unset;\\n            bottom: 100;\\n            padding-top: 0.5rem;\\n            z-index: 100;\\n            height: 100%;\\n            width: 100%;\\n        }\\n\\n        &__label {\\n            /* desktop/paragraph/P2 - regular */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 400;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n    }\\n\\n    &__divider {\\n        display: flex;\\n        align-self: center;\\n        width: 0.1rem;\\n        height: 80%;\\n        background: var(--system-light-5-active-background, #d6dadb);\\n    }\\n\\n    &__icons {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-transfer-form-input-field{display:flex;flex-direction:column;color:#333;color:var(--system-light-2-general-text, #333)}.wallets-transfer-form-input-field__input{all:unset;height:100%;color:#333;color:var(--system-light-2-general-text, #333);font-size:2rem;font-style:normal;font-weight:700;line-height:3rem;width:100%}.wallets-transfer-form-input-field__label{font-size:1.4rem;font-style:normal;font-weight:400;line-height:2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./TransferFormInputField.scss\"],\"names\":[],\"mappings\":\"AA0pBA,mCACI,YAAA,CACA,qBAAA,CACA,UAAA,CAAA,8CAAA,CAEA,0CACI,SAAA,CACA,WAAA,CACA,UAAA,CAAA,8CAAA,CAEA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CACA,UAAA,CAGJ,0CAEI,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-transfer-form-input-field {\\n    display: flex;\\n    flex-direction: column;\\n    color: var(--system-light-2-general-text, #333);\\n\\n    &__input {\\n        all: unset;\\n        height: 100%;\\n        color: var(--system-light-2-general-text, #333);\\n        /* desktop/subtitle/Sub 2 - bold */\\n        font-size: 2rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 3rem; /* 150% */\\n        width: 100%;\\n    }\\n\\n    &__label {\\n        /* desktop/paragraph/P2 - regular */\\n        font-size: 1.4rem;\\n        font-style: normal;\\n        font-weight: 400;\\n        line-height: 2rem; /* 142.857% */\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-withdrawal-verification-request{width:77.2rem;height:100%;padding:4.8rem 1.6rem}.wallets-withdrawal-verification-request__description{display:flex;flex-direction:column;gap:2.4rem}.wallets-withdrawal-verification-request__icon{padding:1.3rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WithdrawalVerificationRequest.scss\"],\"names\":[],\"mappings\":\"AA0pBA,yCACI,aAAA,CACA,WAAA,CACA,qBAAA,CAEA,sDACI,YAAA,CACA,qBAAA,CACA,UAAA,CAGJ,+CACI,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-withdrawal-verification-request {\\n    width: 77.2rem;\\n    height: 100%;\\n    padding: 4.8rem 1.6rem;\\n\\n    &__description {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 2.4rem;\\n    }\\n\\n    &__icon {\\n        padding: 1.3rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-withdrawal-verification-sent{padding:4.8rem 1.6rem}.wallets-withdrawal-verification-sent__icon{padding:1.3rem}.wallets-withdrawal-verification-sent__resend{padding-top:2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WithdrawalVerificationSent.scss\"],\"names\":[],\"mappings\":\"AA0pBA,sCACI,qBAAA,CAEA,4CACI,cAAA,CAGJ,8CACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-withdrawal-verification-sent {\\n    padding: 4.8rem 1.6rem;\\n\\n    &__icon {\\n        padding: 1.3rem;\\n    }\\n\\n    &__resend {\\n        padding-top: 2.4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-cfd-list{width:100%;height:100%}@media(min-width: 1024px){.wallets-cfd-list{border-top:.2rem solid #f2f3f4;border-top:.2rem solid var(--system-light-7-secondary-background, #f2f3f4)}}.wallets-cfd-list__cfd-empty-state{display:flex;padding:2.4rem 0rem 4.8rem;flex-direction:column;justify-content:center;align-items:center;gap:2.4rem;align-self:stretch}.wallets-cfd-list__cfd-empty-state__description{color:#333;text-align:center;font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-cfd-list__cfd-empty-state__transfer-button{all:unset;cursor:pointer;display:flex;height:4rem;padding:0 1.6rem;justify-content:center;align-items:center;border-radius:.4rem;background:rgba(255, 68, 79, 0.16);background:var(--button-primary-light-default, rgba(255, 68, 79, 0.16));color:#ff444f;color:var(--brand-coral, #ff444f);text-align:center;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-cfd-list__header{padding:2.4rem 0}@media(max-width: 767px){.wallets-cfd-list__header{display:flex;flex-direction:column;justify-content:center}}.wallets-cfd-list__header-description{font-size:1.6rem;line-height:2.4rem}.wallets-cfd-list__header-description__link{color:#ff444f;color:var(--brand-coral, #ff444f)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CFDPlatformsList.scss\"],\"names\":[],\"mappings\":\"AA0pBA,kBACI,UAAA,CACA,WAAA,CAPA,0BAKJ,kBAKQ,8BAAA,CAAA,0EAAA,CAAA,CAEJ,mCACI,YAAA,CACA,0BAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CAEA,gDACI,UAAA,CACA,iBAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,oDACI,SAAA,CACA,cAAA,CACA,YAAA,CACA,WAAA,CACA,gBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,kCAAA,CAAA,uEAAA,CACA,aAAA,CAAA,iCAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAIR,0BACI,gBAAA,CAhEJ,yBA+DA,0BAIQ,YAAA,CACA,qBAAA,CACA,sBAAA,CAAA,CAGJ,sCACI,gBAAA,CACA,kBAAA,CAEA,4CACI,aAAA,CAAA,iCAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-cfd-list {\\n    width: 100%;\\n    height: 100%;\\n\\n    @include desktop {\\n        border-top: 0.2rem solid var(--system-light-7-secondary-background, #f2f3f4);\\n    }\\n    &__cfd-empty-state {\\n        display: flex;\\n        padding: 2.4rem 0rem 4.8rem;\\n        flex-direction: column;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 2.4rem;\\n        align-self: stretch;\\n\\n        &__description {\\n            color: #333;\\n            text-align: center;\\n            font-size: 1.6rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2.4rem; /* 150% */\\n        }\\n\\n        &__transfer-button {\\n            all: unset;\\n            cursor: pointer;\\n            display: flex;\\n            height: 4rem;\\n            padding: 0 1.6rem;\\n            justify-content: center;\\n            align-items: center;\\n            border-radius: 0.4rem;\\n            background: var(--button-primary-light-default, rgba(255, 68, 79, 0.16));\\n            color: var(--brand-coral, #ff444f);\\n            text-align: center;\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n    }\\n\\n    &__header {\\n        padding: 2.4rem 0;\\n\\n        @include mobile {\\n            display: flex;\\n            flex-direction: column;\\n            justify-content: center;\\n        }\\n\\n        &-description {\\n            font-size: 1.6rem;\\n            line-height: 2.4rem;\\n\\n            &__link {\\n                color: var(--brand-coral, #ff444f);\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-ctrader{padding-bottom:2.4rem}.wallets-ctrader__content{display:grid;grid-gap:1.6rem 4.8rem;gap:1.6rem 4.8rem;grid-template-columns:repeat(3, 1fr)}@media(max-width: 767px){.wallets-ctrader__content{grid-template-rows:1fr;grid-template-columns:auto}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CTraderList.scss\"],\"names\":[],\"mappings\":\"AA0pBA,iBACI,qBAAA,CAEA,0BACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,oCAAA,CAvBJ,yBAoBA,0BAMQ,sBAAA,CACA,0BAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-ctrader {\\n    padding-bottom: 2.4rem;\\n\\n    &__content {\\n        display: grid;\\n        gap: 1.6rem 4.8rem;\\n        grid-template-columns: repeat(3, 1fr);\\n\\n        @include mobile {\\n            grid-template-rows: 1fr;\\n            grid-template-columns: auto;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-list__title{color:#333;font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-mt5-list__content{display:grid;grid-gap:1.6rem 4.8rem;gap:1.6rem 4.8rem;grid-template-columns:repeat(3, 1fr);padding-bottom:2.4rem}@media(max-width: 767px){.wallets-mt5-list__content{grid-template-rows:repeat(3, 1fr);grid-template-columns:auto}}.wallets-mt5-list__content__details{flex-grow:1}.wallets-mt5-list__content__details-title{font-weight:bold;font-size:1.4rem;line-height:2rem}.wallets-mt5-list__content__details-description{font-size:1.2rem;line-height:1.4rem}@media(max-width: 767px){.wallets-mt5-list__content__details-description{font-size:1.4rem;line-height:2rem}}.wallets-mt5-loader{width:4.8rem;height:4.8rem;border:.5rem solid #fff;border-bottom-color:#ff3d00;border-radius:50%;display:inline-block;box-sizing:border-box;animation:rotation 1s linear infinite}@keyframes rotation{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5PlatformsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,yBACI,UAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,2BACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,oCAAA,CACA,qBAAA,CA9BJ,yBA0BA,2BAOQ,iCAAA,CACA,0BAAA,CAAA,CAGJ,oCACI,WAAA,CACA,0CACI,gBAAA,CACA,gBAAA,CACA,gBAAA,CAGJ,gDACI,gBAAA,CACA,kBAAA,CA/CZ,yBA6CQ,gDAKQ,gBAAA,CACA,gBAAA,CAAA,CAOpB,oBACI,YAAA,CACA,aAAA,CACA,uBAAA,CACA,2BAAA,CACA,iBAAA,CACA,oBAAA,CACA,qBAAA,CACA,qCAAA,CAGJ,oBACI,GACI,sBAAA,CAEJ,KACI,wBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-list {\\n    &__title {\\n        color: #333;\\n        font-size: 1.6rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2.4rem; /* 150% */\\n    }\\n\\n    &__content {\\n        display: grid;\\n        gap: 1.6rem 4.8rem;\\n        grid-template-columns: repeat(3, 1fr);\\n        padding-bottom: 2.4rem;\\n\\n        @include mobile {\\n            grid-template-rows: repeat(3, 1fr);\\n            grid-template-columns: auto;\\n        }\\n\\n        &__details {\\n            flex-grow: 1;\\n            &-title {\\n                font-weight: bold;\\n                font-size: 1.4rem;\\n                line-height: 2rem;\\n            }\\n\\n            &-description {\\n                font-size: 1.2rem;\\n                line-height: 1.4rem;\\n\\n                @include mobile {\\n                    font-size: 1.4rem;\\n                    line-height: 2rem;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\n.wallets-mt5-loader {\\n    width: 4.8rem;\\n    height: 4.8rem;\\n    border: 0.5rem solid #fff;\\n    border-bottom-color: #ff3d00;\\n    border-radius: 50%;\\n    display: inline-block;\\n    box-sizing: border-box;\\n    animation: rotation 1s linear infinite;\\n}\\n\\n@keyframes rotation {\\n    0% {\\n        transform: rotate(0deg);\\n    }\\n    100% {\\n        transform: rotate(360deg);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-modal-trade-wrapper__footer{display:flex;justify-content:center;align-items:center;flex-direction:column;height:-moz-fit-content;height:fit-content;width:100%;gap:1.6rem}@media(max-width: 767px){.wallets-modal-trade-wrapper__footer{padding-top:0;min-height:19rem}.wallets-modal-trade-wrapper__footer .wallets-text{width:50%}}.wallets-modal-trade-wrapper__footer-installations{display:flex;gap:1.6rem}.wallets-modal-trade-wrapper__footer-installations-icons{display:flex;flex-direction:column;gap:.8rem}.wallets-modal-trade-wrapper__footer-installations-icons svg{width:13.7rem;height:4rem}.wallets-modal-trade-wrapper__footer-installations-qr{border:1px solid #e6e9e9;border-radius:.4rem;display:flex;flex-direction:column;justify-content:center;align-items:center;padding:.8rem;width:13.6rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./ModalTradeWrapper.scss\"],\"names\":[],\"mappings\":\"AA2pBI,qCACI,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,qBAAA,CACA,uBAAA,CAAA,kBAAA,CACA,UAAA,CACA,UAAA,CAzBJ,yBAkBA,qCAUQ,aAAA,CACA,gBAAA,CAEA,mDACI,SAAA,CAAA,CAIR,mDACI,YAAA,CACA,UAAA,CAEA,yDACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,6DACI,aAAA,CACA,WAAA,CAIR,sDACI,wBAAA,CACA,mBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,aAAA,CACA,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-modal-trade-wrapper {\\n    &__footer {\\n        display: flex;\\n        justify-content: center;\\n        align-items: center;\\n        flex-direction: column;\\n        height: fit-content;\\n        width: 100%;\\n        gap: 1.6rem;\\n\\n        @include mobile {\\n            padding-top: 0;\\n            min-height: 19rem;\\n\\n            .wallets-text {\\n                width: 50%;\\n            }\\n        }\\n\\n        &-installations {\\n            display: flex;\\n            gap: 1.6rem;\\n\\n            &-icons {\\n                display: flex;\\n                flex-direction: column;\\n                gap: 0.8rem;\\n\\n                svg {\\n                    width: 13.7rem;\\n                    height: 4rem;\\n                }\\n            }\\n\\n            &-qr {\\n                border: 1px solid #e6e9e9;\\n                border-radius: 0.4rem;\\n                display: flex;\\n                flex-direction: column;\\n                justify-content: center;\\n                align-items: center;\\n                padding: 0.8rem;\\n                width: 13.6rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-other-cfd__title{color:#333;font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-other-cfd__content{display:grid;grid-gap:1.6rem 4.8rem;gap:1.6rem 4.8rem;grid-template-columns:repeat(3, 1fr)}@media(max-width: 767px){.wallets-other-cfd__content{grid-template-rows:1fr;grid-template-columns:auto}}.wallets-other-cfd__content__details{flex-grow:1}.wallets-other-cfd__content__details-title{font-weight:bold;font-size:1.4rem;line-height:2rem}.wallets-other-cfd__content__details-description{font-size:1.2rem;line-height:1.4rem}@media(max-width: 767px){.wallets-other-cfd__content__details-description{font-size:1.4rem;line-height:2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./OtherCFDPlatformsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,0BACI,UAAA,CACA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,4BACI,YAAA,CACA,sBAAA,CAAA,iBAAA,CACA,oCAAA,CA7BJ,yBA0BA,4BAMQ,sBAAA,CACA,0BAAA,CAAA,CAGJ,qCACI,WAAA,CACA,2CACI,gBAAA,CACA,gBAAA,CACA,gBAAA,CAGJ,iDACI,gBAAA,CACA,kBAAA,CA9CZ,yBA4CQ,iDAKQ,gBAAA,CACA,gBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-other-cfd {\\n    &__title {\\n        color: #333;\\n        font-size: 1.6rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2.4rem; /* 150% */\\n    }\\n\\n    &__content {\\n        display: grid;\\n        gap: 1.6rem 4.8rem;\\n        grid-template-columns: repeat(3, 1fr);\\n\\n        @include mobile {\\n            grid-template-rows: 1fr;\\n            grid-template-columns: auto;\\n        }\\n\\n        &__details {\\n            flex-grow: 1;\\n            &-title {\\n                font-weight: bold;\\n                font-size: 1.4rem;\\n                line-height: 2rem;\\n            }\\n\\n            &-description {\\n                font-size: 1.2rem;\\n                line-height: 1.4rem;\\n\\n                @include mobile {\\n                    font-size: 1.4rem;\\n                    line-height: 2rem;\\n                }\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-added-ctrader-accounts__actions{display:flex;flex-direction:column;gap:4px}.wallets-added-ctrader-accounts__details{display:flex;flex-direction:column}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AddedCTraderAccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,yCACI,YAAA,CACA,qBAAA,CACA,OAAA,CAGJ,yCACI,YAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-added-ctrader-accounts {\\n    &__actions {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 4px;\\n    }\\n\\n    &__details {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-available-ctrader-accounts__details{display:flex;flex-direction:column}.wallets-error-screen{background:#fff;border-radius:1rem;padding:2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AvailableCTraderAccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,6CACI,YAAA,CACA,qBAAA,CAIR,sBACI,eAAA,CACA,kBAAA,CACA,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-available-ctrader-accounts {\\n    &__details {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n}\\n\\n.wallets-error-screen {\\n    background: #fff;\\n    border-radius: 1rem;\\n    padding: 2rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-added-mt5__icon{cursor:pointer}.wallets-added-mt5__actions{display:flex;flex-direction:column;gap:.4rem}.wallets-added-mt5__details{flex-grow:1;-webkit-user-select:none;-moz-user-select:none;user-select:none}.wallets-added-mt5__details-title{display:flex;align-items:center;gap:.8rem;align-self:stretch}.wallets-added-mt5__details-title-text{color:#333;color:var(--system-light-2-general-text, #333);font-size:1.4rem;font-style:normal;font-weight:400;line-height:2rem}.wallets-added-mt5__details-title-landing-company{display:flex;height:2.4rem;padding:0rem .4rem;align-items:center;gap:.4rem;border-radius:.4rem;background:#f2f3f4;background:var(--system-light-7-secondary-background, #f2f3f4)}.wallets-added-mt5__details-title-landing-company-text{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1rem;font-style:normal;font-weight:700;line-height:1.4rem;text-transform:uppercase}.wallets-added-mt5__details-loginid{color:#999;color:var(--system-light-3-less-prominent-text, #999);font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-added-mt5__details-balance{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-added-mt5__details-description{font-size:1.2rem;line-height:1.4rem}@media(max-width: 767px){.wallets-added-mt5__details-description{font-size:1.4rem;line-height:2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AddedMT5AccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,yBACI,cAAA,CAEJ,4BACI,YAAA,CACA,qBAAA,CACA,SAAA,CAGJ,4BACI,WAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CAEA,kCACI,YAAA,CACA,kBAAA,CACA,SAAA,CACA,kBAAA,CAEA,uCACI,UAAA,CAAA,8CAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,kDACI,YAAA,CACA,aAAA,CACA,kBAAA,CACA,kBAAA,CACA,SAAA,CACA,mBAAA,CACA,kBAAA,CAAA,8DAAA,CAGJ,uDACI,UAAA,CAAA,gDAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,wBAAA,CAIR,oCACI,UAAA,CAAA,qDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,oCACI,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,wCACI,gBAAA,CACA,kBAAA,CA3FR,yBAyFI,wCAKQ,gBAAA,CACA,gBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-added-mt5 {\\n    &__icon {\\n        cursor: pointer;\\n    }\\n    &__actions {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.4rem;\\n    }\\n\\n    &__details {\\n        flex-grow: 1;\\n        user-select: none;\\n\\n        &-title {\\n            display: flex;\\n            align-items: center;\\n            gap: 0.8rem;\\n            align-self: stretch;\\n\\n            &-text {\\n                color: var(--system-light-2-general-text, #333);\\n\\n                /* desktop/paragraph/P2 - regular */\\n                font-size: 1.4rem;\\n                font-style: normal;\\n                font-weight: 400;\\n                line-height: 2rem; /* 142.857% */\\n            }\\n\\n            &-landing-company {\\n                display: flex;\\n                height: 2.4rem;\\n                padding: 0rem 0.4rem;\\n                align-items: center;\\n                gap: 0.4rem;\\n                border-radius: 0.4rem;\\n                background: var(--system-light-7-secondary-background, #f2f3f4);\\n            }\\n\\n            &-landing-company-text {\\n                color: var(--system-light-1-prominent-text, #333);\\n\\n                /* desktop/extra small/XS - bold */\\n                font-size: 1rem;\\n                font-style: normal;\\n                font-weight: 700;\\n                line-height: 1.4rem; /* 140% */\\n                text-transform: uppercase;\\n            }\\n        }\\n\\n        &-loginid {\\n            color: var(--system-light-3-less-prominent-text, #999);\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n        }\\n\\n        &-balance {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n\\n        &-description {\\n            font-size: 1.2rem;\\n            line-height: 1.4rem;\\n\\n            @include mobile {\\n                font-size: 1.4rem;\\n                line-height: 2rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-available-mt5__icon{cursor:pointer}.wallets-available-mt5__text{color:#ff444f;color:var(--brand-coral, #ff444f);text-align:center;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-available-mt5__details{flex-grow:1;-webkit-user-select:none;-moz-user-select:none;user-select:none}.wallets-available-mt5__details-title{font-weight:bold;font-size:1.4rem;line-height:2rem}.wallets-available-mt5__details-description{font-size:1.2rem;line-height:1.4rem}@media(max-width: 767px){.wallets-available-mt5__details-description{font-size:1.4rem;line-height:2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AvailableMT5AccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,6BACI,cAAA,CAGJ,6BACI,aAAA,CAAA,iCAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,gCACI,WAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,gBAAA,CACA,sCACI,gBAAA,CACA,gBAAA,CACA,gBAAA,CAGJ,4CACI,gBAAA,CACA,kBAAA,CA5CR,yBA0CI,4CAKQ,gBAAA,CACA,gBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-available-mt5 {\\n    &__icon {\\n        cursor: pointer;\\n    }\\n\\n    &__text {\\n        color: var(--brand-coral, #ff444f);\\n        text-align: center;\\n\\n        /* desktop/paragraph/P2 - bold */\\n        font-size: 1.4rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2rem; /* 142.857% */\\n    }\\n\\n    &__details {\\n        flex-grow: 1;\\n        user-select: none;\\n        &-title {\\n            font-weight: bold;\\n            font-size: 1.4rem;\\n            line-height: 2rem;\\n        }\\n\\n        &-description {\\n            font-size: 1.2rem;\\n            line-height: 1.4rem;\\n\\n            @include mobile {\\n                font-size: 1.4rem;\\n                line-height: 2rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-available-derivx__icon{cursor:pointer}.wallets-available-derivx__actions{display:flex;flex-direction:column;gap:.4rem}.wallets-available-derivx__details{flex-grow:1}.wallets-available-derivx__details-loginid{color:#999;color:var(--system-light-3-less-prominent-text, #999);font-size:1.2rem;font-style:normal;font-weight:700;line-height:1.8rem}.wallets-available-derivx__details-title{color:#333;color:var(--system-light-2-general-text, #333);font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-available-derivx__details-balance{color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-available-derivx__details-description{font-size:1.2rem;line-height:1.4rem}@media(max-width: 767px){.wallets-available-derivx__details-description{font-size:1.4rem;line-height:2rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AddedDxtradeAccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,gCACI,cAAA,CAGJ,mCACI,YAAA,CACA,qBAAA,CACA,SAAA,CAGJ,mCACI,WAAA,CAEA,2CACI,UAAA,CAAA,qDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,yCACI,UAAA,CAAA,8CAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,2CACI,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,+CACI,gBAAA,CACA,kBAAA,CA/DR,yBA6DI,+CAKQ,gBAAA,CACA,gBAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-available-derivx {\\n    &__icon {\\n        cursor: pointer;\\n    }\\n\\n    &__actions {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 0.4rem;\\n    }\\n\\n    &__details {\\n        flex-grow: 1;\\n\\n        &-loginid {\\n            color: var(--system-light-3-less-prominent-text, #999);\\n\\n            /* desktop/small/S - bold */\\n            font-size: 1.2rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 1.8rem; /* 150% */\\n        }\\n\\n        &-title {\\n            color: var(--system-light-2-general-text, #333);\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n\\n        &-balance {\\n            color: var(--system-light-1-prominent-text, #333);\\n\\n            /* desktop/paragraph/P2 - bold */\\n            font-size: 1.4rem;\\n            font-style: normal;\\n            font-weight: 700;\\n            line-height: 2rem; /* 142.857% */\\n        }\\n\\n        &-description {\\n            font-size: 1.2rem;\\n            line-height: 1.4rem;\\n\\n            @include mobile {\\n                font-size: 1.4rem;\\n                line-height: 2rem;\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-available-dxtrade__icon{cursor:pointer}.wallets-available-dxtrade__text{color:#ff444f;color:var(--brand-coral, #ff444f);text-align:center;font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-available-dxtrade__details{flex-grow:1}.wallets-available-dxtrade__details-title{padding-bottom:.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./AvailableDxtradeAccountsList.scss\"],\"names\":[],\"mappings\":\"AA2pBI,iCACI,cAAA,CAEJ,iCACI,aAAA,CAAA,iCAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,oCACI,WAAA,CAEA,0CACI,oBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-available-dxtrade {\\n    &__icon {\\n        cursor: pointer;\\n    }\\n    &__text {\\n        color: var(--brand-coral, #ff444f);\\n        text-align: center;\\n\\n        /* desktop/paragraph/P2 - bold */\\n        font-size: 1.4rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2rem; /* 142.857% */\\n    }\\n\\n    &__details {\\n        flex-grow: 1;\\n\\n        &-title {\\n            padding-bottom: 0.5rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dxtrade-enter-password{display:inline-flex;padding:2rem 0rem 2.4rem;flex-direction:column;justify-content:center;align-items:flex-start;border-radius:.8rem}.wallets-dxtrade-enter-password__button{display:flex;gap:.8rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DxtradeEnterPasswordModal.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,mBAAA,CACA,wBAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CACA,mBAAA,CAEA,wCACI,YAAA,CACA,SAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dxtrade-enter-password {\\n    display: inline-flex;\\n    padding: 2rem 0rem 2.4rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: flex-start;\\n    border-radius: 0.8rem;\\n\\n    &__button {\\n        display: flex;\\n        gap: 0.8rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-modal{position:relative;perspective:200rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionModal.scss\"],\"names\":[],\"mappings\":\"AA0pBA,4BACI,iBAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-modal {\\n    position: relative;\\n    perspective: 200rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-create-password{display:inline-flex;padding:3.2rem;flex-direction:column;justify-content:center;align-items:center;gap:2.4rem;width:40rem;text-align:center;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}@media(max-width: 767px){.wallets-create-password{width:100%}}.wallets-create-password-title{font-weight:700;font-size:1.8rem}.wallets-create-password-subtitle{font-size:1.4rem;color:#333;line-height:2rem}.wallets-create-password-input{position:relative;width:100%}.wallets-create-password-input>input{font-size:1.4rem;padding:1rem;border:.1rem solid #d6dadb;border-bottom:.5rem solid #e6e9e9;border-radius:.5rem;margin-bottom:2rem;outline:none;width:100%}.wallets-create-password-input>input::-moz-placeholder{color:#999}.wallets-create-password-input>input::placeholder{color:#999}.wallets-create-password-input-trailing-icon{position:absolute;right:2rem;top:20%;transform:scale(1.2)}.wallets-create-password-button{display:flex;height:4rem;padding:1rem 1.6rem;justify-content:center;align-items:center;border-radius:.4rem;background:#ff444f;border:none;color:#fff;font-weight:700;cursor:pointer}.wallets-create-password-button--disabled{opacity:.32}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CreatePassword.scss\"],\"names\":[],\"mappings\":\"AA0pBA,yBACI,mBAAA,CACA,cAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CA3BA,yBAiBJ,yBAaQ,UAAA,CAAA,CAGJ,+BACI,eAAA,CACA,gBAAA,CAGJ,kCACI,gBAAA,CACA,UAAA,CACA,gBAAA,CAGJ,+BACI,iBAAA,CACA,UAAA,CAEA,qCACI,gBAAA,CACA,YAAA,CACA,0BAAA,CACA,iCAAA,CACA,mBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAEA,uDACI,UAAA,CADJ,kDACI,UAAA,CAIR,6CACI,iBAAA,CACA,UAAA,CACA,OAAA,CACA,oBAAA,CAIR,gCACI,YAAA,CACA,WAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,kBAAA,CACA,WAAA,CACA,UAAA,CACA,eAAA,CACA,cAAA,CAEA,0CACI,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-create-password {\\n    display: inline-flex;\\n    padding: 3.2rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    gap: 2.4rem;\\n    width: 40rem;\\n    text-align: center;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    @include mobile {\\n        width: 100%;\\n    }\\n\\n    &-title {\\n        font-weight: 700;\\n        font-size: 1.8rem;\\n    }\\n\\n    &-subtitle {\\n        font-size: 1.4rem;\\n        color: #333333;\\n        line-height: 2rem;\\n    }\\n\\n    &-input {\\n        position: relative;\\n        width: 100%;\\n\\n        & > input {\\n            font-size: 1.4rem;\\n            padding: 1rem;\\n            border: 0.1rem solid #d6dadb;\\n            border-bottom: 0.5rem solid #e6e9e9;\\n            border-radius: 0.5rem;\\n            margin-bottom: 2rem;\\n            outline: none;\\n            width: 100%;\\n\\n            &::placeholder {\\n                color: #999999;\\n            }\\n        }\\n\\n        &-trailing-icon {\\n            position: absolute;\\n            right: 2rem;\\n            top: 20%;\\n            transform: scale(1.2);\\n        }\\n    }\\n\\n    &-button {\\n        display: flex;\\n        height: 4rem;\\n        padding: 1rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        border-radius: 0.4rem;\\n        background: #ff444f;\\n        border: none;\\n        color: #ffffff;\\n        font-weight: 700;\\n        cursor: pointer;\\n\\n        &--disabled {\\n            opacity: 0.32;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dynamic-leverage-modal__market{border:.1rem solid #999999;border:.1rem solid var(--border-hover, #999999);border-radius:.8rem;overflow:hidden;background-color:#e6e9e9;background-color:var(--general-hover, #e6e9e9);height:24.8rem}.wallets-dynamic-leverage-modal__market-description{font-style:italic}.wallets-dynamic-leverage-modal__market-table{padding-bottom:1rem}.wallets-dynamic-leverage-modal__market-table-header-cell{display:flex;flex-direction:column}.wallets-dynamic-leverage-modal__market-table-header-row{display:grid;grid-template-columns:1fr .5fr 1.25fr;justify-items:center;border-bottom:0;padding:.4rem 0;background-color:#e6e9e9;background-color:var(--general-hover, #e6e9e9)}.wallets-dynamic-leverage-modal__market-table-row{display:grid;grid-template-columns:1fr .5fr 1.25fr;justify-items:center;border-bottom:0;padding:.4rem 0}.wallets-dynamic-leverage-modal__market-table-row:nth-child(even){background-color:#e6e9e9;background-color:var(--general-hover, #e6e9e9)}.wallets-dynamic-leverage-modal__market-table-row:nth-child(odd){background-color:#f2f3f4;background-color:var(--general-section-1, #f2f3f4)}.wallets-dynamic-leverage-modal__market-title{display:flex;flex-direction:column;height:7rem;padding-top:1rem;background-color:#f2f3f4;background-color:var(--general-section-1, #f2f3f4)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DynamicLeverageMarketCard.scss\"],\"names\":[],\"mappings\":\"AA2pBI,wCACI,0BAAA,CAAA,+CAAA,CACA,mBAAA,CACA,eAAA,CACA,wBAAA,CAAA,8CAAA,CACA,cAAA,CAEA,oDACI,iBAAA,CAGJ,8CACI,mBAAA,CAGI,0DACI,YAAA,CACA,qBAAA,CAGJ,yDACI,YAAA,CACA,qCAAA,CACA,oBAAA,CACA,eAAA,CACA,eAAA,CACA,wBAAA,CAAA,8CAAA,CAIR,kDACI,YAAA,CACA,qCAAA,CACA,oBAAA,CACA,eAAA,CACA,eAAA,CAEA,kEACI,wBAAA,CAAA,8CAAA,CAGJ,iEACI,wBAAA,CAAA,kDAAA,CAKZ,8CACI,YAAA,CACA,qBAAA,CACA,WAAA,CACA,gBAAA,CACA,wBAAA,CAAA,kDAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dynamic-leverage-modal {\\n    &__market {\\n        border: 0.1rem solid var(--border-hover, #999999);\\n        border-radius: 0.8rem;\\n        overflow: hidden;\\n        background-color: var(--general-hover, #e6e9e9);\\n        height: 24.8rem;\\n\\n        &-description {\\n            font-style: italic;\\n        }\\n\\n        &-table {\\n            padding-bottom: 1rem;\\n\\n            &-header {\\n                &-cell {\\n                    display: flex;\\n                    flex-direction: column;\\n                }\\n\\n                &-row {\\n                    display: grid;\\n                    grid-template-columns: 1fr 0.5fr 1.25fr;\\n                    justify-items: center;\\n                    border-bottom: 0;\\n                    padding: 0.4rem 0;\\n                    background-color: var(--general-hover, #e6e9e9);\\n                }\\n            }\\n\\n            &-row {\\n                display: grid;\\n                grid-template-columns: 1fr 0.5fr 1.25fr;\\n                justify-items: center;\\n                border-bottom: 0;\\n                padding: 0.4rem 0;\\n\\n                &:nth-child(even) {\\n                    background-color: var(--general-hover, #e6e9e9);\\n                }\\n\\n                &:nth-child(odd) {\\n                    background-color: var(--general-section-1, #f2f3f4);\\n                }\\n            }\\n        }\\n\\n        &-title {\\n            display: flex;\\n            flex-direction: column;\\n            height: 7rem;\\n            padding-top: 1rem;\\n            background-color: var(--general-section-1, #f2f3f4);\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dynamic-leverage-screen__container{display:flex;flex-direction:column;gap:2.4rem;margin:1.5rem 12.8rem 0;padding-bottom:10rem;transform:rotateY(180deg);backface-visibility:hidden;position:absolute;top:0;transition:transform .6s ease}@media(max-width: 767px){.wallets-dynamic-leverage-screen__container{margin:1.5rem 2.4rem 2.4rem}}.wallets-dynamic-leverage-screen__container--flip{transform:rotateY(0deg)}.wallets-dynamic-leverage-screen__content{display:grid;grid-gap:2.4rem;gap:2.4rem;grid-template-columns:1fr 1fr;margin:0 10rem}@media(max-width: 767px){.wallets-dynamic-leverage-screen__content{grid-template-columns:1fr;margin:0 6.5rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DynamicLeverageScreen.scss\"],\"names\":[],\"mappings\":\"AA2pBI,4CACI,YAAA,CACA,qBAAA,CACA,UAAA,CACA,uBAAA,CACA,oBAAA,CACA,yBAAA,CACA,0BAAA,CACA,iBAAA,CACA,KAAA,CACA,6BAAA,CA5BJ,yBAkBA,4CAaQ,2BAAA,CAAA,CAGJ,kDACI,uBAAA,CAIR,0CACI,YAAA,CACA,eAAA,CAAA,UAAA,CACA,6BAAA,CACA,cAAA,CA3CJ,yBAuCA,0CAOQ,yBAAA,CACA,eAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dynamic-leverage-screen {\\n    &__container {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 2.4rem;\\n        margin: 1.5rem 12.8rem 0;\\n        padding-bottom: 10rem;\\n        transform: rotateY(180deg);\\n        backface-visibility: hidden;\\n        position: absolute;\\n        top: 0;\\n        transition: transform 0.6s ease;\\n\\n        @include mobile {\\n            margin: 1.5rem 2.4rem 2.4rem;\\n        }\\n\\n        &--flip {\\n            transform: rotateY(0deg);\\n        }\\n    }\\n\\n    &__content {\\n        display: grid;\\n        gap: 2.4rem;\\n        grid-template-columns: 1fr 1fr;\\n        margin: 0 10rem;\\n\\n        @include mobile {\\n            grid-template-columns: 1fr;\\n            margin: 0 6.5rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dynamic-leverage-screen__table-cell{display:flex;flex-direction:column}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DynamicLeverageTableColumnHeader.scss\"],\"names\":[],\"mappings\":\"AA2pBI,6CACI,YAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dynamic-leverage-screen {\\n    &__table-cell {\\n        display: flex;\\n        flex-direction: column;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-dynamic-leverage-screen__title{display:flex;gap:1.6rem;align-items:center;padding:0 1.6rem 0 2.4rem;height:5.6rem;border-bottom:.1rem solid #f2f3f4;border-bottom:.1rem solid var(--general-section-2, #f2f3f4)}.wallets-dynamic-leverage-screen__title-back{display:flex;align-items:center;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./DynamicLeverageTitle.scss\"],\"names\":[],\"mappings\":\"AA2pBI,wCACI,YAAA,CACA,UAAA,CACA,kBAAA,CACA,yBAAA,CACA,aAAA,CACA,iCAAA,CAAA,2DAAA,CAEA,6CACI,YAAA,CACA,kBAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-dynamic-leverage-screen {\\n    &__title {\\n        display: flex;\\n        gap: 1.6rem;\\n        align-items: center;\\n        padding: 0 1.6rem 0 2.4rem;\\n        height: 5.6rem;\\n        border-bottom: 0.1rem solid var(--general-section-2, #f2f3f4);\\n\\n        &-back {\\n            display: flex;\\n            align-items: center;\\n            cursor: pointer;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-enter-password{display:inline-flex;padding:2rem 0rem 2.4rem;flex-direction:column;justify-content:center;align-items:flex-start;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem 0rem 2.4rem 0rem rgba(0,0,0,.25)}@media(max-width: 767px){.wallets-enter-password{justify-content:flex-start;border-radius:0;box-shadow:none}}.wallets-enter-password--container{display:flex;width:40rem;padding:0 2.4rem 2.4rem;flex-direction:column;align-items:flex-start;gap:.8rem}@media(max-width: 767px){.wallets-enter-password--container{width:100%}}.wallets-enter-password-title{display:flex;width:40rem;align-items:center;padding-bottom:2.4rem;gap:.8rem;color:#333;color:var(--system-light-1-prominent-text, #333);font-size:1.6rem;font-style:normal;font-weight:700;line-height:2.4rem}.wallets-enter-password-subtitle{font-size:1.4rem;color:#333;line-height:2rem}.wallets-enter-password-input{position:relative;width:100%}.wallets-enter-password-input>input{font-size:1.4rem;padding:1rem;border:.1rem solid #d6dadb;border-bottom:.5rem solid #e6e9e9;border-radius:.5rem;margin-bottom:2rem;outline:none;width:100%}.wallets-enter-password-input>input::-moz-placeholder{color:#999}.wallets-enter-password-input>input::placeholder{color:#999}.wallets-enter-password-input-trailing-icon{position:absolute;right:2rem;top:20%;transform:scale(1.2)}.wallets-enter-password-buttons{display:flex;width:40rem;padding-right:2.4rem;justify-content:flex-end;align-items:center;gap:.8rem}.wallets-enter-password-forgot-password-button{display:flex;height:4rem;padding:1rem 1.6rem;justify-content:center;align-items:center;border-radius:.4rem;background:#fff;background:var(--system-light-8-primary-background, #fff);font-weight:700;cursor:pointer;border:.2rem solid #999;border:.2rem solid var(--system-light-3-less-prominent-text, #999)}.wallets-enter-password-add-button{display:flex;height:4rem;padding:1rem 1.6rem;justify-content:center;align-items:center;border-radius:.4rem;background:#ff444f;border:none;color:#fff;font-weight:700;cursor:pointer}.wallets-enter-password-add-button--disabled{opacity:.32}\", \"\",{\"version\":3,\"sources\":[\"webpack://./EnterPassword.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wBACI,mBAAA,CACA,wBAAA,CACA,qBAAA,CACA,sBAAA,CACA,sBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,gDAAA,CAzBA,yBAiBJ,wBAWQ,0BAAA,CACA,eAAA,CACA,eAAA,CAAA,CAGJ,mCACI,YAAA,CACA,WAAA,CACA,uBAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CAvCJ,yBAiCA,mCASQ,UAAA,CAAA,CAIR,8BACI,YAAA,CACA,WAAA,CACA,kBAAA,CACA,qBAAA,CACA,SAAA,CACA,UAAA,CAAA,gDAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CAGJ,iCACI,gBAAA,CACA,UAAA,CACA,gBAAA,CAGJ,8BACI,iBAAA,CACA,UAAA,CAEA,oCACI,gBAAA,CACA,YAAA,CACA,0BAAA,CACA,iCAAA,CACA,mBAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAEA,sDACI,UAAA,CADJ,iDACI,UAAA,CAIR,4CACI,iBAAA,CACA,UAAA,CACA,OAAA,CACA,oBAAA,CAIR,gCACI,YAAA,CACA,WAAA,CACA,oBAAA,CACA,wBAAA,CACA,kBAAA,CACA,SAAA,CAGJ,+CACI,YAAA,CACA,WAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CACA,eAAA,CACA,cAAA,CACA,uBAAA,CAAA,kEAAA,CAGJ,mCACI,YAAA,CACA,WAAA,CACA,mBAAA,CACA,sBAAA,CACA,kBAAA,CACA,mBAAA,CACA,kBAAA,CACA,WAAA,CACA,UAAA,CACA,eAAA,CACA,cAAA,CAEA,6CACI,WAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-enter-password {\\n    display: inline-flex;\\n    padding: 2rem 0rem 2.4rem;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: flex-start;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n    box-shadow: 0rem 0rem 2.4rem 0rem rgba(0, 0, 0, 0.25);\\n\\n    @include mobile {\\n        justify-content: flex-start;\\n        border-radius: 0;\\n        box-shadow: none;\\n    }\\n\\n    &--container {\\n        display: flex;\\n        width: 40rem;\\n        padding: 0 2.4rem 2.4rem;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        gap: 0.8rem;\\n\\n        @include mobile {\\n            width: 100%;\\n        }\\n    }\\n\\n    &-title {\\n        display: flex;\\n        width: 40rem;\\n        align-items: center;\\n        padding-bottom: 2.4rem;\\n        gap: 0.8rem;\\n        color: var(--system-light-1-prominent-text, #333);\\n\\n        /* desktop/paragraph/P1 - bold */\\n        font-size: 1.6rem;\\n        font-style: normal;\\n        font-weight: 700;\\n        line-height: 2.4rem; /* 150% */\\n    }\\n\\n    &-subtitle {\\n        font-size: 1.4rem;\\n        color: #333333;\\n        line-height: 2rem;\\n    }\\n\\n    &-input {\\n        position: relative;\\n        width: 100%;\\n\\n        & > input {\\n            font-size: 1.4rem;\\n            padding: 1rem;\\n            border: 0.1rem solid #d6dadb;\\n            border-bottom: 0.5rem solid #e6e9e9;\\n            border-radius: 0.5rem;\\n            margin-bottom: 2rem;\\n            outline: none;\\n            width: 100%;\\n\\n            &::placeholder {\\n                color: #999999;\\n            }\\n        }\\n\\n        &-trailing-icon {\\n            position: absolute;\\n            right: 2rem;\\n            top: 20%;\\n            transform: scale(1.2);\\n        }\\n    }\\n\\n    &-buttons {\\n        display: flex;\\n        width: 40rem;\\n        padding-right: 2.4rem;\\n        justify-content: flex-end;\\n        align-items: center;\\n        gap: 0.8rem;\\n    }\\n\\n    &-forgot-password-button {\\n        display: flex;\\n        height: 4rem;\\n        padding: 1rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        border-radius: 0.4rem;\\n        background: var(--system-light-8-primary-background, #fff);\\n        font-weight: 700;\\n        cursor: pointer;\\n        border: 0.2rem solid var(--system-light-3-less-prominent-text, #999);\\n    }\\n\\n    &-add-button {\\n        display: flex;\\n        height: 4rem;\\n        padding: 1rem 1.6rem;\\n        justify-content: center;\\n        align-items: center;\\n        border-radius: 0.4rem;\\n        background: #ff444f;\\n        border: none;\\n        color: #ffffff;\\n        font-weight: 700;\\n        cursor: pointer;\\n\\n        &--disabled {\\n            opacity: 0.32;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-get-more-mt5-accounts{display:flex;align-items:flex-start;cursor:pointer}.wallets-get-more-mt5-accounts-container{display:flex;padding:1.6rem;align-items:center;gap:1.6rem;flex:1 0 0;align-self:stretch;border-radius:.8rem;border:.1rem dashed #d6dadb;border:.1rem dashed var(--system-light-5-active-background, #d6dadb)}.wallets-get-more-mt5-accounts-container-icon{width:3.2rem;height:3.2rem}.wallets-get-more-mt5-accounts-container-details{display:flex;flex-direction:column;align-items:flex-start;flex:1 0 0}.wallets-get-more-mt5-accounts-container-details-title{align-self:stretch;color:#333;color:var(--system-light-2-general-text, #333);font-size:1.4rem;font-style:normal;font-weight:700;line-height:2rem}.wallets-get-more-mt5-accounts-container-details-description{align-self:stretch;color:#333;color:var(--system-light-2-general-text, #333);font-size:1rem;font-style:normal;font-weight:400;line-height:1.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./GetMoreMT5Accounts.scss\"],\"names\":[],\"mappings\":\"AA0pBA,+BACI,YAAA,CACA,sBAAA,CACA,cAAA,CAEA,yCACI,YAAA,CACA,cAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,kBAAA,CACA,mBAAA,CACA,2BAAA,CAAA,oEAAA,CAEA,8CACI,YAAA,CACA,aAAA,CAGJ,iDACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,UAAA,CAEA,uDACI,kBAAA,CACA,UAAA,CAAA,8CAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,6DACI,kBAAA,CACA,UAAA,CAAA,8CAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-get-more-mt5-accounts {\\n    display: flex;\\n    align-items: flex-start;\\n    cursor: pointer;\\n\\n    &-container {\\n        display: flex;\\n        padding: 1.6rem;\\n        align-items: center;\\n        gap: 1.6rem;\\n        flex: 1 0 0;\\n        align-self: stretch;\\n        border-radius: 0.8rem;\\n        border: 0.1rem dashed var(--system-light-5-active-background, #d6dadb);\\n\\n        &-icon {\\n            width: 3.2rem;\\n            height: 3.2rem;\\n        }\\n\\n        &-details {\\n            display: flex;\\n            flex-direction: column;\\n            align-items: flex-start;\\n            flex: 1 0 0;\\n\\n            &-title {\\n                align-self: stretch;\\n                color: var(--system-light-2-general-text, #333);\\n\\n                /* desktop/paragraph/P2 - bold */\\n                font-size: 1.4rem;\\n                font-style: normal;\\n                font-weight: 700;\\n                line-height: 2rem; /* 142.857% */\\n            }\\n\\n            &-description {\\n                align-self: stretch;\\n                color: var(--system-light-2-general-text, #333);\\n\\n                /* desktop/extra small/XS - regular */\\n                font-size: 1rem;\\n                font-style: normal;\\n                font-weight: 400;\\n                line-height: 1.4rem; /* 140% */\\n            }\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-card{align-items:center;border-radius:1.6rem;border:.2rem solid #f2f3f4;cursor:pointer;display:flex;flex-direction:column;justify-content:center;width:25%;position:relative;height:100%;transition-duration:.3s;transition-property:transform,box-shadow;transform-style:preserve-3d}.wallets-jurisdiction-card--flip{transform:rotateY(180deg)}@media(max-width: 767px){.wallets-jurisdiction-card{max-width:100%;width:100%}}@media(max-width: 767px){.wallets-jurisdiction-card{max-width:100%}}.wallets-jurisdiction-card__link{color:#ff444f}.wallets-jurisdiction-card:hover{box-shadow:0rem 2.4rem 4.8rem 0rem rgba(14,14,14,.18)}.wallets-jurisdiction-card--selected{border:.2rem solid #85acb0;box-shadow:0rem 2.4rem 4.8rem 0rem rgba(14,14,14,.18)}.wallets-jurisdiction-card-front{backface-visibility:hidden;display:flex;flex-direction:column;height:100%;width:100%;justify-content:center;padding:2rem 1.6rem;transform-style:preserve-3d;transition:transform .3s}@media(max-width: 767px){.wallets-jurisdiction-card-front{width:100%}}.wallets-jurisdiction-card-front--flip{transform:rotateY(180deg)}.wallets-jurisdiction-card-front__label{margin-bottom:1.5rem;text-align:center}@media(max-width: 767px){.wallets-jurisdiction-card-front__label{margin-top:2.5rem}}.wallets-jurisdiction-card-front__tag{background-color:#661b20;border-radius:.4rem;color:#fff;font-weight:700;padding:.5rem 1rem}.wallets-jurisdiction-card-front__tag-icons{display:flex;gap:.6rem}.wallets-jurisdiction-card-front__tag--red-darker{background:#661b20}.wallets-jurisdiction-card-front__tag--red-dark{background:#b33037}.wallets-jurisdiction-card-front__tag--red-light{background:#ff444f}.wallets-jurisdiction-card-front__tag--yellow-dark{background:#b3760d}.wallets-jurisdiction-card-front__tag--yellow-light{background:#ffa912}.wallets-jurisdiction-card-front__tag--violet-dark{background:#4a3871}.wallets-jurisdiction-card-front__tag--brown-dark{background:#664407}@keyframes flip{from{transform:rotateY(-180deg)}to{transform:rotateY(0deg)}}.wallets-dynamic-leverage-modal-transition{animation:flip .6s}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,2BACI,kBAAA,CACA,oBAAA,CACA,0BAAA,CACA,cAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,SAAA,CACA,iBAAA,CACA,WAAA,CAEA,uBAAA,CACA,wCAAA,CAEA,2BAAA,CAEA,iCACI,yBAAA,CAnCJ,yBAiBJ,2BAsBQ,cAAA,CACA,UAAA,CAAA,CAxCJ,yBAiBJ,2BA2BQ,cAAA,CAAA,CAGJ,iCACI,aAAA,CAGJ,iCACI,qDAAA,CAGJ,qCACI,0BAAA,CACA,qDAAA,CAGJ,iCAEI,0BAAA,CACA,YAAA,CACA,qBAAA,CACA,WAAA,CACA,UAAA,CACA,sBAAA,CACA,mBAAA,CAOA,2BAAA,CACA,wBAAA,CA5EJ,yBA4DA,iCAWQ,UAAA,CAAA,CAOJ,uCAEI,yBAAA,CAGJ,wCACI,oBAAA,CACA,iBAAA,CArFR,yBAmFI,wCAKQ,iBAAA,CAAA,CAIR,sCACI,wBAAA,CACA,mBAAA,CACA,UAAA,CACA,eAAA,CACA,kBAAA,CAEA,4CACI,YAAA,CACA,SAAA,CAGJ,kDACI,kBAAA,CAEJ,gDACI,kBAAA,CAEJ,iDACI,kBAAA,CAEJ,mDACI,kBAAA,CAEJ,oDACI,kBAAA,CAEJ,mDACI,kBAAA,CAEJ,kDACI,kBAAA,CAMhB,gBACI,KACI,0BAAA,CAEJ,GACI,uBAAA,CAAA,CAIR,2CACI,kBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-card {\\n    align-items: center;\\n    border-radius: 1.6rem;\\n    border: 0.2rem solid #f2f3f4;\\n    cursor: pointer;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    width: 25%;\\n    position: relative;\\n    height: 100%;\\n\\n    transition-duration: 0.3s;\\n    transition-property: transform, box-shadow;\\n    -webkit-transform-style: preserve-3d;\\n    transform-style: preserve-3d;\\n\\n    &--flip {\\n        transform: rotateY(180deg);\\n    }\\n\\n    @include mobile {\\n        max-width: 100%;\\n        width: 100%;\\n    }\\n\\n    @include mobile {\\n        max-width: 100%;\\n    }\\n\\n    &__link {\\n        color: #ff444f;\\n    }\\n\\n    &:hover {\\n        box-shadow: 0rem 2.4rem 4.8rem 0rem rgba(14, 14, 14, 0.18);\\n    }\\n\\n    &--selected {\\n        border: 0.2rem solid #85acb0;\\n        box-shadow: 0rem 2.4rem 4.8rem 0rem rgba(14, 14, 14, 0.18);\\n    }\\n\\n    &-front {\\n        -webkit-backface-visibility: hidden;\\n        backface-visibility: hidden;\\n        display: flex;\\n        flex-direction: column;\\n        height: 100%;\\n        width: 100%;\\n        justify-content: center;\\n        padding: 2rem 1.6rem;\\n\\n        @include mobile {\\n            width: 100%;\\n        }\\n\\n        -webkit-transform-style: preserve-3d;\\n        transform-style: preserve-3d;\\n        transition: transform 0.3s;\\n\\n        &--flip {\\n            -webkit-transform: rotateY(180deg);\\n            transform: rotateY(180deg);\\n        }\\n\\n        &__label {\\n            margin-bottom: 1.5rem;\\n            text-align: center;\\n\\n            @include mobile {\\n                margin-top: 2.5rem;\\n            }\\n        }\\n\\n        &__tag {\\n            background-color: #661b20;\\n            border-radius: 0.4rem;\\n            color: #ffffff;\\n            font-weight: 700;\\n            padding: 0.5rem 1rem;\\n\\n            &-icons {\\n                display: flex;\\n                gap: 0.6rem;\\n            }\\n\\n            &--red-darker {\\n                background: #661b20;\\n            }\\n            &--red-dark {\\n                background: #b33037;\\n            }\\n            &--red-light {\\n                background: #ff444f;\\n            }\\n            &--yellow-dark {\\n                background: #b3760d;\\n            }\\n            &--yellow-light {\\n                background: #ffa912;\\n            }\\n            &--violet-dark {\\n                background: #4a3871;\\n            }\\n            &--brown-dark {\\n                background: #664407;\\n            }\\n        }\\n    }\\n}\\n\\n@keyframes flip {\\n    from {\\n        transform: rotateY(-180deg);\\n    }\\n    to {\\n        transform: rotateY(0deg);\\n    }\\n}\\n\\n.wallets-dynamic-leverage-modal-transition {\\n    animation: flip 0.6s;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-card-back{backface-visibility:hidden;height:100%;transform:rotateY(180deg);position:absolute;display:flex;flex-direction:column;gap:1.6rem;padding:1.5rem 1.6rem 2.4rem}.wallets-jurisdiction-card-back__icon{cursor:pointer}.wallets-jurisdiction-card-back__row{display:grid;grid-auto-flow:column;grid-gap:1rem;gap:1rem;grid-template-columns:8% auto}.wallets-jurisdiction-card-back__border{border-top:.2rem solid #f2f3f4;margin:1.6rem 0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionCardBack.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,0BAAA,CACA,WAAA,CACA,yBAAA,CACA,iBAAA,CAEA,YAAA,CACA,qBAAA,CACA,UAAA,CACA,4BAAA,CAEA,sCACI,cAAA,CAGJ,qCACI,YAAA,CACA,qBAAA,CACA,aAAA,CAAA,QAAA,CACA,6BAAA,CAGJ,wCACI,8BAAA,CACA,eAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-card-back {\\n    backface-visibility: hidden;\\n    height: 100%;\\n    transform: rotateY(180deg);\\n    position: absolute;\\n\\n    display: flex;\\n    flex-direction: column;\\n    gap: 1.6rem;\\n    padding: 1.5rem 1.6rem 2.4rem;\\n\\n    &__icon {\\n        cursor: pointer;\\n    }\\n\\n    &__row {\\n        display: grid;\\n        grid-auto-flow: column;\\n        gap: 1rem;\\n        grid-template-columns: 8% auto;\\n    }\\n\\n    &__border {\\n        border-top: 0.2rem solid #f2f3f4;\\n        margin: 1.6rem 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-card-row{border-bottom:.2rem solid #f2f3f4;display:flex;flex-direction:column;gap:.8rem;padding:1.4rem 0;width:100%}@media(max-width: 767px){.wallets-jurisdiction-card-row{padding:2rem 0}}.wallets-jurisdiction-card-row:first-child{margin-top:1.6rem}.wallets-jurisdiction-card-row:last-child{border-bottom:none}.wallets-jurisdiction-card-row__header{display:flex;align-items:center;justify-content:space-between}.wallets-jurisdiction-card-row__header-badge{background-color:#661b20;border-radius:.4rem;color:#fff;font-weight:700;padding:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionCardRow.scss\"],\"names\":[],\"mappings\":\"AA0pBA,+BACI,iCAAA,CACA,YAAA,CACA,qBAAA,CACA,SAAA,CACA,gBAAA,CACA,UAAA,CAvBA,yBAiBJ,+BASQ,cAAA,CAAA,CAGJ,2CACI,iBAAA,CAGJ,0CACI,kBAAA,CAGJ,uCACI,YAAA,CACA,kBAAA,CACA,6BAAA,CAEA,6CACI,wBAAA,CACA,mBAAA,CACA,UAAA,CACA,eAAA,CACA,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-card-row {\\n    border-bottom: 0.2rem solid #f2f3f4;\\n    display: flex;\\n    flex-direction: column;\\n    gap: 0.8rem;\\n    padding: 1.4rem 0;\\n    width: 100%;\\n\\n    @include mobile {\\n        padding: 2rem 0;\\n    }\\n\\n    &:first-child {\\n        margin-top: 1.6rem;\\n    }\\n\\n    &:last-child {\\n        border-bottom: none;\\n    }\\n\\n    &__header {\\n        display: flex;\\n        align-items: center;\\n        justify-content: space-between;\\n\\n        &-badge {\\n            background-color: #661b20;\\n            border-radius: 0.4rem;\\n            color: #ffffff;\\n            font-weight: 700;\\n            padding: 1rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-card-tag{background-color:#dfeaff;border-radius:1.3rem 1.3rem 0 0;padding:.8rem;position:absolute;top:0;left:0;text-align:center;width:100%}.wallets-jurisdiction-card-tag+.wallets-jurisdiction-card-front{padding-top:0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionCardTag.scss\"],\"names\":[],\"mappings\":\"AA0pBA,+BACI,wBAAA,CACA,+BAAA,CACA,aAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,iBAAA,CACA,UAAA,CAEA,gEACI,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-card-tag {\\n    background-color: #dfeaff;\\n    border-radius: 1.3rem 1.3rem 0 0;\\n    padding: 0.8rem;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    text-align: center;\\n    width: 100%;\\n\\n    & + .wallets-jurisdiction-card-front {\\n        padding-top: 0;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-jurisdiction-screen{align-items:center;border-radius:1.6rem;display:flex;flex-direction:column;justify-content:center;margin:auto 3rem;height:75vh;width:85vw;transition:all .6s ease}@media(max-width: 767px){.wallets-jurisdiction-screen{height:auto}}.wallets-jurisdiction-screen--flip{transform:rotateY(-180deg);opacity:0;height:70rem}.wallets-jurisdiction-screen__button{align-items:center;background:#ff444f;border-radius:.4rem;border:none;color:#fff;cursor:pointer;display:flex;font-weight:700;height:4rem;justify-content:center;padding:1rem 1.6rem}.wallets-jurisdiction-screen__button--disabled{opacity:.4}@media(max-width: 767px){.wallets-jurisdiction-screen__button{width:100%}}.wallets-jurisdiction-screen__cards{align-items:center;display:flex;gap:1.6rem;justify-content:center;width:100%;height:82%}@media(max-width: 767px){.wallets-jurisdiction-screen__cards{flex-direction:column;padding:2rem 0}}.wallets-jurisdiction-screen__tnc{display:flex;flex-direction:column;font-size:1.4rem;font-weight:700;gap:1.2rem;height:8%;justify-content:center;text-align:center;margin-top:2rem}.wallets-jurisdiction-screen__tnc-checkbox{align-items:center;display:flex;font-weight:400;gap:.4rem;justify-content:center}\", \"\",{\"version\":3,\"sources\":[\"webpack://./JurisdictionScreen.scss\"],\"names\":[],\"mappings\":\"AA0pBA,6BACI,kBAAA,CACA,oBAAA,CACA,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,gBAAA,CACA,WAAA,CACA,UAAA,CACA,uBAAA,CA1BA,yBAiBJ,6BAYQ,WAAA,CAAA,CAGJ,mCACI,0BAAA,CACA,SAAA,CACA,YAAA,CAGJ,qCACI,kBAAA,CACA,kBAAA,CACA,mBAAA,CACA,WAAA,CACA,UAAA,CACA,cAAA,CACA,YAAA,CACA,eAAA,CACA,WAAA,CACA,sBAAA,CACA,mBAAA,CAEA,+CACI,UAAA,CApDR,yBAsCA,qCAkBQ,UAAA,CAAA,CAIR,oCACI,kBAAA,CACA,YAAA,CACA,UAAA,CACA,sBAAA,CACA,UAAA,CACA,UAAA,CAlEJ,yBA4DA,oCASQ,qBAAA,CACA,cAAA,CAAA,CAIR,kCACI,YAAA,CACA,qBAAA,CACA,gBAAA,CACA,eAAA,CACA,UAAA,CACA,SAAA,CACA,sBAAA,CACA,iBAAA,CACA,eAAA,CAEA,2CACI,kBAAA,CACA,YAAA,CACA,eAAA,CACA,SAAA,CACA,sBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-jurisdiction-screen {\\n    align-items: center;\\n    border-radius: 1.6rem;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    margin: auto 3rem;\\n    height: 75vh;\\n    width: 85vw;\\n    transition: all 0.6s ease;\\n\\n    @include mobile {\\n        height: auto;\\n    }\\n\\n    &--flip {\\n        transform: rotateY(-180deg);\\n        opacity: 0;\\n        height: 70rem;\\n    }\\n\\n    &__button {\\n        align-items: center;\\n        background: #ff444f;\\n        border-radius: 0.4rem;\\n        border: none;\\n        color: #ffffff;\\n        cursor: pointer;\\n        display: flex;\\n        font-weight: 700;\\n        height: 4rem;\\n        justify-content: center;\\n        padding: 1rem 1.6rem;\\n\\n        &--disabled {\\n            opacity: 0.4;\\n        }\\n\\n        @include mobile {\\n            width: 100%;\\n        }\\n    }\\n\\n    &__cards {\\n        align-items: center;\\n        display: flex;\\n        gap: 1.6rem;\\n        justify-content: center;\\n        width: 100%;\\n        height: 82%;\\n\\n        @include mobile {\\n            flex-direction: column;\\n            padding: 2rem 0;\\n        }\\n    }\\n\\n    &__tnc {\\n        display: flex;\\n        flex-direction: column;\\n        font-size: 1.4rem;\\n        font-weight: 700;\\n        gap: 1.2rem;\\n        height: 8%;\\n        justify-content: center;\\n        text-align: center;\\n        margin-top: 2rem;\\n\\n        &-checkbox {\\n            align-items: center;\\n            display: flex;\\n            font-weight: 400;\\n            gap: 0.4rem;\\n            justify-content: center;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-account-type{display:flex;align-items:center;flex-shrink:0;border-radius:.8rem;background:#fff;background:var(--system-light-8-primary-background, #fff)}.wallets-mt5-account-type-content{height:70vh;width:85vw;display:flex;padding:2.4rem;flex-direction:row;justify-content:center;align-items:center;gap:2.4rem;flex:1 0 0;align-self:stretch}@media(max-width: 767px){.wallets-mt5-account-type-content{flex-direction:row;align-items:center;display:flex;justify-content:flex-start;width:100%;overflow-x:auto;height:100%}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5AccountType.scss\"],\"names\":[],\"mappings\":\"AA0pBA,0BACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,mBAAA,CACA,eAAA,CAAA,yDAAA,CAEA,kCACI,WAAA,CACA,UAAA,CACA,YAAA,CACA,cAAA,CACA,kBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CACA,UAAA,CACA,kBAAA,CAlCJ,yBAwBA,kCAaQ,kBAAA,CACA,kBAAA,CACA,YAAA,CACA,0BAAA,CACA,UAAA,CACA,eAAA,CACA,WAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-account-type {\\n    display: flex;\\n    align-items: center;\\n    flex-shrink: 0;\\n    border-radius: 0.8rem;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    &-content {\\n        height: 70vh;\\n        width: 85vw;\\n        display: flex;\\n        padding: 2.4rem;\\n        flex-direction: row;\\n        justify-content: center;\\n        align-items: center;\\n        gap: 2.4rem;\\n        flex: 1 0 0;\\n        align-self: stretch;\\n\\n        @include mobile {\\n            flex-direction: row;\\n            align-items: center;\\n            display: flex;\\n            justify-content: flex-start;\\n            width: 100%;\\n            overflow-x: auto;\\n            height: 100%;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-account-type-card{cursor:pointer}.wallets-mt5-account-type-card-list{display:flex;width:26.4rem;height:32rem;align-items:flex-start}.wallets-mt5-account-type-card-list-content{display:flex;align-items:flex-start;flex:1 0 0;padding:2.4rem;align-self:stretch;border-radius:1.6rem;border:.1rem solid #d6dadb;border:.1rem solid var(--system-light-5-active-background, #d6dadb);background:#fff;background:var(--system-light-8-primary-background, #fff)}.wallets-mt5-account-type-card-list-content-details{display:flex;flex-direction:column;align-items:center;gap:2.4rem;align-self:stretch;justify-content:center}.wallets-mt5-account-type-card-list-content-details-title-description{display:flex;flex-direction:column;align-items:center;gap:.8rem;align-self:stretch}.wallets-mt5-account-type-card-list-content-details-title{flex:1 0 0;color:#333;color:var(--system-light-1-prominent-text, #333);text-align:center;align-items:center;display:flex;font-size:2rem;font-style:normal;font-weight:700;line-height:3rem}.wallets-mt5-account-type-card-list-content-details-description{align-self:stretch;color:#333;color:var(--system-light-2-general-text, #333);text-align:center;font-size:1.4rem;font-style:normal;font-weight:400;line-height:2rem}.wallets-mt5-account-type-card-selected{border-radius:1.6rem;border:.2rem solid #85acb0;border:.2rem solid var(--brand-blue, #85acb0);background:#fff;background:var(--system-light-8-primary-background, #fff);box-shadow:0rem 2.4rem 4.8rem 0rem rgba(14,14,14,.18)}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5AccountTypeCard.scss\"],\"names\":[],\"mappings\":\"AA0pBA,+BACI,cAAA,CACA,oCACI,YAAA,CACA,aAAA,CACA,YAAA,CACA,sBAAA,CAEA,4CACI,YAAA,CACA,sBAAA,CACA,UAAA,CACA,cAAA,CACA,kBAAA,CACA,oBAAA,CACA,0BAAA,CAAA,mEAAA,CACA,eAAA,CAAA,yDAAA,CAEA,oDACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CACA,kBAAA,CACA,sBAAA,CAEA,sEACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,SAAA,CACA,kBAAA,CAGJ,0DACI,UAAA,CACA,UAAA,CAAA,gDAAA,CACA,iBAAA,CACA,kBAAA,CACA,YAAA,CAGA,cAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAGJ,gEACI,kBAAA,CACA,UAAA,CAAA,8CAAA,CACA,iBAAA,CAGA,gBAAA,CACA,iBAAA,CACA,eAAA,CACA,gBAAA,CAKhB,wCACI,oBAAA,CACA,0BAAA,CAAA,6CAAA,CACA,eAAA,CAAA,yDAAA,CAGA,qDAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-account-type-card {\\n    cursor: pointer;\\n    &-list {\\n        display: flex;\\n        width: 26.4rem;\\n        height: 32rem;\\n        align-items: flex-start;\\n\\n        &-content {\\n            display: flex;\\n            align-items: flex-start;\\n            flex: 1 0 0;\\n            padding: 2.4rem;\\n            align-self: stretch;\\n            border-radius: 1.6rem;\\n            border: 0.1rem solid var(--system-light-5-active-background, #d6dadb);\\n            background: var(--system-light-8-primary-background, #fff);\\n\\n            &-details {\\n                display: flex;\\n                flex-direction: column;\\n                align-items: center;\\n                gap: 2.4rem;\\n                align-self: stretch;\\n                justify-content: center;\\n\\n                &-title-description {\\n                    display: flex;\\n                    flex-direction: column;\\n                    align-items: center;\\n                    gap: 0.8rem;\\n                    align-self: stretch;\\n                }\\n\\n                &-title {\\n                    flex: 1 0 0;\\n                    color: var(--system-light-1-prominent-text, #333);\\n                    text-align: center;\\n                    align-items: center;\\n                    display: flex;\\n\\n                    /* desktop/subtitle/Sub 2 - bold */\\n                    font-size: 2rem;\\n                    font-style: normal;\\n                    font-weight: 700;\\n                    line-height: 3rem; /* 150% */\\n                }\\n\\n                &-description {\\n                    align-self: stretch;\\n                    color: var(--system-light-2-general-text, #333);\\n                    text-align: center;\\n\\n                    /* desktop/paragraph/P2 - regular */\\n                    font-size: 1.4rem;\\n                    font-style: normal;\\n                    font-weight: 400;\\n                    line-height: 2rem; /* 142.857% */\\n                }\\n            }\\n        }\\n    }\\n    &-selected {\\n        border-radius: 1.6rem;\\n        border: 0.2rem solid var(--brand-blue, #85acb0);\\n        background: var(--system-light-8-primary-background, #fff);\\n\\n        /* Shadows/xxl */\\n        box-shadow: 0rem 2.4rem 4.8rem 0rem rgba(14, 14, 14, 0.18);\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-details-item{display:flex;align-items:center;height:3.2rem;justify-content:space-between;background-color:#f2f3f4;padding:.5rem 0 .5rem .8rem}.wallets-mt5-trade-details-item__values{display:flex;align-items:center}.wallets-mt5-trade-details-item__values .wallets-text{font-family:\\\"Courier\\\",serif}.wallets-mt5-trade-details-item__values .wallets-clipboard{border:none;border-radius:none}.wallets-mt5-trade-details-item__edit{margin:0 .5rem;cursor:pointer}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeDetailsItem.scss\"],\"names\":[],\"mappings\":\"AA0pBA,gCACI,YAAA,CACA,kBAAA,CACA,aAAA,CACA,6BAAA,CACA,wBAAA,CACA,2BAAA,CAEA,wCACI,YAAA,CACA,kBAAA,CAEA,sDACI,2BAAA,CAGJ,2DACI,WAAA,CACA,kBAAA,CAIR,sCACI,cAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-details-item {\\n    display: flex;\\n    align-items: center;\\n    height: 3.2rem;\\n    justify-content: space-between;\\n    background-color: #f2f3f4;\\n    padding: 0.5rem 0 0.5rem 0.8rem;\\n\\n    &__values {\\n        display: flex;\\n        align-items: center;\\n\\n        & .wallets-text {\\n            font-family: 'Courier', serif;\\n        }\\n\\n        & .wallets-clipboard {\\n            border: none;\\n            border-radius: none;\\n        }\\n    }\\n\\n    &__edit {\\n        margin: 0 0.5rem;\\n        cursor: pointer;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-link{display:flex;justify-content:space-between;align-items:center;border-top:.2rem solid #f2f3f4;padding:1.6rem 2.4rem}.wallets-mt5-trade-link--left{display:flex;align-items:center;gap:1.6rem}.wallets-mt5-trade-link--left svg{width:3.2rem;height:3.2rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeLink.scss\"],\"names\":[],\"mappings\":\"AA0pBA,wBACI,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,8BAAA,CACA,qBAAA,CAEA,8BACI,YAAA,CACA,kBAAA,CACA,UAAA,CAEA,kCACI,YAAA,CACA,aAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-link {\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    border-top: 0.2rem solid #f2f3f4;\\n    padding: 1.6rem 2.4rem;\\n\\n    &--left {\\n        display: flex;\\n        align-items: center;\\n        gap: 1.6rem;\\n\\n        & svg {\\n            width: 3.2rem;\\n            height: 3.2rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-mt5-trade-screen{width:45vw;max-width:60rem;min-width:51.2rem}@media(max-width: 767px){.wallets-mt5-trade-screen{width:100%;min-width:100%;height:auto}}.wallets-mt5-trade-screen__details{display:flex;flex-direction:column;padding:2.4rem;gap:1.6rem}.wallets-mt5-trade-screen__details-description{display:flex;align-items:center;justify-content:space-between;width:100%}.wallets-mt5-trade-screen__details-description-title{display:flex;flex-direction:column}.wallets-mt5-trade-screen__details-description--left{display:flex;align-items:center;gap:.8rem}.wallets-mt5-trade-screen__details-description--left>svg{transform:scale(0.6)}.wallets-mt5-trade-screen__details-description--left .wallets-mt5-trade-screen__details-title{display:flex;flex-direction:column;gap:.4rem}.wallets-mt5-trade-screen__details-clipboards{display:flex;flex-direction:column;gap:.2rem}.wallets-mt5-trade-screen__details-clipboards .wallets-mt5-trade-details-item:first-child{border-radius:.7rem .7rem 0 0}.wallets-mt5-trade-screen__details-clipboards .wallets-mt5-trade-details-item:last-child{border-radius:0 0 .7rem .7rem}.wallets-mt5-trade-screen__details-maintainance{display:grid;grid-template-columns:3rem auto}.wallets-mt5-trade-screen__links{width:100%}.wallets-mt5-trade-screen__links-link{align-items:center;display:grid;grid-template-columns:10% auto 10%;grid-gap:1.6rem;border-top:.2rem solid #f2f3f4;padding:1.6rem 2.4rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./MT5TradeScreen.scss\"],\"names\":[],\"mappings\":\"AA0pBA,0BACI,UAAA,CACA,eAAA,CACA,iBAAA,CApBA,yBAiBJ,0BAMQ,UAAA,CACA,cAAA,CACA,WAAA,CAAA,CAGJ,mCACI,YAAA,CACA,qBAAA,CACA,cAAA,CACA,UAAA,CAEA,+CACI,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,UAAA,CAEA,qDACI,YAAA,CACA,qBAAA,CAGJ,qDACI,YAAA,CACA,kBAAA,CACA,SAAA,CAEA,yDACI,oBAAA,CAGJ,8FACI,YAAA,CACA,qBAAA,CACA,SAAA,CAKZ,8CACI,YAAA,CACA,qBAAA,CACA,SAAA,CAEA,0FACI,6BAAA,CAGJ,yFACI,6BAAA,CAIR,gDACI,YAAA,CACA,+BAAA,CAIR,iCACI,UAAA,CAEA,sCACI,kBAAA,CACA,YAAA,CACA,kCAAA,CACA,eAAA,CACA,8BAAA,CACA,qBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-mt5-trade-screen {\\n    width: 45vw;\\n    max-width: 60rem;\\n    min-width: 51.2rem;\\n\\n    @include mobile {\\n        width: 100%;\\n        min-width: 100%;\\n        height: auto;\\n    }\\n\\n    &__details {\\n        display: flex;\\n        flex-direction: column;\\n        padding: 2.4rem;\\n        gap: 1.6rem;\\n\\n        &-description {\\n            display: flex;\\n            align-items: center;\\n            justify-content: space-between;\\n            width: 100%;\\n\\n            &-title {\\n                display: flex;\\n                flex-direction: column;\\n            }\\n\\n            &--left {\\n                display: flex;\\n                align-items: center;\\n                gap: 0.8rem;\\n\\n                & > svg {\\n                    transform: scale(0.6);\\n                }\\n\\n                .wallets-mt5-trade-screen__details-title {\\n                    display: flex;\\n                    flex-direction: column;\\n                    gap: 0.4rem;\\n                }\\n            }\\n        }\\n\\n        &-clipboards {\\n            display: flex;\\n            flex-direction: column;\\n            gap: 0.2rem;\\n\\n            & .wallets-mt5-trade-details-item:first-child {\\n                border-radius: 0.7rem 0.7rem 0 0;\\n            }\\n\\n            & .wallets-mt5-trade-details-item:last-child {\\n                border-radius: 0 0 0.7rem 0.7rem;\\n            }\\n        }\\n\\n        &-maintainance {\\n            display: grid;\\n            grid-template-columns: 3rem auto;\\n        }\\n    }\\n\\n    &__links {\\n        width: 100%;\\n\\n        &-link {\\n            align-items: center;\\n            display: grid;\\n            grid-template-columns: 10% auto 10%;\\n            grid-gap: 1.6rem;\\n            border-top: 0.2rem solid #f2f3f4;\\n            padding: 1.6rem 2.4rem;\\n        }\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-success{display:flex;flex-direction:column;justify-content:center;align-items:center;padding:2.4rem;gap:2.4rem;width:39.2rem;border-radius:1rem;text-align:center;background:#fff;background:var(--system-light-8-primary-background, #fff)}@media(max-width: 767px){.wallets-success{width:100%;height:calc(100% - 8.5rem)}}.wallets-success__info{display:flex;flex-direction:column;align-items:flex-start;width:24rem;height:12.8rem;padding:1rem;position:relative;border-radius:1rem}@media(max-width: 767px){.wallets-success__info{height:-moz-fit-content;height:fit-content}}.wallets-success__info-badge{position:absolute;top:0;right:0;font-weight:700;border-radius:0 1rem 0rem;display:grid;align-items:center;justify-items:center;place-items:center;color:#fff;height:2.5rem;width:5rem}.wallets-success__info-badge--demo{background-color:#377cfc}.wallets-success__info-badge--real{background-color:#ff444f}.wallets-success__button{background-color:#ff444f;color:#fff;cursor:pointer;font-weight:700;width:100%;padding:1rem;border:none;border-radius:.5rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./Success.scss\"],\"names\":[],\"mappings\":\"AA0pBA,iBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,cAAA,CACA,UAAA,CACA,aAAA,CACA,kBAAA,CACA,iBAAA,CACA,eAAA,CAAA,yDAAA,CA3BA,yBAiBJ,iBAaQ,UAAA,CACA,0BAAA,CAAA,CAGJ,uBACI,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,WAAA,CACA,cAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CA1CJ,yBAkCA,uBAWQ,uBAAA,CAAA,kBAAA,CAAA,CAGJ,6BACI,iBAAA,CACA,KAAA,CACA,OAAA,CACA,eAAA,CACA,yBAAA,CACA,YAAA,CACA,kBAAA,CAAA,oBAAA,CAAA,kBAAA,CACA,UAAA,CACA,aAAA,CACA,UAAA,CAEA,mCACI,wBAAA,CAGJ,mCACI,wBAAA,CAKZ,yBACI,wBAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,UAAA,CACA,YAAA,CACA,WAAA,CACA,mBAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-success {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 2.4rem;\\n    gap: 2.4rem;\\n    width: 39.2rem;\\n    border-radius: 1rem;\\n    text-align: center;\\n    background: var(--system-light-8-primary-background, #fff);\\n\\n    @include mobile {\\n        width: 100%;\\n        height: calc(100% - 8.5rem);\\n    }\\n\\n    &__info {\\n        display: flex;\\n        flex-direction: column;\\n        align-items: flex-start;\\n        width: 24rem;\\n        height: 12.8rem;\\n        padding: 1rem;\\n        position: relative;\\n        border-radius: 1rem;\\n\\n        @include mobile {\\n            height: fit-content;\\n        }\\n\\n        &-badge {\\n            position: absolute;\\n            top: 0;\\n            right: 0;\\n            font-weight: 700;\\n            border-radius: 0 1rem 0rem;\\n            display: grid;\\n            place-items: center;\\n            color: #ffffff;\\n            height: 2.5rem;\\n            width: 5rem;\\n\\n            &--demo {\\n                background-color: #377cfc;\\n            }\\n\\n            &--real {\\n                background-color: #ff444f;\\n            }\\n        }\\n    }\\n\\n    &__button {\\n        background-color: #ff444f;\\n        color: #ffffff;\\n        cursor: pointer;\\n        font-weight: 700;\\n        width: 100%;\\n        padding: 1rem;\\n        border: none;\\n        border-radius: 0.5rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\", \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-cashier-modal-route{width:100%;flex:1;flex-direction:column;display:flex}\", \"\",{\"version\":3,\"sources\":[\"webpack://./CashierModalRoute.scss\"],\"names\":[],\"mappings\":\"AA0pBA,6BACI,UAAA,CACA,MAAA,CACA,qBAAA,CACA,YAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-cashier-modal-route {\\n    width: 100%;\\n    flex: 1;\\n    flex-direction: column;\\n    display: flex;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".wallets-listing-route{width:100%;flex:1;display:flex;flex-direction:column;align-items:center;justify-content:center;gap:2.4rem}@media(min-width: 1024px){.wallets-listing-route{padding:4rem}}\", \"\",{\"version\":3,\"sources\":[\"webpack://./WalletsListingRoute.scss\"],\"names\":[],\"mappings\":\"AA0pBA,uBACI,UAAA,CACA,MAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,UAAA,CAZA,0BAKJ,uBAUQ,YAAA,CAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n.wallets-listing-route {\\n    width: 100%;\\n    flex: 1;\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n    justify-content: center;\\n    gap: 2.4rem;\\n\\n    @include desktop {\\n        padding: 4rem;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body .wallets-app{font-family:\\\"IBM Plex Sans\\\" sans-serif;font-size:1rem}\", \"\",{\"version\":3,\"sources\":[\"webpack://./fonts.scss\"],\"names\":[],\"mappings\":\"AA4pBA,kBACI,sCAAA,CACA,cAAA\",\"sourcesContent\":[\"/*------------------------------------*\\n *  # Constants\\n *------------------------------------*/\\n\\n/* stylelint-disable color-no-hex */\\n\\n/* COLOR PALETTE */\\n\\n/* colors */\\n$color-black: #0e0e0e;\\n$color-black-1: #333333;\\n$color-black-3: #151717;\\n$color-black-4: #1d1f20;\\n$color-black-5: #242828;\\n$color-black-6: #3e3e3e;\\n$color-black-7: #000000;\\n$color-black-8: #323738;\\n$color-black-9: #5c5c5c;\\n$color-blue: #377cfc;\\n$color-blue-1: #0dc2e7;\\n$color-blue-2: #2a3052;\\n$color-blue-3: #0796e0;\\n$color-blue-4: #0677af;\\n$color-blue-5: #dfeaff;\\n$color-blue-6: #92b8ff;\\n$color-blue-7: #182130;\\n$color-blue-8: #e6f5ff;\\n$color-brown: #664407;\\n$color-green: #85acb0;\\n$color-green-1: #4bb4b3;\\n$color-green-2: #3d9494;\\n$color-green-3: #00a79e;\\n$color-green-4: #008079;\\n$color-green-5: #4bb4b329;\\n$color-green-6: #17eabd;\\n$color-green-7: #e8fdf8;\\n$color-grey: #c2c2c2;\\n$color-grey-1: #999999;\\n$color-grey-2: #f2f3f4;\\n$color-grey-3: #eaeced;\\n$color-grey-4: #e6e9e9;\\n$color-grey-5: #d6dadb;\\n$color-grey-6: #d6d6d6;\\n$color-grey-7: #6e6e6e;\\n$color-grey-8: #d7d7d7;\\n$color_grey-9: #868686;\\n$color-grey-10: #919191;\\n$color-grey-11: #fafafa;\\n$color-grey-12: #f5f7fa;\\n$color-grey-13: #2e2e2e;\\n$color-orange: #ff6444;\\n$color-purple: #722fe4;\\n$color-red: #ff444f;\\n$color-red-1: #ec3f3f;\\n$color-red-2: #cc2e3d;\\n$color-red-3: #a32430;\\n$color-red-4: #d33636;\\n$color-red-5: #eb3e48;\\n$color-red-6: #ec3f3f29;\\n$color-red-7: #ffe1e3;\\n$color-red-8: #661b20;\\n$color-red-9: #b33037;\\n$color-red-10: #ff444f;\\n$color-violet: #4a3871;\\n$color-white: #ffffff;\\n$color-yellow: #ffad3a;\\n$color-yellow-1: #b3760d;\\n$color-yellow-2: #ffa912;\\n$color-yellow-3: rgba(255, 173, 58, 0.16);\\n\\n/* status colors */\\n$color-status-warning: rgba(255, 173, 58, 0.16);\\n$color-status-information: rgba(55, 124, 252, 0.16);\\n$color-status-announcement: rgba(75, 180, 179, 0.16);\\n$color-status-error: rgba(236, 63, 63, 0.16);\\n\\n/* alpha colors */\\n$alpha-color-black-1: transparentize($color-black-7, 0.28);\\n$alpha-color-black-2: transparentize($color-black, 0.04);\\n$alpha-color-black-3: transparentize($color-black-7, 0.92);\\n$alpha-color-black-4: transparentize($color-black-7, 0.84);\\n$alpha-color-black-5: transparentize($color-black-7, 0.16);\\n$alpha-color-black-6: transparentize($color-black-7, 0.36);\\n$alpha-color-black-7: transparentize($color-black, 0.5);\\n$alpha-color-blue-1: transparentize($color-blue, 0.84);\\n$alpha-color-blue-2: transparentize($color-blue-3, 0.84);\\n$alpha-color-blue-3: transparentize($color-blue, 0.92);\\n$alpha-color-white-1: transparentize($color-white, 0.04);\\n$alpha-color-white-2: transparentize($color-white, 0.84);\\n$alpha-color-white-3: transparentize($color-white, 0.92);\\n$alpha-color-white-4: transparentize($color-white, 0.3);\\n$alpha-color-red-1: transparentize($color-red, 0.92);\\n$alpha-color-red-2: transparentize($color-red, 0.84);\\n$alpha-color-red-3: transparentize($color-red, 0.76);\\n$alpha-color-green-1: transparentize($color-green-1, 0.08);\\n$alpha-color-green-2: transparentize($color-green-3, 0.08);\\n$alpha-color-yellow-1: transparentize($color-yellow, 0.84);\\n\\n/* gradient colors */\\n$gradient-color-green-1: linear-gradient(to top, $color-white, transparentize($color-green-1, 0.84));\\n$gradient-color-green-2: linear-gradient(to top, $color-black, transparentize($color-green-3, 0.84));\\n$gradient-color-red-1: linear-gradient(to top, $color-white, transparentize($color-red, 0.84));\\n$gradient-color-red-2: linear-gradient(to top, $color-black, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-1: linear-gradient(to top, $color-white 85%, transparentize($color-red, 0.84));\\n$contract-gradient-color-red-2: linear-gradient(to top, $color-black 85%, transparentize($color-red, 0.84));\\n$gradient-color-white: linear-gradient(to right, transparentize($color-white, 1) -5%, $color-white 71%);\\n$gradient-color-black: linear-gradient(to right, transparentize($color-black, 1) -5%, $color-black 71%);\\n\\n$gradient-color-purple: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-color-blue: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-color-orange: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-color-black-2: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-color-orange-2: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-color-blue-2: linear-gradient(90deg, #3d83cf 0%, #2775ca 100%);\\n$gradient-color-green-3: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-color-blue-3: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n$gradient-color-orange-3: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-color-orange-4: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-color-blue-4: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-color-red-3: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-color-red-4: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-color-black-3: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n$gradient-color-black-4: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-color-black-5: linear-gradient(180deg, rgba(0, 0, 0, 0) 50%, rgba(0, 0, 0, 0.16) 100%);\\n$gradient-color-white-2: linear-gradient(180deg, rgba(255, 255, 255, 0) 50%, rgba(255, 255, 255, 0.16) 100%);\\n$gradient-color-blue-5: linear-gradient(90deg, #00a8af 0%, #04cfd8 104.41%);\\n$gradient-color-gold: linear-gradient(90deg, #f7931a 0%, #ffc71b 104.41%);\\n$gradient-color-green-4: linear-gradient(90deg, #1db193 0%, #09da7a 104.41%);\\n\\n/* Preserve legacy variables */\\n/* Primary */\\n\\n$COLOR_BLACK: #000000;\\n$COLOR_BLACK_2: #1d1f20;\\n$COLOR_BLACK_3: #0e0e0e;\\n$COLOR_GREEN_1: #39b19d;\\n$COLOR_GREEN_2: #2d9f93;\\n$COLOR_GREEN_3: #21ce99;\\n$COLOR_GREEN_4: #00a79e;\\n$COLOR_GREEN_5: #4bb4b3;\\n$COLOR_ORANGE: #ff9933;\\n$COLOR_DARK_ORANGE: #ff8802;\\n$COLOR_PURPLE: #4f60ae;\\n$COLOR_RED: #e31c4b;\\n$COLOR_RED_2: #cc2e3d;\\n$COLOR_RED_3: #ec3f3f;\\n$COLOR_CORAL_RED: #ff444f;\\n$COLOR_SKY_BLUE: #2196f3;\\n$COLOR_WHITE: #ffffff;\\n$COLOR_BLUE: #1c5ae3;\\n// Light theme\\n$COLOR_LIGHT_BLACK_1: rgba(0, 0, 0, 0.8);\\n$COLOR_LIGHT_BLACK_2: rgba(0, 0, 0, 0.4);\\n$COLOR_LIGHT_BLACK_3: rgba(0, 0, 0, 0.16);\\n$COLOR_LIGHT_BLACK_3_SOLID_1: #d6d6d6;\\n$COLOR_LIGHT_BLACK_3_SOLID_2: #b3b3b3;\\n$COLOR_LIGHT_BLACK_4: rgba(0, 0, 0, 0.04);\\n$COLOR_LIGHT_BLACK_4_SOLID: #f4f4f6;\\n$COLOR_LIGHT_GRAY_1: #999cac;\\n$COLOR_LIGHT_GRAY_2: rgba(153, 156, 172, 0.32);\\n$COLOR_LIGHT_GRAY_3: #eaeced;\\n$COLOR_LIGHT_GRAY_4: #6e6e6e;\\n$COLOR_LIGHT_GRAY_5: #c2c2c2;\\n$COLOR_LIGHT_GRAY_6: #f2f3f4;\\n$COLOR_LIGHT_GREEN_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_LIGHT_RED_GRADIENT: linear-gradient(to top, rgba(255, 255, 255, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_LIGHT_WHITE_GRADIENT: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));\\n// Dark theme\\n$COLOR_DARK_BLACK_GRADIENT: linear-gradient(to right, rgba(16, 19, 32, 1), rgba(16, 19, 32, 0));\\n$COLOR_DARK_BLUE_1: #0b0e18;\\n$COLOR_DARK_BLUE_2: #101320;\\n$COLOR_DARK_BLUE_3: #191c31;\\n$COLOR_DARK_BLUE_4: #202641;\\n$COLOR_DARK_BLUE_5: #2a3052;\\n$COLOR_DARK_BLUE_6: #555975;\\n$COLOR_DARK_BLUE_7: #7f8397;\\n$COLOR_DARK_BLUE_8: rgba(127, 131, 151, 0.3);\\n$COLOR_DARK_GREEN_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(0, 148, 117, 0.16));\\n$COLOR_DARK_RED_GRADIENT: linear-gradient(to top, rgba(16, 19, 32, 0), rgba(227, 28, 75, 0.16));\\n$COLOR_DARK_GRAY_1: #282a37;\\n$COLOR_DARK_GRAY_2: #303342;\\n$COLOR_DARK_GRAY_3: #555975;\\n$COLOR_DARK_GRAY_4: #999999;\\n/* stylelint-enable color-no-hex */\\n\\n$BORDER_RADIUS: 4px;\\n$BORDER_RADIUS_2: 8px;\\n\\n$MAX_CONTAINER_WIDTH: 1440px;\\n\\n$POSITIONS_DRAWER_WIDTH: 240px;\\n$POSITIONS_DRAWER_MARGIN: 8px;\\n\\n$HEADER_HEIGHT: 48px;\\n$FOOTER_HEIGHT: 36px;\\n\\n$MOBILE_HEADER_HEIGHT: 40px;\\n$MOBILE_HEADER_HEIGHT_DASHBOARD: 48px;\\n$MOBILE_WRAPPER_HEADER_HEIGHT: 40px;\\n$MOBILE_WRAPPER_FOOTER_HEIGHT: 70px;\\n\\n$SIDEBAR_WIDTH: 240px;\\n\\n/* Wallet gradient background */\\n$gradient-airtm: linear-gradient(90deg, #1a8fff 0%, #0083ff 100%);\\n$gradient-banxa: linear-gradient(90deg, #000000 0%, #4ac0ba 96.35%);\\n$gradient-bitcoin: linear-gradient(90deg, #f89e32 0%, #f7931b 103.12%);\\n$gradient-credit: linear-gradient(274.73deg, #464750 3.82%, #0e0f11 88.49%);\\n$gradient-dp2p: linear-gradient(90deg, #ff444f 0%, #211d1e 95.22%);\\n$gradient-fasapay: linear-gradient(90deg, #f6931c 0%, #4873ac 95.22%);\\n$gradient-jeton: linear-gradient(90deg, #ff7635 0%, #ff671f 100%);\\n$gradient-mastercard: linear-gradient(90deg, #eb001b 0%, #f79e1b 100%);\\n$gradient-neteller: linear-gradient(90deg, #98cc53 0%, #8dc640 100%);\\n$gradient-paylivre: linear-gradient(90deg, #352caa 0%, #9a6bfc 100%);\\n$gradient-paysafe: linear-gradient(90deg, #e3001b 0%, #008ac9 100%);\\n$gradient-perfectmoney: linear-gradient(90deg, #f12c2c 0%, #ef1515 100%);\\n$gradient-skrill: linear-gradient(274.73deg, #5a205d 3.82%, #7f3883 88.49%);\\n$gradient-sticpay: linear-gradient(90deg, #f36938 0%, #f25822 100%);\\n$gradient-virtual: linear-gradient(90deg, #ff6444 0%, #ff444f 100%);\\n$gradient-visa: linear-gradient(274.73deg, #1a205e 3.82%, #122d96 88.49%);\\n$gradient-webmoney: linear-gradient(90deg, #1a77ac 0%, #0068a3 100%);\\n\\n/* App Cards gradient background */\\n$gradient-virtual: linear-gradient(274.25deg, #333333 9.01%, #5c5b5b 103.31%);\\n$gradient-virtual-swap-free: linear-gradient(58.51deg, #061828 28.06%, #1a3c60 93.51%);\\n\\n/* Wallets */\\n$ready-banner-bg-color: #e2f3f3;\\n$ready-banner-tick-bg-color: #4ab4b3;\\n$wallet-demo-bg-color: #fff8f9;\\n$wallet-dark-demo-bg-color: #140506;\\n$wallet-demo-divider-color: #fff0f1;\\n$wallet-box-shadow: 0px 12px 16px -4px rgba(14, 14, 14, 0.08), 0px 4px 6px -2px rgba(14, 14, 14, 0.03);\\n$btn-shadow: 0px 24px 24px 0px rgba(0, 0, 0, 0.08), 0px 0px 24px 0px rgba(0, 0, 0, 0.08);\\n\\n/*------------------------------------*\\n *  # SASS Mixins and Functions\\n *------------------------------------*/\\n\\n/*\\n * SASS interpolation\\n */\\n// Requires the calc-interpolation function which can also be used independently\\n@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {\\n    $a: ($max-value - $min-value) / ($max-screen - $min-screen);\\n    $b: $min-value - $a * $min-screen;\\n\\n    $sign: '+';\\n    @if ($b < 0) {\\n        $sign: '-';\\n        $b: abs($b);\\n    }\\n    @return calc(#{$a * 100}vw #{$sign} #{$b});\\n}\\n\\n@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {\\n    & {\\n        @each $property in $properties {\\n            #{$property}: $min-value;\\n        }\\n        @media screen and (min-width: $min-screen) {\\n            @each $property in $properties {\\n                #{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);\\n            }\\n        }\\n        @media screen and (min-width: $max-screen) {\\n            @each $property in $properties {\\n                #{$property}: $max-value;\\n            }\\n        }\\n    }\\n}\\n\\n/*\\n * PX to EM\\n * @param $px - px value to be converted\\n * @param $base - base font size (in `em`)\\n * Note: 'em' values are calculate based on the element font-size\\n *       to properly converts 'px' to 'em', please pass in the element font-size with it\\n * Usage example:\\n    padding: em(16px, 1.6em); // font-size in 'em'\\n */\\n@function em($px, $base: $BASE_FONT_SIZE) {\\n    $list: ();\\n    @if length($px) != 1 {\\n        @for $i from 1 through length($px) {\\n            $val_em: (nth($px, $i) / $base) * 1em;\\n            $list: append($list, $val_em, space);\\n        }\\n        @return $list;\\n    } @else {\\n        @return ($px / $base) * 1em;\\n    }\\n}\\n\\n/*\\n * Set property by passing a property name, and values.\\n * @param $property name - padding, margin etc.\\n * @param $values        - values in `px` (space separated for multiple values)\\n * @param $font-size     - base font-size in `em`\\n * Usage example:\\n   @include toEm(padding, 8px 16px 8px, 1.6em);\\n */\\n@mixin toEm($property, $values, $font-size: $BASE_FONT_SIZE) {\\n    #{$property}: em($values, $font-size);\\n}\\n\\n/*\\n * Generate typefaces key-value pair of variable name and config\\n * Example:\\n   --paragraph-center-bold-black: (14px, center, bold, black)\\n */\\n@function generate-typefaces() {\\n    $typeface_list: ();\\n    @each $fontsize_name, $size in $FONT_SIZES {\\n        @each $textalign_name, $text_align in $TEXT_ALIGN {\\n            @each $color_name, $color in $FONT_COLORS {\\n                @each $fontweight_name, $weight in $FONT_WEIGHTS {\\n                    $key: --#{$fontsize_name}-#{$textalign_name}-#{$fontweight_name}-#{$color_name};\\n                    $val: ($size, $text_align, $weight, $color);\\n                    $typeface: (\\n                        $key: $val,\\n                    );\\n                    $typeface_list: map-merge($typeface_list, $typeface);\\n                }\\n            }\\n        }\\n    }\\n    // @debug $typeface_list; /* uncomment to debug */\\n    @return $typeface_list;\\n}\\n\\n/*\\n * Sets font-size, font-weight, color, text-transform, text-align and line-height\\n * Usage example:\\n   @include setTypeface(16px, bold, black, uppercase);\\n */\\n@mixin setTypeface($size, $align, $weight, $colour, $tt) {\\n    @if $size {\\n        font-size: $size;\\n    }\\n    @if $colour {\\n        color: $colour;\\n    }\\n    @if $weight {\\n        font-weight: $weight;\\n    }\\n    @if $tt {\\n        text-transform: $tt;\\n    }\\n    @if $align {\\n        text-align: $align;\\n    }\\n    @if $size == 1.6rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'large');\\n    } @else if $size == 1.4rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'medium');\\n    } @else if $size == 1.2rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'small');\\n    } @else if $size == 1rem {\\n        line-height: map-get($map: $LINEHEIGHTS, $key: 'xsmall');\\n    } @else {\\n        line-height: unset;\\n    }\\n}\\n\\n/*\\n * Set typefaces by passing a typeface variable name\\n * @param $var   - typeface variable\\n * @param $tt    - text-transform property\\n * @param $align - text-align property\\n * Usage example:\\n   @include typeface(--paragraph-bold-black, uppercase, center);\\n */\\n@mixin typeface($var, $tt: none) {\\n    $typeface_config: map-get(\\n        $map: $TYPEFACES_LIST,\\n        $key: $var,\\n    );\\n\\n    $size: nth($typeface_config, 1); // font-size\\n    $align: nth($typeface_config, 2); // text-align\\n    $weight: nth($typeface_config, 3); // font-weight\\n    $color: nth($typeface_config, 4); // color\\n    @include setTypeface($size, $align, $weight, $color, $tt);\\n}\\n\\n/*\\n * Range Slider Thumb styling is set here\\n */\\n@mixin thumbStyle() {\\n    appearance: none;\\n    width: 1em;\\n    height: 1em;\\n    border-radius: 100%;\\n    border: 0;\\n    cursor: pointer;\\n    transition: box-shadow 0.2s;\\n    box-shadow: 0 0 0 0px rgba(0, 0, 0, 0);\\n\\n    &:hover {\\n        box-shadow: 0 0 0 0.5em var(--state-hover);\\n    }\\n}\\n\\n/*\\n * SVG icons colors\\n */\\n@mixin colorIcon($colors...) {\\n    @for $i from 1 through length($colors) {\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-fill {\\n            fill: nth($colors, $i);\\n        }\\n        /* postcss-bem-linter: ignore */\\n        .color#{$i}-stroke {\\n            stroke: nth($colors, $i);\\n        }\\n    }\\n}\\n\\n/*\\n * Bar Spinner Animation\\n * @param $count    - number of bars\\n * @param $duration - duration of animation\\n * @param $phase    - each bar phase change delay\\n * Usage example:\\n   @include createBarspinnerAnimation(5, 1.2s, 0,1);\\n */\\n@mixin createBarspinnerAnimation($count, $duration, $phase) {\\n    animation: sk-stretchdelay $duration infinite ease-in-out;\\n\\n    @for $i from 1 through $count {\\n        &--#{$i} {\\n            animation-delay: -$duration + (($i - 1) * $phase);\\n        }\\n    }\\n}\\n\\n/*\\n * Tooltip colors\\n * @param $color - color property\\n * Usage example:\\n   @include tooltipColor($COLOR_RED);\\n */\\n@mixin tooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n * Convert Tooltip colors\\n * @param $color - css color property\\n * Usage example:\\n   @include convertTooltipColor(var(--status-default));\\n */\\n@mixin convertTooltipColor($color) {\\n    &:before {\\n        background: $color;\\n    }\\n    &:after,\\n    &[data-tooltip-pos='top']:after {\\n        border-top-color: $color;\\n    }\\n    &[data-tooltip-pos='right']:after {\\n        border-top-color: transparent;\\n        border-right-color: $color;\\n    }\\n    &[data-tooltip-pos='left']:after {\\n        border-top-color: transparent;\\n        border-left-color: $color;\\n    }\\n    &[data-tooltip-pos='bottom']:after {\\n        border-top-color: transparent;\\n        border-bottom-color: $color;\\n    }\\n}\\n\\n/*\\n    Constants\\n*/\\n$FONT_STACK: 'IBM Plex Sans', sans-serif;\\n$BASE_FONT_SIZE: 10px;\\n\\n/*\\n    Variables\\n*/\\n$FONT_SIZES: (\\n    'xheading' 3.2rem,\\n    'heading' 3rem,\\n    'large' 2.8rem,\\n    'title' 1.6rem,\\n    'paragraph' 1.4rem,\\n    'small' 1.2rem,\\n    'xsmall' 1rem,\\n    'xxsmall' 0.8rem,\\n    'xxxsmall' 0.6rem\\n);\\n\\n$FONT_COLORS: (\\n    'active' var(--text-colored-background),\\n    'prominent' var(--text-prominent),\\n    'black' var(--text-general),\\n    'grey' var(--text-less-prominent),\\n    'disabled' var(--text-disabled),\\n    'green' var(--text-profit-success),\\n    'red' var(--text-loss-danger)\\n);\\n\\n$FONT_WEIGHTS: ('bold' 700, 'semibold' 500, 'normal' 400, 'light' 300);\\n\\n$TEXT_ALIGN: ('center' center, 'left' left, 'right' right);\\n\\n$LINEHEIGHTS: (\\n    'large': 1.75,\\n    'medium': 1.5,\\n    'small': 1.25,\\n    'xsmall': 1.4,\\n);\\n\\n/*\\n    List of all typefaces variables in the format: --$FONT_SIZES-$TEXT_ALIGN-$FONT_WEIGHTS-COLORS.\\n    See $FONT_SIZES, $TEXT_ALIGN, $FONT_WEIGHTS, $COLORS maps above for references.\\n    Variables name example: --title-center-semibold-red\\n */\\n$TYPEFACES_LIST: generate-typefaces();\\n\\n/*\\n    to use styles without modifier class on .inline-icon\\n    use @extend\\n\\n    e.g. style icon on parent hover:\\n        a:hover .inline-icon {\\n            @extend %inline-icon-active;\\n        }\\n*/\\n\\n%inline-icon {\\n    @include colorIcon(var(--text-general), none);\\n\\n    &.active,\\n    &-active {\\n        @include colorIcon(var(--text-prominent), none);\\n    }\\n    &.disabled,\\n    &-disabled {\\n        @include colorIcon(var(--text-disabled), none);\\n    }\\n    &.white,\\n    &-white {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.border_hover_color,\\n    &-border_hover_color {\\n        @include colorIcon(var(--text-prominent));\\n    }\\n    &.secondary,\\n    &-secondary {\\n        @include colorIcon(var(--text-less-prominent));\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$mobile-width: 320px;\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-down {\\n    @media (max-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet-up {\\n    @media (min-width: #{$tablet-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-up {\\n    @media (min-width: #{$mobile-width}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1}) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-landscape {\\n    @media only screen and (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1}) and (orientation: landscape) {\\n        @content;\\n    }\\n}\\n\\n@mixin touch-device {\\n    // add css interaction media query to detect touch devices\\n    // refer to: https://caniuse.com/#feat=css-media-interaction\\n    @media (pointer: coarse) {\\n        @content;\\n    }\\n}\\n\\n@mixin mobile-tablet-mix {\\n    @media (min-width: #{$mobile-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n/**\\n * Define Breakpoints here.\\n */\\n$tablet-width: 768px;\\n$desktop-width: 1024px;\\n\\n@mixin mobile {\\n    @media (max-width: #{$tablet-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin tablet {\\n    @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {\\n        @content;\\n    }\\n}\\n\\n@mixin desktop {\\n    @media (min-width: #{$desktop-width}) {\\n        @content;\\n    }\\n}\\n\\n@import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;1,100;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');\\n\\nbody .wallets-app {\\n    font-family: 'IBM Plex Sans' sans-serif;\\n    font-size: 1rem;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var map = {\n\t\"./af\": 4749,\n\t\"./af.js\": 4749,\n\t\"./ar\": 86161,\n\t\"./ar-dz\": 20815,\n\t\"./ar-dz.js\": 20815,\n\t\"./ar-kw\": 48261,\n\t\"./ar-kw.js\": 48261,\n\t\"./ar-ly\": 36264,\n\t\"./ar-ly.js\": 36264,\n\t\"./ar-ma\": 23501,\n\t\"./ar-ma.js\": 23501,\n\t\"./ar-sa\": 59344,\n\t\"./ar-sa.js\": 59344,\n\t\"./ar-tn\": 3182,\n\t\"./ar-tn.js\": 3182,\n\t\"./ar.js\": 86161,\n\t\"./az\": 32381,\n\t\"./az.js\": 32381,\n\t\"./be\": 1868,\n\t\"./be.js\": 1868,\n\t\"./bg\": 56153,\n\t\"./bg.js\": 56153,\n\t\"./bm\": 8847,\n\t\"./bm.js\": 8847,\n\t\"./bn\": 37311,\n\t\"./bn-bd\": 91703,\n\t\"./bn-bd.js\": 91703,\n\t\"./bn.js\": 37311,\n\t\"./bo\": 14436,\n\t\"./bo.js\": 14436,\n\t\"./br\": 1166,\n\t\"./br.js\": 1166,\n\t\"./bs\": 61748,\n\t\"./bs.js\": 61748,\n\t\"./ca\": 20369,\n\t\"./ca.js\": 20369,\n\t\"./cs\": 88341,\n\t\"./cs.js\": 88341,\n\t\"./cv\": 60443,\n\t\"./cv.js\": 60443,\n\t\"./cy\": 91871,\n\t\"./cy.js\": 91871,\n\t\"./da\": 60715,\n\t\"./da.js\": 60715,\n\t\"./de\": 77569,\n\t\"./de-at\": 45939,\n\t\"./de-at.js\": 45939,\n\t\"./de-ch\": 48234,\n\t\"./de-ch.js\": 48234,\n\t\"./de.js\": 77569,\n\t\"./dv\": 80063,\n\t\"./dv.js\": 80063,\n\t\"./el\": 62553,\n\t\"./el.js\": 62553,\n\t\"./en-au\": 76992,\n\t\"./en-au.js\": 76992,\n\t\"./en-ca\": 90517,\n\t\"./en-ca.js\": 90517,\n\t\"./en-gb\": 29209,\n\t\"./en-gb.js\": 29209,\n\t\"./en-ie\": 36602,\n\t\"./en-ie.js\": 36602,\n\t\"./en-il\": 14342,\n\t\"./en-il.js\": 14342,\n\t\"./en-in\": 57692,\n\t\"./en-in.js\": 57692,\n\t\"./en-nz\": 27654,\n\t\"./en-nz.js\": 27654,\n\t\"./en-sg\": 70943,\n\t\"./en-sg.js\": 70943,\n\t\"./eo\": 31315,\n\t\"./eo.js\": 31315,\n\t\"./es\": 8023,\n\t\"./es-do\": 54536,\n\t\"./es-do.js\": 54536,\n\t\"./es-mx\": 36937,\n\t\"./es-mx.js\": 36937,\n\t\"./es-us\": 96740,\n\t\"./es-us.js\": 96740,\n\t\"./es.js\": 8023,\n\t\"./et\": 56443,\n\t\"./et.js\": 56443,\n\t\"./eu\": 99868,\n\t\"./eu.js\": 99868,\n\t\"./fa\": 30053,\n\t\"./fa.js\": 30053,\n\t\"./fi\": 44818,\n\t\"./fi.js\": 44818,\n\t\"./fil\": 32590,\n\t\"./fil.js\": 32590,\n\t\"./fo\": 20354,\n\t\"./fo.js\": 20354,\n\t\"./fr\": 26606,\n\t\"./fr-ca\": 37628,\n\t\"./fr-ca.js\": 37628,\n\t\"./fr-ch\": 33796,\n\t\"./fr-ch.js\": 33796,\n\t\"./fr.js\": 26606,\n\t\"./fy\": 7376,\n\t\"./fy.js\": 7376,\n\t\"./ga\": 89123,\n\t\"./ga.js\": 89123,\n\t\"./gd\": 87524,\n\t\"./gd.js\": 87524,\n\t\"./gl\": 23094,\n\t\"./gl.js\": 23094,\n\t\"./gom-deva\": 83531,\n\t\"./gom-deva.js\": 83531,\n\t\"./gom-latn\": 16740,\n\t\"./gom-latn.js\": 16740,\n\t\"./gu\": 56549,\n\t\"./gu.js\": 56549,\n\t\"./he\": 32875,\n\t\"./he.js\": 32875,\n\t\"./hi\": 44794,\n\t\"./hi.js\": 44794,\n\t\"./hr\": 38906,\n\t\"./hr.js\": 38906,\n\t\"./hu\": 61034,\n\t\"./hu.js\": 61034,\n\t\"./hy-am\": 96450,\n\t\"./hy-am.js\": 96450,\n\t\"./id\": 51109,\n\t\"./id.js\": 51109,\n\t\"./is\": 41247,\n\t\"./is.js\": 41247,\n\t\"./it\": 37350,\n\t\"./it-ch\": 68825,\n\t\"./it-ch.js\": 68825,\n\t\"./it.js\": 37350,\n\t\"./ja\": 97805,\n\t\"./ja.js\": 97805,\n\t\"./jv\": 8462,\n\t\"./jv.js\": 8462,\n\t\"./ka\": 20716,\n\t\"./ka.js\": 20716,\n\t\"./kk\": 34135,\n\t\"./kk.js\": 34135,\n\t\"./km\": 87600,\n\t\"./km.js\": 87600,\n\t\"./kn\": 75623,\n\t\"./kn.js\": 75623,\n\t\"./ko\": 84881,\n\t\"./ko.js\": 84881,\n\t\"./ku\": 46872,\n\t\"./ku.js\": 46872,\n\t\"./ky\": 29912,\n\t\"./ky.js\": 29912,\n\t\"./lb\": 66387,\n\t\"./lb.js\": 66387,\n\t\"./lo\": 9733,\n\t\"./lo.js\": 9733,\n\t\"./lt\": 66724,\n\t\"./lt.js\": 66724,\n\t\"./lv\": 99705,\n\t\"./lv.js\": 99705,\n\t\"./me\": 53972,\n\t\"./me.js\": 53972,\n\t\"./mi\": 52770,\n\t\"./mi.js\": 52770,\n\t\"./mk\": 45326,\n\t\"./mk.js\": 45326,\n\t\"./ml\": 50648,\n\t\"./ml.js\": 50648,\n\t\"./mn\": 37227,\n\t\"./mn.js\": 37227,\n\t\"./mr\": 62482,\n\t\"./mr.js\": 62482,\n\t\"./ms\": 33859,\n\t\"./ms-my\": 55543,\n\t\"./ms-my.js\": 55543,\n\t\"./ms.js\": 33859,\n\t\"./mt\": 10355,\n\t\"./mt.js\": 10355,\n\t\"./my\": 81980,\n\t\"./my.js\": 81980,\n\t\"./nb\": 23921,\n\t\"./nb.js\": 23921,\n\t\"./ne\": 46866,\n\t\"./ne.js\": 46866,\n\t\"./nl\": 66020,\n\t\"./nl-be\": 66455,\n\t\"./nl-be.js\": 66455,\n\t\"./nl.js\": 66020,\n\t\"./nn\": 43945,\n\t\"./nn.js\": 43945,\n\t\"./oc-lnc\": 36198,\n\t\"./oc-lnc.js\": 36198,\n\t\"./pa-in\": 40441,\n\t\"./pa-in.js\": 40441,\n\t\"./pl\": 61340,\n\t\"./pl.js\": 61340,\n\t\"./pt\": 28708,\n\t\"./pt-br\": 82041,\n\t\"./pt-br.js\": 82041,\n\t\"./pt.js\": 28708,\n\t\"./ro\": 43930,\n\t\"./ro.js\": 43930,\n\t\"./ru\": 5776,\n\t\"./ru.js\": 5776,\n\t\"./sd\": 55683,\n\t\"./sd.js\": 55683,\n\t\"./se\": 97447,\n\t\"./se.js\": 97447,\n\t\"./si\": 50965,\n\t\"./si.js\": 50965,\n\t\"./sk\": 32384,\n\t\"./sk.js\": 32384,\n\t\"./sl\": 1714,\n\t\"./sl.js\": 1714,\n\t\"./sq\": 56173,\n\t\"./sq.js\": 56173,\n\t\"./sr\": 94999,\n\t\"./sr-cyrl\": 44148,\n\t\"./sr-cyrl.js\": 44148,\n\t\"./sr.js\": 94999,\n\t\"./ss\": 5234,\n\t\"./ss.js\": 5234,\n\t\"./sv\": 92234,\n\t\"./sv.js\": 92234,\n\t\"./sw\": 16523,\n\t\"./sw.js\": 16523,\n\t\"./ta\": 88426,\n\t\"./ta.js\": 88426,\n\t\"./te\": 8430,\n\t\"./te.js\": 8430,\n\t\"./tet\": 97739,\n\t\"./tet.js\": 97739,\n\t\"./tg\": 80118,\n\t\"./tg.js\": 80118,\n\t\"./th\": 22054,\n\t\"./th.js\": 22054,\n\t\"./tk\": 88517,\n\t\"./tk.js\": 88517,\n\t\"./tl-ph\": 52953,\n\t\"./tl-ph.js\": 52953,\n\t\"./tlh\": 41920,\n\t\"./tlh.js\": 41920,\n\t\"./tr\": 38318,\n\t\"./tr.js\": 38318,\n\t\"./tzl\": 85742,\n\t\"./tzl.js\": 85742,\n\t\"./tzm\": 38830,\n\t\"./tzm-latn\": 54344,\n\t\"./tzm-latn.js\": 54344,\n\t\"./tzm.js\": 38830,\n\t\"./ug-cn\": 25892,\n\t\"./ug-cn.js\": 25892,\n\t\"./uk\": 4984,\n\t\"./uk.js\": 4984,\n\t\"./ur\": 90665,\n\t\"./ur.js\": 90665,\n\t\"./uz\": 51673,\n\t\"./uz-latn\": 53457,\n\t\"./uz-latn.js\": 53457,\n\t\"./uz.js\": 51673,\n\t\"./vi\": 55968,\n\t\"./vi.js\": 55968,\n\t\"./x-pseudo\": 92785,\n\t\"./x-pseudo.js\": 92785,\n\t\"./yo\": 33443,\n\t\"./yo.js\": 33443,\n\t\"./zh-cn\": 85206,\n\t\"./zh-cn.js\": 85206,\n\t\"./zh-hk\": 52258,\n\t\"./zh-hk.js\": 52258,\n\t\"./zh-mo\": 29759,\n\t\"./zh-mo.js\": 29759,\n\t\"./zh-tw\": 31730,\n\t\"./zh-tw.js\": 31730\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96616;","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AppContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Divider.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./InlineMessage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ModalStepWrapper.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ModalWrapper.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ProgressBar.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TabList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Tooltip.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletAlertMessage.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletButton.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletButtonGroup.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletClipboard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletText.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletTextField.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DerivAppsSection.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DerivAppsSuccessFooter.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DesktopWalletsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./FadedAnimatedList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Loader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./OptionsAndMultipliersListing.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TradingAppCardLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAccordionLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAddMoreLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsCarouselLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsDepositCryptoAddressLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsTransactionStatusLoader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TradingAccountCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletAddMoreCurrencyIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletCurrencyCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletGradientBackground.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardActions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardBadge.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardIBalance.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletListCardIDetails.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletMarketCurrencyIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletNoWalletFoundState.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletTourGuide.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAccordion.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsActionScreen.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAddMoreCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAddMoreCardBanner.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAddMoreCardContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsAddMoreCarousel.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsCarouselContent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletCashier.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletActionModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletCashierHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DepositCrypto.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DepositCryptoAddress.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DepositCryptoDisclaimers.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DepositCryptoTryFiatOnRamp.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DepositFiat.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ResetBalance.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionStatus.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CryptoTransaction.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Transactions.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsCompleted.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsCompletedRow.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsNoDataState.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsPending.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsPendingRow.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransactionsTable.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransferForm.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransferFormAccountCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransferFormAccountSelection.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransferFormDropdown.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./TransferFormInputField.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WithdrawalVerificationRequest.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WithdrawalVerificationSent.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CFDPlatformsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CTraderList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5PlatformsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./ModalTradeWrapper.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./OtherCFDPlatformsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AddedCTraderAccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AvailableCTraderAccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AddedMT5AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AvailableMT5AccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AddedDxtradeAccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./AvailableDxtradeAccountsList.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DxtradeEnterPasswordModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionModal.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CreatePassword.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DynamicLeverageMarketCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DynamicLeverageScreen.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DynamicLeverageTableColumnHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./DynamicLeverageTitle.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./EnterPassword.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./GetMoreMT5Accounts.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionCardBack.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionCardRow.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionCardTag.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./JurisdictionScreen.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5AccountType.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5AccountTypeCard.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeDetailsItem.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeLink.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./MT5TradeScreen.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./Success.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../node_modules/sass-loader/dist/cjs.js!../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./index.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./CashierModalRoute.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../../node_modules/sass-loader/dist/cjs.js!../../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./WalletsListingRoute.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[3].use[1]!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../../node_modules/resolve-url-loader/index.js??ruleSet[1].rules[3].use[3]!../../../../node_modules/sass-loader/dist/cjs.js!../../../../node_modules/sass-resources-loader/lib/loader.js??ruleSet[1].rules[3].use[5]!./fonts.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var map = {\n\t\"./ach.json\": [\n\t\t93210,\n\t\t813\n\t],\n\t\"./ar.json\": [\n\t\t50812,\n\t\t958\n\t],\n\t\"./bn.json\": [\n\t\t11864,\n\t\t418\n\t],\n\t\"./de.json\": [\n\t\t41929,\n\t\t901\n\t],\n\t\"./es.json\": [\n\t\t36868,\n\t\t367\n\t],\n\t\"./fr.json\": [\n\t\t26452,\n\t\t6\n\t],\n\t\"./id.json\": [\n\t\t37288,\n\t\t897\n\t],\n\t\"./it.json\": [\n\t\t9386,\n\t\t817\n\t],\n\t\"./ko.json\": [\n\t\t52611,\n\t\t377\n\t],\n\t\"./pl.json\": [\n\t\t71612,\n\t\t846\n\t],\n\t\"./pt.json\": [\n\t\t57212,\n\t\t340\n\t],\n\t\"./ru.json\": [\n\t\t60252,\n\t\t123\n\t],\n\t\"./si.json\": [\n\t\t95795,\n\t\t237\n\t],\n\t\"./th.json\": [\n\t\t5171,\n\t\t749\n\t],\n\t\"./tr.json\": [\n\t\t25845,\n\t\t395\n\t],\n\t\"./vi.json\": [\n\t\t49478,\n\t\t278\n\t],\n\t\"./zh_cn.json\": [\n\t\t92130,\n\t\t879\n\t],\n\t\"./zh_tw.json\": [\n\t\t23740,\n\t\t580\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 3 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 97569;\nmodule.exports = webpackAsyncContext;"],"names":["Localize","i18n_default_text","values","components","options","i18n","shouldUnescape","Trans","defaults","tOptions","propTypes","PropTypes","props","LANGUAGE_KEY","DEFAULT_LANGUAGE","ALL_LANGUAGES","Object","freeze","ACH","EN","ES","DE","FR","ID","IT","KO","PL","RU","TR","VI","ZH_CN","ZH_TW","TH","isStaging","test","window","location","hostname","isLocal","isLanguageAvailable","lang","exclude_languages","language_list","selected_language","toUpperCase","keys","getAllLanguages","filter","key","includes","reduce","obj","isProduction","initial_language","query_lang","URLSearchParams","search","get","local_storage_language","localStorage","getItem","query_lang_uppercase","setItem","getInitialLanguage","i18n_config","react","hashTransKey","defaultValue","crc32","useSuspense","lng","fallbackLng","ns","defaultNS","initReactI18next","init","getLanguage","withI18n","localize","string","toString","createContext","api","useContext","APIContext","send","useCallback","name","payload","response","error","subscribe","getQueryKeys","req_id","length","ordered_props","sort","a","b","localeCompare","JSON","stringify","prop","undefined","useAPI","initial_offset","offset","limit","_useInfiniteQuery","pageParam","getNextPageParam","_lastPage","pages","_useMutation","_mutate","mutate","rest","_useQuery","queryClient","ReactQueryClient","QueryClient","endpoint","app_id","wss","children","standalone","WS","useWS","active_connection","getSocketURL","getAppId","DerivAPI","DerivAPIBasic","connection","WebSocket","value","QueryClientProvider","client","data","parse","active_loginid","accounts","getAccountsFromLocalStorage","getActiveLoginIDFromLocalStorage","token","input","type","substring","locale","parts","toLocaleString","match","is_reverse","decimal","thousand","replaceAll","useQueryClient","invalidateQueries","Array","isArray","current_token","getActiveAuthTokenIDFromLocalStorage","invalidate","useInvalidateQuery","useQuery","authorize","enabled","Boolean","modified_authorize","useMemo","switchAccount","loginid","landing_company","company","modified_account_types","get_account_types","isSuccess","useAuthorize","account","refetchInterval","balance_data","modified_balance","balance","website_status_data","crypto_config_data","modified_currencies_config","website_status","currencies_config","website_status_currencies_config","map","currency","currency_config","is_crypto","is_fiat","is_AUD","is_USD","is_EUR","is_GBP","is_BTC","is_ETH","is_LTC","is_DAI","is_IDK","is_PAX","is_USB","is_USDT","is_TUSD","is_BUSD","is_EURS","is_eUSDT","is_tUSDT","is_USDC","is_USDK","code","display_code","modified_crypto_config","crypto_config","transformed_currencies_config","previous","current","getConfig","authorize_data","useBalance","useCurrencyConfig","modified_accounts","account_list","created_at","Date","excluded_until","is_active","is_virtual","is_disabled","is_trading","account_category","is_wallet","modified_accounts_with_balance","display_balance","Intl","NumberFormat","preferred_language","minimumFractionDigits","fractional_digits","maximumFractionDigits","minimumIntegerDigits","format","useAccountsList","account_list_data","filtered_accounts","wallet","wallet_currency_type","dtrade_loginid","linked_to","find","platform","landing_company_name","replace","is_malta_wallet","useWalletAccountsList","useMutation","onSuccess","mutate_rest","update","modified_settings","get_settings","mutation","settings_data","useSettings","country_code","modified_landing_company","landing_company_data","useLandingCompany","useAccountTypes","financial_company","shortcode","account_types_data","modified_account_types_data","market_type_to_leverage_mapper","gaming","financial","all","mt5_available_accounts","modified_mt5_available_accounts","trading_platform_available_accounts","market_type","leverage","useAllAvailableAccounts","account_type_data","added_wallets","modified_available_wallets","crypto","doughflow","crypto_currencies","currencies","fiat_currencies","available_currencies","non_virtual_wallets","modified_wallets","is_added","available_wallets","some","getConfigIsCrypto","a_config","useActiveWalletAccount","mt5_accounts","mt5_accounts_rest","modified_mt5_accounts","displayBalanceFormat","mt5_login_list","login","linked","display_login","dxtrade_accounts","modified_dxtrade_accounts","trading_platform_accounts","ctrader_accounts","modified_ctrader_accounts","id","account_id","cashier_withdrawal_cancel","iframe_url","cashier","provider","modified_data","mt5_new_account","new_account_real","useState","isLoading","setIsLoading","isSubscribed","setSubscribed","setError","setData","subscriber","useRef","_subscribe","e","unsubscribe","useEffect","useSubscription","transactions","setTransactions","resetData","old_transactions","new_transactions","cashier_payments","updated_transactions","forEach","new_transaction","index","findIndex","old_transaction","push","modified_transactions","transaction","formatted_transaction_hash","transaction_hash","getTruncatedString","formatted_address_hash","address_hash","formatted_confirmations","status_code","confirmations","is_deposit","transaction_type","is_withdrawal","submit_date","last_transaction","deposit_address","deposit","address","dynamic_leverages","title","description","from","to","all_available_mt5_accounts","useAvailableMT5Accounts","useMT5AccountsList","available_account","created_account","landing_company_short","filtered_data","added_accounts","filtered_non_added_accounts","acc","existing_account","acc_account","added_account","isFetching","setFilter","useInfiniteQuery","lastPage","statement","count","action_type","fetchNextPage","remove","flatten_data","flatMap","page","width","useWindowSize","isDesktop","isMobile","isTablet","ModalContext","useModal","context","Error","modalRef","content","setContent","modalState","useDevice","customRootRef","setCustomRootRef","rootRef","document","getElementById","rootResponsiveRef","hide","useOnClickOutside","modalRootRef","Provider","isOpen","setModalState","newModalState","show","ModalContent","createPortal","ref","color","margin","variant","className","style","borderColor","styles","xmlns","height","fill","d","typeIconMapper","announcement","fillRule","information","warning","Warning","message","size","Icon","iconSize","fontSize","lg","md","sm","xs","align","as","fontStyle","lineHeight","weight","textClassNames","classNames","Tag","renderFooter","shouldFixedFooter","shouldHideHeader","hasRenderFooter","fixedFooter","onClick","hideCloseButton","activeIndex","indexes","isTransition","setActiveIndex","idx","currentIndex","barClassname","TabsContext","useTabs","activeTabIndex","setActiveTabIndex","TabList","list","tab","i","Children","child","alignment","isVisible","disabled","icon","isFullWidth","rounded","text","isContained","isOutlined","isGhost","hasIcon","hasText","buttonClassNames","buttonFontColor","isFlex","isVertical","x","rx","clipRule","timeoutClipboard","textCopy","copy","useCopyToClipboard","isCopied","setIsCopied","hoverRef","isHovered","useHover","clearTimeout","event","setTimeout","stopPropagation","reactNodeToString","reactNode","isValidElement","label","listHeight","onSelect","items","setItems","shouldFilterList","setShouldFilterList","clearFilter","useCombobox","itemToString","item","onInputValueChange","inputValue","toLowerCase","onIsOpenChange","onSelectedItemChange","selectedItem","getInputProps","getItemProps","getLabelProps","getMenuProps","getToggleButtonProps","onKeyUp","placeholder","readOnly","htmlFor","refresh","actionButtonsOptions","action","isPrimary","currencyDisplayCode","useCancelCryptoTransaction","cancelTransaction","statusName","is_valid_to_cancel","amount","submitDateDisplay","href","address_url","transaction_url","confirmationDisplay","recentTransactions","transactionType","history","useHistory","filteredTransactions","el","slice","moment","utc","CONFIRMED","ERROR","PENDING","CANCELLED","LOCKED","PERFORMING_BLOCKCHAIN_TXN","PROCESSING","REJECTED","REVERTED","REVERTING","SENT","VERIFIED","transactionDetailsMapper","useCryptoTransactions","transactionDisplayMapper","useRecentTransactions","recentTransactionsError","isTransactionsLoading","refreshRecentTransactions","activeWalletAccountError","isActiveWalletAccountLoading","refetch","isError","useDepositCryptoAddress","depositCryptoAddress","isAuthorizeSuccess","infoMessage","popoverAlignment","successMessage","cryptoCurrencyToNetworkMapper","BTC","ETH","eUSDT","LTC","tUSDT","USDC","UST","minimum_deposit","useCashierFiatAddress","iframeUrl","depositError","WalletsErrorScreen","onLoad","src","display","actionText","actionVariant","onAction","clipPath","mixBlendMode","isResetBalanceSuccess","viewBox","typeToIconMapper","cx","cy","r","Demo","opacity","EUR","Tether","GBP","USD","typeToWidthMapper","rectangleIcon","desktop","mobile","xl","roundedIcon","typesWithRoundedIcon","iconType","isRoundedIcon","bodyClassName","device","hasShine","isDemo","theme","displayCode","formattedAmount","balance_after","x1","y1","x2","y2","gradientUnits","stopColor","columns","fetchMore","groupBy","rowGroupRender","rowRender","table","useReactTable","getCoreRowModel","getGroupedRowModel","state","grouping","tableContainerRef","onScroll","target","getRowModel","rows","rowGroup","original","subRows","row","useTransactions","fetchMoreOnBottomReached","containerRefElement","clientHeight","scrollHeight","scrollTop","accessorFn","transaction_time","accessorKey","header","statusCodeMapper","withdrawal","formattedStatus","filtersMapper","completed","transfer","pending","isPendingActive","setIsPendingActive","filterValue","setFilterValue","checked","onChange","c","formattedLabel","isInput","backgroundColor","modal","fieldName","initialAccount","selectedAccount","setSelectedAccount","setFieldValue","useFormikContext","handleSelect","initial","setValue","fractionDigits","withSign","oldValue","newValue","inputs","split","left","right","hasRight","isNaN","Number","newLeft","hasDecimal","startsWith","newRight","isPasting","useInputDecimalFormatter","onChangeDecimal","formattedValue","unformatted","unFormatLocaleString","shifted","Math","fround","toFixed","unShifted","unformattedFraction","onPaste","useInputATMFormatter","activeAccount","useTransferBetweenAccounts","initialValues","amountReceive","amountSend","fromAccount","toAccount","onSubmit","account_from","account_to","handleSubmit","sendEmail","counter","showResend","setShowResend","emailSent","setEmailSent","useVerifyEmail","useCountdown","countStart","intervalMs","resetCountdown","startCountdown","handleSendEmail","email","verify_email","isDeposit","useRouteMatch","isResetBalance","isTransfer","isTransactions","isWithdraw","realAccountTabs","path","virtualAccountTabs","hideWalletDetails","activeWallet","activeTabRef","useLocation","tabs","scrollIntoView","behavior","block","inline","pathname","isActiveTab","isContentScrolled","setIsContentScrolled","walletAccountsList","fiatAccount","account_type","cTraderAccounts","useCtraderAccountsList","leading","trailing","MarketTypeDetails","synthetic","PlatformToTitleMapper","ctrader","derivez","dxtrade","mt5","onPasswordChange","onPrimaryClick","password","marketType","onSecondaryClick","setPassword","useCreateOtherCFDAccount","useDxtradeAccountsList","dxtradeAccount","dxtradeAccountListSuccess","accountType","successDescription","dxtradeBalance","displayBalance","renderButton","DynamicLeverageContext","isDynamicLeverageVisible","toggleDynamicLeverage","useDynamicLeverageModalState","DynamicLeverageTableColumnHeader","subtitle","DynamicLeverageMarketCard","entries","columnKey","dynamicLeverages","useDynamicLeverage","market","verificationIconsMapper","documentNumber","nameAndAddress","notApplicable","selfie","verificationStatusIconsMapper","verificationFailedStatusIcon","verificationPendingStatusIcon","verificationSuccessStatusIcon","setIsFlipped","verificationDocs","verificationContents","requiredVerificationDocs","identityNumber","shortDescription","statusReferences","verificationDocument","statusReference","renderTag","tag","isSelected","jurisdiction","isFlipped","bvi","contents","titleIndicators","displayText","displayTextSkinColor","clickableDescription","isOverHeaderAvailable","labuan","overHeader","maltainvest","svg","vanuatu","parseDescription","doc","selectedJurisdiction","setSelectedJurisdiction","jurisdictions","clickedJurisdiction","cursor","setIsDynamicLeverageVisible","jurisdictionTitle","modalFooter","selectedMarketType","setSelectedMarketType","onMarketTypeSelect","useCreateMT5Account","createMT5AccountLoading","useTradingPlatformPasswordChange","tradingPlatformPasswordChangeLoading","tradingPasswordChange","mt5Accounts","availableMT5Accounts","settings","hasMT5Account","marketTypeTitle","new_password","address_line_1","city","address_city","country","mainPassword","mt5_account_type","sub_account_category","first_name","phone","address_state","zipCode","address_postcode","marketTypeDetailsMapper","sortedMarketTypeEntries","keyA","keyB","order","indexOf","marketTypeToIconMapper","SwapFreeMT5Icon","FinancialMT5Icon","DerivedMT5Icon","marketTypeToPlatformIconMapper","CTraderIcon","DerivXIcon","MarketTypeIcon","DerivAppIcon","landingCompanyName","isMarketTypeAll","isPlatformValid","platformTitlePrefix","ctraderMapper","onClickHandler","hasCTraderAccount","_","derivComUrl","supportedDomains","domainUrlInitial","domainUrl","derivUrls","BINARYBOT_PRODUCTION","BINARYBOT_STAGING","DERIV_APP_PRODUCTION","DERIV_APP_STAGING","DERIV_COM_PRODUCTION","DERIV_COM_PRODUCTION_EU","DERIV_COM_STAGING","DERIV_HOST_NAME","SMARTTRADER_PRODUCTION","SMARTTRADER_STAGING","normalizePath","getlangFromUrl","queryString","getUrlSmartTrader","isStagingDerivApp","getPlatformFromUrl","urlLang","i18NLanguage","baseLink","getUrlBinaryBot","isLanguageRequired","domain","resolutions","isDerivApp","isTestLink","getStaticUrl","isDocument","host","MT5AccountIcon","open","useSortedMT5Accounts","isFetchedAfterMount","hasDxtradeAccount","rel","optionsAndMultipliersContent","redirect","isExternal","DerivAppsSuccessFooter","DerivAppsGetAccount","isMaltaWallet","useCreateNewRealAccount","isAccountCreationSuccess","createNewRealAccount","countryCode","dateOfBirth","date_of_birth","firstName","lastName","last_name","toLocaleUpperCase","openSuccessModal","toMoment","residence","DerivAppsTradingAccount","tradingAccountLoginId","LinkTitle","persist","ShowOpenButton","getWalletHeaderButtons","handleAction","buttons","filteredButtons","button","orderForDemo","isActive","badge","onToggle","renderHeader","accordionRef","timeout","scrollMarginTop","wallets","isAuthorizeLoading","isCurrencyConfigLoading","xmlnsXlink","xlinkHref","overflow","stroke","strokeWidth","strokeLinecap","strokeMiterlimit","strokeLinejoin","aud","btc","preserveAspectRatio","eth","eur","eusdt","TetherIcon","gbp","ltc","tusdt","usd","usdc","ust","CurrencyIcon","isAdded","walletDescriptionMapper","AUD","PaymentAgent","useAvailableWallets","availableWallets","useEmblaCarousel","containScroll","walletsAddMoreEmblaRef","walletsAddMoreEmblaAPI","isHover","reInit","watchDrag","canScrollPrev","scrollPrev","canScrollNext","scrollNext","skipSnaps","walletsCarouselEmblaRef","walletsCarouselEmblaApi","activeWalletIndex","selectedScrollSnap","progressBarActiveIndex","setProgressBarActiveIndex","scrollTo","on","scrollSnapIndex","amountOfSteps","transform","reload","tourStepConfig","disableBeacon","disableOverlayClose","TooltipComponent","backProps","closeProps","continuous","isLastStep","primaryProps","step","tooltipProps","isStarted","setIsStarted","callback","disableCloseOnEsc","disableScrolling","floaterProps","disableAnimation","run","steps","tooltipComponent","prefix","walletAccounts","Switch","Route","component","CashierModalRoute","WalletsListingRoute","WalletNoWalletFoundState","___CSS_LOADER_EXPORT___","module","___CSS_LOADER_URL_REPLACEMENT_0___","webpackContext","req","webpackContextResolve","__webpack_require__","o","resolve","exports","__esModule","default","locals","webpackAsyncContext","Promise","then","ids","t"],"sourceRoot":""}